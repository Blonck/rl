Search.setIndex({"docnames": ["auto_examples/index", "index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedTensorDict", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.NdBoundedTensorSpec", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.SubTensorDict", "reference/generated/torchrl.data.TensorDict", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.data.utils.expand_as_right", "reference/generated/torchrl.data.utils.expand_right", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.Actor", "reference/generated/torchrl.modules.ActorCriticOperator", "reference/generated/torchrl.modules.ActorCriticWrapper", "reference/generated/torchrl.modules.ActorValueOperator", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueActor", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.ProbabilisticActor", "reference/generated/torchrl.modules.ProbabilisticTensorDictModule", "reference/generated/torchrl.modules.QValueActor", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TensorDictModule", "reference/generated/torchrl.modules.TensorDictModuleWrapper", "reference/generated/torchrl.modules.TensorDictSequential", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.ValueOperator", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBuffer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils"], "filenames": ["auto_examples/index.rst", "index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorDict.rst", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.NdBoundedTensorSpec.rst", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.SubTensorDict.rst", "reference/generated/torchrl.data.TensorDict.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.data.utils.expand_as_right.rst", "reference/generated/torchrl.data.utils.expand_right.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.Actor.rst", "reference/generated/torchrl.modules.ActorCriticOperator.rst", "reference/generated/torchrl.modules.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.ActorValueOperator.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.ProbabilisticActor.rst", "reference/generated/torchrl.modules.ProbabilisticTensorDictModule.rst", "reference/generated/torchrl.modules.QValueActor.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TensorDictModule.rst", "reference/generated/torchrl.modules.TensorDictModuleWrapper.rst", "reference/generated/torchrl.modules.TensorDictSequential.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.ValueOperator.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBuffer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst"], "titles": ["Example gallery", "Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips", "Useful resources", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedTensorDict", "MultOneHotDiscreteTensorSpec", "MultiStep", "NdBoundedTensorSpec", "NdUnboundedContinuousTensorSpec", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "SubTensorDict", "TensorDict", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "ReplayBuffer", "TensorDictReplayBuffer", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "expand_as_right", "expand_right", "EnvBase", "GymLikeEnv", "ModelBasedEnvBase", "ParallelEnv", "SerialEnv", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DoubleToFloat", "FiniteTensorDictCheck", "FlattenObservation", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "TensorDictPrimer", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPTransform", "VecNorm", "gSDENoise", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DistributionalQValueActor", "DreamerActor", "DuelingCnnDQNet", "LSTMNet", "MLP", "MPCPlannerBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "ProbabilisticActor", "ProbabilisticTensorDictModule", "QValueActor", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TensorDictModule", "TensorDictModuleWrapper", "TensorDictSequential", "TruncatedNormal", "ValueOperator", "reset_noise", "DistributionalQValueHook", "QValueHook", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "Recorder", "ReplayBuffer", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package"], "terms": {"below": [0, 7, 11, 12, 13, 14, 22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 91, 102, 117, 118, 121], "i": [0, 1, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 64, 66, 67, 70, 73, 74, 75, 76, 77, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 104, 105, 109, 110, 113, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 139, 140, 141, 142, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 158, 160, 161, 164, 169, 171, 174, 176, 180, 182], "download": [0, 7, 70, 79], "all": [0, 1, 11, 12, 13, 14, 20, 22, 28, 29, 47, 48, 49, 50, 51, 61, 63, 67, 70, 74, 76, 77, 78, 79, 80, 83, 84, 85, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 158, 160, 178, 179, 180, 182], "python": [0, 1, 6, 7, 118], "sourc": [0, 1, 7, 20, 28, 29, 158], "code": [0, 1, 7, 70, 120], "auto_examples_python": 0, "zip": 0, "jupyt": 0, "notebook": 0, "auto_examples_jupyt": 0, "gener": [0, 7, 13, 20, 28, 29, 34, 38, 49, 86, 96, 108, 109, 110, 122, 133, 140, 143, 144, 147, 158], "sphinx": 0, "an": [1, 3, 4, 5, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 60, 63, 66, 67, 70, 71, 75, 76, 77, 80, 87, 88, 89, 91, 92, 93, 94, 95, 101, 102, 104, 107, 110, 114, 115, 126, 129, 131, 132, 133, 134, 140, 141, 142, 154, 155, 158, 161, 164, 177, 178, 179, 180, 182], "open": [1, 5, 7, 10], "reinforc": [1, 9, 58, 92, 93, 94, 95, 124, 129, 130, 134, 135, 164], "learn": [1, 7, 9, 22, 58, 92, 93, 94, 95, 105, 124, 129, 130, 133, 134, 135, 164], "rl": [1, 3, 8, 11, 12, 13, 14, 49, 86, 105, 109, 122, 132, 150, 182], "librari": [1, 7, 9, 83, 182, 186], "pytorch": [1, 75, 158], "It": [1, 7, 22, 30, 47, 48, 49, 50, 51, 77, 92, 94, 99, 110, 112, 113, 126, 129, 131, 132, 133, 134, 139, 154, 171, 182], "provid": [1, 3, 4, 9, 13, 20, 22, 26, 27, 28, 29, 30, 34, 45, 47, 48, 49, 50, 51, 59, 66, 70, 74, 77, 79, 80, 86, 91, 101, 102, 103, 109, 124, 139, 150, 155, 161, 169, 171, 174, 176, 182], "first": [1, 7, 10, 11, 12, 13, 14, 20, 28, 29, 48, 59, 64, 70, 75, 77, 102, 104, 107, 110, 118, 157], "low": 1, "high": [1, 3, 9, 140, 143, 144, 147], "level": [1, 3, 131], "abstract": [1, 17, 18, 19, 23, 24, 32, 33, 44, 47, 68, 103], "ar": [1, 3, 7, 8, 9, 11, 12, 13, 14, 20, 22, 25, 28, 29, 39, 40, 41, 42, 47, 48, 49, 50, 51, 61, 62, 63, 70, 74, 76, 77, 79, 80, 85, 90, 95, 96, 101, 105, 108, 110, 113, 118, 119, 120, 126, 129, 131, 132, 133, 134, 136, 139, 140, 141, 142, 176, 180, 186], "intend": [1, 7, 11, 12, 13, 14], "effici": [1, 3, 105], "modular": [1, 120], "properli": 1, "test": [1, 5, 101, 154, 176], "The": [1, 3, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 42, 47, 48, 50, 51, 61, 70, 73, 74, 77, 79, 86, 87, 90, 92, 93, 94, 95, 101, 103, 105, 109, 110, 112, 113, 118, 120, 122, 126, 127, 128, 131, 134, 139, 150, 176, 178, 179], "aim": [1, 4, 7, 70, 79, 102, 160, 182], "support": [1, 3, 20, 28, 29, 42, 76, 83, 98, 110, 118, 120, 124, 129], "research": [1, 7, 9], "most": [1, 4, 7, 22], "written": [1, 30, 39, 47, 48, 50, 51, 110, 118, 126, 131, 132, 139], "highli": 1, "wai": [1, 20, 28, 29, 132], "can": [1, 3, 6, 7, 8, 10, 11, 12, 13, 14, 18, 19, 20, 22, 28, 29, 30, 32, 47, 48, 50, 51, 58, 61, 66, 70, 74, 76, 77, 79, 80, 90, 103, 105, 110, 117, 118, 119, 120, 121, 126, 127, 128, 129, 131, 132, 133, 134, 139, 154, 169, 171, 174, 178, 179, 180, 182], "easili": [1, 7, 50, 51, 169, 171, 174], "swap": 1, "compon": [1, 39, 40, 41, 42, 124, 125, 126, 129, 131, 132, 133, 134, 158], "transform": [1, 20, 22, 28, 29, 48, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 92, 99, 110, 118, 120, 124, 125, 164, 166, 169, 171, 174, 180], "them": [1, 7, 20, 28, 29, 34, 35, 47, 48, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 131], "write": [1, 20, 22, 28, 29, 48, 69, 110, 118, 120, 127, 128, 133, 134, 139], "new": [1, 11, 12, 13, 14, 20, 22, 26, 28, 29, 30, 36, 47, 48, 50, 51, 76, 80, 85, 118, 120, 126, 128, 129, 131, 132, 133, 134], "ones": [1, 18, 20, 22, 28, 29, 47, 48, 50, 51, 59, 61, 62, 67, 70, 74, 77, 79, 118], "littl": 1, "effort": 1, "thi": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 20, 22, 25, 28, 29, 30, 35, 39, 40, 41, 42, 47, 48, 49, 50, 51, 58, 59, 61, 63, 70, 74, 76, 77, 78, 79, 80, 85, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 150, 152, 154, 158, 159, 160, 161, 169, 171, 174, 176, 180, 182], "repo": [1, 6, 182], "attempt": 1, "align": 1, "exist": [1, 20, 22, 28, 29, 47, 48, 50, 51, 59, 77, 161, 180], "ecosystem": 1, "ha": [1, 7, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 47, 48, 49, 50, 51, 74, 77, 110, 118, 120, 131], "dataset": [1, 26, 27, 30, 34, 80, 155], "pillar": 1, "environ": [1, 4, 8, 10, 11, 12, 13, 14, 22, 25, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 62, 66, 70, 76, 77, 80, 90, 101, 103, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 160, 161, 162, 163, 164, 166, 169, 171, 174, 176, 177, 178, 179, 180, 182], "model": [1, 9, 11, 12, 13, 14, 22, 47, 48, 49, 50, 51, 70, 79, 81, 87, 88, 89, 91, 102, 103, 110, 118, 132, 133, 134, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 182], "data": [1, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 86, 87, 88, 89, 90, 98, 101, 109, 110, 111, 118, 119, 120, 122, 124, 125, 127, 133, 134, 140, 141, 142, 150, 155, 158, 159, 162, 176, 178, 179, 180, 181], "util": [1, 11, 12, 13, 14, 15, 22, 45, 46, 47, 48, 50, 51, 70, 79, 82, 83, 84, 85, 91, 119, 176, 186], "e": [1, 3, 10, 11, 12, 13, 14, 20, 22, 25, 28, 29, 39, 40, 47, 48, 50, 51, 59, 61, 70, 74, 76, 77, 79, 85, 110, 117, 118, 121, 125, 139, 150, 160, 179], "g": [1, 3, 10, 22, 25, 28, 29, 47, 48, 50, 51, 59, 61, 70, 74, 76, 77, 79, 110, 117, 118, 121, 139, 145, 146, 148, 149, 179], "collector": [1, 11, 12, 13, 14, 15, 158, 159, 162, 163, 176, 178, 179, 181], "contain": [1, 7, 11, 12, 13, 14, 20, 22, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 42, 43, 44, 47, 48, 49, 50, 51, 61, 70, 74, 77, 79, 80, 85, 90, 91, 102, 118, 119, 126, 127, 128, 129, 131, 132, 133, 134, 139, 140, 141, 142, 150, 155, 160, 164, 166, 169, 171, 174, 176, 177, 178, 179, 180], "etc": [1, 3, 7, 22, 24, 29, 33, 47, 48, 50, 51, 77, 102], "have": [1, 6, 7, 11, 12, 14, 18, 20, 22, 28, 29, 42, 47, 48, 50, 51, 58, 66, 76, 77, 80, 91, 101, 102, 120, 126, 131, 132, 136, 150, 158], "few": [1, 3, 8, 150], "depend": [1, 7, 122, 132], "possibl": [1, 19, 20, 22, 25, 28, 29, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118, 154, 158], "standard": [1, 67, 80, 90, 99, 104, 105, 140, 141, 142], "numpi": [1, 13, 16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 75, 158], "common": [1, 20, 28, 29, 48, 50, 51, 87, 88, 89, 110, 176, 182], "openai": [1, 7, 54, 55], "gym": [1, 10, 48, 54, 55, 74, 80, 164, 166, 169, 171, 174, 176, 182], "onli": [1, 5, 7, 11, 12, 14, 20, 22, 28, 29, 30, 47, 48, 50, 51, 59, 61, 70, 74, 77, 79, 80, 101, 110, 118, 120, 161], "option": [1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 40, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 85, 86, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 117, 118, 120, 121, 122, 124, 125, 127, 128, 132, 133, 134, 139, 140, 141, 142, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 167, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180], "On": [1, 7], "end": [1, 22, 47, 48, 50, 51, 77, 91, 103, 143, 144, 145, 146, 147, 148, 149], "come": [1, 50, 51, 86, 87, 88, 89, 109, 122], "set": [1, 3, 4, 7, 9, 11, 12, 13, 14, 20, 22, 25, 28, 29, 42, 47, 48, 49, 50, 51, 59, 61, 70, 74, 77, 79, 82, 84, 118, 119, 150, 154, 163, 180, 182, 186], "re": [1, 8, 20, 22, 28, 29, 47, 48, 50, 51, 110], "usabl": 1, "function": [1, 10, 15, 20, 22, 28, 29, 39, 40, 41, 42, 47, 48, 50, 51, 70, 76, 77, 78, 79, 80, 87, 88, 89, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 106, 107, 108, 110, 112, 113, 115, 118, 119, 120, 121, 122, 126, 127, 128, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 164, 166, 169, 171, 174, 176], "cost": [1, 19], "return": [1, 3, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 101, 102, 103, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 139, 140, 141, 142, 145, 146, 148, 149, 155, 158, 160, 162, 164, 166, 169, 171, 174, 176, 177, 178, 179, 180], "process": [1, 3, 11, 12, 14, 50, 51, 80], "good": [1, 9], "runtim": [1, 22, 47, 48, 50, 51], "perform": [1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 32, 33, 47, 48, 50, 51, 66, 70, 76, 77, 78, 79, 90, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 132, 154, 158], "api": [1, 70, 79], "refer": [1, 7, 22, 47, 48, 50, 51, 77, 80, 90, 99, 106, 107, 112, 113, 124, 129, 132, 140, 143, 144, 147, 164], "packag": [1, 6, 181, 182], "helper": [1, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "replai": [1, 13, 26, 27, 30, 31, 34, 35, 36, 37, 38, 42, 43, 50, 51, 127, 128, 133, 134, 155, 158, 172, 176], "buffer": [1, 13, 22, 26, 27, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 61, 70, 74, 77, 79, 109, 110, 111, 118, 119, 120, 122, 124, 125, 127, 128, 133, 134, 140, 141, 142, 155, 158, 172, 176], "compos": [1, 22, 34, 37, 38, 43, 47, 48, 50, 51, 76, 77, 80, 164, 166, 169, 171, 174], "prototyp": [1, 9], "tensordict": [1, 11, 12, 13, 14, 15, 18, 19, 20, 22, 28, 30, 31, 35, 39, 40, 47, 48, 49, 50, 51, 58, 59, 61, 62, 63, 66, 67, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 90, 98, 101, 103, 109, 110, 111, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 139, 140, 141, 142, 150, 157, 158, 164, 166, 169, 171, 174], "tensorspec": [1, 16, 17, 18, 19, 21, 23, 24, 25, 33, 47, 49, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 86, 109, 110, 113, 118], "env": [1, 6, 7, 22, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 103, 118, 161, 162, 163, 164, 166, 169, 171, 174, 176, 178, 179, 180, 181], "envbas": [1, 11, 12, 13, 14, 48, 50, 51, 66, 76, 77, 80, 90, 103, 154, 161, 162, 163, 164, 166, 169, 171, 174, 176, 178, 179, 180], "gymlikeenv": 1, "serialenv": 1, "parallelenv": [1, 11, 12, 13, 14, 51, 177], "domain": [1, 3, 16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 74, 110, 118, 120], "specif": [1, 5, 30, 31, 35, 48, 158], "modul": [1, 10, 22, 47, 48, 49, 50, 51, 61, 70, 74, 76, 77, 78, 79, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 130, 133, 135, 137, 158, 165, 167, 168, 170, 173, 176, 181], "hook": [1, 22, 47, 48, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 115, 118, 119, 120, 124, 125, 152, 153, 154, 156, 158, 159], "explor": [1, 81, 82, 84, 105, 110, 118, 119, 154, 162, 163, 176], "planner": [1, 90], "distribut": [1, 4, 9, 26, 30, 90, 96, 97, 98, 99, 108, 110, 112, 113, 116, 117, 121, 124, 126, 129, 131, 132], "object": [1, 3, 4, 11, 12, 13, 14, 20, 22, 28, 29, 39, 40, 41, 42, 47, 48, 50, 51, 70, 76, 77, 80, 86, 87, 109, 110, 118, 119, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 161, 162, 163, 175, 176, 180, 181], "dqn": [1, 98, 111, 124, 128, 129, 130, 135, 166, 167], "ddpg": [1, 92, 93, 94, 95, 127, 130, 135, 164, 165], "sac": [1, 133, 134, 173, 174], "redq": [1, 133, 170, 171], "ppo": [1, 110, 126, 131, 132, 168, 169], "trainer": [1, 126, 129, 131, 132, 133, 134, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "builder": 1, "_util": [1, 10, 181], "implement_for": 1, "knowledg": 1, "base": [1, 9, 11, 12, 13, 14, 38, 44, 49, 87, 158, 169, 171, 174], "contribut": 1, "work": [1, 7, 8, 20, 22, 47, 48, 50, 51, 59, 70, 80, 91, 102, 158, 182], "version": [1, 10, 20, 22, 28, 29, 47, 48, 50, 51, 142], "habitat": [1, 182], "lab": [1, 52, 53, 182], "up": [1, 8, 9, 19, 182], "your": [1, 7, 8, 22, 47, 48, 50, 51, 80, 180, 182], "issu": [1, 5, 110, 118, 182], "about": [1, 182], "mujoco": [1, 6, 182], "instal": [1, 158, 182], "prerequisit": 1, "render": [1, 8, 154, 182], "bindindg": 1, "2": [1, 20, 21, 22, 28, 29, 47, 48, 50, 51, 59, 61, 70, 74, 77, 79, 80, 91, 92, 93, 94, 98, 100, 102, 118, 122, 124, 126, 127, 131, 133, 134, 139, 145, 146, 148, 149], "1": [1, 11, 12, 13, 14, 19, 20, 21, 22, 25, 28, 29, 47, 48, 49, 50, 51, 57, 59, 61, 62, 66, 70, 74, 75, 77, 79, 80, 87, 88, 89, 90, 91, 92, 93, 95, 100, 102, 104, 105, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 131, 132, 133, 134, 135, 139, 143, 144, 145, 146, 147, 148, 149, 150, 154, 156, 164, 166, 169, 171, 174, 176, 180, 182], "old": [1, 131], "bind": 1, "py": 1, "when": [1, 3, 5, 8, 11, 12, 13, 14, 20, 22, 26, 27, 28, 29, 30, 34, 39, 40, 41, 42, 47, 48, 50, 51, 61, 66, 70, 74, 76, 77, 79, 80, 84, 90, 102, 104, 110, 117, 118, 120, 126, 131, 132, 139, 155, 180, 182], "pro": [1, 7, 182], "tip": [1, 7, 182], "train": [1, 11, 12, 13, 14, 22, 47, 48, 50, 51, 70, 77, 79, 92, 94, 126, 129, 131, 132, 133, 134, 158, 159, 176], "cluster": [1, 6, 7, 182], "us": [1, 3, 7, 10, 11, 12, 13, 14, 18, 19, 20, 22, 26, 27, 28, 29, 30, 34, 35, 36, 47, 48, 49, 50, 51, 52, 59, 60, 70, 74, 75, 76, 77, 79, 80, 84, 85, 90, 91, 92, 93, 99, 102, 105, 110, 117, 118, 119, 120, 121, 124, 126, 127, 128, 129, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 147, 154, 155, 158, 159, 161, 162, 163, 164, 172, 176, 180, 182, 186], "resourc": [1, 182], "functorch": [1, 98, 109, 110, 111, 118, 119, 120, 122, 124, 125], "blog": 1, "websit": 1, "index": [1, 7, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 155], "search": 1, "page": [1, 7], "central": 3, "part": [3, 22, 47, 48, 50, 51, 110, 122, 150, 180], "off": [3, 110, 117, 118, 120, 121, 134, 154, 162], "polici": [3, 4, 11, 12, 13, 14, 47, 48, 49, 50, 51, 84, 85, 87, 88, 89, 105, 110, 118, 124, 125, 126, 127, 131, 132, 133, 134, 154, 159, 162, 163, 164, 166, 169, 176, 178, 179], "algorithm": [3, 9, 11, 12, 49, 132, 133, 150, 162, 169], "implement": [3, 9, 10, 22, 42, 47, 48, 50, 51, 80, 116, 117, 121, 132, 134, 169, 171, 174], "wide": 3, "we": [3, 5, 7, 9, 22, 47, 48, 50, 51, 70, 80, 90, 101, 120, 182], "also": [3, 8, 22, 30, 47, 48, 50, 51, 77, 113, 120, 127, 128], "pass": [3, 4, 13, 22, 30, 47, 48, 50, 51, 70, 76, 78, 79, 80, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 107, 110, 112, 113, 115, 118, 119, 120, 178, 179, 180], "across": [3, 80, 159], "becom": 3, "burdensom": 3, "task": [3, 9, 50, 51, 52, 70, 79], "design": [3, 22, 25, 47, 48, 50, 51, 77, 126, 129, 131, 132, 133, 134], "class": [3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 178, 179, 180], "instanc": [3, 7, 8, 11, 12, 13, 14, 20, 22, 28, 29, 32, 47, 48, 49, 50, 51, 53, 58, 70, 74, 76, 78, 79, 80, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 154, 161, 162, 163, 164, 166, 169, 171, 174, 176, 178, 179], "hard": [3, 7, 130], "actor": [3, 84, 87, 88, 89, 90, 92, 94, 98, 99, 109, 111, 124, 125, 126, 127, 131, 132, 133, 134, 164, 166, 169, 171, 174], "take": [3, 15, 47, 48, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 143, 144, 145, 146, 147, 148, 149, 150, 159], "arbitrari": [3, 20, 25, 28, 29, 50, 51], "number": [3, 8, 11, 12, 13, 14, 17, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 34, 36, 39, 40, 41, 47, 48, 49, 50, 51, 58, 66, 67, 73, 80, 90, 91, 96, 97, 99, 100, 102, 106, 107, 110, 112, 113, 116, 117, 118, 121, 133, 134, 150, 152, 154, 155, 158, 159, 160, 161, 178, 179, 180], "input": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 45, 47, 48, 49, 50, 51, 59, 61, 62, 70, 76, 78, 79, 85, 91, 92, 93, 94, 95, 101, 102, 104, 105, 110, 112, 113, 114, 115, 118, 119, 120, 126, 129, 131, 132, 133, 134, 139, 143, 144, 145, 146, 147, 148, 149, 160, 176], "simplifi": 3, "pack": 3, "togeth": [3, 11, 12, 13, 14, 20, 87, 88, 89], "bag": 3, "tensor": [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 59, 61, 64, 67, 70, 73, 74, 75, 76, 77, 79, 80, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 164, 166, 169, 171, 174], "dictionari": [3, 11, 12, 13, 14, 18, 20, 22, 28, 29, 47, 48, 50, 51, 77, 110, 178, 179, 180], "like": [3, 7, 22, 47, 48, 50, 51, 75, 133], "basic": [3, 49], "oper": [3, 4, 7, 11, 12, 14, 20, 22, 29, 47, 48, 50, 51, 76, 87, 88, 89, 118, 119, 124, 126, 127, 128, 129, 131, 132, 139, 140, 141, 142, 158, 164, 166, 171, 174], "facilit": [3, 7, 30, 69, 70, 79, 87, 88, 89], "manipul": [3, 70], "entir": 3, "batch": [3, 11, 12, 13, 14, 15, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 34, 35, 47, 48, 49, 50, 51, 77, 96, 97, 101, 104, 108, 110, 116, 118, 126, 129, 131, 132, 133, 134, 143, 144, 145, 146, 147, 148, 149, 150, 155, 157, 158, 159, 178, 179, 180], "torch": [3, 4, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 36, 39, 40, 45, 46, 47, 48, 49, 50, 51, 59, 61, 62, 67, 70, 73, 74, 75, 77, 79, 80, 85, 86, 87, 88, 89, 90, 91, 96, 98, 99, 101, 102, 104, 105, 108, 109, 110, 111, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 150, 157, 164, 166, 169, 171, 174, 176], "cat": [3, 29, 122], "stack": [3, 7, 20, 29, 30, 50, 51, 80, 85, 120, 150], "devic": [3, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 39, 40, 47, 48, 49, 50, 51, 61, 69, 70, 74, 75, 77, 79, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 104, 105, 109, 110, 111, 118, 119, 120, 122, 124, 125, 127, 159, 164, 166, 169, 171, 172, 174], "parent": [3, 32, 47, 59, 70, 76, 87, 132], "subclass": [3, 20, 28, 29, 47, 48, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 115, 118, 119, 120, 132], "defin": [3, 16, 17, 18, 19, 21, 22, 23, 24, 25, 32, 33, 47, 48, 50, 51, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 177], "properti": [3, 20, 28, 29, 47, 48, 49, 50, 51, 77, 96, 104, 108, 116, 117, 121], "observ": [3, 32, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 64, 65, 67, 68, 70, 71, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 101, 106, 107, 109, 111, 112, 122, 124, 125, 140, 141, 142, 164, 166, 169, 171, 174, 176], "action": [3, 9, 19, 25, 32, 47, 48, 49, 50, 51, 62, 66, 77, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 102, 103, 109, 110, 111, 113, 116, 117, 122, 124, 125, 128, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 164, 166, 169, 171, 174, 176, 180], "shape": [3, 16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 32, 33, 45, 46, 47, 48, 50, 51, 59, 75, 96, 97, 102, 104, 108, 109, 110, 116, 118, 119, 120, 136, 150, 158, 176], "dtype": [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 36, 47, 48, 49, 50, 51, 61, 62, 70, 74, 75, 77, 79, 87, 88, 89, 90, 98, 104, 105, 109, 110, 111, 118, 119, 120, 122, 124, 125, 164, 166, 169, 171, 174], "In": [4, 7, 10, 11, 12, 14, 20, 22, 28, 47, 48, 50, 51, 61, 70, 74, 76, 77, 79, 102, 110, 113, 117, 118, 120, 121, 159, 178, 179, 180], "case": [4, 7, 10, 11, 12, 13, 14, 18, 26, 30, 36, 47, 48, 50, 51, 77, 102, 110, 118, 120, 150, 159, 178, 179, 180], "raw": [4, 117, 121], "output": [4, 11, 12, 13, 14, 22, 26, 27, 30, 34, 47, 48, 49, 50, 51, 70, 76, 79, 87, 91, 92, 93, 97, 99, 101, 102, 110, 118, 119, 120, 124, 125, 126, 129, 131, 132, 133, 134, 150, 155], "must": [4, 7, 11, 12, 13, 14, 20, 22, 28, 29, 39, 40, 41, 42, 47, 48, 50, 51, 74, 77, 91, 102, 110, 118, 124, 125, 143, 144, 145, 146, 147, 148, 149, 150, 154, 158, 159, 164, 166, 169, 171, 174], "treat": 4, "befor": [4, 7, 11, 12, 13, 14, 20, 22, 28, 29, 47, 48, 50, 51, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 102, 104, 105, 110, 118, 120, 126, 129, 131, 132, 133, 134, 140, 141, 142], "being": [4, 14, 20, 22, 28, 29, 47, 48, 50, 51, 77, 84, 159, 178, 179, 180], "anoth": [4, 20, 28, 29, 45, 47, 48, 50, 51, 76, 85, 102, 110, 126, 129, 131, 132, 133, 134], "valu": [4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33, 47, 48, 49, 50, 51, 57, 59, 66, 70, 72, 74, 75, 76, 77, 79, 80, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 99, 100, 102, 104, 105, 108, 109, 110, 111, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 158, 164, 169, 171, 174, 176], "To": [4, 6, 7, 22, 47, 48, 50, 51, 80, 87, 88, 89, 158], "do": [4, 7, 11, 12, 13, 14, 48, 66, 85, 88, 104], "reproduc": 4, "logic": 4, "torchvis": 4, "torchrl": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "against": [5, 7, 16, 17, 18, 19, 21, 22, 23, 24, 25, 32, 33, 47, 48, 50, 51, 110, 118], "latest": 5, "guarante": [5, 22, 39, 40, 41, 42, 47, 48, 50, 51, 80], "compat": [5, 7, 10, 20, 22, 28, 29, 42, 47, 48, 50, 51, 80, 136], "wa": [5, 7, 29, 47, 48, 50, 51, 77, 130, 135], "avail": [5, 6, 110, 124, 125, 178, 179], "time": [5, 7, 11, 12, 13, 14, 22, 47, 48, 50, 51, 59, 74, 80, 85, 99, 101, 133, 158], "releas": [5, 7, 22, 47, 48, 50, 51, 77], "howev": [5, 7, 22, 47, 48, 50, 51, 77], "project": [5, 16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 110, 118], "mai": [5, 7, 11, 12, 13, 14, 22, 47, 48, 50, 51, 77, 80, 102], "willing": 5, "keep": [5, 7, 12, 20, 28, 29, 70, 79, 80, 152, 158], "backward": [5, 22, 47, 48, 50, 51, 80], "older": [5, 7], "If": [5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 47, 48, 49, 50, 51, 59, 60, 66, 70, 76, 77, 79, 80, 91, 101, 102, 110, 118, 120, 139, 148, 149, 155, 158, 159, 161, 169, 171, 174, 176, 180, 182], "you": [5, 6, 7, 8, 22, 47, 48, 50, 51, 80, 182], "run": [5, 6, 7, 8, 11, 12, 14, 22, 47, 48, 49, 50, 51, 52, 53, 66, 70, 76, 77, 78, 79, 80, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 154, 178, 179, 180, 182], "feel": [5, 182], "free": [5, 7, 132], "gladli": 5, "look": [5, 7, 22, 47, 48, 50, 51, 70, 110, 120], "instruct": 6, "found": [6, 7, 20, 22, 28, 29, 30, 47, 48, 50, 51, 80, 127, 132], "github": [6, 7], "prepar": 6, "conda": [6, 7, 182], "assum": [6, 18, 20, 25, 28, 29, 35, 48, 50, 51, 70, 74, 79, 101, 145, 146, 148, 149], "let": [6, 7, 22, 47, 48, 50, 51, 154], "": [6, 7, 22, 26, 27, 30, 34, 47, 48, 49, 50, 51, 61, 70, 74, 77, 79, 80, 91, 105, 110, 118, 120, 134, 155, 171, 174], "creat": [6, 7, 11, 12, 14, 22, 29, 34, 47, 48, 50, 51, 70, 76, 77, 80, 85, 91, 92, 93, 94, 95, 100, 102, 110, 118, 119, 120, 128, 129, 133, 161, 162, 163, 176, 178, 179], "n": [6, 7, 16, 19, 20, 22, 25, 28, 29, 47, 48, 50, 51, 58, 110, 139], "3": [6, 7, 18, 19, 20, 21, 22, 25, 28, 29, 45, 46, 47, 48, 50, 51, 58, 61, 64, 67, 70, 74, 75, 77, 79, 86, 87, 88, 89, 90, 91, 92, 93, 98, 100, 102, 109, 110, 118, 120, 122, 124, 145, 146, 148, 149, 157, 166], "7": [6, 19, 25, 90, 91, 101, 102], "cmake": 6, "14": [6, 10], "0": [6, 7, 10, 20, 21, 22, 25, 26, 28, 29, 30, 36, 47, 48, 49, 50, 51, 57, 59, 61, 64, 66, 67, 70, 74, 75, 77, 79, 80, 85, 90, 91, 92, 93, 95, 99, 102, 104, 105, 110, 112, 113, 116, 117, 118, 119, 120, 121, 126, 131, 132, 133, 134, 135, 139, 150, 156, 158, 176, 180], "activ": [6, 7, 9, 91, 99, 102, 132], "sim": 6, "bullet": 6, "physic": [6, 7], "headless": [6, 7], "mode": [6, 13, 22, 47, 48, 50, 51, 77, 80, 82, 84, 96, 108, 110, 116, 117, 121, 154], "usual": [6, 47, 48, 50, 51, 105, 169, 171, 174, 182], "necessari": [6, 11, 12, 13, 14, 120, 133, 140, 141, 142], "withbullet": 6, "c": [6, 7, 164, 166, 169, 171, 174], "forg": [6, 7], "aihabitat": 6, "nightli": 6, "y": [6, 7, 101], "git": [6, 7], "http": [6, 7, 26, 36, 58, 70, 92, 93, 94, 95, 99, 100, 105, 106, 107, 112, 113, 124, 129, 130, 132, 133, 134, 135, 140, 143, 144, 147, 164, 169, 171, 174], "com": [6, 7], "facebookresearch": 6, "subdirectori": 6, "reduc": [6, 19], "verbos": 6, "export": 6, "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "don": [6, 7, 16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 47], "t": [6, 7, 10, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 47, 48, 50, 51, 70, 79, 80, 118, 127, 158, 159, 180, 182], "want": [6, 7, 120], "simpli": 6, "remov": [6, 22, 47, 48, 50, 51, 85], "command": [6, 7], "see": [6, 7, 8, 9, 11, 12, 13, 14, 20, 22, 28, 29, 47, 48, 50, 51, 61, 70, 74, 77, 79, 81, 91, 102, 104, 117, 118, 121], "more": [6, 8, 11, 12, 13, 14, 22, 26, 27, 30, 31, 34, 35, 47, 48, 50, 51, 81, 102, 104, 118, 124, 129, 132, 140, 143, 144, 147, 155, 164, 182], "detail": [6, 7, 22, 47, 48, 50, 51, 77, 124, 129, 132, 164, 182], "follow": [6, 7, 22, 29, 47, 48, 49, 50, 51, 70, 91, 102, 126, 131, 158, 171, 174], "readm": [6, 7], "md": [6, 7], "get": [6, 7, 20, 28, 29, 42, 50, 51, 59, 62, 67, 75, 80, 86, 110, 119, 143, 144, 147], "list": [6, 7, 9, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 41, 42, 47, 48, 49, 50, 51, 58, 70, 77, 79, 102, 110, 118, 120, 122, 138, 140, 141, 142, 154, 155, 178, 179], "lib": [6, 7, 9, 52, 53, 54, 55, 74, 80, 164, 166, 169, 171, 174, 176], "import": [6, 7, 20, 26, 28, 29, 30, 36, 48, 49, 50, 51, 74, 80, 86, 87, 88, 89, 90, 98, 102, 109, 110, 111, 118, 119, 120, 122, 124, 125, 126, 152, 154, 164, 166, 169, 171, 174, 176], "habitatenv": 6, "_has_habitat": 6, "assert": [6, 16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 32, 33, 48, 80, 85, 150, 157], "check": [6, 7, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 47, 48, 49, 50, 51, 59, 63, 110, 118], "print": [6, 7, 18, 19, 20, 22, 25, 28, 29, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 62, 67, 74, 75, 80, 85, 86, 87, 88, 89, 91, 98, 102, 110, 111, 118, 119, 120, 122, 124, 125, 164, 166, 169, 171, 174, 176], "_env": 6, "available_env": [6, 52, 53, 54, 55], "startswith": 6, "importerror": [6, 7], "usr": [6, 7], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "so": [6, 7, 22, 47, 48, 50, 51, 80, 120], "undefin": [6, 7, 22, 47, 48, 50, 51, 77], "symbol": [6, 7], "_glapi_tls_curr": [6, 7], "solut": [6, 7, 9, 182], "debug": 6, "link": [6, 7], "right": [6, 7, 29, 45, 46, 101], "file": [6, 7], "replac": [6, 7, 22], "path": [6, 7, 22, 39, 47, 48, 50, 51, 70, 79, 158], "mujoco_env": [6, 7], "proper": [6, 7], "name": [6, 7, 10, 20, 22, 28, 29, 47, 48, 50, 51, 52, 77, 126, 129, 131, 132, 133, 134, 153, 164, 166, 169, 171, 174], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "forc": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "config": [6, 7, 161, 162, 163, 164, 166, 169, 171, 172, 174, 177], "var": [6, 7, 22, 47, 48, 50, 51, 77], "ld_preload": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "its": [7, 11, 12, 13, 14, 22, 30, 47, 48, 49, 50, 51, 58, 76, 77, 80, 91, 98, 110, 118, 120, 126, 129, 131, 132, 133, 134, 158, 176], "offici": 7, "repositori": 7, "stand": [7, 87, 88, 89], "multi": [7, 9, 22, 23, 24, 47, 48, 50, 51, 101, 102], "joint": 7, "dynam": [7, 20, 28, 29], "contact": 7, "purpos": [7, 176], "engin": 7, "develop": 7, "robot": [7, 70, 79], "biomechan": 7, "graphic": 7, "anim": 7, "machin": [7, 22], "other": [7, 22, 39, 40, 41, 42, 47, 48, 49, 50, 51, 80, 105, 110, 126, 129, 131, 132, 133, 134, 169, 171, 174, 178, 179], "area": 7, "which": [7, 10, 11, 12, 13, 14, 18, 19, 20, 22, 25, 28, 29, 35, 47, 48, 50, 51, 58, 59, 66, 70, 76, 77, 87, 88, 89, 110, 117, 118, 120, 121, 126, 129, 131, 132, 133, 134, 136, 150, 164, 166, 169, 171, 174], "demand": 7, "fast": [7, 9, 133], "accur": 7, "simul": [7, 56, 90], "articul": 7, "structur": 7, "interact": [7, 13, 84, 110], "recent": 7, "acquir": 7, "deepmind": [7, 9, 52, 53], "sinc": [7, 22, 47, 48, 49, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "access": [7, 22, 47, 48, 50, 51, 70, 180, 182], "whomev": 7, "without": [7, 9, 22, 47, 48, 50, 51, 85, 88, 133, 139, 176, 182], "licenc": 7, "were": [7, 50, 51], "incorpor": 7, "make": [7, 22, 42, 47, 48, 50, 51, 55, 70, 85, 104, 110, 132, 163, 180], "relianc": 7, "obsolet": 7, "seri": [7, 25, 43, 44, 51, 66, 76], "legaci": 7, "document": [7, 22, 47, 48, 50, 51, 77], "offer": 7, "some": [7, 8, 9, 16, 17, 18, 19, 21, 22, 23, 24, 25, 32, 33, 47, 48, 50, 51, 70, 92, 110, 115, 120, 150, 160], "great": [7, 8], "capabl": 7, "one": [7, 10, 11, 12, 13, 14, 21, 25, 26, 27, 30, 31, 34, 35, 42, 43, 44, 47, 48, 50, 51, 66, 70, 76, 77, 78, 79, 80, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 113, 115, 118, 119, 120, 124, 125, 126, 127, 128, 131, 132, 133, 152, 154, 155, 158, 161, 169, 171, 174, 180, 182], "backend": 7, "glfw": 7, "osmesa": 7, "egl": 7, "Of": [7, 182], "hand": 7, "gpu": [7, 8, 22, 47, 48, 50, 51], "therefor": [7, 132], "our": 7, "advic": 7, "sudo": [7, 182], "enabl": [7, 154], "apt": 7, "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "via": [7, 29, 50, 76, 79, 127], "awar": [7, 39, 40, 41, 42], "fact": 7, "indent": 7, "workflow": [7, 87, 88, 89], "thing": 7, "expect": [7, 22, 32, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 110, 118, 120, 126, 131, 132, 161, 182], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "both": [7, 20, 22, 28, 29, 47, 48, 50, 51, 77, 87, 88, 89, 91, 102, 154], "tell": 7, "done": [7, 18, 22, 28, 29, 47, 48, 49, 50, 51, 67, 74, 80, 85, 90, 127, 128, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 164, 166, 169, 171, 174], "appropri": [7, 11, 12, 13, 14, 43, 44, 177, 180], "variabl": [7, 19, 25, 87, 88, 89, 133], "mujoco_gl": 7, "pyopengl_platform": 7, "deactiv": 7, "pre": [7, 22, 40, 47, 48, 50, 51, 70, 79], "built": [7, 172, 176, 177, 180], "binari": [7, 16, 25, 57, 124, 125], "need": [7, 22, 42, 47, 48, 50, 51, 70, 76, 77, 78, 79, 80, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 107, 110, 112, 113, 115, 118, 119, 120, 133, 139, 158, 180], "These": 7, "9": [7, 22, 80], "For": [7, 9, 11, 12, 13, 14, 22, 47, 48, 50, 51, 104, 124, 129, 132, 154, 164], "instead": [7, 19, 22, 47, 48, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 180], "becaus": [7, 76, 95, 101, 110, 118], "requir": [7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33, 47, 48, 50, 51, 61, 70, 74, 77, 79, 102, 118, 120, 126, 129, 131, 132, 133, 134], "setup": 7, "should": [7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 42, 47, 48, 49, 50, 51, 70, 76, 77, 78, 79, 80, 85, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 130, 131, 132, 133, 135, 139, 154, 155, 158, 176, 178, 179, 180], "mkdir": 7, "cd": 7, "here": [7, 9], "tag": [7, 180], "earlier": [7, 11, 12, 13, 14], "roboti": 7, "u": 7, "html": 7, "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "now": 7, "charg": 7, "obtain": [7, 48, 90], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": 7, "bin": 7, "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "kei": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33, 35, 47, 48, 50, 51, 58, 59, 70, 74, 76, 77, 79, 80, 85, 90, 103, 110, 118, 119, 120, 122, 126, 127, 128, 129, 131, 132, 133, 134, 139, 140, 141, 142, 154, 157, 158, 161, 169, 171, 174], "too": [7, 20, 28, 29, 117, 121, 126, 129, 131, 132, 133, 134], "mujoco_py_mjkey_path": 7, "reload": 7, "recommend": 7, "chang": [7, 20, 22, 28, 29, 39, 40, 41, 42, 47, 48, 50, 51, 77, 80], "later": [7, 95, 110], "known": [7, 8], "try": 7, "nativ": [7, 9, 47, 48, 50, 51, 58, 110, 118, 120], "usag": [7, 134], "local": [7, 13, 22, 47, 48, 50, 51, 77], "cuda": [7, 20, 22, 28, 29, 47, 48, 50, 51, 61, 69, 70, 74, 77, 79, 118, 151], "modifi": [7, 20, 22, 28, 29, 47, 48, 50, 51, 61, 70, 74, 76, 77, 79, 118, 160, 169, 171, 174], "nvidia": 7, "driver": 7, "especi": [7, 8, 59], "those": [7, 20, 28, 29, 50, 51, 110, 120, 159, 178, 179], "hack": 7, "where": [7, 11, 12, 13, 14, 20, 26, 27, 28, 29, 30, 31, 34, 35, 39, 40, 47, 48, 49, 50, 51, 70, 76, 79, 110, 118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 139, 155, 158, 159], "line": [7, 22, 47, 48, 50, 51], "adatp": 7, "locat": [7, 20, 28, 29, 48, 67, 73, 117, 121], "execut": [7, 13, 47, 48, 49, 50, 51, 120, 161, 180], "build": [7, 15, 22, 47, 48, 50, 51, 80, 90, 110, 158, 165, 167, 168, 170, 172, 173, 175], "script": [7, 164, 166, 169, 171, 174, 176, 180], "mean": [7, 13, 67, 80, 90, 96, 99, 101, 110, 116, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "go": 7, "unnot": 7, "until": 7, "actual": [7, 11, 12, 14, 47, 48, 50, 51, 160], "complet": [7, 9, 48, 182], "mujoco_pi": 7, "trigger": 7, "pipelin": 7, "abov": [7, 22, 47, 48, 50, 51, 117, 121], "caus": 7, "problem": [7, 13], "give": [7, 49, 182], "troubleshoot": 7, "each": [7, 11, 12, 13, 14, 15, 20, 21, 22, 26, 28, 29, 30, 47, 48, 50, 51, 74, 80, 120, 124, 125, 145, 146, 148, 149, 154, 178, 179], "gl": 7, "h": [7, 60, 71, 75], "eglshim": 7, "4": [7, 19, 20, 25, 28, 29, 45, 46, 49, 52, 53, 54, 58, 80, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 109, 110, 111, 118, 119, 120, 122, 124, 125], "10": [7, 18, 20, 28, 29, 49, 75, 90, 119, 133, 134, 150], "fatal": 7, "error": [7, 10, 20, 22, 28, 29, 47, 48, 50, 51], "No": 7, "directori": [7, 20, 28, 29, 39], "includ": [7, 9, 22, 29, 39, 40, 41, 42, 47, 48, 49, 50, 51, 77, 80, 160], "sure": [7, 42, 85, 180], "glu": 7, "38": 7, "disappear": 7, "onc": [7, 11, 12, 13, 14, 22, 47, 48, 50, 51, 77, 119], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "_solution_": 7, "saniti": 7, "been": [7, 11, 12, 14, 29, 47, 48, 50, 51, 76, 110, 118, 120], "cymj": 7, "linuxgpuextensionbuild": 7, "result": [7, 11, 12, 13, 14, 20, 22, 28, 29, 47, 48, 50, 51, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 102, 125, 143, 144, 145, 146, 147, 148, 149, 159], "filenam": 7, "runtimeerror": [7, 22, 47, 48, 50, 51, 77], "job": 7, "schedul": [7, 154], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": 7, "__init__": [7, 49, 90, 122, 124], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "fail": 7, "initi": [7, 11, 12, 13, 14, 20, 22, 28, 29, 47, 48, 50, 51, 70, 74, 76, 77, 81, 90, 104, 105, 110, 118, 120, 131, 133, 134, 164, 166, 169, 171, 174, 180], "opengl": 7, "global": [7, 22, 47, 48, 50, 51, 110], "while": [7, 20, 22, 28, 29, 47, 48, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 131, 132], "cuda_visible_devic": 7, "id": [7, 15, 133, 171], "around": [7, 14, 30, 31, 35, 49, 110, 118, 140], "slurm_step_gpu": 7, "enviro": 7, "imag": [7, 52, 60, 70, 75, 79, 102], "black": 7, "call": [7, 10, 11, 12, 13, 14, 20, 22, 26, 27, 28, 29, 30, 34, 39, 40, 41, 42, 47, 48, 50, 51, 58, 61, 62, 69, 70, 74, 76, 77, 78, 79, 80, 84, 90, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 107, 110, 112, 113, 115, 118, 119, 120, 139, 154, 155], "read": [7, 11, 12, 13, 14, 29, 39, 40, 41, 42, 48, 50, 51, 76, 87, 88, 89, 108, 110, 118, 120, 126, 129, 131, 132, 133, 134, 158, 169, 171, 174], "pixel": [7, 18, 65, 71, 92, 106, 107, 166, 169, 171, 174], "miss": [7, 10, 18, 22, 47, 48, 50, 51, 77, 120, 182], "onscreen": 7, "101": 7, "displai": [7, 158], "correctli": [7, 22, 47, 48, 50, 51], "cpu": [8, 18, 20, 22, 28, 29, 32, 39, 40, 47, 48, 49, 50, 51, 61, 70, 74, 77, 79, 87, 88, 89, 90, 98, 105, 109, 110, 111, 118, 120, 122, 124, 125, 164, 166, 169, 171, 174], "intens": 8, "even": [8, 12, 39, 40, 41, 42], "parallel": [8, 11, 12, 14, 177, 178, 179, 180], "speed": [8, 19], "ask": 8, "core": [8, 164, 166, 169, 171, 174], "than": [8, 11, 12, 13, 14, 95, 102, 118, 159, 182], "twice": [8, 134], "much": [8, 26, 30, 36, 131, 132], "true": [8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33, 47, 48, 49, 50, 51, 52, 53, 59, 61, 66, 67, 70, 74, 75, 77, 79, 80, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 102, 104, 105, 110, 117, 118, 120, 121, 126, 131, 132, 133, 134, 136, 140, 141, 142, 145, 146, 148, 149, 152, 153, 154, 158, 166, 180], "thei": [8, 9, 16, 17, 18, 19, 21, 22, 23, 24, 25, 29, 32, 33, 47, 48, 50, 51, 62, 63, 76, 77, 101, 126, 129, 131, 132, 133, 134, 158], "spin": 9, "deep": [9, 58, 92, 93, 94, 95, 97, 130, 134, 135, 164], "hug": 9, "face": 9, "syllabu": 9, "lectur": 9, "from": [9, 10, 11, 12, 13, 14, 15, 20, 22, 25, 26, 27, 28, 29, 30, 31, 34, 35, 39, 40, 41, 42, 47, 48, 49, 50, 51, 59, 70, 74, 75, 76, 77, 79, 80, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 102, 103, 104, 109, 110, 111, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 133, 134, 139, 150, 155, 158, 160, 161, 164, 166, 169, 171, 172, 174, 176, 177, 180, 182], "best": 9, "benchmark": 9, "awesom": 9, "curat": 9, "discuss": 9, "reddit": 9, "maintain": 9, "still": [9, 28, 131], "exampl": [9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 28, 29, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 62, 67, 70, 74, 75, 77, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 98, 101, 102, 109, 110, 111, 118, 119, 120, 122, 124, 125, 150, 151, 152, 153, 156, 157, 159, 164, 166, 169, 171, 174, 176], "reagent": 9, "product": [9, 178, 179], "orient": 9, "stabl": 9, "baselines3": 9, "tf": 9, "agent": [9, 105], "bandit": 9, "tensorflow": 9, "kera": 9, "acm": 9, "framework": [9, 49], "dopamin": 9, "salina": 9, "A": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 50, 51, 70, 74, 76, 77, 80, 81, 85, 90, 91, 102, 105, 110, 118, 120, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 152, 155, 158, 159, 166, 169, 171, 174, 176], "flexibl": 9, "simpl": [9, 22, 25, 47, 48, 50, 51, 92, 110], "sequenti": [9, 22, 47, 48, 50, 51, 120], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": 9, "grade": 9, "sampl": [9, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 39, 40, 47, 49, 90, 96, 108, 110, 112, 117, 118, 121, 126, 127, 128, 131, 132, 150, 155, 158, 160], "factori": 9, "throughput": 9, "asynchron": [9, 12, 22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118, 178], "cherri": 9, "jaxrl": 9, "continu": [9, 17, 23, 24, 33, 92, 93, 94, 95, 110, 120, 135, 140, 143, 144, 147, 164], "space": [9, 25, 32, 107, 110, 118, 120, 124, 125], "mbrl": [9, 49], "rlmeta": 9, "light": 9, "weight": [9, 11, 12, 13, 14, 22, 26, 30, 47, 48, 50, 51, 61, 70, 74, 77, 79, 105, 118, 126, 159, 175], "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "module_nam": 10, "str": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33, 35, 39, 47, 48, 50, 51, 52, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 79, 80, 82, 84, 86, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 103, 104, 105, 109, 110, 118, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 139, 141, 142, 153, 154, 157, 161, 164, 169, 171, 172, 174, 180], "from_vers": 10, "none": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 42, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 85, 86, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 108, 109, 110, 118, 120, 122, 124, 125, 132, 139, 140, 141, 142, 145, 146, 148, 149, 154, 155, 158, 161, 162, 163, 164, 166, 169, 171, 174, 176, 178, 179, 180], "to_vers": 10, "decor": 10, "fit": 10, "specifi": [10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 47, 48, 50, 51, 78, 90, 110, 118], "lead": [10, 117, 121], "explicit": [10, 101], "intersect": 10, "rang": [10, 19, 20, 80, 85, 131], "paramet": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 171, 174, 176, 177, 178, 179, 180], "longer": 10, "13": [10, 150], "def": [10, 22, 47, 48, 49, 50, 51, 90, 119, 122, 124], "fun": 10, "self": [10, 20, 22, 28, 29, 30, 47, 48, 49, 50, 51, 61, 70, 74, 77, 79, 90, 118, 119, 122, 124], "x": [10, 15, 22, 75, 91, 97, 100, 101, 102, 124, 143, 144, 145, 146, 147, 148, 149, 158], "indic": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 43, 44, 47, 48, 49, 50, 51, 59, 74, 91, 102, 155, 161, 180, 182], "doesn": 10, "create_env_fn": [11, 12, 13, 14, 50, 51], "sequenc": [11, 12, 13, 14, 18, 20, 21, 26, 27, 28, 29, 31, 34, 43, 44, 46, 57, 58, 59, 60, 62, 64, 65, 67, 68, 71, 72, 73, 75, 76, 80, 86, 91, 96, 102, 108, 109, 110, 115, 120, 122, 155, 157, 158, 169, 171, 174], "callabl": [11, 12, 13, 14, 20, 22, 26, 27, 28, 29, 30, 31, 34, 47, 48, 49, 50, 51, 132, 155, 162, 163, 178, 179, 180], "union": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 36, 45, 46, 47, 48, 50, 51, 61, 67, 70, 73, 77, 79, 80, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 105, 108, 109, 110, 116, 117, 118, 120, 121, 130, 133, 134, 135, 140, 141, 142, 162, 163, 164, 169, 171, 172, 174, 176, 177, 178, 179, 180], "probabilistictensordictmodul": [11, 12, 13, 14, 120, 126, 131, 132, 162, 163], "tensordictbas": [11, 12, 13, 14, 15, 18, 20, 22, 28, 29, 30, 35, 45, 47, 48, 50, 51, 58, 61, 66, 74, 76, 78, 80, 81, 85, 90, 103, 110, 118, 120, 126, 127, 128, 129, 131, 132, 133, 134, 139, 140, 141, 142, 158], "total_fram": [11, 12, 13, 14, 158, 160, 176], "int": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 64, 66, 70, 71, 77, 78, 79, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 124, 125, 126, 127, 131, 132, 133, 134, 150, 151, 152, 154, 155, 158, 159, 164, 169, 171, 172, 174, 178, 179, 180], "create_env_kwarg": [11, 12, 13, 14, 50, 51], "dict": [11, 12, 13, 14, 18, 19, 20, 22, 28, 29, 34, 47, 48, 50, 51, 77, 80, 91, 92, 93, 94, 95, 100, 101, 102, 110, 154, 162, 163, 164, 171, 174, 178, 179, 180], "max_frames_per_traj": [11, 12, 13, 14, 160], "frames_per_batch": [11, 12, 13, 14, 160], "200": [11, 12, 13, 14, 22, 47, 48, 50, 51, 92, 93, 99, 112, 113], "init_random_fram": [11, 12, 13, 14, 160], "reset_at_each_it": [11, 12, 13, 14], "bool": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 59, 66, 67, 70, 74, 75, 77, 79, 80, 85, 90, 91, 92, 93, 102, 104, 105, 110, 117, 118, 120, 121, 126, 127, 128, 129, 131, 132, 133, 134, 136, 140, 141, 142, 145, 146, 148, 149, 152, 153, 154, 155, 156, 158, 164, 166, 169, 171, 174, 180], "fals": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 59, 61, 66, 67, 70, 74, 75, 77, 79, 80, 87, 88, 89, 90, 91, 92, 98, 102, 109, 110, 111, 118, 119, 120, 122, 124, 125, 127, 128, 129, 133, 134, 136, 140, 141, 142, 145, 146, 148, 149, 152, 153, 154, 155, 156, 158, 164, 166, 169, 171, 174, 180], "postproc": [11, 12, 13, 14], "split_traj": [11, 12, 13, 14], "seed": [11, 12, 13, 14, 47, 48, 49, 50, 51, 52, 77, 158], "pin_memori": [11, 13, 14, 20, 26, 27, 28, 29, 30, 31, 34, 50, 51, 69, 155], "passing_devic": [11, 12, 13, 14], "update_at_each_batch": [11, 12, 14], "init_with_lag": [11, 12, 13, 14], "exploration_mod": [11, 13, 110, 154], "random": [11, 12, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 37, 47, 48, 49, 50, 51, 66, 74, 84, 110, 118, 119, 133, 154, 161], "reset_when_don": [11, 13], "given": [11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 47, 48, 49, 50, 51, 61, 70, 74, 77, 79, 85, 90, 99, 110, 115, 118, 120, 124, 125, 127, 128, 139, 140, 141, 142, 151, 154, 176], "datacollector": [11, 12, 13, 14, 110], "separ": [11, 12, 14, 15, 127, 133, 134], "synchron": [11, 178, 179], "collect": [11, 12, 13, 14, 22, 26, 27, 30, 31, 34, 35, 70, 79, 127, 133, 134, 150, 155, 158, 159, 160, 161, 176], "start": [11, 22, 85], "next": [11, 12, 22, 26, 27, 30, 34, 47, 48, 50, 51, 113, 133, 139, 155], "item": [11, 20, 28, 29, 30, 63, 127, 128, 150], "queri": [11, 12, 13, 14, 20, 22, 28, 29, 47, 48, 50, 51, 70, 76, 80, 120], "step": [11, 12, 13, 14, 22, 47, 48, 49, 50, 51, 66, 77, 85, 90, 99, 101, 103, 110, 132, 139, 150, 154, 158], "comput": [11, 13, 19, 22, 26, 30, 47, 48, 50, 51, 70, 76, 77, 78, 79, 87, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 117, 118, 119, 120, 121, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 161], "between": [11, 12, 13, 14, 20, 22, 28, 29, 47, 48, 50, 51, 66, 72, 75, 77, 91, 102, 110, 131, 136, 154, 158], "recept": 11, "trajectori": [11, 12, 13, 14, 15, 22, 47, 48, 50, 51, 76, 90, 132, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150], "safe": [11, 12, 16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 32, 33, 110, 118], "onlin": [11, 14, 132, 150, 180], "accept": [11, 12, 13, 14, 22, 47, 48, 49, 50, 51, 61, 70, 74, 77, 79, 118], "lower": [11, 12, 13, 14, 17, 23, 80, 112, 113], "bound": [11, 12, 13, 14, 17, 18, 20, 22, 23, 28, 29, 47, 48, 50, 51, 80, 110, 112, 113, 118], "total": [11, 12, 13, 14, 20, 28, 29, 48, 126, 131, 132, 150, 152, 154, 158, 160, 161], "frame": [11, 12, 13, 14, 22, 48, 58, 152, 154, 158, 160, 161], "well": [11, 12, 14, 22, 42, 47, 48, 50, 51, 112, 113], "greater": [11, 12, 14], "close": [11, 12, 13, 14, 48, 126, 131, 132], "signal": [11, 12, 14], "sent": [11, 12, 14, 39, 40, 50, 51, 80], "worker": [11, 12, 13, 14, 50, 51, 80, 178, 179, 180], "server": [11, 12, 14], "argument": [11, 12, 13, 14, 20, 22, 28, 29, 47, 48, 50, 51, 61, 70, 74, 76, 77, 79, 91, 102, 104, 110, 118, 122, 152, 160, 164, 166, 169, 171, 174, 176, 177, 180], "maximum": [11, 12, 13, 14, 17, 22, 23, 26, 27, 30, 39, 40, 41, 47, 48, 50, 51, 72, 109, 116, 117, 121, 134, 155], "per": [11, 12, 13, 14, 50, 99, 158, 178, 179], "note": [11, 12, 13, 14, 22, 47, 48, 50, 51, 80, 110], "span": [11, 12, 13, 14], "over": [11, 12, 13, 14, 22, 47, 48, 50, 51, 120, 129, 160], "multipl": [11, 12, 13, 14, 19, 29, 50, 51, 59, 76, 80, 101, 104, 105, 118, 133, 171, 180], "unless": [11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 29, 32, 33, 47, 48, 50, 51], "reach": [11, 12, 13, 14, 47, 48, 49, 50, 51], "n_steps_max": [11, 12, 13, 14, 22], "reset": [11, 12, 13, 14, 47, 48, 49, 50, 51, 58, 61, 66, 70, 74, 76, 79, 80, 81, 85, 123, 164, 166, 169, 171, 174], "wrap": [11, 12, 13, 14, 22, 47, 48, 50, 51, 87, 88, 89, 119], "track": [11, 12, 13, 14, 80, 152], "independ": [11, 12, 13, 14, 29, 76, 134], "neg": [11, 12, 13, 14, 26, 30, 36], "allow": [11, 12, 13, 14, 20, 22, 25, 28, 29, 47, 48, 50, 51, 85, 102, 136], "ignor": [11, 12, 13, 14, 22, 47, 48, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "default": [11, 12, 13, 14, 19, 20, 22, 25, 28, 29, 30, 34, 39, 40, 47, 48, 50, 51, 52, 58, 59, 64, 66, 67, 70, 74, 75, 77, 79, 80, 85, 86, 90, 91, 92, 93, 94, 95, 96, 99, 100, 102, 104, 105, 106, 107, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 148, 149, 150, 152, 153, 154, 156, 158, 164, 169, 171, 174, 176, 180], "length": [11, 12, 13, 14, 16, 20, 28, 29, 50, 51, 90, 91, 92, 94, 97, 102, 118, 150], "equival": [11, 12, 13, 14, 22, 29, 47, 48, 50, 51, 77], "configur": [11, 12, 13, 14, 132, 169, 171, 174], "featur": [11, 12, 13, 14, 25, 29, 47, 48, 50, 51, 58, 91, 99, 100, 102, 104, 105, 110, 180], "mainli": [11, 12, 13, 14], "offlin": [11, 12, 13, 14], "whether": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 47, 48, 49, 50, 51, 77, 91, 102, 122, 127, 128, 129, 133, 134, 142, 155], "postprocessor": [11, 12, 14], "format": [11, 12, 13, 14, 22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "boolean": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 47, 48, 49, 143, 144, 145, 146, 147, 148, 149], "split": [11, 12, 13, 14, 20, 28, 29, 126, 129, 131, 132, 133, 134], "accord": [11, 12, 13, 14, 20, 26, 28, 29, 30, 67, 73, 104, 112, 117, 121], "split_trajectori": [11, 12, 13, 14], "inform": [11, 12, 13, 14, 22, 47, 48, 50, 51, 91, 102], "place": [11, 12, 13, 14, 18, 20, 22, 28, 29, 47, 48, 50, 51, 61, 70, 74, 77, 79, 80, 118, 159, 160], "differ": [11, 12, 13, 14, 20, 22, 28, 29, 47, 48, 50, 51, 77, 102, 124, 125, 132, 136, 141, 154, 158, 159, 178, 179], "update_policy_weights_": [11, 12, 13, 14], "method": [11, 12, 13, 14, 20, 22, 28, 29, 30, 39, 40, 41, 42, 47, 48, 50, 51, 58, 61, 70, 71, 74, 77, 79, 87, 88, 89, 90, 101, 110, 118, 119, 120, 177, 186], "dure": [11, 12, 13, 14, 47, 48, 50, 51, 77, 154, 158], "loop": [11, 12, 13, 14, 48, 85, 158], "accommod": [11, 12, 13, 14], "lag": [11, 12, 13, 14], "variou": [11, 12, 13, 14, 126, 129, 131, 132, 133, 134, 178, 179], "kept": [11, 12, 13, 14, 50, 51, 76, 85, 117, 121], "origin": [11, 12, 13, 14, 20, 28, 29, 70, 77, 79, 110, 118, 120, 130, 132, 171, 174], "store": [11, 12, 13, 14, 18, 20, 22, 28, 29, 30, 35, 39, 40, 41, 47, 48, 50, 51, 80, 90, 101, 164, 166, 169, 171, 174], "long": [11, 12, 13, 14, 19, 25, 28, 29], "updat": [11, 12, 13, 14, 20, 22, 26, 28, 29, 30, 36, 47, 48, 49, 50, 51, 77, 80, 90, 110, 118, 130, 132, 135, 140, 141, 142, 154, 158, 159, 162, 163, 175, 176], "everi": [11, 12, 14, 22, 25, 29, 42, 47, 48, 50, 51, 70, 76, 78, 79, 80, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 158], "truncat": [11, 12, 13, 14, 121], "help": [11, 12, 13, 14, 22, 47, 48, 50, 51, 182], "desynchron": [11, 12, 13, 14], "match": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 45, 46, 47, 48, 50, 51, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 91, 96, 102, 110, 116, 118, 131, 133, 134, 159], "rollout": [11, 12, 13, 14, 47, 48, 49, 50, 51, 84, 90, 161], "load_state_dict": [11, 12, 13, 14, 22, 47, 48, 50, 51, 77, 80], "state_dict": [11, 12, 13, 14, 22, 47, 48, 50, 51, 77, 80], "ordereddict": [11, 12, 13, 14, 22, 47, 48, 50, 51, 77, 80], "load": [11, 12, 13, 14, 26, 27, 30, 34, 53, 155], "form": [11, 12, 14, 22, 26, 27, 30, 34, 47, 48, 50, 51, 80, 126, 131, 132, 155, 158], "worker0": [11, 12, 14], "state_dict0": [11, 12, 14], "worker1": [11, 12, 14], "state_dict1": [11, 12, 14], "reset_idx": [11, 12, 14], "state": [11, 12, 13, 14, 22, 47, 48, 49, 50, 51, 58, 59, 61, 70, 74, 76, 77, 79, 80, 81, 87, 90, 99, 101, 102, 106, 110, 112, 113, 118, 120, 133, 139, 140, 141, 142, 180], "set_se": [11, 12, 13, 14, 47, 48, 49, 50, 51, 77], "static_se": [11, 12, 13, 14, 47, 48, 50, 51, 77], "integ": [11, 12, 13, 14, 20, 21, 22, 25, 26, 27, 28, 29, 30, 42, 47, 48, 50, 51, 91, 102, 155], "repres": [11, 12, 13, 14, 20, 28, 29, 30, 47, 48, 50, 51, 124, 125, 136], "increment": [11, 12, 13, 14, 47, 48, 50, 51, 131], "last": [11, 12, 13, 14, 22, 47, 49, 64, 91, 101, 102, 106, 114], "env_fn": [11, 12, 13, 14, 178, 179], "lambda": [11, 12, 13, 14, 142, 145, 146, 148, 149, 176], "gymenv": [11, 12, 13, 14, 61, 74, 77, 80, 164, 166, 169, 171, 174, 176], "pendulum": [11, 12, 13, 14, 54, 55, 61, 74, 77, 80, 176], "v0": [11, 12, 14, 48, 54, 55, 61, 77, 80, 176], "env_fn_parallel": [11, 12, 13, 14], "6": [11, 12, 13, 14, 28, 91, 96, 101, 102, 116, 122, 164, 166, 169, 171, 174], "syncdatacollector": [11, 12, 14, 176, 179], "out_se": [11, 12, 13, 14], "shutdown": [11, 12, 13, 14], "shut": [11, 12, 13, 14], "down": [11, 12, 13, 14], "irrevers": [11, 12, 14], "field": [11, 12, 13, 14, 18, 20, 22, 28, 29, 47, 48, 49, 50, 51, 74, 77, 87, 88, 89, 90, 98, 109, 110, 111, 118, 120, 122, 124, 125, 161, 164, 166, 169, 171, 174, 182], "own": [11, 12, 14, 22, 47, 48, 50, 51], "live": [11, 12, 13, 14, 20, 22, 26, 27, 28, 30, 31, 34, 35, 47, 48, 49, 50, 51, 155], "arg": [12, 18, 22, 28, 29, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 70, 77, 78, 79, 86, 87, 91, 98, 102, 111, 119, 152, 158, 180], "kwarg": [12, 13, 14, 18, 20, 22, 28, 29, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 70, 74, 77, 78, 79, 86, 87, 91, 92, 93, 94, 95, 98, 100, 102, 103, 108, 109, 110, 111, 116, 118, 119, 120, 121, 126, 131, 139, 152, 158, 162, 163, 164, 169, 171, 174, 177, 178, 179], "occur": [12, 20, 28, 29, 59, 110, 118], "iter": [12, 13, 20, 21, 22, 26, 27, 28, 29, 30, 31, 34, 35, 47, 48, 50, 51, 80, 91, 102, 110, 115, 118, 120, 138, 154, 155, 157, 158, 169, 171, 174], "envcreat": [13, 176, 177, 180], "return_in_plac": 13, "return_same_td": 13, "constructor": [13, 29, 76, 164, 166, 169, 171, 174, 177, 180], "stop": [13, 47, 48, 50, 51], "equat": [13, 126, 135], "exce": 13, "batcher": 13, "yield": [13, 22, 47, 48, 50, 51], "same": [13, 20, 22, 28, 29, 47, 48, 50, 51, 66, 76, 77, 80, 91, 102], "cautious": [13, 132], "ad": [13, 22, 26, 27, 30, 31, 34, 35, 36, 47, 48, 50, 51, 77, 104, 105, 126, 131, 132, 155], "whole": [13, 22, 47, 48, 50, 51, 77, 150], "content": [13, 29, 91, 102], "ident": [13, 50, 51, 178, 179], "through": [13, 50, 51, 102, 110, 120], "chunk": [13, 20, 28, 29], "order": [13, 20, 22, 25, 28, 29, 47, 48, 50, 51, 77, 118, 120], "policy_state_dict": 13, "env_state_dict": 13, "v1": [13, 74, 136, 145, 146, 148, 149], "singl": [14, 20, 22, 26, 27, 28, 29, 30, 31, 34, 35, 47, 48, 50, 51, 58, 59, 75, 91, 101, 102, 120, 129, 133, 145, 146, 148, 149, 155, 171, 180], "mostli": 14, "paradigm": 14, "regular": [14, 20, 28, 29, 110, 118, 125, 129, 159], "prefer": 14, "mere": 14, "wrapper": [14, 30, 31, 35, 49, 52, 53, 54, 55, 110, 118, 119, 140, 180], "multiasyncdatacollector": [14, 178], "rollout_tensordict": 15, "traj_id": 15, "b": [15, 20, 28, 29, 104, 105, 110, 120], "zero": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 45, 46, 47, 48, 50, 51, 59, 67, 90, 101, 119], "pad": [15, 91, 92, 93, 101], "max": [15, 25, 116, 117, 121, 126, 133, 134], "durat": 15, "int64": [16, 19, 21, 25, 98, 111, 124, 125, 166], "discret": [16, 19, 21, 25, 108, 124, 125, 129], "spec": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 86, 87, 88, 89, 98, 109, 110, 111, 113, 118, 119, 120, 124, 125, 164, 166, 169, 171, 174], "vector": [16, 25, 92, 94, 102, 142, 148, 149], "assert_is_in": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "belong": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "box": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "rais": [16, 17, 18, 19, 21, 22, 23, 24, 25, 32, 33, 47, 48, 50, 51, 63, 77], "except": [16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 32, 33, 47, 63, 108, 119], "otherwis": [16, 17, 18, 19, 21, 22, 23, 24, 25, 32, 33, 47, 48, 50, 51, 74, 77, 80, 117, 121, 134, 154], "encod": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 98, 107, 108, 111, 112, 124, 125], "val": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "ndarrai": [16, 17, 18, 19, 21, 23, 24, 25, 26, 32, 33, 48], "correspond": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 36, 47, 48, 49, 50, 51, 74, 77, 80, 110], "np": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 48], "slice": [16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 32, 33], "tensor_to_index": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "is_in": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "map": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 39, 47, 48, 50, 51, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 87, 88, 89, 110, 118, 120, 124, 155], "back": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 110, 118], "heurist": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "rand": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 49, 90, 119], "uniform": [16, 17, 18, 19, 21, 23, 24, 25, 26, 30, 32, 33, 36], "unbound": [16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 32, 33], "size": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 59, 70, 74, 75, 77, 78, 79, 87, 88, 89, 90, 91, 96, 98, 101, 102, 108, 109, 110, 111, 112, 113, 116, 118, 120, 122, 124, 125, 139, 150, 155, 164, 166, 169, 171, 174], "to_numpi": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "transformed_in": [16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 32, 33, 76, 77, 116, 180], "type_check": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "whose": [16, 17, 18, 19, 21, 22, 23, 24, 25, 32, 33, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "point": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 36, 43, 44, 47, 48, 50, 51, 58, 61, 70, 74, 75, 77, 79, 103, 118, 129, 141, 142, 158, 182], "fill": [16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 32, 33, 74], "minimum": [17, 23, 72, 99, 109, 116, 117, 121, 134, 150], "float": [17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 36, 47, 48, 50, 51, 61, 62, 67, 70, 72, 73, 74, 75, 77, 79, 80, 96, 99, 104, 105, 112, 113, 116, 118, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 155, 156], "unidimension": [17, 25, 33], "upper": [17, 23], "composit": 18, "effect": [18, 22, 47, 48, 50, 51, 77, 158], "cannot": 18, "pixels_spec": 18, "ndboundedtensorspec": [18, 87, 88, 89, 109], "32": [18, 91, 92, 93, 100, 102, 106, 107], "observation_vector_spec": 18, "33": [18, 22, 47, 48, 50, 51, 91, 102], "composite_spec": 18, "observation_vector": [18, 59, 164, 169, 171, 174], "td": [18, 20, 28, 29, 52, 53, 54, 55, 59, 62, 67, 75, 77, 80, 85, 86, 87, 88, 89, 90, 98, 103, 109, 110, 111, 118, 119, 120, 122, 124, 125, 141, 142, 145, 146, 148, 149, 150, 157, 164, 166, 169, 171, 174], "batch_siz": [18, 20, 26, 27, 28, 29, 31, 34, 35, 47, 49, 74, 87, 88, 89, 90, 98, 109, 110, 111, 118, 120, 122, 124, 125, 150, 155, 164, 166, 169, 171, 174], "within": [18, 22, 35, 47, 48, 50, 51, 70, 76, 78, 79, 80, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "randn": [18, 20, 28, 29, 67, 86, 87, 88, 89, 98, 101, 109, 110, 111, 118, 120, 122, 124, 125, 157], "td_project": 18, "modif": [18, 20, 22, 28, 29, 47, 48, 50, 51], "after": [18, 20, 22, 28, 29, 47, 48, 50, 51, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 104], "float32": [18, 20, 26, 28, 29, 32, 36, 49, 62, 74, 75, 87, 88, 89, 90, 98, 109, 110, 111, 118, 120, 122, 124, 125, 164, 166, 169, 171, 174], "is_shar": [18, 20, 28, 29, 49, 74, 80, 87, 90, 98, 109, 110, 111, 118, 120, 164, 166, 169, 171, 174], "ani": [18, 20, 22, 26, 27, 28, 29, 30, 31, 34, 35, 39, 40, 41, 42, 43, 44, 47, 48, 50, 51, 70, 77, 80, 91, 102, 105, 118, 120, 132, 155, 158, 182], "selected_kei": [18, 50, 51], "altern": [19, 20, 28, 29], "onehottensorspec": 19, "categor": [19, 25, 108, 124, 125], "memori": [19, 20, 22, 28, 29, 39, 47, 48, 50, 51, 61, 70, 74, 77, 79, 80, 118, 180], "larg": 19, "action_valu": [19, 25, 98, 111, 124, 125, 166], "arang": [19, 25, 98, 124, 150], "view": [19, 20, 22, 25, 28, 29, 47, 48, 50, 51, 102, 124], "argmax": [19, 98, 111, 124, 125], "dim": [19, 20, 28, 29, 59, 115, 180], "chosen_action_valu": [19, 25, 111, 166], "11": [19, 25, 75, 90], "outcom": [19, 25, 96, 116], "stack_dim": 20, "lazi": [20, 50, 51, 70, 104, 110, 118, 120], "behaviour": [20, 48, 59, 117, 121, 154], "put": [20, 48, 80, 180], "instanti": [20, 26, 27, 30, 50, 51, 76, 155], "seamlessli": 20, "affect": [20, 22, 47, 48, 50, 51, 76, 77], "dimens": [20, 22, 28, 29, 58, 59, 64, 75, 78, 91, 102, 104, 105, 114, 115, 116, 117, 126, 129, 131, 132, 133, 134, 180], "ndimens": 20, "along": [20, 28, 29, 58, 59, 75, 102, 105, 110, 118], "_": [20, 28, 29, 59, 62, 67, 75, 80, 98, 110, 111, 118, 120, 124, 125], "td_stack": 20, "non": [20, 22, 26, 28, 29, 30, 47, 48, 50, 51, 57, 61, 70, 74, 77, 79, 118], "null": [20, 26, 28, 29, 30, 36, 57], "upon": [20, 28, 29], "appli": [20, 22, 28, 29, 47, 48, 50, 51, 77, 117], "fn": [20, 22, 28, 29, 47, 48, 50, 51, 178, 179], "inplac": [20, 22, 28, 29, 47, 48, 50, 51], "desir": [20, 22, 28, 29, 46, 47, 48, 50, 51, 61, 70, 74, 77, 79, 84, 91, 102, 110, 118], "made": [20, 28, 29, 39, 40, 41, 42], "apply_": [20, 28, 29], "copi": [20, 22, 28, 29, 47, 48, 50, 51, 77], "batch_dim": [20, 28, 29, 180], "describ": [20, 28, 29, 32, 59, 76, 116, 117, 169], "control": [20, 28, 29, 50, 51, 52, 53, 92, 93, 94, 95, 103, 113, 126, 131, 132, 135, 140, 143, 144, 147, 164], "user": [20, 22, 28, 29, 47, 48, 50, 51, 77, 101, 177], "infer": [20, 28, 29, 50, 51, 80, 104, 134], "tupl": [20, 22, 26, 28, 29, 34, 47, 48, 50, 51, 92, 101, 102, 110, 118, 120, 127, 165, 167, 170, 173], "tendordict": [20, 28, 29], "clone": [20, 28, 29, 87, 88, 89, 110, 118, 119, 120, 169, 171, 174], "recurs": [20, 22, 28, 29, 47, 48, 50, 51], "onto": [20, 25, 28, 29, 85, 110, 118], "contigu": [20, 28, 29, 110, 118, 120], "type": [20, 22, 28, 29, 32, 47, 48, 49, 50, 51, 61, 70, 74, 77, 79, 80, 91, 102, 105, 110, 118, 164, 166, 169, 171, 174, 178], "alreadi": [20, 22, 28, 29, 47, 48, 50, 51, 110], "copy_": [20, 28, 29], "update_": [20, 28, 29], "copy_at_": [20, 28, 29], "idx": [20, 22, 28, 29, 47, 48, 50, 51], "update_at_": [20, 28, 29], "cast": [20, 22, 28, 29, 47, 48, 50, 51, 61, 70, 74, 77, 79, 80, 118, 164, 166, 169, 171, 174], "del_": [20, 28, 29], "delet": [20, 28, 29, 59], "detach": [20, 22, 28, 29, 47, 48, 50, 51, 77], "gradient": [20, 22, 28, 29, 47, 48, 50, 51, 77, 105, 117, 121, 139, 140, 141, 142, 158], "detach_": [20, 28, 29], "doe": [20, 26, 28, 29, 30, 36, 42, 104, 120, 126, 131, 132, 139, 158], "empti": [20, 28, 29, 70, 77, 79], "expand": [20, 28, 29, 45, 46, 110, 118, 120], "practic": [20, 28, 117, 121, 182], "amend": [20, 28], "5": [20, 28, 29, 45, 46, 90, 91, 98, 99, 102, 111, 117, 119, 121, 124, 125, 131], "td_expand": [20, 28], "fill_": [20, 22, 28, 29, 47, 48, 50, 51], "reman": [20, 28, 29], "memmaptensor": [20, 28, 29, 45, 46], "_no_default_": [20, 28, 29], "get_at": [20, 28, 29], "retriev": [20, 28, 29, 34, 35, 47, 48, 50, 51, 59, 85, 90, 110, 126, 131, 132, 140, 141, 142, 164, 166, 169, 171, 174, 180], "present": [20, 22, 26, 28, 29, 36, 47, 48, 50, 51, 92, 93, 94, 95, 100, 105, 118, 120, 126, 129, 131, 132, 133, 134, 180], "get_sub_tensordict": [20, 28, 29], "subtensordict": [20, 29], "is_contigu": [20, 28, 29], "is_memmap": [20, 28, 29], "no_check": [20, 28, 29], "cach": [20, 28, 29, 70, 77, 79, 151], "share": [20, 28, 29, 39, 40, 41, 42, 50, 51, 80, 87, 88, 89, 118, 122, 124, 125, 180], "alwai": [20, 22, 28, 29, 47, 48, 50, 51, 66], "pair": [20, 22, 28, 29, 30, 47, 48, 50, 51, 87, 110], "items_meta": [20, 28, 29], "make_unset": [20, 28, 29], "metatensor": [20, 28, 29], "masked_fil": [20, 28, 29], "mask": [20, 28, 29], "out": [20, 22, 28, 29, 47, 48, 50, 51, 104, 105, 110, 118, 137, 138], "td1": [20, 28, 29], "masked_fill_": [20, 28, 29], "masked_select": [20, 28, 29], "similar": [20, 22, 28, 29, 47, 48, 50, 51, 61, 70, 74, 77, 79, 80, 85, 110, 118], "td_mask": [20, 28, 29], "memmap_": [20, 28, 29, 80], "prefix": [20, 22, 28, 29, 47, 48, 50, 51, 77, 80, 85], "lock": [20, 28, 29, 80], "memmap": [20, 28, 29, 39, 50, 51, 80], "prevent": [20, 28, 29, 110, 117, 118, 120, 121, 131, 132], "overwrit": [20, 28, 29], "numel": [20, 28, 29], "element": [20, 21, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 39, 40, 41, 91, 118, 150, 155], "permut": [20, 28, 29], "dims_list": [20, 28, 29], "permutedtensordict": [20, 28, 29], "op": [20, 28, 29, 66, 159], "rename_kei": [20, 28, 29], "old_kei": [20, 28, 29], "new_kei": [20, 28, 29], "renam": [20, 28, 29, 85], "string": [20, 22, 28, 29, 47, 48, 50, 51, 110, 157, 169, 171, 174], "thrown": [20, 22, 28, 29, 47, 48, 50, 51], "reshap": [20, 28, 29, 102], "select": [20, 27, 28, 29, 30, 31, 34, 35, 50, 51, 66, 90, 120, 155, 157], "either": [20, 22, 28, 29, 47, 48, 50, 51, 164], "prune": [20, 28, 29], "set_": [20, 28, 29], "storag": [20, 22, 26, 27, 28, 29, 30, 31, 34, 35, 39, 40, 41, 47, 48, 50, 51, 155], "set_at_": [20, 28, 29], "share_memory_": [20, 22, 28, 29, 47, 48, 50, 51], "squeez": [20, 28, 29, 91, 114, 115], "compris": [20, 28, 29], "singleton": [20, 28, 29, 91, 102, 114, 115], "dest": [20, 28, 29, 45, 61, 70, 79, 118], "permit": [20, 28, 29, 50, 51], "destin": [20, 22, 28, 29, 47, 48, 50, 51, 77, 85], "to_dict": [20, 28, 29], "to_tensordict": [20, 28, 29], "unbind": [20, 28, 29], "unsqueez": [20, 28, 29, 59, 75, 78, 101], "input_dict_or_td": [20, 28, 29], "keyword": [20, 22, 28, 29, 47, 48, 50, 51, 61, 70, 74, 77, 79, 110, 118, 177], "unlik": [20, 28, 29, 110, 118, 120, 129, 132], "throw": [20, 22, 28, 29, 47, 48, 50, 51], "unknown": [20, 28, 29], "values_meta": [20, 28, 29], "td_view": [20, 28, 29], "12": [20, 28, 29], "zero_": [20, 28, 29], "nvec": 21, "use_regist": [21, 25], "concaten": [21, 58, 59, 76, 102, 120], "hot": [21, 25, 98, 108, 111, 124, 125], "cardin": [21, 124, 125], "gamma": [22, 126, 127, 128, 129, 131, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 176], "reward": [22, 32, 47, 48, 49, 50, 51, 57, 61, 62, 70, 72, 73, 76, 77, 78, 79, 80, 85, 90, 127, 128, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 156, 180], "sutton": 22, "r": [22, 67, 110, 139], "1988": 22, "predict": [22, 99, 103, 129, 134, 139], "tempor": [22, 141], "44": 22, "discount": [22, 126, 127, 128, 129, 131, 132, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "factor": [22, 105, 117, 121, 126, 127, 128, 129, 131, 132, 133], "ahead": 22, "add_modul": [22, 47, 48, 50, 51], "add": [22, 26, 27, 30, 31, 34, 35, 43, 44, 47, 48, 50, 51, 104, 155], "child": [22, 47, 48, 50, 51], "current": [22, 47, 48, 50, 51, 77, 82, 99, 101, 113, 124, 125, 169], "attribut": [22, 47, 48, 50, 51, 70, 110], "submodul": [22, 47, 48, 50, 51], "children": [22, 47, 48, 50, 51], "typic": [22, 47, 48, 50, 51], "nn": [22, 47, 48, 49, 50, 51, 61, 70, 74, 77, 79, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 109, 110, 111, 118, 119, 120, 122, 124, 125, 171, 174, 176], "init": [22, 47, 48, 50, 51], "no_grad": [22, 47, 48, 50, 51], "init_weight": [22, 47, 48, 50, 51], "m": [22, 47, 48, 50, 51, 110], "linear": [22, 47, 48, 49, 50, 51, 61, 70, 74, 77, 79, 86, 87, 88, 89, 90, 91, 102, 104, 105, 109, 111, 112, 113, 118, 119, 120, 122, 124, 125, 176], "net": [22, 47, 48, 50, 51, 101, 110, 133, 171, 176], "in_featur": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 87, 91, 92, 93, 94, 95, 101, 102, 104, 105, 118], "out_featur": [22, 47, 48, 49, 50, 51, 61, 70, 74, 77, 79, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 104, 105, 118], "bia": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 91, 99, 102, 104, 105, 118, 119], "requires_grad": [22, 47, 48, 50, 51], "bfloat16": [22, 47, 48, 50, 51], "datatyp": [22, 47, 48, 50, 51], "direct": [22, 47, 48, 50, 51], "member": [22, 47, 48, 50, 51], "xdoctest": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "skip": [22, 47, 48, 50, 51, 77, 110, 152, 154], "buf": [22, 47, 48, 50, 51], "20l": [22, 47, 48, 50, 51], "1l": [22, 47, 48, 50, 51], "5l": [22, 47, 48, 50, 51], "immedi": [22, 47, 48, 50, 51, 139], "move": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 80, 102, 118, 156], "associ": [22, 47, 48, 50, 51, 112, 180], "construct": [22, 47, 48, 50, 51, 110, 113, 158, 169], "optim": [22, 47, 48, 50, 51, 90, 104, 105, 132, 134, 158, 169, 176], "doubl": [22, 24, 33, 47, 48, 50, 51, 61, 62, 70, 74, 75, 77, 79, 118, 128, 129, 130, 133, 135], "eval": [22, 47, 48, 50, 51, 77, 80], "evalu": [22, 47, 48, 50, 51, 77, 96, 108, 121, 133, 162, 163], "certain": [22, 47, 48, 50, 51, 77, 131], "particular": [22, 47, 48, 50, 51, 77], "behavior": [22, 47, 48, 50, 51, 77], "dropout": [22, 47, 48, 50, 51, 77], "batchnorm": [22, 47, 48, 50, 51, 77], "disabl": [22, 47, 48, 50, 51, 77, 117, 121], "comparison": [22, 47, 48, 50, 51, 77], "sever": [22, 47, 48, 50, 51, 59, 77, 132], "mechan": [22, 47, 48, 50, 51, 77], "confus": [22, 47, 48, 50, 51, 77], "extra_repr": [22, 47, 48, 50, 51], "extra": [22, 47, 48, 50, 51, 80], "represent": [22, 47, 48, 50, 51, 70, 79], "custom": [22, 47, 48, 50, 51, 180], "forward": [22, 47, 48, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 107, 110, 112, 113, 115, 118, 119, 120, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 140, 141, 142], "tennsordict": 22, "next_": [22, 47, 48, 50, 51, 80, 85], "shift": 22, "nontermin": 22, "termin": 22, "original_reward": 22, "previou": [22, 113], "newli": 22, "get_buff": [22, 47, 48, 50, 51], "target": [22, 45, 46, 47, 48, 50, 51, 76, 110, 118, 127, 128, 129, 130, 131, 133, 134, 135, 139, 160, 175, 176], "docstr": [22, 47, 48, 50, 51], "get_submodul": [22, 47, 48, 50, 51], "explan": [22, 47, 48, 50, 51], "how": [22, 26, 30, 36, 47, 48, 50, 51, 126, 130, 131, 132, 158, 182], "fulli": [22, 47, 48, 50, 51], "qualifi": [22, 47, 48, 50, 51], "referenc": [22, 47, 48, 50, 51], "attributeerror": [22, 47, 48, 50, 51], "invalid": [22, 47, 48, 50, 51], "resolv": [22, 47, 48, 50, 51], "someth": [22, 47, 48, 50, 51, 182], "get_extra_st": [22, 47, 48, 50, 51, 80], "set_extra_st": [22, 47, 48, 50, 51, 80], "pickleabl": [22, 47, 48, 50, 51, 80], "ensur": [22, 26, 30, 36, 47, 48, 50, 51, 70, 80], "serial": [22, 47, 48, 50, 51, 80], "break": [22, 47, 48, 50, 51, 80], "pickl": [22, 47, 48, 50, 51, 80], "get_paramet": [22, 47, 48, 50, 51], "sai": [22, 47, 48, 50, 51], "net_b": [22, 47, 48, 50, 51], "net_c": [22, 47, 48, 50, 51], "conv": [22, 47, 48, 50, 51, 91], "conv2d": [22, 47, 48, 50, 51, 91], "16": [22, 47, 48, 50, 51], "kernel_s": [22, 47, 48, 50, 51, 91, 92, 93], "stride": [22, 47, 48, 50, 51, 91, 92, 93, 100], "100": [22, 47, 48, 50, 51, 67, 84, 151, 158, 176], "diagram": [22, 47, 48, 50, 51], "show": [22, 47, 48, 50, 51], "nest": [22, 47, 48, 50, 51], "itself": [22, 47, 48, 50, 51], "two": [22, 47, 48, 50, 51, 95, 110, 114, 131, 134, 136, 154, 158, 169, 171, 174], "would": [22, 47, 48, 50, 51, 102], "degre": [22, 47, 48, 50, 51], "named_modul": [22, 47, 48, 50, 51], "achiev": [22, 47, 48, 50, 51], "o": [22, 47, 48, 50, 51], "transit": [22, 47, 48, 50, 51], "half": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "ipu": [22, 47, 48, 50, 51], "strict": [22, 47, 48, 50, 51, 77], "descend": [22, 47, 48, 50, 51, 77], "exactli": [22, 47, 48, 50, 51, 77, 119], "persist": [22, 47, 48, 50, 51, 77], "strictli": [22, 47, 48, 50, 51, 77], "enforc": [22, 47, 48, 50, 51, 77], "missing_kei": [22, 47, 48, 50, 51, 77], "unexpected_kei": [22, 47, 48, 50, 51, 77], "unexpect": [22, 47, 48, 50, 51, 77], "namedtupl": [22, 47, 48, 50, 51, 77], "regist": [22, 25, 47, 48, 50, 51, 70, 76, 77, 78, 79, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "network": [22, 47, 48, 50, 51, 84, 87, 88, 89, 91, 92, 93, 94, 95, 97, 99, 100, 102, 105, 106, 107, 112, 113, 114, 118, 127, 128, 129, 130, 133, 134, 135, 137, 164, 169, 175, 176], "duplic": [22, 47, 48, 50, 51, 128, 129], "l": [22, 47, 48, 50, 51, 139], "enumer": [22, 47, 48, 50, 51], "named_buff": [22, 47, 48, 50, 51], "remove_dupl": [22, 47, 48, 50, 51], "prepend": [22, 47, 48, 50, 51], "running_var": [22, 47, 48, 50, 51], "named_children": [22, 47, 48, 50, 51], "conv4": [22, 47, 48, 50, 51], "conv5": [22, 47, 48, 50, 51], "memo": [22, 47, 48, 50, 51], "named_paramet": [22, 47, 48, 50, 51], "param": [22, 47, 48, 49, 50, 51, 96, 109, 110, 111, 116, 118, 119, 120, 122, 124, 125, 135, 138, 140, 141, 142, 164], "register_backward_hook": [22, 47, 48, 50, 51], "removablehandl": [22, 47, 48, 50, 51], "deprec": [22, 47, 48, 50, 51, 77, 88], "favor": [22, 47, 48, 50, 51], "register_full_backward_hook": [22, 47, 48, 50, 51], "futur": [22, 47, 48, 50, 51, 70, 77, 79, 102, 182], "handl": [22, 47, 48, 50, 51, 80, 102, 158, 178, 179], "register_buff": [22, 47, 48, 50, 51], "consid": [22, 47, 48, 50, 51, 96, 116], "running_mean": [22, 47, 48, 50, 51], "save": [22, 29, 47, 48, 50, 51, 158], "alongsid": [22, 47, 48, 50, 51], "latter": [22, 47, 48, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 178, 179], "num_featur": [22, 47, 48, 50, 51], "register_forward_hook": [22, 47, 48, 50, 51, 124, 125], "signatur": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "posit": [22, 47, 48, 50, 51, 77, 78], "won": [22, 29, 47, 48, 50, 51, 70, 79, 158, 180], "fire": [22, 47, 48, 50, 51], "register_module_forward_hook": [22, 47, 48, 50, 51], "register_forward_pre_hook": [22, 47, 48, 50, 51], "invok": [22, 47, 48, 50, 51], "forward_pr": [22, 47, 48, 50, 51], "register_module_forward_pre_hook": [22, 47, 48, 50, 51], "respect": [22, 47, 48, 50, 51, 57, 61, 70, 74, 77, 79, 113, 118, 122], "grad_input": [22, 47, 48, 50, 51], "grad_output": [22, 47, 48, 50, 51], "subsequ": [22, 29, 47, 48, 50, 51, 120], "entri": [22, 47, 48, 50, 51], "technic": [22, 47, 48, 50, 51], "reason": [22, 47, 48, 50, 51, 70], "receiv": [22, 47, 48, 50, 51, 76, 102], "similarli": [22, 47, 48, 50, 51, 120], "caller": [22, 47, 48, 50, 51], "register_module_full_backward_hook": [22, 47, 48, 50, 51], "register_full_backward_pre_hook": [22, 47, 48, 50, 51], "backward_pr": [22, 47, 48, 50, 51], "register_module_full_backward_pre_hook": [22, 47, 48, 50, 51], "register_load_state_dict_post_hook": [22, 47, 48, 50, 51], "post": [22, 47, 48, 50, 51], "incompatible_kei": [22, 47, 48, 50, 51], "consist": [22, 47, 48, 50, 51, 91, 102, 110], "addit": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "clearn": [22, 47, 48, 50, 51], "avoid": [22, 47, 48, 50, 51, 77, 80, 118, 160], "register_modul": [22, 47, 48, 50, 51], "alia": [22, 47, 48, 50, 51], "register_paramet": [22, 47, 48, 50, 51], "requires_grad_": [22, 47, 48, 50, 51], "autograd": [22, 47, 48, 50, 51, 77], "record": [22, 47, 48, 50, 51, 132, 176], "freez": [22, 47, 48, 50, 51], "finetun": [22, 47, 48, 50, 51], "individu": [22, 47, 48, 50, 51], "gan": [22, 47, 48, 50, 51], "share_memori": [22, 47, 48, 50, 51], "keep_var": [22, 47, 48, 50, 51, 77], "averag": [22, 47, 48, 50, 51, 77, 80, 156], "shallow": [22, 47, 48, 50, 51, 77], "pleas": [22, 47, 48, 50, 51, 77, 182], "non_block": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "memory_format": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "channels_last": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "Its": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "complex": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "integr": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 95, 118], "unchang": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "tri": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "convert": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 80, 118], "host": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "pin": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "4d": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "ignore_w": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "determinist": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 86, 99, 106, 110, 113, 118], "1913": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "3420": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "5113": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "2325": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "float64": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "torch_doctest_cuda1": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "gpu1": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "1914": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "5112": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "2324": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "float16": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "cdoubl": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "3741": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "j": [22, 26, 36, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "2382": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "5593": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "4443": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "complex128": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "6122": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "1150": [22, 47, 48, 50, 51, 61, 70, 74, 77, 79, 118], "to_empti": [22, 47, 48, 50, 51], "dst_type": [22, 47, 48, 50, 51], "xpu": [22, 47, 48, 50, 51], "zero_grad": [22, 47, 48, 50, 51], "set_to_non": [22, 47, 48, 50, 51], "under": [22, 47, 48, 50, 51, 110, 118], "context": [22, 47, 48, 50, 51, 104, 137, 138, 140, 143, 144, 147, 154], "grad": [22, 47, 48, 50, 51], "dimension": [23, 24, 140, 143, 144, 147], "By": [25, 28, 48, 50, 51, 110, 154, 180], "keepdim": 25, "sum": [25, 48, 139], "user_regist": 25, "experiment": [25, 110], "appear": 25, "priori": 25, "definit": [25, 42], "uniqu": 25, "discretebox": 25, "alpha": [26, 30, 36, 91, 133, 134], "beta": [26, 30, 36, 131], "ep": [26, 30, 36, 80, 119, 126, 135, 156], "1e": [26, 30, 36, 80, 96, 99, 116], "08": [26, 30, 36], "collate_fn": [26, 27, 30, 31, 34, 155], "prefetch": [26, 27, 30, 31, 34, 155], "priorit": [26, 30, 36, 127, 128, 133, 134], "schaul": [26, 36], "quan": [26, 36], "antonogl": [26, 36], "silver": [26, 36], "d": [26, 36, 110], "2015": [26, 36], "experi": [26, 36, 182], "arxiv": [26, 36, 58, 70, 92, 93, 94, 95, 99, 100, 105, 106, 107, 112, 113, 124, 129, 130, 132, 134, 135, 140, 143, 144, 147, 164, 169, 174], "org": [26, 36, 58, 70, 92, 93, 94, 95, 99, 100, 105, 106, 107, 112, 113, 124, 129, 130, 132, 134, 135, 140, 143, 144, 147, 164, 169, 174], "ab": [26, 36, 70, 80, 99, 100, 105, 106, 107, 112, 113, 130, 132, 169], "1511": [26, 36, 100], "05952": [26, 36], "expon": [26, 30, 36], "\u03b1": [26, 30, 36], "determin": [26, 30, 36, 70, 79], "delta": [26, 30, 36, 110, 116], "prioriti": [26, 30, 35, 36, 39, 40, 41, 42, 127, 128, 133, 134], "merg": [26, 27, 30, 34, 155], "mini": [26, 27, 30, 34, 155], "style": [26, 27, 30, 34, 155], "rb": [26, 27, 30, 34, 155], "multithread": [26, 27, 30, 34, 155], "liststorag": [26, 27, 30, 34, 155], "extend": [26, 27, 30, 31, 34, 35, 43, 44, 155], "gather": [26, 30, 139, 161, 182], "multinomi": [26, 30], "update_prior": [26, 30, 36], "circular": [27, 155], "randomli": [27, 31, 66, 74, 110, 155], "td_index": 28, "discard_idx_attr": 28, "keysview": [28, 29], "_run_check": [28, 29], "input_dict": 28, "fashion": 29, "least": 29, "arrai": 29, "th": 29, "addition": 29, "mani": [29, 126, 131, 132, 133], "limit": [29, 49, 50, 51], "transpos": 29, "expend": [29, 110], "td_unsqueez": 29, "a_view": 29, "td_cpu": 29, "td_savec": 29, "savedtensordict": 29, "disk": [29, 158], "td_or_dict": 29, "old_nam": 29, "new_nam": 29, "tensordict_list": 29, "td2": 29, "popul": [29, 74], "immut": [29, 47, 48, 50, 51, 77, 169], "td_unqueez": 29, "hasn": 29, "_meta_v": 29, "priority_kei": [30, 35, 128, 129, 134], "td_error": [30, 35, 127, 128, 129, 133, 134], "prioritizedreplaybuff": 30, "flaot": 30, "return_weight": 30, "_weight": 30, "replaybuff": [31, 35, 44, 172, 176], "meta": 32, "what": [32, 47, 48, 50, 51, 74, 182], "kind": [32, 85], "replay_buff": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 176], "rb_prototyp": [34, 35], "sampler": [34, 35, 36, 37, 39, 40, 41, 42], "writer": [34, 43], "max_siz": [34, 39, 41, 42], "1_000": 34, "randomsampl": 34, "roundrobinwrit": 34, "kw": [35, 43], "include_info": 35, "max_capac": 36, "uniformli": 37, "scratch_dir": 39, "attach": [39, 40, 41, 42], "entiti": [39, 40, 41, 42], "eg": [39, 40, 41, 42], "alloc": 40, "__len__": 42, "roundrobin": 43, "insert": [43, 44, 78], "piec": [43, 44], "_inplace_upd": [47, 50, 51, 77], "_batch_lock": [47, 50, 51, 77], "observation_spec": [47, 49, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 74, 75, 76, 77, 78, 79, 90, 161, 176], "compositespec": [47, 49, 74, 86, 90, 109, 120], "action_spec": [47, 48, 49, 50, 51, 77, 84, 86, 98, 109, 111, 113, 124, 125, 176], "input_spec": [47, 49, 50, 51, 61, 62, 70, 76, 77, 78, 79, 90], "reward_spec": [47, 49, 57, 61, 62, 70, 72, 73, 76, 77, 78, 79, 90], "is_don": [47, 49], "run_type_check": [47, 49], "compar": [47, 154], "rand_step": [47, 48, 49, 50, 51, 52, 53, 54, 55, 80], "batch_lock": [47, 48, 50, 51, 77], "environn": [47, 48, 49, 50, 51, 77], "fake_tensordict": [47, 48, 50, 51], "fake": [47, 48, 50, 51], "overridden": [47, 48, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "although": [47, 48, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "recip": [47, 48, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "afterward": [47, 48, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "former": [47, 48, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "care": [47, 48, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "silent": [47, 48, 50, 51, 70, 76, 78, 79, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "info": [47, 48, 50, 51, 81], "execute_step": [47, 48, 50, 51], "As": [47, 48, 50, 51, 110], "_step": [47, 48, 50, 51], "privat": [47, 48, 50, 51], "_reset": [47, 48, 49, 50, 51, 90], "overwritten": [47, 48, 50, 51, 85, 119], "step_mdp": [47, 48, 50, 51], "herebi": [47, 48, 50, 51], "max_step": [47, 48, 49, 50, 51, 84, 85], "callback": [47, 48, 50, 51], "auto_reset": [47, 48, 50, 51], "auto_cast_to_devic": [47, 48, 50, 51], "break_when_any_don": [47, 48, 50, 51], "return_contigu": [47, 48, 50, 51], "soon": [47, 48, 50, 51], "smaller": [47, 48, 50, 51], "automat": [47, 48, 50, 51, 86, 109], "lazystackedtensordict": [47, 48, 50, 51], "concomitt": [47, 48, 50, 51], "eras": [47, 48, 50, 51], "workspac": [47, 48, 50, 51], "carri": [47, 48, 50, 51], "taken": [47, 48, 50, 51], "discard": [48, 85], "info_dict_read": 48, "set_info_dict_read": 48, "next_observ": [48, 80, 85, 101, 164, 169, 171, 174], "next_observation_": 48, "read_act": 48, "read_don": 48, "reader": 48, "frame_skip": [48, 52, 53, 54, 152, 154, 160], "broken": 48, "read_ob": 48, "dictat": [48, 110], "inner": [48, 110], "read_reward": 48, "total_reward": 48, "step_reward": 48, "far": [48, 117, 121], "baseinfodictread": 48, "info_dict": 48, "hoc": 48, "manner": [48, 70], "dict_read": 48, "gymwrapp": 48, "default_info_dict_read": 48, "my_info_kei": 48, "some_env": 48, "meant": 49, "world": 49, "safeti": 49, "constraint": 49, "behav": [49, 108, 119], "classic": 49, "directli": [49, 180], "ndunboundedcontinuoustensorspec": [49, 74, 86, 87, 88, 89, 90, 110, 118, 119, 120, 122], "mymbenv": [49, 90], "world_model": [49, 90], "super": [49, 90, 122, 124], "next_hidden_observ": [49, 90], "hidden_observ": [49, 90], "mlp": [49, 87, 90, 91, 92, 93, 94, 95, 98, 101, 169, 171, 174], "worldmodelwrapp": [49, 90], "tensordictmodul": [49, 87, 88, 89, 90, 103, 109, 110, 119, 120, 126, 127, 131, 132, 133, 134, 139, 140, 141, 142, 154, 162, 163, 176], "activation_class": [49, 90, 91, 92, 93, 94, 95, 99, 100, 102], "relu": [49, 90], "activate_last_lay": [49, 90, 95, 102], "depth": [49, 90, 91, 92, 93, 94, 95, 98, 99, 100, 102, 106, 107], "in_kei": [49, 86, 87, 88, 89, 90, 109, 110, 118, 119, 120, 122, 127, 128, 171, 174, 176], "out_kei": [49, 50, 51, 59, 86, 87, 89, 90, 109, 110, 118, 119, 120, 122, 124, 125, 154, 176], "remot": [50, 51], "equal": [50, 51, 66, 91, 97, 102, 136, 150, 178, 179], "my_env_fun": [50, 51], "custom_attribute_list": [50, 51], "custom_attribut": [50, 51], "custom_method_list": [50, 51], "custom_method": [50, 51], "num_work": [50, 51], "deploi": [50, 51], "simultan": [50, 51], "creation": [50, 51], "divers": [50, 51], "slight": [50, 51], "overhead": [50, 51], "env_input_kei": [50, 51], "drastic": [50, 51], "decreas": [50, 51], "io": [50, 51], "burden": [50, 51], "stateless": [50, 51, 76], "_batchedenv": [50, 51], "might": [50, 51, 182], "next_pixel": [50, 51, 70, 75, 79], "next_vector": [50, 51], "interest": [50, 51, 110], "amount": [50, 51], "occupi": [50, 51], "excluded_kei": [50, 51], "exclud": [50, 51], "share_individual_td": [50, 51], "shared_memori": [50, 51], "policy_proof": [50, 51], "ll": [50, 51], "hidden": [50, 51, 87, 88, 89, 99, 101, 106, 107, 110, 112, 113, 118, 120, 169], "allow_step_when_don": [50, 51], "encount": [50, 51, 182], "update_kwarg": [50, 51], "dm_control": [52, 53], "env_nam": [52, 54], "task_nam": 52, "from_pixel": [52, 53, 169, 171, 174], "cheetah": [52, 53], "suit": 53, "model_bas": [56, 90], "dreamer": [56, 99], "keys_in": [57, 58, 59, 60, 62, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 79, 80], "keys_out": [57, 68, 70, 71, 72, 75, 76, 79], "transform_reward_spec": [57, 61, 62, 70, 72, 73, 76, 78, 79], "cat_dim": 58, "success": [58, 76], "account": 58, "movement": 58, "veloc": 58, "propos": [58, 103, 130, 135, 171, 174], "plai": 58, "atari": 58, "pdf": [58, 92, 93, 94, 95, 124, 129, 133, 134, 135, 140, 143, 144, 147, 164, 171, 174], "1312": 58, "5602": 58, "tranform": [58, 61, 70, 74, 76, 79, 81], "transform_observation_spec": [58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 74, 75, 76, 78, 79], "next_observation_vector": [59, 164, 169, 171, 174], "del_kei": 59, "unsqueeze_if_oor": 59, "observation_posit": 59, "observation_veloc": 59, "key1": [59, 150, 157], "key2": [59, 150, 157], "w": [60, 71, 75], "crop": 60, "center": 60, "width": [60, 71], "height": [60, 71], "squar": [60, 117, 121], "chain": [61, 91, 120], "rewardsc": [61, 77], "rewardclip": 61, "transformed_env": [61, 76, 77], "transformedenv": [61, 66, 74, 76, 80, 164, 166, 169, 171, 174], "transform_input_spec": [61, 62, 70, 76, 78, 79], "keys_inv_in": [62, 76], "next_ob": [62, 67], "finit": 63, "first_dim": 64, "last_dim": 64, "flatten": 64, "adjac": 64, "turn": [65, 154], "noop": 66, "30": [66, 112, 113], "noop_max": 66, "loc": [67, 73, 87, 89, 109, 110, 117, 120, 121, 161, 169, 171, 174, 180], "scale": [67, 73, 87, 89, 99, 109, 110, 112, 113, 117, 120, 121, 156, 161, 169, 171, 174, 180], "standard_norm": 67, "affin": [67, 73], "layer": [67, 80, 91, 92, 93, 99, 102, 104, 105, 106, 107, 114, 115, 123], "normal": [67, 80, 91, 102, 110, 117, 121, 154, 156, 180], "ob": [67, 75, 122], "set_default_tensor_typ": 67, "doubletensor": 67, "std": [67, 80], "isclos": 67, "r3m": 70, "resnet": [70, 79], "visual": [70, 79], "embed": [70, 79, 87, 88, 89, 118], "ego4d": [70, 79], "paper": [70, 79, 130, 171, 174], "univers": [70, 79], "suraj": 70, "nair": 70, "aravind": 70, "rajeswaran": 70, "vikash": [70, 79], "kumar": [70, 79], "chelsea": 70, "finn": 70, "abhinav": 70, "gupta": 70, "2203": 70, "12601": 70, "_init": 70, "snippet": 70, "resenet50": 70, "append_transform": [70, 74], "model_nam": [70, 79], "resnet50": [70, 79], "resnet34": 70, "resnet18": 70, "left": [70, 79], "next_r3m_vec": 70, "feed": [70, 79], "244": [70, 79], "hub": [70, 79], "download_path": [70, 79], "tensor_pixels_kei": [70, 79], "interpol": 71, "bilinear": 71, "clamp_min": 72, "clamp_max": 72, "clip": [72, 126, 158], "clip_min": 72, "scalar": [72, 93, 95, 104, 105, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "clip_max": 72, "default_valu": 74, "primer": 74, "drawn": [74, 110], "rel": [74, 96, 116], "fix": [74, 134], "chosen": [74, 169, 171, 174], "base_env": 74, "mykei": 74, "dtype_or_devic": 74, "255": 75, "uint8": 75, "precis": 75, "ri": 75, "randint": 75, "keys_inv_out": 76, "principl": 76, "combin": 76, "cattransform": 76, "notabl": 76, "placehold": 77, "cache_spec": 77, "valid": [77, 91, 102, 131], "anymor": [77, 118], "unsqueeze_dim": 78, "vip": 79, "toward": 79, "implicit": 79, "jason": 79, "ma": 79, "shagun": 79, "sodhani": 79, "dinesh": 79, "jayaraman": 79, "osbert": 79, "bastani": 79, "ami": 79, "zhang": 79, "next_vip_vec": 79, "shared_td": 80, "decai": [80, 133, 156], "9999": 80, "0001": [80, 99, 156], "summari": 80, "statist": [80, 180], "fly": [80, 131], "substitut": 80, "to_observation_norm": 80, "rate": [80, 139], "99": [80, 126, 131, 132, 133, 134, 139, 176], "deviat": [80, 90, 99, 104, 105, 132], "numer": [80, 110, 117, 118, 121], "underflow": 80, "1000": [80, 110, 130, 176], "static": 80, "build_td_for_shared_vecnorm": 80, "keys_prefix": 80, "memmori": 80, "multiprocess": 80, "mp": 80, "queue": 80, "make_env": [80, 85, 162, 163], "td_share": 80, "v": [80, 101, 134], "observationnorm": [80, 180], "state_dim": [81, 112, 113], "action_dim": [81, 92, 94], "gsde": [81, 133, 180], "nois": [81, 105, 123, 133, 154, 180], "func": 81, "gsdemodul": 81, "probabilistictdmodul": [84, 102, 110, 128, 134, 139, 154], "default_interaction_mod": [84, 110], "next_tensordict": 85, "keep_oth": 85, "exclude_reward": 85, "exclude_don": 85, "exclude_act": 85, "reflect": [85, 160], "next_some_other_str": 85, "some_other_str": 85, "funtion": 85, "td_out": [85, 150, 157], "make_polici": 85, "next_td": 85, "append": 85, "translat": [86, 109], "td_modul": [86, 87, 88, 89, 109, 110, 118, 119, 120, 122], "critic": [87, 126, 131, 132, 134], "get_policy_oper": [87, 88, 89, 169], "alon": [87, 88, 89], "tdmodul": [87, 88, 89, 110, 176], "dedic": [87, 88, 89], "get_critic_oper": 87, "common_oper": [87, 89], "produc": [87, 89, 91, 102, 108, 110], "policy_oper": [87, 88, 89], "value_oper": [87, 88, 89], "tensordict_modul": [87, 88, 89, 109, 110, 111, 119, 120, 124, 125], "probabilisticactor": [87, 89, 134], "valueoper": [87, 88, 89, 126, 131, 132, 176], "tanhnorm": [87, 88, 89, 109, 110, 120], "normalparamwrapp": [87, 89, 109, 110, 120], "spec_hidden": [87, 89], "module_hidden": [87, 89], "td_module_hidden": [87, 89], "spec_act": [87, 88, 89], "8": [87, 88, 89, 91, 92, 93, 100, 102, 109, 110, 118, 120], "module_act": [87, 88, 89], "td_module_act": [87, 88, 89], "dist_in_kei": [87, 89, 109, 110, 120], "sample_out_kei": [87, 89, 109, 110, 120], "distribution_class": [87, 88, 89, 109, 110, 120], "return_log_prob": [87, 88, 89, 110, 120], "module_valu": [87, 88, 89], "num_cel": [87, 91, 92, 93, 94, 95, 99, 100, 102], "td_module_valu": [87, 88, 89], "state_action_valu": [87, 122, 139, 164, 171, 174, 176], "td_clone": [87, 88, 89], "sample_log_prob": [87, 88, 89, 110, 120, 169, 171], "tensordictmodulewrapp": [87, 162, 163, 176], "estim": [87, 88, 89, 126, 131, 132, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "get_value_oper": [87, 88, 89, 169], "probabilisticactor_deprec": 88, "state_valu": [88, 89, 122, 141, 142, 143, 144, 145, 147, 148, 169, 174], "tensordictsequenti": [88, 89], "planning_horizon": 90, "optim_step": 90, "num_candid": 90, "num_top_k_candid": 90, "reward_kei": 90, "action_kei": [90, 103], "cross": 90, "entropi": [90, 126, 131, 132, 133, 134], "botev": 90, "et": 90, "al": [90, 166], "2013": 90, "cem": 90, "plan": [90, 103], "gaussian": [90, 104, 105], "unit": [90, 99, 106, 107, 112, 113], "varianc": [90, 117, 121], "cumul": 90, "rank": 90, "top": 90, "k": 90, "episod": [90, 143, 144, 145, 146, 147, 148, 149], "repeat": 90, "empir": [90, 110], "maximis": [90, 92, 94], "horizon": 90, "modelbasedenv": 90, "mpc": [90, 103], "candid": 90, "modelbasedenvbas": [90, 103], "elu": [91, 92, 93, 94, 95, 99, 100], "activation_kwarg": [91, 102], "norm_class": [91, 92, 93, 102], "norm_kwarg": [91, 102], "bias_last_lay": [91, 92, 93, 94, 95, 100, 102], "aggregator_class": [91, 92, 93], "squashdim": [91, 92], "aggregator_kwarg": [91, 92, 93], "squeeze_output": [91, 92, 93], "convolut": [91, 92, 93, 114], "neural": [91, 114, 118], "len": [91, 102], "cell": [91, 102], "kernel": [91, 100, 101], "tanh": [91, 102, 116, 117, 121], "aggreg": [91, 92, 93, 120], "device_typ": [91, 92, 93, 94, 95, 100, 102, 104, 105], "cnet": 91, "34": [91, 102], "35": [91, 102], "possibli": [91, 110, 118, 158], "rectangular": 91, "conv_net_kwarg": [92, 93], "mlp_net_kwarg": [92, 93, 94], "use_avg_pool": [92, 93], "WITH": [92, 93, 94, 95, 135, 164], "1509": [92, 93, 94, 95, 130, 135, 164], "02971": [92, 93, 94, 95, 135, 164], "q": [92, 93, 94, 95, 97, 100, 124, 125, 127, 128, 129, 130, 133, 134, 171, 174], "convnet": 92, "64": [92, 93, 100], "ndims_in": 92, "avgpool": [92, 93], "128": 93, "adaptiveavgpool2d": 93, "400": [94, 95], "300": [94, 95, 169], "mlp_net_kwargs_net1": 95, "mlp_net_kwargs_net2": 95, "atol": [96, 116], "06": [96, 116], "rtol": [96, 116], "batch_shap": [96, 116], "event_shap": [96, 116], "absolut": [96, 116], "toler": [96, 116], "log_prob": [96, 108, 121], "log": [96, 108, 110, 121, 126, 129, 131, 132, 133, 134, 152, 153, 154, 158, 176], "probabl": [96, 108, 110, 121], "densiti": [96, 108, 121], "mass": [96, 108, 121], "rsampl": [96, 108, 110], "sample_shap": [96, 108], "reparameter": [96, 108], "dqnet": 97, "atom": 97, "action_spac": [98, 111, 124, 125], "one_hot": [98, 111, 124, 125], "onehotdiscretetensorspec": [98, 111, 124, 125], "nbin": [98, 124], "qvalue_actor": [98, 111, 124, 125], "std_bia": 99, "std_min_val": 99, "stochast": [99, 105, 106, 113, 133, 134], "belief": [99, 106, 112, 113], "1912": 99, "016034": 99, "softplu": 99, "out_features_valu": 100, "cnn_kwarg": 100, "mlp_kwarg": [100, 101], "duel": 100, "cnn": 100, "06581": 100, "advantag": [100, 126, 131, 132, 140, 141, 142, 143, 144, 145, 147, 148], "512": 100, "lstm_kwarg": 101, "embedd": 101, "lstm": 101, "preced": 101, "time_step": 101, "2d": 101, "input_s": 101, "hidden_s": 101, "hidden0_in": 101, "hidden1_in": 101, "hidden0_out": 101, "hidden1_out": 101, "single_bias_last_lay": 102, "layer_class": 102, "layer_kwarg": 102, "perceptron": 102, "seamless": 102, "interfac": [102, 104], "though": 102, "lazylinear": [102, 110, 118, 120], "42": [102, 158], "noisylinear": [102, 104], "noisylazylinear": 102, "inherit": 103, "At": 103, "mpcplanner": 103, "tensordict_out": [103, 110, 118, 120], "std_init": [104, 105], "noisi": [104, 105, 123], "term": [104, 105, 159], "matrix": [104, 105], "ax": [104, 105], "initialize_paramet": 104, "isol": 104, "1706": 105, "10295v3": 105, "parametr": [105, 134], "induc": 105, "aid": 105, "descent": 105, "remain": 105, "emploi": 105, "decod": 106, "1803": [106, 107], "10122": [106, 107], "rnn_hidden": 106, "latent": 107, "logit": 108, "prob": 108, "One": [108, 118, 136], "excacli": 108, "probabilist": [109, 110], "fmodul": [109, 111, 118, 119, 122, 124, 125], "make_functional_with_buff": [109, 110, 111, 118, 119, 120, 122, 124, 125], "tensor_spec": 110, "distribution_kwarg": 110, "cache_dist": 110, "n_empirical_estim": 110, "special": 110, "rule": 110, "respons": [110, 158], "get_dist": 110, "__call__": 110, "main": [110, 158], "real": 110, "median": 110, "functionalmodul": [110, 118], "functionalmodulewithbuff": [110, 118], "importantli": 110, "overflow": [110, 118], "fist": 110, "set_exploration_mod": [110, 154], "f": 110, "_log_prob": 110, "diverg": [110, 131], "grucel": [110, 118], "fnet": 110, "vmap": [110, 118, 120], "again": 110, "p": [110, 120], "normal_": [110, 118, 120], "td_vmap": [110, 118, 120], "scrape": [110, 118, 120], "lazy_modul": [110, 118], "18": [110, 118, 120], "some_input": [110, 118, 120], "some_output": [110, 118, 120], "hidden_dim": [112, 113], "scale_lb": [112, 113], "posterior": 112, "rssm": [112, 113], "1811": [112, 113], "04551": [112, 113], "obs_embed": 112, "rnn_hidden_dim": 113, "prior": 113, "dream": 113, "recurr": 113, "min": [116, 117, 121, 126, 133, 134], "event_dim": [116, 117], "upscal": [117, 121], "tanh_loc": [117, 121], "tanhtransform": 117, "ultim": [117, 121], "unstabl": [117, 121], "poor": [117, 121], "explos": [117, 121], "switch": [117, 121], "sigma": [117, 121], "root": [117, 121], "formula": [117, 121, 126, 131, 132], "character": 118, "td_fmodul": 118, "td_function": 118, "td_state": 118, "isn": 118, "ensembl": [118, 133], "params_repeat": 118, "buffers_repeat": 118, "irrespect": 118, "random_sampl": 118, "calss": 119, "expand_as_right": 119, "epsilongreedyexplor": 119, "rand_output_clon": 119, "det_output_clon": 119, "rand_output_idx": 119, "_rand_output": 119, "_det_output": 119, "rand_output_idx_expand": 119, "tensordict_module_wrap": 119, "partial_toler": 120, "tensordictsequenci": 120, "who": 120, "AND": 120, "scan": 120, "sub": [120, 150, 158], "tensordictsequ": 120, "rubric": 120, "spec1": 120, "net1": 120, "fnet1": 120, "params1": 120, "buffers1": 120, "fmodule1": 120, "td_module1": 120, "spec2": 120, "module2": 120, "fmodule2": 120, "params2": 120, "buffers2": 120, "td_module2": 120, "lazy_module1": 120, "lazy_module2": 120, "select_subsequ": 120, "acord": 120, "custommodul": 122, "var_num": [124, 125], "regard": [124, 129, 132], "perspect": [124, 129], "1707": [124, 129, 132, 169], "06887": [124, 129], "mult_one_hot": [124, 125], "customdistributionalqv": 124, "log_softmax": 124, "greedi": 125, "advantage_kei": [126, 131, 132], "clip_epsilon": 126, "entropy_bonu": [126, 131, 132], "samples_mc_entropi": [126, 131, 132], "entropy_coef": [126, 131, 132], "01": [126, 131, 132], "critic_coef": [126, 131, 132], "loss_critic_typ": [126, 131, 132], "l2": [126, 127, 128, 131, 132, 133, 136], "loss": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 158, 165, 167, 168, 170, 171, 173, 176], "threshold": 126, "bonu": [126, 131, 132], "favour": [126, 131, 132], "exploratori": [126, 131, 132], "mont": [126, 131, 132], "carlo": [126, 131, 132], "multipli": [126, 131, 132, 133, 134], "loss_funct": [126, 127, 128, 132, 133, 134, 136], "discrep": [126, 127, 128, 131, 132], "l1": [126, 127, 128, 131, 132, 133, 136], "smooth_l1": [126, 127, 128, 131, 132, 133, 134, 136], "throughout": [126, 129, 131, 132, 133, 134], "essenti": [126, 129, 131, 132, 133, 134], "backpropag": [126, 129, 131, 132, 133, 134], "actor_network": [127, 133, 134], "value_network": [127, 128, 129, 134, 140, 141, 142], "delay_actor": [127, 134], "delay_valu": [127, 128, 129, 134], "input_tensordict": [127, 128, 129], "assign": [127, 128], "qvalueactor": 128, "distributionalqvalueactor": 129, "disctount": 129, "loss_modul": [130, 135, 158, 175, 176], "dqnloss": [130, 135, 167], "ddpgloss": [130, 135, 165, 176], "sacloss": [130, 135, 173], "value_network_update_interv": 130, "contrast": 130, "soft": [130, 134, 135], "06461": 130, "often": [130, 158], "dtarg": 131, "decrement": 131, "samples_mc_kl": 131, "kl": 131, "penalti": 131, "old_polici": 131, "new_polici": 131, "adapt": 131, "thu": 131, "distanc": [131, 136, 139], "apart": 131, "advantage_diff_kei": 132, "value_error": [132, 140, 141, 142], "advantage_modul": 132, "proxim": [132, 169], "optimis": [132, 154], "flavour": 132, "constrain": 132, "clipppoloss": 132, "klpenppoloss": 132, "regularis": 132, "06347": [132, 169], "qvalue_network": [133, 134], "num_qvalue_net": [133, 134], "sub_sample_len": 133, "priotity_kei": [133, 134], "alpha_init": [133, 134], "min_alpha": [133, 134], "max_alpha": [133, 134], "fixed_alpha": [133, 134], "target_entropi": [133, 134], "auto": [133, 134], "delay_qvalu": [133, 134], "openreview": [133, 171], "ay8zfzm0tdd": [133, 171], "idea": 133, "subsampl": [133, 150], "know": [133, 154], "1801": [134, 174], "01290": [134, 174], "qvalue_network_bi": 134, "prod": 134, "n_action": 134, "redqloss": 135, "999": [135, 156], "epsilon": 135, "prev_param": 135, "new_param": 135, "v2": [136, 145, 146, 148, 149, 164, 169, 171, 174], "strict_shap": 136, "view_a": 136, "manag": [137, 138, 154], "hold": [137, 138], "graph": [137, 138], "next_val_kei": 139, "pred_next_v": 139, "usus": 139, "mse": 139, "q_valu": 139, "target_valu": 139, "n_steps_to_next": 139, "value_next_st": 139, "lmbda": [140, 142, 143, 145, 146, 147, 148, 149], "average_reward": [140, 141, 142], "gradient_mod": [140, 141, 142], "1506": [140, 143, 144, 147], "02438": [140, 143, 144, 147], "exponenti": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 156], "propag": [140, 141, 142], "throught": [140, 141, 142], "unused_arg": [140, 141, 142], "target_param": [140, 141, 142], "target_buff": [140, 141, 142], "value_kei": [141, 142], "gae": [141, 142], "next_state_valu": [143, 144, 145, 146, 147, 148, 149], "old_stat": [143, 144, 145, 147, 148], "timestep": [143, 144, 145, 146, 147, 148, 149], "new_stat": [143, 144, 145, 146, 147, 148, 149], "flag": [143, 144, 145, 146, 147, 148, 149], "rolling_gamma": [145, 146, 148, 149], "ti": [145, 146, 148, 149], "event": [145, 146, 148, 149], "g1": [145, 146, 148, 149], "g2": [145, 146, 148, 149], "g3": [145, 146, 148, 149], "g4": [145, 146, 148, 149], "v3": [145, 146, 148, 149], "v4": [145, 146, 148, 149], "upcom": [145, 146, 148, 149], "sub_traj_len": 150, "min_sub_traj_len": 150, "just": 150, "full": 150, "20": 150, "register_op": [150, 151, 152, 153, 156, 157, 159], "process_optim_batch": [150, 156], "_process_optim_batch_hook": 150, "interv": [151, 159], "clear": 151, "clear_cuda": 151, "pre_optim_step": 151, "counter": 152, "appar": 152, "log_pbar": [152, 153, 154, 156], "progress": [152, 153, 154, 158], "bar": [152, 153, 154, 158], "count_fram": 152, "pre_steps_log": [152, 153], "lognam": 153, "r_train": 153, "logger": [153, 154, 158, 176, 180], "log_reward": 153, "record_interv": 154, "record_fram": [154, 160], "policy_explor": [154, 176], "log_kei": 154, "suffix": 154, "count": [154, 160], "underestim": 154, "final": 154, "suppos": 154, "reward_evalu": 154, "video": [154, 180], "reward_norm": 156, "batch_process": [156, 157], "update_reward_stat": 156, "normalize_reward": 156, "make_train": 157, "second": 157, "_process_batch_hook": 157, "versatil": 158, "lossmodul": [158, 175, 176], "optim_steps_per_batch": 158, "epoch": 158, "500": 158, "clip_grad_norm": 158, "norm": 158, "partial": 158, "deriv": 158, "clamp": 158, "clip_norm": 158, "progress_bar": 158, "tqdm": 158, "save_trainer_interv": 158, "10000": 158, "save_trainer_fil": 158, "_datacollector": [159, 162, 163, 176], "update_weights_interv": 159, "whenev": 159, "sit": 159, "sync": [159, 176], "update_weight": 159, "post_step": 159, "cfg": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180], "dictconfig": [160, 161, 162, 163, 164, 166, 169, 171, 172, 174, 175, 176, 177, 180], "correct": 160, "divid": 160, "unknowingli": 160, "1m": 160, "annealing_fram": 160, "init_env_step": [160, 161], "proof_environ": [161, 164, 166, 169, 171, 174], "sta": 161, "stat": [161, 180], "ot": 161, "actor_model_explor": [162, 163], "make_env_kwarg": [162, 163], "creator": [162, 163, 178, 179, 180], "actor_net_kwarg": [164, 171, 174], "value_net_kwarg": [164, 174], "modulelist": [164, 171, 174], "dummi": [164, 166, 169, 171, 174], "ddpgcnnactor": 164, "ddpgmlpactor": 164, "ddpgcnnqnet": 164, "ddpgmlpqnet": 164, "cattensor": [164, 169, 171, 174], "doubletofloat": [164, 169, 171, 174], "hydra": [164, 166, 169, 171, 174], "config_stor": [164, 166, 169, 171, 174], "configstor": [164, 166, 169, 171, 174], "dataclass": [164, 166, 169, 171, 174], "halfcheetah": [164, 169, 171, 174], "config_field": [164, 166, 169, 171, 174], "config_cl": [164, 166, 169, 171, 174], "ddpgmodelconfig": 164, "envconfig": [164, 166, 169, 171, 174], "make_dataclass": [164, 166, 169, 171, 174], "cls_name": [164, 166, 169, 171, 174], "node": [164, 166, 169, 171, 174], "config_path": [164, 166, 169, 171, 174], "config_nam": [164, 166, 169, 171, 174], "17": [164, 169, 171, 174], "targetnetupdat": [165, 167, 170, 173, 175, 176], "discretemodelconfig": 166, "totensorimag": 166, "pong": 166, "v5": 166, "pixels_onli": 166, "210": 166, "160": 166, "ppoloss": 168, "in_keys_actor": 169, "observation_kei": [169, 171, 174], "actorvalueoper": 169, "join": 169, "actorcriticoper": 169, "parser_env_arg": [169, 171], "parser_model_args_continu": [169, 171, 174], "ppomodelconfig": 169, "actor_valu": 169, "redqloss_deprec": 170, "qvalue_net_kwarg": [171, 174], "qvalu": [171, 174], "redqmodelconfig": 171, "replayargsconfig": 172, "sacmodelconfig": 174, "target_net_updat": 176, "constitu": 176, "learnt": 176, "tempfil": 176, "tensorboardlogg": 176, "tensordictreplaybuff": 176, "egreedywrapp": 176, "env_mak": 176, "env_proof": 176, "obs_spec": 176, "net_valu": 176, "dir": 176, "gettempdir": 176, "exp_nam": 176, "argpars": [177, 180], "namespac": [177, 180], "parser": [177, 180], "transformed_env_constructor": 177, "env_kwarg": [178, 179], "num_env_per_collector": [178, 179], "num_collector": [178, 179], "less": [178, 179], "multisyncdatacollector": 179, "video_tag": 180, "norm_obs_onli": 180, "use_env_cr": 180, "custom_env_mak": 180, "custom_env": 180, "return_transformed_env": 180, "action_dim_gsd": 180, "state_dim_gsd": 180, "vecnorm": 180, "wheter": 180, "maker": 180, "overrid": 180, "exclus": 180, "solv": 182, "journei": 182, "guid": 182, "textbook": 182, "highlight": 182, "readi": 182, "cours": 182, "ever": 182, "cover": 182, "bump": 182, "think": 182, "commun": 182, "benefit": 182, "submit": 182, "pr": 182, "intern": 186}, "objects": {"torchrl._utils": [[10, 0, 1, "", "implement_for"]], "torchrl.collectors": [[11, 0, 1, "", "MultiSyncDataCollector"], [12, 0, 1, "", "MultiaSyncDataCollector"], [13, 0, 1, "", "SyncDataCollector"], [14, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.MultiSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[13, 1, 1, "", "iterator"], [13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "rollout"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[15, 2, 1, "", "split_trajectories"]], "torchrl.data": [[16, 0, 1, "", "BinaryDiscreteTensorSpec"], [17, 0, 1, "", "BoundedTensorSpec"], [18, 0, 1, "", "CompositeSpec"], [19, 0, 1, "", "DiscreteTensorSpec"], [20, 0, 1, "", "LazyStackedTensorDict"], [21, 0, 1, "", "MultOneHotDiscreteTensorSpec"], [22, 0, 1, "", "MultiStep"], [23, 0, 1, "", "NdBoundedTensorSpec"], [24, 0, 1, "", "NdUnboundedContinuousTensorSpec"], [25, 0, 1, "", "OneHotDiscreteTensorSpec"], [26, 0, 1, "", "PrioritizedReplayBuffer"], [27, 0, 1, "", "ReplayBuffer"], [28, 0, 1, "", "SubTensorDict"], [29, 0, 1, "", "TensorDict"], [30, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [31, 0, 1, "", "TensorDictReplayBuffer"], [32, 0, 1, "", "TensorSpec"], [33, 0, 1, "", "UnboundedContinuousTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[16, 1, 1, "", "assert_is_in"], [16, 1, 1, "", "encode"], [16, 1, 1, "", "index"], [16, 1, 1, "", "is_in"], [16, 1, 1, "", "project"], [16, 1, 1, "", "rand"], [16, 1, 1, "", "to_numpy"], [16, 1, 1, "", "type_check"], [16, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorDict": [[20, 1, 1, "", "all"], [20, 1, 1, "", "any"], [20, 1, 1, "", "apply"], [20, 1, 1, "", "apply_"], [20, 3, 1, "", "batch_dims"], [20, 3, 1, "", "batch_size"], [20, 1, 1, "", "chunk"], [20, 1, 1, "", "clone"], [20, 1, 1, "", "contiguous"], [20, 1, 1, "", "copy_"], [20, 1, 1, "", "copy_at_"], [20, 1, 1, "", "cpu"], [20, 1, 1, "", "cuda"], [20, 1, 1, "", "del_"], [20, 1, 1, "", "detach"], [20, 1, 1, "", "detach_"], [20, 3, 1, "", "device"], [20, 1, 1, "", "empty"], [20, 1, 1, "", "expand"], [20, 1, 1, "", "fill_"], [20, 1, 1, "", "get"], [20, 1, 1, "", "get_at"], [20, 1, 1, "", "get_sub_tensordict"], [20, 1, 1, "", "is_contiguous"], [20, 1, 1, "", "is_memmap"], [20, 1, 1, "", "is_shared"], [20, 1, 1, "", "items"], [20, 1, 1, "", "items_meta"], [20, 1, 1, "", "keys"], [20, 1, 1, "", "masked_fill"], [20, 1, 1, "", "masked_fill_"], [20, 1, 1, "", "masked_select"], [20, 1, 1, "", "memmap_"], [20, 1, 1, "", "numel"], [20, 1, 1, "", "permute"], [20, 1, 1, "", "pin_memory"], [20, 1, 1, "", "rename_key"], [20, 1, 1, "", "reshape"], [20, 1, 1, "", "select"], [20, 1, 1, "", "set"], [20, 1, 1, "", "set_"], [20, 1, 1, "", "set_at_"], [20, 3, 1, "", "shape"], [20, 1, 1, "", "share_memory_"], [20, 1, 1, "", "size"], [20, 1, 1, "", "squeeze"], [20, 1, 1, "", "to"], [20, 1, 1, "", "to_dict"], [20, 1, 1, "", "to_tensordict"], [20, 1, 1, "", "unbind"], [20, 1, 1, "", "unsqueeze"], [20, 1, 1, "", "update"], [20, 1, 1, "", "update_"], [20, 1, 1, "", "update_at_"], [20, 1, 1, "", "values"], [20, 1, 1, "", "values_meta"], [20, 1, 1, "", "view"], [20, 1, 1, "", "zero_"]], "torchrl.data.MultOneHotDiscreteTensorSpec": [[21, 1, 1, "", "assert_is_in"], [21, 1, 1, "", "encode"], [21, 1, 1, "", "index"], [21, 1, 1, "", "is_in"], [21, 1, 1, "", "project"], [21, 1, 1, "", "rand"], [21, 1, 1, "", "to_numpy"], [21, 1, 1, "", "type_check"], [21, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[22, 1, 1, "", "add_module"], [22, 1, 1, "", "apply"], [22, 1, 1, "", "bfloat16"], [22, 1, 1, "", "buffers"], [22, 1, 1, "", "children"], [22, 1, 1, "", "cpu"], [22, 1, 1, "", "cuda"], [22, 1, 1, "", "double"], [22, 1, 1, "", "eval"], [22, 1, 1, "", "extra_repr"], [22, 1, 1, "", "float"], [22, 1, 1, "", "forward"], [22, 1, 1, "", "get_buffer"], [22, 1, 1, "", "get_extra_state"], [22, 1, 1, "", "get_parameter"], [22, 1, 1, "", "get_submodule"], [22, 1, 1, "", "half"], [22, 1, 1, "", "ipu"], [22, 1, 1, "", "load_state_dict"], [22, 1, 1, "", "modules"], [22, 1, 1, "", "named_buffers"], [22, 1, 1, "", "named_children"], [22, 1, 1, "", "named_modules"], [22, 1, 1, "", "named_parameters"], [22, 1, 1, "", "parameters"], [22, 1, 1, "", "register_backward_hook"], [22, 1, 1, "", "register_buffer"], [22, 1, 1, "", "register_forward_hook"], [22, 1, 1, "", "register_forward_pre_hook"], [22, 1, 1, "", "register_full_backward_hook"], [22, 1, 1, "", "register_full_backward_pre_hook"], [22, 1, 1, "", "register_load_state_dict_post_hook"], [22, 1, 1, "", "register_module"], [22, 1, 1, "", "register_parameter"], [22, 1, 1, "", "requires_grad_"], [22, 1, 1, "", "set_extra_state"], [22, 1, 1, "", "share_memory"], [22, 1, 1, "", "state_dict"], [22, 1, 1, "", "to"], [22, 1, 1, "", "to_empty"], [22, 1, 1, "", "train"], [22, 1, 1, "", "type"], [22, 1, 1, "", "xpu"], [22, 1, 1, "", "zero_grad"]], "torchrl.data.NdBoundedTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.NdUnboundedContinuousTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "update_priority"]], "torchrl.data.ReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "sample"]], "torchrl.data.SubTensorDict": [[28, 1, 1, "", "all"], [28, 1, 1, "", "any"], [28, 1, 1, "", "apply"], [28, 1, 1, "", "apply_"], [28, 3, 1, "", "batch_dims"], [28, 3, 1, "", "batch_size"], [28, 1, 1, "", "chunk"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contiguous"], [28, 1, 1, "", "copy_"], [28, 1, 1, "", "copy_at_"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 1, 1, "", "del_"], [28, 1, 1, "", "detach"], [28, 1, 1, "", "detach_"], [28, 3, 1, "", "device"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "fill_"], [28, 1, 1, "", "get"], [28, 1, 1, "", "get_at"], [28, 1, 1, "", "get_sub_tensordict"], [28, 1, 1, "", "is_contiguous"], [28, 1, 1, "", "is_memmap"], [28, 1, 1, "", "is_shared"], [28, 1, 1, "", "items"], [28, 1, 1, "", "items_meta"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "masked_fill"], [28, 1, 1, "", "masked_fill_"], [28, 1, 1, "", "masked_select"], [28, 1, 1, "", "memmap_"], [28, 1, 1, "", "numel"], [28, 1, 1, "", "permute"], [28, 1, 1, "", "pin_memory"], [28, 1, 1, "", "rename_key"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "select"], [28, 1, 1, "", "set"], [28, 1, 1, "", "set_"], [28, 1, 1, "", "set_at_"], [28, 3, 1, "", "shape"], [28, 1, 1, "", "share_memory_"], [28, 1, 1, "", "size"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_dict"], [28, 1, 1, "", "to_tensordict"], [28, 1, 1, "", "unbind"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "update"], [28, 1, 1, "", "update_"], [28, 1, 1, "", "update_at_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "values_meta"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero_"]], "torchrl.data.TensorDict": [[29, 1, 1, "", "all"], [29, 1, 1, "", "any"], [29, 1, 1, "", "apply"], [29, 1, 1, "", "apply_"], [29, 3, 1, "", "batch_dims"], [29, 3, 1, "", "batch_size"], [29, 1, 1, "", "chunk"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contiguous"], [29, 1, 1, "", "copy_"], [29, 1, 1, "", "copy_at_"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 1, 1, "", "del_"], [29, 1, 1, "", "detach"], [29, 1, 1, "", "detach_"], [29, 3, 1, "", "device"], [29, 1, 1, "", "empty"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "fill_"], [29, 1, 1, "", "get"], [29, 1, 1, "", "get_at"], [29, 1, 1, "", "get_sub_tensordict"], [29, 1, 1, "", "is_contiguous"], [29, 1, 1, "", "is_memmap"], [29, 1, 1, "", "is_shared"], [29, 1, 1, "", "items"], [29, 1, 1, "", "items_meta"], [29, 1, 1, "", "keys"], [29, 1, 1, "", "masked_fill"], [29, 1, 1, "", "masked_fill_"], [29, 1, 1, "", "masked_select"], [29, 1, 1, "", "memmap_"], [29, 1, 1, "", "numel"], [29, 1, 1, "", "permute"], [29, 1, 1, "", "pin_memory"], [29, 1, 1, "", "rename_key"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "select"], [29, 1, 1, "", "set"], [29, 1, 1, "", "set_"], [29, 1, 1, "", "set_at_"], [29, 3, 1, "", "shape"], [29, 1, 1, "", "share_memory_"], [29, 1, 1, "", "size"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_dict"], [29, 1, 1, "", "to_tensordict"], [29, 1, 1, "", "unbind"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "update"], [29, 1, 1, "", "update_"], [29, 1, 1, "", "update_at_"], [29, 1, 1, "", "values"], [29, 1, 1, "", "values_meta"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero_"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[30, 1, 1, "", "add"], [30, 1, 1, "", "extend"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "update_priority"]], "torchrl.data.TensorDictReplayBuffer": [[31, 1, 1, "", "add"], [31, 1, 1, "", "extend"], [31, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.rb_prototype": [[34, 0, 1, "", "ReplayBuffer"], [35, 0, 1, "", "TensorDictReplayBuffer"]], "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer": [[34, 1, 1, "", "add"], [34, 1, 1, "", "extend"], [34, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.samplers": [[36, 0, 1, "", "PrioritizedSampler"], [37, 0, 1, "", "RandomSampler"], [38, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[36, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[39, 0, 1, "", "LazyMemmapStorage"], [40, 0, 1, "", "LazyTensorStorage"], [41, 0, 1, "", "ListStorage"], [42, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[39, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[40, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[41, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[42, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[43, 0, 1, "", "RoundRobinWriter"], [44, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[43, 1, 1, "", "add"], [43, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[44, 1, 1, "", "add"], [44, 1, 1, "", "extend"]], "torchrl.data.utils": [[45, 0, 1, "", "expand_as_right"], [46, 0, 1, "", "expand_right"]], "torchrl.envs": [[47, 0, 1, "", "EnvBase"], [48, 0, 1, "", "GymLikeEnv"], [49, 2, 1, "", "ModelBasedEnvBase"], [50, 0, 1, "", "ParallelEnv"], [51, 0, 1, "", "SerialEnv"], [49, 1, 1, "", "rand_step"], [49, 1, 1, "", "reset"], [49, 1, 1, "", "rollout"], [49, 1, 1, "", "set_seed"], [49, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[47, 1, 1, "", "add_module"], [47, 1, 1, "", "apply"], [47, 3, 1, "", "batch_locked"], [47, 1, 1, "", "bfloat16"], [47, 1, 1, "", "buffers"], [47, 1, 1, "", "children"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 1, 1, "", "double"], [47, 1, 1, "", "eval"], [47, 1, 1, "", "extra_repr"], [47, 1, 1, "", "fake_tensordict"], [47, 1, 1, "", "float"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_buffer"], [47, 1, 1, "", "get_extra_state"], [47, 1, 1, "", "get_parameter"], [47, 1, 1, "", "get_submodule"], [47, 1, 1, "", "half"], [47, 1, 1, "", "ipu"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "modules"], [47, 1, 1, "", "named_buffers"], [47, 1, 1, "", "named_children"], [47, 1, 1, "", "named_modules"], [47, 1, 1, "", "named_parameters"], [47, 1, 1, "", "parameters"], [47, 1, 1, "id0", "rand_step"], [47, 1, 1, "", "register_backward_hook"], [47, 1, 1, "", "register_buffer"], [47, 1, 1, "", "register_forward_hook"], [47, 1, 1, "", "register_forward_pre_hook"], [47, 1, 1, "", "register_full_backward_hook"], [47, 1, 1, "", "register_full_backward_pre_hook"], [47, 1, 1, "", "register_load_state_dict_post_hook"], [47, 1, 1, "", "register_module"], [47, 1, 1, "", "register_parameter"], [47, 1, 1, "", "requires_grad_"], [47, 1, 1, "id1", "reset"], [47, 1, 1, "id2", "rollout"], [47, 1, 1, "", "set_extra_state"], [47, 1, 1, "id3", "set_seed"], [47, 1, 1, "", "share_memory"], [47, 3, 1, "", "specs"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "id4", "step"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_empty"], [47, 1, 1, "", "train"], [47, 1, 1, "", "type"], [47, 1, 1, "", "xpu"], [47, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[48, 1, 1, "", "add_module"], [48, 1, 1, "", "apply"], [48, 3, 1, "", "batch_locked"], [48, 1, 1, "", "bfloat16"], [48, 1, 1, "", "buffers"], [48, 1, 1, "", "children"], [48, 1, 1, "", "close"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 1, 1, "", "double"], [48, 1, 1, "", "eval"], [48, 1, 1, "", "extra_repr"], [48, 1, 1, "", "fake_tensordict"], [48, 1, 1, "", "float"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_buffer"], [48, 1, 1, "", "get_extra_state"], [48, 1, 1, "", "get_parameter"], [48, 1, 1, "", "get_submodule"], [48, 1, 1, "", "half"], [48, 1, 1, "", "ipu"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "modules"], [48, 1, 1, "", "named_buffers"], [48, 1, 1, "", "named_children"], [48, 1, 1, "", "named_modules"], [48, 1, 1, "", "named_parameters"], [48, 1, 1, "", "parameters"], [48, 1, 1, "", "rand_step"], [48, 1, 1, "", "read_action"], [48, 1, 1, "", "read_done"], [48, 1, 1, "", "read_obs"], [48, 1, 1, "", "read_reward"], [48, 1, 1, "", "register_backward_hook"], [48, 1, 1, "", "register_buffer"], [48, 1, 1, "", "register_forward_hook"], [48, 1, 1, "", "register_forward_pre_hook"], [48, 1, 1, "", "register_full_backward_hook"], [48, 1, 1, "", "register_full_backward_pre_hook"], [48, 1, 1, "", "register_load_state_dict_post_hook"], [48, 1, 1, "", "register_module"], [48, 1, 1, "", "register_parameter"], [48, 1, 1, "", "requires_grad_"], [48, 1, 1, "", "reset"], [48, 1, 1, "", "rollout"], [48, 1, 1, "", "set_extra_state"], [48, 1, 1, "", "set_info_dict_reader"], [48, 1, 1, "", "set_seed"], [48, 1, 1, "", "share_memory"], [48, 3, 1, "", "specs"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "step"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_empty"], [48, 1, 1, "", "train"], [48, 1, 1, "", "type"], [48, 1, 1, "", "xpu"], [48, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[50, 1, 1, "", "add_module"], [50, 1, 1, "", "apply"], [50, 3, 1, "", "batch_locked"], [50, 1, 1, "", "bfloat16"], [50, 1, 1, "", "buffers"], [50, 1, 1, "", "children"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 1, 1, "", "double"], [50, 1, 1, "", "eval"], [50, 1, 1, "", "extra_repr"], [50, 1, 1, "", "fake_tensordict"], [50, 1, 1, "", "float"], [50, 1, 1, "", "forward"], [50, 1, 1, "", "get_buffer"], [50, 1, 1, "", "get_extra_state"], [50, 1, 1, "", "get_parameter"], [50, 1, 1, "", "get_submodule"], [50, 1, 1, "", "half"], [50, 1, 1, "", "ipu"], [50, 1, 1, "", "load_state_dict"], [50, 1, 1, "", "modules"], [50, 1, 1, "", "named_buffers"], [50, 1, 1, "", "named_children"], [50, 1, 1, "", "named_modules"], [50, 1, 1, "", "named_parameters"], [50, 1, 1, "", "parameters"], [50, 1, 1, "", "rand_step"], [50, 1, 1, "", "register_backward_hook"], [50, 1, 1, "", "register_buffer"], [50, 1, 1, "", "register_forward_hook"], [50, 1, 1, "", "register_forward_pre_hook"], [50, 1, 1, "", "register_full_backward_hook"], [50, 1, 1, "", "register_full_backward_pre_hook"], [50, 1, 1, "", "register_load_state_dict_post_hook"], [50, 1, 1, "", "register_module"], [50, 1, 1, "", "register_parameter"], [50, 1, 1, "", "requires_grad_"], [50, 1, 1, "", "reset"], [50, 1, 1, "", "rollout"], [50, 1, 1, "", "set_extra_state"], [50, 1, 1, "", "set_seed"], [50, 1, 1, "", "share_memory"], [50, 3, 1, "", "specs"], [50, 1, 1, "", "state_dict"], [50, 1, 1, "", "step"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_empty"], [50, 1, 1, "", "train"], [50, 1, 1, "", "type"], [50, 1, 1, "", "update_kwargs"], [50, 1, 1, "", "xpu"], [50, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[51, 1, 1, "", "add_module"], [51, 1, 1, "", "apply"], [51, 3, 1, "", "batch_locked"], [51, 1, 1, "", "bfloat16"], [51, 1, 1, "", "buffers"], [51, 1, 1, "", "children"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 1, 1, "", "double"], [51, 1, 1, "", "eval"], [51, 1, 1, "", "extra_repr"], [51, 1, 1, "", "fake_tensordict"], [51, 1, 1, "", "float"], [51, 1, 1, "", "forward"], [51, 1, 1, "", "get_buffer"], [51, 1, 1, "", "get_extra_state"], [51, 1, 1, "", "get_parameter"], [51, 1, 1, "", "get_submodule"], [51, 1, 1, "", "half"], [51, 1, 1, "", "ipu"], [51, 1, 1, "", "load_state_dict"], [51, 1, 1, "", "modules"], [51, 1, 1, "", "named_buffers"], [51, 1, 1, "", "named_children"], [51, 1, 1, "", "named_modules"], [51, 1, 1, "", "named_parameters"], [51, 1, 1, "", "parameters"], [51, 1, 1, "", "rand_step"], [51, 1, 1, "", "register_backward_hook"], [51, 1, 1, "", "register_buffer"], [51, 1, 1, "", "register_forward_hook"], [51, 1, 1, "", "register_forward_pre_hook"], [51, 1, 1, "", "register_full_backward_hook"], [51, 1, 1, "", "register_full_backward_pre_hook"], [51, 1, 1, "", "register_load_state_dict_post_hook"], [51, 1, 1, "", "register_module"], [51, 1, 1, "", "register_parameter"], [51, 1, 1, "", "requires_grad_"], [51, 1, 1, "", "reset"], [51, 1, 1, "", "rollout"], [51, 1, 1, "", "set_extra_state"], [51, 1, 1, "", "set_seed"], [51, 1, 1, "", "share_memory"], [51, 3, 1, "", "specs"], [51, 1, 1, "", "state_dict"], [51, 1, 1, "", "step"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_empty"], [51, 1, 1, "", "train"], [51, 1, 1, "", "type"], [51, 1, 1, "", "update_kwargs"], [51, 1, 1, "", "xpu"], [51, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.dm_control": [[52, 2, 1, "", "DMControlEnv"], [53, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[54, 2, 1, "", "GymEnv"], [55, 2, 1, "", "GymWrapper"]], "torchrl.envs.model_based.dreamer": [[56, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[57, 0, 1, "", "BinarizeReward"], [58, 0, 1, "", "CatFrames"], [59, 0, 1, "", "CatTensors"], [60, 0, 1, "", "CenterCrop"], [61, 0, 1, "", "Compose"], [62, 0, 1, "", "DoubleToFloat"], [63, 0, 1, "", "FiniteTensorDictCheck"], [64, 0, 1, "", "FlattenObservation"], [65, 0, 1, "", "GrayScale"], [66, 0, 1, "", "NoopResetEnv"], [67, 0, 1, "", "ObservationNorm"], [68, 0, 1, "", "ObservationTransform"], [69, 0, 1, "", "PinMemoryTransform"], [70, 0, 1, "", "R3MTransform"], [71, 0, 1, "", "Resize"], [72, 0, 1, "", "RewardClipping"], [73, 0, 1, "", "RewardScaling"], [74, 0, 1, "", "TensorDictPrimer"], [75, 0, 1, "", "ToTensorImage"], [76, 0, 1, "", "Transform"], [77, 0, 1, "", "TransformedEnv"], [78, 0, 1, "", "UnsqueezeTransform"], [79, 0, 1, "", "VIPTransform"], [80, 0, 1, "", "VecNorm"], [81, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[57, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[58, 1, 1, "", "reset"], [58, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[59, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[60, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[61, 1, 1, "", "reset"], [61, 1, 1, "", "to"], [61, 1, 1, "", "transform_input_spec"], [61, 1, 1, "", "transform_observation_spec"], [61, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[62, 1, 1, "", "transform_input_spec"], [62, 1, 1, "", "transform_observation_spec"], [62, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.FlattenObservation": [[64, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[65, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[66, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[67, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[70, 1, 1, "", "forward"], [70, 1, 1, "", "reset"], [70, 1, 1, "", "to"], [70, 1, 1, "", "transform_input_spec"], [70, 1, 1, "", "transform_observation_spec"], [70, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Resize": [[71, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[72, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[73, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[74, 1, 1, "", "reset"], [74, 1, 1, "", "to"], [74, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[75, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[76, 1, 1, "", "forward"], [76, 1, 1, "", "reset"], [76, 1, 1, "", "transform_input_spec"], [76, 1, 1, "", "transform_observation_spec"], [76, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[77, 3, 1, "", "action_spec"], [77, 3, 1, "", "batch_locked"], [77, 1, 1, "", "eval"], [77, 3, 1, "", "input_spec"], [77, 1, 1, "", "load_state_dict"], [77, 3, 1, "", "observation_spec"], [77, 3, 1, "", "reward_spec"], [77, 1, 1, "", "set_seed"], [77, 1, 1, "", "state_dict"], [77, 1, 1, "", "to"], [77, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[78, 1, 1, "", "forward"], [78, 1, 1, "", "transform_input_spec"], [78, 1, 1, "", "transform_observation_spec"], [78, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPTransform": [[79, 1, 1, "", "forward"], [79, 1, 1, "", "reset"], [79, 1, 1, "", "to"], [79, 1, 1, "", "transform_input_spec"], [79, 1, 1, "", "transform_observation_spec"], [79, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VecNorm": [[80, 1, 1, "", "build_td_for_shared_vecnorm"], [80, 1, 1, "", "get_extra_state"], [80, 1, 1, "", "set_extra_state"], [80, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[81, 1, 1, "", "reset"]], "torchrl.envs.utils": [[82, 2, 1, "", "exploration_mode"], [83, 2, 1, "", "get_available_libraries"], [84, 2, 1, "", "set_exploration_mode"], [85, 2, 1, "", "step_mdp"]], "torchrl.modules": [[86, 0, 1, "", "Actor"], [87, 0, 1, "", "ActorCriticOperator"], [88, 0, 1, "", "ActorCriticWrapper"], [89, 0, 1, "", "ActorValueOperator"], [90, 0, 1, "", "CEMPlanner"], [91, 0, 1, "", "ConvNet"], [92, 0, 1, "", "DdpgCnnActor"], [93, 0, 1, "", "DdpgCnnQNet"], [94, 0, 1, "", "DdpgMlpActor"], [95, 0, 1, "", "DdpgMlpQNet"], [96, 0, 1, "", "Delta"], [97, 0, 1, "", "DistributionalDQNnet"], [98, 0, 1, "", "DistributionalQValueActor"], [99, 0, 1, "", "DreamerActor"], [100, 0, 1, "", "DuelingCnnDQNet"], [101, 0, 1, "", "LSTMNet"], [102, 0, 1, "", "MLP"], [103, 0, 1, "", "MPCPlannerBase"], [104, 0, 1, "", "NoisyLazyLinear"], [105, 0, 1, "", "NoisyLinear"], [106, 0, 1, "", "ObsDecoder"], [107, 0, 1, "", "ObsEncoder"], [108, 0, 1, "", "OneHotCategorical"], [109, 0, 1, "", "ProbabilisticActor"], [110, 0, 1, "", "ProbabilisticTensorDictModule"], [111, 0, 1, "", "QValueActor"], [112, 0, 1, "", "RSSMPosterior"], [113, 0, 1, "", "RSSMPrior"], [114, 0, 1, "", "Squeeze2dLayer"], [115, 0, 1, "", "SqueezeLayer"], [116, 0, 1, "", "TanhDelta"], [117, 0, 1, "", "TanhNormal"], [118, 0, 1, "", "TensorDictModule"], [119, 0, 1, "", "TensorDictModuleWrapper"], [120, 0, 1, "", "TensorDictSequential"], [121, 0, 1, "", "TruncatedNormal"], [122, 0, 1, "", "ValueOperator"], [123, 0, 1, "", "reset_noise"]], "torchrl.modules.ActorCriticOperator": [[87, 1, 1, "", "get_critic_operator"], [87, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorCriticWrapper": [[88, 1, 1, "", "get_policy_operator"], [88, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorValueOperator": [[89, 1, 1, "", "get_policy_operator"], [89, 1, 1, "", "get_value_operator"]], "torchrl.modules.CEMPlanner": [[90, 1, 1, "", "planning"]], "torchrl.modules.DdpgCnnActor": [[92, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[93, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[94, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[95, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[96, 1, 1, "", "log_prob"], [96, 3, 1, "", "mean"], [96, 3, 1, "", "mode"], [96, 1, 1, "", "rsample"], [96, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[97, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[99, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[100, 1, 1, "", "forward"]], "torchrl.modules.LSTMNet": [[101, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[102, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[103, 1, 1, "", "forward"], [103, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[104, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[106, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[107, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[108, 1, 1, "", "log_prob"], [108, 3, 1, "", "mode"], [108, 1, 1, "", "rsample"], [108, 1, 1, "", "sample"]], "torchrl.modules.ProbabilisticTensorDictModule": [[110, 1, 1, "", "forward"], [110, 1, 1, "", "make_functional_with_buffers"]], "torchrl.modules.RSSMPosterior": [[112, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[113, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[115, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[116, 3, 1, "", "mean"], [116, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[117, 3, 1, "", "mode"]], "torchrl.modules.TensorDictModule": [[118, 1, 1, "", "forward"], [118, 1, 1, "", "make_functional_with_buffers"], [118, 1, 1, "", "random"], [118, 1, 1, "", "random_sample"], [118, 1, 1, "", "to"]], "torchrl.modules.TensorDictModuleWrapper": [[119, 1, 1, "", "forward"]], "torchrl.modules.TensorDictSequential": [[120, 1, 1, "", "forward"], [120, 1, 1, "", "make_functional_with_buffers"], [120, 1, 1, "", "select_subsequence"]], "torchrl.modules.TruncatedNormal": [[121, 1, 1, "", "log_prob"], [121, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module.actors": [[124, 0, 1, "", "DistributionalQValueHook"], [125, 0, 1, "", "QValueHook"]], "torchrl.objectives": [[126, 0, 1, "", "ClipPPOLoss"], [127, 0, 1, "", "DDPGLoss"], [128, 0, 1, "", "DQNLoss"], [129, 0, 1, "", "DistributionalDQNLoss"], [130, 0, 1, "", "HardUpdate"], [131, 0, 1, "", "KLPENPPOLoss"], [132, 0, 1, "", "PPOLoss"], [133, 0, 1, "", "REDQLoss"], [134, 0, 1, "", "SACLoss"], [135, 0, 1, "", "SoftUpdate"], [136, 0, 1, "", "distance_loss"], [137, 0, 1, "", "hold_out_net"], [138, 0, 1, "", "hold_out_params"], [139, 0, 1, "", "next_state_value"]], "torchrl.objectives.ClipPPOLoss": [[126, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[127, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[128, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[129, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[131, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[132, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[133, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[134, 1, 1, "", "forward"]], "torchrl.objectives.value": [[140, 0, 1, "", "GAE"], [141, 0, 1, "", "TDEstimate"], [142, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[140, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[141, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[142, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[143, 0, 1, "", "generalized_advantage_estimate"], [144, 0, 1, "", "td_advantage_estimate"], [145, 0, 1, "", "td_lambda_advantage_estimate"], [146, 0, 1, "", "td_lambda_return_estimate"], [147, 0, 1, "", "vec_generalized_advantage_estimate"], [148, 0, 1, "", "vec_td_lambda_advantage_estimate"], [149, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.trainers": [[150, 0, 1, "", "BatchSubSampler"], [151, 0, 1, "", "ClearCudaCache"], [152, 0, 1, "", "CountFramesLog"], [153, 0, 1, "", "LogReward"], [154, 0, 1, "", "Recorder"], [155, 0, 1, "", "ReplayBuffer"], [156, 0, 1, "", "RewardNormalizer"], [157, 0, 1, "", "SelectKeys"], [158, 0, 1, "", "Trainer"], [159, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.ReplayBuffer": [[155, 1, 1, "", "add"], [155, 1, 1, "", "extend"], [155, 1, 1, "", "sample"]], "torchrl.trainers.helpers": [[160, 2, 1, "", "correct_for_frame_skip"], [161, 2, 1, "", "get_stats_random_rollout"], [162, 2, 1, "", "make_collector_offpolicy"], [163, 2, 1, "", "make_collector_onpolicy"], [164, 2, 1, "", "make_ddpg_actor"], [165, 2, 1, "", "make_ddpg_loss"], [166, 2, 1, "", "make_dqn_actor"], [167, 2, 1, "", "make_dqn_loss"], [168, 2, 1, "", "make_ppo_loss"], [169, 2, 1, "", "make_ppo_model"], [170, 2, 1, "", "make_redq_loss"], [171, 2, 1, "", "make_redq_model"], [172, 2, 1, "", "make_replay_buffer"], [173, 2, 1, "", "make_sac_loss"], [174, 2, 1, "", "make_sac_model"], [175, 2, 1, "", "make_target_updater"], [176, 2, 1, "", "make_trainer"], [177, 2, 1, "", "parallel_env_constructor"], [178, 2, 1, "", "sync_async_collector"], [179, 2, 1, "", "sync_sync_collector"], [180, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"exampl": 0, "galleri": 0, "welcom": 1, "torchrl": [1, 2, 3, 4, 6, 183, 184, 185, 186], "document": [1, 9], "content": [1, 182], "indic": 1, "tabl": 1, "collector": 2, "packag": [2, 3, 4, 183, 184, 185, 186], "data": [2, 3], "helper": [2, 4], "function": 2, "replai": 3, "buffer": 3, "compos": [3, 61], "prototyp": 3, "tensordict": [3, 29, 183], "tensorspec": [3, 32], "util": [3, 183, 184, 185], "env": 4, "domain": 4, "specif": 4, "librari": 4, "transform": [4, 76], "work": [5, 6], "gym": 5, "version": [5, 7], "habitat": 6, "lab": 6, "set": 6, "up": 6, "your": 6, "environ": [6, 7], "instal": [6, 7], "from": [6, 7], "pip": [6, 7], "us": [6, 9], "common": [6, 7], "issu": [6, 7], "about": 7, "mujoco": 7, "prerequisit": 7, "render": 7, "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "clone": 7, "repo": [7, 9], "when": 7, "pro": 8, "tip": 8, "train": 8, "cluster": 8, "resourc": 9, "pytorch": 9, "functorch": 9, "rl": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "implement_for": 10, "multisyncdatacollector": 11, "multiasyncdatacollector": 12, "syncdatacollector": 13, "asyncdatacollector": 14, "split_trajectori": 15, "binarydiscretetensorspec": 16, "boundedtensorspec": 17, "compositespec": 18, "discretetensorspec": 19, "lazystackedtensordict": 20, "multonehotdiscretetensorspec": 21, "multistep": 22, "ndboundedtensorspec": 23, "ndunboundedcontinuoustensorspec": 24, "onehotdiscretetensorspec": 25, "prioritizedreplaybuff": 26, "replaybuff": [27, 34, 155], "subtensordict": 28, "tensordictprioritizedreplaybuff": 30, "tensordictreplaybuff": [31, 35], "unboundedcontinuoustensorspec": 33, "prioritizedsampl": 36, "randomsampl": 37, "sampler": 38, "lazymemmapstorag": 39, "lazytensorstorag": 40, "liststorag": 41, "storag": 42, "roundrobinwrit": 43, "writer": 44, "expand_as_right": 45, "expand_right": 46, "envbas": 47, "gymlikeenv": 48, "modelbasedenvbas": 49, "parallelenv": 50, "serialenv": 51, "dmcontrolenv": 52, "dmcontrolwrapp": 53, "gymenv": 54, "gymwrapp": 55, "dreamerenv": 56, "binarizereward": 57, "catfram": 58, "cattensor": 59, "centercrop": 60, "doubletofloat": 62, "finitetensordictcheck": 63, "flattenobserv": 64, "grayscal": 65, "noopresetenv": 66, "observationnorm": 67, "observationtransform": 68, "pinmemorytransform": 69, "r3mtransform": 70, "resiz": 71, "rewardclip": 72, "rewardsc": 73, "tensordictprim": 74, "totensorimag": 75, "transformedenv": 77, "unsqueezetransform": 78, "viptransform": 79, "vecnorm": 80, "gsdenois": 81, "exploration_mod": 82, "get_available_librari": 83, "set_exploration_mod": 84, "step_mdp": 85, "actor": 86, "actorcriticoper": 87, "actorcriticwrapp": 88, "actorvalueoper": 89, "cemplann": 90, "convnet": 91, "ddpgcnnactor": 92, "ddpgcnnqnet": 93, "ddpgmlpactor": 94, "ddpgmlpqnet": 95, "delta": 96, "distributionaldqnnet": 97, "distributionalqvalueactor": 98, "dreameractor": 99, "duelingcnndqnet": 100, "lstmnet": 101, "mlp": 102, "mpcplannerbas": 103, "noisylazylinear": 104, "noisylinear": 105, "obsdecod": 106, "obsencod": 107, "onehotcategor": 108, "probabilisticactor": 109, "probabilistictensordictmodul": 110, "qvalueactor": 111, "rssmposterior": 112, "rssmprior": 113, "squeeze2dlay": 114, "squeezelay": 115, "tanhdelta": 116, "tanhnorm": 117, "tensordictmodul": 118, "tensordictmodulewrapp": 119, "tensordictsequenti": 120, "truncatednorm": 121, "valueoper": 122, "reset_nois": 123, "distributionalqvaluehook": 124, "qvaluehook": 125, "clipppoloss": 126, "ddpgloss": 127, "dqnloss": 128, "distributionaldqnloss": 129, "hardupd": 130, "klpenppoloss": 131, "ppoloss": 132, "redqloss": 133, "sacloss": 134, "softupd": 135, "distance_loss": 136, "hold_out_net": 137, "hold_out_param": 138, "next_state_valu": 139, "gae": 140, "tdestim": 141, "tdlambdaestim": 142, "generalized_advantage_estim": 143, "td_advantage_estim": 144, "td_lambda_advantage_estim": 145, "td_lambda_return_estim": 146, "vec_generalized_advantage_estim": 147, "vec_td_lambda_advantage_estim": 148, "vec_td_lambda_return_estim": 149, "batchsubsampl": 150, "clearcudacach": 151, "countframeslog": 152, "logreward": 153, "record": 154, "rewardnorm": 156, "selectkei": 157, "trainer": [158, 185], "updateweight": 159, "correct_for_frame_skip": 160, "get_stats_random_rollout": 161, "make_collector_offpolici": 162, "make_collector_onpolici": 163, "make_ddpg_actor": 164, "make_ddpg_loss": 165, "make_dqn_actor": 166, "make_dqn_loss": 167, "make_ppo_loss": 168, "make_ppo_model": 169, "make_redq_loss": 170, "make_redq_model": 171, "make_replay_buff": 172, "make_sac_loss": 173, "make_sac_model": 174, "make_target_updat": 175, "make_train": 176, "parallel_env_constructor": 177, "sync_async_collector": 178, "sync_sync_collector": 179, "transformed_env_constructor": 180, "api": 181, "refer": 181, "knowledg": 182, "base": 182, "contribut": 182, "modul": 183, "hook": [183, 185], "model": 183, "explor": 183, "planner": 183, "distribut": 183, "object": 184, "dqn": 184, "ddpg": 184, "sac": 184, "redq": 184, "ppo": 184, "return": 184, "builder": 185, "_util": 186}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Example gallery": [[0, "example-gallery"]], "Welcome to the TorchRL Documentation!": [[1, "welcome-to-the-torchrl-documentation"]], "Contents:": [[1, null], [182, null]], "Indices and tables": [[1, "indices-and-tables"]], "torchrl.collectors package": [[2, "torchrl-collectors-package"]], "Data collectors": [[2, "data-collectors"]], "Helper functions": [[2, "helper-functions"]], "torchrl.data package": [[3, "torchrl-data-package"]], "Replay Buffers": [[3, "replay-buffers"]], "Composable Replay Buffers (Prototype)": [[3, "composable-replay-buffers-prototype"]], "TensorDict": [[3, "tensordict"], [29, "tensordict"]], "TensorSpec": [[3, "tensorspec"], [32, "tensorspec"]], "Utils": [[3, "utils"], [183, "utils"], [184, "utils"], [185, "utils"]], "torchrl.envs package": [[4, "torchrl-envs-package"]], "Helpers": [[4, "helpers"]], "Domain-specific": [[4, "domain-specific"]], "Libraries": [[4, "libraries"]], "Transforms": [[4, "transforms"]], "Working with gym": [[5, "working-with-gym"]], "Versioning": [[5, "versioning"]], "Working with habitat-lab": [[6, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[6, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[6, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[6, "installing-torchrl"]], "Using Habitat": [[6, "using-habitat"]], "Common issues": [[6, "common-issues"]], "About MuJoCo": [[7, "about-mujoco"]], "Installing MuJoCo": [[7, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[7, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[7, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[7, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[7, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[7, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[7, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips": [[8, "pro-tips"]], "Training on a cluster": [[8, "training-on-a-cluster"]], "Useful resources": [[9, "useful-resources"]], "Pytorch documentation": [[9, "pytorch-documentation"]], "functorch documentation": [[9, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[9, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[9, "educational-resource"]], "Forums": [[9, "forums"]], "Repos": [[9, "repos"]], "implement_for": [[10, "implement-for"]], "MultiSyncDataCollector": [[11, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[12, "multiasyncdatacollector"]], "SyncDataCollector": [[13, "syncdatacollector"]], "aSyncDataCollector": [[14, "asyncdatacollector"]], "split_trajectories": [[15, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[16, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[17, "boundedtensorspec"]], "CompositeSpec": [[18, "compositespec"]], "DiscreteTensorSpec": [[19, "discretetensorspec"]], "LazyStackedTensorDict": [[20, "lazystackedtensordict"]], "MultOneHotDiscreteTensorSpec": [[21, "multonehotdiscretetensorspec"]], "MultiStep": [[22, "multistep"]], "NdBoundedTensorSpec": [[23, "ndboundedtensorspec"]], "NdUnboundedContinuousTensorSpec": [[24, "ndunboundedcontinuoustensorspec"]], "OneHotDiscreteTensorSpec": [[25, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[26, "prioritizedreplaybuffer"]], "ReplayBuffer": [[27, "replaybuffer"], [34, "replaybuffer"], [155, "replaybuffer"]], "SubTensorDict": [[28, "subtensordict"]], "TensorDictPrioritizedReplayBuffer": [[30, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[31, "tensordictreplaybuffer"], [35, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[33, "unboundedcontinuoustensorspec"]], "PrioritizedSampler": [[36, "prioritizedsampler"]], "RandomSampler": [[37, "randomsampler"]], "Sampler": [[38, "sampler"]], "LazyMemmapStorage": [[39, "lazymemmapstorage"]], "LazyTensorStorage": [[40, "lazytensorstorage"]], "ListStorage": [[41, "liststorage"]], "Storage": [[42, "storage"]], "RoundRobinWriter": [[43, "roundrobinwriter"]], "Writer": [[44, "writer"]], "expand_as_right": [[45, "expand-as-right"]], "expand_right": [[46, "expand-right"]], "EnvBase": [[47, "envbase"]], "GymLikeEnv": [[48, "gymlikeenv"]], "ModelBasedEnvBase": [[49, "modelbasedenvbase"]], "ParallelEnv": [[50, "parallelenv"]], "SerialEnv": [[51, "serialenv"]], "DMControlEnv": [[52, "dmcontrolenv"]], "DMControlWrapper": [[53, "dmcontrolwrapper"]], "GymEnv": [[54, "gymenv"]], "GymWrapper": [[55, "gymwrapper"]], "DreamerEnv": [[56, "dreamerenv"]], "BinarizeReward": [[57, "binarizereward"]], "CatFrames": [[58, "catframes"]], "CatTensors": [[59, "cattensors"]], "CenterCrop": [[60, "centercrop"]], "Compose": [[61, "compose"]], "DoubleToFloat": [[62, "doubletofloat"]], "FiniteTensorDictCheck": [[63, "finitetensordictcheck"]], "FlattenObservation": [[64, "flattenobservation"]], "GrayScale": [[65, "grayscale"]], "NoopResetEnv": [[66, "noopresetenv"]], "ObservationNorm": [[67, "observationnorm"]], "ObservationTransform": [[68, "observationtransform"]], "PinMemoryTransform": [[69, "pinmemorytransform"]], "R3MTransform": [[70, "r3mtransform"]], "Resize": [[71, "resize"]], "RewardClipping": [[72, "rewardclipping"]], "RewardScaling": [[73, "rewardscaling"]], "TensorDictPrimer": [[74, "tensordictprimer"]], "ToTensorImage": [[75, "totensorimage"]], "Transform": [[76, "transform"]], "TransformedEnv": [[77, "transformedenv"]], "UnsqueezeTransform": [[78, "unsqueezetransform"]], "VIPTransform": [[79, "viptransform"]], "VecNorm": [[80, "vecnorm"]], "gSDENoise": [[81, "gsdenoise"]], "exploration_mode": [[82, "exploration-mode"]], "get_available_libraries": [[83, "get-available-libraries"]], "set_exploration_mode": [[84, "set-exploration-mode"]], "step_mdp": [[85, "step-mdp"]], "Actor": [[86, "actor"]], "ActorCriticOperator": [[87, "actorcriticoperator"]], "ActorCriticWrapper": [[88, "actorcriticwrapper"]], "ActorValueOperator": [[89, "actorvalueoperator"]], "CEMPlanner": [[90, "cemplanner"]], "ConvNet": [[91, "convnet"]], "DdpgCnnActor": [[92, "ddpgcnnactor"]], "DdpgCnnQNet": [[93, "ddpgcnnqnet"]], "DdpgMlpActor": [[94, "ddpgmlpactor"]], "DdpgMlpQNet": [[95, "ddpgmlpqnet"]], "Delta": [[96, "delta"]], "DistributionalDQNnet": [[97, "distributionaldqnnet"]], "DistributionalQValueActor": [[98, "distributionalqvalueactor"]], "DreamerActor": [[99, "dreameractor"]], "DuelingCnnDQNet": [[100, "duelingcnndqnet"]], "LSTMNet": [[101, "lstmnet"]], "MLP": [[102, "mlp"]], "MPCPlannerBase": [[103, "mpcplannerbase"]], "NoisyLazyLinear": [[104, "noisylazylinear"]], "NoisyLinear": [[105, "noisylinear"]], "ObsDecoder": [[106, "obsdecoder"]], "ObsEncoder": [[107, "obsencoder"]], "OneHotCategorical": [[108, "onehotcategorical"]], "ProbabilisticActor": [[109, "probabilisticactor"]], "ProbabilisticTensorDictModule": [[110, "probabilistictensordictmodule"]], "QValueActor": [[111, "qvalueactor"]], "RSSMPosterior": [[112, "rssmposterior"]], "RSSMPrior": [[113, "rssmprior"]], "Squeeze2dLayer": [[114, "squeeze2dlayer"]], "SqueezeLayer": [[115, "squeezelayer"]], "TanhDelta": [[116, "tanhdelta"]], "TanhNormal": [[117, "tanhnormal"]], "TensorDictModule": [[118, "tensordictmodule"]], "TensorDictModuleWrapper": [[119, "tensordictmodulewrapper"]], "TensorDictSequential": [[120, "tensordictsequential"]], "TruncatedNormal": [[121, "truncatednormal"]], "ValueOperator": [[122, "valueoperator"]], "reset_noise": [[123, "reset-noise"]], "DistributionalQValueHook": [[124, "distributionalqvaluehook"]], "QValueHook": [[125, "qvaluehook"]], "ClipPPOLoss": [[126, "clipppoloss"]], "DDPGLoss": [[127, "ddpgloss"]], "DQNLoss": [[128, "dqnloss"]], "DistributionalDQNLoss": [[129, "distributionaldqnloss"]], "HardUpdate": [[130, "hardupdate"]], "KLPENPPOLoss": [[131, "klpenppoloss"]], "PPOLoss": [[132, "ppoloss"]], "REDQLoss": [[133, "redqloss"]], "SACLoss": [[134, "sacloss"]], "SoftUpdate": [[135, "softupdate"]], "distance_loss": [[136, "distance-loss"]], "hold_out_net": [[137, "hold-out-net"]], "hold_out_params": [[138, "hold-out-params"]], "next_state_value": [[139, "next-state-value"]], "GAE": [[140, "gae"]], "TDEstimate": [[141, "tdestimate"]], "TDLambdaEstimate": [[142, "tdlambdaestimate"]], "generalized_advantage_estimate": [[143, "generalized-advantage-estimate"]], "td_advantage_estimate": [[144, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[145, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[146, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[147, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[148, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[149, "vec-td-lambda-return-estimate"]], "BatchSubSampler": [[150, "batchsubsampler"]], "ClearCudaCache": [[151, "clearcudacache"]], "CountFramesLog": [[152, "countframeslog"]], "LogReward": [[153, "logreward"]], "Recorder": [[154, "recorder"]], "RewardNormalizer": [[156, "rewardnormalizer"]], "SelectKeys": [[157, "selectkeys"]], "Trainer": [[158, "trainer"]], "UpdateWeights": [[159, "updateweights"]], "correct_for_frame_skip": [[160, "correct-for-frame-skip"]], "get_stats_random_rollout": [[161, "get-stats-random-rollout"]], "make_collector_offpolicy": [[162, "make-collector-offpolicy"]], "make_collector_onpolicy": [[163, "make-collector-onpolicy"]], "make_ddpg_actor": [[164, "make-ddpg-actor"]], "make_ddpg_loss": [[165, "make-ddpg-loss"]], "make_dqn_actor": [[166, "make-dqn-actor"]], "make_dqn_loss": [[167, "make-dqn-loss"]], "make_ppo_loss": [[168, "make-ppo-loss"]], "make_ppo_model": [[169, "make-ppo-model"]], "make_redq_loss": [[170, "make-redq-loss"]], "make_redq_model": [[171, "make-redq-model"]], "make_replay_buffer": [[172, "make-replay-buffer"]], "make_sac_loss": [[173, "make-sac-loss"]], "make_sac_model": [[174, "make-sac-model"]], "make_target_updater": [[175, "make-target-updater"]], "make_trainer": [[176, "make-trainer"]], "parallel_env_constructor": [[177, "parallel-env-constructor"]], "sync_async_collector": [[178, "sync-async-collector"]], "sync_sync_collector": [[179, "sync-sync-collector"]], "transformed_env_constructor": [[180, "transformed-env-constructor"]], "API Reference": [[181, "api-reference"]], "Knowledge Base": [[182, "knowledge-base"]], "Contributing": [[182, "contributing"]], "torchrl.modules package": [[183, "torchrl-modules-package"]], "TensorDict modules": [[183, "tensordict-modules"]], "Hooks": [[183, "hooks"]], "Models": [[183, "models"]], "Exploration": [[183, "exploration"]], "Planners": [[183, "planners"]], "Distributions": [[183, "distributions"]], "torchrl.objectives package": [[184, "torchrl-objectives-package"]], "DQN": [[184, "dqn"]], "DDPG": [[184, "ddpg"]], "SAC": [[184, "sac"]], "REDQ": [[184, "redq"]], "PPO": [[184, "ppo"]], "Returns": [[184, "returns"]], "torchrl.trainers package": [[185, "torchrl-trainers-package"]], "Trainer and hooks": [[185, "trainer-and-hooks"]], "Builders": [[185, "builders"]], "torchrl._utils package": [[186, "torchrl-utils-package"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[10, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors)": [[11, "torchrl.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors)": [[12, "torchrl.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "syncdatacollector (class in torchrl.collectors)": [[13, "torchrl.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors)": [[14, "torchrl.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[15, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[16, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[17, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.encode"]], "index() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[18, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.encode"]], "index() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.is_in"]], "project() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[19, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.encode"]], "index() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.zero"]], "lazystackedtensordict (class in torchrl.data)": [[20, "torchrl.data.LazyStackedTensorDict"]], "all() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.all"]], "any() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.any"]], "apply() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.apply"]], "apply_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.apply_"]], "batch_dims (torchrl.data.lazystackedtensordict property)": [[20, "torchrl.data.LazyStackedTensorDict.batch_dims"]], "batch_size (torchrl.data.lazystackedtensordict property)": [[20, "torchrl.data.LazyStackedTensorDict.batch_size"]], "chunk() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.chunk"]], "clone() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.clone"]], "contiguous() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.contiguous"]], "copy_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.copy_"]], "copy_at_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.copy_at_"]], "cpu() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.cpu"]], "cuda() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.cuda"]], "del_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.del_"]], "detach() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.detach"]], "detach_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.detach_"]], "device (torchrl.data.lazystackedtensordict property)": [[20, "torchrl.data.LazyStackedTensorDict.device"]], "empty() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.empty"]], "expand() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.expand"]], "fill_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.fill_"]], "get() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.get"]], "get_at() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.get_at"]], "get_sub_tensordict() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.get_sub_tensordict"]], "is_contiguous() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.is_contiguous"]], "is_memmap() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.is_memmap"]], "is_shared() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.is_shared"]], "items() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.items"]], "items_meta() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.items_meta"]], "keys() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.keys"]], "masked_fill() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.masked_fill"]], "masked_fill_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.masked_fill_"]], "masked_select() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.masked_select"]], "memmap_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.memmap_"]], "numel() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.numel"]], "permute() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.permute"]], "pin_memory() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.pin_memory"]], "rename_key() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.rename_key"]], "reshape() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.reshape"]], "select() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.select"]], "set() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.set"]], "set_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.set_"]], "set_at_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.set_at_"]], "shape (torchrl.data.lazystackedtensordict property)": [[20, "torchrl.data.LazyStackedTensorDict.shape"]], "share_memory_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.share_memory_"]], "size() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.size"]], "squeeze() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.squeeze"]], "to() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.to"]], "to_dict() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.to_dict"]], "to_tensordict() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.to_tensordict"]], "unbind() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.unbind"]], "unsqueeze() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.unsqueeze"]], "update() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.update"]], "update_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.update_"]], "update_at_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.update_at_"]], "values() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.values"]], "values_meta() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.values_meta"]], "view() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.view"]], "zero_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.zero_"]], "multonehotdiscretetensorspec (class in torchrl.data)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[22, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.zero_grad"]], "ndboundedtensorspec (class in torchrl.data)": [[23, "torchrl.data.NdBoundedTensorSpec"]], "assert_is_in() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.encode"]], "index() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.index"]], "is_in() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.is_in"]], "project() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.project"]], "rand() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.type_check"]], "zero() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.zero"]], "ndunboundedcontinuoustensorspec (class in torchrl.data)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.zero"]], "onehotdiscretetensorspec (class in torchrl.data)": [[25, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[26, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.add"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.update_priority"]], "replaybuffer (class in torchrl.data)": [[27, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.add"]], "extend() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.extend"]], "sample() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.sample"]], "subtensordict (class in torchrl.data)": [[28, "torchrl.data.SubTensorDict"]], "all() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.all"]], "any() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.any"]], "apply() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.apply"]], "apply_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.apply_"]], "batch_dims (torchrl.data.subtensordict property)": [[28, "torchrl.data.SubTensorDict.batch_dims"]], "batch_size (torchrl.data.subtensordict property)": [[28, "torchrl.data.SubTensorDict.batch_size"]], "chunk() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.chunk"]], "clone() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.clone"]], "contiguous() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.contiguous"]], "copy_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.copy_"]], "copy_at_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.copy_at_"]], "cpu() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.cpu"]], "cuda() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.cuda"]], "del_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.del_"]], "detach() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.detach"]], "detach_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.detach_"]], "device (torchrl.data.subtensordict property)": [[28, "torchrl.data.SubTensorDict.device"]], "empty() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.empty"]], "expand() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.expand"]], "fill_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.fill_"]], "get() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.get"]], "get_at() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.get_at"]], "get_sub_tensordict() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.get_sub_tensordict"]], "is_contiguous() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.is_contiguous"]], "is_memmap() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.is_memmap"]], "is_shared() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.is_shared"]], "items() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.items"]], "items_meta() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.items_meta"]], "keys() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.keys"]], "masked_fill() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.masked_fill"]], "masked_fill_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.masked_fill_"]], "masked_select() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.masked_select"]], "memmap_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.memmap_"]], "numel() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.numel"]], "permute() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.permute"]], "pin_memory() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.pin_memory"]], "rename_key() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.rename_key"]], "reshape() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.reshape"]], "select() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.select"]], "set() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.set"]], "set_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.set_"]], "set_at_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.set_at_"]], "shape (torchrl.data.subtensordict property)": [[28, "torchrl.data.SubTensorDict.shape"]], "share_memory_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.share_memory_"]], "size() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.size"]], "squeeze() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.squeeze"]], "to() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.to"]], "to_dict() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.to_dict"]], "to_tensordict() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.to_tensordict"]], "unbind() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.unbind"]], "unsqueeze() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.unsqueeze"]], "update() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.update"]], "update_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.update_"]], "update_at_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.update_at_"]], "values() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.values"]], "values_meta() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.values_meta"]], "view() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.view"]], "zero_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.zero_"]], "tensordict (class in torchrl.data)": [[29, "torchrl.data.TensorDict"]], "all() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.all"]], "any() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.any"]], "apply() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.apply"]], "apply_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.apply_"]], "batch_dims (torchrl.data.tensordict property)": [[29, "torchrl.data.TensorDict.batch_dims"]], "batch_size (torchrl.data.tensordict property)": [[29, "torchrl.data.TensorDict.batch_size"]], "chunk() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.chunk"]], "clone() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.clone"]], "contiguous() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.contiguous"]], "copy_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.copy_"]], "copy_at_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.copy_at_"]], "cpu() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.cpu"]], "cuda() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.cuda"]], "del_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.del_"]], "detach() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.detach"]], "detach_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.detach_"]], "device (torchrl.data.tensordict property)": [[29, "torchrl.data.TensorDict.device"]], "empty() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.empty"]], "expand() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.expand"]], "fill_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.fill_"]], "get() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.get"]], "get_at() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.get_at"]], "get_sub_tensordict() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.get_sub_tensordict"]], "is_contiguous() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.is_contiguous"]], "is_memmap() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.is_memmap"]], "is_shared() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.is_shared"]], "items() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.items"]], "items_meta() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.items_meta"]], "keys() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.keys"]], "masked_fill() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.masked_fill"]], "masked_fill_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.masked_fill_"]], "masked_select() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.masked_select"]], "memmap_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.memmap_"]], "numel() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.numel"]], "permute() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.permute"]], "pin_memory() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.pin_memory"]], "rename_key() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.rename_key"]], "reshape() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.reshape"]], "select() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.select"]], "set() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.set"]], "set_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.set_"]], "set_at_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.set_at_"]], "shape (torchrl.data.tensordict property)": [[29, "torchrl.data.TensorDict.shape"]], "share_memory_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.share_memory_"]], "size() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.size"]], "squeeze() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.squeeze"]], "to() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.to"]], "to_dict() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.to_dict"]], "to_tensordict() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.to_tensordict"]], "unbind() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.unbind"]], "unsqueeze() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.unsqueeze"]], "update() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.update"]], "update_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.update_"]], "update_at_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.update_at_"]], "values() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.values"]], "values_meta() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.values_meta"]], "view() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.view"]], "zero_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.zero_"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[30, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[30, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[30, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[30, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[30, "torchrl.data.TensorDictPrioritizedReplayBuffer.update_priority"]], "tensordictreplaybuffer (class in torchrl.data)": [[31, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[31, "torchrl.data.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[31, "torchrl.data.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[31, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[32, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.encode"]], "index() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[33, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "replaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[34, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[34, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.add"]], "extend() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[34, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.extend"]], "sample() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[34, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[35, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[35, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[35, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[35, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.sample"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[36, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[36, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[37, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[38, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[39, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[39, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[40, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[40, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[41, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[41, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[42, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[42, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[43, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[43, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[43, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[44, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[44, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[44, "torchrl.data.replay_buffers.writers.Writer.extend"]], "expand_as_right (class in torchrl.data.utils)": [[45, "torchrl.data.utils.expand_as_right"]], "expand_right (class in torchrl.data.utils)": [[46, "torchrl.data.utils.expand_right"]], "envbase (class in torchrl.envs)": [[47, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[47, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[47, "id0"], [47, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[47, "id1"], [47, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[47, "id2"], [47, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[47, "id3"], [47, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[47, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[47, "id4"], [47, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[47, "torchrl.envs.EnvBase.zero_grad"]], "gymlikeenv (class in torchrl.envs)": [[48, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[48, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[48, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[48, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[49, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[49, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[49, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[49, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[49, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[49, "torchrl.envs.step"]], "parallelenv (class in torchrl.envs)": [[50, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[50, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[50, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[50, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[51, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[51, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[51, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[51, "torchrl.envs.SerialEnv.zero_grad"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[52, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[53, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[54, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[55, "torchrl.envs.libs.gym.GymWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[56, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[57, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[57, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[58, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[58, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[58, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[59, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[59, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[60, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[60, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[61, "torchrl.envs.transforms.Compose"]], "reset() (torchrl.envs.transforms.compose method)": [[61, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[61, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[61, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[61, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[61, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[62, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[62, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[62, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[64, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "grayscale (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[65, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[66, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.ObservationNorm"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[67, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.R3MTransform"]], "forward() (torchrl.envs.transforms.r3mtransform method)": [[70, "torchrl.envs.transforms.R3MTransform.forward"]], "reset() (torchrl.envs.transforms.r3mtransform method)": [[70, "torchrl.envs.transforms.R3MTransform.reset"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[70, "torchrl.envs.transforms.R3MTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.r3mtransform method)": [[70, "torchrl.envs.transforms.R3MTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.r3mtransform method)": [[70, "torchrl.envs.transforms.R3MTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.r3mtransform method)": [[70, "torchrl.envs.transforms.R3MTransform.transform_reward_spec"]], "resize (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[71, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[72, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[73, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[74, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[74, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[74, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[75, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[76, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[76, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[76, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[76, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[76, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[77, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[77, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[77, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[77, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[77, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[77, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[77, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[77, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[77, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[77, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[77, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[78, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[78, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[78, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[78, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viptransform (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.VIPTransform"]], "forward() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.forward"]], "reset() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.reset"]], "to() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.transform_reward_spec"]], "vecnorm (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[80, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[80, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[80, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[80, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[81, "torchrl.envs.transforms.gSDENoise.reset"]], "exploration_mode() (in module torchrl.envs.utils)": [[82, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[83, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[84, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[85, "torchrl.envs.utils.step_mdp"]], "actor (class in torchrl.modules)": [[86, "torchrl.modules.Actor"]], "actorcriticoperator (class in torchrl.modules)": [[87, "torchrl.modules.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.actorcriticoperator method)": [[87, "torchrl.modules.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.actorcriticoperator method)": [[87, "torchrl.modules.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules)": [[88, "torchrl.modules.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.actorcriticwrapper method)": [[88, "torchrl.modules.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorcriticwrapper method)": [[88, "torchrl.modules.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules)": [[89, "torchrl.modules.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.actorvalueoperator method)": [[89, "torchrl.modules.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorvalueoperator method)": [[89, "torchrl.modules.ActorValueOperator.get_value_operator"]], "cemplanner (class in torchrl.modules)": [[90, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[90, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[91, "torchrl.modules.ConvNet"]], "ddpgcnnactor (class in torchrl.modules)": [[92, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[92, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[93, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[93, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[94, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[94, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[95, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[95, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[96, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[96, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[96, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[96, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[96, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[96, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[97, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[97, "torchrl.modules.DistributionalDQNnet.forward"]], "distributionalqvalueactor (class in torchrl.modules)": [[98, "torchrl.modules.DistributionalQValueActor"]], "dreameractor (class in torchrl.modules)": [[99, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[99, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[100, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[100, "torchrl.modules.DuelingCnnDQNet.forward"]], "lstmnet (class in torchrl.modules)": [[101, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[101, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[102, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[102, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[103, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[103, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[103, "torchrl.modules.MPCPlannerBase.planning"]], "noisylazylinear (class in torchrl.modules)": [[104, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[104, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[105, "torchrl.modules.NoisyLinear"]], "obsdecoder (class in torchrl.modules)": [[106, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[106, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[107, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[107, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[108, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[108, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[108, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[108, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[108, "torchrl.modules.OneHotCategorical.sample"]], "probabilisticactor (class in torchrl.modules)": [[109, "torchrl.modules.ProbabilisticActor"]], "probabilistictensordictmodule (class in torchrl.modules)": [[110, "torchrl.modules.ProbabilisticTensorDictModule"]], "forward() (torchrl.modules.probabilistictensordictmodule method)": [[110, "torchrl.modules.ProbabilisticTensorDictModule.forward"]], "make_functional_with_buffers() (torchrl.modules.probabilistictensordictmodule method)": [[110, "torchrl.modules.ProbabilisticTensorDictModule.make_functional_with_buffers"]], "qvalueactor (class in torchrl.modules)": [[111, "torchrl.modules.QValueActor"]], "rssmposterior (class in torchrl.modules)": [[112, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[112, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[113, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[113, "torchrl.modules.RSSMPrior.forward"]], "squeeze2dlayer (class in torchrl.modules)": [[114, "torchrl.modules.Squeeze2dLayer"]], "squeezelayer (class in torchrl.modules)": [[115, "torchrl.modules.SqueezeLayer"]], "forward() (torchrl.modules.squeezelayer method)": [[115, "torchrl.modules.SqueezeLayer.forward"]], "tanhdelta (class in torchrl.modules)": [[116, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[116, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[116, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[117, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[117, "torchrl.modules.TanhNormal.mode"]], "tensordictmodule (class in torchrl.modules)": [[118, "torchrl.modules.TensorDictModule"]], "forward() (torchrl.modules.tensordictmodule method)": [[118, "torchrl.modules.TensorDictModule.forward"]], "make_functional_with_buffers() (torchrl.modules.tensordictmodule method)": [[118, "torchrl.modules.TensorDictModule.make_functional_with_buffers"]], "random() (torchrl.modules.tensordictmodule method)": [[118, "torchrl.modules.TensorDictModule.random"]], "random_sample() (torchrl.modules.tensordictmodule method)": [[118, "torchrl.modules.TensorDictModule.random_sample"]], "to() (torchrl.modules.tensordictmodule method)": [[118, "torchrl.modules.TensorDictModule.to"]], "tensordictmodulewrapper (class in torchrl.modules)": [[119, "torchrl.modules.TensorDictModuleWrapper"]], "forward() (torchrl.modules.tensordictmodulewrapper method)": [[119, "torchrl.modules.TensorDictModuleWrapper.forward"]], "tensordictsequential (class in torchrl.modules)": [[120, "torchrl.modules.TensorDictSequential"]], "forward() (torchrl.modules.tensordictsequential method)": [[120, "torchrl.modules.TensorDictSequential.forward"]], "make_functional_with_buffers() (torchrl.modules.tensordictsequential method)": [[120, "torchrl.modules.TensorDictSequential.make_functional_with_buffers"]], "select_subsequence() (torchrl.modules.tensordictsequential method)": [[120, "torchrl.modules.TensorDictSequential.select_subsequence"]], "truncatednormal (class in torchrl.modules)": [[121, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[121, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[121, "torchrl.modules.TruncatedNormal.mode"]], "valueoperator (class in torchrl.modules)": [[122, "torchrl.modules.ValueOperator"]], "reset_noise (class in torchrl.modules)": [[123, "torchrl.modules.reset_noise"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[124, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[125, "torchrl.modules.tensordict_module.actors.QValueHook"]], "clipppoloss (class in torchrl.objectives)": [[126, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[126, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[127, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[127, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[128, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[128, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[129, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[129, "torchrl.objectives.DistributionalDQNLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[130, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[131, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[131, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[132, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[132, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[133, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[133, "torchrl.objectives.REDQLoss.forward"]], "sacloss (class in torchrl.objectives)": [[134, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[134, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[135, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[136, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[137, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[138, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[139, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[140, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[140, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[141, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[141, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[142, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[142, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[143, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[144, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[145, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[146, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[147, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[148, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[149, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "batchsubsampler (class in torchrl.trainers)": [[150, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[151, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[152, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[153, "torchrl.trainers.LogReward"]], "recorder (class in torchrl.trainers)": [[154, "torchrl.trainers.Recorder"]], "replaybuffer (class in torchrl.trainers)": [[155, "torchrl.trainers.ReplayBuffer"]], "add() (torchrl.trainers.replaybuffer method)": [[155, "torchrl.trainers.ReplayBuffer.add"]], "extend() (torchrl.trainers.replaybuffer method)": [[155, "torchrl.trainers.ReplayBuffer.extend"]], "sample() (torchrl.trainers.replaybuffer method)": [[155, "torchrl.trainers.ReplayBuffer.sample"]], "rewardnormalizer (class in torchrl.trainers)": [[156, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[157, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[158, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[159, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[160, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[161, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[162, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[163, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[164, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[165, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[166, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[167, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[168, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[169, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[170, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[171, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[172, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[173, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[174, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[175, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[176, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[177, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[178, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[179, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[180, "torchrl.trainers.helpers.transformed_env_constructor"]]}})