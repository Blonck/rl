Search.setIndex({"docnames": ["auto_examples/index", "index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.NdBoundedTensorSpec", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.Actor", "reference/generated/torchrl.modules.ActorCriticOperator", "reference/generated/torchrl.modules.ActorCriticWrapper", "reference/generated/torchrl.modules.ActorValueOperator", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueActor", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.ProbabilisticActor", "reference/generated/torchrl.modules.ProbabilisticTensorDictModule", "reference/generated/torchrl.modules.QValueActor", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TensorDictModule", "reference/generated/torchrl.modules.TensorDictModuleWrapper", "reference/generated/torchrl.modules.TensorDictSequential", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.ValueOperator", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBuffer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils"], "filenames": ["auto_examples/index.rst", "index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.NdBoundedTensorSpec.rst", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.Actor.rst", "reference/generated/torchrl.modules.ActorCriticOperator.rst", "reference/generated/torchrl.modules.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.ActorValueOperator.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.ProbabilisticActor.rst", "reference/generated/torchrl.modules.ProbabilisticTensorDictModule.rst", "reference/generated/torchrl.modules.QValueActor.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TensorDictModule.rst", "reference/generated/torchrl.modules.TensorDictModuleWrapper.rst", "reference/generated/torchrl.modules.TensorDictSequential.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.ValueOperator.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBuffer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst"], "titles": ["Example gallery", "Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips", "Useful resources", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultOneHotDiscreteTensorSpec", "MultiStep", "NdBoundedTensorSpec", "NdUnboundedContinuousTensorSpec", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "TensorDictReplayBuffer", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "GymLikeEnv", "ModelBasedEnvBase", "ParallelEnv", "SerialEnv", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DoubleToFloat", "FiniteTensorDictCheck", "FlattenObservation", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "TensorDictPrimer", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPTransform", "VecNorm", "gSDENoise", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DistributionalQValueActor", "DreamerActor", "DuelingCnnDQNet", "LSTMNet", "MLP", "MPCPlannerBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "ProbabilisticActor", "ProbabilisticTensorDictModule", "QValueActor", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TensorDictModule", "TensorDictModuleWrapper", "TensorDictSequential", "TruncatedNormal", "ValueOperator", "reset_noise", "DistributionalQValueHook", "QValueHook", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "Recorder", "ReplayBuffer", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package"], "terms": {"below": [0, 4, 7, 11, 12, 13, 14, 21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 87, 98, 113, 114, 117], "i": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 60, 62, 63, 66, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 100, 101, 105, 106, 109, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 135, 136, 137, 138, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 154, 156, 157, 160, 165, 167, 170, 172, 176, 178, 181], "download": [0, 7, 66, 75], "all": [0, 1, 4, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 57, 59, 63, 66, 70, 72, 73, 74, 75, 76, 79, 80, 81, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116, 154, 156, 174, 175, 176, 178, 181], "python": [0, 1, 4, 6, 7, 114, 181], "sourc": [0, 1, 7, 154], "code": [0, 1, 4, 7, 66, 116], "auto_examples_python": 0, "zip": 0, "jupyt": 0, "notebook": 0, "auto_examples_jupyt": 0, "gener": [0, 4, 7, 13, 32, 36, 45, 63, 82, 92, 104, 105, 106, 118, 129, 136, 139, 140, 143, 154], "sphinx": 0, "an": [1, 3, 4, 5, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 59, 62, 63, 66, 67, 71, 72, 73, 76, 83, 84, 85, 87, 88, 89, 90, 91, 97, 98, 100, 103, 106, 110, 111, 122, 125, 127, 128, 129, 130, 136, 137, 138, 150, 151, 154, 157, 160, 173, 174, 175, 176, 178], "open": [1, 5, 7, 10], "reinforc": [1, 3, 4, 9, 54, 88, 89, 90, 91, 120, 125, 126, 130, 131, 160], "learn": [1, 3, 4, 7, 9, 21, 54, 88, 89, 90, 91, 101, 120, 125, 126, 129, 130, 131, 160], "rl": [1, 3, 8, 11, 12, 13, 14, 45, 82, 101, 105, 118, 128, 146, 178, 181], "librari": [1, 7, 9, 79, 178, 182], "pytorch": [1, 3, 71, 154, 181], "It": [1, 4, 7, 21, 27, 43, 44, 45, 46, 47, 73, 88, 90, 95, 106, 108, 109, 122, 125, 127, 128, 129, 130, 135, 150, 167, 178], "provid": [1, 3, 4, 9, 13, 21, 25, 26, 27, 32, 43, 44, 45, 46, 47, 55, 62, 63, 66, 70, 73, 75, 76, 82, 87, 97, 98, 99, 105, 120, 135, 146, 151, 157, 165, 167, 170, 172, 178, 181], "first": [1, 4, 7, 10, 11, 12, 13, 14, 44, 55, 60, 63, 66, 71, 73, 98, 100, 103, 106, 114, 153], "low": 1, "high": [1, 9, 136, 139, 140, 143], "level": [1, 18, 127], "abstract": [1, 17, 18, 19, 22, 23, 29, 30, 42, 43, 64, 99, 181], "ar": [1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 21, 24, 37, 38, 39, 40, 43, 44, 45, 46, 47, 57, 58, 59, 66, 70, 72, 73, 75, 76, 81, 86, 91, 92, 97, 101, 104, 106, 109, 114, 115, 116, 122, 125, 127, 128, 129, 130, 132, 135, 136, 137, 138, 172, 176, 181, 182], "intend": [1, 7, 11, 12, 13, 14], "effici": [1, 3, 101], "modular": [1, 116], "properli": 1, "test": [1, 4, 5, 97, 150, 172], "The": [1, 3, 4, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 40, 43, 44, 46, 47, 57, 63, 66, 69, 70, 73, 75, 82, 83, 86, 88, 89, 90, 91, 97, 99, 101, 105, 106, 108, 109, 114, 116, 118, 122, 123, 124, 127, 130, 135, 146, 172, 174, 175, 181], "aim": [1, 4, 7, 66, 75, 98, 156, 178], "support": [1, 4, 40, 72, 79, 94, 106, 114, 116, 120, 125, 181], "research": [1, 7, 9], "most": [1, 4, 7, 21], "written": [1, 27, 37, 43, 44, 46, 47, 106, 114, 122, 127, 128, 135, 181], "highli": [1, 3], "wai": [1, 128], "can": [1, 4, 6, 7, 8, 10, 11, 12, 13, 14, 18, 19, 21, 27, 29, 31, 43, 44, 46, 47, 54, 57, 62, 63, 66, 70, 72, 73, 75, 76, 86, 99, 101, 106, 113, 114, 115, 116, 117, 122, 123, 124, 125, 127, 128, 129, 130, 135, 150, 165, 167, 170, 174, 175, 176, 178, 181], "easili": [1, 4, 7, 46, 47, 165, 167, 170], "swap": [1, 4], "compon": [1, 4, 37, 38, 39, 40, 120, 121, 122, 125, 127, 128, 129, 130, 154], "transform": [1, 21, 44, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 88, 95, 106, 114, 116, 120, 121, 160, 162, 165, 167, 170, 176], "them": [1, 7, 31, 32, 33, 43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116, 127], "write": [1, 21, 44, 65, 106, 114, 116, 123, 124, 129, 130, 135, 181], "new": [1, 4, 11, 12, 13, 14, 21, 25, 27, 34, 43, 44, 46, 47, 72, 76, 81, 114, 116, 122, 124, 125, 127, 128, 129, 130], "ones": [1, 18, 21, 43, 44, 46, 47, 55, 57, 58, 63, 66, 70, 73, 75, 114], "littl": [1, 4], "effort": [1, 4], "thi": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 18, 21, 24, 27, 33, 37, 38, 39, 40, 43, 44, 45, 46, 47, 54, 55, 57, 59, 63, 66, 70, 72, 73, 74, 75, 76, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 146, 148, 150, 154, 155, 156, 157, 165, 167, 170, 172, 176, 178, 181], "repo": [1, 6, 178], "attempt": 1, "align": 1, "exist": [1, 21, 43, 44, 46, 47, 55, 73, 157, 176], "ecosystem": 1, "ha": [1, 7, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 45, 46, 47, 70, 73, 106, 114, 116, 127], "dataset": [1, 25, 26, 27, 32, 76, 151], "pillar": 1, "environ": [1, 4, 8, 10, 11, 12, 13, 14, 21, 24, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 58, 62, 63, 66, 72, 73, 76, 86, 97, 99, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 156, 157, 158, 159, 160, 162, 165, 167, 170, 172, 173, 174, 175, 176, 178], "model": [1, 4, 9, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 66, 75, 77, 83, 84, 85, 87, 98, 99, 106, 114, 128, 129, 130, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 178, 181], "data": [1, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 63, 82, 83, 84, 85, 86, 94, 97, 105, 106, 107, 114, 115, 116, 118, 120, 121, 123, 129, 130, 136, 137, 138, 146, 151, 154, 155, 158, 172, 174, 175, 176, 177, 181], "util": [1, 11, 12, 13, 14, 15, 21, 43, 44, 46, 47, 66, 75, 78, 79, 80, 81, 87, 115, 172, 182], "e": [1, 4, 10, 11, 12, 13, 14, 18, 21, 24, 37, 38, 43, 44, 46, 47, 55, 57, 66, 70, 72, 73, 75, 106, 113, 114, 117, 121, 135, 146, 156, 175], "g": [1, 4, 10, 21, 24, 43, 44, 46, 47, 55, 57, 66, 70, 72, 73, 75, 106, 113, 114, 117, 135, 141, 142, 144, 145, 175], "collector": [1, 11, 12, 13, 14, 15, 154, 155, 158, 159, 172, 174, 175, 177, 181], "contain": [1, 4, 7, 11, 12, 13, 14, 18, 21, 25, 26, 27, 28, 29, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 57, 66, 70, 73, 75, 76, 81, 86, 87, 98, 114, 115, 122, 123, 124, 125, 127, 128, 129, 130, 135, 136, 137, 138, 146, 151, 156, 160, 162, 165, 167, 170, 172, 173, 174, 175, 176, 181], "etc": [1, 4, 7, 21, 23, 30, 43, 44, 46, 47, 73, 98], "have": [1, 4, 6, 7, 11, 12, 14, 18, 21, 40, 43, 44, 46, 47, 54, 62, 72, 73, 76, 87, 97, 98, 116, 122, 127, 128, 132, 146, 154, 181], "few": [1, 3, 8, 146], "depend": [1, 4, 7, 118, 128], "possibl": [1, 4, 19, 21, 24, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114, 150, 154], "standard": [1, 63, 76, 86, 95, 100, 101, 136, 137, 138], "numpi": [1, 13, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 71, 154], "common": [1, 4, 44, 46, 47, 83, 84, 85, 106, 172, 178, 181], "openai": [1, 7, 50, 51], "gym": [1, 4, 10, 44, 50, 51, 63, 70, 76, 160, 162, 165, 167, 170, 172, 178], "onli": [1, 5, 7, 11, 12, 14, 18, 21, 27, 43, 44, 46, 47, 55, 57, 66, 70, 73, 75, 76, 97, 106, 114, 116, 157, 181], "option": [1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 37, 38, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 81, 82, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 112, 113, 114, 116, 117, 118, 120, 121, 123, 124, 128, 129, 130, 135, 136, 137, 138, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 163, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176], "On": [1, 7], "end": [1, 21, 43, 44, 46, 47, 73, 87, 99, 139, 140, 141, 142, 143, 144, 145], "come": [1, 46, 47, 82, 83, 84, 85, 105, 118], "set": [1, 3, 4, 7, 9, 11, 12, 13, 14, 21, 24, 40, 43, 44, 45, 46, 47, 55, 57, 66, 70, 73, 75, 78, 80, 114, 115, 146, 150, 159, 176, 178, 182], "re": [1, 4, 8, 21, 43, 44, 46, 47, 106, 181], "usabl": [1, 181], "function": [1, 10, 15, 21, 37, 38, 39, 40, 43, 44, 46, 47, 57, 66, 72, 73, 74, 75, 76, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 103, 104, 106, 108, 109, 111, 114, 115, 116, 117, 118, 122, 123, 124, 127, 128, 129, 130, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 160, 162, 165, 167, 170, 172], "cost": [1, 3, 19], "return": [1, 4, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 97, 98, 99, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 135, 136, 137, 138, 141, 142, 144, 145, 151, 154, 156, 158, 160, 162, 165, 167, 170, 172, 173, 174, 175, 176, 181], "process": [1, 4, 11, 12, 14, 46, 47, 76, 181], "good": [1, 9], "runtim": [1, 21, 43, 44, 46, 47], "perform": [1, 4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 57, 62, 66, 72, 73, 74, 75, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116, 128, 150, 154], "api": [1, 4, 66, 75, 181], "refer": [1, 7, 21, 43, 44, 46, 47, 73, 76, 86, 95, 102, 103, 108, 109, 120, 125, 128, 136, 139, 140, 143, 160], "packag": [1, 6, 177, 178], "helper": [1, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "replai": [1, 13, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 40, 41, 46, 47, 123, 124, 129, 130, 151, 154, 168, 172, 181], "buffer": [1, 13, 21, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 57, 66, 70, 73, 75, 105, 106, 107, 114, 115, 116, 118, 120, 121, 123, 124, 129, 130, 136, 137, 138, 151, 154, 168, 172, 181], "compos": [1, 4, 21, 32, 35, 36, 41, 43, 44, 46, 47, 72, 73, 76, 160, 162, 165, 167, 170], "prototyp": [1, 9], "tensorspec": [1, 4, 16, 17, 18, 19, 20, 22, 23, 24, 30, 43, 45, 53, 54, 55, 56, 57, 58, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 105, 106, 109, 114], "env": [1, 6, 7, 21, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 99, 114, 157, 158, 159, 160, 162, 165, 167, 170, 172, 174, 175, 176, 177], "envbas": [1, 4, 11, 12, 13, 14, 44, 46, 47, 62, 72, 73, 76, 86, 99, 150, 157, 158, 159, 160, 162, 165, 167, 170, 172, 174, 175, 176], "gymlikeenv": 1, "vector": [1, 16, 24, 46, 47, 88, 90, 98, 138, 144, 145], "domain": [1, 3, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 70, 106, 114, 116], "specif": [1, 5, 27, 28, 33, 44, 154, 181], "modul": [1, 4, 10, 21, 43, 44, 45, 46, 47, 57, 66, 70, 72, 73, 74, 75, 76, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 129, 131, 133, 154, 161, 163, 164, 166, 169, 172, 177, 181], "tensordict": [1, 4, 11, 12, 13, 14, 15, 18, 19, 21, 27, 28, 31, 33, 37, 38, 43, 44, 45, 46, 47, 54, 55, 57, 58, 59, 62, 63, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 94, 97, 99, 105, 106, 107, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 135, 136, 137, 138, 146, 153, 154, 160, 162, 165, 167, 170, 181], "hook": [1, 21, 43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 102, 103, 106, 107, 108, 109, 111, 114, 115, 116, 120, 121, 148, 149, 150, 152, 154, 155], "explor": [1, 77, 78, 80, 101, 106, 114, 115, 150, 158, 159, 172], "planner": [1, 86], "distribut": [1, 3, 4, 9, 25, 27, 63, 86, 92, 93, 94, 95, 104, 106, 108, 109, 112, 113, 117, 120, 122, 125, 127, 128, 181], "object": [1, 4, 11, 12, 13, 14, 18, 21, 37, 38, 39, 40, 43, 44, 46, 47, 66, 72, 73, 76, 82, 83, 105, 106, 114, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 157, 158, 159, 171, 172, 176, 177, 181], "dqn": [1, 94, 107, 120, 124, 125, 126, 131, 162, 163], "ddpg": [1, 88, 89, 90, 91, 123, 126, 131, 160, 161], "sac": [1, 129, 130, 169, 170], "redq": [1, 129, 166, 167], "ppo": [1, 106, 122, 127, 128, 164, 165], "trainer": [1, 122, 125, 127, 128, 129, 130, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "checkpoint": 1, "builder": 1, "_util": [1, 10, 177], "implement_for": 1, "knowledg": 1, "base": [1, 4, 9, 11, 12, 13, 14, 36, 42, 45, 83, 154, 165, 167, 170, 181], "contribut": 1, "work": [1, 7, 8, 21, 43, 44, 46, 47, 55, 66, 76, 87, 98, 154, 178], "version": [1, 10, 21, 43, 44, 46, 47, 138], "habitat": [1, 178], "lab": [1, 4, 48, 49, 178], "up": [1, 3, 4, 8, 9, 19, 178], "your": [1, 7, 8, 21, 43, 44, 46, 47, 76, 176, 178], "issu": [1, 5, 106, 114, 178], "about": [1, 178], "mujoco": [1, 6, 178], "instal": [1, 154, 178], "prerequisit": 1, "render": [1, 8, 150, 178], "bindindg": 1, "2": [1, 20, 21, 43, 44, 46, 47, 55, 57, 63, 66, 70, 73, 75, 76, 87, 88, 89, 90, 94, 96, 98, 114, 118, 120, 122, 123, 127, 129, 130, 135, 141, 142, 144, 145, 146], "1": [1, 3, 4, 11, 12, 13, 14, 19, 20, 21, 24, 43, 44, 45, 46, 47, 53, 55, 57, 58, 62, 63, 66, 70, 71, 73, 75, 76, 81, 83, 84, 85, 86, 87, 88, 89, 91, 96, 98, 100, 101, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 127, 128, 129, 130, 131, 135, 139, 140, 141, 142, 143, 144, 145, 146, 150, 152, 160, 162, 165, 167, 170, 172, 176, 178, 181], "old": [1, 127], "bind": 1, "py": [1, 181], "when": [1, 4, 5, 8, 11, 12, 13, 14, 21, 25, 26, 27, 32, 37, 38, 39, 40, 43, 44, 46, 47, 57, 62, 66, 70, 72, 73, 75, 76, 80, 86, 98, 100, 106, 113, 114, 116, 122, 127, 128, 135, 151, 176, 178, 181], "pro": [1, 7, 178], "tip": [1, 7, 178], "train": [1, 11, 12, 13, 14, 21, 43, 44, 46, 47, 66, 73, 75, 88, 90, 122, 125, 127, 128, 129, 130, 154, 155, 172, 181], "cluster": [1, 6, 7, 178], "us": [1, 3, 4, 7, 10, 11, 12, 13, 14, 18, 19, 21, 25, 26, 27, 31, 32, 33, 34, 43, 44, 45, 46, 47, 48, 55, 56, 63, 66, 70, 71, 72, 73, 75, 76, 80, 81, 86, 87, 88, 89, 95, 98, 101, 106, 113, 114, 115, 116, 117, 120, 122, 123, 124, 125, 127, 128, 129, 130, 132, 135, 136, 137, 138, 139, 140, 143, 150, 151, 154, 155, 157, 158, 159, 160, 168, 172, 176, 178, 181, 182], "resourc": [1, 178], "functorch": [1, 94, 105, 106, 107, 114, 115, 116, 118, 120, 121], "blog": 1, "websit": 1, "index": [1, 7, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 41, 42, 81, 151], "search": 1, "page": [1, 7], "central": 3, "part": [3, 21, 43, 44, 46, 47, 106, 118, 146, 176], "off": [3, 106, 113, 114, 116, 117, 130, 150, 158, 181], "polici": [3, 4, 11, 12, 13, 14, 43, 44, 45, 46, 47, 80, 81, 83, 84, 85, 101, 106, 114, 120, 121, 122, 123, 127, 128, 129, 130, 150, 155, 158, 159, 160, 162, 165, 172, 174, 175, 181], "algorithm": [3, 9, 11, 12, 45, 128, 129, 146, 158, 165, 181], "implement": [3, 4, 9, 10, 21, 40, 43, 44, 46, 47, 76, 112, 113, 117, 128, 130, 165, 167, 170, 181], "wide": [3, 4], "we": [3, 4, 5, 7, 9, 18, 21, 43, 44, 46, 47, 66, 76, 86, 97, 116, 178, 181], "also": [3, 4, 8, 21, 27, 43, 44, 46, 47, 73, 109, 116, 123, 124, 181], "storag": [3, 21, 25, 26, 27, 28, 31, 32, 33, 37, 38, 39, 43, 44, 46, 47, 151, 181], "choic": 3, "veri": [3, 4], "influenti": 3, "sampl": [3, 9, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 43, 45, 86, 92, 104, 106, 108, 113, 114, 117, 122, 123, 124, 127, 128, 146, 151, 154, 156], "latenc": 3, "especi": [3, 4, 7, 8, 55], "larger": 3, "volum": 3, "lazymemmapstorag": 3, "advis": 3, "share": [3, 37, 38, 39, 40, 46, 47, 76, 83, 84, 85, 114, 118, 120, 121, 176], "due": [3, 4], "lower": [3, 11, 12, 13, 14, 17, 22, 76, 108, 109], "serialis": 3, "memmaptensor": 3, "well": [3, 4, 11, 12, 14, 21, 40, 43, 44, 46, 47, 108, 109], "abil": 3, "specifi": [3, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 74, 86, 106, 114], "file": [3, 6, 7, 181], "locat": [3, 7, 44, 63, 69, 113, 117], "improv": 3, "node": [3, 160, 162, 165, 167, 170], "failur": 3, "recoveri": 3, "follow": [3, 4, 6, 7, 21, 43, 44, 45, 46, 47, 66, 87, 98, 122, 127, 154, 167, 170, 181], "mean": [3, 4, 7, 13, 63, 76, 86, 92, 95, 97, 106, 112, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "over": [3, 4, 11, 12, 13, 14, 21, 43, 44, 46, 47, 63, 116, 125, 156, 181], "liststorag": [3, 25, 26, 27, 32, 151], "were": [3, 7, 46, 47], "found": [3, 6, 7, 18, 21, 27, 43, 44, 46, 47, 76, 123, 128], "from": [3, 4, 9, 10, 11, 12, 13, 14, 15, 21, 24, 25, 26, 27, 28, 31, 32, 33, 37, 38, 39, 40, 43, 44, 45, 46, 47, 55, 63, 66, 70, 71, 72, 73, 75, 76, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 98, 99, 100, 105, 106, 107, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 127, 128, 129, 130, 135, 146, 151, 154, 156, 157, 160, 162, 165, 167, 168, 170, 172, 173, 176, 178, 181], "rough": 3, "benchmark": [3, 9], "http": [3, 6, 7, 25, 34, 54, 66, 88, 89, 90, 91, 95, 96, 101, 102, 103, 108, 109, 120, 125, 126, 128, 129, 130, 131, 136, 139, 140, 143, 160, 165, 167, 170], "github": [3, 6, 7], "com": [3, 6, 7], "tree": 3, "main": [3, 106, 154], "type": [3, 21, 29, 43, 44, 45, 46, 47, 57, 66, 70, 73, 75, 76, 87, 98, 101, 106, 114, 160, 162, 165, 167, 170, 174], "speed": [3, 8, 19], "1x": 3, "lazytensorstorag": 3, "83x": 3, "3": [3, 4, 6, 7, 18, 19, 20, 21, 24, 43, 44, 46, 47, 54, 57, 60, 63, 66, 70, 71, 73, 75, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 98, 105, 106, 114, 116, 118, 120, 141, 142, 144, 145, 153, 162, 181], "44x": 3, "parent": [3, 4, 29, 43, 55, 63, 66, 72, 83, 128], "class": [3, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 174, 175, 176, 181], "subclass": [3, 4, 43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 102, 103, 106, 107, 108, 109, 111, 114, 115, 116, 128], "defin": [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116, 173], "basic": [3, 45], "properti": [3, 43, 44, 45, 46, 47, 73, 92, 100, 104, 112, 113, 117], "observ": [3, 4, 29, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 60, 61, 63, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 97, 102, 103, 105, 107, 108, 118, 120, 121, 136, 137, 138, 160, 162, 165, 167, 170, 172, 181], "action": [3, 4, 9, 19, 24, 29, 43, 44, 45, 46, 47, 58, 62, 73, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 105, 106, 107, 109, 112, 113, 118, 120, 121, 124, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 160, 162, 165, 167, 170, 172, 176, 181], "shape": [3, 4, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43, 44, 46, 47, 55, 71, 92, 93, 98, 100, 104, 105, 106, 112, 114, 115, 116, 132, 146, 154, 172], "devic": [3, 4, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 37, 38, 43, 44, 45, 46, 47, 57, 65, 66, 70, 71, 73, 75, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 100, 101, 105, 106, 107, 114, 115, 116, 118, 120, 121, 123, 155, 160, 162, 165, 167, 168, 170], "dtype": [3, 4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 43, 44, 45, 46, 47, 57, 58, 63, 66, 70, 71, 73, 75, 83, 84, 85, 86, 94, 100, 101, 105, 106, 107, 114, 115, 116, 118, 120, 121, 160, 162, 165, 167, 170], "offer": [4, 7], "handl": [4, 21, 43, 44, 46, 47, 76, 98, 154, 174, 175], "differ": [4, 11, 12, 13, 14, 21, 43, 44, 46, 47, 73, 98, 120, 121, 128, 132, 137, 150, 154, 155, 174, 175, 181], "backend": [4, 7, 181], "dm": 4, "control": [4, 46, 47, 48, 49, 88, 89, 90, 91, 99, 109, 122, 127, 128, 131, 136, 139, 140, 143, 160, 181], "custom": [4, 21, 43, 44, 46, 47, 176], "goal": 4, "abl": 4, "experi": [4, 25, 34, 178], "even": [4, 8, 12, 37, 38, 39, 40], "simul": [4, 7, 52, 86], "some": [4, 7, 8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 66, 88, 106, 111, 116, 146, 156, 181], "out": [4, 21, 43, 44, 46, 47, 100, 101, 106, 114, 133, 134, 181], "box": [4, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "wrapper": [4, 14, 27, 28, 33, 45, 48, 49, 50, 51, 106, 114, 115, 136, 176], "under": [4, 21, 43, 44, 46, 47, 106, 114], "lib": [4, 6, 7, 9, 48, 49, 50, 51, 63, 70, 76, 160, 162, 165, 167, 170, 172], "which": [4, 7, 10, 11, 12, 13, 14, 18, 19, 21, 24, 33, 43, 44, 46, 47, 54, 55, 62, 66, 72, 73, 83, 84, 85, 106, 113, 114, 116, 117, 122, 125, 127, 128, 129, 130, 132, 146, 160, 162, 165, 167, 170, 181], "hope": 4, "imit": 4, "other": [4, 7, 21, 37, 38, 39, 40, 43, 44, 45, 46, 47, 76, 101, 106, 122, 125, 127, 128, 129, 130, 165, 167, 170, 174, 175, 181], "torch": [4, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 34, 37, 38, 43, 44, 45, 46, 47, 55, 57, 58, 63, 66, 69, 70, 71, 73, 75, 76, 81, 82, 83, 84, 85, 86, 87, 92, 94, 95, 97, 98, 100, 101, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 146, 153, 160, 162, 165, 167, 170, 172, 181], "nn": [4, 21, 43, 44, 45, 46, 47, 57, 66, 70, 73, 75, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 105, 106, 107, 114, 115, 116, 118, 120, 121, 124, 125, 167, 170, 172], "typic": [4, 21, 43, 44, 46, 47, 181], "method": [4, 11, 12, 13, 14, 21, 27, 31, 37, 38, 39, 40, 43, 44, 46, 47, 54, 57, 63, 66, 67, 70, 73, 75, 83, 84, 85, 86, 97, 106, 114, 115, 116, 173, 181, 182], "organis": 4, "allow": [4, 11, 12, 13, 14, 21, 24, 43, 44, 46, 47, 81, 98, 132, 181], "arbitrari": [4, 24, 46, 47], "number": [4, 8, 11, 12, 13, 14, 17, 19, 21, 22, 24, 25, 26, 27, 32, 34, 37, 38, 39, 43, 44, 45, 46, 47, 54, 62, 63, 69, 76, 86, 87, 92, 93, 95, 96, 98, 102, 103, 106, 108, 109, 112, 113, 114, 117, 129, 130, 146, 148, 150, 151, 154, 155, 156, 157, 174, 175, 176], "input": [4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 43, 44, 45, 46, 47, 55, 57, 58, 66, 72, 74, 75, 81, 87, 88, 89, 90, 91, 97, 98, 100, 101, 106, 108, 109, 110, 111, 114, 115, 116, 122, 125, 127, 128, 129, 130, 135, 139, 140, 141, 142, 143, 144, 145, 156, 172, 181], "output": [4, 11, 12, 13, 14, 21, 25, 26, 27, 32, 43, 44, 45, 46, 47, 66, 72, 75, 83, 87, 88, 89, 93, 95, 97, 98, 106, 114, 115, 116, 120, 121, 122, 125, 127, 128, 129, 130, 146, 151], "nest": [4, 18, 21, 43, 44, 46, 47, 181], "batch": [4, 11, 12, 13, 14, 15, 19, 21, 24, 25, 26, 27, 28, 31, 32, 33, 43, 44, 45, 46, 47, 73, 92, 93, 97, 100, 104, 106, 112, 114, 122, 125, 127, 128, 129, 130, 139, 140, 141, 142, 143, 144, 145, 146, 151, 153, 154, 155, 174, 175, 176, 181], "structur": [4, 7], "each": [4, 7, 11, 12, 13, 14, 15, 20, 21, 25, 27, 43, 44, 46, 47, 70, 76, 116, 120, 121, 141, 142, 144, 145, 150, 174, 175], "attribut": [4, 21, 43, 44, 46, 47, 66, 106], "batch_siz": [4, 18, 25, 26, 28, 31, 32, 33, 43, 45, 70, 83, 84, 85, 86, 94, 105, 106, 107, 114, 116, 118, 120, 121, 146, 151, 160, 162, 165, 167, 170], "size": [4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 40, 43, 44, 45, 46, 47, 55, 66, 70, 71, 73, 74, 75, 83, 84, 85, 86, 87, 92, 94, 97, 98, 104, 105, 106, 107, 108, 109, 112, 114, 116, 118, 120, 121, 135, 146, 151, 160, 162, 165, 167, 170], "repres": [4, 11, 12, 13, 14, 27, 43, 44, 46, 47, 120, 121, 132], "togeth": [4, 11, 12, 13, 14, 83, 84, 85], "where": [4, 7, 11, 12, 13, 14, 25, 26, 27, 28, 31, 32, 33, 37, 38, 43, 44, 45, 46, 47, 66, 72, 75, 106, 114, 122, 123, 125, 126, 127, 128, 129, 130, 131, 135, 151, 154, 155, 181], "expect": [4, 7, 18, 21, 29, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 106, 114, 116, 122, 127, 128, 157, 178, 181], "live": [4, 11, 12, 13, 14, 21, 25, 26, 27, 28, 31, 32, 33, 43, 44, 45, 46, 47, 151], "doe": [4, 25, 27, 34, 40, 100, 116, 122, 127, 128, 135, 154, 181], "actual": [4, 7, 11, 12, 14, 43, 44, 46, 47, 156], "step": [4, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 62, 63, 73, 81, 86, 95, 97, 99, 106, 128, 135, 146, 150, 154, 181], "oper": [4, 7, 11, 12, 14, 21, 43, 44, 46, 47, 72, 83, 84, 85, 114, 115, 120, 122, 123, 124, 125, 127, 128, 135, 136, 137, 138, 154, 160, 162, 167, 170, 181], "comput": [4, 11, 13, 19, 21, 25, 27, 43, 44, 46, 47, 57, 63, 66, 72, 73, 74, 75, 83, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 113, 114, 115, 116, 117, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 157], "respons": [4, 106, 154], "do": [4, 7, 11, 12, 13, 14, 44, 62, 81, 84, 100, 181], "just": [4, 146, 181], "retriev": [4, 31, 32, 33, 43, 44, 46, 47, 55, 63, 81, 86, 106, 122, 127, 128, 136, 137, 138, 160, 162, 165, 167, 170, 176, 181], "take": [4, 15, 43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116, 139, 140, 141, 142, 143, 144, 145, 146, 155, 181], "care": [4, 43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116], "map": [4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 37, 43, 44, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 83, 84, 85, 106, 114, 116, 120, 151], "desir": [4, 21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 80, 87, 98, 106, 114], "see": [4, 6, 7, 8, 9, 11, 12, 13, 14, 21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 77, 87, 98, 100, 113, 114, 117], "For": [4, 7, 9, 11, 12, 13, 14, 21, 43, 44, 46, 47, 100, 120, 125, 128, 150, 160, 181], "parametr": [4, 101, 130], "hardwar": 4, "observation_spec": [4, 43, 45, 54, 55, 56, 57, 58, 60, 61, 63, 66, 67, 70, 71, 72, 73, 74, 75, 86, 157, 172], "compositespec": [4, 43, 45, 70, 82, 86, 105, 116], "kei": [4, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 33, 43, 44, 46, 47, 54, 55, 63, 66, 70, 72, 73, 75, 76, 81, 86, 99, 106, 114, 115, 116, 118, 122, 123, 124, 125, 127, 128, 129, 130, 135, 136, 137, 138, 150, 153, 154, 157, 165, 167, 170, 181], "spec": [4, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 94, 105, 106, 107, 109, 114, 115, 116, 120, 121, 160, 162, 165, 167, 170], "pair": [4, 21, 27, 43, 44, 46, 47, 83, 106], "input_spec": [4, 43, 45, 46, 47, 57, 58, 66, 72, 73, 74, 75, 86], "action_spec": [4, 43, 44, 45, 46, 47, 73, 80, 82, 94, 105, 107, 109, 120, 121, 172], "reward_spec": [4, 43, 45, 53, 57, 58, 66, 68, 69, 72, 73, 74, 75, 86], "reward": [4, 21, 29, 43, 44, 45, 46, 47, 53, 57, 58, 66, 68, 69, 72, 73, 74, 75, 76, 81, 86, 123, 124, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 152, 176, 181], "importantli": [4, 106], "should": [4, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 40, 43, 44, 45, 46, 47, 57, 63, 66, 72, 73, 74, 75, 76, 81, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116, 126, 127, 128, 129, 131, 135, 150, 151, 154, 172, 174, 175, 176, 181], "4": [4, 7, 19, 24, 45, 48, 49, 50, 54, 76, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 105, 106, 107, 114, 115, 116, 118, 120, 121], "action_s": 4, "simpli": [4, 6], "With": [4, 181], "reset": [4, 11, 12, 13, 14, 43, 44, 45, 46, 47, 54, 57, 62, 66, 70, 72, 75, 76, 77, 81, 119, 160, 162, 165, 167, 170], "mai": [4, 5, 7, 11, 12, 13, 14, 21, 43, 44, 46, 47, 73, 76, 98, 181], "necessarili": 4, "requir": [4, 7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 43, 44, 46, 47, 57, 66, 70, 73, 75, 98, 114, 116, 122, 125, 127, 128, 129, 130, 181], "rollout": [4, 11, 12, 13, 14, 43, 44, 45, 46, 47, 80, 86, 157], "usual": [4, 6, 43, 44, 46, 47, 101, 165, 167, 170, 178, 181], "done": [4, 7, 18, 21, 43, 44, 45, 46, 47, 63, 70, 76, 81, 86, 123, 124, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 160, 162, 165, 167, 170], "state": [4, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 54, 55, 57, 66, 70, 72, 73, 75, 76, 77, 83, 86, 95, 97, 98, 102, 106, 108, 109, 114, 116, 129, 135, 136, 137, 138, 176], "stateless": [4, 46, 47, 72], "instanc": [4, 7, 8, 11, 12, 13, 14, 21, 29, 43, 44, 45, 46, 47, 49, 54, 57, 66, 70, 72, 74, 75, 76, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116, 150, 157, 158, 159, 160, 162, 165, 167, 170, 172, 174, 175, 181], "set_se": [4, 11, 12, 13, 14, 43, 44, 45, 46, 47, 63, 73], "integ": [4, 11, 12, 13, 14, 20, 21, 24, 25, 26, 27, 40, 43, 44, 46, 47, 87, 98, 151], "seed": [4, 11, 12, 13, 14, 43, 44, 45, 46, 47, 48, 73, 154], "next": [4, 11, 12, 18, 21, 25, 26, 27, 32, 43, 44, 45, 46, 47, 76, 81, 109, 129, 135, 151], "multi": [4, 7, 9, 21, 22, 23, 43, 44, 46, 47, 97, 98], "determinist": [4, 21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 82, 95, 102, 106, 109, 114], "preced": [4, 97], "one": [4, 7, 10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 31, 32, 33, 40, 41, 42, 43, 44, 46, 47, 57, 62, 66, 72, 73, 74, 75, 76, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 106, 107, 108, 109, 111, 114, 115, 116, 120, 121, 122, 123, 124, 127, 128, 129, 148, 150, 151, 154, 157, 165, 167, 170, 176, 178, 181], "multipl": [4, 11, 12, 13, 14, 19, 46, 47, 55, 72, 76, 97, 100, 101, 114, 129, 167, 176, 181], "without": [4, 7, 9, 21, 43, 44, 46, 47, 84, 129, 135, 172, 178], "risk": 4, "overlap": 4, "consecut": 4, "while": [4, 7, 21, 43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116, 127, 128], "still": [4, 9, 127], "reproduc": 4, "result": [4, 7, 11, 12, 13, 14, 21, 43, 44, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 98, 121, 139, 140, 141, 142, 143, 144, 145, 155], "max_step": [4, 43, 44, 45, 46, 47, 80, 81], "execut": [4, 7, 13, 21, 43, 44, 45, 46, 47, 116, 157, 176, 181], "maximum": [4, 11, 12, 13, 14, 17, 21, 22, 25, 26, 27, 37, 38, 39, 43, 44, 46, 47, 68, 105, 112, 113, 117, 130, 151], "tensordictmodul": [4, 45, 83, 84, 85, 86, 99, 105, 106, 115, 116, 122, 123, 127, 128, 129, 130, 135, 136, 137, 138, 150, 158, 159, 172], "ani": [4, 18, 21, 25, 26, 27, 28, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 66, 73, 76, 87, 98, 101, 114, 116, 128, 151, 154, 178], "compat": [4, 5, 7, 10, 21, 40, 43, 44, 46, 47, 76, 132], "better": 4, "parallel": [4, 8, 11, 12, 14, 173, 174, 175, 176], "featur": [4, 11, 12, 13, 14, 24, 43, 44, 46, 47, 54, 87, 95, 96, 98, 100, 101, 106, 176], "cpu": [4, 8, 21, 29, 37, 38, 43, 44, 45, 46, 47, 57, 66, 70, 73, 75, 83, 84, 85, 86, 94, 101, 105, 106, 107, 114, 116, 118, 120, 121, 160, 162, 165, 167, 170], "intens": [4, 8], "gym3": 4, "envpool": 4, "interfac": [4, 98, 100], "simultan": [4, 46, 47], "thei": [4, 8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 58, 59, 72, 73, 97, 122, 125, 127, 128, 129, 130, 154, 181], "often": [4, 126, 154], "competit": 4, "advantag": [4, 96, 122, 127, 128, 136, 137, 138, 139, 140, 141, 143, 144, 181], "scale": [4, 63, 69, 83, 85, 95, 105, 106, 108, 109, 113, 116, 117, 152, 157, 165, 167, 170, 176], "varieti": 4, "therefor": [4, 7, 128], "its": [4, 7, 11, 12, 13, 14, 21, 27, 43, 44, 45, 46, 47, 54, 72, 73, 76, 87, 94, 106, 114, 116, 122, 125, 127, 128, 129, 130, 154, 172, 181], "own": [4, 11, 12, 14, 21, 43, 44, 46, 47], "parallelenv": [4, 11, 12, 13, 14, 47, 173], "run": [4, 5, 6, 7, 8, 11, 12, 14, 21, 43, 44, 45, 46, 47, 48, 49, 57, 62, 63, 66, 72, 73, 74, 75, 76, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116, 150, 174, 175, 176, 178, 181], "As": [4, 43, 44, 46, 47, 106], "inherit": [4, 99, 181], "enjoi": 4, "exact": 4, "same": [4, 13, 21, 43, 44, 46, 47, 62, 72, 73, 76, 87, 98], "Of": [4, 7, 178], "cours": [4, 178], "correspond": [4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 34, 43, 44, 45, 46, 47, 70, 73, 76, 106], "count": [4, 150, 156], "def": [4, 10, 21, 43, 44, 45, 46, 47, 86, 115, 118, 120, 181], "make_env": [4, 76, 81, 158, 159], "gymenv": [4, 11, 12, 13, 14, 57, 63, 70, 73, 76, 160, 162, 165, 167, 170, 172], "pendulum": [4, 11, 12, 13, 14, 50, 51, 57, 63, 70, 73, 76, 172], "v1": [4, 13, 63, 70, 132, 141, 142, 144, 145], "from_pixel": [4, 48, 49, 165, 167, 170], "true": [4, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 43, 44, 45, 46, 47, 48, 49, 55, 57, 62, 63, 66, 70, 71, 73, 75, 76, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 98, 100, 101, 106, 113, 114, 116, 117, 122, 127, 128, 129, 130, 132, 136, 137, 138, 141, 142, 144, 145, 148, 149, 150, 154, 162, 176, 181], "9": [4, 7, 21, 76, 181], "81": 4, "cuda": [4, 7, 21, 43, 44, 46, 47, 57, 65, 66, 70, 73, 75, 114, 147], "0": [4, 6, 7, 10, 20, 21, 24, 25, 27, 34, 43, 44, 45, 46, 47, 53, 55, 57, 60, 62, 63, 66, 70, 71, 73, 75, 76, 81, 86, 87, 88, 89, 91, 95, 98, 100, 101, 106, 108, 109, 112, 113, 114, 115, 116, 117, 122, 127, 128, 129, 130, 131, 135, 146, 152, 154, 172, 176, 181], "print": [4, 6, 7, 18, 19, 21, 24, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 63, 70, 71, 76, 81, 82, 83, 84, 85, 87, 94, 98, 106, 107, 114, 115, 116, 118, 120, 121, 160, 162, 165, 167, 170, 172, 181], "call": [4, 7, 10, 11, 12, 13, 14, 21, 25, 26, 27, 31, 32, 37, 38, 39, 40, 43, 44, 46, 47, 54, 57, 58, 65, 66, 70, 72, 73, 74, 75, 76, 80, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 102, 103, 106, 108, 109, 111, 114, 115, 116, 135, 150, 151, 181], "b": [4, 15, 18, 100, 101, 106, 116], "c": [4, 6, 7, 18, 160, 162, 165, 167, 170], "d": [4, 25, 34, 106], "get": [4, 6, 7, 40, 46, 47, 55, 58, 63, 71, 76, 82, 106, 115, 139, 140, 143], "forc": [4, 6, 7], "variou": [4, 11, 12, 13, 14, 122, 125, 127, 128, 129, 130, 174, 175], "befor": [4, 7, 11, 12, 13, 14, 21, 43, 44, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 98, 100, 101, 106, 114, 116, 122, 125, 127, 128, 129, 130, 136, 137, 138], "reset_work": 4, "fals": [4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 44, 45, 46, 47, 48, 55, 57, 62, 63, 66, 70, 71, 73, 75, 76, 83, 84, 85, 86, 87, 88, 94, 98, 105, 106, 107, 114, 115, 116, 118, 120, 121, 123, 124, 125, 129, 130, 132, 136, 137, 138, 141, 142, 144, 145, 148, 149, 150, 151, 152, 154, 160, 162, 165, 167, 170, 176, 181], "field": [4, 11, 12, 13, 14, 18, 21, 43, 44, 45, 46, 47, 70, 73, 83, 84, 85, 86, 94, 105, 106, 107, 114, 116, 118, 120, 121, 157, 160, 162, 165, 167, 170, 178], "tensor": [4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 54, 55, 57, 60, 63, 66, 69, 70, 71, 72, 73, 75, 76, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 160, 162, 165, 167, 170, 181], "bool": [4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 44, 45, 46, 47, 48, 49, 55, 62, 63, 66, 70, 71, 73, 75, 76, 81, 86, 87, 88, 89, 98, 100, 101, 106, 113, 114, 116, 117, 122, 123, 124, 125, 127, 128, 129, 130, 132, 136, 137, 138, 141, 142, 144, 145, 148, 149, 150, 151, 152, 154, 160, 162, 165, 167, 170, 176], "pixel": [4, 7, 18, 61, 66, 67, 71, 75, 88, 102, 103, 162, 165, 167, 170], "500": [4, 154], "uint8": [4, 71], "none": [4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 38, 39, 40, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 81, 82, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 104, 105, 106, 114, 116, 118, 120, 121, 128, 135, 136, 137, 138, 141, 142, 144, 145, 150, 151, 154, 157, 158, 159, 160, 162, 165, 167, 170, 172, 174, 175, 176, 181], "is_shar": [4, 18, 45, 70, 76, 83, 86, 94, 105, 106, 107, 114, 116, 160, 162, 165, 167, 170], "A": [4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 66, 70, 72, 73, 76, 77, 81, 86, 87, 98, 101, 106, 114, 116, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 148, 151, 154, 155, 162, 165, 167, 170, 172], "note": [4, 11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 106], "launch": 4, "quit": 4, "time": [4, 5, 7, 11, 12, 13, 14, 21, 43, 44, 46, 47, 55, 70, 76, 81, 95, 97, 129, 154], "mani": [4, 122, 127, 128, 129], "import": [4, 6, 7, 25, 27, 34, 44, 45, 46, 47, 63, 70, 76, 82, 83, 84, 85, 86, 94, 98, 105, 106, 107, 114, 115, 116, 118, 120, 121, 122, 148, 150, 160, 162, 165, 167, 170, 172], "start": [4, 11, 81], "bottleneck": 4, "why": 4, "so": [4, 6, 7, 21, 43, 44, 46, 47, 76, 116], "slow": 4, "onc": [4, 7, 11, 12, 13, 14, 21, 43, 44, 46, 47, 73, 115, 181], "great": [4, 7, 8], "speedup": 4, "serialenv": 4, "serial": [4, 21, 43, 44, 46, 47, 76], "mostli": [4, 14], "purpos": [4, 7, 172], "want": [4, 6, 7, 116], "assess": 4, "behaviour": [4, 44, 55, 113, 117, 150], "subprocess": 4, "In": [4, 7, 10, 11, 12, 14, 21, 43, 44, 46, 47, 57, 66, 70, 72, 73, 75, 98, 106, 109, 113, 114, 116, 117, 155, 174, 175, 176], "case": [4, 7, 10, 11, 12, 13, 14, 18, 25, 27, 34, 43, 44, 46, 47, 73, 98, 106, 114, 116, 146, 155, 174, 175, 176, 181], "raw": [4, 113, 117], "must": [4, 7, 11, 12, 13, 14, 18, 21, 37, 38, 39, 40, 43, 44, 46, 47, 70, 73, 87, 98, 106, 114, 120, 121, 139, 140, 141, 142, 143, 144, 145, 146, 150, 154, 155, 160, 162, 165, 167, 170], "treat": 4, "being": [4, 14, 21, 43, 44, 46, 47, 73, 80, 155, 174, 175, 176], "pass": [4, 13, 18, 21, 27, 43, 44, 46, 47, 57, 66, 72, 74, 75, 76, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 102, 103, 106, 108, 109, 111, 114, 115, 116, 174, 175, 176], "anoth": [4, 43, 44, 46, 47, 72, 98, 106, 122, 125, 127, 128, 129, 130], "valu": [4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 43, 44, 45, 46, 47, 53, 55, 62, 66, 68, 70, 71, 72, 73, 75, 76, 82, 83, 84, 85, 88, 89, 90, 91, 92, 94, 95, 96, 98, 100, 101, 104, 105, 106, 107, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 154, 160, 165, 167, 170, 172, 181], "To": [4, 6, 7, 21, 43, 44, 46, 47, 76, 83, 84, 85, 154], "logic": 4, "torchvis": 4, "build": [4, 7, 15, 18, 21, 43, 44, 46, 47, 76, 86, 106, 154, 161, 163, 164, 166, 168, 169, 171, 181], "transformedenv": [4, 57, 62, 63, 70, 72, 76, 160, 162, 165, 167, 170], "primit": 4, "built": [4, 7, 168, 172, 173, 176], "base_env": [4, 70], "totensorimag": [4, 162], "in_kei": [4, 45, 53, 54, 55, 56, 58, 60, 61, 63, 64, 66, 67, 68, 69, 71, 72, 75, 76, 82, 83, 84, 85, 86, 105, 106, 114, 115, 116, 118, 123, 124, 167, 170, 172], "resiz": 4, "64": [4, 88, 89, 96], "By": [4, 24, 44, 46, 47, 106, 150, 176], "default": [4, 11, 12, 13, 14, 18, 19, 21, 24, 27, 32, 37, 38, 43, 44, 46, 47, 48, 54, 55, 60, 62, 63, 66, 70, 71, 73, 75, 76, 81, 82, 86, 87, 88, 89, 90, 91, 92, 95, 96, 98, 100, 101, 102, 103, 105, 106, 108, 109, 111, 112, 113, 114, 116, 117, 118, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 141, 142, 144, 145, 146, 148, 149, 150, 152, 154, 160, 165, 167, 170, 172, 176, 181], "now": [4, 7], "appar": [4, 148], "bring": 4, "signific": 4, "kind": [4, 29, 81], "consult": 4, "achiev": [4, 21, 43, 44, 46, 47, 181], "interest": [4, 46, 47, 106], "exampl": [4, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 63, 66, 70, 71, 73, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 94, 97, 98, 105, 106, 107, 114, 115, 116, 118, 120, 121, 146, 147, 148, 149, 152, 153, 155, 160, 162, 165, 167, 170, 172, 181], "abov": [4, 7, 21, 43, 44, 46, 47, 113, 117, 181], "resize_par": 4, "sinc": [4, 7, 21, 43, 44, 45, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116], "out_kei": [4, 45, 46, 47, 53, 55, 64, 66, 67, 68, 71, 72, 75, 82, 83, 85, 86, 105, 106, 114, 115, 116, 118, 120, 121, 150, 172], "keyword": [4, 21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 106, 114, 173], "argument": [4, 11, 12, 13, 14, 18, 21, 43, 44, 46, 47, 57, 66, 70, 72, 73, 75, 87, 98, 100, 106, 114, 118, 148, 156, 160, 162, 165, 167, 170, 172, 173, 176], "easi": 4, "root": [4, 113, 117], "graph": [4, 133, 134], "inv": 4, "appli": [4, 21, 43, 44, 46, 47, 73, 113, 181], "revers": 4, "order": [4, 13, 21, 24, 43, 44, 46, 47, 73, 114, 116], "chain": [4, 57, 87, 116], "taken": [4, 43, 44, 46, 47], "includ": [4, 7, 9, 21, 37, 38, 39, 40, 43, 44, 45, 46, 47, 73, 76, 156, 181], "invers": 4, "through": [4, 13, 46, 47, 98, 106, 116], "in_keys_inv": [4, 58, 72], "append_transform": [4, 66, 70], "doubletofloat": [4, 160, 165, 167, 170], "float32": [4, 18, 25, 29, 34, 45, 58, 63, 70, 71, 83, 84, 85, 86, 94, 105, 106, 107, 114, 116, 118, 120, 121, 160, 162, 165, 167, 170], "float64": [4, 21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "torchrl": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "against": [5, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 106, 114], "latest": 5, "guarante": [5, 21, 37, 38, 39, 40, 43, 44, 46, 47, 76], "wa": [5, 7, 43, 44, 46, 47, 73, 126, 131], "avail": [5, 6, 106, 120, 121, 174, 175], "releas": [5, 7, 21, 43, 44, 46, 47, 73], "howev": [5, 7, 21, 43, 44, 46, 47, 73], "project": [5, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 106, 114], "willing": 5, "keep": [5, 7, 12, 66, 75, 76, 148, 154], "backward": [5, 21, 43, 44, 46, 47, 76], "older": [5, 7], "If": [5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 43, 44, 45, 46, 47, 55, 56, 62, 66, 72, 73, 75, 76, 87, 97, 98, 106, 114, 116, 135, 144, 145, 151, 154, 155, 157, 165, 167, 170, 172, 176, 178], "you": [5, 6, 7, 8, 21, 43, 44, 46, 47, 76, 178], "feel": [5, 178], "free": [5, 7, 128, 181], "gladli": 5, "look": [5, 7, 21, 43, 44, 46, 47, 66, 106, 116], "instruct": 6, "prepar": 6, "conda": [6, 7, 178], "assum": [6, 18, 24, 33, 44, 46, 47, 66, 70, 75, 97, 141, 142, 144, 145], "let": [6, 7, 21, 43, 44, 46, 47, 150], "": [6, 7, 21, 25, 26, 27, 32, 43, 44, 45, 46, 47, 57, 66, 70, 73, 75, 76, 87, 101, 106, 114, 116, 130, 151, 167, 170], "creat": [6, 7, 11, 12, 14, 21, 32, 43, 44, 46, 47, 66, 72, 73, 76, 81, 87, 88, 89, 90, 91, 96, 98, 106, 114, 115, 116, 124, 125, 129, 157, 158, 159, 172, 174, 175], "n": [6, 7, 16, 19, 21, 24, 43, 44, 46, 47, 54, 106, 135, 181], "7": [6, 19, 24, 86, 87, 97, 98], "cmake": 6, "14": [6, 10, 63], "activ": [6, 7, 9, 87, 95, 98, 128], "sim": 6, "bullet": 6, "physic": [6, 7, 181], "headless": [6, 7], "mode": [6, 13, 21, 43, 44, 46, 47, 73, 76, 78, 80, 92, 104, 106, 112, 113, 117, 150], "necessari": [6, 11, 12, 13, 14, 116, 129, 136, 137, 138], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": 6, "y": [6, 7, 97], "git": [6, 7], "facebookresearch": 6, "subdirectori": 6, "reduc": [6, 19], "verbos": 6, "export": 6, "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "don": [6, 7, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43], "t": [6, 7, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 43, 44, 46, 47, 66, 75, 76, 81, 114, 123, 154, 155, 176, 178], "remov": [6, 21, 43, 44, 46, 47], "command": [6, 7], "more": [6, 8, 11, 12, 13, 14, 21, 25, 26, 27, 28, 31, 32, 33, 43, 44, 46, 47, 77, 98, 100, 114, 120, 125, 128, 136, 139, 140, 143, 151, 160, 178, 181], "detail": [6, 7, 21, 43, 44, 46, 47, 73, 120, 125, 128, 160, 178], "readm": [6, 7], "md": [6, 7], "list": [6, 7, 9, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 39, 40, 43, 44, 45, 46, 47, 54, 66, 73, 75, 98, 106, 114, 116, 118, 134, 136, 137, 138, 150, 151, 174, 175], "habitatenv": 6, "_has_habitat": 6, "assert": [6, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 44, 76, 81, 146, 153], "check": [6, 7, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 45, 46, 47, 55, 59, 106, 114], "_env": 6, "available_env": [6, 48, 49, 50, 51], "startswith": 6, "importerror": [6, 7], "usr": [6, 7], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 21, 43, 44, 46, 47, 73], "symbol": [6, 7], "_glapi_tls_curr": [6, 7], "solut": [6, 7, 9, 178, 181], "debug": 6, "link": [6, 7], "right": [6, 7, 97], "replac": [6, 7, 21], "path": [6, 7, 21, 37, 43, 44, 46, 47, 66, 75, 154, 181], "mujoco_env": [6, 7], "proper": [6, 7], "name": [6, 7, 10, 21, 43, 44, 46, 47, 48, 73, 122, 125, 127, 128, 129, 130, 149, 160, 162, 165, 167, 170, 181], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "config": [6, 7, 157, 158, 159, 160, 162, 165, 167, 168, 170, 173], "var": [6, 7, 21, 43, 44, 46, 47, 73], "ld_preload": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": 7, "repositori": 7, "stand": [7, 83, 84, 85], "joint": 7, "dynam": 7, "contact": 7, "engin": 7, "facilit": [7, 27, 65, 66, 75, 83, 84, 85], "develop": 7, "robot": [7, 66, 75], "biomechan": 7, "graphic": 7, "anim": 7, "machin": [7, 21], "area": 7, "demand": 7, "fast": [7, 9, 129], "accur": 7, "articul": 7, "interact": [7, 13, 80, 106], "recent": 7, "acquir": 7, "deepmind": [7, 9, 48, 49], "access": [7, 21, 43, 44, 46, 47, 66, 176, 178], "whomev": 7, "licenc": 7, "incorpor": 7, "make": [7, 21, 40, 43, 44, 46, 47, 51, 63, 66, 81, 100, 106, 128, 159, 176], "relianc": 7, "obsolet": 7, "seri": [7, 24, 41, 42, 47, 62, 72], "legaci": 7, "document": [7, 21, 43, 44, 46, 47, 73], "capabl": [7, 181], "glfw": 7, "osmesa": 7, "egl": 7, "hand": 7, "gpu": [7, 8, 21, 43, 44, 46, 47], "our": 7, "advic": 7, "sudo": [7, 178], "enabl": [7, 150], "apt": 7, "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "via": [7, 46, 72, 75, 123, 181], "awar": [7, 37, 38, 39, 40], "fact": 7, "indent": 7, "workflow": [7, 83, 84, 85], "thing": 7, "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "both": [7, 21, 43, 44, 46, 47, 73, 83, 84, 85, 87, 98, 150], "tell": 7, "appropri": [7, 11, 12, 13, 14, 41, 42, 173, 176], "variabl": [7, 19, 24, 83, 84, 85, 129, 181], "mujoco_gl": 7, "pyopengl_platform": 7, "deactiv": 7, "pre": [7, 21, 38, 43, 44, 46, 47, 66, 75], "binari": [7, 16, 24, 53, 120, 121], "need": [7, 21, 40, 43, 44, 46, 47, 57, 66, 72, 73, 74, 75, 76, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 102, 103, 106, 108, 109, 111, 114, 115, 116, 129, 135, 154, 176], "These": 7, "instead": [7, 19, 21, 43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116, 176], "becaus": [7, 72, 91, 97, 106, 114], "setup": 7, "like": [7, 21, 43, 44, 46, 47, 71, 129], "mkdir": 7, "cd": 7, "here": [7, 9], "tag": [7, 176], "earlier": [7, 11, 12, 13, 14], "roboti": 7, "u": 7, "html": 7, "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 44, 86], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": 7, "bin": 7, "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "too": [7, 113, 117, 122, 125, 127, 128, 129, 130], "mujoco_py_mjkey_path": 7, "reload": 7, "recommend": 7, "hard": [7, 126], "chang": [7, 21, 37, 38, 39, 40, 43, 44, 46, 47, 73, 76], "later": [7, 91, 106], "known": [7, 8], "try": 7, "nativ": [7, 9, 43, 44, 46, 47, 54, 106, 114, 116], "usag": [7, 130], "local": [7, 13, 21, 31, 43, 44, 46, 47, 73], "modifi": [7, 21, 43, 44, 46, 47, 57, 66, 70, 72, 73, 75, 114, 156, 165, 167, 170], "nvidia": 7, "driver": 7, "those": [7, 46, 47, 63, 106, 116, 155, 174, 175], "hack": 7, "line": [7, 21, 43, 44, 46, 47], "adatp": 7, "script": [7, 160, 162, 165, 167, 170, 172, 176, 181], "go": 7, "unnot": 7, "until": 7, "complet": [7, 9, 44, 178], "mujoco_pi": 7, "trigger": 7, "pipelin": 7, "caus": 7, "problem": [7, 13], "give": [7, 45, 178], "troubleshoot": 7, "gl": 7, "h": [7, 56, 67, 71], "eglshim": 7, "10": [7, 18, 45, 71, 86, 115, 129, 130, 146, 181], "fatal": 7, "error": [7, 10, 21, 43, 44, 46, 47], "No": 7, "directori": [7, 37, 181], "sure": [7, 40, 81, 176], "glu": 7, "38": 7, "disappear": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "_solution_": 7, "saniti": 7, "been": [7, 11, 12, 14, 43, 44, 46, 47, 72, 106, 114, 116], "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": 7, "runtimeerror": [7, 21, 43, 44, 46, 47, 73], "stack": [7, 27, 46, 47, 76, 81, 116, 146], "job": 7, "schedul": [7, 150], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": 7, "__init__": [7, 45, 86, 118, 120, 181], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "fail": 7, "initi": [7, 11, 12, 13, 14, 21, 43, 44, 46, 47, 63, 66, 70, 72, 73, 77, 86, 100, 101, 106, 114, 116, 127, 129, 130, 160, 162, 165, 167, 170, 176], "opengl": 7, "global": [7, 21, 43, 44, 46, 47, 106, 181], "cuda_visible_devic": 7, "id": [7, 15, 129, 167], "around": [7, 14, 27, 28, 33, 45, 106, 114, 136], "slurm_step_gpu": 7, "enviro": 7, "imag": [7, 48, 56, 66, 71, 75, 98], "black": 7, "read": [7, 11, 12, 13, 14, 37, 38, 39, 40, 44, 46, 47, 72, 83, 84, 85, 104, 106, 114, 116, 122, 125, 127, 128, 129, 130, 154, 165, 167, 170], "miss": [7, 10, 18, 21, 43, 44, 46, 47, 73, 116, 178], "onscreen": 7, "101": 7, "displai": [7, 154, 181], "correctli": [7, 21, 43, 44, 46, 47], "ask": 8, "core": [8, 160, 162, 165, 167, 170, 181], "than": [8, 11, 12, 13, 14, 91, 98, 114, 155, 178], "twice": [8, 130], "much": [8, 25, 27, 34, 127, 128], "spin": 9, "deep": [9, 54, 88, 89, 90, 91, 93, 126, 130, 131, 160], "hug": 9, "face": 9, "syllabu": 9, "lectur": 9, "best": 9, "awesom": 9, "curat": 9, "discuss": 9, "reddit": 9, "maintain": 9, "reagent": 9, "product": [9, 174, 175], "orient": 9, "stabl": 9, "baselines3": 9, "tf": 9, "agent": [9, 31, 101], "bandit": 9, "tensorflow": 9, "kera": 9, "acm": 9, "framework": [9, 45], "dopamin": 9, "salina": 9, "flexibl": [9, 181], "simpl": [9, 21, 24, 43, 44, 46, 47, 88, 106], "sequenti": [9, 21, 43, 44, 46, 47, 116], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": 9, "grade": 9, "factori": 9, "throughput": 9, "asynchron": [9, 12, 21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114, 174], "cherri": 9, "jaxrl": 9, "continu": [9, 17, 22, 23, 30, 88, 89, 90, 91, 106, 116, 131, 136, 139, 140, 143, 160], "space": [9, 24, 29, 103, 106, 114, 116, 120, 121], "mbrl": [9, 45], "rlmeta": 9, "light": 9, "weight": [9, 11, 12, 13, 14, 21, 25, 27, 43, 44, 46, 47, 57, 66, 70, 73, 75, 101, 114, 122, 155, 171, 181], "elegantrl": 9, "cloud": 9, "mtrl": 9, "task": [9, 46, 47, 48, 66, 75], "baselin": 9, "module_nam": 10, "str": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 33, 37, 43, 44, 46, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 66, 67, 68, 69, 71, 72, 73, 75, 76, 78, 80, 82, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 105, 106, 114, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 135, 137, 138, 149, 150, 153, 157, 160, 165, 167, 168, 170, 176], "from_vers": 10, "to_vers": 10, "decor": 10, "fit": [10, 63, 181], "lead": [10, 18, 113, 117], "explicit": [10, 97], "intersect": 10, "rang": [10, 19, 76, 81, 127, 181], "paramet": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 165, 167, 170, 172, 173, 174, 175, 176], "longer": 10, "13": 10, "fun": 10, "self": [10, 21, 27, 43, 44, 45, 46, 47, 57, 66, 70, 73, 75, 86, 114, 115, 118, 120, 181], "x": [10, 15, 21, 71, 87, 93, 96, 97, 98, 120, 139, 140, 141, 142, 143, 144, 145, 154], "indic": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 46, 47, 55, 70, 87, 98, 151, 157, 176, 178, 181], "doesn": 10, "create_env_fn": [11, 12, 13, 14, 46, 47], "sequenc": [11, 12, 13, 14, 18, 20, 25, 26, 28, 32, 41, 42, 53, 54, 55, 56, 58, 60, 61, 63, 64, 67, 68, 69, 71, 72, 76, 82, 87, 92, 98, 104, 105, 106, 111, 116, 118, 151, 153, 154, 165, 167, 170], "callabl": [11, 12, 13, 14, 21, 25, 26, 27, 28, 32, 43, 44, 45, 46, 47, 128, 151, 158, 159, 174, 175, 176], "union": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 33, 34, 43, 44, 46, 47, 57, 63, 66, 69, 73, 75, 76, 87, 88, 89, 90, 91, 92, 96, 97, 98, 100, 101, 104, 105, 106, 112, 113, 114, 116, 117, 124, 125, 126, 129, 130, 131, 136, 137, 138, 158, 159, 160, 165, 167, 168, 170, 172, 173, 174, 175, 176], "probabilistictensordictmodul": [11, 12, 13, 14, 116, 122, 127, 128, 158, 159], "tensordictbas": [11, 12, 13, 14, 15, 18, 21, 27, 31, 33, 43, 44, 46, 47, 54, 57, 62, 70, 72, 74, 76, 77, 81, 86, 99, 106, 114, 116, 122, 123, 124, 125, 127, 128, 129, 130, 135, 136, 137, 138, 154], "total_fram": [11, 12, 13, 14, 154, 156, 172, 181], "int": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 62, 63, 66, 67, 73, 74, 75, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 120, 121, 122, 123, 127, 128, 129, 130, 146, 147, 148, 150, 151, 154, 155, 160, 165, 167, 168, 170, 174, 175, 176], "create_env_kwarg": [11, 12, 13, 14, 46, 47], "dict": [11, 12, 13, 14, 18, 19, 21, 32, 43, 44, 46, 47, 73, 76, 87, 88, 89, 90, 91, 96, 97, 98, 106, 150, 158, 159, 160, 167, 170, 174, 175, 176], "max_frames_per_traj": [11, 12, 13, 14, 156], "frames_per_batch": [11, 12, 13, 14, 156], "200": [11, 12, 13, 14, 21, 43, 44, 46, 47, 88, 89, 95, 108, 109], "init_random_fram": [11, 12, 13, 14, 156], "reset_at_each_it": [11, 12, 13, 14], "postproc": [11, 12, 13, 14], "split_traj": [11, 12, 13, 14], "pin_memori": [11, 13, 14, 25, 26, 27, 28, 32, 46, 47, 65, 151], "passing_devic": [11, 12, 13, 14], "update_at_each_batch": [11, 12, 14], "init_with_lag": [11, 12, 13, 14], "exploration_mod": [11, 13, 106, 150], "random": [11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 29, 30, 35, 43, 44, 45, 46, 47, 62, 63, 70, 80, 106, 114, 115, 129, 150, 157], "reset_when_don": [11, 13], "given": [11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 45, 46, 47, 57, 63, 66, 70, 73, 75, 81, 86, 95, 106, 111, 114, 116, 120, 121, 123, 124, 135, 136, 137, 138, 147, 150, 172, 181], "datacollector": [11, 12, 13, 14, 106], "separ": [11, 12, 14, 15, 123, 129, 130], "synchron": [11, 174, 175], "collect": [11, 12, 13, 14, 21, 25, 26, 27, 28, 31, 32, 33, 66, 75, 123, 129, 130, 146, 151, 154, 155, 156, 157, 172, 181], "item": [11, 27, 59, 123, 124, 146, 181], "queri": [11, 12, 13, 14, 21, 43, 44, 46, 47, 66, 72, 76, 116], "between": [11, 12, 13, 14, 21, 43, 44, 46, 47, 62, 68, 71, 73, 87, 98, 106, 127, 132, 150, 154], "recept": 11, "trajectori": [11, 12, 13, 14, 15, 21, 43, 44, 46, 47, 72, 86, 128, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146], "safe": [11, 12, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 106, 114], "onlin": [11, 14, 128, 146, 176], "accept": [11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 57, 66, 70, 73, 75, 114, 181], "bound": [11, 12, 13, 14, 17, 18, 21, 22, 43, 44, 46, 47, 76, 106, 108, 109, 114], "total": [11, 12, 13, 14, 44, 122, 127, 128, 146, 148, 150, 154, 156, 157], "frame": [11, 12, 13, 14, 21, 44, 54, 148, 150, 154, 156, 157], "greater": [11, 12, 14], "close": [11, 12, 13, 14, 44, 122, 127, 128], "signal": [11, 12, 14], "sent": [11, 12, 14, 37, 38, 46, 47, 76], "worker": [11, 12, 13, 14, 46, 47, 76, 174, 175, 176], "server": [11, 12, 14], "dictionari": [11, 12, 13, 14, 18, 21, 43, 44, 46, 47, 73, 106, 174, 175, 176, 181], "per": [11, 12, 13, 14, 46, 95, 154, 174, 175], "span": [11, 12, 13, 14], "unless": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47], "reach": [11, 12, 13, 14, 43, 44, 45, 46, 47], "n_steps_max": [11, 12, 13, 14, 21], "wrap": [11, 12, 13, 14, 21, 43, 44, 46, 47, 83, 84, 85, 115], "track": [11, 12, 13, 14, 76, 148], "independ": [11, 12, 13, 14, 72, 130, 181], "neg": [11, 12, 13, 14, 25, 27, 34], "ignor": [11, 12, 13, 14, 21, 43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116], "length": [11, 12, 13, 14, 16, 46, 47, 86, 87, 88, 90, 93, 98, 114, 146], "equival": [11, 12, 13, 14, 21, 43, 44, 46, 47, 73], "configur": [11, 12, 13, 14, 128, 165, 167, 170], "mainli": [11, 12, 13, 14], "offlin": [11, 12, 13, 14, 181], "whether": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 43, 44, 45, 46, 47, 73, 87, 98, 118, 123, 124, 125, 129, 130, 138, 151], "postprocessor": [11, 12, 14], "format": [11, 12, 13, 14, 21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "boolean": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 45, 139, 140, 141, 142, 143, 144, 145, 181], "split": [11, 12, 13, 14, 122, 125, 127, 128, 129, 130, 181], "accord": [11, 12, 13, 14, 25, 27, 63, 69, 100, 108, 113, 117], "split_trajectori": [11, 12, 13, 14], "inform": [11, 12, 13, 14, 21, 43, 44, 46, 47, 87, 98, 181], "place": [11, 12, 13, 14, 18, 21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 76, 114, 155, 156], "update_policy_weights_": [11, 12, 13, 14], "dure": [11, 12, 13, 14, 43, 44, 46, 47, 73, 150, 154], "loop": [11, 12, 13, 14, 44, 81, 154, 181], "accommod": [11, 12, 13, 14], "lag": [11, 12, 13, 14], "kept": [11, 12, 13, 14, 46, 47, 72, 81, 113, 117], "origin": [11, 12, 13, 14, 66, 73, 75, 106, 114, 116, 126, 128, 167, 170], "store": [11, 12, 13, 14, 18, 21, 27, 33, 37, 38, 39, 43, 44, 46, 47, 76, 86, 97, 160, 162, 165, 167, 170, 181], "long": [11, 12, 13, 14, 19, 24], "updat": [11, 12, 13, 14, 21, 25, 27, 34, 43, 44, 45, 46, 47, 73, 76, 86, 106, 114, 126, 128, 131, 136, 137, 138, 150, 154, 155, 158, 159, 171, 172, 181], "everi": [11, 12, 14, 18, 21, 24, 40, 43, 44, 46, 47, 57, 66, 72, 74, 75, 76, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116, 154, 181], "truncat": [11, 12, 13, 14, 117], "help": [11, 12, 13, 14, 21, 43, 44, 46, 47, 178], "desynchron": [11, 12, 13, 14], "match": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 87, 92, 98, 106, 112, 114, 127, 129, 130, 155], "load_state_dict": [11, 12, 13, 14, 21, 43, 44, 46, 47, 73, 76, 181], "state_dict": [11, 12, 13, 14, 21, 43, 44, 46, 47, 73, 76, 181], "ordereddict": [11, 12, 13, 14, 21, 43, 44, 46, 47, 73, 76], "load": [11, 12, 13, 14, 25, 26, 27, 32, 49, 151, 181], "form": [11, 12, 14, 21, 25, 26, 27, 32, 43, 44, 46, 47, 76, 122, 127, 128, 151, 154], "worker0": [11, 12, 14], "state_dict0": [11, 12, 14], "worker1": [11, 12, 14], "state_dict1": [11, 12, 14], "reset_idx": [11, 12, 14], "static_se": [11, 12, 13, 14, 43, 44, 46, 47, 73], "increment": [11, 12, 13, 14, 43, 44, 46, 47, 127], "last": [11, 12, 13, 14, 21, 43, 45, 60, 87, 97, 98, 102, 110], "env_fn": [11, 12, 13, 14, 174, 175], "lambda": [11, 12, 13, 14, 138, 141, 142, 144, 145, 172], "v0": [11, 12, 14, 44, 50, 51, 57, 73, 76, 172], "env_fn_parallel": [11, 12, 13, 14], "6": [11, 12, 13, 14, 63, 87, 92, 97, 98, 112, 118, 160, 162, 165, 167, 170], "syncdatacollector": [11, 12, 14, 172, 175], "out_se": [11, 12, 13, 14], "shutdown": [11, 12, 13, 14], "shut": [11, 12, 13, 14], "down": [11, 12, 13, 14], "irrevers": [11, 12, 14], "arg": [12, 18, 21, 31, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 73, 74, 75, 82, 83, 87, 94, 98, 107, 115, 148, 154, 176], "kwarg": [12, 13, 14, 18, 21, 31, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 70, 73, 74, 75, 82, 83, 87, 88, 89, 90, 91, 94, 96, 98, 99, 104, 105, 106, 107, 112, 114, 115, 116, 117, 122, 127, 135, 148, 154, 158, 159, 160, 165, 167, 170, 173, 174, 175], "occur": [12, 55, 106, 114], "iter": [12, 13, 20, 21, 25, 26, 27, 28, 31, 32, 33, 43, 44, 46, 47, 63, 76, 87, 98, 106, 111, 114, 116, 134, 150, 151, 153, 154, 165, 167, 170, 181], "envcreat": [13, 172, 173, 176], "return_in_plac": 13, "return_same_td": 13, "constructor": [13, 72, 160, 162, 165, 167, 170, 173, 176], "stop": [13, 43, 44, 46, 47], "equat": [13, 122, 131], "exce": 13, "batcher": 13, "yield": [13, 21, 43, 44, 46, 47], "cautious": [13, 128], "ad": [13, 21, 25, 26, 27, 28, 31, 32, 33, 34, 43, 44, 46, 47, 73, 100, 101, 122, 127, 128, 151], "whole": [13, 21, 43, 44, 46, 47, 73, 146], "content": [13, 87, 98], "ident": [13, 46, 47, 174, 175], "chunk": 13, "policy_state_dict": 13, "env_state_dict": 13, "singl": [14, 21, 25, 26, 27, 28, 31, 32, 33, 43, 44, 46, 47, 54, 55, 71, 87, 97, 98, 116, 125, 129, 141, 142, 144, 145, 151, 167, 176], "paradigm": 14, "regular": [14, 106, 114, 121, 125, 155, 181], "prefer": 14, "mere": 14, "multiasyncdatacollector": [14, 174], "rollout_tensordict": 15, "traj_id": 15, "zero": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 55, 63, 86, 97, 115], "pad": [15, 87, 88, 89, 97], "max": [15, 24, 112, 113, 117, 122, 129, 130], "durat": 15, "int64": [16, 19, 20, 24, 94, 107, 120, 121, 162], "discret": [16, 19, 20, 24, 104, 120, 121, 125], "assert_is_in": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "belong": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "rais": [16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 59, 73], "except": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43, 59, 104, 115], "otherwis": [16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 63, 70, 73, 76, 113, 117, 130, 150, 181], "encod": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 94, 103, 104, 107, 108, 120, 121], "val": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "ndarrai": [16, 17, 18, 19, 20, 22, 23, 24, 25, 29, 30, 44], "np": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 44], "slice": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "tensor_to_index": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "is_in": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "back": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 106, 114], "heurist": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "rand": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 45, 86, 115], "uniform": [16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 34], "unbound": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "to_numpi": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "transformed_in": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 72, 73, 112, 176], "type_check": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "whose": [16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "point": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 41, 42, 43, 44, 46, 47, 54, 57, 66, 70, 71, 73, 75, 99, 114, 125, 137, 138, 154, 178], "fill": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 70], "minimum": [17, 22, 68, 95, 105, 112, 113, 117, 130, 146], "float": [17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 43, 44, 46, 47, 57, 58, 63, 66, 68, 69, 70, 71, 73, 75, 76, 92, 95, 100, 101, 108, 109, 112, 114, 117, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 151, 152], "unidimension": [17, 24, 30], "upper": [17, 22], "composit": 18, "unnam": 18, "tupl": [18, 21, 25, 32, 43, 44, 46, 47, 63, 88, 97, 98, 106, 114, 116, 123, 161, 163, 166, 169], "effect": [18, 21, 43, 44, 46, 47, 73, 154], "cannot": 18, "pixels_spec": 18, "ndboundedtensorspec": [18, 83, 84, 85, 105], "32": [18, 87, 88, 89, 96, 98, 102, 103], "observation_vector_spec": 18, "33": [18, 21, 43, 44, 46, 47, 87, 98], "composite_spec": 18, "observation_vector": [18, 55, 160, 165, 167, 170], "td": [18, 48, 49, 50, 51, 55, 58, 63, 71, 73, 76, 81, 82, 83, 84, 85, 86, 94, 99, 105, 106, 107, 114, 115, 116, 118, 120, 121, 137, 138, 141, 142, 144, 145, 146, 153, 160, 162, 165, 167, 170], "within": [18, 21, 33, 43, 44, 46, 47, 57, 66, 72, 74, 75, 76, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116], "randn": [18, 63, 82, 83, 84, 85, 94, 97, 105, 106, 107, 114, 116, 118, 120, 121, 153], "td_project": 18, "modif": [18, 21, 43, 44, 46, 47], "after": [18, 21, 43, 44, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 100], "yield_nesting_kei": 18, "keysview": 18, "ob": [18, 58, 63, 71, 118], "selected_kei": [18, 46, 47], "altern": 19, "onehottensorspec": 19, "categor": [19, 24, 104, 120, 121], "memori": [19, 21, 37, 43, 44, 46, 47, 57, 66, 70, 73, 75, 76, 114, 176, 181], "larg": 19, "action_valu": [19, 24, 94, 107, 120, 121, 162], "arang": [19, 24, 94, 120, 146], "view": [19, 21, 24, 43, 44, 46, 47, 98, 120], "argmax": [19, 94, 107, 120, 121], "dim": [19, 55, 111, 176], "chosen_action_valu": [19, 24, 107, 162], "11": [19, 24, 71, 86], "outcom": [19, 24, 92, 112], "nvec": 20, "use_regist": [20, 24], "concaten": [20, 54, 55, 72, 98, 116], "hot": [20, 24, 94, 104, 107, 120, 121], "cardin": [20, 120, 121], "element": [20, 24, 25, 26, 27, 28, 31, 32, 33, 34, 37, 38, 39, 87, 114, 146, 151], "gamma": [21, 122, 123, 124, 125, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 172], "present": [21, 25, 34, 43, 44, 46, 47, 88, 89, 90, 91, 96, 101, 114, 116, 122, 125, 127, 128, 129, 130, 176, 181], "sutton": 21, "r": [21, 63, 106, 135], "1988": 21, "predict": [21, 95, 99, 125, 130, 135], "tempor": [21, 137], "44": 21, "discount": [21, 122, 123, 124, 125, 127, 128, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "factor": [21, 101, 113, 117, 122, 123, 124, 125, 127, 128, 129], "ahead": 21, "add_modul": [21, 43, 44, 46, 47], "add": [21, 25, 26, 27, 28, 31, 32, 33, 41, 42, 43, 44, 46, 47, 100, 151], "child": [21, 43, 44, 46, 47], "current": [21, 43, 44, 46, 47, 73, 78, 95, 97, 109, 120, 121, 165, 181], "fn": [21, 43, 44, 46, 47, 174, 175], "recurs": [21, 43, 44, 46, 47], "submodul": [21, 43, 44, 46, 47], "children": [21, 43, 44, 46, 47], "init": [21, 43, 44, 46, 47], "no_grad": [21, 43, 44, 46, 47], "init_weight": [21, 43, 44, 46, 47], "m": [21, 43, 44, 46, 47, 106], "linear": [21, 43, 44, 45, 46, 47, 57, 66, 70, 73, 75, 82, 83, 84, 85, 86, 87, 98, 100, 101, 105, 107, 108, 109, 114, 115, 116, 118, 120, 121, 172], "fill_": [21, 43, 44, 46, 47], "net": [21, 43, 44, 46, 47, 97, 106, 129, 167, 172], "in_featur": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 83, 87, 88, 89, 90, 91, 97, 98, 100, 101, 114], "out_featur": [21, 43, 44, 45, 46, 47, 57, 66, 70, 73, 75, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 100, 101, 114], "bia": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 87, 95, 98, 100, 101, 114, 115], "requires_grad": [21, 43, 44, 46, 47], "bfloat16": [21, 43, 44, 46, 47], "cast": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 76, 114, 160, 162, 165, 167, 170], "datatyp": [21, 43, 44, 46, 47], "direct": [21, 43, 44, 46, 47], "member": [21, 43, 44, 46, 47], "xdoctest": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "skip": [21, 43, 44, 46, 47, 73, 106, 148, 150], "buf": [21, 43, 44, 46, 47], "20l": [21, 43, 44, 46, 47], "1l": [21, 43, 44, 46, 47], "5l": [21, 43, 44, 46, 47], "immedi": [21, 43, 44, 46, 47, 135], "move": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 76, 98, 114, 152], "associ": [21, 43, 44, 46, 47, 108, 176], "construct": [21, 43, 44, 46, 47, 106, 109, 154, 165], "optim": [21, 43, 44, 46, 47, 86, 100, 101, 128, 130, 154, 165, 172, 181], "copi": [21, 43, 44, 46, 47, 73], "doubl": [21, 23, 30, 43, 44, 46, 47, 57, 58, 66, 70, 71, 73, 75, 114, 124, 125, 126, 129, 131], "eval": [21, 43, 44, 46, 47, 73, 76], "evalu": [21, 43, 44, 46, 47, 73, 92, 104, 117, 129, 158, 159], "certain": [21, 43, 44, 46, 47, 73, 127], "particular": [21, 43, 44, 46, 47, 73, 181], "behavior": [21, 43, 44, 46, 47, 73], "affect": [21, 43, 44, 46, 47, 72, 73], "dropout": [21, 43, 44, 46, 47, 73], "batchnorm": [21, 43, 44, 46, 47, 73], "disabl": [21, 43, 44, 46, 47, 73, 113, 117], "gradient": [21, 43, 44, 46, 47, 73, 101, 113, 117, 135, 136, 137, 138, 154], "comparison": [21, 43, 44, 46, 47, 73], "sever": [21, 43, 44, 46, 47, 55, 73, 128], "similar": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 76, 81, 106, 114], "mechan": [21, 43, 44, 46, 47, 73], "confus": [21, 43, 44, 46, 47, 73], "extra_repr": [21, 43, 44, 46, 47], "extra": [21, 43, 44, 46, 47, 76], "represent": [21, 43, 44, 46, 47, 66, 75], "string": [21, 43, 44, 46, 47, 106, 153, 165, 167, 170], "forward": [21, 43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 102, 103, 106, 108, 109, 111, 114, 115, 116, 118, 120, 122, 123, 124, 125, 127, 128, 129, 130, 136, 137, 138], "tennsordict": 21, "dimens": [21, 54, 55, 60, 63, 71, 74, 87, 98, 100, 101, 110, 111, 112, 113, 122, 125, 127, 128, 129, 130, 176], "shift": 21, "nontermin": 21, "non": [21, 25, 27, 43, 44, 46, 47, 53, 57, 66, 70, 73, 75, 114], "termin": 21, "original_reward": 21, "previou": [21, 109], "newli": 21, "get_buff": [21, 43, 44, 46, 47], "target": [21, 43, 44, 46, 47, 72, 106, 114, 123, 124, 125, 126, 127, 129, 130, 131, 135, 156, 171, 172, 181], "throw": [21, 43, 44, 46, 47], "docstr": [21, 43, 44, 46, 47], "get_submodul": [21, 43, 44, 46, 47], "explan": [21, 43, 44, 46, 47], "how": [21, 25, 27, 34, 43, 44, 46, 47, 122, 126, 127, 128, 154, 178], "fulli": [21, 43, 44, 46, 47], "qualifi": [21, 43, 44, 46, 47], "referenc": [21, 43, 44, 46, 47], "attributeerror": [21, 43, 44, 46, 47], "invalid": [21, 43, 44, 46, 47], "resolv": [21, 43, 44, 46, 47], "someth": [21, 43, 44, 46, 47, 178], "get_extra_st": [21, 43, 44, 46, 47, 76], "set_extra_st": [21, 43, 44, 46, 47, 76], "picklabl": [21, 43, 44, 46, 47, 76], "ensur": [21, 25, 27, 34, 43, 44, 46, 47, 66, 76], "break": [21, 43, 44, 46, 47, 76], "pickl": [21, 43, 44, 46, 47, 76], "get_paramet": [21, 43, 44, 46, 47], "sai": [21, 43, 44, 46, 47], "net_b": [21, 43, 44, 46, 47], "net_c": [21, 43, 44, 46, 47], "conv": [21, 43, 44, 46, 47, 87], "conv2d": [21, 43, 44, 46, 47, 87], "16": [21, 43, 44, 46, 47], "kernel_s": [21, 43, 44, 46, 47, 87, 88, 89], "stride": [21, 43, 44, 46, 47, 87, 88, 89, 96], "100": [21, 43, 44, 46, 47, 63, 80, 147, 154, 172], "diagram": [21, 43, 44, 46, 47], "show": [21, 43, 44, 46, 47], "itself": [21, 43, 44, 46, 47], "two": [21, 43, 44, 46, 47, 91, 106, 110, 127, 130, 132, 150, 154, 165, 167, 170], "would": [21, 43, 44, 46, 47, 98, 181], "degre": [21, 43, 44, 46, 47], "named_modul": [21, 43, 44, 46, 47], "o": [21, 43, 44, 46, 47], "transit": [21, 43, 44, 46, 47], "alwai": [21, 43, 44, 46, 47, 62], "half": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "ipu": [21, 43, 44, 46, 47], "strict": [21, 43, 44, 46, 47, 73], "descend": [21, 43, 44, 46, 47, 73], "exactli": [21, 43, 44, 46, 47, 73, 115], "persist": [21, 43, 44, 46, 47, 73], "strictli": [21, 43, 44, 46, 47, 73], "enforc": [21, 43, 44, 46, 47, 73], "missing_kei": [21, 43, 44, 46, 47, 73], "unexpected_kei": [21, 43, 44, 46, 47, 73], "unexpect": [21, 43, 44, 46, 47, 73], "namedtupl": [21, 43, 44, 46, 47, 73], "regist": [21, 24, 43, 44, 46, 47, 57, 66, 72, 73, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116, 181], "network": [21, 43, 44, 46, 47, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 98, 101, 102, 103, 108, 109, 110, 114, 123, 124, 125, 126, 129, 130, 131, 133, 160, 165, 171, 172, 181], "duplic": [21, 43, 44, 46, 47, 124, 125], "l": [21, 43, 44, 46, 47, 135], "idx": [21, 43, 44, 46, 47], "enumer": [21, 43, 44, 46, 47], "named_buff": [21, 43, 44, 46, 47], "prefix": [21, 43, 44, 46, 47, 73], "remove_dupl": [21, 43, 44, 46, 47], "prepend": [21, 43, 44, 46, 47], "running_var": [21, 43, 44, 46, 47], "named_children": [21, 43, 44, 46, 47], "conv4": [21, 43, 44, 46, 47], "conv5": [21, 43, 44, 46, 47], "memo": [21, 43, 44, 46, 47], "alreadi": [21, 43, 44, 46, 47, 106], "named_paramet": [21, 43, 44, 46, 47], "param": [21, 43, 44, 45, 46, 47, 92, 105, 106, 107, 112, 114, 115, 116, 118, 120, 121, 131, 134, 136, 137, 138, 160], "register_backward_hook": [21, 43, 44, 46, 47], "removablehandl": [21, 43, 44, 46, 47], "deprec": [21, 43, 44, 46, 47, 73, 84], "favor": [21, 43, 44, 46, 47], "register_full_backward_hook": [21, 43, 44, 46, 47], "futur": [21, 43, 44, 46, 47, 66, 73, 75, 98, 178], "register_buff": [21, 43, 44, 46, 47], "consid": [21, 43, 44, 46, 47, 92, 112], "running_mean": [21, 43, 44, 46, 47], "save": [21, 43, 44, 46, 47, 154, 181], "alongsid": [21, 43, 44, 46, 47], "latter": [21, 43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116, 174, 175], "num_featur": [21, 43, 44, 46, 47], "register_forward_hook": [21, 43, 44, 46, 47, 120, 121], "signatur": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "posit": [21, 43, 44, 46, 47, 73, 74], "won": [21, 43, 44, 46, 47, 66, 75, 154, 176], "inplac": [21, 43, 44, 46, 47], "user": [21, 43, 44, 46, 47, 73, 97, 173, 181], "fire": [21, 43, 44, 46, 47], "register_module_forward_hook": [21, 43, 44, 46, 47], "register_forward_pre_hook": [21, 43, 44, 46, 47], "invok": [21, 31, 43, 44, 46, 47], "either": [21, 43, 44, 46, 47, 160, 181], "forward_pr": [21, 43, 44, 46, 47], "register_module_forward_pre_hook": [21, 43, 44, 46, 47], "respect": [21, 43, 44, 46, 47, 53, 57, 66, 70, 73, 75, 109, 114, 118], "grad_input": [21, 43, 44, 46, 47], "grad_output": [21, 43, 44, 46, 47], "subsequ": [21, 43, 44, 46, 47, 116], "entri": [21, 43, 44, 46, 47], "technic": [21, 43, 44, 46, 47], "reason": [21, 43, 44, 46, 47, 66], "receiv": [21, 43, 44, 46, 47, 72, 98], "similarli": [21, 43, 44, 46, 47, 116], "caller": [21, 43, 44, 46, 47], "register_module_full_backward_hook": [21, 43, 44, 46, 47], "register_full_backward_pre_hook": [21, 43, 44, 46, 47], "backward_pr": [21, 43, 44, 46, 47], "register_module_full_backward_pre_hook": [21, 43, 44, 46, 47], "register_load_state_dict_post_hook": [21, 43, 44, 46, 47], "post": [21, 43, 44, 46, 47], "incompatible_kei": [21, 43, 44, 46, 47], "consist": [21, 43, 44, 46, 47, 87, 98, 106], "addit": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "thrown": [21, 43, 44, 46, 47], "clear": [21, 43, 44, 46, 47, 147], "avoid": [21, 43, 44, 46, 47, 73, 76, 114, 156], "register_modul": [21, 43, 44, 46, 47, 181], "alia": [21, 43, 44, 46, 47], "register_paramet": [21, 43, 44, 46, 47], "requires_grad_": [21, 43, 44, 46, 47], "autograd": [21, 43, 44, 46, 47, 73], "record": [21, 43, 44, 46, 47, 128, 172, 181], "freez": [21, 43, 44, 46, 47], "finetun": [21, 43, 44, 46, 47], "individu": [21, 43, 44, 46, 47], "gan": [21, 43, 44, 46, 47], "share_memori": [21, 43, 44, 46, 47], "share_memory_": [21, 43, 44, 46, 47], "destin": [21, 43, 44, 46, 47, 73, 81], "keep_var": [21, 43, 44, 46, 47, 73], "averag": [21, 43, 44, 46, 47, 73, 76, 152], "shallow": [21, 43, 44, 46, 47, 73], "pleas": [21, 43, 44, 46, 47, 73, 178], "design": [21, 24, 43, 44, 46, 47, 73, 122, 125, 127, 128, 129, 130], "detach": [21, 43, 44, 46, 47, 73], "non_block": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "memory_format": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "channels_last": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "Its": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "complex": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "integr": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 91, 114], "unchang": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "tri": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "convert": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 76, 114], "host": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "pin": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "4d": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "ignore_w": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "1913": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "3420": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "5113": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "2325": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "torch_doctest_cuda1": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "gpu1": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "1914": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "5112": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "2324": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "float16": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "cdoubl": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "3741": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "j": [21, 25, 34, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114, 181], "2382": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "5593": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "4443": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "complex128": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "6122": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "1150": [21, 43, 44, 46, 47, 57, 66, 70, 73, 75, 114], "to_empti": [21, 43, 44, 46, 47], "dst_type": [21, 43, 44, 46, 47], "xpu": [21, 43, 44, 46, 47], "zero_grad": [21, 43, 44, 46, 47, 181], "set_to_non": [21, 43, 44, 46, 47], "context": [21, 43, 44, 46, 47, 100, 133, 134, 136, 139, 140, 143, 150], "grad": [21, 43, 44, 46, 47], "dimension": [22, 23, 136, 139, 140, 143], "keepdim": 24, "sum": [24, 44, 135], "user_regist": 24, "experiment": [24, 106], "onto": [24, 106, 114], "appear": 24, "priori": 24, "definit": [24, 40], "uniqu": 24, "discretebox": 24, "alpha": [25, 27, 34, 87, 129, 130], "beta": [25, 27, 34, 127], "ep": [25, 27, 34, 76, 115, 122, 131, 152], "1e": [25, 27, 34, 76, 92, 95, 112], "08": [25, 27, 34], "collate_fn": [25, 26, 27, 28, 32, 151], "prefetch": [25, 26, 27, 28, 32, 151], "priorit": [25, 27, 34, 123, 124, 129, 130], "schaul": [25, 34], "quan": [25, 34], "antonogl": [25, 34], "silver": [25, 34], "2015": [25, 34], "arxiv": [25, 34, 54, 66, 88, 89, 90, 91, 95, 96, 101, 102, 103, 108, 109, 120, 125, 126, 128, 130, 131, 136, 139, 140, 143, 160, 165, 170], "org": [25, 34, 54, 66, 88, 89, 90, 91, 95, 96, 101, 102, 103, 108, 109, 120, 125, 126, 128, 130, 131, 136, 139, 140, 143, 160, 165, 170], "ab": [25, 34, 66, 76, 95, 96, 101, 102, 103, 108, 109, 126, 128, 165], "1511": [25, 34, 96], "05952": [25, 34], "expon": [25, 27, 34], "\u03b1": [25, 27, 34], "determin": [25, 27, 34, 66, 75], "delta": [25, 27, 34, 106, 112], "prioriti": [25, 27, 33, 34, 37, 38, 39, 40, 123, 124, 129, 130, 181], "null": [25, 27, 34, 53], "merg": [25, 26, 27, 32, 151], "mini": [25, 26, 27, 32, 151], "style": [25, 26, 27, 32, 151], "rb": [25, 26, 27, 32, 151], "multithread": [25, 26, 27, 32, 151], "instanti": [25, 26, 27, 46, 47, 72, 151], "extend": [25, 26, 27, 28, 31, 32, 33, 41, 42, 151, 181], "gather": [25, 27, 135, 157, 178], "multinomi": [25, 27], "update_prior": [25, 27, 34, 181], "circular": [26, 151], "randomli": [26, 28, 62, 63, 70, 106, 151], "select": [26, 27, 28, 31, 32, 33, 46, 47, 62, 86, 116, 151, 153], "priority_kei": [27, 33, 124, 125, 130], "td_error": [27, 33, 123, 124, 125, 129, 130], "prioritizedreplaybuff": 27, "flaot": 27, "return_weight": 27, "_weight": 27, "replaybuff": [28, 31, 33, 42, 168, 172], "meta": [29, 181], "describ": [29, 55, 72, 112, 113, 165], "what": [29, 43, 44, 46, 47, 70, 178], "replay_buff": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 172], "rb_prototyp": [31, 32, 33], "remot": [31, 46, 47], "invoc": 31, "friendli": 31, "public": 31, "rpc": 31, "normal": [31, 63, 76, 87, 98, 106, 113, 117, 150, 152, 176, 181], "include_info": [31, 33], "sampler": [31, 32, 33, 34, 35, 37, 38, 39, 40], "writer": [32, 41], "max_siz": [32, 37, 39, 40], "1_000": 32, "randomsampl": 32, "roundrobinwrit": 32, "kw": [33, 41], "max_capac": 34, "uniformli": 35, "scratch_dir": 37, "memmap": [37, 46, 47, 76], "attach": [37, 38, 39, 40], "entiti": [37, 38, 39, 40], "made": [37, 38, 39, 40], "eg": [37, 38, 39, 40], "alloc": 38, "__len__": 40, "roundrobin": 41, "insert": [41, 42, 74], "piec": [41, 42], "_inplace_upd": [43, 46, 47, 73], "_batch_lock": [43, 46, 47, 73], "is_don": [43, 45], "run_type_check": [43, 45], "compar": [43, 150], "rand_step": [43, 44, 45, 46, 47, 48, 49, 50, 51, 76], "batch_lock": [43, 44, 46, 47, 73], "environn": [43, 44, 45, 46, 47, 73], "immut": [43, 44, 46, 47, 73, 165], "fake_tensordict": [43, 44, 46, 47], "fake": [43, 44, 46, 47], "overridden": [43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116], "although": [43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116, 181], "recip": [43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116], "afterward": [43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116], "former": [43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116], "silent": [43, 44, 46, 47, 57, 66, 72, 74, 75, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 114, 115, 116], "info": [43, 44, 46, 47, 77], "_step": [43, 44, 46, 47], "privat": [43, 44, 46, 47], "_reset": [43, 44, 45, 46, 47, 86], "overwritten": [43, 44, 46, 47, 81, 115], "callback": [43, 44, 46, 47], "auto_reset": [43, 44, 46, 47], "auto_cast_to_devic": [43, 44, 46, 47], "break_when_any_don": [43, 44, 46, 47], "return_contigu": [43, 44, 46, 47], "soon": [43, 44, 46, 47], "smaller": [43, 44, 46, 47], "automat": [43, 44, 46, 47, 63, 82, 105], "lazystackedtensordict": [43, 44, 45, 46, 47], "concomitt": [43, 44, 46, 47], "eras": [43, 44, 46, 47], "workspac": [43, 44, 46, 47], "carri": [43, 44, 46, 47], "discard": [44, 81], "info_dict_read": 44, "set_info_dict_read": 44, "put": [44, 76, 176], "f": [44, 106], "read_act": 44, "read_don": 44, "reader": 44, "frame_skip": [44, 48, 49, 50, 148, 150, 156, 181], "broken": 44, "read_ob": 44, "dictat": [44, 106], "inner": [44, 106, 181], "read_reward": 44, "total_reward": 44, "step_reward": 44, "far": [44, 113, 117], "baseinfodictread": 44, "info_dict": 44, "hoc": 44, "manner": [44, 66], "dict_read": 44, "gymwrapp": 44, "default_info_dict_read": 44, "my_info_kei": 44, "some_env": 44, "meant": 45, "world": 45, "limit": [45, 46, 47], "safeti": 45, "constraint": 45, "behav": [45, 104, 115], "classic": 45, "directli": [45, 176], "ndunboundedcontinuoustensorspec": [45, 70, 82, 83, 84, 85, 86, 106, 114, 115, 116, 118], "mymbenv": [45, 86], "world_model": [45, 86], "super": [45, 86, 118, 120], "hidden_observ": [45, 86], "mlp": [45, 83, 86, 87, 88, 89, 90, 91, 94, 97, 165, 167, 170], "worldmodelwrapp": [45, 86], "activation_class": [45, 86, 87, 88, 89, 90, 91, 95, 96, 98], "relu": [45, 86], "activate_last_lay": [45, 86, 91, 98], "depth": [45, 86, 87, 88, 89, 90, 91, 94, 95, 96, 98, 102, 103], "equal": [46, 47, 62, 87, 93, 98, 132, 146, 174, 175], "my_env_fun": [46, 47], "custom_attribute_list": [46, 47], "custom_attribut": [46, 47], "custom_method_list": [46, 47], "custom_method": [46, 47], "num_work": [46, 47], "deploi": [46, 47], "creation": [46, 47], "divers": [46, 47], "slight": [46, 47], "overhead": [46, 47], "env_input_kei": [46, 47], "permit": [46, 47], "drastic": [46, 47], "decreas": [46, 47], "io": [46, 47], "burden": [46, 47], "_batchedenv": [46, 47], "might": [46, 47, 178], "next_pixel": [46, 47], "next_vector": [46, 47], "amount": [46, 47], "occupi": [46, 47], "excluded_kei": [46, 47], "exclud": [46, 47], "share_individual_td": [46, 47], "lazi": [46, 47, 66, 100, 106, 114, 116], "shared_memori": [46, 47], "policy_proof": [46, 47], "ll": [46, 47], "hidden": [46, 47, 83, 84, 85, 95, 97, 102, 103, 106, 108, 109, 114, 116, 165], "infer": [46, 47, 76, 100, 130], "allow_step_when_don": [46, 47], "encount": [46, 47, 178], "update_kwarg": [46, 47], "dm_control": [48, 49], "env_nam": [48, 50], "task_nam": 48, "cheetah": [48, 49], "suit": 49, "model_bas": [52, 86], "dreamer": [52, 95], "transform_reward_spec": [53, 57, 58, 66, 68, 69, 72, 74, 75], "cat_dim": 54, "success": [54, 72], "account": 54, "movement": 54, "veloc": 54, "propos": [54, 99, 126, 131, 167, 170], "plai": 54, "atari": 54, "pdf": [54, 88, 89, 90, 91, 120, 125, 129, 130, 131, 136, 139, 140, 143, 160, 167, 170], "1312": 54, "5602": 54, "along": [54, 55, 71, 98, 101, 106, 114], "tranform": [54, 57, 66, 70, 72, 75, 77], "transform_observation_spec": [54, 55, 56, 57, 58, 60, 61, 63, 66, 67, 70, 71, 72, 74, 75], "del_kei": 55, "unsqueeze_if_oor": 55, "observation_posit": 55, "observation_veloc": 55, "delet": 55, "unsqueez": [55, 71, 74, 97], "key1": [55, 146, 153], "key2": [55, 146, 153], "_": [55, 58, 63, 71, 76, 94, 106, 107, 114, 116, 120, 121], "w": [56, 67, 71], "crop": 56, "center": 56, "width": [56, 67], "height": [56, 67], "squar": [56, 113, 117], "rewardsc": [57, 73], "rewardclip": 57, "transformed_env": [57, 72, 73], "dest": [57, 66, 75, 114], "transform_input_spec": [57, 58, 66, 72, 74, 75], "finit": 59, "first_dim": 60, "last_dim": 60, "flatten": 60, "adjac": 60, "turn": [61, 150], "noop": 62, "30": [62, 108, 109], "op": [62, 155], "noop_max": 62, "loc": [63, 69, 83, 85, 105, 106, 113, 116, 117, 157, 165, 167, 170, 176], "standard_norm": 63, "affin": [63, 69], "layer": [63, 76, 87, 88, 89, 95, 98, 100, 101, 102, 103, 110, 111, 119], "set_default_tensor_typ": 63, "doubletensor": 63, "std": [63, 76], "isclos": 63, "next_ob": 63, "normalis": 63, "stat": [63, 157, 176], "rubric": [63, 116], "manual_se": 63, "init_stat": 63, "3752e": 63, "01": [63, 122, 127, 128], "5087e": 63, "03": 63, "9294e": 63, "9636": 63, "5608": 63, "6408": 63, "num_it": 63, "reduce_dim": 63, "constant": [63, 181], "ideal": 63, "statist": [63, 76, 176], "approach": 63, "gaussian": [63, 86, 100, 101], "empir": [63, 86, 106], "deviat": [63, 76, 86, 95, 100, 101, 128], "summari": [63, 76], "r3m": 66, "resnet": [66, 75], "visual": [66, 75], "embed": [66, 75, 83, 84, 85, 114], "ego4d": [66, 75], "paper": [66, 75, 126, 167, 170], "univers": [66, 75], "manipul": 66, "suraj": 66, "nair": 66, "aravind": 66, "rajeswaran": 66, "vikash": [66, 75], "kumar": [66, 75], "chelsea": 66, "finn": 66, "abhinav": 66, "gupta": 66, "2203": 66, "12601": 66, "_init": 66, "snippet": 66, "resenet50": 66, "model_nam": [66, 75], "resnet50": [66, 75], "resnet34": 66, "resnet18": 66, "left": [66, 75], "empti": [66, 73, 75], "r3m_vec": 66, "feed": [66, 75], "244": [66, 75], "hub": [66, 75], "cach": [66, 73, 75, 147], "download_path": [66, 75], "tensor_pixels_kei": [66, 75], "interpol": 67, "bilinear": 67, "clamp_min": 68, "clamp_max": 68, "clip": [68, 122, 154], "clip_min": 68, "scalar": [68, 89, 91, 100, 101, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "clip_max": 68, "default_valu": 70, "primer": 70, "popul": 70, "drawn": [70, 106], "rel": [70, 92, 112], "fix": [70, 130], "chosen": [70, 165, 167, 170], "mykei": 70, "dtype_or_devic": 70, "255": 71, "precis": 71, "ri": 71, "randint": 71, "out_keys_inv": 72, "principl": 72, "combin": 72, "cattransform": 72, "notabl": 72, "placehold": 73, "cache_spec": 73, "valid": [73, 87, 98, 127, 181], "anymor": [73, 114], "unsqueeze_dim": 74, "vip": 75, "toward": 75, "implicit": 75, "jason": 75, "ma": 75, "shagun": 75, "sodhani": 75, "dinesh": 75, "jayaraman": 75, "osbert": 75, "bastani": 75, "ami": 75, "zhang": 75, "vip_vec": 75, "shared_td": 76, "lock": 76, "decai": [76, 129, 152], "9999": 76, "0001": [76, 95, 152], "fly": [76, 127], "substitut": 76, "to_observation_norm": 76, "rate": [76, 135], "99": [76, 122, 127, 128, 129, 130, 135, 172], "numer": [76, 106, 113, 114, 117], "underflow": 76, "1000": [76, 106, 126, 172], "static": 76, "build_td_for_shared_vecnorm": 76, "across": [76, 155], "memmori": 76, "memmap_": 76, "multiprocess": 76, "mp": 76, "queue": 76, "td_share": 76, "v": [76, 97, 130], "observationnorm": [76, 176], "state_dim": [77, 108, 109], "action_dim": [77, 88, 90], "gsde": [77, 129, 176], "nois": [77, 101, 119, 129, 150, 176], "func": 77, "gsdemodul": 77, "probabilistictdmodul": [80, 98, 106, 130, 135, 150], "actor": [80, 83, 84, 85, 86, 88, 90, 94, 95, 105, 107, 120, 121, 122, 123, 127, 128, 129, 130, 160, 162, 165, 167, 170], "default_interaction_mod": [80, 106], "next_tensordict": 81, "keep_oth": 81, "exclude_reward": 81, "exclude_don": 81, "exclude_act": 81, "_run_check": 81, "reflect": [81, 156], "renam": 81, "next_": 81, "funtion": 81, "td_out": [81, 146, 153], "make_polici": 81, "next_td": 81, "append": 81, "next_observ": [81, 97], "translat": [82, 105], "td_modul": [82, 83, 84, 85, 105, 106, 114, 115, 116, 118], "critic": [83, 122, 127, 128, 130], "get_policy_oper": [83, 84, 85, 165], "alon": [83, 84, 85], "tdmodul": [83, 84, 85, 106, 172], "dedic": [83, 84, 85], "get_critic_oper": 83, "common_oper": [83, 85], "produc": [83, 85, 87, 98, 104, 106], "policy_oper": [83, 84, 85], "value_oper": [83, 84, 85], "tensordict_modul": [83, 84, 85, 105, 106, 107, 115, 116, 120, 121], "probabilisticactor": [83, 85, 130], "valueoper": [83, 84, 85, 122, 127, 128, 172], "tanhnorm": [83, 84, 85, 105, 106, 116], "normalparamwrapp": [83, 85, 105, 106, 116], "spec_hidden": [83, 85], "module_hidden": [83, 85], "td_module_hidden": [83, 85], "spec_act": [83, 84, 85], "8": [83, 84, 85, 87, 88, 89, 96, 98, 105, 106, 114, 116], "module_act": [83, 84, 85], "td_module_act": [83, 84, 85], "dist_in_kei": [83, 85, 105, 106, 116], "sample_out_kei": [83, 85, 105, 106, 116], "distribution_class": [83, 84, 85, 105, 106, 116], "return_log_prob": [83, 84, 85, 106, 116], "module_valu": [83, 84, 85], "num_cel": [83, 87, 88, 89, 90, 91, 95, 96, 98], "td_module_valu": [83, 84, 85], "state_action_valu": [83, 118, 135, 160, 167, 170, 172], "td_clone": [83, 84, 85], "clone": [83, 84, 85, 106, 114, 115, 116, 165, 167, 170], "sample_log_prob": [83, 84, 85, 106, 116, 165, 167], "tensordictmodulewrapp": [83, 158, 159, 172], "estim": [83, 84, 85, 122, 127, 128, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "get_value_oper": [83, 84, 85, 165], "probabilisticactor_deprec": 84, "state_valu": [84, 85, 118, 137, 138, 139, 140, 141, 143, 144, 165, 170], "tensordictsequenti": [84, 85], "planning_horizon": 86, "optim_step": 86, "num_candid": 86, "num_top_k_candid": 86, "reward_kei": 86, "action_kei": [86, 99], "cross": 86, "entropi": [86, 122, 127, 128, 129, 130], "botev": 86, "et": 86, "al": [86, 162], "2013": 86, "cem": 86, "plan": [86, 99], "unit": [86, 95, 102, 103, 108, 109], "varianc": [86, 113, 117], "cumul": 86, "rank": 86, "top": 86, "k": 86, "episod": [86, 139, 140, 141, 142, 143, 144, 145], "repeat": 86, "maximis": [86, 88, 90], "horizon": 86, "modelbasedenv": 86, "mpc": [86, 99], "candid": 86, "modelbasedenvbas": [86, 99], "next_hidden_observ": 86, "5": [86, 87, 94, 95, 98, 107, 113, 115, 117, 120, 121, 127], "elu": [87, 88, 89, 90, 91, 95, 96], "activation_kwarg": [87, 98], "norm_class": [87, 88, 89, 98], "norm_kwarg": [87, 98], "bias_last_lay": [87, 88, 89, 90, 91, 96, 98], "aggregator_class": [87, 88, 89], "squashdim": [87, 88], "aggregator_kwarg": [87, 88, 89], "squeeze_output": [87, 88, 89], "convolut": [87, 88, 89, 110], "neural": [87, 110, 114], "len": [87, 98], "cell": [87, 98], "kernel": [87, 96, 97], "tanh": [87, 98, 112, 113, 117], "aggreg": [87, 88, 89, 116], "squeez": [87, 110, 111], "singleton": [87, 98, 110, 111], "device_typ": [87, 88, 89, 90, 91, 96, 98, 100, 101], "cnet": 87, "34": [87, 98], "35": [87, 98], "possibli": [87, 106, 114, 154], "rectangular": 87, "conv_net_kwarg": [88, 89], "mlp_net_kwarg": [88, 89, 90], "use_avg_pool": [88, 89], "WITH": [88, 89, 90, 91, 131, 160], "1509": [88, 89, 90, 91, 126, 131, 160], "02971": [88, 89, 90, 91, 131, 160], "q": [88, 89, 90, 91, 93, 96, 120, 121, 123, 124, 125, 126, 129, 130, 167, 170], "convnet": 88, "ndims_in": 88, "avgpool": [88, 89], "128": 89, "adaptiveavgpool2d": 89, "400": [90, 91], "300": [90, 91, 165], "mlp_net_kwargs_net1": 91, "mlp_net_kwargs_net2": 91, "atol": [92, 112], "06": [92, 112], "rtol": [92, 112], "batch_shap": [92, 112], "event_shap": [92, 112], "absolut": [92, 112], "toler": [92, 112], "log_prob": [92, 104, 117], "log": [92, 104, 106, 117, 122, 125, 127, 128, 129, 130, 148, 149, 150, 154, 172, 181], "probabl": [92, 104, 106, 117], "densiti": [92, 104, 117], "mass": [92, 104, 117], "rsampl": [92, 104, 106], "sample_shap": [92, 104], "reparameter": [92, 104], "dqnet": 93, "atom": 93, "action_spac": [94, 107, 120, 121], "one_hot": [94, 107, 120, 121], "onehotdiscretetensorspec": [94, 107, 120, 121], "nbin": [94, 120], "qvalue_actor": [94, 107, 120, 121], "std_bia": 95, "std_min_val": 95, "stochast": [95, 101, 102, 109, 129, 130], "belief": [95, 102, 108, 109], "1912": 95, "016034": 95, "softplu": 95, "out_features_valu": 96, "cnn_kwarg": 96, "mlp_kwarg": [96, 97], "duel": 96, "cnn": 96, "06581": 96, "512": 96, "lstm_kwarg": 97, "embedd": 97, "lstm": 97, "time_step": 97, "2d": 97, "input_s": 97, "hidden_s": 97, "hidden0_in": 97, "hidden1_in": 97, "hidden0_out": 97, "hidden1_out": 97, "single_bias_last_lay": 98, "layer_class": 98, "layer_kwarg": 98, "perceptron": 98, "seamless": 98, "though": 98, "reshap": 98, "lazylinear": [98, 106, 114, 116], "42": [98, 154], "noisylinear": [98, 100], "noisylazylinear": 98, "At": 99, "mpcplanner": 99, "tensordict_out": [99, 106, 114, 116], "std_init": [100, 101], "noisi": [100, 101, 119], "term": [100, 101, 155], "matrix": [100, 101], "ax": [100, 101], "initialize_paramet": 100, "isol": 100, "1706": 101, "10295v3": 101, "induc": 101, "aid": 101, "descent": 101, "remain": 101, "emploi": 101, "decod": 102, "1803": [102, 103], "10122": [102, 103], "rnn_hidden": 102, "latent": 103, "logit": 104, "prob": 104, "One": [104, 114, 132], "excacli": 104, "probabilist": [105, 106], "fmodul": [105, 107, 114, 115, 118, 120, 121], "make_functional_with_buff": [105, 106, 107, 114, 115, 116, 118, 120, 121], "tensor_spec": 106, "distribution_kwarg": 106, "cache_dist": 106, "n_empirical_estim": 106, "special": 106, "rule": 106, "get_dist": 106, "__call__": [106, 181], "real": 106, "median": 106, "functionalmodul": [106, 114], "functionalmodulewithbuff": [106, 114], "overflow": [106, 114], "fist": 106, "set_exploration_mod": [106, 150], "_log_prob": 106, "diverg": [106, 127], "grucel": [106, 114], "fnet": 106, "vmap": [106, 114, 116], "again": 106, "expend": 106, "p": [106, 116], "expand": [106, 114, 116], "contigu": [106, 114, 116], "normal_": [106, 114, 116], "td_vmap": [106, 114, 116], "unlik": [106, 114, 116, 125, 128], "prevent": [106, 113, 114, 116, 117, 127, 128], "scrape": [106, 114, 116], "lazy_modul": [106, 114], "18": [106, 114, 116], "some_input": [106, 114, 116], "some_output": [106, 114, 116], "hidden_dim": [108, 109], "scale_lb": [108, 109], "posterior": 108, "rssm": [108, 109], "1811": [108, 109], "04551": [108, 109], "obs_embed": 108, "rnn_hidden_dim": 109, "prior": 109, "dream": 109, "recurr": 109, "min": [112, 113, 117, 122, 129, 130], "event_dim": [112, 113], "upscal": [113, 117], "tanh_loc": [113, 117], "tanhtransform": 113, "ultim": [113, 117], "unstabl": [113, 117], "poor": [113, 117], "explos": [113, 117], "practic": [113, 117, 178], "switch": [113, 117], "sigma": [113, 117], "formula": [113, 117, 122, 127, 128], "character": 114, "td_fmodul": 114, "td_function": 114, "td_state": 114, "isn": 114, "ensembl": [114, 129], "params_repeat": 114, "buffers_repeat": 114, "irrespect": 114, "random_sampl": 114, "calss": 115, "expand_as_right": 115, "epsilongreedyexplor": 115, "rand_output_clon": 115, "det_output_clon": 115, "rand_output_idx": 115, "_rand_output": 115, "_det_output": 115, "rand_output_idx_expand": 115, "tensordict_module_wrap": 115, "partial_toler": 116, "tensordictsequenci": 116, "who": 116, "AND": 116, "scan": 116, "sub": [116, 146, 154], "tensordictsequ": 116, "spec1": 116, "net1": 116, "fnet1": 116, "params1": 116, "buffers1": 116, "fmodule1": 116, "td_module1": 116, "spec2": 116, "module2": 116, "fmodule2": 116, "params2": 116, "buffers2": 116, "td_module2": 116, "lazy_module1": 116, "lazy_module2": 116, "select_subsequ": 116, "acord": 116, "custommodul": 118, "cat": 118, "var_num": [120, 121], "regard": [120, 125, 128], "perspect": [120, 125], "1707": [120, 125, 128, 165], "06887": [120, 125], "mult_one_hot": [120, 121], "customdistributionalqv": 120, "log_softmax": 120, "greedi": 121, "advantage_kei": [122, 127, 128], "clip_epsilon": 122, "entropy_bonu": [122, 127, 128], "samples_mc_entropi": [122, 127, 128], "entropy_coef": [122, 127, 128], "critic_coef": [122, 127, 128], "loss_critic_typ": [122, 127, 128], "l2": [122, 123, 124, 127, 128, 129, 132], "loss": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 154, 161, 163, 164, 166, 167, 169, 172, 181], "threshold": 122, "bonu": [122, 127, 128], "favour": [122, 127, 128], "exploratori": [122, 127, 128], "mont": [122, 127, 128], "carlo": [122, 127, 128], "multipli": [122, 127, 128, 129, 130], "loss_funct": [122, 123, 124, 128, 129, 130, 132], "discrep": [122, 123, 124, 127, 128], "l1": [122, 123, 124, 127, 128, 129, 132], "smooth_l1": [122, 123, 124, 127, 128, 129, 130, 132], "throughout": [122, 125, 127, 128, 129, 130], "essenti": [122, 125, 127, 128, 129, 130], "backpropag": [122, 125, 127, 128, 129, 130], "actor_network": [123, 129, 130], "value_network": [123, 124, 125, 130, 136, 137, 138], "delay_actor": [123, 130], "delay_valu": [123, 124, 125, 130], "input_tensordict": [123, 124, 125], "assign": [123, 124], "qvalueactor": 124, "distributionalqvalueactor": 125, "disctount": 125, "loss_modul": [126, 131, 154, 171, 172, 181], "dqnloss": [126, 131, 163], "ddpgloss": [126, 131, 161, 172], "sacloss": [126, 131, 169], "value_network_update_interv": 126, "contrast": 126, "soft": [126, 130, 131], "06461": 126, "dtarg": 127, "decrement": 127, "samples_mc_kl": 127, "kl": 127, "penalti": 127, "old_polici": 127, "new_polici": 127, "adapt": 127, "thu": 127, "distanc": [127, 132, 135], "apart": 127, "advantage_diff_kei": 128, "value_error": [128, 136, 137, 138], "advantage_modul": 128, "proxim": [128, 165], "optimis": [128, 150], "flavour": 128, "constrain": 128, "clipppoloss": 128, "klpenppoloss": 128, "regularis": 128, "06347": [128, 165], "qvalue_network": [129, 130], "num_qvalue_net": [129, 130], "sub_sample_len": 129, "priotity_kei": [129, 130], "alpha_init": [129, 130], "min_alpha": [129, 130], "max_alpha": [129, 130], "fixed_alpha": [129, 130], "target_entropi": [129, 130], "auto": [129, 130], "delay_qvalu": [129, 130], "openreview": [129, 167], "ay8zfzm0tdd": [129, 167], "idea": [129, 181], "subsampl": [129, 146, 181], "know": [129, 150], "1801": [130, 170], "01290": [130, 170], "qvalue_network_bi": 130, "prod": 130, "n_action": 130, "redqloss": 131, "999": [131, 152], "epsilon": 131, "prev_param": 131, "new_param": 131, "v2": [132, 141, 142, 144, 145, 160, 165, 167, 170], "strict_shap": 132, "view_a": 132, "manag": [133, 134, 150], "hold": [133, 134], "next_val_kei": 135, "pred_next_v": 135, "usus": 135, "mse": 135, "q_valu": 135, "target_valu": 135, "n_steps_to_next": 135, "value_next_st": 135, "lmbda": [136, 138, 139, 141, 142, 143, 144, 145], "average_reward": [136, 137, 138], "gradient_mod": [136, 137, 138], "1506": [136, 139, 140, 143], "02438": [136, 139, 140, 143], "exponenti": [136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152], "propag": [136, 137, 138], "throught": [136, 137, 138], "unused_arg": [136, 137, 138], "target_param": [136, 137, 138], "target_buff": [136, 137, 138], "value_kei": [137, 138], "gae": [137, 138], "next_state_valu": [139, 140, 141, 142, 143, 144, 145], "old_stat": [139, 140, 141, 143, 144], "timestep": [139, 140, 141, 142, 143, 144, 145], "new_stat": [139, 140, 141, 142, 143, 144, 145], "flag": [139, 140, 141, 142, 143, 144, 145], "rolling_gamma": [141, 142, 144, 145], "ti": [141, 142, 144, 145], "event": [141, 142, 144, 145], "g1": [141, 142, 144, 145], "g2": [141, 142, 144, 145], "g3": [141, 142, 144, 145], "g4": [141, 142, 144, 145], "v3": [141, 142, 144, 145], "v4": [141, 142, 144, 145], "upcom": [141, 142, 144, 145], "sub_traj_len": 146, "min_sub_traj_len": 146, "full": 146, "20": 146, "register_op": [146, 147, 148, 149, 152, 153, 155, 181], "process_optim_batch": [146, 152, 181], "_process_optim_batch_hook": [146, 181], "interv": [147, 155], "clear_cuda": 147, "pre_optim_step": [147, 181], "counter": [148, 181], "log_pbar": [148, 149, 150, 152, 181], "progress": [148, 149, 150, 154, 181], "bar": [148, 149, 150, 154, 181], "count_fram": 148, "pre_steps_log": [148, 149, 181], "lognam": 149, "r_train": 149, "logger": [149, 150, 154, 172, 176, 181], "log_reward": 149, "record_interv": 150, "record_fram": [150, 156], "policy_explor": [150, 172], "log_kei": 150, "suffix": 150, "underestim": 150, "final": 150, "suppos": [150, 181], "reward_evalu": 150, "video": [150, 176], "reward_norm": 152, "batch_process": [152, 153, 181], "update_reward_stat": 152, "normalize_reward": 152, "make_train": 153, "second": 153, "_process_batch_hook": [153, 181], "versatil": 154, "lossmodul": [154, 171, 172], "optim_steps_per_batch": [154, 181], "epoch": 154, "clip_grad_norm": 154, "norm": 154, "partial": 154, "deriv": 154, "clamp": 154, "clip_norm": 154, "progress_bar": 154, "tqdm": 154, "save_trainer_interv": 154, "disk": [154, 181], "10000": 154, "save_trainer_fil": [154, 181], "_datacollector": [155, 158, 159, 172], "update_weights_interv": 155, "whenev": 155, "sit": 155, "sync": [155, 172, 181], "update_weight": 155, "post_step": [155, 181], "cfg": [156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176], "dictconfig": [156, 157, 158, 159, 160, 162, 165, 167, 168, 170, 171, 172, 173, 176], "correct": 156, "divid": 156, "unknowingli": 156, "1m": 156, "annealing_fram": 156, "init_env_step": [156, 157], "proof_environ": [157, 160, 162, 165, 167, 170], "sta": 157, "ot": 157, "actor_model_explor": [158, 159], "make_env_kwarg": [158, 159], "creator": [158, 159, 174, 175, 176], "actor_net_kwarg": [160, 167, 170], "value_net_kwarg": [160, 170], "modulelist": [160, 167, 170], "dummi": [160, 162, 165, 167, 170], "ddpgcnnactor": 160, "ddpgmlpactor": 160, "ddpgcnnqnet": 160, "ddpgmlpqnet": 160, "cattensor": [160, 165, 167, 170], "hydra": [160, 162, 165, 167, 170], "config_stor": [160, 162, 165, 167, 170], "configstor": [160, 162, 165, 167, 170], "dataclass": [160, 162, 165, 167, 170], "halfcheetah": [160, 165, 167, 170], "config_field": [160, 162, 165, 167, 170], "config_cl": [160, 162, 165, 167, 170], "ddpgmodelconfig": 160, "envconfig": [160, 162, 165, 167, 170], "make_dataclass": [160, 162, 165, 167, 170], "cls_name": [160, 162, 165, 167, 170], "config_path": [160, 162, 165, 167, 170], "config_nam": [160, 162, 165, 167, 170], "17": [160, 165, 167, 170], "targetnetupdat": [161, 163, 166, 169, 171, 172], "discretemodelconfig": 162, "pong": 162, "v5": 162, "pixels_onli": 162, "210": 162, "160": 162, "ppoloss": 164, "in_keys_actor": 165, "observation_kei": [165, 167, 170], "actorvalueoper": 165, "join": 165, "actorcriticoper": 165, "parser_env_arg": [165, 167], "parser_model_args_continu": [165, 167, 170], "ppomodelconfig": 165, "actor_valu": 165, "redqloss_deprec": 166, "qvalue_net_kwarg": [167, 170], "qvalu": [167, 170], "redqmodelconfig": 167, "replayargsconfig": 168, "sacmodelconfig": 170, "target_net_updat": 172, "constitu": 172, "learnt": 172, "tempfil": 172, "tensorboardlogg": 172, "tensordictreplaybuff": 172, "egreedywrapp": 172, "env_mak": 172, "env_proof": 172, "obs_spec": 172, "net_valu": 172, "dir": [172, 181], "gettempdir": 172, "exp_nam": 172, "argpars": [173, 176], "namespac": [173, 176], "parser": [173, 176], "transformed_env_constructor": 173, "env_kwarg": [174, 175], "num_env_per_collector": [174, 175], "num_collector": [174, 175], "less": [174, 175], "multisyncdatacollector": 175, "video_tag": 176, "norm_obs_onli": 176, "use_env_cr": 176, "custom_env_mak": 176, "custom_env": 176, "return_transformed_env": 176, "action_dim_gsd": 176, "state_dim_gsd": 176, "batch_dim": 176, "vecnorm": 176, "wheter": 176, "maker": 176, "overrid": 176, "exclus": 176, "solv": 178, "journei": 178, "guid": 178, "textbook": 178, "highlight": 178, "readi": 178, "ever": 178, "cover": 178, "bump": 178, "think": 178, "commun": 178, "benefit": 178, "submit": 178, "pr": 178, "outer": 181, "believ": 181, "scheme": 181, "substenti": 181, "sketch": 181, "_pre_steps_log_hook": 181, "_pre_optim_hook": 181, "sub_batch": 181, "_post_loss_hook": 181, "post_loss": 181, "_post_optim_hook": 181, "post_optim": 181, "_post_optim_log": 181, "post_optim_log": 181, "_post_steps_hook": 181, "_post_steps_log_hook": 181, "post_steps_log": 181, "There": 181, "comment": 181, "categori": 181, "strategi": 181, "extens": 181, "replaybuffertrain": 181, "batchsubsampl": 181, "logreward": 181, "reserv": 181, "updateweight": 181, "trainerhookbas": 181, "three": 181, "logginghook": 181, "logging_hook": 181, "save_dict": 181, "some_valu": 181, "els": 181, "torchsnapshot": 181, "ckpt_backend": 181, "wherea": 181, "pt": 181, "filepath": 181, "select_kei": 181, "selectkei": 181, "save_train": 181, "load_from_fil": 181, "perfectli": 181, "intern": 182}, "objects": {"torchrl._utils": [[10, 0, 1, "", "implement_for"]], "torchrl.collectors": [[11, 0, 1, "", "MultiSyncDataCollector"], [12, 0, 1, "", "MultiaSyncDataCollector"], [13, 0, 1, "", "SyncDataCollector"], [14, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.MultiSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[13, 1, 1, "", "iterator"], [13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "rollout"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[15, 2, 1, "", "split_trajectories"]], "torchrl.data": [[16, 0, 1, "", "BinaryDiscreteTensorSpec"], [17, 0, 1, "", "BoundedTensorSpec"], [18, 0, 1, "", "CompositeSpec"], [19, 0, 1, "", "DiscreteTensorSpec"], [20, 0, 1, "", "MultOneHotDiscreteTensorSpec"], [21, 0, 1, "", "MultiStep"], [22, 0, 1, "", "NdBoundedTensorSpec"], [23, 0, 1, "", "NdUnboundedContinuousTensorSpec"], [24, 0, 1, "", "OneHotDiscreteTensorSpec"], [25, 0, 1, "", "PrioritizedReplayBuffer"], [26, 0, 1, "", "ReplayBuffer"], [27, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [28, 0, 1, "", "TensorDictReplayBuffer"], [29, 0, 1, "", "TensorSpec"], [30, 0, 1, "", "UnboundedContinuousTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[16, 1, 1, "", "assert_is_in"], [16, 1, 1, "", "encode"], [16, 1, 1, "", "index"], [16, 1, 1, "", "is_in"], [16, 1, 1, "", "project"], [16, 1, 1, "", "rand"], [16, 1, 1, "", "to_numpy"], [16, 1, 1, "", "type_check"], [16, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "keys"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.MultOneHotDiscreteTensorSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[21, 1, 1, "", "add_module"], [21, 1, 1, "", "apply"], [21, 1, 1, "", "bfloat16"], [21, 1, 1, "", "buffers"], [21, 1, 1, "", "children"], [21, 1, 1, "", "cpu"], [21, 1, 1, "", "cuda"], [21, 1, 1, "", "double"], [21, 1, 1, "", "eval"], [21, 1, 1, "", "extra_repr"], [21, 1, 1, "", "float"], [21, 1, 1, "", "forward"], [21, 1, 1, "", "get_buffer"], [21, 1, 1, "", "get_extra_state"], [21, 1, 1, "", "get_parameter"], [21, 1, 1, "", "get_submodule"], [21, 1, 1, "", "half"], [21, 1, 1, "", "ipu"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "modules"], [21, 1, 1, "", "named_buffers"], [21, 1, 1, "", "named_children"], [21, 1, 1, "", "named_modules"], [21, 1, 1, "", "named_parameters"], [21, 1, 1, "", "parameters"], [21, 1, 1, "", "register_backward_hook"], [21, 1, 1, "", "register_buffer"], [21, 1, 1, "", "register_forward_hook"], [21, 1, 1, "", "register_forward_pre_hook"], [21, 1, 1, "", "register_full_backward_hook"], [21, 1, 1, "", "register_full_backward_pre_hook"], [21, 1, 1, "", "register_load_state_dict_post_hook"], [21, 1, 1, "", "register_module"], [21, 1, 1, "", "register_parameter"], [21, 1, 1, "", "requires_grad_"], [21, 1, 1, "", "set_extra_state"], [21, 1, 1, "", "share_memory"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "to"], [21, 1, 1, "", "to_empty"], [21, 1, 1, "", "train"], [21, 1, 1, "", "type"], [21, 1, 1, "", "xpu"], [21, 1, 1, "", "zero_grad"]], "torchrl.data.NdBoundedTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.NdUnboundedContinuousTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[25, 1, 1, "", "add"], [25, 1, 1, "", "extend"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "update_priority"]], "torchrl.data.ReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "sample"], [27, 1, 1, "", "update_priority"]], "torchrl.data.TensorDictReplayBuffer": [[28, 1, 1, "", "add"], [28, 1, 1, "", "extend"], [28, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.rb_prototype": [[31, 0, 1, "", "RemoteTensorDictReplayBuffer"], [32, 0, 1, "", "ReplayBuffer"], [33, 0, 1, "", "TensorDictReplayBuffer"]], "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer": [[31, 1, 1, "", "add"], [31, 1, 1, "", "extend"], [31, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer": [[32, 1, 1, "", "add"], [32, 1, 1, "", "extend"], [32, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer": [[33, 1, 1, "", "add"], [33, 1, 1, "", "extend"], [33, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.samplers": [[34, 0, 1, "", "PrioritizedSampler"], [35, 0, 1, "", "RandomSampler"], [36, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[34, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[37, 0, 1, "", "LazyMemmapStorage"], [38, 0, 1, "", "LazyTensorStorage"], [39, 0, 1, "", "ListStorage"], [40, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[39, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[40, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[41, 0, 1, "", "RoundRobinWriter"], [42, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[41, 1, 1, "", "add"], [41, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "extend"]], "torchrl.envs": [[43, 0, 1, "", "EnvBase"], [44, 0, 1, "", "GymLikeEnv"], [45, 2, 1, "", "ModelBasedEnvBase"], [46, 0, 1, "", "ParallelEnv"], [47, 0, 1, "", "SerialEnv"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[43, 1, 1, "", "add_module"], [43, 1, 1, "", "apply"], [43, 3, 1, "", "batch_locked"], [43, 1, 1, "", "bfloat16"], [43, 1, 1, "", "buffers"], [43, 1, 1, "", "children"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 1, 1, "", "double"], [43, 1, 1, "", "eval"], [43, 1, 1, "", "extra_repr"], [43, 1, 1, "", "fake_tensordict"], [43, 1, 1, "", "float"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "get_buffer"], [43, 1, 1, "", "get_extra_state"], [43, 1, 1, "", "get_parameter"], [43, 1, 1, "", "get_submodule"], [43, 1, 1, "", "half"], [43, 1, 1, "", "ipu"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "modules"], [43, 1, 1, "", "named_buffers"], [43, 1, 1, "", "named_children"], [43, 1, 1, "", "named_modules"], [43, 1, 1, "", "named_parameters"], [43, 1, 1, "", "parameters"], [43, 1, 1, "id0", "rand_step"], [43, 1, 1, "", "register_backward_hook"], [43, 1, 1, "", "register_buffer"], [43, 1, 1, "", "register_forward_hook"], [43, 1, 1, "", "register_forward_pre_hook"], [43, 1, 1, "", "register_full_backward_hook"], [43, 1, 1, "", "register_full_backward_pre_hook"], [43, 1, 1, "", "register_load_state_dict_post_hook"], [43, 1, 1, "", "register_module"], [43, 1, 1, "", "register_parameter"], [43, 1, 1, "", "requires_grad_"], [43, 1, 1, "id1", "reset"], [43, 1, 1, "id2", "rollout"], [43, 1, 1, "", "set_extra_state"], [43, 1, 1, "id3", "set_seed"], [43, 1, 1, "", "share_memory"], [43, 3, 1, "", "specs"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "id4", "step"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_empty"], [43, 1, 1, "", "train"], [43, 1, 1, "", "type"], [43, 1, 1, "", "xpu"], [43, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 3, 1, "", "batch_locked"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "close"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "fake_tensordict"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "rand_step"], [44, 1, 1, "", "read_action"], [44, 1, 1, "", "read_done"], [44, 1, 1, "", "read_obs"], [44, 1, 1, "", "read_reward"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_full_backward_pre_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "reset"], [44, 1, 1, "", "rollout"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_info_dict_reader"], [44, 1, 1, "", "set_seed"], [44, 1, 1, "", "share_memory"], [44, 3, 1, "", "specs"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "step"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[46, 1, 1, "", "add_module"], [46, 1, 1, "", "apply"], [46, 3, 1, "", "batch_locked"], [46, 1, 1, "", "bfloat16"], [46, 1, 1, "", "buffers"], [46, 1, 1, "", "children"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 1, 1, "", "double"], [46, 1, 1, "", "eval"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "fake_tensordict"], [46, 1, 1, "", "float"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_buffer"], [46, 1, 1, "", "get_extra_state"], [46, 1, 1, "", "get_parameter"], [46, 1, 1, "", "get_submodule"], [46, 1, 1, "", "half"], [46, 1, 1, "", "ipu"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "modules"], [46, 1, 1, "", "named_buffers"], [46, 1, 1, "", "named_children"], [46, 1, 1, "", "named_modules"], [46, 1, 1, "", "named_parameters"], [46, 1, 1, "", "parameters"], [46, 1, 1, "", "rand_step"], [46, 1, 1, "", "register_backward_hook"], [46, 1, 1, "", "register_buffer"], [46, 1, 1, "", "register_forward_hook"], [46, 1, 1, "", "register_forward_pre_hook"], [46, 1, 1, "", "register_full_backward_hook"], [46, 1, 1, "", "register_full_backward_pre_hook"], [46, 1, 1, "", "register_load_state_dict_post_hook"], [46, 1, 1, "", "register_module"], [46, 1, 1, "", "register_parameter"], [46, 1, 1, "", "requires_grad_"], [46, 1, 1, "", "reset"], [46, 1, 1, "", "rollout"], [46, 1, 1, "", "set_extra_state"], [46, 1, 1, "", "set_seed"], [46, 1, 1, "", "share_memory"], [46, 3, 1, "", "specs"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "step"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_empty"], [46, 1, 1, "", "train"], [46, 1, 1, "", "type"], [46, 1, 1, "", "update_kwargs"], [46, 1, 1, "", "xpu"], [46, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[47, 1, 1, "", "add_module"], [47, 1, 1, "", "apply"], [47, 3, 1, "", "batch_locked"], [47, 1, 1, "", "bfloat16"], [47, 1, 1, "", "buffers"], [47, 1, 1, "", "children"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 1, 1, "", "double"], [47, 1, 1, "", "eval"], [47, 1, 1, "", "extra_repr"], [47, 1, 1, "", "fake_tensordict"], [47, 1, 1, "", "float"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_buffer"], [47, 1, 1, "", "get_extra_state"], [47, 1, 1, "", "get_parameter"], [47, 1, 1, "", "get_submodule"], [47, 1, 1, "", "half"], [47, 1, 1, "", "ipu"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "modules"], [47, 1, 1, "", "named_buffers"], [47, 1, 1, "", "named_children"], [47, 1, 1, "", "named_modules"], [47, 1, 1, "", "named_parameters"], [47, 1, 1, "", "parameters"], [47, 1, 1, "", "rand_step"], [47, 1, 1, "", "register_backward_hook"], [47, 1, 1, "", "register_buffer"], [47, 1, 1, "", "register_forward_hook"], [47, 1, 1, "", "register_forward_pre_hook"], [47, 1, 1, "", "register_full_backward_hook"], [47, 1, 1, "", "register_full_backward_pre_hook"], [47, 1, 1, "", "register_load_state_dict_post_hook"], [47, 1, 1, "", "register_module"], [47, 1, 1, "", "register_parameter"], [47, 1, 1, "", "requires_grad_"], [47, 1, 1, "", "reset"], [47, 1, 1, "", "rollout"], [47, 1, 1, "", "set_extra_state"], [47, 1, 1, "", "set_seed"], [47, 1, 1, "", "share_memory"], [47, 3, 1, "", "specs"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "step"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_empty"], [47, 1, 1, "", "train"], [47, 1, 1, "", "type"], [47, 1, 1, "", "update_kwargs"], [47, 1, 1, "", "xpu"], [47, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.dm_control": [[48, 2, 1, "", "DMControlEnv"], [49, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[50, 2, 1, "", "GymEnv"], [51, 2, 1, "", "GymWrapper"]], "torchrl.envs.model_based.dreamer": [[52, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[53, 0, 1, "", "BinarizeReward"], [54, 0, 1, "", "CatFrames"], [55, 0, 1, "", "CatTensors"], [56, 0, 1, "", "CenterCrop"], [57, 0, 1, "", "Compose"], [58, 0, 1, "", "DoubleToFloat"], [59, 0, 1, "", "FiniteTensorDictCheck"], [60, 0, 1, "", "FlattenObservation"], [61, 0, 1, "", "GrayScale"], [62, 0, 1, "", "NoopResetEnv"], [63, 0, 1, "", "ObservationNorm"], [64, 0, 1, "", "ObservationTransform"], [65, 0, 1, "", "PinMemoryTransform"], [66, 0, 1, "", "R3MTransform"], [67, 0, 1, "", "Resize"], [68, 0, 1, "", "RewardClipping"], [69, 0, 1, "", "RewardScaling"], [70, 0, 1, "", "TensorDictPrimer"], [71, 0, 1, "", "ToTensorImage"], [72, 0, 1, "", "Transform"], [73, 0, 1, "", "TransformedEnv"], [74, 0, 1, "", "UnsqueezeTransform"], [75, 0, 1, "", "VIPTransform"], [76, 0, 1, "", "VecNorm"], [77, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[53, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[54, 1, 1, "", "reset"], [54, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[55, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[56, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[57, 1, 1, "", "forward"], [57, 1, 1, "", "reset"], [57, 1, 1, "", "to"], [57, 1, 1, "", "transform_input_spec"], [57, 1, 1, "", "transform_observation_spec"], [57, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[58, 1, 1, "", "transform_input_spec"], [58, 1, 1, "", "transform_observation_spec"], [58, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.FlattenObservation": [[60, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[61, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[62, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[63, 1, 1, "", "init_stats"], [63, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[66, 1, 1, "", "forward"], [66, 1, 1, "", "reset"], [66, 1, 1, "", "to"], [66, 1, 1, "", "transform_input_spec"], [66, 1, 1, "", "transform_observation_spec"], [66, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Resize": [[67, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[68, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[69, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[70, 1, 1, "", "reset"], [70, 1, 1, "", "to"], [70, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[71, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[72, 1, 1, "", "forward"], [72, 1, 1, "", "reset"], [72, 1, 1, "", "transform_input_spec"], [72, 1, 1, "", "transform_observation_spec"], [72, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[73, 3, 1, "", "action_spec"], [73, 3, 1, "", "batch_locked"], [73, 1, 1, "", "eval"], [73, 3, 1, "", "input_spec"], [73, 1, 1, "", "load_state_dict"], [73, 3, 1, "", "observation_spec"], [73, 3, 1, "", "reward_spec"], [73, 1, 1, "", "set_seed"], [73, 1, 1, "", "state_dict"], [73, 1, 1, "", "to"], [73, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[74, 1, 1, "", "forward"], [74, 1, 1, "", "transform_input_spec"], [74, 1, 1, "", "transform_observation_spec"], [74, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPTransform": [[75, 1, 1, "", "forward"], [75, 1, 1, "", "reset"], [75, 1, 1, "", "to"], [75, 1, 1, "", "transform_input_spec"], [75, 1, 1, "", "transform_observation_spec"], [75, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VecNorm": [[76, 1, 1, "", "build_td_for_shared_vecnorm"], [76, 1, 1, "", "get_extra_state"], [76, 1, 1, "", "set_extra_state"], [76, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[77, 1, 1, "", "reset"]], "torchrl.envs.utils": [[78, 2, 1, "", "exploration_mode"], [79, 2, 1, "", "get_available_libraries"], [80, 2, 1, "", "set_exploration_mode"], [81, 2, 1, "", "step_mdp"]], "torchrl.modules": [[82, 0, 1, "", "Actor"], [83, 0, 1, "", "ActorCriticOperator"], [84, 0, 1, "", "ActorCriticWrapper"], [85, 0, 1, "", "ActorValueOperator"], [86, 0, 1, "", "CEMPlanner"], [87, 0, 1, "", "ConvNet"], [88, 0, 1, "", "DdpgCnnActor"], [89, 0, 1, "", "DdpgCnnQNet"], [90, 0, 1, "", "DdpgMlpActor"], [91, 0, 1, "", "DdpgMlpQNet"], [92, 0, 1, "", "Delta"], [93, 0, 1, "", "DistributionalDQNnet"], [94, 0, 1, "", "DistributionalQValueActor"], [95, 0, 1, "", "DreamerActor"], [96, 0, 1, "", "DuelingCnnDQNet"], [97, 0, 1, "", "LSTMNet"], [98, 0, 1, "", "MLP"], [99, 0, 1, "", "MPCPlannerBase"], [100, 0, 1, "", "NoisyLazyLinear"], [101, 0, 1, "", "NoisyLinear"], [102, 0, 1, "", "ObsDecoder"], [103, 0, 1, "", "ObsEncoder"], [104, 0, 1, "", "OneHotCategorical"], [105, 0, 1, "", "ProbabilisticActor"], [106, 0, 1, "", "ProbabilisticTensorDictModule"], [107, 0, 1, "", "QValueActor"], [108, 0, 1, "", "RSSMPosterior"], [109, 0, 1, "", "RSSMPrior"], [110, 0, 1, "", "Squeeze2dLayer"], [111, 0, 1, "", "SqueezeLayer"], [112, 0, 1, "", "TanhDelta"], [113, 0, 1, "", "TanhNormal"], [114, 0, 1, "", "TensorDictModule"], [115, 0, 1, "", "TensorDictModuleWrapper"], [116, 0, 1, "", "TensorDictSequential"], [117, 0, 1, "", "TruncatedNormal"], [118, 0, 1, "", "ValueOperator"], [119, 0, 1, "", "reset_noise"]], "torchrl.modules.ActorCriticOperator": [[83, 1, 1, "", "get_critic_operator"], [83, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorCriticWrapper": [[84, 1, 1, "", "get_policy_operator"], [84, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorValueOperator": [[85, 1, 1, "", "get_policy_operator"], [85, 1, 1, "", "get_value_operator"]], "torchrl.modules.CEMPlanner": [[86, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[87, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[88, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[89, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[90, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[91, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[92, 1, 1, "", "log_prob"], [92, 3, 1, "", "mean"], [92, 3, 1, "", "mode"], [92, 1, 1, "", "rsample"], [92, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[93, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[95, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[96, 1, 1, "", "forward"]], "torchrl.modules.LSTMNet": [[97, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[98, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[99, 1, 1, "", "forward"], [99, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[100, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[102, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[103, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[104, 1, 1, "", "log_prob"], [104, 3, 1, "", "mode"], [104, 1, 1, "", "rsample"], [104, 1, 1, "", "sample"]], "torchrl.modules.ProbabilisticTensorDictModule": [[106, 1, 1, "", "forward"], [106, 1, 1, "", "make_functional_with_buffers"]], "torchrl.modules.RSSMPosterior": [[108, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[109, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[111, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[112, 3, 1, "", "mean"], [112, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[113, 3, 1, "", "mode"]], "torchrl.modules.TensorDictModule": [[114, 1, 1, "", "forward"], [114, 1, 1, "", "make_functional_with_buffers"], [114, 1, 1, "", "random"], [114, 1, 1, "", "random_sample"], [114, 1, 1, "", "to"]], "torchrl.modules.TensorDictModuleWrapper": [[115, 1, 1, "", "forward"]], "torchrl.modules.TensorDictSequential": [[116, 1, 1, "", "forward"], [116, 1, 1, "", "make_functional_with_buffers"], [116, 1, 1, "", "select_subsequence"]], "torchrl.modules.TruncatedNormal": [[117, 1, 1, "", "log_prob"], [117, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module.actors": [[120, 0, 1, "", "DistributionalQValueHook"], [121, 0, 1, "", "QValueHook"]], "torchrl.objectives": [[122, 0, 1, "", "ClipPPOLoss"], [123, 0, 1, "", "DDPGLoss"], [124, 0, 1, "", "DQNLoss"], [125, 0, 1, "", "DistributionalDQNLoss"], [126, 0, 1, "", "HardUpdate"], [127, 0, 1, "", "KLPENPPOLoss"], [128, 0, 1, "", "PPOLoss"], [129, 0, 1, "", "REDQLoss"], [130, 0, 1, "", "SACLoss"], [131, 0, 1, "", "SoftUpdate"], [132, 0, 1, "", "distance_loss"], [133, 0, 1, "", "hold_out_net"], [134, 0, 1, "", "hold_out_params"], [135, 0, 1, "", "next_state_value"]], "torchrl.objectives.ClipPPOLoss": [[122, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[123, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[124, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[125, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[127, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[128, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[129, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[130, 1, 1, "", "forward"]], "torchrl.objectives.value": [[136, 0, 1, "", "GAE"], [137, 0, 1, "", "TDEstimate"], [138, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[136, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[137, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[138, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[139, 0, 1, "", "generalized_advantage_estimate"], [140, 0, 1, "", "td_advantage_estimate"], [141, 0, 1, "", "td_lambda_advantage_estimate"], [142, 0, 1, "", "td_lambda_return_estimate"], [143, 0, 1, "", "vec_generalized_advantage_estimate"], [144, 0, 1, "", "vec_td_lambda_advantage_estimate"], [145, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.trainers": [[146, 0, 1, "", "BatchSubSampler"], [147, 0, 1, "", "ClearCudaCache"], [148, 0, 1, "", "CountFramesLog"], [149, 0, 1, "", "LogReward"], [150, 0, 1, "", "Recorder"], [151, 0, 1, "", "ReplayBuffer"], [152, 0, 1, "", "RewardNormalizer"], [153, 0, 1, "", "SelectKeys"], [154, 0, 1, "", "Trainer"], [155, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.ReplayBuffer": [[151, 1, 1, "", "add"], [151, 1, 1, "", "extend"], [151, 1, 1, "", "sample"]], "torchrl.trainers.helpers": [[156, 2, 1, "", "correct_for_frame_skip"], [157, 2, 1, "", "get_stats_random_rollout"], [158, 2, 1, "", "make_collector_offpolicy"], [159, 2, 1, "", "make_collector_onpolicy"], [160, 2, 1, "", "make_ddpg_actor"], [161, 2, 1, "", "make_ddpg_loss"], [162, 2, 1, "", "make_dqn_actor"], [163, 2, 1, "", "make_dqn_loss"], [164, 2, 1, "", "make_ppo_loss"], [165, 2, 1, "", "make_ppo_model"], [166, 2, 1, "", "make_redq_loss"], [167, 2, 1, "", "make_redq_model"], [168, 2, 1, "", "make_replay_buffer"], [169, 2, 1, "", "make_sac_loss"], [170, 2, 1, "", "make_sac_model"], [171, 2, 1, "", "make_target_updater"], [172, 2, 1, "", "make_trainer"], [173, 2, 1, "", "parallel_env_constructor"], [174, 2, 1, "", "sync_async_collector"], [175, 2, 1, "", "sync_sync_collector"], [176, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"exampl": 0, "galleri": 0, "welcom": 1, "torchrl": [1, 2, 3, 4, 6, 179, 180, 181, 182], "document": [1, 9], "content": [1, 178], "indic": 1, "tabl": 1, "collector": 2, "packag": [2, 3, 4, 179, 180, 181, 182], "data": [2, 3], "helper": [2, 4], "function": 2, "replai": 3, "buffer": 3, "compos": [3, 57], "prototyp": 3, "tensorspec": [3, 29], "util": [3, 179, 180, 181], "env": 4, "vector": 4, "transform": [4, 72], "domain": 4, "specif": 4, "librari": 4, "work": [5, 6], "gym": 5, "version": [5, 7], "habitat": 6, "lab": 6, "set": 6, "up": 6, "your": 6, "environ": [6, 7], "instal": [6, 7], "from": [6, 7], "pip": [6, 7], "us": [6, 9], "common": [6, 7], "issu": [6, 7], "about": 7, "mujoco": 7, "prerequisit": 7, "render": 7, "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "clone": 7, "repo": [7, 9], "when": 7, "pro": 8, "tip": 8, "train": 8, "cluster": 8, "resourc": 9, "pytorch": 9, "functorch": 9, "rl": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "implement_for": 10, "multisyncdatacollector": 11, "multiasyncdatacollector": 12, "syncdatacollector": 13, "asyncdatacollector": 14, "split_trajectori": 15, "binarydiscretetensorspec": 16, "boundedtensorspec": 17, "compositespec": 18, "discretetensorspec": 19, "multonehotdiscretetensorspec": 20, "multistep": 21, "ndboundedtensorspec": 22, "ndunboundedcontinuoustensorspec": 23, "onehotdiscretetensorspec": 24, "prioritizedreplaybuff": 25, "replaybuff": [26, 32, 151], "tensordictprioritizedreplaybuff": 27, "tensordictreplaybuff": [28, 33], "unboundedcontinuoustensorspec": 30, "remotetensordictreplaybuff": 31, "prioritizedsampl": 34, "randomsampl": 35, "sampler": 36, "lazymemmapstorag": 37, "lazytensorstorag": 38, "liststorag": 39, "storag": 40, "roundrobinwrit": 41, "writer": 42, "envbas": 43, "gymlikeenv": 44, "modelbasedenvbas": 45, "parallelenv": 46, "serialenv": 47, "dmcontrolenv": 48, "dmcontrolwrapp": 49, "gymenv": 50, "gymwrapp": 51, "dreamerenv": 52, "binarizereward": 53, "catfram": 54, "cattensor": 55, "centercrop": 56, "doubletofloat": 58, "finitetensordictcheck": 59, "flattenobserv": 60, "grayscal": 61, "noopresetenv": 62, "observationnorm": 63, "observationtransform": 64, "pinmemorytransform": 65, "r3mtransform": 66, "resiz": 67, "rewardclip": 68, "rewardsc": 69, "tensordictprim": 70, "totensorimag": 71, "transformedenv": 73, "unsqueezetransform": 74, "viptransform": 75, "vecnorm": 76, "gsdenois": 77, "exploration_mod": 78, "get_available_librari": 79, "set_exploration_mod": 80, "step_mdp": 81, "actor": 82, "actorcriticoper": 83, "actorcriticwrapp": 84, "actorvalueoper": 85, "cemplann": 86, "convnet": 87, "ddpgcnnactor": 88, "ddpgcnnqnet": 89, "ddpgmlpactor": 90, "ddpgmlpqnet": 91, "delta": 92, "distributionaldqnnet": 93, "distributionalqvalueactor": 94, "dreameractor": 95, "duelingcnndqnet": 96, "lstmnet": 97, "mlp": 98, "mpcplannerbas": 99, "noisylazylinear": 100, "noisylinear": 101, "obsdecod": 102, "obsencod": 103, "onehotcategor": 104, "probabilisticactor": 105, "probabilistictensordictmodul": 106, "qvalueactor": 107, "rssmposterior": 108, "rssmprior": 109, "squeeze2dlay": 110, "squeezelay": 111, "tanhdelta": 112, "tanhnorm": 113, "tensordictmodul": 114, "tensordictmodulewrapp": 115, "tensordictsequenti": 116, "truncatednorm": 117, "valueoper": 118, "reset_nois": 119, "distributionalqvaluehook": 120, "qvaluehook": 121, "clipppoloss": 122, "ddpgloss": 123, "dqnloss": 124, "distributionaldqnloss": 125, "hardupd": 126, "klpenppoloss": 127, "ppoloss": 128, "redqloss": 129, "sacloss": 130, "softupd": 131, "distance_loss": 132, "hold_out_net": 133, "hold_out_param": 134, "next_state_valu": 135, "gae": 136, "tdestim": 137, "tdlambdaestim": 138, "generalized_advantage_estim": 139, "td_advantage_estim": 140, "td_lambda_advantage_estim": 141, "td_lambda_return_estim": 142, "vec_generalized_advantage_estim": 143, "vec_td_lambda_advantage_estim": 144, "vec_td_lambda_return_estim": 145, "batchsubsampl": 146, "clearcudacach": 147, "countframeslog": 148, "logreward": 149, "record": 150, "rewardnorm": 152, "selectkei": 153, "trainer": [154, 181], "updateweight": 155, "correct_for_frame_skip": 156, "get_stats_random_rollout": 157, "make_collector_offpolici": 158, "make_collector_onpolici": 159, "make_ddpg_actor": 160, "make_ddpg_loss": 161, "make_dqn_actor": 162, "make_dqn_loss": 163, "make_ppo_loss": 164, "make_ppo_model": 165, "make_redq_loss": 166, "make_redq_model": 167, "make_replay_buff": 168, "make_sac_loss": 169, "make_sac_model": 170, "make_target_updat": 171, "make_train": 172, "parallel_env_constructor": 173, "sync_async_collector": 174, "sync_sync_collector": 175, "transformed_env_constructor": 176, "api": 177, "refer": 177, "knowledg": 178, "base": 178, "contribut": 178, "modul": 179, "tensordict": 179, "hook": [179, 181], "model": 179, "explor": 179, "planner": 179, "distribut": 179, "object": 180, "dqn": 180, "ddpg": 180, "sac": 180, "redq": 180, "ppo": 180, "return": 180, "checkpoint": 181, "builder": 181, "_util": 182}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Example gallery": [[0, "example-gallery"]], "Welcome to the TorchRL Documentation!": [[1, "welcome-to-the-torchrl-documentation"]], "Contents:": [[1, null], [178, null]], "Indices and tables": [[1, "indices-and-tables"]], "torchrl.collectors package": [[2, "torchrl-collectors-package"]], "Data collectors": [[2, "data-collectors"]], "Helper functions": [[2, "helper-functions"]], "torchrl.data package": [[3, "torchrl-data-package"]], "Replay Buffers": [[3, "replay-buffers"]], "Composable Replay Buffers (Prototype)": [[3, "composable-replay-buffers-prototype"]], "TensorSpec": [[3, "tensorspec"], [29, "tensorspec"]], "Utils": [[3, "utils"], [179, "utils"], [180, "utils"], [181, "utils"]], "torchrl.envs package": [[4, "torchrl-envs-package"]], "Vectorized envs": [[4, "vectorized-envs"]], "Transforms": [[4, "transforms"]], "Helpers": [[4, "helpers"]], "Domain-specific": [[4, "domain-specific"]], "Libraries": [[4, "libraries"]], "Working with gym": [[5, "working-with-gym"]], "Versioning": [[5, "versioning"]], "Working with habitat-lab": [[6, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[6, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[6, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[6, "installing-torchrl"]], "Using Habitat": [[6, "using-habitat"]], "Common issues": [[6, "common-issues"]], "About MuJoCo": [[7, "about-mujoco"]], "Installing MuJoCo": [[7, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[7, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[7, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[7, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[7, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[7, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[7, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips": [[8, "pro-tips"]], "Training on a cluster": [[8, "training-on-a-cluster"]], "Useful resources": [[9, "useful-resources"]], "Pytorch documentation": [[9, "pytorch-documentation"]], "functorch documentation": [[9, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[9, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[9, "educational-resource"]], "Forums": [[9, "forums"]], "Repos": [[9, "repos"]], "implement_for": [[10, "implement-for"]], "MultiSyncDataCollector": [[11, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[12, "multiasyncdatacollector"]], "SyncDataCollector": [[13, "syncdatacollector"]], "aSyncDataCollector": [[14, "asyncdatacollector"]], "split_trajectories": [[15, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[16, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[17, "boundedtensorspec"]], "CompositeSpec": [[18, "compositespec"]], "DiscreteTensorSpec": [[19, "discretetensorspec"]], "MultOneHotDiscreteTensorSpec": [[20, "multonehotdiscretetensorspec"]], "MultiStep": [[21, "multistep"]], "NdBoundedTensorSpec": [[22, "ndboundedtensorspec"]], "NdUnboundedContinuousTensorSpec": [[23, "ndunboundedcontinuoustensorspec"]], "OneHotDiscreteTensorSpec": [[24, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[25, "prioritizedreplaybuffer"]], "ReplayBuffer": [[26, "replaybuffer"], [32, "replaybuffer"], [151, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[27, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[28, "tensordictreplaybuffer"], [33, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[30, "unboundedcontinuoustensorspec"]], "RemoteTensorDictReplayBuffer": [[31, "remotetensordictreplaybuffer"]], "PrioritizedSampler": [[34, "prioritizedsampler"]], "RandomSampler": [[35, "randomsampler"]], "Sampler": [[36, "sampler"]], "LazyMemmapStorage": [[37, "lazymemmapstorage"]], "LazyTensorStorage": [[38, "lazytensorstorage"]], "ListStorage": [[39, "liststorage"]], "Storage": [[40, "storage"]], "RoundRobinWriter": [[41, "roundrobinwriter"]], "Writer": [[42, "writer"]], "EnvBase": [[43, "envbase"]], "GymLikeEnv": [[44, "gymlikeenv"]], "ModelBasedEnvBase": [[45, "modelbasedenvbase"]], "ParallelEnv": [[46, "parallelenv"]], "SerialEnv": [[47, "serialenv"]], "DMControlEnv": [[48, "dmcontrolenv"]], "DMControlWrapper": [[49, "dmcontrolwrapper"]], "GymEnv": [[50, "gymenv"]], "GymWrapper": [[51, "gymwrapper"]], "DreamerEnv": [[52, "dreamerenv"]], "BinarizeReward": [[53, "binarizereward"]], "CatFrames": [[54, "catframes"]], "CatTensors": [[55, "cattensors"]], "CenterCrop": [[56, "centercrop"]], "Compose": [[57, "compose"]], "DoubleToFloat": [[58, "doubletofloat"]], "FiniteTensorDictCheck": [[59, "finitetensordictcheck"]], "FlattenObservation": [[60, "flattenobservation"]], "GrayScale": [[61, "grayscale"]], "NoopResetEnv": [[62, "noopresetenv"]], "ObservationNorm": [[63, "observationnorm"]], "ObservationTransform": [[64, "observationtransform"]], "PinMemoryTransform": [[65, "pinmemorytransform"]], "R3MTransform": [[66, "r3mtransform"]], "Resize": [[67, "resize"]], "RewardClipping": [[68, "rewardclipping"]], "RewardScaling": [[69, "rewardscaling"]], "TensorDictPrimer": [[70, "tensordictprimer"]], "ToTensorImage": [[71, "totensorimage"]], "Transform": [[72, "transform"]], "TransformedEnv": [[73, "transformedenv"]], "UnsqueezeTransform": [[74, "unsqueezetransform"]], "VIPTransform": [[75, "viptransform"]], "VecNorm": [[76, "vecnorm"]], "gSDENoise": [[77, "gsdenoise"]], "exploration_mode": [[78, "exploration-mode"]], "get_available_libraries": [[79, "get-available-libraries"]], "set_exploration_mode": [[80, "set-exploration-mode"]], "step_mdp": [[81, "step-mdp"]], "Actor": [[82, "actor"]], "ActorCriticOperator": [[83, "actorcriticoperator"]], "ActorCriticWrapper": [[84, "actorcriticwrapper"]], "ActorValueOperator": [[85, "actorvalueoperator"]], "CEMPlanner": [[86, "cemplanner"]], "ConvNet": [[87, "convnet"]], "DdpgCnnActor": [[88, "ddpgcnnactor"]], "DdpgCnnQNet": [[89, "ddpgcnnqnet"]], "DdpgMlpActor": [[90, "ddpgmlpactor"]], "DdpgMlpQNet": [[91, "ddpgmlpqnet"]], "Delta": [[92, "delta"]], "DistributionalDQNnet": [[93, "distributionaldqnnet"]], "DistributionalQValueActor": [[94, "distributionalqvalueactor"]], "DreamerActor": [[95, "dreameractor"]], "DuelingCnnDQNet": [[96, "duelingcnndqnet"]], "LSTMNet": [[97, "lstmnet"]], "MLP": [[98, "mlp"]], "MPCPlannerBase": [[99, "mpcplannerbase"]], "NoisyLazyLinear": [[100, "noisylazylinear"]], "NoisyLinear": [[101, "noisylinear"]], "ObsDecoder": [[102, "obsdecoder"]], "ObsEncoder": [[103, "obsencoder"]], "OneHotCategorical": [[104, "onehotcategorical"]], "ProbabilisticActor": [[105, "probabilisticactor"]], "ProbabilisticTensorDictModule": [[106, "probabilistictensordictmodule"]], "QValueActor": [[107, "qvalueactor"]], "RSSMPosterior": [[108, "rssmposterior"]], "RSSMPrior": [[109, "rssmprior"]], "Squeeze2dLayer": [[110, "squeeze2dlayer"]], "SqueezeLayer": [[111, "squeezelayer"]], "TanhDelta": [[112, "tanhdelta"]], "TanhNormal": [[113, "tanhnormal"]], "TensorDictModule": [[114, "tensordictmodule"]], "TensorDictModuleWrapper": [[115, "tensordictmodulewrapper"]], "TensorDictSequential": [[116, "tensordictsequential"]], "TruncatedNormal": [[117, "truncatednormal"]], "ValueOperator": [[118, "valueoperator"]], "reset_noise": [[119, "reset-noise"]], "DistributionalQValueHook": [[120, "distributionalqvaluehook"]], "QValueHook": [[121, "qvaluehook"]], "ClipPPOLoss": [[122, "clipppoloss"]], "DDPGLoss": [[123, "ddpgloss"]], "DQNLoss": [[124, "dqnloss"]], "DistributionalDQNLoss": [[125, "distributionaldqnloss"]], "HardUpdate": [[126, "hardupdate"]], "KLPENPPOLoss": [[127, "klpenppoloss"]], "PPOLoss": [[128, "ppoloss"]], "REDQLoss": [[129, "redqloss"]], "SACLoss": [[130, "sacloss"]], "SoftUpdate": [[131, "softupdate"]], "distance_loss": [[132, "distance-loss"]], "hold_out_net": [[133, "hold-out-net"]], "hold_out_params": [[134, "hold-out-params"]], "next_state_value": [[135, "next-state-value"]], "GAE": [[136, "gae"]], "TDEstimate": [[137, "tdestimate"]], "TDLambdaEstimate": [[138, "tdlambdaestimate"]], "generalized_advantage_estimate": [[139, "generalized-advantage-estimate"]], "td_advantage_estimate": [[140, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[141, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[142, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[143, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[144, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[145, "vec-td-lambda-return-estimate"]], "BatchSubSampler": [[146, "batchsubsampler"]], "ClearCudaCache": [[147, "clearcudacache"]], "CountFramesLog": [[148, "countframeslog"]], "LogReward": [[149, "logreward"]], "Recorder": [[150, "recorder"]], "RewardNormalizer": [[152, "rewardnormalizer"]], "SelectKeys": [[153, "selectkeys"]], "Trainer": [[154, "trainer"]], "UpdateWeights": [[155, "updateweights"]], "correct_for_frame_skip": [[156, "correct-for-frame-skip"]], "get_stats_random_rollout": [[157, "get-stats-random-rollout"]], "make_collector_offpolicy": [[158, "make-collector-offpolicy"]], "make_collector_onpolicy": [[159, "make-collector-onpolicy"]], "make_ddpg_actor": [[160, "make-ddpg-actor"]], "make_ddpg_loss": [[161, "make-ddpg-loss"]], "make_dqn_actor": [[162, "make-dqn-actor"]], "make_dqn_loss": [[163, "make-dqn-loss"]], "make_ppo_loss": [[164, "make-ppo-loss"]], "make_ppo_model": [[165, "make-ppo-model"]], "make_redq_loss": [[166, "make-redq-loss"]], "make_redq_model": [[167, "make-redq-model"]], "make_replay_buffer": [[168, "make-replay-buffer"]], "make_sac_loss": [[169, "make-sac-loss"]], "make_sac_model": [[170, "make-sac-model"]], "make_target_updater": [[171, "make-target-updater"]], "make_trainer": [[172, "make-trainer"]], "parallel_env_constructor": [[173, "parallel-env-constructor"]], "sync_async_collector": [[174, "sync-async-collector"]], "sync_sync_collector": [[175, "sync-sync-collector"]], "transformed_env_constructor": [[176, "transformed-env-constructor"]], "API Reference": [[177, "api-reference"]], "Knowledge Base": [[178, "knowledge-base"]], "Contributing": [[178, "contributing"]], "torchrl.modules package": [[179, "torchrl-modules-package"]], "TensorDict modules": [[179, "tensordict-modules"]], "Hooks": [[179, "hooks"]], "Models": [[179, "models"]], "Exploration": [[179, "exploration"]], "Planners": [[179, "planners"]], "Distributions": [[179, "distributions"]], "torchrl.objectives package": [[180, "torchrl-objectives-package"]], "DQN": [[180, "dqn"]], "DDPG": [[180, "ddpg"]], "SAC": [[180, "sac"]], "REDQ": [[180, "redq"]], "PPO": [[180, "ppo"]], "Returns": [[180, "returns"]], "torchrl.trainers package": [[181, "torchrl-trainers-package"]], "Checkpointing": [[181, "checkpointing"]], "Trainer and hooks": [[181, "trainer-and-hooks"]], "Builders": [[181, "builders"]], "torchrl._utils package": [[182, "torchrl-utils-package"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[10, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors)": [[11, "torchrl.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors)": [[12, "torchrl.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "syncdatacollector (class in torchrl.collectors)": [[13, "torchrl.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors)": [[14, "torchrl.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[15, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[16, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[17, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.encode"]], "index() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[18, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.encode"]], "index() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[19, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.encode"]], "index() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.zero"]], "multonehotdiscretetensorspec (class in torchrl.data)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[21, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.zero_grad"]], "ndboundedtensorspec (class in torchrl.data)": [[22, "torchrl.data.NdBoundedTensorSpec"]], "assert_is_in() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.encode"]], "index() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.index"]], "is_in() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.is_in"]], "project() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.project"]], "rand() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.type_check"]], "zero() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.zero"]], "ndunboundedcontinuoustensorspec (class in torchrl.data)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.zero"]], "onehotdiscretetensorspec (class in torchrl.data)": [[24, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[25, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.add"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.update_priority"]], "replaybuffer (class in torchrl.data)": [[26, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.add"]], "extend() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.extend"]], "sample() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.update_priority"]], "tensordictreplaybuffer (class in torchrl.data)": [[28, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[29, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.encode"]], "index() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[30, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "remotetensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.add"]], "extend() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.extend"]], "sample() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.sample"]], "replaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.add"]], "extend() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.extend"]], "sample() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.sample"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[34, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[35, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[36, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[37, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[38, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[39, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[39, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[40, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[40, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[41, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[41, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[41, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[42, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[42, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[42, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[43, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[43, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[43, "id0"], [43, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[43, "id1"], [43, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[43, "id2"], [43, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[43, "id3"], [43, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[43, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[43, "id4"], [43, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.zero_grad"]], "gymlikeenv (class in torchrl.envs)": [[44, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[44, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[44, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[45, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[45, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[45, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[45, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[45, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[45, "torchrl.envs.step"]], "parallelenv (class in torchrl.envs)": [[46, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[46, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[46, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[47, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[47, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[47, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.zero_grad"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[48, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[49, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[50, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[51, "torchrl.envs.libs.gym.GymWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[52, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[53, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[53, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[54, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[54, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[54, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[55, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[55, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[56, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[56, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[57, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[57, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[57, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[57, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[57, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[57, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[57, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[58, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[58, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[58, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[58, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[59, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[60, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[60, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "grayscale (class in torchrl.envs.transforms)": [[61, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[61, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[62, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[63, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[63, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.R3MTransform"]], "forward() (torchrl.envs.transforms.r3mtransform method)": [[66, "torchrl.envs.transforms.R3MTransform.forward"]], "reset() (torchrl.envs.transforms.r3mtransform method)": [[66, "torchrl.envs.transforms.R3MTransform.reset"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[66, "torchrl.envs.transforms.R3MTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.r3mtransform method)": [[66, "torchrl.envs.transforms.R3MTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.r3mtransform method)": [[66, "torchrl.envs.transforms.R3MTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.r3mtransform method)": [[66, "torchrl.envs.transforms.R3MTransform.transform_reward_spec"]], "resize (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[67, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[68, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[69, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[70, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[70, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[70, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[71, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[72, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[72, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[72, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[72, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[72, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[73, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[73, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[73, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[73, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[73, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[73, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[73, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[73, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[73, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[73, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[73, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[74, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[74, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[74, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[74, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viptransform (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.VIPTransform"]], "forward() (torchrl.envs.transforms.viptransform method)": [[75, "torchrl.envs.transforms.VIPTransform.forward"]], "reset() (torchrl.envs.transforms.viptransform method)": [[75, "torchrl.envs.transforms.VIPTransform.reset"]], "to() (torchrl.envs.transforms.viptransform method)": [[75, "torchrl.envs.transforms.VIPTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.viptransform method)": [[75, "torchrl.envs.transforms.VIPTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.viptransform method)": [[75, "torchrl.envs.transforms.VIPTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.viptransform method)": [[75, "torchrl.envs.transforms.VIPTransform.transform_reward_spec"]], "vecnorm (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[76, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[76, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[76, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[76, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[77, "torchrl.envs.transforms.gSDENoise.reset"]], "exploration_mode() (in module torchrl.envs.utils)": [[78, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[79, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[80, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[81, "torchrl.envs.utils.step_mdp"]], "actor (class in torchrl.modules)": [[82, "torchrl.modules.Actor"]], "actorcriticoperator (class in torchrl.modules)": [[83, "torchrl.modules.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.actorcriticoperator method)": [[83, "torchrl.modules.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.actorcriticoperator method)": [[83, "torchrl.modules.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules)": [[84, "torchrl.modules.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.actorcriticwrapper method)": [[84, "torchrl.modules.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorcriticwrapper method)": [[84, "torchrl.modules.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules)": [[85, "torchrl.modules.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.actorvalueoperator method)": [[85, "torchrl.modules.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorvalueoperator method)": [[85, "torchrl.modules.ActorValueOperator.get_value_operator"]], "cemplanner (class in torchrl.modules)": [[86, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[86, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[87, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[87, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[88, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[88, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[89, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[89, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[90, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[90, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[91, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[91, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[92, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[92, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[92, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[92, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[92, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[92, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[93, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[93, "torchrl.modules.DistributionalDQNnet.forward"]], "distributionalqvalueactor (class in torchrl.modules)": [[94, "torchrl.modules.DistributionalQValueActor"]], "dreameractor (class in torchrl.modules)": [[95, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[95, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[96, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[96, "torchrl.modules.DuelingCnnDQNet.forward"]], "lstmnet (class in torchrl.modules)": [[97, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[97, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[98, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[98, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[99, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[99, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[99, "torchrl.modules.MPCPlannerBase.planning"]], "noisylazylinear (class in torchrl.modules)": [[100, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[100, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[101, "torchrl.modules.NoisyLinear"]], "obsdecoder (class in torchrl.modules)": [[102, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[102, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[103, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[103, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[104, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[104, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[104, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[104, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[104, "torchrl.modules.OneHotCategorical.sample"]], "probabilisticactor (class in torchrl.modules)": [[105, "torchrl.modules.ProbabilisticActor"]], "probabilistictensordictmodule (class in torchrl.modules)": [[106, "torchrl.modules.ProbabilisticTensorDictModule"]], "forward() (torchrl.modules.probabilistictensordictmodule method)": [[106, "torchrl.modules.ProbabilisticTensorDictModule.forward"]], "make_functional_with_buffers() (torchrl.modules.probabilistictensordictmodule method)": [[106, "torchrl.modules.ProbabilisticTensorDictModule.make_functional_with_buffers"]], "qvalueactor (class in torchrl.modules)": [[107, "torchrl.modules.QValueActor"]], "rssmposterior (class in torchrl.modules)": [[108, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[108, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[109, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[109, "torchrl.modules.RSSMPrior.forward"]], "squeeze2dlayer (class in torchrl.modules)": [[110, "torchrl.modules.Squeeze2dLayer"]], "squeezelayer (class in torchrl.modules)": [[111, "torchrl.modules.SqueezeLayer"]], "forward() (torchrl.modules.squeezelayer method)": [[111, "torchrl.modules.SqueezeLayer.forward"]], "tanhdelta (class in torchrl.modules)": [[112, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[112, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[112, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[113, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[113, "torchrl.modules.TanhNormal.mode"]], "tensordictmodule (class in torchrl.modules)": [[114, "torchrl.modules.TensorDictModule"]], "forward() (torchrl.modules.tensordictmodule method)": [[114, "torchrl.modules.TensorDictModule.forward"]], "make_functional_with_buffers() (torchrl.modules.tensordictmodule method)": [[114, "torchrl.modules.TensorDictModule.make_functional_with_buffers"]], "random() (torchrl.modules.tensordictmodule method)": [[114, "torchrl.modules.TensorDictModule.random"]], "random_sample() (torchrl.modules.tensordictmodule method)": [[114, "torchrl.modules.TensorDictModule.random_sample"]], "to() (torchrl.modules.tensordictmodule method)": [[114, "torchrl.modules.TensorDictModule.to"]], "tensordictmodulewrapper (class in torchrl.modules)": [[115, "torchrl.modules.TensorDictModuleWrapper"]], "forward() (torchrl.modules.tensordictmodulewrapper method)": [[115, "torchrl.modules.TensorDictModuleWrapper.forward"]], "tensordictsequential (class in torchrl.modules)": [[116, "torchrl.modules.TensorDictSequential"]], "forward() (torchrl.modules.tensordictsequential method)": [[116, "torchrl.modules.TensorDictSequential.forward"]], "make_functional_with_buffers() (torchrl.modules.tensordictsequential method)": [[116, "torchrl.modules.TensorDictSequential.make_functional_with_buffers"]], "select_subsequence() (torchrl.modules.tensordictsequential method)": [[116, "torchrl.modules.TensorDictSequential.select_subsequence"]], "truncatednormal (class in torchrl.modules)": [[117, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[117, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[117, "torchrl.modules.TruncatedNormal.mode"]], "valueoperator (class in torchrl.modules)": [[118, "torchrl.modules.ValueOperator"]], "reset_noise (class in torchrl.modules)": [[119, "torchrl.modules.reset_noise"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[120, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[121, "torchrl.modules.tensordict_module.actors.QValueHook"]], "clipppoloss (class in torchrl.objectives)": [[122, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[122, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[123, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[123, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[124, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[124, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[125, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[125, "torchrl.objectives.DistributionalDQNLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[126, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[127, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[127, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[128, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[128, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[129, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[129, "torchrl.objectives.REDQLoss.forward"]], "sacloss (class in torchrl.objectives)": [[130, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[130, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[131, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[132, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[133, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[134, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[135, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[136, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[136, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[137, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[137, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[138, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[138, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[139, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[140, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[141, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[142, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[143, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[144, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[145, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "batchsubsampler (class in torchrl.trainers)": [[146, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[147, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[148, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[149, "torchrl.trainers.LogReward"]], "recorder (class in torchrl.trainers)": [[150, "torchrl.trainers.Recorder"]], "replaybuffer (class in torchrl.trainers)": [[151, "torchrl.trainers.ReplayBuffer"]], "add() (torchrl.trainers.replaybuffer method)": [[151, "torchrl.trainers.ReplayBuffer.add"]], "extend() (torchrl.trainers.replaybuffer method)": [[151, "torchrl.trainers.ReplayBuffer.extend"]], "sample() (torchrl.trainers.replaybuffer method)": [[151, "torchrl.trainers.ReplayBuffer.sample"]], "rewardnormalizer (class in torchrl.trainers)": [[152, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[153, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[154, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[155, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[156, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[157, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[158, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[159, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[160, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[161, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[162, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[163, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[164, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[165, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[166, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[167, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[168, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[169, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[170, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[171, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[172, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[173, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[174, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[175, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[176, "torchrl.trainers.helpers.transformed_env_constructor"]]}})