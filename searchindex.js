Search.setIndex({"docnames": ["auto_examples/index", "index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.NdBoundedTensorSpec", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.Actor", "reference/generated/torchrl.modules.ActorCriticOperator", "reference/generated/torchrl.modules.ActorCriticWrapper", "reference/generated/torchrl.modules.ActorValueOperator", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueActor", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.ProbabilisticActor", "reference/generated/torchrl.modules.ProbabilisticTensorDictModule", "reference/generated/torchrl.modules.QValueActor", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TensorDictModule", "reference/generated/torchrl.modules.TensorDictModuleWrapper", "reference/generated/torchrl.modules.TensorDictSequential", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.ValueOperator", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBuffer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils"], "filenames": ["auto_examples/index.rst", "index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.NdBoundedTensorSpec.rst", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.Actor.rst", "reference/generated/torchrl.modules.ActorCriticOperator.rst", "reference/generated/torchrl.modules.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.ActorValueOperator.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.ProbabilisticActor.rst", "reference/generated/torchrl.modules.ProbabilisticTensorDictModule.rst", "reference/generated/torchrl.modules.QValueActor.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TensorDictModule.rst", "reference/generated/torchrl.modules.TensorDictModuleWrapper.rst", "reference/generated/torchrl.modules.TensorDictSequential.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.ValueOperator.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBuffer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst"], "titles": ["Example gallery", "Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultOneHotDiscreteTensorSpec", "MultiStep", "NdBoundedTensorSpec", "NdUnboundedContinuousTensorSpec", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "TensorDictReplayBuffer", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "GymLikeEnv", "ModelBasedEnvBase", "ParallelEnv", "SerialEnv", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DoubleToFloat", "FiniteTensorDictCheck", "FlattenObservation", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "TensorDictPrimer", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPTransform", "VecNorm", "gSDENoise", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DistributionalQValueActor", "DreamerActor", "DuelingCnnDQNet", "LSTMNet", "MLP", "MPCPlannerBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "ProbabilisticActor", "ProbabilisticTensorDictModule", "QValueActor", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TensorDictModule", "TensorDictModuleWrapper", "TensorDictSequential", "TruncatedNormal", "ValueOperator", "reset_noise", "DistributionalQValueHook", "QValueHook", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "Recorder", "ReplayBuffer", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package"], "terms": {"below": [0, 4, 7, 12, 13, 14, 15, 22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 91, 102, 117, 118, 121], "i": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 57, 58, 59, 60, 61, 64, 66, 67, 70, 73, 74, 75, 76, 77, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 104, 105, 109, 110, 113, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 159, 161, 162, 164, 167, 172, 174, 177, 179, 183, 185, 188], "download": [0, 7, 10, 70, 79], "all": [0, 1, 4, 12, 13, 14, 15, 22, 44, 45, 46, 47, 48, 61, 63, 67, 70, 74, 76, 77, 78, 79, 80, 83, 84, 85, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 159, 161, 181, 182, 183, 185, 188], "python": [0, 1, 4, 6, 7, 10, 118, 188], "sourc": [0, 1, 7, 10, 159], "code": [0, 1, 4, 7, 70, 120], "auto_examples_python": 0, "zip": 0, "jupyt": 0, "notebook": [0, 10], "auto_examples_jupyt": 0, "gener": [0, 4, 7, 14, 33, 37, 46, 67, 86, 96, 108, 109, 110, 122, 134, 141, 144, 145, 148, 159], "sphinx": 0, "The": [1, 3, 4, 7, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 41, 44, 45, 47, 48, 61, 67, 70, 73, 74, 77, 79, 86, 87, 90, 92, 93, 94, 95, 101, 103, 105, 109, 110, 112, 113, 118, 120, 122, 127, 128, 129, 132, 135, 140, 151, 179, 181, 182, 188], "tensordict": [1, 4, 12, 13, 14, 15, 16, 19, 20, 22, 28, 29, 32, 34, 38, 39, 44, 45, 46, 47, 48, 58, 59, 61, 62, 63, 66, 67, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 90, 98, 101, 103, 109, 110, 111, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 151, 158, 159, 164, 167, 169, 172, 174, 177, 188], "class": [1, 3, 4, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 181, 182, 183, 188], "ha": [1, 7, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 46, 47, 48, 74, 77, 110, 118, 120, 132], "been": [1, 7, 12, 13, 15, 44, 45, 47, 48, 76, 110, 118, 120], "move": [1, 22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 80, 102, 118, 157], "out": [1, 4, 22, 44, 45, 47, 48, 104, 105, 110, 118, 138, 139, 188], "dedic": [1, 87, 88, 89], "librari": [1, 7, 9, 10, 83, 185, 189], "take": [1, 4, 16, 44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 144, 145, 146, 147, 148, 149, 150, 151, 160, 188], "look": [1, 5, 7, 22, 44, 45, 47, 48, 70, 110, 120], "find": 1, "github": [1, 3, 6, 7, 10], "an": [1, 3, 4, 5, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 60, 63, 66, 67, 70, 71, 75, 76, 77, 80, 87, 88, 89, 91, 92, 93, 94, 95, 101, 102, 104, 107, 110, 114, 115, 126, 127, 130, 132, 133, 134, 135, 141, 142, 143, 155, 156, 159, 162, 167, 180, 181, 182, 183, 185], "open": [1, 5, 7, 11], "reinforc": [1, 3, 4, 9, 58, 92, 93, 94, 95, 124, 126, 130, 131, 135, 136, 167], "learn": [1, 3, 4, 7, 9, 22, 58, 92, 93, 94, 95, 105, 124, 126, 130, 131, 134, 135, 136, 167], "rl": [1, 3, 8, 10, 12, 13, 14, 15, 46, 86, 105, 109, 122, 126, 133, 151, 185, 188], "pytorch": [1, 3, 75, 159, 188], "It": [1, 4, 7, 22, 28, 44, 45, 46, 47, 48, 53, 77, 92, 94, 99, 110, 112, 113, 126, 127, 130, 132, 133, 134, 135, 140, 155, 174, 185], "provid": [1, 3, 4, 9, 14, 22, 26, 27, 28, 33, 44, 45, 46, 47, 48, 59, 66, 67, 70, 74, 77, 79, 80, 86, 91, 101, 102, 103, 109, 124, 140, 151, 156, 162, 164, 172, 174, 177, 179, 185, 188], "first": [1, 4, 7, 11, 12, 13, 14, 15, 45, 59, 64, 67, 70, 75, 77, 102, 104, 107, 110, 118, 158], "low": 1, "high": [1, 9, 141, 144, 145, 148], "level": [1, 19, 132], "abstract": [1, 18, 19, 20, 23, 24, 30, 31, 43, 44, 68, 103, 188], "ar": [1, 3, 4, 7, 8, 9, 10, 12, 13, 14, 15, 22, 25, 32, 33, 34, 38, 39, 40, 41, 44, 45, 46, 47, 48, 61, 62, 63, 70, 74, 76, 77, 79, 80, 85, 90, 95, 96, 101, 105, 108, 110, 113, 118, 119, 120, 126, 127, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 179, 183, 188, 189], "intend": [1, 7, 12, 13, 14, 15], "effici": [1, 3, 105], "modular": [1, 120], "properli": 1, "test": [1, 4, 5, 101, 155, 179], "aim": [1, 4, 7, 70, 79, 102, 161, 185], "support": [1, 4, 19, 41, 76, 83, 98, 110, 118, 120, 124, 130, 188], "research": [1, 7, 9], "most": [1, 4, 7, 22], "written": [1, 28, 38, 44, 45, 47, 48, 110, 118, 126, 127, 132, 133, 140, 188], "highli": [1, 3], "wai": [1, 133], "can": [1, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 19, 20, 22, 28, 30, 32, 44, 45, 47, 48, 58, 61, 66, 67, 70, 74, 76, 77, 79, 80, 90, 103, 105, 110, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 132, 133, 134, 135, 140, 155, 164, 172, 174, 177, 181, 182, 183, 185, 188], "easili": [1, 4, 7, 47, 48, 164, 172, 174, 177], "swap": [1, 4], "compon": [1, 4, 38, 39, 40, 41, 124, 125, 126, 127, 130, 132, 133, 134, 135, 159], "transform": [1, 22, 32, 33, 34, 45, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 92, 99, 110, 118, 120, 124, 125, 164, 167, 169, 172, 174, 177, 183], "them": [1, 7, 32, 33, 34, 44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 132], "write": [1, 22, 45, 69, 110, 118, 120, 128, 129, 134, 135, 140, 188], "new": [1, 4, 12, 13, 14, 15, 22, 26, 28, 35, 44, 45, 47, 48, 76, 80, 85, 118, 120, 126, 127, 129, 130, 132, 133, 134, 135], "ones": [1, 19, 22, 44, 45, 47, 48, 59, 61, 62, 67, 70, 74, 77, 79, 118], "littl": [1, 4], "effort": [1, 4], "thi": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 19, 22, 25, 28, 34, 38, 39, 40, 41, 44, 45, 46, 47, 48, 53, 58, 59, 61, 63, 67, 70, 74, 76, 77, 78, 79, 80, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 151, 153, 155, 159, 160, 161, 162, 164, 172, 174, 177, 179, 183, 185, 188], "repo": [1, 6, 185], "attempt": 1, "align": 1, "exist": [1, 22, 44, 45, 47, 48, 59, 77, 162, 183], "ecosystem": 1, "dataset": [1, 26, 27, 28, 33, 80, 156], "pillar": 1, "environ": [1, 4, 8, 11, 12, 13, 14, 15, 22, 25, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 62, 66, 67, 70, 76, 77, 80, 90, 101, 103, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 161, 162, 164, 165, 166, 167, 169, 172, 174, 177, 179, 180, 181, 182, 183, 185], "model": [1, 4, 9, 12, 13, 14, 15, 22, 44, 45, 46, 47, 48, 70, 79, 81, 87, 88, 89, 91, 102, 103, 110, 118, 126, 133, 134, 135, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 185, 188], "data": [1, 4, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 67, 86, 87, 88, 89, 90, 98, 101, 109, 110, 111, 118, 119, 120, 122, 124, 125, 128, 134, 135, 141, 142, 143, 151, 156, 159, 160, 165, 179, 181, 182, 183, 184, 188], "util": [1, 12, 13, 14, 15, 16, 22, 44, 45, 47, 48, 70, 79, 82, 83, 84, 85, 91, 119, 179, 189], "e": [1, 4, 10, 11, 12, 13, 14, 15, 19, 22, 25, 38, 39, 44, 45, 47, 48, 59, 61, 70, 74, 76, 77, 79, 110, 117, 118, 121, 125, 140, 151, 161, 182], "g": [1, 4, 10, 11, 22, 25, 44, 45, 47, 48, 59, 61, 70, 74, 76, 77, 79, 110, 117, 118, 121, 140, 146, 147, 149, 150, 182], "collector": [1, 12, 13, 14, 15, 16, 159, 160, 165, 166, 179, 181, 182, 184, 188], "contain": [1, 4, 7, 12, 13, 14, 15, 19, 22, 26, 27, 28, 29, 30, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 48, 61, 70, 74, 77, 79, 80, 85, 90, 91, 102, 118, 119, 126, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 151, 156, 161, 164, 167, 169, 172, 174, 177, 179, 180, 181, 182, 183, 188], "etc": [1, 4, 7, 22, 24, 31, 44, 45, 47, 48, 77, 102], "have": [1, 4, 6, 7, 12, 13, 15, 19, 22, 41, 44, 45, 47, 48, 58, 66, 76, 77, 80, 91, 101, 102, 120, 127, 132, 133, 137, 151, 159, 188], "few": [1, 3, 8, 151], "depend": [1, 4, 7, 122, 133], "possibl": [1, 4, 20, 22, 25, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118, 155, 159], "standard": [1, 67, 73, 80, 90, 99, 104, 105, 141, 142, 143], "numpi": [1, 14, 17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 75, 159], "common": [1, 4, 45, 47, 48, 87, 88, 89, 110, 179, 185, 188], "openai": [1, 7, 51, 52], "gym": [1, 4, 11, 45, 51, 52, 67, 74, 80, 164, 167, 169, 172, 174, 177, 179, 185], "onli": [1, 5, 7, 12, 13, 15, 19, 22, 28, 44, 45, 47, 48, 59, 61, 70, 74, 77, 79, 80, 101, 110, 118, 120, 162, 188], "option": [1, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 39, 44, 45, 46, 47, 48, 49, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 85, 86, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 133, 134, 135, 140, 141, 142, 143, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 159, 162, 164, 165, 166, 167, 168, 170, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183], "On": [1, 7], "end": [1, 22, 32, 33, 34, 44, 45, 47, 48, 77, 91, 103, 144, 145, 146, 147, 148, 149, 150], "come": [1, 47, 48, 86, 87, 88, 89, 109, 122], "set": [1, 3, 4, 7, 9, 12, 13, 14, 15, 22, 25, 41, 44, 45, 46, 47, 48, 59, 61, 70, 74, 77, 79, 82, 84, 118, 119, 151, 155, 166, 183, 185, 189], "re": [1, 4, 8, 22, 44, 45, 47, 48, 110, 188], "usabl": [1, 188], "function": [1, 11, 16, 22, 38, 39, 40, 41, 44, 45, 47, 48, 61, 70, 76, 77, 78, 79, 80, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 106, 107, 108, 110, 112, 113, 115, 118, 119, 120, 121, 122, 126, 127, 128, 129, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 164, 167, 169, 172, 174, 177, 179], "cost": [1, 3, 20], "return": [1, 4, 7, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 42, 43, 44, 45, 46, 47, 48, 49, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 101, 102, 103, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 146, 147, 149, 150, 156, 159, 161, 164, 165, 167, 169, 172, 174, 177, 179, 180, 181, 182, 183, 188], "process": [1, 4, 12, 13, 15, 47, 48, 80, 188], "good": [1, 9], "runtim": [1, 22, 44, 45, 47, 48], "perform": [1, 4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 47, 48, 61, 66, 70, 76, 77, 78, 79, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 133, 155, 159], "api": [1, 4, 70, 79, 188], "refer": [1, 7, 22, 44, 45, 47, 48, 77, 80, 90, 99, 106, 107, 112, 113, 124, 126, 130, 133, 141, 144, 145, 148, 167], "packag": [1, 6, 10, 184, 185], "helper": [1, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "replai": [1, 14, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 41, 42, 47, 48, 128, 129, 134, 135, 156, 159, 175, 179, 188], "buffer": [1, 14, 22, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 61, 70, 74, 77, 79, 109, 110, 111, 118, 119, 120, 122, 124, 125, 128, 129, 134, 135, 141, 142, 143, 156, 159, 175, 179, 188], "compos": [1, 4, 22, 33, 36, 37, 42, 44, 45, 47, 48, 76, 77, 80, 164, 167, 169, 172, 174, 177], "prototyp": [1, 9], "tensorspec": [1, 4, 17, 18, 19, 20, 21, 23, 24, 25, 31, 44, 46, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 86, 109, 110, 113, 118], "env": [1, 6, 7, 22, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 103, 118, 162, 164, 165, 166, 167, 169, 172, 174, 177, 179, 181, 182, 183, 184], "envbas": [1, 4, 12, 13, 14, 15, 45, 47, 48, 66, 76, 77, 80, 90, 103, 155, 162, 164, 165, 166, 167, 169, 172, 174, 177, 179, 181, 182, 183], "gymlikeenv": 1, "vector": [1, 17, 25, 47, 48, 92, 94, 102, 143, 149, 150], "domain": [1, 3, 17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 74, 110, 118, 120], "specif": [1, 5, 28, 29, 34, 45, 159, 188], "modul": [1, 4, 11, 22, 44, 45, 46, 47, 48, 61, 70, 74, 76, 77, 78, 79, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 134, 136, 138, 159, 163, 168, 170, 171, 173, 176, 179, 184, 188], "hook": [1, 22, 44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 115, 118, 119, 120, 124, 125, 153, 154, 155, 157, 159, 160], "explor": [1, 81, 82, 84, 105, 110, 118, 119, 126, 155, 165, 166, 179], "planner": [1, 90], "distribut": [1, 3, 4, 9, 10, 26, 28, 67, 90, 96, 97, 98, 99, 108, 110, 112, 113, 116, 117, 121, 124, 127, 130, 132, 133, 188], "object": [1, 4, 12, 13, 14, 15, 19, 22, 38, 39, 40, 41, 44, 45, 47, 48, 70, 76, 77, 80, 86, 87, 109, 110, 118, 119, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 162, 165, 166, 178, 179, 183, 184, 188], "dqn": [1, 98, 111, 124, 129, 130, 131, 136, 169, 170], "ddpg": [1, 92, 93, 94, 95, 128, 131, 136, 167, 168], "sac": [1, 134, 135, 176, 177], "redq": [1, 134, 173, 174], "ppo": [1, 110, 127, 132, 133, 164, 171, 172], "a2c": [1, 126, 163], "trainer": [1, 126, 127, 130, 132, 133, 134, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184], "checkpoint": 1, "builder": 1, "_util": [1, 11, 184], "implement_for": 1, "knowledg": 1, "base": [1, 4, 9, 12, 13, 14, 15, 37, 43, 46, 87, 159, 164, 172, 174, 177, 188], "contribut": 1, "work": [1, 7, 8, 22, 44, 45, 47, 48, 59, 70, 80, 91, 102, 159, 185], "version": [1, 11, 22, 44, 45, 47, 48, 143, 185], "habitat": [1, 53, 185], "lab": [1, 4, 49, 50, 185], "up": [1, 3, 4, 8, 9, 20, 185], "your": [1, 7, 8, 10, 22, 44, 45, 47, 48, 80, 183, 185], "issu": [1, 5, 110, 118, 185], "about": [1, 185], "mujoco": [1, 6, 185], "instal": [1, 10, 159, 185], "prerequisit": 1, "render": [1, 8, 155, 185], "bindindg": 1, "2": [1, 10, 21, 22, 44, 45, 47, 48, 59, 61, 67, 70, 74, 77, 79, 80, 91, 92, 93, 94, 98, 100, 102, 118, 122, 124, 127, 128, 132, 134, 135, 140, 146, 147, 149, 150, 151], "1": [1, 3, 4, 10, 12, 13, 14, 15, 20, 21, 22, 25, 44, 45, 46, 47, 48, 57, 59, 61, 62, 66, 67, 70, 74, 75, 77, 79, 80, 85, 87, 88, 89, 90, 91, 92, 93, 95, 100, 102, 104, 105, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 132, 133, 134, 135, 136, 140, 144, 145, 146, 147, 148, 149, 150, 151, 155, 157, 164, 167, 169, 172, 174, 177, 179, 183, 185, 188], "old": [1, 132], "bind": 1, "py": [1, 188], "when": [1, 4, 5, 8, 12, 13, 14, 15, 22, 26, 27, 28, 32, 33, 34, 38, 39, 40, 41, 44, 45, 47, 48, 61, 66, 70, 74, 76, 77, 79, 80, 84, 90, 102, 104, 110, 117, 118, 120, 127, 132, 133, 140, 156, 183, 185, 188], "pro": [1, 7, 185], "tip": [1, 7, 185], "train": [1, 12, 13, 14, 15, 22, 44, 45, 47, 48, 70, 77, 79, 92, 94, 126, 127, 130, 132, 133, 134, 135, 159, 160, 179, 188], "cluster": [1, 6, 7, 185], "us": [1, 3, 4, 7, 10, 11, 12, 13, 14, 15, 19, 20, 22, 26, 27, 28, 32, 33, 34, 35, 44, 45, 46, 47, 48, 49, 59, 60, 67, 70, 74, 75, 76, 77, 79, 80, 84, 85, 90, 91, 92, 93, 99, 102, 105, 110, 117, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 148, 155, 156, 159, 160, 162, 165, 166, 167, 175, 179, 183, 185, 188, 189], "resourc": [1, 185], "functorch": [1, 10, 98, 109, 110, 111, 118, 119, 120, 122, 124, 125], "blog": 1, "websit": 1, "index": [1, 7, 10, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 42, 43, 85, 156], "search": 1, "page": [1, 7], "central": 3, "part": [3, 22, 44, 45, 47, 48, 110, 122, 151, 183], "off": [3, 110, 117, 118, 120, 121, 135, 155, 165, 188], "polici": [3, 4, 12, 13, 14, 15, 44, 45, 46, 47, 48, 84, 85, 87, 88, 89, 105, 110, 118, 124, 125, 126, 127, 128, 132, 133, 134, 135, 155, 160, 164, 165, 166, 167, 169, 172, 179, 181, 182, 188], "algorithm": [3, 9, 12, 13, 46, 126, 133, 134, 151, 164, 165, 172, 188], "implement": [3, 4, 9, 11, 22, 41, 44, 45, 47, 48, 80, 116, 117, 121, 126, 133, 135, 164, 172, 174, 177, 188], "wide": [3, 4], "we": [3, 4, 5, 7, 9, 19, 22, 44, 45, 47, 48, 70, 80, 90, 101, 120, 185, 188], "also": [3, 4, 8, 22, 28, 44, 45, 47, 48, 77, 113, 120, 126, 128, 129, 188], "storag": [3, 22, 26, 27, 28, 29, 32, 33, 34, 38, 39, 40, 44, 45, 47, 48, 156, 188], "choic": 3, "veri": [3, 4], "influenti": 3, "sampl": [3, 9, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 44, 46, 90, 96, 108, 110, 112, 117, 118, 121, 127, 128, 129, 132, 133, 151, 156, 159, 161], "latenc": 3, "especi": [3, 4, 7, 8, 59], "larger": 3, "volum": 3, "lazymemmapstorag": 3, "advis": 3, "share": [3, 38, 39, 40, 41, 47, 48, 80, 87, 88, 89, 118, 122, 124, 125, 183], "due": [3, 4], "lower": [3, 12, 13, 14, 15, 18, 23, 80, 112, 113], "serialis": 3, "memmaptensor": 3, "well": [3, 4, 12, 13, 15, 22, 41, 44, 45, 47, 48, 112, 113], "abil": 3, "specifi": [3, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 47, 48, 78, 90, 110, 118], "file": [3, 6, 7, 188], "locat": [3, 7, 45, 67, 73, 117, 121], "improv": [3, 126], "node": [3, 164, 167, 169, 172, 174, 177], "failur": 3, "recoveri": 3, "follow": [3, 4, 6, 7, 22, 44, 45, 46, 47, 48, 70, 91, 102, 127, 132, 159, 174, 177, 188], "mean": [3, 4, 7, 14, 67, 80, 90, 96, 99, 101, 110, 116, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "over": [3, 4, 12, 13, 14, 15, 22, 44, 45, 47, 48, 67, 120, 130, 161, 188], "liststorag": [3, 26, 27, 28, 33, 156], "were": [3, 7, 47, 48], "found": [3, 6, 7, 10, 19, 22, 28, 44, 45, 47, 48, 80, 128, 133], "from": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 22, 25, 26, 27, 28, 29, 32, 33, 34, 38, 39, 40, 41, 44, 45, 46, 47, 48, 59, 67, 70, 74, 75, 76, 77, 79, 80, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 102, 103, 104, 109, 110, 111, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 132, 133, 134, 135, 140, 151, 156, 159, 161, 162, 164, 167, 169, 172, 174, 175, 177, 179, 180, 183, 185, 188], "rough": 3, "benchmark": [3, 9], "http": [3, 6, 7, 10, 26, 35, 58, 70, 92, 93, 94, 95, 99, 100, 105, 106, 107, 112, 113, 124, 126, 130, 131, 133, 134, 135, 136, 141, 144, 145, 148, 164, 167, 172, 174, 177], "com": [3, 6, 7, 10], "tree": 3, "main": [3, 110, 159], "type": [3, 22, 30, 44, 45, 46, 47, 48, 61, 70, 74, 77, 79, 80, 91, 102, 105, 110, 118, 164, 167, 169, 172, 174, 177, 181], "speed": [3, 8, 20], "1x": 3, "lazytensorstorag": 3, "83x": 3, "3": [3, 4, 6, 7, 10, 19, 20, 21, 22, 25, 44, 45, 47, 48, 58, 61, 64, 67, 70, 74, 75, 77, 79, 86, 87, 88, 89, 90, 91, 92, 93, 98, 100, 102, 109, 110, 118, 120, 122, 124, 146, 147, 149, 150, 158, 169, 188], "44x": 3, "parent": [3, 4, 30, 44, 59, 67, 70, 76, 87, 133], "subclass": [3, 4, 44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 115, 118, 119, 120, 133], "defin": [3, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 180], "basic": [3, 46], "properti": [3, 44, 45, 46, 47, 48, 77, 96, 104, 108, 116, 117, 121], "observ": [3, 4, 30, 44, 45, 46, 47, 48, 49, 50, 58, 59, 60, 61, 62, 64, 65, 67, 68, 70, 71, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 101, 106, 107, 109, 111, 112, 122, 124, 125, 141, 142, 143, 164, 167, 169, 172, 174, 177, 179, 188], "action": [3, 4, 9, 20, 25, 30, 44, 45, 46, 47, 48, 62, 66, 77, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 102, 103, 109, 110, 111, 113, 116, 117, 122, 124, 125, 129, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 164, 167, 169, 172, 174, 177, 179, 183, 188], "shape": [3, 4, 17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 44, 45, 47, 48, 59, 75, 96, 97, 102, 104, 108, 109, 110, 116, 118, 119, 120, 137, 151, 159, 179], "devic": [3, 4, 7, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 38, 39, 44, 45, 46, 47, 48, 61, 69, 70, 74, 75, 77, 79, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 104, 105, 109, 110, 111, 118, 119, 120, 122, 124, 125, 128, 160, 164, 167, 169, 172, 174, 175, 177], "dtype": [3, 4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 35, 44, 45, 46, 47, 48, 61, 62, 67, 70, 74, 75, 77, 79, 87, 88, 89, 90, 98, 104, 105, 109, 110, 111, 118, 119, 120, 122, 124, 125, 164, 167, 169, 172, 174, 177], "offer": [4, 7], "handl": [4, 22, 44, 45, 47, 48, 80, 102, 159, 181, 182], "differ": [4, 12, 13, 14, 15, 22, 44, 45, 47, 48, 77, 102, 124, 125, 133, 137, 142, 155, 159, 160, 181, 182, 188], "backend": [4, 7, 188], "dm": 4, "control": [4, 47, 48, 49, 50, 92, 93, 94, 95, 103, 113, 127, 132, 133, 136, 141, 144, 145, 148, 167, 188], "custom": [4, 22, 44, 45, 47, 48, 183], "goal": 4, "abl": 4, "experi": [4, 26, 35, 185], "even": [4, 8, 13, 38, 39, 40, 41], "simul": [4, 7, 56, 90], "some": [4, 7, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 47, 48, 70, 92, 110, 115, 120, 151, 161, 188], "box": [4, 17, 18, 19, 20, 21, 23, 24, 25, 30, 31], "wrapper": [4, 15, 28, 29, 34, 46, 49, 50, 51, 52, 53, 54, 55, 110, 118, 119, 141, 183], "under": [4, 22, 44, 45, 47, 48, 110, 118], "lib": [4, 6, 7, 9, 10, 49, 50, 51, 52, 53, 54, 55, 67, 74, 80, 164, 167, 169, 172, 174, 177, 179], "which": [4, 7, 11, 12, 13, 14, 15, 19, 20, 22, 25, 34, 44, 45, 47, 48, 58, 59, 66, 70, 76, 77, 87, 88, 89, 110, 117, 118, 120, 121, 126, 127, 130, 132, 133, 134, 135, 137, 151, 164, 167, 169, 172, 174, 177, 188], "hope": 4, "imit": 4, "other": [4, 7, 22, 38, 39, 40, 41, 44, 45, 46, 47, 48, 80, 105, 110, 126, 127, 130, 132, 133, 134, 135, 164, 172, 174, 177, 181, 182, 188], "torch": [4, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 35, 38, 39, 44, 45, 46, 47, 48, 59, 61, 62, 67, 70, 73, 74, 75, 77, 79, 80, 85, 86, 87, 88, 89, 90, 91, 96, 98, 99, 101, 102, 104, 105, 108, 109, 110, 111, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 151, 158, 164, 167, 169, 172, 174, 177, 179, 188], "nn": [4, 22, 44, 45, 46, 47, 48, 61, 70, 74, 77, 79, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 109, 110, 111, 118, 119, 120, 122, 124, 125, 126, 129, 130, 174, 177, 179], "typic": [4, 22, 44, 45, 47, 48, 188], "method": [4, 12, 13, 14, 15, 22, 28, 32, 38, 39, 40, 41, 44, 45, 47, 48, 58, 61, 67, 70, 71, 74, 77, 79, 87, 88, 89, 90, 101, 110, 118, 119, 120, 126, 180, 188, 189], "organis": 4, "allow": [4, 12, 13, 14, 15, 22, 25, 44, 45, 47, 48, 85, 102, 137, 188], "arbitrari": [4, 25, 47, 48], "number": [4, 8, 12, 13, 14, 15, 18, 20, 22, 23, 25, 26, 27, 28, 33, 35, 38, 39, 40, 44, 45, 46, 47, 48, 58, 66, 67, 73, 80, 90, 91, 96, 97, 99, 100, 102, 106, 107, 110, 112, 113, 116, 117, 118, 121, 134, 135, 151, 153, 155, 156, 159, 160, 161, 162, 181, 182, 183], "input": [4, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 44, 45, 46, 47, 48, 59, 61, 62, 70, 76, 78, 79, 85, 91, 92, 93, 94, 95, 101, 102, 104, 105, 110, 112, 113, 114, 115, 118, 119, 120, 126, 127, 130, 132, 133, 134, 135, 140, 144, 145, 146, 147, 148, 149, 150, 161, 179, 188], "output": [4, 12, 13, 14, 15, 22, 26, 27, 28, 33, 44, 45, 46, 47, 48, 70, 76, 79, 87, 91, 92, 93, 97, 99, 101, 102, 110, 118, 119, 120, 124, 125, 126, 127, 130, 132, 133, 134, 135, 151, 156], "nest": [4, 19, 22, 44, 45, 47, 48, 188], "batch": [4, 12, 13, 14, 15, 16, 20, 22, 25, 26, 27, 28, 29, 32, 33, 34, 44, 45, 46, 47, 48, 77, 96, 97, 101, 104, 108, 110, 116, 118, 126, 127, 130, 132, 133, 134, 135, 144, 145, 146, 147, 148, 149, 150, 151, 156, 158, 159, 160, 181, 182, 183, 188], "structur": [4, 7], "each": [4, 7, 12, 13, 14, 15, 16, 21, 22, 26, 28, 44, 45, 47, 48, 74, 80, 120, 124, 125, 146, 147, 149, 150, 155, 181, 182], "attribut": [4, 22, 44, 45, 47, 48, 70, 110], "batch_siz": [4, 19, 26, 27, 29, 32, 33, 34, 44, 46, 74, 87, 88, 89, 90, 98, 109, 110, 111, 118, 120, 122, 124, 125, 151, 156, 164, 167, 169, 172, 174, 177], "size": [4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 44, 45, 46, 47, 48, 59, 70, 74, 75, 77, 78, 79, 87, 88, 89, 90, 91, 96, 98, 101, 102, 108, 109, 110, 111, 112, 113, 116, 118, 120, 122, 124, 125, 140, 151, 156, 164, 167, 169, 172, 174, 177], "repres": [4, 12, 13, 14, 15, 28, 44, 45, 47, 48, 124, 125, 137], "togeth": [4, 12, 13, 14, 15, 87, 88, 89], "where": [4, 7, 12, 13, 14, 15, 26, 27, 28, 29, 32, 33, 34, 38, 39, 44, 45, 46, 47, 48, 70, 76, 79, 110, 118, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 140, 156, 159, 160, 188], "expect": [4, 7, 19, 22, 30, 44, 45, 46, 47, 48, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 110, 118, 120, 126, 127, 132, 133, 162, 185, 188], "live": [4, 12, 13, 14, 15, 22, 26, 27, 28, 29, 32, 33, 34, 44, 45, 46, 47, 48, 156], "doe": [4, 26, 28, 35, 41, 104, 120, 127, 132, 133, 140, 159, 188], "actual": [4, 7, 12, 13, 15, 44, 45, 47, 48, 161], "step": [4, 12, 13, 14, 15, 22, 44, 45, 46, 47, 48, 66, 67, 77, 85, 90, 99, 101, 103, 110, 126, 133, 140, 151, 155, 159, 188], "oper": [4, 7, 12, 13, 15, 22, 44, 45, 47, 48, 76, 87, 88, 89, 118, 119, 124, 126, 127, 128, 129, 130, 132, 133, 140, 141, 142, 143, 159, 167, 169, 174, 177, 188], "comput": [4, 12, 14, 20, 22, 26, 28, 44, 45, 47, 48, 61, 67, 70, 76, 77, 78, 79, 87, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 162], "respons": [4, 110, 159], "do": [4, 7, 12, 13, 14, 15, 45, 66, 85, 88, 104, 188], "just": [4, 151, 188], "retriev": [4, 32, 33, 34, 44, 45, 47, 48, 59, 67, 85, 90, 110, 127, 132, 133, 141, 142, 143, 164, 167, 169, 172, 174, 177, 183, 188], "care": [4, 44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "map": [4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 38, 44, 45, 47, 48, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 87, 88, 89, 110, 118, 120, 124, 156], "desir": [4, 22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 84, 91, 102, 110, 118], "see": [4, 6, 7, 8, 9, 12, 13, 14, 15, 22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 81, 91, 102, 104, 117, 118, 121], "For": [4, 7, 9, 10, 12, 13, 14, 15, 22, 44, 45, 47, 48, 104, 124, 126, 130, 133, 155, 167, 188], "parametr": [4, 105, 135], "hardwar": 4, "observation_spec": [4, 44, 46, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 74, 75, 76, 77, 78, 79, 90, 162, 179], "compositespec": [4, 44, 46, 74, 86, 90, 109, 120], "kei": [4, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 34, 44, 45, 47, 48, 58, 59, 67, 70, 74, 76, 77, 79, 80, 85, 90, 103, 110, 118, 119, 120, 122, 126, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 155, 158, 159, 162, 164, 172, 174, 177, 188], "spec": [4, 17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 44, 45, 46, 47, 48, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 86, 87, 88, 89, 98, 109, 110, 111, 113, 118, 119, 120, 124, 125, 164, 167, 169, 172, 174, 177], "pair": [4, 22, 28, 44, 45, 47, 48, 87, 110], "input_spec": [4, 44, 46, 47, 48, 61, 62, 70, 76, 77, 78, 79, 90], "action_spec": [4, 44, 45, 46, 47, 48, 77, 84, 86, 98, 109, 111, 113, 124, 125, 179], "reward_spec": [4, 44, 46, 57, 61, 62, 70, 72, 73, 76, 77, 78, 79, 90], "reward": [4, 22, 30, 44, 45, 46, 47, 48, 57, 61, 62, 70, 72, 73, 76, 77, 78, 79, 80, 85, 90, 128, 129, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 183, 188], "importantli": [4, 110], "should": [4, 7, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 41, 44, 45, 46, 47, 48, 61, 67, 70, 76, 77, 78, 79, 80, 85, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 131, 132, 133, 134, 136, 140, 155, 156, 159, 179, 181, 182, 183, 188], "4": [4, 7, 20, 25, 46, 49, 50, 51, 54, 58, 80, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 109, 110, 111, 118, 119, 120, 122, 124, 125], "action_s": 4, "simpli": [4, 6], "With": [4, 188], "reset": [4, 12, 13, 14, 15, 44, 45, 46, 47, 48, 55, 58, 61, 66, 70, 74, 76, 79, 80, 81, 85, 123, 164, 167, 169, 172, 174, 177], "mai": [4, 5, 7, 12, 13, 14, 15, 22, 44, 45, 47, 48, 77, 80, 102, 188], "necessarili": 4, "requir": [4, 7, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 44, 45, 47, 48, 61, 70, 74, 77, 79, 102, 118, 120, 126, 127, 130, 132, 133, 134, 135, 188], "rollout": [4, 12, 13, 14, 15, 44, 45, 46, 47, 48, 84, 90, 126, 162], "usual": [4, 6, 44, 45, 47, 48, 105, 164, 172, 174, 177, 185, 188], "done": [4, 7, 19, 22, 44, 45, 46, 47, 48, 67, 73, 74, 80, 85, 90, 128, 129, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 164, 167, 169, 172, 174, 177], "state": [4, 12, 13, 14, 15, 22, 44, 45, 46, 47, 48, 58, 59, 61, 70, 74, 76, 77, 79, 80, 81, 87, 90, 99, 101, 102, 106, 110, 112, 113, 118, 120, 134, 140, 141, 142, 143, 183], "stateless": [4, 47, 48, 76], "instanc": [4, 7, 8, 12, 13, 14, 15, 22, 30, 44, 45, 46, 47, 48, 50, 58, 61, 70, 74, 76, 78, 79, 80, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 155, 162, 164, 165, 166, 167, 169, 172, 174, 177, 179, 181, 182, 188], "set_se": [4, 12, 13, 14, 15, 44, 45, 46, 47, 48, 67, 77], "integ": [4, 12, 13, 14, 15, 21, 22, 25, 26, 27, 28, 41, 44, 45, 47, 48, 91, 102, 156], "seed": [4, 12, 13, 14, 15, 44, 45, 46, 47, 48, 49, 77, 159], "next": [4, 12, 13, 19, 22, 26, 27, 28, 33, 44, 45, 46, 47, 48, 80, 85, 113, 134, 140, 156], "multi": [4, 7, 9, 22, 23, 24, 44, 45, 47, 48, 101, 102], "determinist": [4, 22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 86, 99, 106, 110, 113, 118], "preced": [4, 101], "one": [4, 7, 11, 12, 13, 14, 15, 21, 25, 26, 27, 28, 29, 32, 33, 34, 41, 42, 43, 44, 45, 47, 48, 61, 66, 70, 76, 77, 78, 79, 80, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 113, 115, 118, 119, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 153, 155, 156, 159, 162, 164, 172, 174, 177, 183, 185, 188], "multipl": [4, 12, 13, 14, 15, 20, 47, 48, 59, 76, 80, 101, 104, 105, 118, 134, 174, 183, 188], "without": [4, 7, 9, 22, 44, 45, 47, 48, 88, 134, 140, 179, 185], "risk": 4, "overlap": 4, "consecut": 4, "while": [4, 7, 22, 44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 132, 133], "still": [4, 9, 132], "reproduc": 4, "result": [4, 7, 12, 13, 14, 15, 22, 44, 45, 47, 48, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 102, 125, 144, 145, 146, 147, 148, 149, 150, 160], "max_step": [4, 44, 45, 46, 47, 48, 84, 85], "execut": [4, 7, 14, 22, 32, 33, 34, 44, 45, 46, 47, 48, 120, 162, 183, 188], "maximum": [4, 12, 13, 14, 15, 18, 22, 23, 26, 27, 28, 38, 39, 40, 44, 45, 47, 48, 72, 109, 116, 117, 121, 135, 156], "tensordictmodul": [4, 46, 87, 88, 89, 90, 103, 109, 110, 119, 120, 126, 127, 128, 132, 133, 134, 135, 140, 141, 142, 143, 155, 165, 166, 179], "ani": [4, 19, 22, 26, 27, 28, 29, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 70, 77, 80, 91, 102, 105, 118, 120, 133, 156, 159, 185], "compat": [4, 5, 7, 11, 22, 41, 44, 45, 47, 48, 53, 80, 137], "better": 4, "parallel": [4, 8, 12, 13, 15, 126, 180, 181, 182, 183], "featur": [4, 12, 13, 14, 15, 25, 44, 45, 47, 48, 58, 91, 99, 100, 102, 104, 105, 110, 183], "cpu": [4, 8, 10, 22, 30, 38, 39, 44, 45, 46, 47, 48, 61, 70, 74, 77, 79, 87, 88, 89, 90, 98, 105, 109, 110, 111, 118, 120, 122, 124, 125, 164, 167, 169, 172, 174, 177], "intens": [4, 8], "gym3": 4, "envpool": 4, "interfac": [4, 102, 104], "simultan": [4, 47, 48], "thei": [4, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 47, 48, 62, 63, 76, 77, 101, 126, 127, 130, 132, 133, 134, 135, 159, 188], "often": [4, 131, 159], "competit": 4, "advantag": [4, 100, 126, 127, 132, 133, 141, 142, 143, 144, 145, 146, 148, 149, 188], "scale": [4, 67, 73, 87, 89, 99, 109, 110, 112, 113, 117, 120, 121, 157, 162, 164, 172, 174, 177, 183], "varieti": 4, "therefor": [4, 7, 133], "its": [4, 7, 12, 13, 14, 15, 22, 28, 44, 45, 46, 47, 48, 58, 76, 77, 80, 91, 98, 110, 118, 120, 126, 127, 130, 132, 133, 134, 135, 159, 179, 188], "own": [4, 12, 13, 15, 22, 44, 45, 47, 48], "parallelenv": [4, 12, 13, 14, 15, 48, 180], "run": [4, 5, 6, 7, 8, 10, 12, 13, 15, 22, 44, 45, 46, 47, 48, 49, 50, 61, 66, 67, 70, 76, 77, 78, 79, 80, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 155, 181, 182, 183, 185, 188], "As": [4, 44, 45, 47, 48, 110], "inherit": [4, 103, 188], "enjoi": 4, "exact": 4, "same": [4, 14, 22, 44, 45, 47, 48, 66, 76, 77, 80, 91, 102], "Of": [4, 7, 185], "cours": [4, 185], "correspond": [4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 35, 44, 45, 46, 47, 48, 74, 77, 80, 110], "count": [4, 155, 161], "def": [4, 11, 22, 44, 45, 46, 47, 48, 90, 119, 122, 124, 188], "make_env": [4, 80, 85, 165, 166], "gymenv": [4, 12, 13, 14, 15, 53, 61, 67, 74, 77, 80, 164, 167, 169, 172, 174, 177, 179], "pendulum": [4, 12, 13, 14, 15, 51, 52, 61, 67, 74, 77, 80, 179], "v1": [4, 14, 67, 74, 137, 146, 147, 149, 150], "from_pixel": [4, 49, 50, 164, 172, 174, 177], "true": [4, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 44, 45, 46, 47, 48, 49, 50, 59, 61, 66, 67, 70, 73, 74, 75, 77, 79, 80, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 102, 104, 105, 110, 117, 118, 120, 121, 126, 127, 132, 133, 134, 135, 137, 141, 142, 143, 146, 147, 149, 150, 153, 154, 155, 159, 169, 183, 188], "9": [4, 7, 22, 80, 188], "81": 4, "cuda": [4, 7, 22, 44, 45, 47, 48, 61, 69, 70, 74, 77, 79, 118, 152], "0": [4, 6, 7, 10, 11, 21, 22, 25, 26, 28, 35, 44, 45, 46, 47, 48, 57, 59, 61, 64, 66, 67, 70, 74, 75, 77, 79, 80, 85, 90, 91, 92, 93, 95, 99, 102, 104, 105, 110, 112, 113, 116, 117, 118, 119, 120, 121, 126, 127, 132, 133, 134, 135, 136, 140, 151, 157, 159, 179, 183, 188], "print": [4, 6, 7, 19, 20, 22, 25, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 62, 67, 74, 75, 80, 85, 86, 87, 88, 89, 91, 98, 102, 110, 111, 118, 119, 120, 122, 124, 125, 164, 167, 169, 172, 174, 177, 179, 188], "call": [4, 7, 11, 12, 13, 14, 15, 22, 26, 27, 28, 32, 33, 34, 38, 39, 40, 41, 44, 45, 47, 48, 58, 61, 62, 69, 70, 74, 76, 77, 78, 79, 80, 84, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 107, 110, 112, 113, 115, 118, 119, 120, 140, 155, 156, 188], "b": [4, 16, 19, 104, 105, 110, 120], "c": [4, 6, 7, 19, 164, 167, 169, 172, 174, 177], "d": [4, 26, 35, 110], "get": [4, 6, 7, 41, 47, 48, 59, 62, 67, 75, 80, 86, 110, 119, 144, 145, 148], "forc": [4, 6, 7], "variou": [4, 12, 13, 14, 15, 126, 127, 130, 132, 133, 134, 135, 181, 182], "befor": [4, 7, 10, 12, 13, 14, 15, 22, 44, 45, 47, 48, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 102, 104, 105, 110, 118, 120, 126, 127, 130, 132, 133, 134, 135, 141, 142, 143], "reset_work": 4, "fals": [4, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 45, 46, 47, 48, 49, 59, 61, 66, 67, 70, 73, 74, 75, 77, 79, 80, 87, 88, 89, 90, 91, 92, 98, 102, 109, 110, 111, 118, 119, 120, 122, 124, 125, 128, 129, 130, 134, 135, 137, 141, 142, 143, 146, 147, 149, 150, 153, 154, 155, 156, 157, 159, 164, 167, 169, 172, 174, 177, 183, 188], "field": [4, 12, 13, 14, 15, 19, 22, 44, 45, 46, 47, 48, 74, 77, 87, 88, 89, 90, 98, 109, 110, 111, 118, 120, 122, 124, 125, 162, 164, 167, 169, 172, 174, 177, 185], "tensor": [4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 42, 43, 44, 45, 46, 47, 48, 58, 59, 61, 64, 67, 70, 73, 74, 75, 76, 77, 79, 80, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 129, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 164, 167, 169, 172, 174, 177, 188], "bool": [4, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 45, 46, 47, 48, 49, 50, 59, 66, 67, 70, 73, 74, 75, 77, 79, 80, 85, 90, 91, 92, 93, 102, 104, 105, 110, 117, 118, 120, 121, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 141, 142, 143, 146, 147, 149, 150, 153, 154, 155, 156, 157, 159, 164, 167, 169, 172, 174, 177, 183], "pixel": [4, 7, 19, 65, 70, 71, 75, 79, 92, 106, 107, 164, 169, 172, 174, 177], "500": [4, 159], "uint8": [4, 75], "none": [4, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 48, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 85, 86, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 108, 109, 110, 118, 120, 122, 124, 125, 126, 133, 140, 141, 142, 143, 146, 147, 149, 150, 155, 156, 159, 162, 164, 165, 166, 167, 169, 172, 174, 177, 179, 181, 182, 183, 188], "is_shar": [4, 19, 46, 74, 80, 87, 90, 98, 109, 110, 111, 118, 120, 164, 167, 169, 172, 174, 177], "A": [4, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 53, 70, 74, 76, 77, 80, 81, 85, 90, 91, 102, 105, 110, 118, 120, 124, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 153, 156, 159, 160, 164, 169, 172, 174, 177, 179], "note": [4, 12, 13, 14, 15, 22, 44, 45, 47, 48, 80, 110], "launch": 4, "quit": 4, "time": [4, 5, 7, 12, 13, 14, 15, 22, 44, 45, 47, 48, 59, 74, 80, 85, 99, 101, 134, 159], "mani": [4, 127, 132, 133, 134], "import": [4, 6, 7, 10, 26, 28, 35, 45, 46, 47, 48, 67, 74, 80, 86, 87, 88, 89, 90, 98, 102, 109, 110, 111, 118, 119, 120, 122, 124, 125, 127, 153, 155, 164, 167, 169, 172, 174, 177, 179], "start": [4, 12, 85], "bottleneck": 4, "why": 4, "so": [4, 6, 7, 10, 22, 44, 45, 47, 48, 80, 120], "slow": 4, "onc": [4, 7, 12, 13, 14, 15, 22, 44, 45, 47, 48, 77, 119, 188], "great": [4, 7, 8], "speedup": 4, "serialenv": 4, "serial": [4, 22, 44, 45, 47, 48, 80], "mostli": [4, 15], "purpos": [4, 7, 179], "want": [4, 6, 7, 120], "assess": 4, "behaviour": [4, 45, 59, 117, 121, 155], "subprocess": 4, "In": [4, 7, 10, 11, 12, 13, 15, 22, 44, 45, 47, 48, 61, 70, 74, 76, 77, 79, 102, 110, 113, 117, 118, 120, 121, 160, 181, 182, 183], "case": [4, 7, 11, 12, 13, 14, 15, 19, 26, 28, 35, 44, 45, 47, 48, 77, 102, 110, 118, 120, 151, 160, 181, 182, 183, 188], "raw": [4, 117, 121], "must": [4, 7, 12, 13, 14, 15, 19, 22, 38, 39, 40, 41, 44, 45, 47, 48, 74, 77, 91, 102, 110, 118, 124, 125, 144, 145, 146, 147, 148, 149, 150, 151, 155, 159, 160, 164, 167, 169, 172, 174, 177], "treat": 4, "being": [4, 15, 22, 44, 45, 47, 48, 77, 84, 160, 181, 182, 183], "pass": [4, 14, 19, 22, 28, 44, 45, 47, 48, 61, 70, 76, 78, 79, 80, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 107, 110, 112, 113, 115, 118, 119, 120, 181, 182, 183], "anoth": [4, 44, 45, 47, 48, 76, 102, 110, 126, 127, 130, 132, 133, 134, 135], "valu": [4, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 44, 45, 46, 47, 48, 57, 59, 66, 70, 72, 74, 75, 76, 77, 79, 80, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 99, 100, 102, 104, 105, 108, 109, 110, 111, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 159, 164, 167, 172, 174, 177, 179, 188], "To": [4, 6, 7, 22, 33, 44, 45, 47, 48, 80, 87, 88, 89, 159], "logic": 4, "torchvis": 4, "build": [4, 7, 16, 19, 22, 44, 45, 47, 48, 80, 90, 110, 159, 163, 168, 170, 171, 173, 175, 176, 178, 188], "transformedenv": [4, 61, 66, 67, 74, 76, 80, 164, 167, 169, 172, 174, 177], "primit": 4, "built": [4, 7, 175, 179, 180, 183], "base_env": [4, 74], "totensorimag": [4, 169], "in_kei": [4, 46, 57, 58, 59, 60, 62, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 79, 80, 86, 87, 88, 89, 90, 109, 110, 118, 119, 120, 122, 128, 129, 174, 177, 179], "resiz": 4, "64": [4, 92, 93, 100], "By": [4, 25, 45, 47, 48, 110, 155, 183], "default": [4, 10, 12, 13, 14, 15, 19, 20, 22, 25, 28, 33, 38, 39, 44, 45, 47, 48, 49, 58, 59, 64, 66, 67, 70, 73, 74, 75, 77, 79, 80, 85, 86, 90, 91, 92, 93, 94, 95, 96, 99, 100, 102, 104, 105, 106, 107, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 149, 150, 151, 153, 154, 155, 157, 159, 164, 167, 172, 174, 177, 179, 183, 188], "now": [4, 7], "appar": [4, 153], "bring": 4, "signific": 4, "kind": [4, 30, 85], "consult": 4, "achiev": [4, 22, 44, 45, 47, 48, 188], "interest": [4, 47, 48, 110], "exampl": [4, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 61, 62, 67, 70, 74, 75, 77, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 98, 101, 102, 109, 110, 111, 118, 119, 120, 122, 124, 125, 151, 152, 153, 154, 157, 158, 160, 164, 167, 169, 172, 174, 177, 179, 188], "abov": [4, 7, 22, 44, 45, 47, 48, 117, 121, 188], "resize_par": 4, "sinc": [4, 7, 22, 44, 45, 46, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "out_kei": [4, 46, 47, 48, 57, 59, 64, 68, 70, 71, 72, 75, 76, 79, 86, 87, 89, 90, 109, 110, 118, 119, 120, 122, 124, 125, 155, 179], "keyword": [4, 22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 110, 118, 180], "argument": [4, 12, 13, 14, 15, 19, 22, 44, 45, 47, 48, 61, 70, 74, 76, 77, 79, 91, 102, 104, 110, 118, 122, 153, 161, 164, 167, 169, 172, 174, 177, 179, 180, 183], "easi": 4, "root": [4, 117, 121], "graph": [4, 138, 139], "inv": 4, "appli": [4, 22, 32, 33, 34, 44, 45, 47, 48, 77, 117, 188], "revers": 4, "order": [4, 14, 22, 25, 32, 33, 34, 44, 45, 47, 48, 77, 118, 120], "chain": [4, 33, 61, 91, 120], "taken": [4, 44, 45, 47, 48], "includ": [4, 7, 9, 22, 38, 39, 40, 41, 44, 45, 46, 47, 48, 77, 80, 161, 188], "invers": 4, "through": [4, 14, 47, 48, 102, 110, 120], "in_keys_inv": [4, 62, 76], "append_transform": [4, 32, 33, 34, 70, 74], "doubletofloat": [4, 164, 167, 172, 174, 177], "float32": [4, 19, 26, 30, 35, 46, 62, 67, 74, 75, 87, 88, 89, 90, 98, 109, 110, 111, 118, 120, 122, 124, 125, 164, 167, 169, 172, 174, 177], "float64": [4, 22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "torchrl": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184], "against": [5, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 47, 48, 110, 118], "latest": [5, 10], "guarante": [5, 22, 38, 39, 40, 41, 44, 45, 47, 48, 80], "wa": [5, 7, 44, 45, 47, 48, 77, 131, 136], "avail": [5, 6, 110, 124, 125, 181, 182], "releas": [5, 7, 10, 22, 44, 45, 47, 48, 77], "howev": [5, 7, 22, 44, 45, 47, 48, 77], "project": [5, 17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 110, 118], "willing": 5, "keep": [5, 7, 13, 70, 79, 80, 153, 159], "backward": [5, 22, 44, 45, 47, 48, 80], "older": [5, 7], "If": [5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 44, 45, 46, 47, 48, 59, 60, 66, 70, 76, 77, 79, 80, 91, 101, 102, 110, 118, 120, 140, 149, 150, 156, 159, 160, 162, 164, 172, 174, 177, 179, 183, 185], "you": [5, 6, 7, 8, 10, 22, 44, 45, 47, 48, 80, 185], "feel": [5, 185], "free": [5, 7, 126, 133, 188], "gladli": 5, "instruct": [6, 10], "prepar": 6, "conda": [6, 7, 185], "assum": [6, 19, 25, 34, 45, 47, 48, 70, 74, 79, 101, 146, 147, 149, 150], "let": [6, 7, 22, 44, 45, 47, 48, 155], "": [6, 7, 22, 26, 27, 28, 33, 44, 45, 46, 47, 48, 61, 70, 74, 77, 79, 80, 91, 105, 110, 118, 120, 135, 156, 174, 177], "creat": [6, 7, 10, 12, 13, 15, 22, 33, 44, 45, 47, 48, 70, 76, 77, 80, 85, 91, 92, 93, 94, 95, 100, 102, 110, 118, 119, 120, 129, 130, 134, 162, 165, 166, 179, 181, 182], "n": [6, 7, 17, 20, 22, 25, 44, 45, 47, 48, 58, 110, 126, 140, 188], "7": [6, 10, 20, 25, 90, 91, 101, 102], "cmake": 6, "14": [6, 11, 67], "activ": [6, 7, 9, 91, 99, 102, 133], "sim": 6, "bullet": 6, "physic": [6, 7, 188], "headless": [6, 7], "mode": [6, 14, 22, 44, 45, 47, 48, 77, 80, 82, 84, 96, 108, 110, 116, 117, 121, 155], "necessari": [6, 12, 13, 14, 15, 120, 134, 141, 142, 143], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": 6, "y": [6, 7, 101], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "reduc": [6, 20], "verbos": 6, "export": 6, "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "don": [6, 7, 17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 44], "t": [6, 7, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 35, 44, 45, 47, 48, 70, 79, 80, 85, 118, 128, 159, 160, 183, 185], "remov": [6, 22, 44, 45, 47, 48], "command": [6, 7, 10], "more": [6, 8, 12, 13, 14, 15, 22, 26, 27, 28, 29, 32, 33, 34, 44, 45, 47, 48, 81, 102, 104, 118, 124, 126, 130, 133, 141, 144, 145, 148, 156, 167, 185, 188], "detail": [6, 7, 22, 44, 45, 47, 48, 77, 124, 126, 130, 133, 167, 185], "readm": [6, 7], "md": [6, 7], "list": [6, 7, 9, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 40, 41, 44, 45, 46, 47, 48, 58, 70, 77, 79, 102, 110, 118, 120, 122, 139, 141, 142, 143, 155, 156, 181, 182], "habitatenv": 6, "_has_habitat": 6, "assert": [6, 17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 45, 80, 85, 151, 158], "check": [6, 7, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 46, 47, 48, 59, 63, 110, 118], "_env": 6, "available_env": [6, 49, 50, 51, 52, 54, 55], "startswith": 6, "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 22, 44, 45, 47, 48, 77], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "solut": [6, 7, 9, 185, 188], "debug": 6, "link": [6, 7], "right": [6, 7, 101], "replac": [6, 7, 22], "path": [6, 7, 22, 38, 44, 45, 47, 48, 70, 79, 159, 188], "mujoco_env": [6, 7], "proper": [6, 7], "name": [6, 7, 11, 22, 44, 45, 47, 48, 49, 77, 126, 127, 130, 132, 133, 134, 135, 154, 164, 167, 169, 172, 174, 177, 188], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "config": [6, 7, 162, 164, 165, 166, 167, 169, 172, 174, 175, 177, 180], "var": [6, 7, 22, 44, 45, 47, 48, 77], "ld_preload": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": 7, "repositori": 7, "stand": [7, 87, 88, 89], "joint": 7, "dynam": 7, "contact": 7, "engin": 7, "facilit": [7, 28, 69, 70, 79, 87, 88, 89], "develop": 7, "robot": [7, 70, 79], "biomechan": 7, "graphic": 7, "anim": 7, "machin": [7, 22], "area": 7, "demand": 7, "fast": [7, 9, 134], "accur": 7, "articul": 7, "interact": [7, 14, 84, 110], "recent": 7, "acquir": 7, "deepmind": [7, 9, 49, 50], "access": [7, 22, 44, 45, 47, 48, 70, 183, 185], "whomev": 7, "licenc": 7, "incorpor": 7, "make": [7, 22, 41, 44, 45, 47, 48, 52, 55, 67, 70, 85, 104, 110, 133, 166, 183], "relianc": 7, "obsolet": 7, "seri": [7, 25, 42, 43, 48, 66, 76], "legaci": 7, "document": [7, 22, 44, 45, 47, 48, 77], "capabl": [7, 188], "glfw": 7, "osmesa": 7, "egl": 7, "hand": 7, "gpu": [7, 8, 22, 44, 45, 47, 48], "our": 7, "advic": 7, "sudo": [7, 185], "enabl": [7, 155], "apt": 7, "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "via": [7, 47, 76, 79, 128, 188], "awar": [7, 38, 39, 40, 41], "fact": 7, "indent": 7, "workflow": [7, 87, 88, 89], "thing": 7, "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "both": [7, 22, 44, 45, 47, 48, 77, 87, 88, 89, 91, 102, 155], "tell": 7, "appropri": [7, 12, 13, 14, 15, 42, 43, 180, 183], "variabl": [7, 20, 25, 87, 88, 89, 134, 188], "mujoco_gl": 7, "pyopengl_platform": 7, "deactiv": 7, "pre": [7, 22, 39, 44, 45, 47, 48, 70, 79], "binari": [7, 17, 25, 57, 124, 125], "need": [7, 10, 22, 41, 44, 45, 47, 48, 61, 70, 76, 77, 78, 79, 80, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 107, 110, 112, 113, 115, 118, 119, 120, 134, 140, 159, 183], "These": 7, "instead": [7, 20, 22, 44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 183], "becaus": [7, 76, 95, 101, 110, 118], "setup": 7, "like": [7, 22, 44, 45, 47, 48, 53, 75, 134], "mkdir": 7, "cd": 7, "here": [7, 9, 10], "tag": [7, 183], "earlier": [7, 12, 13, 14, 15], "roboti": 7, "u": [7, 10], "html": 7, "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 45, 90], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": 7, "bin": 7, "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "too": [7, 117, 121, 126, 127, 130, 132, 133, 134, 135], "mujoco_py_mjkey_path": 7, "reload": 7, "recommend": 7, "hard": [7, 131], "chang": [7, 22, 38, 39, 40, 41, 44, 45, 47, 48, 77, 80], "later": [7, 95, 110], "known": [7, 8], "try": 7, "nativ": [7, 9, 44, 45, 47, 48, 58, 110, 118, 120], "usag": [7, 135], "local": [7, 10, 14, 22, 32, 44, 45, 47, 48, 77], "modifi": [7, 22, 44, 45, 47, 48, 61, 70, 74, 76, 77, 79, 118, 161, 164, 172, 174, 177], "nvidia": 7, "driver": 7, "those": [7, 47, 48, 67, 110, 120, 160, 181, 182], "hack": 7, "line": [7, 22, 44, 45, 47, 48], "adatp": 7, "script": [7, 164, 167, 169, 172, 174, 177, 179, 183, 188], "go": 7, "unnot": 7, "until": 7, "complet": [7, 9, 45, 185], "mujoco_pi": 7, "trigger": 7, "pipelin": 7, "caus": 7, "problem": [7, 14], "give": [7, 46, 185], "troubleshoot": 7, "gl": 7, "h": [7, 60, 71, 75], "eglshim": 7, "10": [7, 19, 46, 75, 90, 119, 134, 135, 151, 188], "fatal": 7, "error": [7, 10, 11, 22, 44, 45, 47, 48], "No": 7, "directori": [7, 38, 188], "sure": [7, 41, 85, 183], "glu": 7, "38": 7, "disappear": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "_solution_": 7, "saniti": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": 7, "runtimeerror": [7, 22, 44, 45, 47, 48, 77], "stack": [7, 28, 47, 48, 80, 85, 120, 151], "job": 7, "schedul": [7, 155], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": 7, "__init__": [7, 46, 90, 122, 124, 188], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "fail": 7, "initi": [7, 12, 13, 14, 15, 22, 44, 45, 47, 48, 67, 70, 74, 76, 77, 81, 90, 104, 105, 110, 118, 120, 132, 134, 135, 164, 167, 169, 172, 174, 177, 183], "opengl": 7, "global": [7, 22, 44, 45, 47, 48, 110, 188], "cuda_visible_devic": 7, "id": [7, 16, 134, 174], "around": [7, 15, 28, 29, 34, 46, 110, 118, 141], "slurm_step_gpu": 7, "enviro": [7, 10], "imag": [7, 49, 60, 70, 75, 79, 102], "black": 7, "read": [7, 12, 13, 14, 15, 38, 39, 40, 41, 45, 47, 48, 76, 87, 88, 89, 108, 110, 118, 120, 126, 127, 130, 132, 133, 134, 135, 159, 164, 172, 174, 177], "miss": [7, 11, 19, 22, 44, 45, 47, 48, 77, 120, 185], "onscreen": 7, "101": 7, "displai": [7, 159, 188], "correctli": [7, 22, 44, 45, 47, 48], "ask": 8, "core": [8, 164, 167, 169, 172, 174, 177, 188], "than": [8, 12, 13, 14, 15, 95, 102, 118, 160, 185], "twice": [8, 135], "much": [8, 26, 28, 35, 132, 133], "spin": 9, "deep": [9, 58, 92, 93, 94, 95, 97, 126, 131, 135, 136, 167], "hug": 9, "face": 9, "syllabu": 9, "lectur": 9, "best": 9, "awesom": 9, "curat": 9, "discuss": 9, "reddit": 9, "maintain": 9, "reagent": 9, "product": [9, 181, 182], "orient": 9, "stabl": [9, 10], "baselines3": 9, "tf": 9, "agent": [9, 32, 105], "bandit": 9, "tensorflow": 9, "kera": 9, "acm": 9, "framework": [9, 46], "dopamin": 9, "salina": 9, "flexibl": [9, 188], "simpl": [9, 22, 25, 44, 45, 47, 48, 92, 110], "sequenti": [9, 22, 44, 45, 47, 48, 120], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": 9, "grade": 9, "factori": 9, "throughput": 9, "asynchron": [9, 13, 22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118, 126, 181], "cherri": 9, "jaxrl": 9, "continu": [9, 18, 23, 24, 31, 92, 93, 94, 95, 110, 120, 136, 141, 144, 145, 148, 167], "space": [9, 25, 30, 107, 110, 118, 120, 124, 125], "mbrl": [9, 46], "rlmeta": 9, "light": 9, "weight": [9, 12, 13, 14, 15, 22, 26, 28, 44, 45, 47, 48, 61, 70, 74, 77, 79, 105, 118, 126, 127, 160, 178, 188], "elegantrl": 9, "cloud": 9, "mtrl": 9, "task": [9, 47, 48, 49, 70, 79], "baselin": 9, "relat": 10, "689": 10, "13": [10, 11], "lead": [10, 11, 19, 117, 121], "python3": 10, "dist": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": 10, "24": 10, "11": [10, 20, 25, 75, 90], "2022": 10, "12": 10, "pip": 10, "solv": [10, 185], "pip3": 10, "extra": [10, 22, 44, 45, 47, 48, 80], "url": 10, "org": [10, 26, 35, 58, 70, 92, 93, 94, 95, 99, 100, 105, 106, 107, 112, 113, 124, 126, 130, 131, 133, 135, 136, 141, 144, 145, 148, 164, 167, 172, 177], "whl": 10, "There": [10, 188], "two": [10, 22, 44, 45, 47, 48, 95, 110, 114, 132, 135, 137, 155, 159, 164, 172, 174, 177], "upgrad": 10, "previou": [10, 22, 113], "relas": 10, "lib_version_her": 10, "module_nam": 11, "str": [11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 34, 38, 44, 45, 47, 48, 49, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 79, 80, 82, 84, 86, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 103, 104, 105, 109, 110, 118, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 142, 143, 154, 155, 158, 162, 164, 167, 172, 174, 175, 177, 183], "from_vers": 11, "to_vers": 11, "decor": 11, "fit": [11, 67, 188], "explicit": [11, 101], "intersect": 11, "rang": [11, 20, 80, 85, 132, 188], "paramet": [11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 172, 174, 177, 179, 180, 181, 182, 183], "longer": 11, "fun": 11, "self": [11, 22, 28, 44, 45, 46, 47, 48, 61, 70, 74, 77, 79, 90, 118, 119, 122, 124, 188], "x": [11, 16, 19, 22, 75, 91, 97, 100, 101, 102, 124, 144, 145, 146, 147, 148, 149, 150, 159], "indic": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 42, 43, 44, 45, 46, 47, 48, 59, 74, 91, 102, 156, 162, 183, 185, 188], "doesn": 11, "create_env_fn": [12, 13, 14, 15, 47, 48], "sequenc": [12, 13, 14, 15, 19, 21, 26, 27, 29, 33, 42, 43, 57, 58, 59, 60, 62, 64, 65, 67, 68, 71, 72, 73, 75, 76, 80, 86, 91, 96, 102, 108, 109, 110, 115, 120, 122, 156, 158, 159, 164, 172, 174, 177], "callabl": [12, 13, 14, 15, 22, 26, 27, 28, 29, 33, 44, 45, 46, 47, 48, 126, 133, 156, 165, 166, 181, 182, 183], "union": [12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 34, 35, 44, 45, 47, 48, 61, 67, 70, 73, 77, 79, 80, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 105, 108, 109, 110, 116, 117, 118, 120, 121, 129, 130, 131, 134, 135, 136, 141, 142, 143, 164, 165, 166, 167, 172, 174, 175, 177, 179, 180, 181, 182, 183], "probabilistictensordictmodul": [12, 13, 14, 15, 120, 126, 127, 132, 133, 165, 166], "tensordictbas": [12, 13, 14, 15, 16, 19, 22, 28, 32, 34, 44, 45, 47, 48, 58, 61, 66, 74, 76, 78, 80, 81, 85, 90, 103, 110, 118, 120, 126, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 159], "total_fram": [12, 13, 14, 15, 159, 161, 179, 188], "int": [12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 59, 60, 61, 64, 66, 67, 70, 71, 77, 78, 79, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 124, 125, 126, 127, 128, 132, 133, 134, 135, 151, 152, 153, 155, 156, 159, 160, 164, 167, 172, 174, 175, 177, 181, 182, 183], "create_env_kwarg": [12, 13, 14, 15, 47, 48], "dict": [12, 13, 14, 15, 19, 20, 22, 33, 44, 45, 47, 48, 77, 80, 91, 92, 93, 94, 95, 100, 101, 102, 110, 155, 165, 166, 167, 174, 177, 181, 182, 183], "max_frames_per_traj": [12, 13, 14, 15, 161], "frames_per_batch": [12, 13, 14, 15, 161], "200": [12, 13, 14, 15, 22, 44, 45, 47, 48, 92, 93, 99, 112, 113], "init_random_fram": [12, 13, 14, 15, 161], "reset_at_each_it": [12, 13, 14, 15], "postproc": [12, 13, 14, 15], "split_traj": [12, 13, 14, 15], "pin_memori": [12, 14, 15, 26, 27, 28, 29, 33, 47, 48, 69, 156], "passing_devic": [12, 13, 14, 15], "update_at_each_batch": [12, 13, 15], "init_with_lag": [12, 13, 14, 15], "exploration_mod": [12, 14, 110, 155], "random": [12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 30, 31, 36, 44, 45, 46, 47, 48, 66, 67, 74, 84, 110, 118, 119, 134, 155, 162], "reset_when_don": [12, 14], "given": [12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 46, 47, 48, 61, 67, 70, 74, 77, 79, 85, 90, 99, 110, 115, 118, 120, 124, 125, 128, 129, 140, 141, 142, 143, 152, 155, 179, 188], "datacollector": [12, 13, 14, 15, 110], "separ": [12, 13, 15, 16, 128, 134, 135], "synchron": [12, 181, 182], "collect": [12, 13, 14, 15, 22, 26, 27, 28, 29, 32, 33, 34, 70, 79, 128, 134, 135, 151, 156, 159, 160, 161, 162, 179, 188], "item": [12, 28, 63, 128, 129, 151, 188], "queri": [12, 13, 14, 15, 22, 44, 45, 47, 48, 70, 76, 80, 120], "between": [12, 13, 14, 15, 22, 44, 45, 47, 48, 66, 72, 75, 77, 91, 102, 110, 132, 137, 155, 159], "recept": 12, "trajectori": [12, 13, 14, 15, 16, 22, 44, 45, 47, 48, 76, 90, 133, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151], "safe": [12, 13, 17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 110, 118], "onlin": [12, 15, 126, 133, 151, 183], "accept": [12, 13, 14, 15, 22, 44, 45, 46, 47, 48, 61, 70, 74, 77, 79, 118, 188], "bound": [12, 13, 14, 15, 18, 19, 22, 23, 44, 45, 47, 48, 80, 110, 112, 113, 118], "total": [12, 13, 14, 15, 45, 127, 132, 133, 151, 153, 155, 159, 161, 162], "frame": [12, 13, 14, 15, 22, 45, 58, 153, 155, 159, 161, 162], "greater": [12, 13, 15], "close": [12, 13, 14, 15, 45, 127, 132, 133], "signal": [12, 13, 15], "sent": [12, 13, 15, 38, 39, 47, 48, 80], "worker": [12, 13, 14, 15, 47, 48, 80, 181, 182, 183], "server": [12, 13, 15], "dictionari": [12, 13, 14, 15, 19, 22, 44, 45, 47, 48, 77, 110, 181, 182, 183, 188], "per": [12, 13, 14, 15, 47, 99, 159, 181, 182], "span": [12, 13, 14, 15], "unless": [12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 47, 48], "reach": [12, 13, 14, 15, 44, 45, 46, 47, 48], "n_steps_max": [12, 13, 14, 15, 22], "wrap": [12, 13, 14, 15, 22, 44, 45, 47, 48, 87, 88, 89, 119], "track": [12, 13, 14, 15, 80, 153], "independ": [12, 13, 14, 15, 76, 135, 188], "neg": [12, 13, 14, 15, 26, 28, 35], "ignor": [12, 13, 14, 15, 22, 44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "length": [12, 13, 14, 15, 17, 47, 48, 90, 91, 92, 94, 97, 102, 118, 151], "equival": [12, 13, 14, 15, 22, 44, 45, 47, 48, 77], "configur": [12, 13, 14, 15, 133, 164, 172, 174, 177], "mainli": [12, 13, 14, 15], "offlin": [12, 13, 14, 15, 188], "whether": [12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 44, 45, 46, 47, 48, 77, 91, 102, 122, 128, 129, 130, 134, 135, 143, 156], "postprocessor": [12, 13, 15], "format": [12, 13, 14, 15, 22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "boolean": [12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 46, 144, 145, 146, 147, 148, 149, 150, 188], "split": [12, 13, 14, 15, 126, 127, 130, 132, 133, 134, 135, 188], "accord": [12, 13, 14, 15, 26, 28, 67, 73, 104, 112, 117, 121], "split_trajectori": [12, 13, 14, 15], "inform": [12, 13, 14, 15, 22, 44, 45, 47, 48, 91, 102, 188], "place": [12, 13, 14, 15, 19, 22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 80, 118, 160, 161], "update_policy_weights_": [12, 13, 14, 15], "dure": [12, 13, 14, 15, 44, 45, 47, 48, 77, 155, 159], "loop": [12, 13, 14, 15, 45, 85, 159, 188], "accommod": [12, 13, 14, 15], "lag": [12, 13, 14, 15], "kept": [12, 13, 14, 15, 47, 48, 76, 85, 117, 121], "origin": [12, 13, 14, 15, 70, 77, 79, 110, 118, 120, 131, 133, 174, 177], "store": [12, 13, 14, 15, 19, 22, 28, 34, 38, 39, 40, 44, 45, 47, 48, 80, 90, 101, 164, 167, 169, 172, 174, 177, 188], "long": [12, 13, 14, 15, 20, 25], "updat": [12, 13, 14, 15, 22, 26, 28, 35, 44, 45, 46, 47, 48, 77, 80, 90, 110, 118, 126, 131, 133, 136, 141, 142, 143, 155, 159, 160, 165, 166, 178, 179, 188], "everi": [12, 13, 15, 19, 22, 25, 41, 44, 45, 47, 48, 61, 70, 76, 78, 79, 80, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 159, 188], "truncat": [12, 13, 14, 15, 121], "help": [12, 13, 14, 15, 22, 44, 45, 47, 48, 185], "desynchron": [12, 13, 14, 15], "match": [12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 47, 48, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 91, 96, 102, 110, 116, 118, 132, 134, 135, 160], "load_state_dict": [12, 13, 14, 15, 22, 44, 45, 47, 48, 77, 80, 188], "state_dict": [12, 13, 14, 15, 22, 44, 45, 47, 48, 77, 80, 188], "ordereddict": [12, 13, 14, 15, 22, 44, 45, 47, 48, 77, 80], "load": [12, 13, 14, 15, 26, 27, 28, 33, 50, 156, 188], "form": [12, 13, 15, 22, 26, 27, 28, 33, 44, 45, 47, 48, 80, 127, 132, 133, 156, 159], "worker0": [12, 13, 15], "state_dict0": [12, 13, 15], "worker1": [12, 13, 15], "state_dict1": [12, 13, 15], "reset_idx": [12, 13, 15], "static_se": [12, 13, 14, 15, 44, 45, 47, 48, 77], "increment": [12, 13, 14, 15, 44, 45, 47, 48, 132], "last": [12, 13, 14, 15, 22, 44, 46, 64, 91, 101, 102, 106, 114], "env_fn": [12, 13, 14, 15, 181, 182], "lambda": [12, 13, 14, 15, 143, 146, 147, 149, 150, 179], "v0": [12, 13, 15, 45, 51, 52, 54, 55, 61, 77, 80, 179], "env_fn_parallel": [12, 13, 14, 15], "6": [12, 13, 14, 15, 67, 91, 96, 101, 102, 116, 122, 164, 167, 169, 172, 174, 177], "syncdatacollector": [12, 13, 15, 179, 182], "out_se": [12, 13, 14, 15], "shutdown": [12, 13, 14, 15], "shut": [12, 13, 14, 15], "down": [12, 13, 14, 15], "irrevers": [12, 13, 15], "arg": [13, 19, 22, 32, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 70, 77, 78, 79, 86, 87, 91, 98, 102, 111, 119, 153, 159, 183], "kwarg": [13, 14, 15, 19, 22, 32, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 70, 74, 77, 78, 79, 86, 87, 91, 92, 93, 94, 95, 98, 100, 102, 103, 108, 109, 110, 111, 116, 118, 119, 120, 121, 127, 132, 140, 153, 159, 164, 165, 166, 167, 172, 174, 177, 180, 181, 182], "occur": [13, 59, 110, 118], "iter": [13, 14, 21, 22, 26, 27, 28, 29, 32, 33, 34, 44, 45, 47, 48, 67, 80, 91, 102, 110, 115, 118, 120, 139, 155, 156, 158, 159, 164, 172, 174, 177, 188], "envcreat": [14, 179, 180, 183], "return_in_plac": 14, "return_same_td": 14, "constructor": [14, 76, 164, 167, 169, 172, 174, 177, 180, 183], "stop": [14, 44, 45, 47, 48], "equat": [14, 127, 136], "exce": 14, "batcher": 14, "yield": [14, 22, 44, 45, 47, 48], "cautious": [14, 133], "ad": [14, 22, 26, 27, 28, 29, 32, 33, 34, 35, 44, 45, 47, 48, 77, 104, 105, 127, 132, 133, 156], "whole": [14, 22, 44, 45, 47, 48, 77, 151], "content": [14, 91, 102], "ident": [14, 47, 48, 181, 182], "chunk": 14, "policy_state_dict": 14, "env_state_dict": 14, "singl": [15, 22, 26, 27, 28, 29, 32, 33, 34, 44, 45, 47, 48, 58, 59, 75, 91, 101, 102, 120, 130, 134, 146, 147, 149, 150, 156, 174, 183], "paradigm": 15, "regular": [15, 110, 118, 125, 130, 160, 188], "prefer": 15, "mere": 15, "multiasyncdatacollector": [15, 181], "rollout_tensordict": 16, "traj_id": 16, "zero": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 47, 48, 59, 67, 90, 101, 119], "pad": [16, 91, 92, 93, 101], "max": [16, 25, 116, 117, 121, 127, 134, 135], "durat": 16, "int64": [17, 20, 21, 25, 98, 111, 124, 125, 169], "discret": [17, 20, 21, 25, 108, 124, 125, 130], "assert_is_in": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31], "belong": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31], "rais": [17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 47, 48, 63, 77], "except": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 44, 63, 108, 119], "otherwis": [17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 47, 48, 67, 74, 77, 80, 117, 121, 135, 155, 188], "encod": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 98, 107, 108, 111, 112, 124, 125], "val": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31], "ndarrai": [17, 18, 19, 20, 21, 23, 24, 25, 26, 30, 31, 45], "np": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 45], "slice": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31], "tensor_to_index": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31], "is_in": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31], "back": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 110, 118], "heurist": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31], "rand": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 46, 90, 119], "uniform": [17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 30, 31, 35], "unbound": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31], "to_numpi": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31], "transformed_in": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 76, 77, 116, 183], "type_check": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31], "whose": [17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "point": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 35, 42, 43, 44, 45, 47, 48, 58, 61, 70, 74, 75, 77, 79, 103, 118, 130, 142, 143, 159, 185], "fill": [17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 74], "minimum": [18, 23, 72, 99, 109, 116, 117, 121, 135, 151], "float": [18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 35, 44, 45, 47, 48, 61, 62, 67, 70, 72, 73, 74, 75, 77, 79, 80, 96, 99, 104, 105, 112, 113, 116, 118, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 156, 157], "unidimension": [18, 25, 31], "upper": [18, 23], "composit": 19, "unnam": 19, "tupl": [19, 22, 26, 33, 44, 45, 47, 48, 67, 92, 101, 102, 110, 118, 120, 128, 168, 170, 173, 176], "effect": [19, 22, 44, 45, 47, 48, 77, 159], "cannot": 19, "pixels_spec": 19, "ndboundedtensorspec": [19, 87, 88, 89, 109], "32": [19, 91, 92, 93, 100, 102, 106, 107], "observation_vector_spec": 19, "33": [19, 22, 44, 45, 47, 48, 91, 102], "composite_spec": 19, "observation_vector": [19, 59, 164, 167, 172, 174, 177], "td": [19, 49, 50, 51, 52, 54, 59, 62, 67, 75, 77, 80, 85, 86, 87, 88, 89, 90, 98, 103, 109, 110, 111, 118, 119, 120, 122, 124, 125, 142, 143, 146, 147, 149, 150, 151, 158, 164, 167, 169, 172, 174, 177], "within": [19, 22, 34, 44, 45, 47, 48, 61, 70, 76, 78, 79, 80, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "randn": [19, 67, 86, 87, 88, 89, 98, 101, 109, 110, 111, 118, 120, 122, 124, 125, 158], "td_project": 19, "modif": [19, 22, 44, 45, 47, 48], "after": [19, 22, 44, 45, 47, 48, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 104], "ob": [19, 62, 67, 75, 122], "yield_nesting_kei": 19, "keysview": 19, "selected_kei": [19, 47, 48], "altern": 20, "onehottensorspec": 20, "categor": [20, 25, 108, 124, 125], "memori": [20, 22, 38, 44, 45, 47, 48, 61, 70, 74, 77, 79, 80, 118, 183, 188], "larg": 20, "action_valu": [20, 25, 98, 111, 124, 125, 169], "arang": [20, 25, 98, 124, 151], "view": [20, 22, 25, 44, 45, 47, 48, 102, 124], "argmax": [20, 98, 111, 124, 125], "dim": [20, 59, 115, 183], "chosen_action_valu": [20, 25, 111, 169], "outcom": [20, 25, 96, 116], "nvec": 21, "use_regist": [21, 25], "concaten": [21, 58, 59, 76, 102, 120], "hot": [21, 25, 98, 108, 111, 124, 125], "cardin": [21, 124, 125], "element": [21, 25, 26, 27, 28, 29, 32, 33, 34, 35, 38, 39, 40, 91, 118, 151, 156], "gamma": [22, 126, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 179], "present": [22, 26, 35, 44, 45, 47, 48, 92, 93, 94, 95, 100, 105, 118, 120, 126, 127, 130, 132, 133, 134, 135, 183, 188], "sutton": 22, "r": [22, 67, 110, 140], "1988": 22, "predict": [22, 99, 103, 130, 135, 140], "tempor": [22, 142], "44": 22, "discount": [22, 126, 127, 128, 129, 130, 132, 133, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "factor": [22, 105, 117, 121, 126, 127, 128, 129, 130, 132, 133, 134], "ahead": 22, "add_modul": [22, 44, 45, 47, 48], "add": [22, 26, 27, 28, 29, 32, 33, 34, 42, 43, 44, 45, 47, 48, 104, 126, 156], "child": [22, 44, 45, 47, 48], "current": [22, 44, 45, 47, 48, 53, 77, 82, 99, 101, 113, 124, 125, 164, 172, 188], "fn": [22, 44, 45, 47, 48, 181, 182], "recurs": [22, 44, 45, 47, 48], "submodul": [22, 44, 45, 47, 48], "children": [22, 44, 45, 47, 48], "init": [22, 44, 45, 47, 48], "no_grad": [22, 44, 45, 47, 48], "init_weight": [22, 44, 45, 47, 48], "m": [22, 44, 45, 47, 48, 110], "linear": [22, 44, 45, 46, 47, 48, 61, 70, 74, 77, 79, 86, 87, 88, 89, 90, 91, 102, 104, 105, 109, 111, 112, 113, 118, 119, 120, 122, 124, 125, 179], "fill_": [22, 44, 45, 47, 48], "net": [22, 44, 45, 47, 48, 101, 110, 134, 174, 179], "in_featur": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 87, 91, 92, 93, 94, 95, 101, 102, 104, 105, 118], "out_featur": [22, 44, 45, 46, 47, 48, 61, 70, 74, 77, 79, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 104, 105, 118], "bia": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 91, 99, 102, 104, 105, 118, 119], "requires_grad": [22, 44, 45, 47, 48], "bfloat16": [22, 44, 45, 47, 48], "cast": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 80, 118, 164, 167, 169, 172, 174, 177], "datatyp": [22, 44, 45, 47, 48], "direct": [22, 44, 45, 47, 48], "member": [22, 44, 45, 47, 48], "xdoctest": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "skip": [22, 44, 45, 47, 48, 77, 110, 153, 155], "buf": [22, 44, 45, 47, 48], "20l": [22, 44, 45, 47, 48], "1l": [22, 44, 45, 47, 48], "5l": [22, 44, 45, 47, 48], "immedi": [22, 44, 45, 47, 48, 140], "associ": [22, 44, 45, 47, 48, 112, 183], "construct": [22, 44, 45, 47, 48, 110, 113, 159, 164, 172], "optim": [22, 44, 45, 47, 48, 90, 104, 105, 133, 135, 159, 164, 172, 179, 188], "copi": [22, 44, 45, 47, 48, 77], "doubl": [22, 24, 31, 44, 45, 47, 48, 61, 62, 70, 74, 75, 77, 79, 118, 129, 130, 131, 134, 136], "eval": [22, 44, 45, 47, 48, 77, 80], "evalu": [22, 44, 45, 47, 48, 77, 96, 108, 121, 134, 165, 166], "certain": [22, 44, 45, 47, 48, 77, 132], "particular": [22, 44, 45, 47, 48, 77, 188], "behavior": [22, 44, 45, 47, 48, 77], "affect": [22, 44, 45, 47, 48, 76, 77], "dropout": [22, 44, 45, 47, 48, 77], "batchnorm": [22, 44, 45, 47, 48, 77], "disabl": [22, 44, 45, 47, 48, 77, 117, 121], "gradient": [22, 44, 45, 47, 48, 77, 105, 117, 121, 126, 140, 141, 142, 143, 159], "comparison": [22, 44, 45, 47, 48, 77], "sever": [22, 44, 45, 47, 48, 59, 77, 133], "similar": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 80, 85, 110, 118], "mechan": [22, 44, 45, 47, 48, 77], "confus": [22, 44, 45, 47, 48, 77], "extra_repr": [22, 44, 45, 47, 48], "represent": [22, 44, 45, 47, 48, 70, 79], "string": [22, 44, 45, 47, 48, 110, 158, 164, 172, 174, 177], "forward": [22, 44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 107, 110, 112, 113, 115, 118, 119, 120, 122, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 141, 142, 143], "tennsordict": 22, "dimens": [22, 58, 59, 64, 67, 75, 78, 91, 102, 104, 105, 114, 115, 116, 117, 126, 127, 130, 132, 133, 134, 135, 183], "shift": 22, "nontermin": 22, "non": [22, 26, 28, 44, 45, 47, 48, 57, 61, 70, 74, 77, 79, 118], "termin": 22, "original_reward": 22, "newli": 22, "get_buff": [22, 44, 45, 47, 48], "target": [22, 44, 45, 47, 48, 76, 110, 118, 128, 129, 130, 131, 132, 134, 135, 136, 140, 161, 178, 179, 188], "throw": [22, 44, 45, 47, 48], "docstr": [22, 44, 45, 47, 48], "get_submodul": [22, 44, 45, 47, 48], "explan": [22, 44, 45, 47, 48], "how": [22, 26, 28, 35, 44, 45, 47, 48, 127, 131, 132, 133, 159, 185], "fulli": [22, 44, 45, 47, 48], "qualifi": [22, 44, 45, 47, 48], "referenc": [22, 44, 45, 47, 48], "attributeerror": [22, 44, 45, 47, 48], "invalid": [22, 44, 45, 47, 48], "resolv": [22, 44, 45, 47, 48], "someth": [22, 44, 45, 47, 48, 185], "get_extra_st": [22, 44, 45, 47, 48, 80], "set_extra_st": [22, 44, 45, 47, 48, 80], "picklabl": [22, 44, 45, 47, 48, 80], "ensur": [22, 26, 28, 35, 44, 45, 47, 48, 70, 80], "break": [22, 44, 45, 47, 48, 80], "pickl": [22, 44, 45, 47, 48, 80], "get_paramet": [22, 44, 45, 47, 48], "sai": [22, 44, 45, 47, 48], "net_b": [22, 44, 45, 47, 48], "net_c": [22, 44, 45, 47, 48], "conv": [22, 44, 45, 47, 48, 91], "conv2d": [22, 44, 45, 47, 48, 91], "16": [22, 44, 45, 47, 48], "kernel_s": [22, 44, 45, 47, 48, 91, 92, 93], "stride": [22, 44, 45, 47, 48, 91, 92, 93, 100], "100": [22, 44, 45, 47, 48, 67, 84, 152, 159, 179], "diagram": [22, 44, 45, 47, 48], "show": [22, 44, 45, 47, 48], "itself": [22, 44, 45, 47, 48], "would": [22, 44, 45, 47, 48, 102, 188], "degre": [22, 44, 45, 47, 48], "named_modul": [22, 44, 45, 47, 48], "o": [22, 44, 45, 47, 48], "transit": [22, 44, 45, 47, 48], "alwai": [22, 44, 45, 47, 48, 66], "half": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "ipu": [22, 44, 45, 47, 48], "strict": [22, 44, 45, 47, 48, 77], "descend": [22, 44, 45, 47, 48, 77], "exactli": [22, 44, 45, 47, 48, 53, 77, 119], "persist": [22, 44, 45, 47, 48, 77], "strictli": [22, 44, 45, 47, 48, 77], "enforc": [22, 44, 45, 47, 48, 77], "missing_kei": [22, 44, 45, 47, 48, 77], "unexpected_kei": [22, 44, 45, 47, 48, 77], "unexpect": [22, 44, 45, 47, 48, 77], "namedtupl": [22, 44, 45, 47, 48, 77], "regist": [22, 25, 44, 45, 47, 48, 61, 70, 76, 77, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 188], "network": [22, 44, 45, 47, 48, 84, 87, 88, 89, 91, 92, 93, 94, 95, 97, 99, 100, 102, 105, 106, 107, 112, 113, 114, 118, 128, 129, 130, 131, 134, 135, 136, 138, 164, 167, 172, 178, 179, 188], "duplic": [22, 44, 45, 47, 48, 129, 130], "l": [22, 44, 45, 47, 48, 140], "idx": [22, 44, 45, 47, 48], "enumer": [22, 44, 45, 47, 48], "named_buff": [22, 44, 45, 47, 48], "prefix": [22, 44, 45, 47, 48, 77], "remove_dupl": [22, 44, 45, 47, 48], "prepend": [22, 44, 45, 47, 48], "running_var": [22, 44, 45, 47, 48], "named_children": [22, 44, 45, 47, 48], "conv4": [22, 44, 45, 47, 48], "conv5": [22, 44, 45, 47, 48], "memo": [22, 44, 45, 47, 48], "alreadi": [22, 44, 45, 47, 48, 110], "named_paramet": [22, 44, 45, 47, 48], "param": [22, 44, 45, 46, 47, 48, 96, 109, 110, 111, 116, 118, 119, 120, 122, 124, 125, 136, 139, 141, 142, 143, 167], "register_backward_hook": [22, 44, 45, 47, 48], "removablehandl": [22, 44, 45, 47, 48], "deprec": [22, 44, 45, 47, 48, 77, 88], "favor": [22, 44, 45, 47, 48], "register_full_backward_hook": [22, 44, 45, 47, 48], "futur": [22, 44, 45, 47, 48, 70, 77, 79, 102, 185], "register_buff": [22, 44, 45, 47, 48], "consid": [22, 44, 45, 47, 48, 96, 116], "running_mean": [22, 44, 45, 47, 48], "save": [22, 44, 45, 47, 48, 159, 188], "alongsid": [22, 44, 45, 47, 48], "latter": [22, 44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 181, 182], "num_featur": [22, 44, 45, 47, 48], "register_forward_hook": [22, 44, 45, 47, 48, 124, 125], "with_kwarg": [22, 44, 45, 47, 48], "posit": [22, 32, 33, 34, 44, 45, 47, 48, 77, 78], "won": [22, 44, 45, 47, 48, 70, 79, 159, 183], "inplac": [22, 44, 45, 47, 48], "signatur": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "possibli": [22, 44, 45, 47, 48, 91, 110, 118, 159], "user": [22, 44, 45, 47, 48, 77, 101, 180, 188], "fire": [22, 44, 45, 47, 48], "register_module_forward_hook": [22, 44, 45, 47, 48], "register_forward_pre_hook": [22, 44, 45, 47, 48], "invok": [22, 32, 44, 45, 47, 48], "either": [22, 44, 45, 47, 48, 167, 188], "And": [22, 44, 45, 47, 48], "forward_pr": [22, 44, 45, 47, 48], "register_module_forward_pre_hook": [22, 44, 45, 47, 48], "respect": [22, 44, 45, 47, 48, 57, 61, 70, 74, 77, 79, 113, 118, 122], "grad_input": [22, 44, 45, 47, 48], "grad_output": [22, 44, 45, 47, 48], "subsequ": [22, 44, 45, 47, 48, 120], "entri": [22, 44, 45, 47, 48], "technic": [22, 44, 45, 47, 48], "reason": [22, 44, 45, 47, 48, 70], "receiv": [22, 44, 45, 47, 48, 76, 102], "similarli": [22, 44, 45, 47, 48, 120], "caller": [22, 44, 45, 47, 48], "register_module_full_backward_hook": [22, 44, 45, 47, 48], "register_full_backward_pre_hook": [22, 44, 45, 47, 48], "backward_pr": [22, 44, 45, 47, 48], "register_module_full_backward_pre_hook": [22, 44, 45, 47, 48], "register_load_state_dict_post_hook": [22, 44, 45, 47, 48], "post": [22, 44, 45, 47, 48], "incompatible_kei": [22, 44, 45, 47, 48], "consist": [22, 44, 45, 47, 48, 91, 102, 110], "addit": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "thrown": [22, 44, 45, 47, 48], "clear": [22, 44, 45, 47, 48, 152], "avoid": [22, 44, 45, 47, 48, 77, 80, 118, 161], "register_modul": [22, 44, 45, 47, 48, 188], "alia": [22, 44, 45, 47, 48], "register_paramet": [22, 44, 45, 47, 48], "requires_grad_": [22, 44, 45, 47, 48], "autograd": [22, 44, 45, 47, 48, 77], "record": [22, 44, 45, 47, 48, 133, 179, 188], "freez": [22, 44, 45, 47, 48], "finetun": [22, 44, 45, 47, 48], "individu": [22, 44, 45, 47, 48], "gan": [22, 44, 45, 47, 48], "share_memori": [22, 44, 45, 47, 48], "share_memory_": [22, 44, 45, 47, 48], "destin": [22, 44, 45, 47, 48, 77, 85], "keep_var": [22, 44, 45, 47, 48, 77], "averag": [22, 44, 45, 47, 48, 77, 80, 157], "shallow": [22, 44, 45, 47, 48, 77], "pleas": [22, 44, 45, 47, 48, 77, 185], "design": [22, 25, 44, 45, 47, 48, 77, 126, 127, 130, 132, 133, 134, 135], "detach": [22, 44, 45, 47, 48, 77], "non_block": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "memory_format": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "channels_last": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "Its": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "complex": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "integr": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 95, 118], "unchang": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "tri": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "convert": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 80, 118], "host": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "pin": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "4d": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "ignore_w": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "1913": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "3420": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "5113": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "2325": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "torch_doctest_cuda1": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "gpu1": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "1914": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "5112": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "2324": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "float16": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "cdoubl": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "3741": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "j": [22, 26, 35, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118, 188], "2382": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "5593": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "4443": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "complex128": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "6122": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "1150": [22, 44, 45, 47, 48, 61, 70, 74, 77, 79, 118], "to_empti": [22, 44, 45, 47, 48], "dst_type": [22, 44, 45, 47, 48], "xpu": [22, 44, 45, 47, 48], "zero_grad": [22, 44, 45, 47, 48, 188], "set_to_non": [22, 44, 45, 47, 48], "context": [22, 44, 45, 47, 48, 104, 138, 139, 141, 144, 145, 148, 155], "grad": [22, 44, 45, 47, 48], "dimension": [23, 24, 141, 144, 145, 148], "keepdim": 25, "sum": [25, 45, 140], "user_regist": 25, "experiment": [25, 110], "onto": [25, 110, 118], "appear": 25, "priori": 25, "definit": [25, 41], "uniqu": 25, "discretebox": 25, "alpha": [26, 28, 35, 91, 134, 135], "beta": [26, 28, 35, 132], "ep": [26, 28, 35, 80, 119, 127, 136, 157], "1e": [26, 28, 35, 80, 96, 99, 116], "08": [26, 28, 35], "collate_fn": [26, 27, 28, 29, 33, 156], "prefetch": [26, 27, 28, 29, 33, 156], "priorit": [26, 28, 35, 128, 129, 134, 135], "schaul": [26, 35], "quan": [26, 35], "antonogl": [26, 35], "silver": [26, 35], "2015": [26, 35], "arxiv": [26, 35, 58, 70, 92, 93, 94, 95, 99, 100, 105, 106, 107, 112, 113, 124, 126, 130, 131, 133, 135, 136, 141, 144, 145, 148, 164, 167, 172, 177], "ab": [26, 35, 70, 80, 99, 100, 105, 106, 107, 112, 113, 126, 131, 133, 164, 172], "1511": [26, 35, 100], "05952": [26, 35], "expon": [26, 28, 35], "\u03b1": [26, 28, 35], "determin": [26, 28, 35, 70, 79], "delta": [26, 28, 35, 110, 116], "prioriti": [26, 28, 34, 35, 38, 39, 40, 41, 128, 129, 134, 135, 188], "null": [26, 28, 35, 57], "merg": [26, 27, 28, 33, 156], "mini": [26, 27, 28, 33, 156], "style": [26, 27, 28, 33, 156], "rb": [26, 27, 28, 33, 156], "multithread": [26, 27, 28, 33, 156], "instanti": [26, 27, 28, 47, 48, 76, 156], "extend": [26, 27, 28, 29, 32, 33, 34, 42, 43, 156, 188], "gather": [26, 28, 140, 162, 185], "multinomi": [26, 28], "update_prior": [26, 28, 35, 188], "circular": [27, 156], "randomli": [27, 29, 66, 67, 74, 110, 156], "select": [27, 28, 29, 32, 33, 34, 47, 48, 66, 90, 120, 156, 158], "priority_kei": [28, 34, 129, 130, 135], "td_error": [28, 34, 128, 129, 130, 134, 135], "prioritizedreplaybuff": 28, "flaot": 28, "return_weight": 28, "_weight": 28, "replaybuff": [29, 32, 34, 43, 175, 179], "meta": [30, 188], "describ": [30, 59, 76, 116, 117, 164, 172], "what": [30, 44, 45, 47, 48, 74, 185], "replay_buff": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 179], "rb_prototyp": [32, 33, 34], "remot": [32, 47, 48], "invoc": 32, "friendli": 32, "public": 32, "rpc": 32, "normal": [32, 67, 80, 91, 102, 110, 117, 121, 155, 157, 183, 188], "append": [32, 33, 34, 85], "insert_transform": [32, 33, 34], "insert": [32, 33, 34, 42, 43, 78], "include_info": [32, 34], "sampler": [32, 33, 34, 35, 36, 38, 39, 40, 41], "writer": [33, 42], "max_siz": [33, 38, 40, 41], "1_000": 33, "randomsampl": 33, "roundrobinwrit": 33, "kw": [34, 42], "max_capac": 35, "uniformli": 36, "scratch_dir": 38, "memmap": [38, 47, 48, 80], "attach": [38, 39, 40, 41], "entiti": [38, 39, 40, 41], "made": [38, 39, 40, 41], "eg": [38, 39, 40, 41], "alloc": 39, "__len__": 41, "roundrobin": 42, "piec": [42, 43], "_inplace_upd": [44, 47, 48, 77], "_batch_lock": [44, 47, 48, 77], "is_don": [44, 46], "run_type_check": [44, 46], "compar": [44, 155], "rand_step": [44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 80], "batch_lock": [44, 45, 47, 48, 77], "environn": [44, 45, 46, 47, 48, 77], "immut": [44, 45, 47, 48, 77, 164, 172], "fake_tensordict": [44, 45, 47, 48], "fake": [44, 45, 47, 48], "overridden": [44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "although": [44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120, 188], "recip": [44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "afterward": [44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "former": [44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "silent": [44, 45, 47, 48, 61, 70, 76, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 120], "info": [44, 45, 47, 48, 81], "_step": [44, 45, 47, 48], "privat": [44, 45, 47, 48], "_reset": [44, 45, 46, 47, 48, 90], "overwritten": [44, 45, 47, 48, 85, 119], "callback": [44, 45, 47, 48], "auto_reset": [44, 45, 47, 48], "auto_cast_to_devic": [44, 45, 47, 48], "break_when_any_don": [44, 45, 47, 48], "return_contigu": [44, 45, 47, 48], "soon": [44, 45, 47, 48], "smaller": [44, 45, 47, 48], "automat": [44, 45, 47, 48, 67, 86, 109], "lazystackedtensordict": [44, 45, 46, 47, 48], "concomitt": [44, 45, 47, 48], "eras": [44, 45, 47, 48], "workspac": [44, 45, 47, 48], "carri": [44, 45, 47, 48], "discard": [45, 85], "info_dict_read": 45, "set_info_dict_read": 45, "put": [45, 80, 183], "f": [45, 110], "read_act": 45, "read_don": 45, "reader": 45, "frame_skip": [45, 49, 50, 51, 54, 153, 155, 161, 188], "broken": 45, "read_ob": 45, "dictat": [45, 110], "inner": [45, 110, 188], "read_reward": 45, "total_reward": 45, "step_reward": 45, "far": [45, 117, 121], "baseinfodictread": 45, "info_dict": 45, "hoc": 45, "manner": [45, 70], "dict_read": 45, "gymwrapp": 45, "default_info_dict_read": 45, "my_info_kei": 45, "some_env": 45, "meant": 46, "world": 46, "limit": [46, 47, 48], "safeti": 46, "constraint": 46, "behav": [46, 53, 108, 119], "classic": 46, "directli": [46, 183], "ndunboundedcontinuoustensorspec": [46, 74, 86, 87, 88, 89, 90, 110, 118, 119, 120, 122], "mymbenv": [46, 90], "world_model": [46, 90], "super": [46, 90, 122, 124], "hidden_observ": [46, 90], "mlp": [46, 87, 90, 91, 92, 93, 94, 95, 98, 101, 164, 172, 174, 177], "worldmodelwrapp": [46, 90], "activation_class": [46, 90, 91, 92, 93, 94, 95, 99, 100, 102], "relu": [46, 90], "activate_last_lay": [46, 90, 95, 102], "depth": [46, 90, 91, 92, 93, 94, 95, 98, 99, 100, 102, 106, 107], "equal": [47, 48, 66, 91, 97, 102, 137, 151, 181, 182], "my_env_fun": [47, 48], "custom_attribute_list": [47, 48], "custom_attribut": [47, 48], "custom_method_list": [47, 48], "custom_method": [47, 48], "num_work": [47, 48], "deploi": [47, 48], "creation": [47, 48], "divers": [47, 48], "slight": [47, 48], "overhead": [47, 48], "env_input_kei": [47, 48], "permit": [47, 48], "drastic": [47, 48], "decreas": [47, 48], "io": [47, 48], "burden": [47, 48], "_batchedenv": [47, 48], "might": [47, 48, 185], "next_pixel": [47, 48], "next_vector": [47, 48], "amount": [47, 48], "occupi": [47, 48], "excluded_kei": [47, 48], "exclud": [47, 48], "share_individual_td": [47, 48], "lazi": [47, 48, 70, 104, 110, 118, 120], "shared_memori": [47, 48], "policy_proof": [47, 48], "ll": [47, 48], "hidden": [47, 48, 87, 88, 89, 99, 101, 106, 107, 110, 112, 113, 118, 120, 164, 172], "infer": [47, 48, 80, 104, 135], "allow_step_when_don": [47, 48], "encount": [47, 48, 185], "update_kwarg": [47, 48], "dm_control": [49, 50], "env_nam": [49, 51, 54], "task_nam": 49, "cheetah": [49, 50], "suit": 50, "serv": 53, "placehold": [53, 77], "secur": 53, "jumanji": [54, 55], "snake": [54, 55], "6x6": [54, 55], "jumanju": 55, "td0": 55, "td1": 55, "model_bas": [56, 90], "dreamer": [56, 99], "transform_reward_spec": [57, 61, 62, 70, 72, 73, 76, 78, 79], "cat_dim": 58, "success": [58, 76], "account": 58, "movement": 58, "veloc": 58, "propos": [58, 103, 131, 136, 174, 177], "plai": 58, "atari": 58, "pdf": [58, 92, 93, 94, 95, 124, 130, 134, 135, 136, 141, 144, 145, 148, 167, 174, 177], "1312": 58, "5602": 58, "along": [58, 59, 75, 102, 105, 110, 118], "tranform": [58, 61, 70, 74, 76, 79, 81], "transform_observation_spec": [58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 74, 75, 76, 78, 79], "del_kei": 59, "unsqueeze_if_oor": 59, "observation_posit": 59, "observation_veloc": 59, "delet": 59, "unsqueez": [59, 75, 78, 101], "key1": [59, 151, 158], "key2": [59, 151, 158], "_": [59, 62, 67, 75, 80, 98, 110, 111, 118, 120, 124, 125], "w": [60, 71, 75], "crop": 60, "center": 60, "width": [60, 71], "height": [60, 71], "squar": [60, 117, 121], "rewardsc": [61, 77], "rewardclip": 61, "transformed_env": [61, 76, 77], "dest": [61, 70, 79, 118], "transform_input_spec": [61, 62, 70, 76, 78, 79], "finit": 63, "first_dim": 64, "last_dim": 64, "flatten": 64, "adjac": 64, "turn": [65, 155], "noop": 66, "30": [66, 112, 113], "op": [66, 160], "noop_max": 66, "loc": [67, 73, 87, 89, 109, 110, 117, 120, 121, 162, 164, 172, 174, 177, 183], "standard_norm": [67, 73], "affin": [67, 73], "layer": [67, 80, 91, 92, 93, 99, 102, 104, 105, 106, 107, 114, 115, 123], "set_default_tensor_typ": 67, "doubletensor": 67, "std": [67, 80], "isclos": 67, "next_ob": 67, "normalis": 67, "stat": [67, 162, 183], "rubric": [67, 120], "manual_se": 67, "init_stat": 67, "3752e": 67, "01": [67, 126, 127, 132, 133], "5087e": 67, "03": 67, "9294e": 67, "9636": 67, "5608": 67, "6408": 67, "num_it": 67, "reduce_dim": 67, "constant": [67, 188], "ideal": 67, "statist": [67, 80, 183], "approach": 67, "gaussian": [67, 90, 104, 105], "empir": [67, 90, 110], "deviat": [67, 80, 90, 99, 104, 105, 133], "summari": [67, 80], "r3m": 70, "resnet": [70, 79], "visual": [70, 79], "embed": [70, 79, 87, 88, 89, 118], "ego4d": [70, 79], "paper": [70, 79, 131, 174, 177], "univers": [70, 79], "manipul": 70, "suraj": 70, "nair": 70, "aravind": 70, "rajeswaran": 70, "vikash": [70, 79], "kumar": [70, 79], "chelsea": 70, "finn": 70, "abhinav": 70, "gupta": 70, "2203": 70, "12601": 70, "_init": 70, "snippet": 70, "resenet50": 70, "model_nam": [70, 79], "resnet50": [70, 79], "resnet34": 70, "resnet18": 70, "left": [70, 79], "empti": [70, 77, 79], "r3m_vec": 70, "feed": [70, 79], "244": [70, 79], "hub": [70, 79], "cach": [70, 77, 79, 152], "download_path": [70, 79], "tensor_pixels_kei": [70, 79], "interpol": 71, "bilinear": 71, "clamp_min": 72, "clamp_max": 72, "clip": [72, 127, 159], "clip_min": 72, "scalar": [72, 93, 95, 104, 105, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "clip_max": 72, "default_valu": 74, "primer": 74, "popul": 74, "drawn": [74, 110], "rel": [74, 96, 116], "fix": [74, 135], "chosen": [74, 164, 172, 174, 177], "mykei": 74, "dtype_or_devic": 74, "255": 75, "precis": 75, "ri": 75, "randint": 75, "out_keys_inv": 76, "principl": 76, "combin": 76, "cattransform": 76, "notabl": 76, "cache_spec": 77, "valid": [77, 91, 102, 132, 188], "anymor": [77, 118], "unsqueeze_dim": 78, "vip": 79, "toward": 79, "implicit": 79, "jason": 79, "ma": 79, "shagun": 79, "sodhani": 79, "dinesh": 79, "jayaraman": 79, "osbert": 79, "bastani": 79, "ami": 79, "zhang": 79, "vip_vec": 79, "shared_td": 80, "lock": 80, "decai": [80, 134, 157], "9999": 80, "0001": [80, 99, 157], "fly": [80, 132], "substitut": 80, "to_observation_norm": 80, "rate": [80, 140], "99": [80, 126, 127, 132, 133, 134, 135, 140, 179], "numer": [80, 110, 117, 118, 121], "underflow": 80, "1000": [80, 110, 131, 179], "static": 80, "build_td_for_shared_vecnorm": 80, "across": [80, 160], "memmori": 80, "memmap_": 80, "multiprocess": 80, "mp": 80, "queue": 80, "td_share": 80, "v": [80, 101, 135], "observationnorm": [80, 183], "state_dim": [81, 112, 113], "action_dim": [81, 92, 94], "gsde": [81, 134, 183], "nois": [81, 105, 123, 134, 155, 183], "func": 81, "gsdemodul": 81, "probabilistictdmodul": [84, 102, 110, 135, 140, 155], "actor": [84, 87, 88, 89, 90, 92, 94, 98, 99, 109, 111, 124, 125, 126, 127, 128, 132, 133, 134, 135, 164, 167, 169, 172, 174, 177], "default_interaction_mod": [84, 110], "next_tensordict": 85, "keep_oth": 85, "exclude_reward": 85, "exclude_don": 85, "exclude_act": 85, "_run_check": 85, "reflect": [85, 161], "renam": 85, "next_": 85, "funtion": 85, "td_out": [85, 151, 158], "make_polici": 85, "next_td": 85, "next_observ": [85, 101], "translat": [86, 109], "td_modul": [86, 87, 88, 89, 109, 110, 118, 119, 120, 122], "critic": [87, 126, 127, 132, 133, 135], "get_policy_oper": [87, 88, 89, 164, 172], "alon": [87, 88, 89], "tdmodul": [87, 88, 89, 110, 179], "get_critic_oper": 87, "common_oper": [87, 89], "produc": [87, 89, 91, 102, 108, 110], "policy_oper": [87, 88, 89], "value_oper": [87, 88, 89], "tensordict_modul": [87, 88, 89, 109, 110, 111, 119, 120, 124, 125], "probabilisticactor": [87, 89, 135], "valueoper": [87, 88, 89, 126, 127, 132, 133, 179], "tanhnorm": [87, 88, 89, 109, 110, 120], "normalparamwrapp": [87, 89, 109, 110, 120], "spec_hidden": [87, 89], "module_hidden": [87, 89], "td_module_hidden": [87, 89], "spec_act": [87, 88, 89], "8": [87, 88, 89, 91, 92, 93, 100, 102, 109, 110, 118, 120], "module_act": [87, 88, 89], "td_module_act": [87, 88, 89], "dist_in_kei": [87, 89, 109, 110, 120], "sample_out_kei": [87, 89, 109, 110, 120], "distribution_class": [87, 88, 89, 109, 110, 120], "return_log_prob": [87, 88, 89, 110, 120], "module_valu": [87, 88, 89], "num_cel": [87, 91, 92, 93, 94, 95, 99, 100, 102], "td_module_valu": [87, 88, 89], "state_action_valu": [87, 122, 140, 167, 174, 177, 179], "td_clone": [87, 88, 89], "clone": [87, 88, 89, 110, 118, 119, 120, 164, 172, 174, 177], "sample_log_prob": [87, 88, 89, 110, 120, 164, 172, 174], "tensordictmodulewrapp": [87, 165, 166, 179], "estim": [87, 88, 89, 126, 127, 132, 133, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "get_value_oper": [87, 88, 89, 164, 172], "probabilisticactor_deprec": 88, "state_valu": [88, 89, 122, 142, 143, 144, 145, 146, 148, 149, 164, 172, 177], "tensordictsequenti": [88, 89], "planning_horizon": 90, "optim_step": 90, "num_candid": 90, "num_top_k_candid": 90, "reward_kei": 90, "action_kei": [90, 103], "cross": 90, "entropi": [90, 126, 127, 132, 133, 134, 135], "botev": 90, "et": 90, "al": [90, 169], "2013": 90, "cem": 90, "plan": [90, 103], "unit": [90, 99, 106, 107, 112, 113], "varianc": [90, 117, 121], "cumul": 90, "rank": 90, "top": 90, "k": 90, "episod": [90, 144, 145, 146, 147, 148, 149, 150], "repeat": 90, "maximis": [90, 92, 94], "horizon": 90, "modelbasedenv": 90, "mpc": [90, 103], "candid": 90, "modelbasedenvbas": [90, 103], "next_hidden_observ": 90, "5": [90, 91, 98, 99, 102, 111, 117, 119, 121, 124, 125, 132], "elu": [91, 92, 93, 94, 95, 99, 100], "activation_kwarg": [91, 102], "norm_class": [91, 92, 93, 102], "norm_kwarg": [91, 102], "bias_last_lay": [91, 92, 93, 94, 95, 100, 102], "aggregator_class": [91, 92, 93], "squashdim": [91, 92], "aggregator_kwarg": [91, 92, 93], "squeeze_output": [91, 92, 93], "convolut": [91, 92, 93, 114], "neural": [91, 114, 118], "len": [91, 102], "cell": [91, 102], "kernel": [91, 100, 101], "tanh": [91, 102, 116, 117, 121], "aggreg": [91, 92, 93, 120], "squeez": [91, 114, 115], "singleton": [91, 102, 114, 115], "device_typ": [91, 92, 93, 94, 95, 100, 102, 104, 105], "cnet": 91, "34": [91, 102], "35": [91, 102], "rectangular": 91, "conv_net_kwarg": [92, 93], "mlp_net_kwarg": [92, 93, 94], "use_avg_pool": [92, 93], "WITH": [92, 93, 94, 95, 136, 167], "1509": [92, 93, 94, 95, 131, 136, 167], "02971": [92, 93, 94, 95, 136, 167], "q": [92, 93, 94, 95, 97, 100, 124, 125, 128, 129, 130, 131, 134, 135, 174, 177], "convnet": 92, "ndims_in": 92, "avgpool": [92, 93], "128": 93, "adaptiveavgpool2d": 93, "400": [94, 95], "300": [94, 95, 164, 172], "mlp_net_kwargs_net1": 95, "mlp_net_kwargs_net2": 95, "atol": [96, 116], "06": [96, 116], "rtol": [96, 116], "batch_shap": [96, 116], "event_shap": [96, 116], "absolut": [96, 116], "toler": [96, 116], "log_prob": [96, 108, 121], "log": [96, 108, 110, 121, 126, 127, 130, 132, 133, 134, 135, 153, 154, 155, 159, 179, 188], "probabl": [96, 108, 110, 121], "densiti": [96, 108, 121], "mass": [96, 108, 121], "rsampl": [96, 108, 110], "sample_shap": [96, 108], "reparameter": [96, 108], "dqnet": 97, "atom": 97, "action_spac": [98, 111, 124, 125], "one_hot": [98, 111, 124, 125], "onehotdiscretetensorspec": [98, 111, 124, 125], "nbin": [98, 124], "qvalue_actor": [98, 111, 124, 125], "std_bia": 99, "std_min_val": 99, "stochast": [99, 105, 106, 113, 134, 135], "belief": [99, 106, 112, 113], "1912": 99, "016034": 99, "softplu": 99, "out_features_valu": 100, "cnn_kwarg": 100, "mlp_kwarg": [100, 101], "duel": 100, "cnn": 100, "06581": 100, "512": 100, "lstm_kwarg": 101, "embedd": 101, "lstm": 101, "time_step": 101, "2d": 101, "input_s": 101, "hidden_s": 101, "hidden0_in": 101, "hidden1_in": 101, "hidden0_out": 101, "hidden1_out": 101, "single_bias_last_lay": 102, "layer_class": 102, "layer_kwarg": 102, "perceptron": 102, "seamless": 102, "though": 102, "reshap": 102, "lazylinear": [102, 110, 118, 120], "42": [102, 159], "noisylinear": [102, 104], "noisylazylinear": 102, "At": 103, "mpcplanner": 103, "tensordict_out": [103, 110, 118, 120], "std_init": [104, 105], "noisi": [104, 105, 123], "term": [104, 105, 126, 160], "matrix": [104, 105], "ax": [104, 105], "initialize_paramet": 104, "isol": 104, "1706": 105, "10295v3": 105, "induc": 105, "aid": 105, "descent": 105, "remain": 105, "emploi": 105, "decod": 106, "1803": [106, 107], "10122": [106, 107], "rnn_hidden": 106, "latent": 107, "logit": 108, "prob": 108, "One": [108, 118, 137], "excacli": 108, "probabilist": [109, 110], "fmodul": [109, 111, 118, 119, 122, 124, 125], "make_functional_with_buff": [109, 110, 111, 118, 119, 120, 122, 124, 125], "tensor_spec": 110, "distribution_kwarg": 110, "cache_dist": 110, "n_empirical_estim": 110, "special": 110, "rule": 110, "get_dist": 110, "__call__": [110, 188], "real": 110, "median": 110, "functionalmodul": [110, 118], "functionalmodulewithbuff": [110, 118], "overflow": [110, 118], "fist": 110, "set_exploration_mod": [110, 155], "_log_prob": 110, "diverg": [110, 132], "grucel": [110, 118], "fnet": 110, "vmap": [110, 118, 120], "again": 110, "expend": 110, "p": [110, 120], "expand": [110, 118, 120], "contigu": [110, 118, 120], "normal_": [110, 118, 120], "td_vmap": [110, 118, 120], "unlik": [110, 118, 120, 130, 133], "prevent": [110, 117, 118, 120, 121, 132, 133], "scrape": [110, 118, 120], "lazy_modul": [110, 118], "18": [110, 118, 120], "some_input": [110, 118, 120], "some_output": [110, 118, 120], "hidden_dim": [112, 113], "scale_lb": [112, 113], "posterior": 112, "rssm": [112, 113], "1811": [112, 113], "04551": [112, 113], "obs_embed": 112, "rnn_hidden_dim": 113, "prior": 113, "dream": 113, "recurr": 113, "min": [116, 117, 121, 127, 134, 135], "event_dim": [116, 117], "upscal": [117, 121], "tanh_loc": [117, 121], "tanhtransform": 117, "ultim": [117, 121], "unstabl": [117, 121], "poor": [117, 121], "explos": [117, 121], "practic": [117, 121, 185], "switch": [117, 121], "sigma": [117, 121], "formula": [117, 121, 127, 132, 133], "character": 118, "td_fmodul": 118, "td_function": 118, "td_state": 118, "isn": 118, "ensembl": [118, 134], "params_repeat": 118, "buffers_repeat": 118, "irrespect": 118, "random_sampl": 118, "calss": 119, "expand_as_right": 119, "epsilongreedyexplor": 119, "rand_output_clon": 119, "det_output_clon": 119, "rand_output_idx": 119, "_rand_output": 119, "_det_output": 119, "rand_output_idx_expand": 119, "tensordict_module_wrap": 119, "partial_toler": 120, "tensordictsequenci": 120, "who": 120, "AND": 120, "scan": 120, "sub": [120, 151, 159], "tensordictsequ": 120, "spec1": 120, "net1": 120, "fnet1": 120, "params1": 120, "buffers1": 120, "fmodule1": 120, "td_module1": 120, "spec2": 120, "module2": 120, "fmodule2": 120, "params2": 120, "buffers2": 120, "td_module2": 120, "lazy_module1": 120, "lazy_module2": 120, "select_subsequ": 120, "acord": 120, "custommodul": 122, "cat": 122, "var_num": [124, 125], "regard": [124, 126, 130, 133], "perspect": [124, 130], "1707": [124, 130, 133, 164, 172], "06887": [124, 130], "mult_one_hot": [124, 125], "customdistributionalqv": 124, "log_softmax": 124, "greedi": 125, "advantage_kei": [126, 127, 132, 133], "advantage_diff_kei": [126, 133], "value_error": [126, 133, 141, 142, 143], "entropy_bonu": [126, 127, 132, 133], "samples_mc_entropi": [126, 127, 132, 133], "entropy_coef": [126, 127, 132, 133], "critic_coef": [126, 127, 132, 133], "loss_critic_typ": [126, 127, 132, 133], "smooth_l1": [126, 127, 128, 129, 132, 133, 134, 135, 137], "advantage_modul": [126, 133], "loss": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 159, 163, 168, 170, 171, 173, 174, 176, 179, 188], "reli": 126, "1602": 126, "01783v2": 126, "advantage_diff": 126, "loss_function_typ": 126, "discrep": [126, 127, 128, 129, 132, 133], "l1": [126, 127, 128, 129, 132, 133, 134, 137], "l2": [126, 127, 128, 129, 132, 133, 134, 137], "tha": 126, "throughout": [126, 127, 130, 132, 133, 134, 135], "essenti": [126, 127, 130, 132, 133, 134, 135], "backpropag": [126, 127, 130, 132, 133, 134, 135], "clip_epsilon": 127, "threshold": 127, "bonu": [127, 132, 133], "favour": [127, 132, 133], "exploratori": [127, 132, 133], "mont": [127, 132, 133], "carlo": [127, 132, 133], "multipli": [127, 132, 133, 134, 135], "loss_funct": [127, 128, 129, 133, 134, 135, 137], "actor_network": [128, 134, 135], "value_network": [128, 129, 130, 135, 141, 142, 143], "delay_actor": [128, 135], "delay_valu": [128, 129, 130, 135], "input_tensordict": [128, 129, 130], "assign": [128, 129], "qvalueactor": 129, "distributionalqvalueactor": 130, "disctount": 130, "loss_modul": [131, 136, 159, 178, 179, 188], "dqnloss": [131, 136, 170], "ddpgloss": [131, 136, 168, 179], "sacloss": [131, 136, 176], "value_network_update_interv": 131, "contrast": 131, "soft": [131, 135, 136], "06461": 131, "dtarg": 132, "decrement": 132, "samples_mc_kl": 132, "kl": 132, "penalti": 132, "old_polici": 132, "new_polici": 132, "adapt": 132, "thu": 132, "distanc": [132, 137, 140], "apart": 132, "proxim": [133, 164, 172], "optimis": [133, 155], "flavour": 133, "constrain": 133, "clipppoloss": 133, "klpenppoloss": 133, "regularis": 133, "06347": [133, 164, 172], "qvalue_network": [134, 135], "num_qvalue_net": [134, 135], "sub_sample_len": 134, "priotity_kei": [134, 135], "alpha_init": [134, 135], "min_alpha": [134, 135], "max_alpha": [134, 135], "fixed_alpha": [134, 135], "target_entropi": [134, 135], "auto": [134, 135], "delay_qvalu": [134, 135], "openreview": [134, 174], "ay8zfzm0tdd": [134, 174], "idea": [134, 188], "subsampl": [134, 151, 188], "know": [134, 155], "1801": [135, 177], "01290": [135, 177], "qvalue_network_bi": 135, "prod": 135, "n_action": 135, "redqloss": 136, "999": [136, 157], "epsilon": 136, "prev_param": 136, "new_param": 136, "v2": [137, 146, 147, 149, 150, 164, 167, 172, 174, 177], "strict_shap": 137, "view_a": 137, "manag": [138, 139, 155], "hold": [138, 139], "next_val_kei": 140, "pred_next_v": 140, "usus": 140, "mse": 140, "q_valu": 140, "target_valu": 140, "n_steps_to_next": 140, "value_next_st": 140, "lmbda": [141, 143, 144, 146, 147, 148, 149, 150], "average_reward": [141, 142, 143], "gradient_mod": [141, 142, 143], "1506": [141, 144, 145, 148], "02438": [141, 144, 145, 148], "exponenti": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 157], "propag": [141, 142, 143], "throught": [141, 142, 143], "unused_arg": [141, 142, 143], "target_param": [141, 142, 143], "target_buff": [141, 142, 143], "value_kei": [142, 143], "gae": [142, 143], "next_state_valu": [144, 145, 146, 147, 148, 149, 150], "old_stat": [144, 145, 146, 148, 149], "timestep": [144, 145, 146, 147, 148, 149, 150], "new_stat": [144, 145, 146, 147, 148, 149, 150], "flag": [144, 145, 146, 147, 148, 149, 150], "rolling_gamma": [146, 147, 149, 150], "ti": [146, 147, 149, 150], "event": [146, 147, 149, 150], "g1": [146, 147, 149, 150], "g2": [146, 147, 149, 150], "g3": [146, 147, 149, 150], "g4": [146, 147, 149, 150], "v3": [146, 147, 149, 150], "v4": [146, 147, 149, 150], "upcom": [146, 147, 149, 150], "sub_traj_len": 151, "min_sub_traj_len": 151, "full": 151, "20": 151, "register_op": [151, 152, 153, 154, 157, 158, 160, 188], "process_optim_batch": [151, 157, 188], "_process_optim_batch_hook": [151, 188], "interv": [152, 160], "clear_cuda": 152, "pre_optim_step": [152, 188], "counter": [153, 188], "log_pbar": [153, 154, 155, 157, 188], "progress": [153, 154, 155, 159, 188], "bar": [153, 154, 155, 159, 188], "count_fram": 153, "pre_steps_log": [153, 154, 188], "lognam": 154, "r_train": 154, "logger": [154, 155, 159, 179, 183, 188], "log_reward": 154, "record_interv": 155, "record_fram": [155, 161], "policy_explor": [155, 179], "log_kei": 155, "suffix": 155, "underestim": 155, "final": 155, "suppos": [155, 188], "reward_evalu": 155, "video": [155, 183], "reward_norm": 157, "batch_process": [157, 158, 188], "update_reward_stat": 157, "normalize_reward": 157, "make_train": 158, "second": 158, "_process_batch_hook": [158, 188], "versatil": 159, "lossmodul": [159, 178, 179], "optim_steps_per_batch": [159, 188], "epoch": 159, "clip_grad_norm": 159, "norm": 159, "partial": 159, "deriv": 159, "clamp": 159, "clip_norm": 159, "progress_bar": 159, "tqdm": 159, "save_trainer_interv": 159, "disk": [159, 188], "10000": 159, "save_trainer_fil": [159, 188], "_datacollector": [160, 165, 166, 179], "update_weights_interv": 160, "whenev": 160, "sit": 160, "sync": [160, 179, 188], "update_weight": 160, "post_step": [160, 188], "cfg": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183], "dictconfig": [161, 162, 164, 165, 166, 167, 169, 172, 174, 175, 177, 178, 179, 180, 183], "correct": 161, "divid": 161, "unknowingli": 161, "1m": 161, "annealing_fram": 161, "init_env_step": [161, 162], "proof_environ": [162, 164, 167, 169, 172, 174, 177], "sta": 162, "ot": 162, "a2closs": 163, "in_keys_actor": [164, 172], "observation_kei": [164, 172, 174, 177], "actorvalueoper": [164, 172], "dummi": [164, 167, 169, 172, 174, 177], "join": [164, 172], "actorcriticoper": [164, 172], "parser_env_arg": [164, 172, 174], "make_ppo_model": 164, "parser_model_args_continu": [164, 172, 174, 177], "cattensor": [164, 167, 172, 174, 177], "hydra": [164, 167, 169, 172, 174, 177], "config_stor": [164, 167, 169, 172, 174, 177], "configstor": [164, 167, 169, 172, 174, 177], "dataclass": [164, 167, 169, 172, 174, 177], "halfcheetah": [164, 167, 172, 174, 177], "config_field": [164, 167, 169, 172, 174, 177], "config_cl": [164, 167, 169, 172, 174, 177], "ppomodelconfig": [164, 172], "envconfig": [164, 167, 169, 172, 174, 177], "make_dataclass": [164, 167, 169, 172, 174, 177], "cls_name": [164, 167, 169, 172, 174, 177], "config_path": [164, 167, 169, 172, 174, 177], "config_nam": [164, 167, 169, 172, 174, 177], "actor_valu": [164, 172], "17": [164, 167, 172, 174, 177], "actor_model_explor": [165, 166], "make_env_kwarg": [165, 166], "creator": [165, 166, 181, 182, 183], "actor_net_kwarg": [167, 174, 177], "value_net_kwarg": [167, 177], "modulelist": [167, 174, 177], "ddpgcnnactor": 167, "ddpgmlpactor": 167, "ddpgcnnqnet": 167, "ddpgmlpqnet": 167, "ddpgmodelconfig": 167, "targetnetupdat": [168, 170, 173, 176, 178, 179], "discretemodelconfig": 169, "pong": 169, "v5": 169, "pixels_onli": 169, "210": 169, "160": 169, "ppoloss": 171, "redqloss_deprec": 173, "qvalue_net_kwarg": [174, 177], "qvalu": [174, 177], "redqmodelconfig": 174, "replayargsconfig": 175, "sacmodelconfig": 177, "target_net_updat": 179, "constitu": 179, "learnt": 179, "tempfil": 179, "tensorboardlogg": 179, "tensordictreplaybuff": 179, "egreedywrapp": 179, "env_mak": 179, "env_proof": 179, "obs_spec": 179, "net_valu": 179, "dir": [179, 188], "gettempdir": 179, "exp_nam": 179, "argpars": [180, 183], "namespac": [180, 183], "parser": [180, 183], "transformed_env_constructor": 180, "env_kwarg": [181, 182], "num_env_per_collector": [181, 182], "num_collector": [181, 182], "less": [181, 182], "multisyncdatacollector": 182, "video_tag": 183, "norm_obs_onli": 183, "use_env_cr": 183, "custom_env_mak": 183, "custom_env": 183, "return_transformed_env": 183, "action_dim_gsd": 183, "state_dim_gsd": 183, "batch_dim": 183, "vecnorm": 183, "wheter": 183, "maker": 183, "overrid": 183, "exclus": 183, "journei": 185, "guid": 185, "textbook": 185, "highlight": 185, "readi": 185, "ever": 185, "cover": 185, "bump": 185, "think": 185, "commun": 185, "benefit": 185, "submit": 185, "pr": 185, "outer": 188, "believ": 188, "scheme": 188, "substenti": 188, "sketch": 188, "_pre_steps_log_hook": 188, "_pre_optim_hook": 188, "sub_batch": 188, "_post_loss_hook": 188, "post_loss": 188, "_post_optim_hook": 188, "post_optim": 188, "_post_optim_log": 188, "post_optim_log": 188, "_post_steps_hook": 188, "_post_steps_log_hook": 188, "post_steps_log": 188, "comment": 188, "categori": 188, "strategi": 188, "extens": 188, "replaybuffertrain": 188, "batchsubsampl": 188, "logreward": 188, "reserv": 188, "updateweight": 188, "trainerhookbas": 188, "three": 188, "logginghook": 188, "logging_hook": 188, "save_dict": 188, "some_valu": 188, "els": 188, "torchsnapshot": 188, "ckpt_backend": 188, "wherea": 188, "pt": 188, "filepath": 188, "select_kei": 188, "selectkei": 188, "save_train": 188, "load_from_fil": 188, "perfectli": 188, "intern": 189}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl.collectors": [[12, 0, 1, "", "MultiSyncDataCollector"], [13, 0, 1, "", "MultiaSyncDataCollector"], [14, 0, 1, "", "SyncDataCollector"], [15, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.MultiSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[14, 1, 1, "", "iterator"], [14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "rollout"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[16, 2, 1, "", "split_trajectories"]], "torchrl.data": [[17, 0, 1, "", "BinaryDiscreteTensorSpec"], [18, 0, 1, "", "BoundedTensorSpec"], [19, 0, 1, "", "CompositeSpec"], [20, 0, 1, "", "DiscreteTensorSpec"], [21, 0, 1, "", "MultOneHotDiscreteTensorSpec"], [22, 0, 1, "", "MultiStep"], [23, 0, 1, "", "NdBoundedTensorSpec"], [24, 0, 1, "", "NdUnboundedContinuousTensorSpec"], [25, 0, 1, "", "OneHotDiscreteTensorSpec"], [26, 0, 1, "", "PrioritizedReplayBuffer"], [27, 0, 1, "", "ReplayBuffer"], [28, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [29, 0, 1, "", "TensorDictReplayBuffer"], [30, 0, 1, "", "TensorSpec"], [31, 0, 1, "", "UnboundedContinuousTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "keys"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.MultOneHotDiscreteTensorSpec": [[21, 1, 1, "", "assert_is_in"], [21, 1, 1, "", "encode"], [21, 1, 1, "", "index"], [21, 1, 1, "", "is_in"], [21, 1, 1, "", "project"], [21, 1, 1, "", "rand"], [21, 1, 1, "", "to_numpy"], [21, 1, 1, "", "type_check"], [21, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[22, 1, 1, "", "add_module"], [22, 1, 1, "", "apply"], [22, 1, 1, "", "bfloat16"], [22, 1, 1, "", "buffers"], [22, 1, 1, "", "children"], [22, 1, 1, "", "cpu"], [22, 1, 1, "", "cuda"], [22, 1, 1, "", "double"], [22, 1, 1, "", "eval"], [22, 1, 1, "", "extra_repr"], [22, 1, 1, "", "float"], [22, 1, 1, "", "forward"], [22, 1, 1, "", "get_buffer"], [22, 1, 1, "", "get_extra_state"], [22, 1, 1, "", "get_parameter"], [22, 1, 1, "", "get_submodule"], [22, 1, 1, "", "half"], [22, 1, 1, "", "ipu"], [22, 1, 1, "", "load_state_dict"], [22, 1, 1, "", "modules"], [22, 1, 1, "", "named_buffers"], [22, 1, 1, "", "named_children"], [22, 1, 1, "", "named_modules"], [22, 1, 1, "", "named_parameters"], [22, 1, 1, "", "parameters"], [22, 1, 1, "", "register_backward_hook"], [22, 1, 1, "", "register_buffer"], [22, 1, 1, "", "register_forward_hook"], [22, 1, 1, "", "register_forward_pre_hook"], [22, 1, 1, "", "register_full_backward_hook"], [22, 1, 1, "", "register_full_backward_pre_hook"], [22, 1, 1, "", "register_load_state_dict_post_hook"], [22, 1, 1, "", "register_module"], [22, 1, 1, "", "register_parameter"], [22, 1, 1, "", "requires_grad_"], [22, 1, 1, "", "set_extra_state"], [22, 1, 1, "", "share_memory"], [22, 1, 1, "", "state_dict"], [22, 1, 1, "", "to"], [22, 1, 1, "", "to_empty"], [22, 1, 1, "", "train"], [22, 1, 1, "", "type"], [22, 1, 1, "", "xpu"], [22, 1, 1, "", "zero_grad"]], "torchrl.data.NdBoundedTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.NdUnboundedContinuousTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "update_priority"]], "torchrl.data.ReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[28, 1, 1, "", "add"], [28, 1, 1, "", "extend"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "update_priority"]], "torchrl.data.TensorDictReplayBuffer": [[29, 1, 1, "", "add"], [29, 1, 1, "", "extend"], [29, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.rb_prototype": [[32, 0, 1, "", "RemoteTensorDictReplayBuffer"], [33, 0, 1, "", "ReplayBuffer"], [34, 0, 1, "", "TensorDictReplayBuffer"]], "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer": [[32, 1, 1, "", "add"], [32, 1, 1, "", "append_transform"], [32, 1, 1, "", "extend"], [32, 1, 1, "", "insert_transform"], [32, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer": [[33, 1, 1, "", "add"], [33, 1, 1, "", "append_transform"], [33, 1, 1, "", "extend"], [33, 1, 1, "", "insert_transform"], [33, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer": [[34, 1, 1, "", "add"], [34, 1, 1, "", "append_transform"], [34, 1, 1, "", "extend"], [34, 1, 1, "", "insert_transform"], [34, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.samplers": [[35, 0, 1, "", "PrioritizedSampler"], [36, 0, 1, "", "RandomSampler"], [37, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[35, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[38, 0, 1, "", "LazyMemmapStorage"], [39, 0, 1, "", "LazyTensorStorage"], [40, 0, 1, "", "ListStorage"], [41, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[39, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[40, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[41, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[42, 0, 1, "", "RoundRobinWriter"], [43, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[42, 1, 1, "", "add"], [42, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[43, 1, 1, "", "add"], [43, 1, 1, "", "extend"]], "torchrl.envs": [[44, 0, 1, "", "EnvBase"], [45, 0, 1, "", "GymLikeEnv"], [46, 2, 1, "", "ModelBasedEnvBase"], [47, 0, 1, "", "ParallelEnv"], [48, 0, 1, "", "SerialEnv"], [46, 1, 1, "", "rand_step"], [46, 1, 1, "", "reset"], [46, 1, 1, "", "rollout"], [46, 1, 1, "", "set_seed"], [46, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 3, 1, "", "batch_locked"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "fake_tensordict"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "id0", "rand_step"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_full_backward_pre_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "id1", "reset"], [44, 1, 1, "id2", "rollout"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "id3", "set_seed"], [44, 1, 1, "", "share_memory"], [44, 3, 1, "", "specs"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "id4", "step"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 3, 1, "", "batch_locked"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "close"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "fake_tensordict"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "read_action"], [45, 1, 1, "", "read_done"], [45, 1, 1, "", "read_obs"], [45, 1, 1, "", "read_reward"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_full_backward_pre_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_info_dict_reader"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "share_memory"], [45, 3, 1, "", "specs"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "step"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[47, 1, 1, "", "add_module"], [47, 1, 1, "", "apply"], [47, 3, 1, "", "batch_locked"], [47, 1, 1, "", "bfloat16"], [47, 1, 1, "", "buffers"], [47, 1, 1, "", "children"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 1, 1, "", "double"], [47, 1, 1, "", "eval"], [47, 1, 1, "", "extra_repr"], [47, 1, 1, "", "fake_tensordict"], [47, 1, 1, "", "float"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_buffer"], [47, 1, 1, "", "get_extra_state"], [47, 1, 1, "", "get_parameter"], [47, 1, 1, "", "get_submodule"], [47, 1, 1, "", "half"], [47, 1, 1, "", "ipu"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "modules"], [47, 1, 1, "", "named_buffers"], [47, 1, 1, "", "named_children"], [47, 1, 1, "", "named_modules"], [47, 1, 1, "", "named_parameters"], [47, 1, 1, "", "parameters"], [47, 1, 1, "", "rand_step"], [47, 1, 1, "", "register_backward_hook"], [47, 1, 1, "", "register_buffer"], [47, 1, 1, "", "register_forward_hook"], [47, 1, 1, "", "register_forward_pre_hook"], [47, 1, 1, "", "register_full_backward_hook"], [47, 1, 1, "", "register_full_backward_pre_hook"], [47, 1, 1, "", "register_load_state_dict_post_hook"], [47, 1, 1, "", "register_module"], [47, 1, 1, "", "register_parameter"], [47, 1, 1, "", "requires_grad_"], [47, 1, 1, "", "reset"], [47, 1, 1, "", "rollout"], [47, 1, 1, "", "set_extra_state"], [47, 1, 1, "", "set_seed"], [47, 1, 1, "", "share_memory"], [47, 3, 1, "", "specs"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "step"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_empty"], [47, 1, 1, "", "train"], [47, 1, 1, "", "type"], [47, 1, 1, "", "update_kwargs"], [47, 1, 1, "", "xpu"], [47, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[48, 1, 1, "", "add_module"], [48, 1, 1, "", "apply"], [48, 3, 1, "", "batch_locked"], [48, 1, 1, "", "bfloat16"], [48, 1, 1, "", "buffers"], [48, 1, 1, "", "children"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 1, 1, "", "double"], [48, 1, 1, "", "eval"], [48, 1, 1, "", "extra_repr"], [48, 1, 1, "", "fake_tensordict"], [48, 1, 1, "", "float"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_buffer"], [48, 1, 1, "", "get_extra_state"], [48, 1, 1, "", "get_parameter"], [48, 1, 1, "", "get_submodule"], [48, 1, 1, "", "half"], [48, 1, 1, "", "ipu"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "modules"], [48, 1, 1, "", "named_buffers"], [48, 1, 1, "", "named_children"], [48, 1, 1, "", "named_modules"], [48, 1, 1, "", "named_parameters"], [48, 1, 1, "", "parameters"], [48, 1, 1, "", "rand_step"], [48, 1, 1, "", "register_backward_hook"], [48, 1, 1, "", "register_buffer"], [48, 1, 1, "", "register_forward_hook"], [48, 1, 1, "", "register_forward_pre_hook"], [48, 1, 1, "", "register_full_backward_hook"], [48, 1, 1, "", "register_full_backward_pre_hook"], [48, 1, 1, "", "register_load_state_dict_post_hook"], [48, 1, 1, "", "register_module"], [48, 1, 1, "", "register_parameter"], [48, 1, 1, "", "requires_grad_"], [48, 1, 1, "", "reset"], [48, 1, 1, "", "rollout"], [48, 1, 1, "", "set_extra_state"], [48, 1, 1, "", "set_seed"], [48, 1, 1, "", "share_memory"], [48, 3, 1, "", "specs"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "step"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_empty"], [48, 1, 1, "", "train"], [48, 1, 1, "", "type"], [48, 1, 1, "", "update_kwargs"], [48, 1, 1, "", "xpu"], [48, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.dm_control": [[49, 2, 1, "", "DMControlEnv"], [50, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[51, 2, 1, "", "GymEnv"], [52, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[53, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[54, 2, 1, "", "JumanjiEnv"], [55, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.model_based.dreamer": [[56, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[57, 0, 1, "", "BinarizeReward"], [58, 0, 1, "", "CatFrames"], [59, 0, 1, "", "CatTensors"], [60, 0, 1, "", "CenterCrop"], [61, 0, 1, "", "Compose"], [62, 0, 1, "", "DoubleToFloat"], [63, 0, 1, "", "FiniteTensorDictCheck"], [64, 0, 1, "", "FlattenObservation"], [65, 0, 1, "", "GrayScale"], [66, 0, 1, "", "NoopResetEnv"], [67, 0, 1, "", "ObservationNorm"], [68, 0, 1, "", "ObservationTransform"], [69, 0, 1, "", "PinMemoryTransform"], [70, 0, 1, "", "R3MTransform"], [71, 0, 1, "", "Resize"], [72, 0, 1, "", "RewardClipping"], [73, 0, 1, "", "RewardScaling"], [74, 0, 1, "", "TensorDictPrimer"], [75, 0, 1, "", "ToTensorImage"], [76, 0, 1, "", "Transform"], [77, 0, 1, "", "TransformedEnv"], [78, 0, 1, "", "UnsqueezeTransform"], [79, 0, 1, "", "VIPTransform"], [80, 0, 1, "", "VecNorm"], [81, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[57, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[58, 1, 1, "", "reset"], [58, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[59, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[60, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[61, 1, 1, "", "forward"], [61, 1, 1, "", "reset"], [61, 1, 1, "", "to"], [61, 1, 1, "", "transform_input_spec"], [61, 1, 1, "", "transform_observation_spec"], [61, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[62, 1, 1, "", "transform_input_spec"], [62, 1, 1, "", "transform_observation_spec"], [62, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.FlattenObservation": [[64, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[65, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[66, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[67, 1, 1, "", "init_stats"], [67, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[70, 1, 1, "", "forward"], [70, 1, 1, "", "reset"], [70, 1, 1, "", "to"], [70, 1, 1, "", "transform_input_spec"], [70, 1, 1, "", "transform_observation_spec"], [70, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Resize": [[71, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[72, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[73, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[74, 1, 1, "", "reset"], [74, 1, 1, "", "to"], [74, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[75, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[76, 1, 1, "", "forward"], [76, 1, 1, "", "reset"], [76, 1, 1, "", "transform_input_spec"], [76, 1, 1, "", "transform_observation_spec"], [76, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[77, 3, 1, "", "action_spec"], [77, 3, 1, "", "batch_locked"], [77, 1, 1, "", "eval"], [77, 3, 1, "", "input_spec"], [77, 1, 1, "", "load_state_dict"], [77, 3, 1, "", "observation_spec"], [77, 3, 1, "", "reward_spec"], [77, 1, 1, "", "set_seed"], [77, 1, 1, "", "state_dict"], [77, 1, 1, "", "to"], [77, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[78, 1, 1, "", "forward"], [78, 1, 1, "", "transform_input_spec"], [78, 1, 1, "", "transform_observation_spec"], [78, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPTransform": [[79, 1, 1, "", "forward"], [79, 1, 1, "", "reset"], [79, 1, 1, "", "to"], [79, 1, 1, "", "transform_input_spec"], [79, 1, 1, "", "transform_observation_spec"], [79, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VecNorm": [[80, 1, 1, "", "build_td_for_shared_vecnorm"], [80, 1, 1, "", "get_extra_state"], [80, 1, 1, "", "set_extra_state"], [80, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[81, 1, 1, "", "reset"]], "torchrl.envs.utils": [[82, 2, 1, "", "exploration_mode"], [83, 2, 1, "", "get_available_libraries"], [84, 2, 1, "", "set_exploration_mode"], [85, 2, 1, "", "step_mdp"]], "torchrl.modules": [[86, 0, 1, "", "Actor"], [87, 0, 1, "", "ActorCriticOperator"], [88, 0, 1, "", "ActorCriticWrapper"], [89, 0, 1, "", "ActorValueOperator"], [90, 0, 1, "", "CEMPlanner"], [91, 0, 1, "", "ConvNet"], [92, 0, 1, "", "DdpgCnnActor"], [93, 0, 1, "", "DdpgCnnQNet"], [94, 0, 1, "", "DdpgMlpActor"], [95, 0, 1, "", "DdpgMlpQNet"], [96, 0, 1, "", "Delta"], [97, 0, 1, "", "DistributionalDQNnet"], [98, 0, 1, "", "DistributionalQValueActor"], [99, 0, 1, "", "DreamerActor"], [100, 0, 1, "", "DuelingCnnDQNet"], [101, 0, 1, "", "LSTMNet"], [102, 0, 1, "", "MLP"], [103, 0, 1, "", "MPCPlannerBase"], [104, 0, 1, "", "NoisyLazyLinear"], [105, 0, 1, "", "NoisyLinear"], [106, 0, 1, "", "ObsDecoder"], [107, 0, 1, "", "ObsEncoder"], [108, 0, 1, "", "OneHotCategorical"], [109, 0, 1, "", "ProbabilisticActor"], [110, 0, 1, "", "ProbabilisticTensorDictModule"], [111, 0, 1, "", "QValueActor"], [112, 0, 1, "", "RSSMPosterior"], [113, 0, 1, "", "RSSMPrior"], [114, 0, 1, "", "Squeeze2dLayer"], [115, 0, 1, "", "SqueezeLayer"], [116, 0, 1, "", "TanhDelta"], [117, 0, 1, "", "TanhNormal"], [118, 0, 1, "", "TensorDictModule"], [119, 0, 1, "", "TensorDictModuleWrapper"], [120, 0, 1, "", "TensorDictSequential"], [121, 0, 1, "", "TruncatedNormal"], [122, 0, 1, "", "ValueOperator"], [123, 0, 1, "", "reset_noise"]], "torchrl.modules.ActorCriticOperator": [[87, 1, 1, "", "get_critic_operator"], [87, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorCriticWrapper": [[88, 1, 1, "", "get_policy_operator"], [88, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorValueOperator": [[89, 1, 1, "", "get_policy_operator"], [89, 1, 1, "", "get_value_operator"]], "torchrl.modules.CEMPlanner": [[90, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[91, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[92, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[93, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[94, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[95, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[96, 1, 1, "", "log_prob"], [96, 3, 1, "", "mean"], [96, 3, 1, "", "mode"], [96, 1, 1, "", "rsample"], [96, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[97, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[99, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[100, 1, 1, "", "forward"]], "torchrl.modules.LSTMNet": [[101, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[102, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[103, 1, 1, "", "forward"], [103, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[104, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[106, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[107, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[108, 1, 1, "", "log_prob"], [108, 3, 1, "", "mode"], [108, 1, 1, "", "rsample"], [108, 1, 1, "", "sample"]], "torchrl.modules.ProbabilisticTensorDictModule": [[110, 1, 1, "", "forward"], [110, 1, 1, "", "make_functional_with_buffers"]], "torchrl.modules.RSSMPosterior": [[112, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[113, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[115, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[116, 3, 1, "", "mean"], [116, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[117, 3, 1, "", "mode"]], "torchrl.modules.TensorDictModule": [[118, 1, 1, "", "forward"], [118, 1, 1, "", "make_functional_with_buffers"], [118, 1, 1, "", "random"], [118, 1, 1, "", "random_sample"], [118, 1, 1, "", "to"]], "torchrl.modules.TensorDictModuleWrapper": [[119, 1, 1, "", "forward"]], "torchrl.modules.TensorDictSequential": [[120, 1, 1, "", "forward"], [120, 1, 1, "", "make_functional_with_buffers"], [120, 1, 1, "", "select_subsequence"]], "torchrl.modules.TruncatedNormal": [[121, 1, 1, "", "log_prob"], [121, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module.actors": [[124, 0, 1, "", "DistributionalQValueHook"], [125, 0, 1, "", "QValueHook"]], "torchrl.objectives": [[126, 0, 1, "", "A2CLoss"], [127, 0, 1, "", "ClipPPOLoss"], [128, 0, 1, "", "DDPGLoss"], [129, 0, 1, "", "DQNLoss"], [130, 0, 1, "", "DistributionalDQNLoss"], [131, 0, 1, "", "HardUpdate"], [132, 0, 1, "", "KLPENPPOLoss"], [133, 0, 1, "", "PPOLoss"], [134, 0, 1, "", "REDQLoss"], [135, 0, 1, "", "SACLoss"], [136, 0, 1, "", "SoftUpdate"], [137, 0, 1, "", "distance_loss"], [138, 0, 1, "", "hold_out_net"], [139, 0, 1, "", "hold_out_params"], [140, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[126, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[127, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[128, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[129, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[130, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[132, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[133, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[134, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[135, 1, 1, "", "forward"]], "torchrl.objectives.value": [[141, 0, 1, "", "GAE"], [142, 0, 1, "", "TDEstimate"], [143, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[141, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[142, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[143, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[144, 0, 1, "", "generalized_advantage_estimate"], [145, 0, 1, "", "td_advantage_estimate"], [146, 0, 1, "", "td_lambda_advantage_estimate"], [147, 0, 1, "", "td_lambda_return_estimate"], [148, 0, 1, "", "vec_generalized_advantage_estimate"], [149, 0, 1, "", "vec_td_lambda_advantage_estimate"], [150, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.trainers": [[151, 0, 1, "", "BatchSubSampler"], [152, 0, 1, "", "ClearCudaCache"], [153, 0, 1, "", "CountFramesLog"], [154, 0, 1, "", "LogReward"], [155, 0, 1, "", "Recorder"], [156, 0, 1, "", "ReplayBuffer"], [157, 0, 1, "", "RewardNormalizer"], [158, 0, 1, "", "SelectKeys"], [159, 0, 1, "", "Trainer"], [160, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.ReplayBuffer": [[156, 1, 1, "", "add"], [156, 1, 1, "", "extend"], [156, 1, 1, "", "sample"]], "torchrl.trainers.helpers": [[161, 2, 1, "", "correct_for_frame_skip"], [162, 2, 1, "", "get_stats_random_rollout"], [163, 2, 1, "", "make_a2c_loss"], [164, 2, 1, "", "make_a2c_model"], [165, 2, 1, "", "make_collector_offpolicy"], [166, 2, 1, "", "make_collector_onpolicy"], [167, 2, 1, "", "make_ddpg_actor"], [168, 2, 1, "", "make_ddpg_loss"], [169, 2, 1, "", "make_dqn_actor"], [170, 2, 1, "", "make_dqn_loss"], [171, 2, 1, "", "make_ppo_loss"], [172, 2, 1, "", "make_ppo_model"], [173, 2, 1, "", "make_redq_loss"], [174, 2, 1, "", "make_redq_model"], [175, 2, 1, "", "make_replay_buffer"], [176, 2, 1, "", "make_sac_loss"], [177, 2, 1, "", "make_sac_model"], [178, 2, 1, "", "make_target_updater"], [179, 2, 1, "", "make_trainer"], [180, 2, 1, "", "parallel_env_constructor"], [181, 2, 1, "", "sync_async_collector"], [182, 2, 1, "", "sync_sync_collector"], [183, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"exampl": 0, "galleri": 0, "welcom": 1, "torchrl": [1, 2, 3, 4, 6, 186, 187, 188, 189], "document": [1, 9], "content": [1, 185], "indic": 1, "tabl": 1, "collector": 2, "packag": [2, 3, 4, 186, 187, 188, 189], "data": [2, 3], "helper": [2, 4], "function": 2, "replai": 3, "buffer": 3, "compos": [3, 61], "prototyp": 3, "tensorspec": [3, 30], "util": [3, 186, 187, 188], "env": 4, "vector": 4, "transform": [4, 76], "domain": 4, "specif": 4, "librari": 4, "work": [5, 6], "gym": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "up": 6, "your": 6, "environ": [6, 7], "instal": [6, 7], "from": [6, 7], "pip": [6, 7], "us": [6, 9], "common": [6, 7], "issu": [6, 7, 10], "about": 7, "mujoco": 7, "prerequisit": 7, "render": 7, "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "clone": 7, "repo": [7, 9], "when": 7, "pro": 8, "tip": 8, "train": 8, "cluster": 8, "resourc": 9, "pytorch": [9, 10], "functorch": 9, "rl": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": 10, "workaround": 10, "implement_for": 11, "multisyncdatacollector": 12, "multiasyncdatacollector": 13, "syncdatacollector": 14, "asyncdatacollector": 15, "split_trajectori": 16, "binarydiscretetensorspec": 17, "boundedtensorspec": 18, "compositespec": 19, "discretetensorspec": 20, "multonehotdiscretetensorspec": 21, "multistep": 22, "ndboundedtensorspec": 23, "ndunboundedcontinuoustensorspec": 24, "onehotdiscretetensorspec": 25, "prioritizedreplaybuff": 26, "replaybuff": [27, 33, 156], "tensordictprioritizedreplaybuff": 28, "tensordictreplaybuff": [29, 34], "unboundedcontinuoustensorspec": 31, "remotetensordictreplaybuff": 32, "prioritizedsampl": 35, "randomsampl": 36, "sampler": 37, "lazymemmapstorag": 38, "lazytensorstorag": 39, "liststorag": 40, "storag": 41, "roundrobinwrit": 42, "writer": 43, "envbas": 44, "gymlikeenv": 45, "modelbasedenvbas": 46, "parallelenv": 47, "serialenv": 48, "dmcontrolenv": 49, "dmcontrolwrapp": 50, "gymenv": 51, "gymwrapp": 52, "habitatenv": 53, "jumanjienv": 54, "jumanjiwrapp": 55, "dreamerenv": 56, "binarizereward": 57, "catfram": 58, "cattensor": 59, "centercrop": 60, "doubletofloat": 62, "finitetensordictcheck": 63, "flattenobserv": 64, "grayscal": 65, "noopresetenv": 66, "observationnorm": 67, "observationtransform": 68, "pinmemorytransform": 69, "r3mtransform": 70, "resiz": 71, "rewardclip": 72, "rewardsc": 73, "tensordictprim": 74, "totensorimag": 75, "transformedenv": 77, "unsqueezetransform": 78, "viptransform": 79, "vecnorm": 80, "gsdenois": 81, "exploration_mod": 82, "get_available_librari": 83, "set_exploration_mod": 84, "step_mdp": 85, "actor": 86, "actorcriticoper": 87, "actorcriticwrapp": 88, "actorvalueoper": 89, "cemplann": 90, "convnet": 91, "ddpgcnnactor": 92, "ddpgcnnqnet": 93, "ddpgmlpactor": 94, "ddpgmlpqnet": 95, "delta": 96, "distributionaldqnnet": 97, "distributionalqvalueactor": 98, "dreameractor": 99, "duelingcnndqnet": 100, "lstmnet": 101, "mlp": 102, "mpcplannerbas": 103, "noisylazylinear": 104, "noisylinear": 105, "obsdecod": 106, "obsencod": 107, "onehotcategor": 108, "probabilisticactor": 109, "probabilistictensordictmodul": 110, "qvalueactor": 111, "rssmposterior": 112, "rssmprior": 113, "squeeze2dlay": 114, "squeezelay": 115, "tanhdelta": 116, "tanhnorm": 117, "tensordictmodul": 118, "tensordictmodulewrapp": 119, "tensordictsequenti": 120, "truncatednorm": 121, "valueoper": 122, "reset_nois": 123, "distributionalqvaluehook": 124, "qvaluehook": 125, "a2closs": 126, "clipppoloss": 127, "ddpgloss": 128, "dqnloss": 129, "distributionaldqnloss": 130, "hardupd": 131, "klpenppoloss": 132, "ppoloss": 133, "redqloss": 134, "sacloss": 135, "softupd": 136, "distance_loss": 137, "hold_out_net": 138, "hold_out_param": 139, "next_state_valu": 140, "gae": 141, "tdestim": 142, "tdlambdaestim": 143, "generalized_advantage_estim": 144, "td_advantage_estim": 145, "td_lambda_advantage_estim": 146, "td_lambda_return_estim": 147, "vec_generalized_advantage_estim": 148, "vec_td_lambda_advantage_estim": 149, "vec_td_lambda_return_estim": 150, "batchsubsampl": 151, "clearcudacach": 152, "countframeslog": 153, "logreward": 154, "record": 155, "rewardnorm": 157, "selectkei": 158, "trainer": [159, 188], "updateweight": 160, "correct_for_frame_skip": 161, "get_stats_random_rollout": 162, "make_a2c_loss": 163, "make_a2c_model": 164, "make_collector_offpolici": 165, "make_collector_onpolici": 166, "make_ddpg_actor": 167, "make_ddpg_loss": 168, "make_dqn_actor": 169, "make_dqn_loss": 170, "make_ppo_loss": 171, "make_ppo_model": 172, "make_redq_loss": 173, "make_redq_model": 174, "make_replay_buff": 175, "make_sac_loss": 176, "make_sac_model": 177, "make_target_updat": 178, "make_train": 179, "parallel_env_constructor": 180, "sync_async_collector": 181, "sync_sync_collector": 182, "transformed_env_constructor": 183, "api": 184, "refer": 184, "knowledg": 185, "base": 185, "contribut": 185, "modul": 186, "tensordict": 186, "hook": [186, 188], "model": 186, "explor": 186, "planner": 186, "distribut": 186, "object": 187, "dqn": 187, "ddpg": 187, "sac": 187, "redq": 187, "ppo": 187, "a2c": 187, "return": 187, "checkpoint": 188, "builder": 188, "_util": 189}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Example gallery": [[0, "example-gallery"]], "Welcome to the TorchRL Documentation!": [[1, "welcome-to-the-torchrl-documentation"]], "Contents:": [[1, null], [185, null]], "Indices and tables": [[1, "indices-and-tables"]], "torchrl.collectors package": [[2, "torchrl-collectors-package"]], "Data collectors": [[2, "data-collectors"]], "Helper functions": [[2, "helper-functions"]], "torchrl.data package": [[3, "torchrl-data-package"]], "Replay Buffers": [[3, "replay-buffers"]], "Composable Replay Buffers (Prototype)": [[3, "composable-replay-buffers-prototype"]], "TensorSpec": [[3, "tensorspec"], [30, "tensorspec"]], "Utils": [[3, "utils"], [186, "utils"], [187, "utils"], [188, "utils"]], "torchrl.envs package": [[4, "torchrl-envs-package"]], "Vectorized envs": [[4, "vectorized-envs"]], "Transforms": [[4, "transforms"]], "Helpers": [[4, "helpers"]], "Domain-specific": [[4, "domain-specific"]], "Libraries": [[4, "libraries"]], "Working with gym": [[5, "working-with-gym"]], "Versioning": [[5, "versioning"]], "Working with habitat-lab": [[6, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[6, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[6, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[6, "installing-torchrl"]], "Using Habitat": [[6, "using-habitat"]], "Common issues": [[6, "common-issues"]], "About MuJoCo": [[7, "about-mujoco"]], "Installing MuJoCo": [[7, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[7, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[7, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[7, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[7, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[7, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[7, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips": [[8, "pro-tips"]], "Training on a cluster": [[8, "training-on-a-cluster"]], "Useful resources": [[9, "useful-resources"]], "Pytorch documentation": [[9, "pytorch-documentation"]], "functorch documentation": [[9, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[9, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[9, "educational-resource"]], "Forums": [[9, "forums"]], "Repos": [[9, "repos"]], "Versioning Issues": [[10, "versioning-issues"]], "Pytorch version": [[10, "pytorch-version"]], "How to reproduce": [[10, "how-to-reproduce"]], "Workarounds": [[10, "workarounds"]], "implement_for": [[11, "implement-for"]], "MultiSyncDataCollector": [[12, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[13, "multiasyncdatacollector"]], "SyncDataCollector": [[14, "syncdatacollector"]], "aSyncDataCollector": [[15, "asyncdatacollector"]], "split_trajectories": [[16, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[17, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[18, "boundedtensorspec"]], "CompositeSpec": [[19, "compositespec"]], "DiscreteTensorSpec": [[20, "discretetensorspec"]], "MultOneHotDiscreteTensorSpec": [[21, "multonehotdiscretetensorspec"]], "MultiStep": [[22, "multistep"]], "NdBoundedTensorSpec": [[23, "ndboundedtensorspec"]], "NdUnboundedContinuousTensorSpec": [[24, "ndunboundedcontinuoustensorspec"]], "OneHotDiscreteTensorSpec": [[25, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[26, "prioritizedreplaybuffer"]], "ReplayBuffer": [[27, "replaybuffer"], [33, "replaybuffer"], [156, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[28, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[29, "tensordictreplaybuffer"], [34, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[31, "unboundedcontinuoustensorspec"]], "RemoteTensorDictReplayBuffer": [[32, "remotetensordictreplaybuffer"]], "PrioritizedSampler": [[35, "prioritizedsampler"]], "RandomSampler": [[36, "randomsampler"]], "Sampler": [[37, "sampler"]], "LazyMemmapStorage": [[38, "lazymemmapstorage"]], "LazyTensorStorage": [[39, "lazytensorstorage"]], "ListStorage": [[40, "liststorage"]], "Storage": [[41, "storage"]], "RoundRobinWriter": [[42, "roundrobinwriter"]], "Writer": [[43, "writer"]], "EnvBase": [[44, "envbase"]], "GymLikeEnv": [[45, "gymlikeenv"]], "ModelBasedEnvBase": [[46, "modelbasedenvbase"]], "ParallelEnv": [[47, "parallelenv"]], "SerialEnv": [[48, "serialenv"]], "DMControlEnv": [[49, "dmcontrolenv"]], "DMControlWrapper": [[50, "dmcontrolwrapper"]], "GymEnv": [[51, "gymenv"]], "GymWrapper": [[52, "gymwrapper"]], "HabitatEnv": [[53, "habitatenv"]], "JumanjiEnv": [[54, "jumanjienv"]], "JumanjiWrapper": [[55, "jumanjiwrapper"]], "DreamerEnv": [[56, "dreamerenv"]], "BinarizeReward": [[57, "binarizereward"]], "CatFrames": [[58, "catframes"]], "CatTensors": [[59, "cattensors"]], "CenterCrop": [[60, "centercrop"]], "Compose": [[61, "compose"]], "DoubleToFloat": [[62, "doubletofloat"]], "FiniteTensorDictCheck": [[63, "finitetensordictcheck"]], "FlattenObservation": [[64, "flattenobservation"]], "GrayScale": [[65, "grayscale"]], "NoopResetEnv": [[66, "noopresetenv"]], "ObservationNorm": [[67, "observationnorm"]], "ObservationTransform": [[68, "observationtransform"]], "PinMemoryTransform": [[69, "pinmemorytransform"]], "R3MTransform": [[70, "r3mtransform"]], "Resize": [[71, "resize"]], "RewardClipping": [[72, "rewardclipping"]], "RewardScaling": [[73, "rewardscaling"]], "TensorDictPrimer": [[74, "tensordictprimer"]], "ToTensorImage": [[75, "totensorimage"]], "Transform": [[76, "transform"]], "TransformedEnv": [[77, "transformedenv"]], "UnsqueezeTransform": [[78, "unsqueezetransform"]], "VIPTransform": [[79, "viptransform"]], "VecNorm": [[80, "vecnorm"]], "gSDENoise": [[81, "gsdenoise"]], "exploration_mode": [[82, "exploration-mode"]], "get_available_libraries": [[83, "get-available-libraries"]], "set_exploration_mode": [[84, "set-exploration-mode"]], "step_mdp": [[85, "step-mdp"]], "Actor": [[86, "actor"]], "ActorCriticOperator": [[87, "actorcriticoperator"]], "ActorCriticWrapper": [[88, "actorcriticwrapper"]], "ActorValueOperator": [[89, "actorvalueoperator"]], "CEMPlanner": [[90, "cemplanner"]], "ConvNet": [[91, "convnet"]], "DdpgCnnActor": [[92, "ddpgcnnactor"]], "DdpgCnnQNet": [[93, "ddpgcnnqnet"]], "DdpgMlpActor": [[94, "ddpgmlpactor"]], "DdpgMlpQNet": [[95, "ddpgmlpqnet"]], "Delta": [[96, "delta"]], "DistributionalDQNnet": [[97, "distributionaldqnnet"]], "DistributionalQValueActor": [[98, "distributionalqvalueactor"]], "DreamerActor": [[99, "dreameractor"]], "DuelingCnnDQNet": [[100, "duelingcnndqnet"]], "LSTMNet": [[101, "lstmnet"]], "MLP": [[102, "mlp"]], "MPCPlannerBase": [[103, "mpcplannerbase"]], "NoisyLazyLinear": [[104, "noisylazylinear"]], "NoisyLinear": [[105, "noisylinear"]], "ObsDecoder": [[106, "obsdecoder"]], "ObsEncoder": [[107, "obsencoder"]], "OneHotCategorical": [[108, "onehotcategorical"]], "ProbabilisticActor": [[109, "probabilisticactor"]], "ProbabilisticTensorDictModule": [[110, "probabilistictensordictmodule"]], "QValueActor": [[111, "qvalueactor"]], "RSSMPosterior": [[112, "rssmposterior"]], "RSSMPrior": [[113, "rssmprior"]], "Squeeze2dLayer": [[114, "squeeze2dlayer"]], "SqueezeLayer": [[115, "squeezelayer"]], "TanhDelta": [[116, "tanhdelta"]], "TanhNormal": [[117, "tanhnormal"]], "TensorDictModule": [[118, "tensordictmodule"]], "TensorDictModuleWrapper": [[119, "tensordictmodulewrapper"]], "TensorDictSequential": [[120, "tensordictsequential"]], "TruncatedNormal": [[121, "truncatednormal"]], "ValueOperator": [[122, "valueoperator"]], "reset_noise": [[123, "reset-noise"]], "DistributionalQValueHook": [[124, "distributionalqvaluehook"]], "QValueHook": [[125, "qvaluehook"]], "A2CLoss": [[126, "a2closs"]], "ClipPPOLoss": [[127, "clipppoloss"]], "DDPGLoss": [[128, "ddpgloss"]], "DQNLoss": [[129, "dqnloss"]], "DistributionalDQNLoss": [[130, "distributionaldqnloss"]], "HardUpdate": [[131, "hardupdate"]], "KLPENPPOLoss": [[132, "klpenppoloss"]], "PPOLoss": [[133, "ppoloss"]], "REDQLoss": [[134, "redqloss"]], "SACLoss": [[135, "sacloss"]], "SoftUpdate": [[136, "softupdate"]], "distance_loss": [[137, "distance-loss"]], "hold_out_net": [[138, "hold-out-net"]], "hold_out_params": [[139, "hold-out-params"]], "next_state_value": [[140, "next-state-value"]], "GAE": [[141, "gae"]], "TDEstimate": [[142, "tdestimate"]], "TDLambdaEstimate": [[143, "tdlambdaestimate"]], "generalized_advantage_estimate": [[144, "generalized-advantage-estimate"]], "td_advantage_estimate": [[145, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[146, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[147, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[148, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[149, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[150, "vec-td-lambda-return-estimate"]], "BatchSubSampler": [[151, "batchsubsampler"]], "ClearCudaCache": [[152, "clearcudacache"]], "CountFramesLog": [[153, "countframeslog"]], "LogReward": [[154, "logreward"]], "Recorder": [[155, "recorder"]], "RewardNormalizer": [[157, "rewardnormalizer"]], "SelectKeys": [[158, "selectkeys"]], "Trainer": [[159, "trainer"]], "UpdateWeights": [[160, "updateweights"]], "correct_for_frame_skip": [[161, "correct-for-frame-skip"]], "get_stats_random_rollout": [[162, "get-stats-random-rollout"]], "make_a2c_loss": [[163, "make-a2c-loss"]], "make_a2c_model": [[164, "make-a2c-model"]], "make_collector_offpolicy": [[165, "make-collector-offpolicy"]], "make_collector_onpolicy": [[166, "make-collector-onpolicy"]], "make_ddpg_actor": [[167, "make-ddpg-actor"]], "make_ddpg_loss": [[168, "make-ddpg-loss"]], "make_dqn_actor": [[169, "make-dqn-actor"]], "make_dqn_loss": [[170, "make-dqn-loss"]], "make_ppo_loss": [[171, "make-ppo-loss"]], "make_ppo_model": [[172, "make-ppo-model"]], "make_redq_loss": [[173, "make-redq-loss"]], "make_redq_model": [[174, "make-redq-model"]], "make_replay_buffer": [[175, "make-replay-buffer"]], "make_sac_loss": [[176, "make-sac-loss"]], "make_sac_model": [[177, "make-sac-model"]], "make_target_updater": [[178, "make-target-updater"]], "make_trainer": [[179, "make-trainer"]], "parallel_env_constructor": [[180, "parallel-env-constructor"]], "sync_async_collector": [[181, "sync-async-collector"]], "sync_sync_collector": [[182, "sync-sync-collector"]], "transformed_env_constructor": [[183, "transformed-env-constructor"]], "API Reference": [[184, "api-reference"]], "Knowledge Base": [[185, "knowledge-base"]], "Contributing": [[185, "contributing"]], "torchrl.modules package": [[186, "torchrl-modules-package"]], "TensorDict modules": [[186, "tensordict-modules"]], "Hooks": [[186, "hooks"]], "Models": [[186, "models"]], "Exploration": [[186, "exploration"]], "Planners": [[186, "planners"]], "Distributions": [[186, "distributions"]], "torchrl.objectives package": [[187, "torchrl-objectives-package"]], "DQN": [[187, "dqn"]], "DDPG": [[187, "ddpg"]], "SAC": [[187, "sac"]], "REDQ": [[187, "redq"]], "PPO": [[187, "ppo"]], "A2C": [[187, "a2c"]], "Returns": [[187, "returns"]], "torchrl.trainers package": [[188, "torchrl-trainers-package"]], "Checkpointing": [[188, "checkpointing"]], "Trainer and hooks": [[188, "trainer-and-hooks"]], "Builders": [[188, "builders"]], "torchrl._utils package": [[189, "torchrl-utils-package"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[11, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors)": [[12, "torchrl.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors)": [[13, "torchrl.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "syncdatacollector (class in torchrl.collectors)": [[14, "torchrl.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.syncdatacollector method)": [[14, "torchrl.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.syncdatacollector method)": [[14, "torchrl.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.syncdatacollector method)": [[14, "torchrl.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.syncdatacollector method)": [[14, "torchrl.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.syncdatacollector method)": [[14, "torchrl.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.syncdatacollector method)": [[14, "torchrl.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.syncdatacollector method)": [[14, "torchrl.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.syncdatacollector method)": [[14, "torchrl.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors)": [[15, "torchrl.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[16, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[17, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[18, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.encode"]], "index() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[19, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.encode"]], "index() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[20, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.encode"]], "index() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.zero"]], "multonehotdiscretetensorspec (class in torchrl.data)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[22, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.zero_grad"]], "ndboundedtensorspec (class in torchrl.data)": [[23, "torchrl.data.NdBoundedTensorSpec"]], "assert_is_in() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.encode"]], "index() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.index"]], "is_in() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.is_in"]], "project() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.project"]], "rand() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.type_check"]], "zero() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.zero"]], "ndunboundedcontinuoustensorspec (class in torchrl.data)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.zero"]], "onehotdiscretetensorspec (class in torchrl.data)": [[25, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[26, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.add"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.update_priority"]], "replaybuffer (class in torchrl.data)": [[27, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.add"]], "extend() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.extend"]], "sample() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.update_priority"]], "tensordictreplaybuffer (class in torchrl.data)": [[29, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[30, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.encode"]], "index() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[31, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "remotetensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[32, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.sample"]], "replaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[33, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[34, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[34, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[34, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[34, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[34, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[34, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.sample"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[35, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[35, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[36, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[37, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[38, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[39, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[39, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[40, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[40, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[41, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[41, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[42, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[42, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[42, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[43, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[43, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[43, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[44, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[44, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[44, "id0"], [44, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[44, "id1"], [44, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[44, "id2"], [44, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[44, "id3"], [44, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[44, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[44, "id4"], [44, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[44, "torchrl.envs.EnvBase.zero_grad"]], "gymlikeenv (class in torchrl.envs)": [[45, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[45, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[45, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[46, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[46, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[46, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[46, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[46, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[46, "torchrl.envs.step"]], "parallelenv (class in torchrl.envs)": [[47, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[47, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[47, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[48, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[48, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[48, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.zero_grad"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[49, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[50, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[51, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[52, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[53, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[54, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[55, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[56, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[57, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[57, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[58, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[58, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[58, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[59, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[59, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[60, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[60, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[61, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[61, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[61, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[61, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[61, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[61, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[61, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[62, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[62, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[62, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[64, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "grayscale (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[65, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[66, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[67, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[67, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.R3MTransform"]], "forward() (torchrl.envs.transforms.r3mtransform method)": [[70, "torchrl.envs.transforms.R3MTransform.forward"]], "reset() (torchrl.envs.transforms.r3mtransform method)": [[70, "torchrl.envs.transforms.R3MTransform.reset"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[70, "torchrl.envs.transforms.R3MTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.r3mtransform method)": [[70, "torchrl.envs.transforms.R3MTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.r3mtransform method)": [[70, "torchrl.envs.transforms.R3MTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.r3mtransform method)": [[70, "torchrl.envs.transforms.R3MTransform.transform_reward_spec"]], "resize (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[71, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[72, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[73, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[74, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[74, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[74, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[75, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[76, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[76, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[76, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[76, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[76, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[77, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[77, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[77, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[77, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[77, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[77, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[77, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[77, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[77, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[77, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[77, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[78, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[78, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[78, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[78, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viptransform (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.VIPTransform"]], "forward() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.forward"]], "reset() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.reset"]], "to() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.viptransform method)": [[79, "torchrl.envs.transforms.VIPTransform.transform_reward_spec"]], "vecnorm (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[80, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[80, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[80, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[80, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[81, "torchrl.envs.transforms.gSDENoise.reset"]], "exploration_mode() (in module torchrl.envs.utils)": [[82, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[83, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[84, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[85, "torchrl.envs.utils.step_mdp"]], "actor (class in torchrl.modules)": [[86, "torchrl.modules.Actor"]], "actorcriticoperator (class in torchrl.modules)": [[87, "torchrl.modules.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.actorcriticoperator method)": [[87, "torchrl.modules.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.actorcriticoperator method)": [[87, "torchrl.modules.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules)": [[88, "torchrl.modules.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.actorcriticwrapper method)": [[88, "torchrl.modules.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorcriticwrapper method)": [[88, "torchrl.modules.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules)": [[89, "torchrl.modules.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.actorvalueoperator method)": [[89, "torchrl.modules.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorvalueoperator method)": [[89, "torchrl.modules.ActorValueOperator.get_value_operator"]], "cemplanner (class in torchrl.modules)": [[90, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[90, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[91, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[91, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[92, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[92, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[93, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[93, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[94, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[94, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[95, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[95, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[96, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[96, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[96, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[96, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[96, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[96, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[97, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[97, "torchrl.modules.DistributionalDQNnet.forward"]], "distributionalqvalueactor (class in torchrl.modules)": [[98, "torchrl.modules.DistributionalQValueActor"]], "dreameractor (class in torchrl.modules)": [[99, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[99, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[100, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[100, "torchrl.modules.DuelingCnnDQNet.forward"]], "lstmnet (class in torchrl.modules)": [[101, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[101, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[102, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[102, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[103, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[103, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[103, "torchrl.modules.MPCPlannerBase.planning"]], "noisylazylinear (class in torchrl.modules)": [[104, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[104, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[105, "torchrl.modules.NoisyLinear"]], "obsdecoder (class in torchrl.modules)": [[106, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[106, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[107, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[107, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[108, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[108, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[108, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[108, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[108, "torchrl.modules.OneHotCategorical.sample"]], "probabilisticactor (class in torchrl.modules)": [[109, "torchrl.modules.ProbabilisticActor"]], "probabilistictensordictmodule (class in torchrl.modules)": [[110, "torchrl.modules.ProbabilisticTensorDictModule"]], "forward() (torchrl.modules.probabilistictensordictmodule method)": [[110, "torchrl.modules.ProbabilisticTensorDictModule.forward"]], "make_functional_with_buffers() (torchrl.modules.probabilistictensordictmodule method)": [[110, "torchrl.modules.ProbabilisticTensorDictModule.make_functional_with_buffers"]], "qvalueactor (class in torchrl.modules)": [[111, "torchrl.modules.QValueActor"]], "rssmposterior (class in torchrl.modules)": [[112, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[112, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[113, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[113, "torchrl.modules.RSSMPrior.forward"]], "squeeze2dlayer (class in torchrl.modules)": [[114, "torchrl.modules.Squeeze2dLayer"]], "squeezelayer (class in torchrl.modules)": [[115, "torchrl.modules.SqueezeLayer"]], "forward() (torchrl.modules.squeezelayer method)": [[115, "torchrl.modules.SqueezeLayer.forward"]], "tanhdelta (class in torchrl.modules)": [[116, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[116, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[116, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[117, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[117, "torchrl.modules.TanhNormal.mode"]], "tensordictmodule (class in torchrl.modules)": [[118, "torchrl.modules.TensorDictModule"]], "forward() (torchrl.modules.tensordictmodule method)": [[118, "torchrl.modules.TensorDictModule.forward"]], "make_functional_with_buffers() (torchrl.modules.tensordictmodule method)": [[118, "torchrl.modules.TensorDictModule.make_functional_with_buffers"]], "random() (torchrl.modules.tensordictmodule method)": [[118, "torchrl.modules.TensorDictModule.random"]], "random_sample() (torchrl.modules.tensordictmodule method)": [[118, "torchrl.modules.TensorDictModule.random_sample"]], "to() (torchrl.modules.tensordictmodule method)": [[118, "torchrl.modules.TensorDictModule.to"]], "tensordictmodulewrapper (class in torchrl.modules)": [[119, "torchrl.modules.TensorDictModuleWrapper"]], "forward() (torchrl.modules.tensordictmodulewrapper method)": [[119, "torchrl.modules.TensorDictModuleWrapper.forward"]], "tensordictsequential (class in torchrl.modules)": [[120, "torchrl.modules.TensorDictSequential"]], "forward() (torchrl.modules.tensordictsequential method)": [[120, "torchrl.modules.TensorDictSequential.forward"]], "make_functional_with_buffers() (torchrl.modules.tensordictsequential method)": [[120, "torchrl.modules.TensorDictSequential.make_functional_with_buffers"]], "select_subsequence() (torchrl.modules.tensordictsequential method)": [[120, "torchrl.modules.TensorDictSequential.select_subsequence"]], "truncatednormal (class in torchrl.modules)": [[121, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[121, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[121, "torchrl.modules.TruncatedNormal.mode"]], "valueoperator (class in torchrl.modules)": [[122, "torchrl.modules.ValueOperator"]], "reset_noise (class in torchrl.modules)": [[123, "torchrl.modules.reset_noise"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[124, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[125, "torchrl.modules.tensordict_module.actors.QValueHook"]], "a2closs (class in torchrl.objectives)": [[126, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[126, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[127, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[127, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[128, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[128, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[129, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[129, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[130, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[130, "torchrl.objectives.DistributionalDQNLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[131, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[132, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[132, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[133, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[133, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[134, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[134, "torchrl.objectives.REDQLoss.forward"]], "sacloss (class in torchrl.objectives)": [[135, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[135, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[136, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[137, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[138, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[139, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[140, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[141, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[141, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[142, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[142, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[143, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[143, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[144, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[145, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[146, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[147, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[148, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[149, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[150, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "batchsubsampler (class in torchrl.trainers)": [[151, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[152, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[153, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[154, "torchrl.trainers.LogReward"]], "recorder (class in torchrl.trainers)": [[155, "torchrl.trainers.Recorder"]], "replaybuffer (class in torchrl.trainers)": [[156, "torchrl.trainers.ReplayBuffer"]], "add() (torchrl.trainers.replaybuffer method)": [[156, "torchrl.trainers.ReplayBuffer.add"]], "extend() (torchrl.trainers.replaybuffer method)": [[156, "torchrl.trainers.ReplayBuffer.extend"]], "sample() (torchrl.trainers.replaybuffer method)": [[156, "torchrl.trainers.ReplayBuffer.sample"]], "rewardnormalizer (class in torchrl.trainers)": [[157, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[158, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[159, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[160, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[161, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[162, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[163, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[164, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[165, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[166, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[167, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[168, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[169, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[170, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[171, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[172, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[173, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[174, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[175, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[176, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[177, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[178, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[179, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[180, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[181, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[182, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[183, "torchrl.trainers.helpers.transformed_env_constructor"]]}})