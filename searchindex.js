Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.Specs", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.CSVLogger", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.MLFlowLogger", "reference/generated/torchrl.record.loggers.TensorboardLogger", "reference/generated/torchrl.record.loggers.WandbLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/index", "tutorials/multi_task", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/sg_execution_times", "tutorials/torch_envs", "tutorials/torchrl_demo"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.Specs.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.CSVLogger.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.WandbLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/sg_execution_times.rst", "tutorials/torch_envs.rst", "tutorials/torchrl_demo.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips and Debugging", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "Specs", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "Resize", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "RSSMPosterior", "RSSMPrior", "TanhDelta", "TanhNormal", "TruncatedNormal", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DistributionalQValueActor", "EGreedyWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticSequential", "SafeSequential", "ValueOperator", "WorldModelWrapper", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "CSVLogger", "Logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "generate_exp_name", "get_logger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "Reinforcement Learning (PPO) with TorchRL Tutorial", "README Tutos", "Task-specific policy in multi-task environments", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Computation times", "TorchRL envs", "Introduction to TorchRL"], "terms": {"The": [0, 1, 2, 3, 4, 5, 7, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 42, 45, 47, 48, 49, 67, 70, 76, 79, 83, 85, 88, 92, 95, 103, 105, 106, 107, 108, 114, 116, 117, 119, 120, 124, 125, 130, 131, 137, 138, 140, 141, 143, 144, 145, 150, 154, 155, 156, 158, 159, 160, 162, 166, 171, 172, 173, 174, 184, 186, 187, 188, 191, 195, 221, 223, 224, 231, 233, 234, 235, 238, 239, 241, 242], "tensordict": [0, 1, 3, 12, 13, 15, 16, 17, 20, 21, 22, 24, 28, 29, 33, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 114, 116, 117, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 171, 172, 173, 174, 182, 191, 195, 197, 199, 200, 206, 209, 211, 214, 216, 219, 227, 231, 233, 234, 235, 237, 238, 239, 241], "class": [0, 1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 57, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 223, 224, 225, 231, 233, 234, 235, 241], "ha": [0, 3, 4, 5, 7, 8, 10, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 43, 45, 47, 48, 49, 64, 88, 92, 134, 136, 141, 162, 233, 234, 235, 237, 238, 239, 241, 242], "been": [0, 5, 7, 8, 12, 13, 16, 42, 45, 47, 48, 49, 91, 234, 235, 237, 238, 241], "move": [0, 4, 24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 96, 115, 140, 198, 233, 234, 238, 241, 242], "out": [0, 3, 4, 5, 24, 42, 45, 47, 48, 49, 88, 98, 118, 119, 137, 140, 141, 169, 170, 231, 233, 234, 235, 238, 241, 242], "dedic": [0, 131, 132, 133, 233, 237], "librari": [0, 5, 6, 7, 8, 9, 10, 47, 100, 227, 228, 232, 235, 238, 241], "take": [0, 1, 3, 8, 17, 42, 45, 47, 48, 49, 87, 89, 91, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150, 152, 175, 176, 177, 178, 179, 180, 181, 191, 202, 231, 233, 234, 235, 238, 241], "look": [0, 5, 7, 8, 24, 42, 45, 47, 48, 49, 79, 80, 141, 142, 143, 234, 235, 238, 239, 241, 242], "find": [0, 4, 6, 134, 136], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 233, 234, 235, 236, 237, 238, 239, 241, 242], "code": [0, 3, 5, 7, 8, 79, 143, 235, 236, 237, 239, 240, 241, 242], "github": [0, 2, 5, 6, 7, 10, 239, 242], "i": [0, 1, 2, 3, 6, 7, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 53, 63, 64, 65, 66, 67, 68, 70, 72, 75, 76, 79, 80, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 98, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 125, 126, 127, 128, 130, 131, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 191, 193, 194, 195, 196, 197, 198, 200, 203, 204, 206, 209, 214, 216, 219, 221, 225, 228, 231, 233, 234, 235, 237, 238, 239, 241, 242], "an": [0, 1, 2, 3, 5, 8, 9, 10, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 66, 68, 71, 75, 76, 79, 80, 81, 88, 90, 91, 92, 96, 98, 104, 105, 106, 107, 108, 114, 115, 116, 118, 122, 131, 132, 133, 137, 140, 141, 142, 145, 148, 149, 152, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 172, 173, 174, 183, 189, 195, 196, 200, 201, 204, 209, 222, 223, 224, 225, 228, 233, 234, 237, 239, 241, 242], "open": [0, 5, 7, 11, 242], "reinforc": [0, 2, 3, 9, 64, 105, 106, 107, 108, 137, 146, 153, 157, 161, 165, 166, 167, 209, 227, 234, 236, 238, 240, 242], "learn": [0, 2, 3, 7, 8, 9, 24, 64, 105, 106, 107, 108, 117, 119, 137, 146, 153, 157, 161, 164, 165, 166, 167, 209, 233, 234, 236, 237, 238, 240, 241, 242], "rl": [0, 1, 2, 3, 5, 8, 10, 12, 13, 15, 16, 46, 119, 130, 138, 144, 153, 163, 191, 228, 231, 233, 234, 235, 239, 241], "pytorch": [0, 1, 2, 8, 90, 200, 231, 233, 234, 235, 238, 239, 241, 242], "It": [0, 2, 3, 4, 7, 24, 28, 42, 45, 46, 47, 48, 49, 57, 76, 80, 92, 98, 105, 107, 111, 124, 125, 137, 141, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 171, 172, 196, 216, 228, 233, 238, 239, 241, 242], "provid": [0, 2, 3, 5, 8, 9, 15, 18, 22, 23, 24, 25, 26, 27, 28, 42, 45, 46, 47, 48, 49, 65, 66, 72, 75, 76, 79, 80, 84, 88, 92, 95, 96, 104, 114, 115, 116, 130, 134, 136, 138, 146, 166, 171, 172, 173, 174, 183, 190, 191, 197, 204, 206, 214, 216, 219, 221, 228, 231, 233, 234, 235, 237, 238, 239, 241, 242], "python": [0, 3, 5, 6, 7, 10, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242], "first": [0, 1, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 45, 65, 72, 76, 79, 80, 90, 92, 115, 118, 122, 140, 141, 159, 182, 199, 233, 234, 235, 237, 238, 239, 241, 242], "low": [0, 68, 234, 238, 242], "high": [0, 9, 68, 172, 175, 176, 179, 233, 234, 242], "level": [0, 4, 20, 162, 233, 234, 238, 242], "abstract": [0, 8, 19, 20, 21, 22, 30, 31, 32, 41, 42, 77, 116, 201, 231, 235, 238, 242], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 12, 13, 15, 16, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 67, 68, 69, 71, 72, 79, 84, 88, 91, 92, 93, 95, 96, 102, 103, 108, 109, 114, 116, 119, 123, 125, 137, 140, 141, 142, 143, 152, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 197, 221, 225, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242], "intend": [0, 7, 12, 13, 15, 16, 68, 242], "effici": [0, 2, 4, 8, 119, 233, 234, 235, 237, 239, 242], "modular": [0, 143, 242], "properli": [0, 235, 238, 242], "test": [0, 3, 5, 98, 114, 196, 221, 234, 235, 242], "aim": [0, 3, 7, 79, 95, 115, 203, 228, 233, 234, 242], "support": [0, 3, 20, 39, 47, 76, 91, 100, 135, 140, 143, 146, 157, 172, 173, 174, 186, 231, 235, 238, 242], "research": [0, 7, 9, 242], "most": [0, 3, 7, 8, 24, 68, 233, 235, 238, 242], "written": [0, 3, 36, 42, 45, 47, 48, 49, 64, 84, 89, 137, 140, 141, 153, 154, 162, 163, 171, 182, 183, 231, 233, 237, 238, 242], "highli": [0, 2, 241, 242], "wai": [0, 3, 4, 79, 95, 163, 233, 234, 235, 237, 239, 241, 242], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 42, 43, 45, 47, 48, 49, 64, 67, 68, 75, 76, 79, 80, 84, 88, 91, 92, 95, 96, 103, 113, 116, 117, 119, 120, 127, 128, 134, 140, 141, 142, 143, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 171, 172, 173, 174, 196, 206, 214, 216, 219, 223, 224, 225, 228, 231, 233, 234, 235, 237, 238, 239, 241, 242], "easili": [0, 3, 7, 48, 49, 206, 214, 216, 219, 234, 235, 241, 242], "swap": [0, 3, 235, 239, 242], "compon": [0, 2, 3, 36, 37, 38, 39, 146, 147, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 195, 200, 233, 235, 237, 238, 239, 242], "transform": [0, 2, 4, 8, 24, 26, 27, 28, 29, 43, 45, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 105, 111, 146, 147, 150, 152, 183, 197, 206, 209, 211, 214, 216, 219, 225, 227, 234, 236, 239, 240], "them": [0, 7, 26, 27, 28, 29, 42, 43, 45, 47, 48, 49, 50, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150, 162, 183, 233, 234, 237, 238, 239, 241, 242], "write": [0, 8, 24, 45, 78, 140, 141, 143, 155, 156, 164, 166, 171, 183, 231, 233, 234, 235, 236, 237, 239, 240, 242], "new": [0, 3, 4, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 42, 45, 47, 48, 49, 84, 91, 96, 102, 137, 140, 141, 145, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 233, 234, 235, 238, 241, 242], "ones": [0, 20, 24, 42, 45, 47, 48, 49, 65, 67, 69, 76, 79, 88, 92, 95, 140, 233, 235, 238, 241, 242], "littl": [0, 3, 235, 241, 242], "effort": [0, 3, 238, 242], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 20, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 50, 57, 64, 65, 67, 68, 71, 73, 76, 79, 80, 84, 85, 88, 89, 91, 92, 94, 95, 96, 98, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 145, 146, 147, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 173, 174, 182, 191, 193, 196, 197, 200, 202, 203, 204, 206, 214, 216, 219, 221, 225, 228, 231, 233, 234, 235, 237, 238, 239, 241, 242], "repo": [0, 6, 228, 242], "attempt": [0, 134, 136, 242], "align": [0, 242], "exist": [0, 4, 24, 42, 45, 47, 48, 49, 65, 92, 204, 225, 241, 242], "ecosystem": [0, 242], "dataset": [0, 26, 27, 28, 96, 234, 239, 241, 242], "pillar": [0, 242], "environ": [0, 1, 2, 3, 5, 8, 11, 12, 13, 15, 16, 24, 25, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 68, 69, 73, 75, 76, 79, 80, 87, 91, 92, 96, 98, 103, 114, 116, 117, 158, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 191, 193, 196, 203, 204, 206, 207, 208, 209, 211, 214, 216, 219, 221, 222, 223, 224, 225, 228, 236, 239, 240], "model": [0, 1, 3, 8, 9, 12, 13, 15, 16, 24, 42, 45, 46, 47, 48, 49, 79, 88, 95, 97, 104, 115, 116, 117, 131, 132, 133, 140, 145, 153, 158, 159, 160, 163, 164, 166, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 227, 228, 231, 235, 236, 238, 240, 241], "data": [0, 3, 8, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 76, 98, 103, 114, 117, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 155, 164, 166, 172, 173, 174, 191, 197, 200, 202, 207, 221, 223, 224, 225, 227, 231, 238, 239, 241], "util": [0, 3, 12, 13, 15, 16, 17, 24, 42, 45, 47, 48, 49, 79, 95, 98, 99, 100, 101, 102, 104, 150, 151, 152, 221, 227, 232, 233, 234, 235, 238, 241, 242], "e": [0, 1, 3, 8, 10, 11, 12, 13, 15, 16, 20, 24, 25, 36, 37, 42, 43, 45, 47, 48, 49, 65, 67, 72, 76, 79, 84, 88, 91, 92, 95, 98, 113, 117, 120, 127, 128, 140, 141, 147, 171, 172, 173, 174, 191, 203, 224, 233, 234, 235, 238, 239, 241, 242], "g": [0, 1, 3, 8, 10, 11, 24, 25, 42, 43, 45, 47, 48, 49, 65, 67, 72, 76, 79, 84, 88, 91, 92, 95, 98, 113, 117, 127, 128, 140, 141, 171, 177, 178, 180, 181, 224, 233, 234, 235, 238, 239, 241, 242], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 137, 197, 200, 202, 207, 208, 221, 223, 224, 227, 231, 241], "contain": [0, 3, 7, 12, 13, 15, 16, 20, 24, 26, 27, 28, 29, 30, 33, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 67, 69, 79, 88, 92, 95, 96, 102, 103, 104, 115, 117, 140, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 171, 172, 173, 174, 190, 191, 203, 206, 209, 211, 214, 216, 219, 221, 222, 223, 224, 225, 231, 233, 234, 235, 238, 239, 241, 242], "etc": [0, 3, 7, 8, 11, 24, 31, 32, 42, 45, 47, 48, 49, 92, 115, 233, 235, 241, 242], "have": [0, 3, 5, 6, 7, 8, 12, 13, 16, 20, 22, 24, 39, 42, 45, 47, 48, 49, 50, 64, 75, 76, 88, 91, 92, 96, 98, 104, 114, 115, 142, 143, 154, 162, 163, 168, 191, 200, 231, 233, 234, 235, 237, 238, 239, 241, 242], "few": [0, 2, 8, 191, 234, 235, 241, 242], "depend": [0, 3, 4, 7, 8, 144, 163, 235, 238, 241, 242], "possibl": [0, 3, 4, 21, 24, 25, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140, 196, 200, 233, 235, 238, 241, 242], "standard": [0, 76, 83, 96, 103, 111, 117, 118, 119, 134, 172, 173, 174, 233, 234, 242], "numpi": [0, 11, 15, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 90, 200, 233, 234, 238, 241, 242], "common": [0, 3, 4, 45, 48, 49, 131, 132, 133, 148, 149, 221, 228, 231, 233, 235, 237, 239, 241, 242], "openai": [0, 7, 55, 56, 235, 238, 241, 242], "gym": [0, 3, 4, 8, 11, 12, 13, 15, 43, 45, 55, 56, 76, 88, 96, 206, 209, 211, 214, 216, 219, 221, 228, 233, 234, 235, 238, 239, 242], "onli": [0, 1, 3, 4, 7, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 42, 45, 47, 48, 49, 50, 65, 67, 68, 72, 76, 79, 80, 88, 92, 95, 96, 114, 140, 141, 142, 143, 204, 231, 233, 234, 235, 237, 238, 241, 242], "option": [0, 4, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 42, 43, 45, 46, 47, 48, 49, 50, 53, 64, 65, 66, 68, 69, 72, 73, 75, 76, 79, 80, 83, 87, 88, 89, 90, 92, 93, 95, 96, 98, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 134, 136, 137, 141, 142, 143, 146, 147, 155, 156, 158, 159, 160, 164, 166, 171, 172, 173, 174, 177, 178, 180, 181, 183, 191, 193, 194, 195, 196, 197, 198, 200, 204, 206, 209, 214, 216, 219, 221, 223, 224, 225, 238, 242], "On": [0, 3, 7, 234], "end": [0, 24, 26, 27, 28, 29, 42, 45, 47, 48, 49, 92, 104, 116, 175, 176, 177, 178, 179, 180, 181, 233, 237, 238, 239, 241, 242], "come": [0, 1, 3, 8, 48, 49, 130, 131, 132, 133, 138, 144, 233, 234, 235, 241, 242], "set": [0, 1, 2, 3, 7, 9, 12, 13, 15, 16, 24, 25, 26, 27, 28, 29, 39, 42, 44, 45, 46, 47, 48, 49, 65, 67, 79, 87, 88, 92, 95, 98, 101, 116, 134, 140, 191, 196, 197, 208, 225, 228, 232, 233, 234, 235, 237, 238, 239, 241, 242], "re": [0, 3, 8, 24, 42, 45, 47, 48, 49, 141, 231, 234, 235, 237, 238, 241, 242], "usabl": [0, 231, 242], "function": [0, 3, 8, 11, 17, 24, 36, 37, 38, 39, 42, 43, 45, 47, 48, 49, 69, 92, 96, 98, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 120, 121, 122, 123, 124, 125, 128, 131, 132, 133, 134, 136, 137, 140, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 162, 163, 164, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 206, 209, 211, 214, 216, 219, 221, 227, 233, 237, 238, 241], "cost": [0, 2, 21, 234, 238], "return": [0, 3, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 99, 100, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 120, 123, 124, 125, 126, 127, 128, 131, 132, 133, 135, 139, 140, 141, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 177, 178, 180, 181, 200, 203, 206, 207, 209, 211, 214, 216, 219, 221, 222, 223, 224, 225, 227, 231, 233, 234, 235, 237, 238, 239, 241, 242], "process": [0, 1, 2, 3, 4, 5, 8, 12, 13, 16, 24, 42, 43, 45, 47, 48, 49, 96, 137, 231, 233, 234, 238, 239, 241, 242], "good": [0, 1, 4, 9, 233, 235, 241, 242], "runtim": [0, 3, 24, 42, 45, 47, 48, 49, 238], "perform": [0, 3, 4, 8, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 75, 92, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 124, 125, 134, 136, 137, 150, 159, 163, 196, 200, 233, 234, 235, 237, 238, 241], "ppo": [0, 4, 8, 141, 154, 162, 163, 206, 213, 214, 227, 233, 234, 236, 240], "pendulum": [0, 3, 12, 13, 15, 16, 43, 47, 55, 56, 67, 76, 88, 92, 96, 221, 234, 235, 236, 240, 241, 242], "your": [0, 2, 3, 7, 8, 10, 24, 42, 45, 47, 48, 49, 96, 225, 228, 234, 235, 236, 240, 242], "introduct": [0, 236, 240, 241], "env": [0, 1, 2, 5, 6, 7, 8, 12, 13, 15, 24, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 116, 117, 140, 182, 204, 206, 207, 208, 209, 211, 214, 216, 219, 221, 223, 224, 225, 227, 233, 234, 235, 236, 237, 239, 240], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 15, 16, 20, 21, 24, 26, 27, 28, 29, 33, 42, 43, 45, 46, 47, 48, 49, 53, 65, 66, 68, 76, 79, 80, 88, 90, 91, 92, 95, 96, 98, 101, 102, 103, 104, 105, 106, 111, 113, 115, 116, 117, 119, 120, 127, 128, 137, 140, 141, 145, 146, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 179, 189, 190, 196, 197, 200, 202, 204, 207, 208, 209, 217, 221, 225, 228, 231, 232, 235, 236, 237, 238, 240, 241], "pretrain": [0, 236, 240], "task": [0, 9, 48, 49, 53, 79, 95, 233, 234, 235, 236, 238, 240, 241, 242], "specif": [0, 5, 8, 28, 29, 45, 200, 227, 231, 233, 235, 236, 240], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 42, 45, 46, 47, 48, 49, 68, 101, 102, 119, 131, 132, 133, 134, 136, 137, 140, 141, 146, 147, 153, 154, 155, 162, 163, 164, 166, 196, 202, 206, 207, 208, 209, 211, 214, 221, 223, 224, 231, 234, 236, 239, 240, 241, 242], "multi": [0, 3, 7, 9, 24, 42, 45, 47, 48, 49, 114, 115, 233, 234, 236, 238, 240, 242], "ddpg": [0, 105, 106, 107, 108, 155, 161, 167, 209, 210, 227, 234, 236, 240], "pixel": [0, 3, 7, 20, 64, 66, 72, 74, 76, 79, 81, 90, 95, 105, 121, 122, 183, 206, 211, 214, 216, 219, 233, 236, 239, 240, 241, 242], "dqn": [0, 135, 139, 146, 156, 157, 161, 167, 211, 212, 227, 236, 240], "api": [0, 3, 5, 79, 95, 231, 238, 241, 242], "packag": [0, 6, 7, 10, 227, 228, 233, 234, 241], "helper": [0, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 233, 238], "replai": [0, 8, 15, 26, 27, 28, 29, 33, 34, 35, 39, 40, 48, 49, 68, 80, 88, 155, 156, 164, 166, 197, 200, 217, 221, 227, 231, 238, 239], "buffer": [0, 3, 4, 8, 15, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 67, 68, 79, 80, 88, 92, 95, 140, 143, 155, 156, 164, 166, 197, 200, 217, 221, 227, 231, 238, 239, 241], "compos": [0, 3, 24, 26, 27, 28, 34, 35, 40, 42, 45, 47, 48, 49, 91, 92, 96, 159, 206, 209, 211, 214, 216, 219, 227, 233, 234, 235, 237, 241, 242], "tensorspec": [0, 3, 14, 18, 19, 20, 21, 22, 23, 25, 31, 32, 42, 46, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 76, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 125, 130, 134, 136, 137, 138, 140, 141, 142, 227, 238], "envbas": [0, 3, 12, 13, 15, 16, 43, 45, 47, 48, 49, 50, 75, 91, 92, 96, 98, 103, 116, 117, 196, 204, 206, 207, 208, 209, 211, 214, 216, 219, 221, 223, 224, 225, 227], "gymlikeenv": [0, 227], "envmetadata": [0, 227], "spec": [0, 2, 3, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 42, 44, 45, 46, 47, 48, 49, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 76, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 98, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 147, 206, 209, 211, 214, 216, 219, 227, 233, 234, 235, 237, 242], "vector": [0, 8, 18, 25, 48, 49, 68, 105, 107, 115, 174, 180, 181, 227, 233, 234, 237, 238, 239, 241], "record": [0, 24, 42, 45, 47, 48, 49, 163, 182, 183, 184, 185, 186, 187, 188, 189, 190, 221, 227, 235], "domain": [0, 2, 8, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 68, 88, 140, 141, 142, 143, 227, 233, 235, 238, 241, 242], "modul": [0, 3, 4, 8, 11, 24, 42, 45, 46, 47, 48, 49, 67, 68, 79, 80, 88, 92, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 161, 164, 165, 167, 169, 172, 173, 174, 200, 205, 210, 212, 213, 215, 218, 221, 227, 231, 233, 235, 237, 238, 239], "hook": [0, 24, 42, 45, 47, 48, 49, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 135, 136, 137, 139, 146, 147, 150, 193, 194, 196, 197, 198, 200, 201, 202, 227, 233], "explor": [0, 1, 97, 119, 134, 136, 137, 140, 141, 153, 196, 207, 208, 221, 227, 233, 235, 238], "planner": [0, 103, 117, 227], "distribut": [0, 2, 3, 4, 9, 10, 76, 103, 109, 110, 111, 113, 117, 120, 123, 124, 125, 126, 127, 128, 134, 135, 141, 142, 146, 154, 157, 162, 163, 227, 231, 233, 234, 235, 238, 241, 242], "object": [0, 3, 4, 6, 12, 13, 15, 16, 20, 24, 36, 37, 38, 39, 42, 45, 47, 48, 49, 69, 76, 79, 91, 92, 96, 117, 130, 131, 138, 140, 141, 142, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 204, 207, 208, 220, 221, 225, 227, 231, 234, 235, 238, 241], "sac": [0, 164, 166, 218, 219, 227], "redq": [0, 164, 215, 216, 227], "a2c": [0, 153, 205, 227], "dreamer": [0, 62, 111, 158, 159, 160, 227], "trainer": [0, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 233], "checkpoint": [0, 227, 239], "builder": [0, 227, 234, 241], "logger": [0, 183, 184, 186, 187, 188, 189, 190, 194, 196, 200, 221, 225, 227], "_util": [0, 11, 227], "implement_for": [0, 227], "contribut": 0, "thing": [0, 3, 7, 8, 228, 233, 235, 241], "consid": [0, 1, 8, 24, 42, 45, 47, 48, 49, 68, 109, 126, 228, 233, 238], "when": [0, 1, 2, 3, 5, 8, 12, 13, 15, 16, 24, 26, 27, 28, 29, 36, 37, 38, 39, 42, 43, 45, 47, 48, 49, 67, 68, 75, 76, 79, 80, 84, 88, 91, 92, 95, 96, 101, 103, 115, 116, 117, 118, 127, 140, 141, 143, 150, 154, 162, 163, 171, 182, 183, 197, 225, 228, 231, 233, 234, 235, 238, 239, 241], "debug": [0, 6, 228, 241], "gener": [0, 3, 7, 8, 15, 27, 35, 43, 46, 76, 84, 85, 109, 123, 130, 138, 141, 144, 145, 164, 172, 175, 176, 179, 189, 200, 233, 234, 235, 236, 237, 238, 239, 241, 242], "reward": [0, 3, 12, 13, 15, 24, 30, 42, 45, 46, 47, 48, 49, 50, 52, 59, 60, 61, 63, 67, 69, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 102, 103, 117, 145, 155, 156, 159, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 193, 194, 196, 198, 225, 231, 233, 234, 235, 237, 238, 239, 241, 242], "beyond": 0, "go": [0, 3, 7, 80, 233, 238, 239, 241], "up": [0, 1, 2, 3, 8, 9, 21, 228, 233, 234, 235, 238, 241], "dynam": [0, 7, 235, 238], "observ": [0, 2, 3, 8, 12, 13, 15, 30, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 59, 60, 61, 64, 65, 66, 67, 69, 70, 72, 74, 76, 77, 81, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 102, 105, 106, 107, 108, 114, 121, 122, 124, 130, 131, 132, 133, 135, 136, 137, 138, 139, 144, 145, 146, 147, 159, 172, 173, 174, 183, 206, 209, 211, 214, 216, 219, 221, 231, 234, 235, 237, 238, 241, 242], "space": [0, 9, 25, 30, 68, 122, 134, 136, 137, 140, 141, 143, 146, 147, 233, 234, 235, 238, 241, 242], "action": [0, 2, 3, 8, 9, 12, 13, 15, 21, 25, 30, 42, 45, 46, 47, 48, 49, 50, 52, 59, 60, 61, 68, 69, 73, 75, 85, 92, 102, 103, 105, 106, 107, 108, 110, 111, 115, 116, 117, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 146, 147, 156, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 206, 209, 211, 214, 216, 219, 221, 225, 231, 233, 234, 235, 237, 239, 241, 242], "work": [0, 3, 4, 7, 8, 11, 24, 42, 45, 47, 48, 49, 65, 79, 96, 104, 115, 200, 228, 233, 234, 235, 237, 238, 239, 241, 242], "what": [0, 3, 8, 30, 42, 45, 47, 48, 49, 88, 228, 234, 235, 238, 239, 241, 242], "version": [0, 1, 6, 11, 24, 42, 45, 47, 48, 49, 166, 174, 228, 233, 234, 235, 238, 239, 241], "habitat": [0, 57, 228, 239], "lab": [0, 3, 53, 54, 228], "issu": [0, 4, 5, 8, 80, 140, 141, 228, 242], "about": [0, 3, 5, 228, 233, 234, 235, 238, 241, 242], "mujoco": [0, 6, 8, 228, 235], "instal": [0, 5, 10, 200, 228, 235, 241], "prerequisit": [0, 234], "render": [0, 8, 196, 228, 233, 234, 235], "all": [0, 3, 4, 8, 12, 13, 15, 16, 24, 42, 43, 45, 46, 47, 48, 49, 50, 67, 71, 76, 79, 84, 88, 89, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 140, 141, 143, 150, 159, 195, 200, 203, 223, 224, 225, 228, 231, 233, 234, 235, 236, 237, 238, 241, 242], "bindindg": 0, "2": [0, 1, 3, 8, 10, 11, 12, 13, 15, 22, 23, 24, 42, 43, 45, 47, 48, 49, 60, 61, 65, 67, 68, 76, 79, 88, 92, 95, 96, 104, 105, 106, 107, 112, 114, 115, 120, 135, 136, 137, 140, 144, 146, 154, 155, 162, 164, 166, 171, 172, 173, 174, 177, 178, 180, 181, 183, 191, 233, 234, 235, 237, 238, 239, 240, 241, 242], "1": [0, 1, 2, 3, 4, 8, 10, 11, 12, 13, 15, 16, 21, 22, 23, 24, 25, 31, 32, 42, 43, 45, 46, 47, 48, 49, 52, 59, 60, 61, 63, 65, 67, 68, 69, 73, 75, 76, 79, 80, 88, 89, 90, 92, 95, 96, 102, 103, 104, 105, 106, 108, 112, 113, 115, 117, 118, 119, 120, 124, 125, 126, 127, 128, 131, 132, 133, 134, 136, 137, 138, 139, 140, 143, 144, 146, 150, 153, 154, 159, 162, 163, 164, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 191, 196, 197, 198, 206, 209, 211, 214, 216, 219, 221, 225, 228, 231, 233, 234, 235, 237, 238, 239, 241, 242], "old": [0, 162, 241], "bind": [0, 6], "py": [0, 3, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242], "pro": [0, 7, 228], "tip": [0, 7, 228], "gradient": [0, 4, 24, 42, 45, 47, 48, 49, 92, 113, 119, 127, 128, 153, 165, 171, 172, 173, 174, 200, 233, 235, 238], "relat": [0, 4, 10, 72, 234], "error": [0, 1, 3, 7, 10, 11, 24, 42, 45, 47, 48, 49, 80, 98, 149, 233, 234, 235, 241], "newcom": 0, "my": 0, "train": [0, 1, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 73, 79, 92, 95, 98, 105, 107, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 172, 200, 202, 221, 231, 239, 241], "too": [0, 2, 7, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 113, 127, 128, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 172, 173, 174, 233, 234, 235, 238, 241], "slow": [0, 3, 4], "bug": [0, 4, 242], "resourc": [0, 228, 233, 235], "functorch": [0, 8, 10, 140, 143, 234, 242], "blog": 0, "websit": 0, "index": [0, 3, 7, 8, 10, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 41, 68, 102, 233, 234, 237, 242], "search": [0, 234], "page": [0, 7], "somewhat": [1, 241], "equival": [1, 12, 13, 15, 16, 21, 22, 23, 24, 25, 42, 45, 47, 48, 49, 92, 197, 233, 241, 242], "dataload": [1, 234, 235], "except": [1, 3, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 42, 71, 123, 149, 233, 234, 241, 242], "thei": [1, 3, 4, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 69, 71, 79, 91, 92, 95, 114, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 197, 200, 231, 234, 235, 237, 238, 239, 241, 242], "collect": [1, 3, 4, 8, 12, 13, 15, 16, 24, 26, 27, 28, 29, 76, 79, 95, 98, 137, 155, 164, 166, 191, 197, 200, 202, 203, 204, 221, 231, 238, 239, 241, 242], "over": [1, 2, 3, 4, 8, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 68, 76, 89, 143, 157, 159, 203, 231, 233, 235, 238, 241], "non": [1, 8, 24, 42, 45, 47, 48, 49, 63, 67, 72, 79, 88, 92, 93, 95, 140, 141, 159, 172, 173, 174, 233, 238, 241], "static": [1, 96, 238], "like": [1, 4, 7, 24, 42, 45, 47, 48, 49, 57, 90, 98, 164, 233, 235, 238, 239, 241], "being": [1, 3, 8, 16, 24, 42, 45, 47, 48, 49, 68, 69, 92, 101, 137, 154, 162, 163, 183, 197, 202, 223, 224, 225, 233, 234, 235, 238, 239], "": [1, 3, 6, 7, 8, 24, 26, 27, 28, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 96, 98, 104, 119, 134, 140, 141, 166, 172, 173, 174, 216, 219, 233, 234, 235, 237, 238, 239, 241, 242], "accept": [1, 12, 13, 15, 16, 24, 42, 45, 46, 47, 48, 49, 67, 72, 79, 84, 88, 92, 93, 95, 140, 141, 142, 231, 233, 235, 241], "two": [1, 4, 8, 10, 24, 42, 45, 47, 48, 49, 76, 79, 95, 108, 141, 162, 166, 168, 196, 200, 206, 214, 216, 219, 233, 234, 235, 237, 238, 241, 242], "main": [1, 2, 5, 43, 141, 200, 233, 237, 241], "argument": [1, 3, 12, 13, 15, 16, 20, 24, 42, 45, 47, 48, 49, 67, 79, 88, 91, 92, 95, 104, 115, 118, 140, 141, 142, 144, 182, 193, 203, 206, 209, 211, 214, 216, 219, 221, 222, 225, 233, 234, 235, 238, 241], "list": [1, 6, 7, 8, 9, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 38, 39, 42, 45, 46, 47, 48, 49, 64, 69, 76, 79, 84, 92, 95, 115, 143, 144, 170, 172, 174, 182, 196, 197, 223, 224, 233, 234, 235, 237, 238, 239, 241, 242], "constructor": [1, 15, 91, 172, 173, 174, 206, 209, 211, 214, 216, 219, 222, 225, 233, 234, 235], "iter": [1, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 45, 47, 48, 49, 70, 76, 85, 96, 104, 115, 140, 141, 142, 143, 148, 170, 196, 199, 200, 206, 214, 216, 219, 231, 233, 235, 238], "execut": [1, 3, 6, 7, 8, 12, 13, 15, 24, 26, 27, 28, 29, 42, 43, 45, 46, 47, 48, 49, 88, 142, 143, 204, 225, 231, 234, 235, 240, 241], "step": [1, 3, 4, 8, 12, 13, 15, 16, 24, 42, 43, 45, 46, 47, 48, 49, 50, 52, 59, 75, 76, 87, 89, 92, 102, 103, 111, 114, 116, 117, 134, 136, 137, 141, 153, 158, 163, 171, 182, 191, 196, 200, 231, 233, 234, 237, 238, 239, 242], "queri": [1, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 79, 91, 96, 143, 238, 242], "defin": [1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 80, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150, 172, 173, 174, 182, 222, 234, 238, 241], "number": [1, 3, 8, 12, 13, 15, 16, 19, 21, 24, 25, 26, 27, 28, 33, 36, 37, 38, 42, 45, 46, 47, 48, 49, 64, 68, 73, 75, 76, 83, 87, 89, 96, 103, 104, 109, 110, 111, 112, 113, 115, 117, 120, 121, 122, 124, 125, 126, 127, 128, 134, 136, 137, 140, 141, 152, 158, 164, 166, 191, 193, 196, 200, 202, 203, 204, 223, 224, 225, 233, 234, 235, 238, 239, 241], "befor": [1, 3, 4, 6, 7, 10, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 50, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 76, 81, 82, 83, 85, 87, 88, 89, 90, 91, 93, 115, 118, 119, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 173, 174, 197, 233, 235, 238, 241], "deliv": [1, 242], "stack": [1, 7, 8, 48, 49, 96, 102, 142, 143, 182, 191, 234, 237, 238, 242], "user": [1, 2, 5, 8, 24, 42, 45, 47, 48, 49, 87, 92, 114, 222, 231, 234, 238, 241, 242], "reset": [1, 3, 8, 12, 13, 15, 16, 24, 42, 43, 45, 46, 47, 48, 49, 52, 59, 64, 67, 70, 75, 79, 84, 85, 87, 88, 89, 91, 94, 96, 98, 102, 129, 137, 182, 206, 209, 211, 214, 216, 219, 233, 234, 235, 237, 242], "whenev": [1, 3, 202], "reach": [1, 12, 13, 15, 16, 42, 45, 47, 48, 49, 134, 136, 137, 235, 241, 242], "done": [1, 3, 4, 7, 8, 12, 13, 15, 20, 24, 42, 43, 45, 46, 47, 48, 49, 52, 59, 60, 61, 76, 83, 85, 87, 88, 96, 102, 103, 117, 155, 156, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 206, 209, 211, 214, 216, 219, 233, 234, 235, 237, 238, 239, 241, 242], "state": [1, 3, 4, 12, 13, 15, 16, 24, 42, 45, 46, 47, 48, 49, 52, 59, 64, 65, 67, 70, 76, 85, 87, 91, 92, 94, 96, 103, 111, 114, 115, 117, 121, 124, 125, 131, 140, 145, 164, 171, 172, 173, 174, 225, 233, 234, 235, 238, 241], "after": [1, 8, 20, 24, 42, 45, 47, 48, 49, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 102, 118, 134, 136, 159, 233, 234, 235, 238, 239, 241], "predifin": 1, "becaus": [1, 3, 4, 7, 91, 108, 114, 140, 141, 233, 234, 237, 238, 241], "potenti": [1, 238], "comput": [1, 3, 4, 8, 12, 15, 21, 24, 42, 45, 47, 48, 49, 76, 92, 94, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 120, 121, 122, 124, 125, 127, 128, 131, 134, 136, 137, 141, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 204, 233, 235, 237, 239], "heavi": [1, 8], "crucial": [1, 233, 234, 235, 238, 241], "configur": [1, 8, 12, 13, 15, 16, 163, 206, 214, 216, 219, 234, 235, 238], "hyperparamet": [1, 238], "appropri": [1, 4, 7, 12, 13, 15, 16, 40, 41, 88, 222, 225, 233, 234], "paramet": [1, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 136, 137, 140, 141, 142, 143, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 211, 214, 216, 219, 221, 222, 223, 224, 225, 233, 238, 239, 242], "consider": [1, 3, 8, 233, 234], "whether": [1, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 45, 46, 47, 48, 49, 92, 104, 115, 144, 155, 156, 157, 164, 166, 174, 233, 234, 235, 238, 241], "should": [1, 3, 4, 5, 7, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 39, 42, 45, 46, 47, 48, 49, 64, 72, 76, 80, 84, 85, 91, 92, 96, 98, 102, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 140, 141, 150, 161, 162, 163, 164, 167, 171, 172, 173, 174, 183, 195, 196, 197, 200, 221, 223, 224, 225, 231, 233, 234, 235, 237, 238, 239, 241, 242], "occur": [1, 8, 13, 65, 76, 80, 140, 141, 159, 241], "serial": [1, 3, 24, 42, 45, 47, 48, 49, 96], "optim": [1, 8, 24, 42, 45, 47, 48, 49, 103, 117, 118, 119, 163, 166, 195, 200, 206, 214, 221, 231, 235, 238], "parallel": [1, 3, 8, 12, 13, 16, 98, 153, 222, 223, 224, 225, 234, 235], "syncdatacollector": [1, 12, 13, 16, 221, 224, 227, 235], "worker": [1, 12, 13, 15, 16, 43, 47, 48, 49, 96, 223, 224, 225, 233, 235, 241, 242], "multisyncdatacollector": [1, 224, 227, 235, 242], "split": [1, 12, 13, 15, 16, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 231, 235, 242], "workload": 1, "across": [1, 8, 96, 137, 202, 233, 238], "aggreg": [1, 104, 105, 106, 143], "result": [1, 3, 7, 12, 13, 15, 16, 24, 26, 27, 28, 29, 42, 43, 45, 47, 48, 49, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 76, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 96, 98, 102, 115, 147, 172, 175, 176, 177, 178, 179, 180, 181, 182, 202, 234, 238, 239, 241, 242], "final": [1, 3, 4, 134, 136, 137, 142, 172, 196, 233, 234, 235, 238, 241], "multiasyncdatacollector": [1, 16, 223, 227, 233, 234, 235, 242], "sever": [1, 8, 22, 24, 42, 45, 47, 48, 49, 65, 92, 163, 235, 241], "batch": [1, 3, 12, 13, 15, 16, 17, 21, 24, 25, 26, 27, 28, 29, 42, 45, 46, 47, 48, 49, 72, 76, 80, 88, 92, 93, 109, 110, 114, 118, 123, 126, 137, 140, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 191, 197, 199, 200, 202, 223, 224, 225, 231, 233, 234, 235, 237, 239, 241, 242], "gather": [1, 80, 171, 204, 228, 233, 234, 235, 238, 241], "continu": [1, 9, 19, 31, 105, 106, 107, 108, 137, 141, 143, 167, 172, 175, 176, 179, 209, 233, 235, 238, 241, 242], "concomittantli": 1, "network": [1, 4, 8, 24, 42, 45, 47, 48, 49, 104, 105, 106, 107, 108, 110, 111, 112, 115, 119, 121, 122, 124, 125, 131, 132, 133, 140, 155, 156, 157, 161, 164, 166, 167, 169, 172, 173, 174, 206, 209, 214, 220, 221, 231, 237, 238, 241], "impli": [1, 241], "weight": [1, 4, 9, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 119, 140, 153, 154, 159, 202, 220, 231, 233, 234, 235, 237, 238, 242], "mai": [1, 2, 3, 4, 5, 7, 8, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 76, 85, 92, 93, 96, 98, 115, 231, 233, 234, 235, 238, 239, 241, 242], "slightli": [1, 233, 238, 239, 241], "lag": [1, 12, 13, 15, 16, 234, 235], "therefor": [1, 3, 7, 163, 241], "although": [1, 8, 42, 45, 47, 48, 49, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150, 231, 233, 234], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 4, 7, 8, 12, 13, 15, 16, 26, 27, 28, 29, 36, 37, 42, 45, 46, 47, 48, 49, 64, 79, 84, 89, 91, 93, 95, 134, 136, 140, 141, 152, 153, 154, 155, 157, 161, 162, 163, 164, 166, 167, 171, 172, 173, 174, 182, 183, 197, 200, 202, 231, 233, 234, 235, 237, 238, 241], "asynchron": [1, 9, 13, 24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140, 153, 223, 234, 235], "off": [1, 2, 4, 113, 127, 128, 166, 196, 207, 231, 234, 235, 239, 241], "curriculum": [1, 4], "For": [1, 3, 4, 7, 8, 9, 10, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 72, 76, 118, 146, 153, 157, 163, 196, 209, 231, 233, 234, 235, 238, 239, 241], "remot": [1, 48, 49, 241], "rollout": [1, 3, 12, 13, 15, 16, 42, 45, 46, 47, 48, 49, 60, 61, 98, 103, 117, 137, 153, 204, 233, 234, 235, 239, 242], "necessari": [1, 4, 6, 8, 12, 13, 15, 16, 85, 164, 172, 173, 174, 233, 234, 235], "synchronis": [1, 43], "from": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 65, 68, 70, 76, 79, 80, 85, 87, 88, 90, 91, 92, 93, 95, 96, 102, 103, 105, 106, 107, 108, 113, 115, 116, 117, 118, 120, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 154, 155, 156, 162, 163, 164, 166, 171, 172, 173, 174, 182, 183, 191, 197, 200, 203, 204, 206, 209, 211, 214, 216, 217, 219, 221, 222, 225, 228, 231, 233, 234, 235, 237, 238, 239, 241, 242], "either": [1, 5, 24, 42, 45, 47, 48, 49, 145, 190, 209, 231, 233, 234, 239, 241, 242], "update_policy_weights_": [1, 12, 13, 15, 16, 233, 234, 242], "update_at_each_batch": [1, 12, 13, 16, 233], "true": [1, 3, 4, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 65, 67, 68, 72, 75, 76, 79, 80, 83, 87, 88, 90, 92, 93, 95, 96, 98, 102, 103, 104, 105, 106, 107, 108, 112, 113, 115, 117, 118, 119, 127, 128, 131, 132, 133, 134, 137, 140, 141, 142, 143, 149, 153, 154, 158, 159, 160, 162, 163, 164, 166, 168, 172, 173, 174, 177, 178, 180, 181, 182, 183, 193, 194, 196, 197, 200, 211, 225, 231, 233, 234, 235, 237, 238, 239, 241, 242], "second": [1, 8, 166, 199, 233, 234, 235, 237, 238, 239, 241, 242], "devic": [1, 2, 3, 7, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 36, 37, 42, 44, 45, 46, 47, 48, 49, 52, 59, 60, 61, 67, 78, 79, 88, 90, 92, 95, 103, 104, 105, 106, 107, 108, 112, 114, 115, 117, 118, 119, 131, 132, 133, 135, 137, 138, 139, 140, 143, 144, 146, 147, 155, 197, 202, 206, 209, 211, 214, 216, 217, 219, 233, 234, 235, 237, 238, 239, 242], "oper": [1, 3, 4, 7, 8, 12, 13, 16, 24, 42, 45, 47, 48, 49, 72, 91, 120, 131, 132, 133, 140, 145, 146, 153, 154, 155, 156, 157, 162, 163, 171, 172, 173, 174, 200, 209, 211, 216, 219, 231, 233, 234, 235, 237, 238, 241], "instanc": [1, 3, 4, 7, 8, 12, 13, 15, 16, 24, 30, 42, 43, 45, 46, 47, 48, 49, 54, 64, 76, 88, 91, 96, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 120, 121, 122, 124, 125, 134, 136, 137, 141, 142, 143, 150, 183, 190, 196, 204, 206, 207, 208, 209, 211, 214, 216, 219, 221, 223, 224, 231, 233, 235, 238, 241], "cpu": [1, 3, 8, 10, 12, 13, 15, 18, 24, 30, 36, 37, 42, 45, 46, 47, 48, 49, 52, 59, 60, 61, 67, 79, 88, 92, 95, 103, 117, 119, 138, 140, 143, 197, 206, 209, 211, 214, 216, 219, 233, 234, 235, 237, 238, 239, 241, 242], "slower": 1, "than": [1, 4, 8, 12, 13, 15, 16, 108, 115, 120, 134, 136, 140, 197, 202, 228, 233, 234, 235, 238, 241, 242], "one": [1, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 21, 22, 23, 25, 26, 27, 28, 29, 33, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 68, 75, 76, 79, 86, 92, 93, 95, 96, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 123, 124, 125, 134, 135, 136, 137, 139, 140, 141, 146, 147, 150, 152, 153, 154, 155, 156, 162, 163, 164, 193, 195, 196, 200, 204, 206, 214, 216, 219, 225, 228, 231, 233, 234, 235, 237, 238, 239, 241], "cuda": [1, 3, 7, 24, 42, 45, 47, 48, 49, 67, 78, 79, 88, 92, 95, 140, 192, 233, 234, 235, 239, 241], "multipl": [1, 3, 5, 8, 12, 13, 15, 16, 21, 48, 49, 65, 68, 84, 91, 96, 114, 118, 119, 140, 141, 164, 216, 225, 231, 233, 234, 235, 238, 242], "infer": [1, 48, 49, 96, 118, 166, 233, 235], "run": [1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 16, 24, 42, 45, 46, 47, 48, 49, 53, 54, 75, 76, 92, 96, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 142, 143, 150, 196, 223, 224, 225, 228, 231, 233, 234, 235, 237, 238, 239, 242], "dispatch": 1, "avail": [1, 4, 6, 141, 146, 147, 223, 224, 233, 234, 235, 241], "speed": [1, 2, 4, 8, 21, 233, 234, 235, 238], "avoid": [1, 24, 42, 45, 47, 48, 49, 92, 96, 140, 203, 235], "oom": 1, "choic": [1, 2, 120], "size": [1, 2, 3, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 42, 44, 45, 46, 47, 48, 49, 52, 59, 60, 61, 65, 72, 79, 86, 88, 90, 92, 93, 95, 103, 104, 109, 114, 115, 117, 120, 123, 124, 125, 126, 131, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 171, 172, 173, 174, 183, 191, 197, 206, 209, 211, 214, 216, 219, 233, 234, 235, 237, 238, 239, 241, 242], "pass": [1, 3, 4, 15, 20, 24, 28, 42, 43, 44, 45, 47, 48, 49, 69, 91, 93, 96, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 118, 120, 121, 122, 124, 125, 134, 136, 137, 140, 141, 143, 149, 150, 172, 173, 174, 197, 223, 224, 225, 233, 234, 235, 237, 238, 241], "ie": [1, 12, 13, 15, 18, 19, 20, 21, 22, 23, 25, 28, 30, 31, 32, 33, 72, 93, 234, 235], "store": [1, 2, 8, 12, 13, 15, 16, 20, 24, 28, 29, 33, 36, 37, 38, 42, 45, 47, 48, 49, 96, 103, 114, 117, 206, 209, 211, 214, 216, 219, 231, 233, 235, 239, 241], "while": [1, 3, 7, 8, 24, 42, 45, 47, 48, 49, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150, 162, 163, 233, 235, 238, 239, 242], "wait": [1, 238], "also": [1, 2, 3, 8, 11, 24, 28, 42, 45, 47, 48, 49, 68, 76, 84, 85, 88, 92, 125, 142, 143, 153, 155, 156, 172, 231, 233, 234, 235, 237, 238, 241], "impact": [1, 234], "memori": [1, 3, 8, 21, 24, 36, 42, 43, 45, 47, 48, 49, 67, 79, 88, 92, 95, 96, 140, 225, 231, 233, 234, 235, 237, 238, 239, 241, 242], "manag": [1, 8, 169, 170, 196, 233], "kei": [1, 3, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 42, 45, 47, 48, 49, 50, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 84, 85, 87, 88, 89, 91, 92, 94, 95, 96, 102, 103, 116, 117, 134, 136, 137, 140, 141, 142, 143, 144, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 171, 172, 173, 174, 183, 195, 196, 199, 200, 204, 206, 214, 216, 219, 231, 233, 234, 235, 237, 238, 241, 242], "control": [1, 3, 5, 8, 48, 49, 53, 54, 68, 105, 106, 107, 108, 116, 117, 125, 137, 140, 141, 142, 154, 162, 163, 167, 172, 175, 176, 179, 209, 231, 233, 234, 235, 238], "which": [1, 3, 4, 7, 8, 11, 12, 13, 15, 16, 20, 21, 24, 25, 29, 42, 45, 47, 48, 49, 50, 64, 65, 73, 75, 76, 79, 80, 88, 89, 91, 92, 98, 113, 127, 128, 131, 132, 133, 140, 141, 143, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 172, 191, 195, 206, 209, 211, 214, 216, 219, 231, 233, 234, 235, 237, 238, 239, 241], "storing_devic": [1, 12, 13, 15, 16, 233, 234, 242], "dure": [1, 12, 13, 15, 16, 42, 45, 47, 48, 49, 73, 92, 196, 200, 233, 234, 235, 238, 241], "A": [1, 3, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 57, 68, 73, 79, 80, 88, 91, 92, 94, 96, 97, 98, 102, 103, 104, 115, 117, 119, 120, 134, 136, 141, 142, 143, 146, 150, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 184, 185, 186, 193, 200, 202, 206, 211, 214, 216, 219, 221, 234, 235, 238, 241], "heurist": [1, 4, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 137, 233, 241], "usual": [1, 3, 4, 6, 7, 8, 42, 45, 47, 48, 49, 119, 182, 206, 214, 216, 219, 228, 231, 233, 235, 241], "same": [1, 3, 4, 11, 15, 24, 42, 43, 45, 47, 48, 49, 68, 73, 75, 76, 91, 92, 96, 104, 115, 137, 233, 234, 235, 237, 239, 241], "storag": [1, 2, 8, 24, 26, 27, 28, 29, 36, 37, 38, 42, 44, 45, 47, 48, 49, 69, 227, 231, 233, 234, 235, 239], "default": [1, 3, 10, 12, 13, 15, 16, 18, 20, 21, 24, 25, 26, 27, 28, 33, 36, 37, 42, 45, 47, 48, 49, 50, 53, 64, 65, 68, 72, 75, 76, 79, 80, 83, 88, 89, 90, 92, 93, 95, 96, 98, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 134, 136, 137, 138, 140, 141, 144, 150, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 191, 193, 194, 196, 197, 198, 200, 206, 209, 214, 216, 219, 221, 225, 231, 233, 234, 235, 239, 241, 242], "behaviour": [1, 3, 45, 65, 76, 80, 113, 127, 128, 196, 234, 238], "besid": 1, "those": [1, 5, 7, 48, 49, 76, 88, 141, 142, 143, 202, 223, 224, 233, 234, 238, 241], "choos": [1, 233, 234, 235], "follow": [1, 2, 3, 6, 7, 8, 24, 42, 45, 46, 47, 48, 49, 79, 104, 115, 152, 154, 162, 165, 200, 216, 219, 231, 233, 234, 235, 237, 238, 241, 242], "max_frames_per_traj": [1, 12, 13, 15, 16, 203, 233, 235, 242], "frame": [1, 2, 12, 13, 15, 16, 24, 45, 64, 73, 134, 136, 137, 182, 183, 193, 196, 200, 203, 204, 233, 234, 235, 241, 242], "call": [1, 3, 7, 8, 11, 12, 13, 15, 16, 24, 26, 27, 28, 29, 36, 37, 38, 39, 42, 45, 47, 48, 49, 64, 67, 68, 69, 76, 78, 79, 84, 87, 88, 92, 95, 96, 98, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 120, 121, 122, 124, 125, 134, 136, 137, 140, 141, 143, 150, 171, 182, 196, 231, 233, 234, 235, 238, 241], "frames_per_batch": [1, 12, 13, 15, 16, 203, 233, 234, 235, 242], "each": [1, 3, 4, 7, 8, 12, 13, 15, 16, 17, 22, 23, 24, 28, 42, 43, 45, 47, 48, 49, 79, 84, 87, 88, 89, 95, 96, 134, 143, 146, 147, 177, 178, 180, 181, 196, 197, 223, 224, 233, 234, 235, 238, 239, 241, 242], "init_random_fram": [1, 12, 13, 15, 16, 203, 233, 234], "random": [1, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 34, 42, 45, 46, 47, 48, 49, 68, 75, 76, 88, 98, 140, 141, 164, 196, 204, 233, 234, 235, 238, 239, 241, 242], "rand_step": [1, 42, 43, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 58, 96, 238, 241, 242], "reset_at_each_it": [1, 12, 13, 15, 16, 233], "split_traj": [1, 12, 13, 15, 16, 233, 234, 235], "trajectori": [1, 12, 13, 15, 16, 17, 24, 28, 33, 42, 45, 47, 48, 49, 80, 91, 103, 117, 137, 163, 172, 174, 175, 176, 177, 178, 179, 180, 181, 191, 227, 234, 235, 238, 241, 242], "pad": [1, 17, 104, 105, 106, 114, 197, 233], "along": [1, 64, 65, 76, 80, 84, 90, 115, 119, 140, 141, 234, 238], "mask": [1, 4, 12, 13, 15, 80, 197, 233, 234, 241, 242], "point": [1, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 40, 41, 42, 45, 47, 48, 49, 64, 67, 79, 88, 90, 92, 95, 116, 140, 152, 157, 200, 228, 234, 235, 237, 238, 241], "boolean": [1, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 45, 80, 134, 175, 176, 177, 178, 179, 180, 181, 231], "repres": [1, 3, 12, 13, 15, 16, 20, 28, 42, 45, 47, 48, 49, 73, 80, 141, 146, 147, 168, 172, 197, 233, 234, 235], "valid": [1, 80, 92, 104, 115, 134, 136, 162, 197, 231, 241], "valu": [1, 3, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 42, 45, 47, 48, 49, 50, 63, 64, 65, 68, 75, 76, 79, 80, 82, 84, 88, 89, 90, 91, 92, 95, 96, 105, 106, 107, 108, 109, 111, 112, 113, 115, 117, 118, 119, 120, 123, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 191, 193, 194, 195, 196, 197, 200, 206, 209, 214, 216, 219, 221, 231, 234, 237, 238, 241, 242], "exploration_mod": [1, 12, 15, 196, 227, 233, 234], "strategi": [1, 231, 233, 234], "reset_when_don": [1, 12, 15], "central": [2, 233, 234], "part": [2, 4, 8, 24, 42, 45, 47, 48, 49, 76, 84, 144, 191, 225, 233, 234, 235, 238, 241], "algorithm": [2, 8, 9, 12, 13, 46, 73, 153, 163, 164, 165, 166, 191, 206, 207, 214, 231, 233, 234, 235, 238, 239, 242], "implement": [2, 3, 9, 11, 24, 39, 42, 45, 47, 48, 49, 96, 113, 126, 127, 128, 153, 163, 166, 206, 214, 216, 219, 231, 233, 234, 235, 238, 242], "wide": [2, 3, 5, 233], "we": [2, 3, 5, 7, 9, 20, 24, 42, 43, 45, 47, 48, 49, 79, 88, 96, 103, 114, 228, 231, 233, 234, 235, 237, 238, 239, 241, 242], "give": [2, 7, 46, 228, 233, 234, 238, 239, 242], "abil": [2, 238], "veri": [2, 3, 234, 238, 241, 242], "influenti": 2, "sampl": [2, 4, 8, 9, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 42, 45, 46, 47, 48, 49, 80, 99, 101, 103, 109, 113, 117, 123, 124, 127, 128, 134, 136, 137, 140, 141, 154, 155, 156, 162, 163, 191, 197, 200, 203, 234, 235, 239, 241, 242], "latenc": 2, "especi": [2, 3, 7, 8, 65], "larger": [2, 4], "volum": 2, "lazymemmapstorag": [2, 227, 233, 234, 239], "advis": [2, 233, 241], "share": [2, 3, 6, 8, 36, 37, 38, 39, 43, 48, 49, 96, 131, 132, 133, 225, 235, 237, 241, 242], "due": [2, 3, 5, 239, 241], "lower": [2, 12, 13, 15, 16, 19, 96, 124, 125, 235, 238], "serialis": 2, "memmaptensor": [2, 239], "well": [2, 3, 8, 12, 13, 16, 24, 39, 42, 45, 47, 48, 49, 124, 125, 233, 234, 239, 241, 242], "specifi": [2, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 84, 86, 93, 103, 140, 141, 233, 235], "file": [2, 6, 7, 8, 182, 231, 233, 240], "locat": [2, 7, 45, 76, 83, 113, 120, 127, 128, 234, 235], "improv": [2, 4, 73, 153], "node": [2, 206, 209, 211, 214, 216, 219], "failur": [2, 4], "recoveri": 2, "mean": [2, 3, 4, 7, 15, 28, 33, 76, 96, 103, 109, 111, 114, 117, 126, 134, 141, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 233, 234, 235, 238, 241, 242], "liststorag": [2, 26, 27, 28, 227], "were": [2, 7, 48, 49, 233, 235], "found": [2, 6, 7, 10, 20, 24, 28, 42, 45, 47, 48, 49, 96, 141, 155, 163, 233, 234], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 26, 33, 47, 64, 79, 105, 106, 107, 108, 111, 112, 117, 119, 121, 122, 124, 125, 137, 146, 153, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 172, 175, 176, 179, 206, 209, 214, 216, 219, 233, 234, 239, 242], "com": [2, 5, 6, 7, 10, 239, 242], "tree": 2, "type": [2, 3, 24, 26, 28, 30, 42, 45, 46, 47, 48, 49, 67, 79, 88, 92, 95, 96, 104, 115, 119, 134, 136, 140, 141, 148, 206, 209, 211, 214, 216, 219, 223, 234, 235, 238, 241], "1x": 2, "lazytensorstorag": [2, 227, 235], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 42, 45, 47, 48, 49, 67, 68, 76, 79, 88, 90, 92, 95, 103, 104, 105, 106, 112, 114, 115, 117, 120, 130, 131, 132, 133, 135, 138, 140, 143, 144, 146, 149, 159, 172, 173, 174, 177, 178, 180, 181, 183, 199, 211, 231, 233, 234, 235, 238, 239, 240, 241, 242], "44x": 2, "difficult": [2, 4], "trajecotri": 2, "One": [2, 4, 8, 23, 25, 123, 134, 136, 140, 168, 190, 233, 234, 241], "element": [2, 22, 23, 25, 26, 27, 28, 29, 33, 36, 37, 38, 80, 104, 134, 140, 141, 191, 235, 241], "pai": [2, 8, 234], "attent": [2, 8, 234], "alwai": [2, 24, 42, 45, 47, 48, 49, 75, 234, 235, 238], "lead": [2, 3, 4, 8, 10, 11, 20, 88, 113, 127, 128, 238, 242], "dimens": [2, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 64, 65, 72, 76, 80, 86, 90, 93, 104, 115, 118, 119, 126, 127, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 172, 173, 174, 225, 234, 235, 238], "other": [2, 3, 4, 7, 8, 24, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 68, 85, 96, 119, 120, 141, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 197, 206, 214, 216, 219, 223, 224, 231, 233, 234, 235, 238, 239, 241, 242], "word": [2, 241], "creat": [2, 3, 4, 5, 6, 7, 10, 12, 13, 16, 24, 26, 27, 28, 42, 43, 45, 47, 48, 49, 50, 79, 84, 91, 92, 96, 102, 104, 105, 106, 107, 108, 112, 115, 116, 141, 156, 157, 164, 183, 197, 204, 207, 208, 221, 223, 224, 233, 234, 235, 238, 239, 241, 242], "1m": [2, 203, 233, 235, 239], "multidimension": [2, 28, 33], "doe": [2, 3, 26, 28, 33, 39, 118, 142, 143, 154, 162, 163, 171, 200, 231, 233, 234, 235, 238, 241], "desir": [2, 3, 24, 42, 45, 47, 48, 49, 50, 67, 76, 79, 80, 88, 92, 95, 101, 104, 115, 140, 141, 233, 238], "sub": [2, 3, 42, 45, 47, 48, 49, 80, 142, 143, 191, 200, 234, 235, 237, 241, 242], "diversifi": 2, "make": [2, 4, 7, 24, 39, 42, 45, 47, 48, 49, 56, 59, 76, 79, 80, 98, 102, 118, 141, 163, 197, 208, 225, 233, 234, 235, 237, 238, 239, 241, 242], "more": [2, 4, 6, 8, 11, 12, 13, 15, 16, 24, 26, 27, 28, 29, 42, 45, 47, 48, 49, 97, 115, 118, 120, 134, 136, 140, 146, 153, 157, 163, 172, 175, 176, 179, 195, 209, 228, 231, 233, 234, 235, 237, 238, 239, 241], "To": [2, 3, 4, 6, 7, 8, 24, 26, 27, 28, 42, 45, 47, 48, 49, 96, 131, 132, 133, 137, 200, 233, 234, 235, 238, 239, 241, 242], "do": [2, 3, 4, 7, 12, 13, 15, 16, 45, 75, 80, 102, 118, 132, 231, 233, 234, 235, 237, 238, 241, 242], "custom": [2, 3, 5, 24, 42, 45, 47, 48, 49, 225, 234, 235], "name": [2, 6, 7, 11, 24, 42, 45, 47, 48, 49, 53, 68, 70, 84, 85, 92, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 184, 186, 187, 188, 190, 194, 195, 206, 209, 211, 214, 216, 219, 231, 233, 234, 235, 238, 241], "randomcroptensordict": 2, "here": [2, 3, 4, 7, 8, 9, 10, 233, 234, 235, 237, 238, 239, 241, 242], "exampl": [2, 3, 4, 9, 10, 11, 12, 13, 15, 16, 18, 20, 21, 22, 23, 24, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 67, 68, 69, 76, 79, 88, 90, 92, 95, 96, 102, 103, 104, 114, 115, 117, 120, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 149, 172, 173, 174, 191, 192, 193, 194, 195, 197, 198, 199, 202, 206, 209, 211, 214, 216, 219, 221, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242], "how": [2, 24, 26, 28, 33, 42, 45, 47, 48, 49, 154, 161, 162, 163, 200, 228, 233, 234, 235, 237, 238, 239, 241, 242], "parent": [2, 3, 30, 42, 65, 72, 73, 76, 79, 88, 91, 93, 131, 163, 238, 241, 242], "subclass": [2, 3, 42, 45, 47, 48, 49, 91, 98, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 135, 136, 137, 139, 140, 141, 142, 150, 163, 233, 238], "basic": [2, 46, 235, 241], "properti": [2, 3, 42, 45, 46, 47, 48, 49, 92, 109, 113, 118, 123, 126, 127, 128, 238], "shape": [2, 3, 12, 13, 15, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 42, 45, 47, 48, 49, 50, 65, 76, 88, 90, 97, 98, 109, 110, 115, 118, 120, 123, 126, 138, 140, 143, 168, 183, 191, 197, 200, 221, 233, 234, 235, 237, 239, 241, 242], "dtype": [2, 3, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 42, 45, 46, 47, 48, 49, 52, 59, 60, 61, 67, 68, 69, 76, 79, 88, 90, 92, 95, 98, 103, 117, 118, 119, 131, 132, 133, 135, 137, 138, 139, 140, 143, 144, 146, 147, 172, 173, 174, 206, 209, 211, 214, 216, 219, 234, 235, 237, 238, 239, 241, 242], "import": [2, 3, 4, 6, 7, 10, 12, 13, 15, 26, 28, 33, 43, 45, 46, 48, 49, 76, 79, 88, 95, 96, 103, 115, 117, 120, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 154, 172, 173, 174, 193, 196, 206, 209, 211, 214, 216, 219, 221, 234, 235, 237, 238, 239, 241, 242], "match": [2, 3, 6, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 43, 45, 47, 48, 49, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 76, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 104, 109, 115, 126, 140, 141, 162, 164, 166, 197, 202, 234, 235, 237, 238, 241, 242], "input": [2, 3, 4, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 46, 47, 48, 49, 64, 65, 67, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 84, 85, 87, 88, 89, 91, 93, 94, 95, 96, 98, 102, 104, 105, 106, 107, 108, 114, 115, 118, 119, 124, 125, 137, 140, 141, 142, 143, 152, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 203, 221, 231, 233, 234, 235, 238, 241, 242], "output": [2, 3, 4, 12, 13, 15, 16, 24, 26, 27, 28, 42, 45, 46, 47, 48, 49, 64, 76, 79, 89, 91, 95, 98, 104, 105, 106, 110, 111, 114, 115, 120, 131, 134, 136, 137, 140, 141, 142, 143, 146, 147, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 172, 183, 191, 233, 234, 235, 237, 238, 239, 241, 242], "send": [2, 3, 8, 234, 242], "receiv": [2, 3, 24, 42, 45, 47, 48, 49, 91, 115, 234, 235, 237, 238], "parallelenv": [2, 3, 12, 13, 15, 16, 47, 49, 222, 227, 233, 234, 235, 237, 241, 242], "commun": [2, 3, 228, 235, 241], "spawn": [2, 3, 4, 47], "check": [2, 3, 4, 5, 6, 7, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 43, 45, 46, 47, 48, 49, 65, 71, 80, 98, 140, 141, 148, 233, 234, 235, 237, 238, 239, 241], "check_env_spec": [2, 3, 227, 235, 238], "method": [2, 3, 4, 12, 13, 15, 16, 24, 28, 33, 36, 37, 38, 39, 42, 45, 47, 48, 49, 64, 67, 72, 76, 79, 81, 88, 92, 95, 103, 114, 131, 132, 133, 140, 141, 142, 148, 153, 182, 222, 231, 232, 233, 235, 238, 241], "saniti": [2, 3, 7, 98, 234, 235, 238], "offer": [3, 7, 238, 241], "handl": [3, 24, 42, 45, 47, 48, 49, 96, 115, 200, 223, 224, 233, 235], "differ": [3, 4, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 64, 68, 76, 92, 93, 115, 117, 146, 147, 163, 168, 172, 173, 196, 200, 202, 223, 224, 231, 233, 234, 235, 237, 238, 239, 241], "backend": [3, 7, 11, 231, 233, 235, 238], "dm": [3, 233, 241], "base": [3, 4, 8, 9, 12, 13, 15, 16, 35, 41, 46, 47, 88, 94, 131, 158, 200, 206, 214, 216, 219, 231, 233, 236, 238, 240, 241], "goal": [3, 4, 233, 234, 235, 238], "abl": [3, 233, 235, 237, 238, 242], "experi": [3, 26, 33, 98, 184, 186, 187, 188, 189, 190, 228, 234, 235], "even": [3, 4, 8, 13, 36, 37, 38, 39, 43, 233, 235, 238, 241], "simul": [3, 5, 7, 8, 62, 103, 117, 233, 235], "some": [3, 4, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 79, 98, 105, 141, 142, 143, 191, 203, 231, 233, 234, 235, 238, 241, 242], "box": [3, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "wrapper": [3, 11, 16, 28, 29, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 120, 134, 136, 137, 141, 145, 172, 186, 187, 188, 225, 233, 235, 239, 241], "under": [3, 4, 24, 42, 45, 47, 48, 49, 140, 141, 233, 241], "lib": [3, 5, 6, 7, 9, 10, 12, 13, 15, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 76, 88, 96, 206, 209, 211, 214, 216, 219, 221, 233, 234, 235, 237, 239, 241, 242], "hope": 3, "imit": 3, "torch": [3, 8, 9, 10, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 36, 37, 42, 43, 45, 46, 47, 48, 49, 52, 59, 60, 61, 65, 67, 68, 69, 76, 79, 83, 88, 90, 92, 95, 96, 102, 103, 104, 109, 111, 113, 114, 115, 117, 118, 119, 120, 123, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 151, 155, 172, 173, 174, 191, 199, 206, 209, 211, 214, 216, 219, 221, 231, 233, 234, 235, 237, 238, 239, 241, 242], "nn": [3, 12, 13, 15, 24, 42, 45, 46, 47, 48, 49, 67, 68, 79, 88, 92, 95, 103, 104, 105, 106, 107, 108, 110, 111, 112, 115, 117, 120, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 153, 156, 157, 172, 173, 174, 216, 219, 221, 233, 234, 235, 237, 238, 239, 242], "typic": [3, 4, 8, 24, 42, 45, 47, 48, 49, 231, 235, 238], "organis": 3, "allow": [3, 12, 13, 15, 16, 24, 25, 42, 45, 47, 48, 49, 50, 88, 102, 115, 168, 231, 233, 235, 238, 241], "arbitrari": [3, 25, 48, 49, 233, 234, 238], "nest": [3, 20, 24, 42, 45, 47, 48, 49, 50, 172, 173, 174, 231, 234, 235, 238, 242], "structur": [3, 7, 137, 172, 173, 174, 234, 235, 238, 239], "attribut": [3, 4, 24, 42, 45, 47, 48, 49, 79, 87, 141, 238], "batch_siz": [3, 8, 12, 13, 15, 20, 26, 27, 28, 29, 42, 44, 46, 52, 59, 60, 61, 64, 88, 103, 117, 131, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 191, 197, 206, 209, 211, 214, 216, 219, 233, 234, 235, 237, 238, 239, 241, 242], "togeth": [3, 12, 13, 15, 16, 80, 131, 132, 133, 145, 233, 235], "expect": [3, 4, 7, 20, 24, 30, 42, 45, 46, 47, 48, 49, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 76, 79, 81, 82, 83, 85, 87, 88, 89, 90, 91, 93, 98, 137, 140, 143, 153, 154, 162, 163, 204, 228, 231, 233, 235, 238, 241], "live": [3, 12, 13, 15, 16, 24, 26, 27, 28, 29, 42, 45, 46, 47, 48, 49], "actual": [3, 4, 7, 12, 13, 16, 42, 45, 47, 48, 49, 203, 233, 234, 235, 238], "respons": [3, 8, 200, 241], "just": [3, 4, 191, 231, 233, 234, 235, 238, 241, 242], "retriev": [3, 26, 27, 28, 29, 42, 45, 47, 48, 49, 50, 65, 76, 102, 103, 117, 141, 154, 162, 163, 172, 173, 174, 206, 209, 211, 214, 216, 219, 225, 231, 234, 235, 238, 241], "care": [3, 8, 42, 45, 47, 48, 49, 91, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150, 233, 235, 238], "map": [3, 8, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 36, 42, 45, 47, 48, 49, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 76, 81, 82, 83, 85, 87, 88, 89, 90, 91, 93, 96, 120, 131, 132, 133, 140, 141, 143, 145, 146, 227, 233, 234, 235, 239], "see": [3, 6, 7, 8, 9, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 97, 104, 113, 115, 118, 127, 128, 140, 141, 197, 233, 234, 235, 238, 241], "below": [3, 7, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 104, 113, 115, 127, 128, 140, 197, 234, 235, 238], "parametr": [3, 119, 141, 166, 233, 235], "hardwar": 3, "observation_spec": [3, 42, 46, 64, 65, 66, 67, 69, 70, 72, 74, 76, 79, 81, 84, 85, 87, 88, 89, 90, 91, 92, 93, 103, 117, 204, 221, 233, 235, 237, 238, 241], "compositespec": [3, 42, 44, 46, 68, 87, 88, 103, 117, 130, 134, 136, 138, 143, 227, 233, 235, 238, 241], "pair": [3, 24, 42, 45, 47, 48, 49, 50, 88, 131, 141, 233, 234, 235, 237, 238, 241], "input_spec": [3, 42, 46, 48, 49, 67, 68, 69, 76, 85, 87, 91, 92, 93, 103, 117, 235, 238, 241], "action_spec": [3, 14, 42, 45, 46, 47, 48, 49, 52, 59, 92, 125, 130, 132, 135, 138, 139, 146, 147, 221, 233, 234, 235, 237, 238, 239, 241, 242], "reward_spec": [3, 42, 46, 63, 67, 69, 82, 83, 84, 91, 92, 93, 103, 117, 235, 238, 241], "importantli": [3, 141], "4": [3, 7, 12, 13, 15, 18, 21, 25, 46, 53, 54, 55, 58, 96, 103, 104, 105, 106, 111, 112, 114, 115, 117, 120, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 149, 182, 233, 234, 235, 238, 239, 240, 241, 242], "action_s": 3, "simpli": [3, 6, 70, 85, 233, 234, 235, 241], "With": [3, 231, 233, 241], "necessarili": 3, "requir": [3, 4, 7, 8, 15, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 115, 140, 142, 143, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 231, 233, 234, 235, 238, 241], "stateless": [3, 48, 49, 91, 233, 238, 241], "set_se": [3, 12, 13, 15, 16, 42, 45, 46, 47, 48, 49, 52, 59, 76, 92, 233, 238, 241, 242], "integ": [3, 12, 13, 15, 16, 22, 23, 24, 25, 32, 39, 42, 45, 47, 48, 49, 73, 76, 87, 104, 115], "seed": [3, 12, 13, 15, 16, 42, 45, 46, 47, 48, 49, 53, 60, 61, 92, 98, 200, 233], "next": [3, 4, 8, 12, 13, 15, 20, 24, 26, 27, 28, 42, 43, 45, 46, 47, 48, 49, 50, 52, 59, 60, 61, 96, 102, 103, 117, 125, 145, 164, 171, 172, 173, 174, 233, 234, 237, 238, 239, 241, 242], "determinist": [3, 24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 111, 121, 125, 130, 136, 140, 141, 233, 234, 238, 241], "preced": [3, 114, 234], "without": [3, 7, 9, 24, 42, 45, 47, 48, 49, 132, 164, 171, 221, 228, 233, 234, 235, 238, 241], "risk": [3, 80], "overlap": 3, "consecut": [3, 137, 234, 241], "still": [3, 9, 87, 134, 162, 233, 234, 237, 238, 241], "reproduc": [3, 98, 235], "max_step": [3, 42, 45, 46, 47, 48, 49, 60, 61, 87, 102, 234, 241, 242], "maximum": [3, 4, 12, 13, 15, 16, 19, 24, 36, 37, 38, 42, 45, 47, 48, 49, 68, 82, 87, 89, 126, 127, 128, 138, 166, 197, 233, 234, 235, 238, 241, 242], "safemodul": [3, 46, 103, 116, 131, 132, 133, 134, 136, 137, 138, 141, 143, 145, 148, 149, 153, 154, 155, 158, 159, 160, 162, 163, 164, 165, 166, 171, 172, 173, 174, 196, 207, 208, 221, 227, 242], "ani": [3, 5, 8, 20, 24, 26, 27, 28, 29, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 72, 79, 80, 92, 96, 98, 104, 115, 119, 140, 141, 142, 143, 163, 186, 200, 228, 233, 234, 235, 238, 241, 242], "compat": [3, 7, 11, 24, 39, 42, 45, 47, 48, 49, 57, 64, 96, 148, 168, 234, 242], "better": [3, 8, 234, 235, 238], "featur": [3, 4, 12, 13, 15, 16, 25, 42, 45, 47, 48, 49, 64, 72, 88, 93, 104, 111, 112, 115, 118, 119, 141, 172, 173, 174, 225, 233, 234, 235, 238, 241], "intens": [3, 8], "gym3": 3, "envpool": [3, 47], "interfac": [3, 115, 118, 233, 235, 238], "simultan": [3, 48, 49, 238], "often": [3, 8, 161, 200, 234, 238, 241], "competit": 3, "advantag": [3, 8, 112, 153, 154, 162, 163, 165, 172, 173, 174, 175, 176, 177, 179, 180, 231, 233, 234, 235, 238, 241], "scale": [3, 4, 76, 83, 111, 113, 120, 124, 125, 127, 128, 131, 132, 133, 138, 141, 143, 198, 204, 206, 214, 216, 219, 225, 233, 234, 235, 242], "varieti": 3, "its": [3, 4, 5, 7, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 42, 45, 46, 47, 48, 49, 64, 91, 92, 96, 104, 134, 135, 136, 141, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 200, 221, 231, 233, 234, 235, 238, 239, 241], "own": [3, 12, 13, 16, 24, 42, 45, 47, 48, 49, 234, 235, 238], "As": [3, 4, 42, 45, 47, 48, 49, 141, 233, 234, 235, 238, 239, 241, 242], "inherit": [3, 116, 231, 235], "serialenv": [3, 88, 227, 241], "enjoi": 3, "exact": 3, "Of": [3, 7, 228, 238, 241], "cours": [3, 4, 228, 235, 238, 241], "correspond": [3, 4, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 42, 45, 46, 47, 48, 49, 79, 88, 92, 95, 96, 137, 141, 234, 235, 238, 239], "count": [3, 43, 87, 137, 196, 203, 233, 235, 241], "def": [3, 11, 24, 42, 43, 45, 46, 47, 48, 49, 103, 117, 144, 146, 149, 231, 233, 234, 237, 238, 241, 242], "make_env": [3, 61, 96, 102, 207, 208, 233, 234, 241], "gymenv": [3, 5, 12, 13, 15, 16, 43, 57, 67, 76, 88, 92, 96, 206, 209, 211, 214, 216, 219, 221, 227, 233, 234, 235, 239, 241, 242], "v1": [3, 12, 13, 15, 43, 47, 76, 88, 168, 177, 178, 180, 181, 234, 238, 241, 242], "from_pixel": [3, 53, 54, 206, 214, 216, 219, 233, 234, 239, 241, 242], "9": [3, 7, 24, 96, 234, 235, 238, 239, 240], "81": [3, 234, 238, 239], "0": [3, 4, 5, 6, 7, 8, 10, 11, 22, 23, 24, 25, 26, 28, 33, 42, 45, 46, 47, 48, 49, 52, 59, 63, 65, 67, 68, 75, 76, 79, 88, 90, 92, 95, 96, 98, 102, 103, 104, 105, 106, 108, 111, 113, 115, 117, 118, 119, 120, 124, 125, 126, 127, 128, 134, 136, 137, 140, 143, 150, 153, 154, 158, 159, 160, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 191, 198, 200, 221, 225, 231, 233, 234, 235, 237, 238, 239, 241, 242], "must": [3, 7, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 36, 37, 38, 39, 42, 43, 45, 47, 48, 49, 73, 76, 88, 92, 93, 104, 115, 140, 141, 146, 147, 175, 176, 177, 178, 179, 180, 181, 191, 196, 197, 200, 202, 206, 209, 211, 214, 216, 219, 233, 234, 235, 237, 238, 242], "print": [3, 6, 7, 12, 13, 15, 18, 20, 21, 24, 25, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 68, 69, 76, 88, 90, 96, 102, 104, 115, 120, 130, 131, 132, 133, 135, 136, 137, 139, 140, 143, 144, 146, 147, 149, 206, 209, 211, 214, 216, 219, 221, 231, 233, 234, 235, 237, 238, 239, 241, 242], "b": [3, 7, 8, 17, 20, 118, 119, 172, 173, 174, 183, 234, 239], "c": [3, 6, 7, 20, 76, 206, 209, 211, 214, 216, 219, 234], "d": [3, 26, 33, 141, 242], "get": [3, 4, 6, 7, 8, 39, 43, 48, 49, 65, 68, 69, 76, 80, 90, 96, 130, 136, 141, 175, 176, 179, 190, 233, 234, 235, 238, 241, 242], "forc": [3, 6, 7, 234, 238], "variou": [3, 12, 13, 15, 16, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 223, 224, 234, 235, 241], "reset_work": 3, "fals": [3, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 65, 67, 72, 75, 76, 79, 80, 83, 88, 90, 92, 93, 95, 96, 98, 103, 104, 105, 115, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 168, 172, 173, 174, 177, 178, 180, 181, 193, 194, 196, 197, 198, 200, 206, 209, 211, 214, 216, 219, 225, 231, 233, 234, 235, 237, 238, 239, 241, 242], "field": [3, 12, 13, 15, 16, 20, 24, 42, 45, 46, 47, 48, 49, 52, 59, 60, 61, 88, 92, 103, 117, 131, 132, 133, 135, 137, 138, 139, 140, 143, 144, 146, 147, 204, 206, 209, 211, 214, 216, 219, 228, 234, 235, 237, 238, 239, 241, 242], "tensor": [3, 8, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 59, 60, 61, 64, 65, 67, 68, 72, 76, 79, 80, 83, 88, 89, 90, 91, 92, 93, 95, 96, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 123, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 150, 151, 155, 156, 159, 160, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 206, 209, 211, 214, 216, 219, 231, 233, 234, 235, 237, 238, 239, 241, 242], "bool": [3, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 59, 60, 61, 65, 68, 72, 75, 76, 79, 83, 88, 90, 92, 93, 95, 96, 98, 102, 103, 104, 105, 106, 113, 115, 117, 118, 119, 127, 128, 134, 137, 140, 141, 142, 143, 148, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 172, 173, 174, 177, 178, 180, 181, 182, 183, 193, 194, 196, 197, 198, 200, 206, 209, 211, 214, 216, 219, 225, 234, 235, 237, 238, 239, 241, 242], "500": [3, 200, 233, 238, 241, 242], "uint8": [3, 32, 90, 234, 239, 241, 242], "none": [3, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 60, 61, 63, 64, 65, 66, 67, 69, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 159, 160, 165, 166, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 195, 196, 197, 200, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 231, 233, 234, 235, 238, 241, 242], "is_shar": [3, 12, 13, 15, 20, 46, 52, 59, 60, 61, 88, 96, 103, 117, 131, 132, 133, 135, 137, 138, 139, 140, 143, 144, 146, 147, 206, 209, 211, 214, 216, 219, 234, 235, 237, 238, 239, 241, 242], "note": [3, 4, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 96, 137, 141, 233, 234, 237, 241], "launch": 3, "quit": [3, 233, 234, 235, 241], "time": [3, 4, 7, 8, 12, 13, 15, 16, 24, 42, 43, 45, 47, 48, 49, 65, 80, 88, 89, 96, 102, 111, 114, 137, 159, 164, 172, 173, 174, 200, 234, 235, 237, 238, 239, 241, 242], "mani": [3, 4, 154, 162, 163, 164, 234, 235, 238, 241], "start": [3, 4, 5, 12, 43, 102, 195, 234, 238, 241], "bottleneck": [3, 8], "why": [3, 233, 238, 241], "so": [3, 4, 6, 7, 10, 24, 42, 45, 47, 48, 49, 88, 96, 142, 143, 233, 235, 238, 241], "onc": [3, 7, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 92, 134, 136, 231, 233, 234, 235, 238, 241], "great": [3, 7, 8, 242], "speedup": [3, 8, 241], "anoth": [3, 8, 42, 45, 47, 48, 49, 91, 115, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 233, 235, 237, 238, 241], "misspecifi": 3, "caus": [3, 7, 8, 80], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 42, 43, 45, 47, 48, 49, 79, 89, 95, 96, 102, 140, 149, 155, 172, 173, 174, 200, 202, 225, 228, 233, 234, 235, 237, 238, 239, 241, 242], "prealloc": [3, 238], "In": [3, 4, 5, 7, 8, 10, 11, 12, 13, 16, 24, 42, 45, 47, 48, 49, 67, 79, 85, 88, 91, 92, 95, 113, 115, 125, 127, 128, 140, 143, 152, 202, 223, 224, 225, 233, 234, 235, 237, 238, 239, 241], "obj": [3, 20, 140, 141, 142], "rais": [3, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 71, 92, 98, 149, 233, 235], "assert": [3, 6, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 45, 96, 98, 102, 120, 172, 173, 174, 191, 199, 233, 234, 237, 241], "mismatch": [3, 234], "mostli": [3, 16, 241], "purpos": [3, 7, 221, 233, 235, 239, 241], "want": [3, 6, 7, 8, 76, 233, 234, 235, 238, 239, 241, 242], "assess": [3, 233], "subprocess": [3, 43], "addit": [3, 4, 24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 134, 140, 152, 172], "multithread": [3, 26, 27, 28, 47], "multithreadedenv": [3, 227], "underneath": 3, "higher": [3, 4, 233, 234, 235, 241], "restrict": [3, 234, 239, 241], "flexibl": [3, 9, 47, 231, 233, 241], "cover": [3, 228, 233, 235, 238, 242], "popular": 3, "atari": [3, 4, 64, 241], "classic": [3, 46, 234], "benchmark_batched_env": 3, "compar": [3, 42, 196, 234, 235, 241], "case": [3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 20, 26, 28, 33, 42, 45, 47, 48, 49, 88, 92, 98, 115, 140, 141, 143, 152, 191, 202, 223, 224, 225, 231, 233, 235, 238, 241], "raw": [3, 4, 113, 127, 128, 234, 238], "treat": 3, "logic": 3, "torchvis": [3, 79, 95, 241, 242], "build": [3, 7, 17, 20, 24, 42, 45, 47, 48, 49, 96, 103, 117, 141, 200, 205, 210, 212, 213, 215, 217, 218, 220, 231, 235, 238, 239, 241, 242], "transformedenv": [3, 43, 67, 75, 76, 88, 91, 96, 206, 209, 211, 214, 216, 219, 233, 234, 235, 237, 238, 239, 241, 242], "primit": [3, 4, 233, 234], "built": [3, 5, 7, 217, 221, 222, 225, 234, 235, 241], "base_env": [3, 68, 69, 88, 233, 234, 235, 239, 241, 242], "totensorimag": [3, 211, 234, 241, 242], "in_kei": [3, 12, 13, 15, 46, 63, 64, 65, 66, 68, 69, 72, 74, 76, 77, 79, 81, 82, 83, 84, 89, 90, 91, 95, 96, 103, 117, 130, 131, 132, 133, 138, 140, 141, 143, 144, 148, 149, 155, 156, 172, 173, 174, 182, 183, 216, 219, 221, 233, 234, 235, 237, 238, 239, 241, 242], "resiz": [3, 234, 241], "64": [3, 105, 106, 112, 233, 234, 235, 237, 238, 239, 241, 242], "By": [3, 25, 45, 48, 49, 141, 196, 225, 233, 234, 239, 241], "now": [3, 7, 233, 235, 237, 239, 241], "appar": [3, 193], "bring": [3, 235, 241], "signific": [3, 5, 8, 235, 241], "kind": [3, 30, 102], "consult": 3, "achiev": [3, 4, 24, 42, 45, 47, 48, 49, 197, 231, 233, 235, 238, 241], "interest": [3, 48, 49, 141, 235, 238, 241], "abov": [3, 7, 24, 42, 45, 47, 48, 49, 113, 127, 128, 152, 231, 233, 234, 235, 238, 241], "resize_par": 3, "sinc": [3, 4, 5, 7, 24, 42, 45, 47, 48, 49, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150, 233, 234, 235, 238, 239, 241, 242], "out_kei": [3, 12, 13, 15, 46, 48, 49, 63, 64, 65, 66, 72, 74, 76, 77, 79, 81, 82, 84, 89, 90, 91, 95, 103, 117, 130, 131, 132, 133, 138, 140, 141, 143, 144, 146, 147, 148, 149, 172, 173, 174, 196, 221, 233, 235, 237, 238, 239, 241, 242], "keyword": [3, 24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140, 141, 222, 234, 235, 241], "easi": [3, 5, 233, 234, 235, 239, 241], "root": [3, 20, 113, 127, 128, 238, 241], "graph": [3, 4, 8, 169, 170, 238], "inv": [3, 68, 238], "appli": [3, 4, 24, 26, 27, 28, 29, 42, 45, 47, 48, 49, 64, 65, 67, 68, 70, 71, 72, 73, 78, 80, 85, 87, 88, 89, 91, 92, 94, 96, 127, 172, 195, 231, 233, 234, 235, 238, 241, 242], "revers": 3, "order": [3, 15, 24, 25, 26, 27, 28, 29, 42, 45, 47, 48, 49, 92, 140, 142, 143], "chain": [3, 26, 27, 28, 67, 68, 104, 143, 241], "taken": [3, 42, 45, 47, 48, 49, 233, 234, 235, 238], "includ": [3, 4, 7, 9, 24, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 92, 96, 203, 231, 233, 234, 235, 238, 241], "invers": [3, 4, 76, 151, 238], "through": [3, 4, 5, 8, 15, 48, 49, 80, 115, 141, 142, 143, 150, 233, 234, 235, 237, 238, 239, 241], "in_keys_inv": [3, 69, 76, 77, 91, 233, 237, 238, 241], "append_transform": [3, 26, 27, 28, 29, 79, 88, 233, 238, 241, 242], "doubletofloat": [3, 206, 209, 214, 216, 219, 233, 235, 237], "float32": [3, 12, 13, 15, 20, 26, 30, 33, 46, 52, 59, 60, 61, 69, 76, 88, 90, 103, 117, 131, 132, 133, 135, 137, 138, 139, 140, 143, 144, 146, 147, 206, 209, 211, 214, 216, 219, 234, 235, 237, 238, 239, 241, 242], "float64": [3, 24, 42, 45, 47, 48, 49, 60, 61, 67, 79, 88, 92, 95, 140, 237, 241], "append": [3, 8, 26, 27, 28, 29, 43, 88, 102, 233, 234, 235, 238, 239, 242], "regist": [3, 24, 25, 42, 45, 47, 48, 49, 92, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150, 231, 235], "manipul": [3, 4, 8, 79, 241], "keep": [3, 4, 7, 8, 13, 76, 79, 95, 96, 137, 193, 200, 233, 234, 235, 238, 241, 242], "mind": 3, "singl": [3, 16, 24, 26, 27, 28, 29, 42, 45, 47, 48, 49, 50, 64, 65, 79, 90, 95, 104, 114, 115, 143, 157, 164, 177, 178, 180, 181, 216, 225, 233, 234, 235, 237, 238, 239], "third_transform": 3, "prohibit": 3, "would": [3, 24, 42, 45, 47, 48, 49, 115, 231, 234, 235, 238, 241], "replac": [3, 6, 7, 24, 68], "unexpect": [3, 24, 42, 45, 47, 48, 49, 92, 241], "behviour": 3, "fortun": 3, "eras": [3, 42, 45, 47, 48, 49, 50], "ident": [3, 15, 48, 49, 223, 224, 233, 234], "alreadi": [3, 8, 24, 42, 45, 47, 48, 49, 141, 233, 234, 235], "place": [3, 12, 13, 15, 16, 20, 24, 42, 43, 45, 47, 48, 49, 50, 67, 79, 88, 92, 95, 96, 140, 197, 202, 203, 234, 235, 238], "chang": [3, 5, 7, 24, 36, 37, 38, 39, 42, 45, 47, 48, 49, 92, 96, 233, 235, 238, 239, 241], "happen": [3, 134, 234, 239, 241], "catfram": [3, 234], "hold": [3, 169, 170, 238], "context": [3, 5, 8, 24, 42, 43, 45, 47, 48, 49, 88, 93, 118, 169, 170, 172, 175, 176, 179, 196, 233, 234, 235, 238, 239], "notic": [3, 235], "loss": [3, 8, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 195, 200, 205, 210, 212, 213, 215, 216, 218, 221, 231, 233, 234, 238, 242], "parenthood": 3, "reason": [3, 4, 8, 24, 42, 45, 47, 48, 49, 79, 233, 234, 235, 238], "henc": [3, 80, 233, 235, 238], "composit": [3, 20, 235, 238], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 238], "log": [3, 4, 8, 109, 123, 128, 141, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 193, 194, 196, 200, 221, 231, 234, 235, 238, 242], "reveal": 4, "curv": 4, "won": [4, 24, 42, 43, 45, 47, 48, 49, 79, 95, 200, 225, 233, 234, 235], "tell": [4, 7], "exploit": 4, "video": [4, 183, 196, 225, 234], "game": [4, 5], "cannot": [4, 7, 20, 80, 234, 235, 238], "cv": 4, "need": [4, 7, 8, 10, 24, 39, 42, 45, 47, 48, 49, 72, 79, 92, 95, 96, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 118, 120, 121, 122, 124, 125, 134, 136, 137, 140, 150, 152, 164, 171, 183, 200, 225, 233, 234, 235, 238, 241, 242], "act": 4, "flip": 4, "imag": [4, 7, 53, 66, 79, 90, 95, 115, 233, 234, 239, 241], "correspondingli": 4, "prescript": 4, "tune": [4, 239], "coeffici": 4, "bonu": [4, 154, 162, 163], "beta": [4, 26, 28, 33, 162, 233, 234, 242], "help": [4, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 228, 233, 234, 235], "altern": [4, 21, 47, 152, 233, 234, 235], "reduc": [4, 6, 21, 234, 235], "downstream": [4, 233], "formul": 4, "ob": [4, 8, 20, 69, 76, 90, 144, 172, 173, 174, 233, 234, 237, 238, 241, 242], "rate": [4, 96, 171, 233, 234, 235], "norm": [4, 8, 200, 234, 235, 238], "easier": [4, 233], "behavior": [4, 24, 42, 45, 47, 48, 49, 92, 235], "local": [4, 7, 10, 15, 24, 42, 45, 47, 48, 49, 92, 186, 233], "optima": 4, "sens": [4, 238], "product": [4, 9, 223, 224], "instead": [4, 7, 8, 11, 21, 24, 42, 45, 47, 48, 49, 72, 88, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150, 225, 233, 238, 241], "sum": [4, 23, 25, 45, 159, 171, 233, 234, 235, 238, 241], "track": [4, 12, 13, 15, 16, 84, 96, 137, 186, 193, 233, 234, 238], "stat": [4, 76, 204, 225, 235], "w": [4, 66, 81, 90, 137, 183, 234], "r": [4, 24, 76, 141, 152, 171, 234, 238, 241], "yield": [4, 15, 24, 42, 45, 47, 48, 49], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 155, 156, 235], "futur": [4, 24, 42, 45, 47, 48, 49, 79, 92, 95, 115, 228, 242], "past": [4, 234], "becom": [4, 233, 241], "between": [4, 5, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 68, 75, 82, 90, 92, 98, 104, 115, 141, 159, 160, 162, 168, 172, 196, 200, 233, 234, 241], "spars": 4, "ineffici": 4, "interact": [4, 5, 7, 8, 15, 141, 235, 238, 241], "ad": [4, 15, 24, 26, 27, 28, 29, 33, 42, 45, 47, 48, 49, 50, 84, 92, 118, 119, 137, 154, 162, 163, 233, 241], "intermedi": [4, 239], "instrument": 4, "greatli": [4, 234], "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 233], "discov": 4, "score": 4, "undesir": 4, "though": [4, 115, 235], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 65, 68, 76, 103, 114, 136, 137, 150, 172, 173, 174, 242], "subtask": 4, "hierarch": [4, 242], "framework": [4, 9, 46, 241, 242], "individu": [4, 24, 42, 45, 47, 48, 49, 233], "select": [4, 26, 27, 28, 29, 48, 49, 64, 65, 67, 70, 71, 72, 73, 75, 78, 80, 85, 87, 88, 89, 91, 94, 96, 103, 199, 233, 234], "fall": 4, "section": 4, "explicit": [4, 11, 114, 234], "mechan": [4, 24, 42, 45, 47, 48, 49, 92, 238], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 42, 45, 47, 48, 49, 235], "addition": 4, "per": [4, 12, 13, 15, 16, 48, 111, 200, 223, 224, 233, 234, 235, 242], "timestep": [4, 175, 176, 177, 178, 179, 180, 181, 234], "realli": 4, "larg": [4, 21, 235], "target": [4, 8, 24, 42, 43, 45, 47, 48, 49, 91, 140, 141, 155, 156, 157, 160, 161, 162, 164, 166, 167, 171, 172, 173, 174, 203, 220, 221, 231, 233, 238], "huge": 4, "practic": [4, 5, 8, 113, 127, 128, 152, 228, 233, 234, 235, 239, 241], "std": [4, 76, 96, 120, 134, 241], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 236, 237, 239, 240], "initi": [4, 7, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 76, 79, 88, 91, 92, 97, 103, 117, 118, 119, 134, 136, 137, 162, 164, 166, 206, 209, 211, 214, 216, 219, 225, 234, 238, 241], "estim": [4, 131, 132, 133, 153, 154, 162, 163, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 233, 234, 235, 237, 238, 239, 241, 242], "encount": [4, 48, 49, 228, 234, 238], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 233, 234, 235, 241], "via": [4, 7, 8, 48, 79, 91, 95, 155, 231, 234, 235, 241], "bonus": 4, "denser": 4, "If": [4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 45, 46, 47, 48, 49, 50, 65, 66, 68, 70, 72, 75, 76, 79, 80, 84, 85, 87, 88, 91, 92, 95, 96, 104, 114, 115, 134, 136, 137, 140, 141, 142, 143, 149, 150, 152, 159, 166, 171, 172, 173, 174, 180, 181, 195, 197, 200, 202, 204, 206, 214, 216, 219, 221, 225, 228, 233, 234, 235, 237, 238, 241, 242], "prior": [4, 125, 159], "freshli": 4, "proper": [4, 6, 7, 234, 235], "doesn": [4, 11, 47], "drop": 4, "meant": [4, 46], "encourag": [4, 234], "measur": [4, 234, 235], "novelti": 4, "revisit": 4, "previous": [4, 235, 241], "diminish": 4, "decreas": [4, 48, 49], "ideal": [4, 76, 233, 238], "down": [4, 12, 13, 15, 16, 234], "gone": [4, 5], "anyth": 4, "try": [4, 7, 8, 149, 233, 234, 235, 238, 241, 242], "distil": 4, "add": [4, 6, 24, 26, 27, 28, 29, 40, 41, 42, 45, 47, 48, 49, 118, 153, 195, 233, 234, 235, 238, 242], "nois": [4, 97, 119, 129, 137, 164, 196, 225, 233], "exploratori": [4, 154, 162, 163], "could": [4, 6, 233, 234, 235, 239, 241], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 26, 28, 29, 33, 36, 37, 38, 39, 155, 156, 164, 166, 231, 233, 234], "schedul": [4, 7, 196, 235, 238], "separ": [4, 8, 12, 13, 16, 17, 79, 95, 155, 164, 166, 233, 234, 241], "divers": [4, 48, 49], "clone": [4, 8, 131, 132, 133, 140, 206, 214, 216, 219, 227, 233, 234, 238, 242], "bootstrap": [4, 234], "noisi": [4, 118, 119, 129], "unstabl": [4, 113, 127, 128], "inher": 4, "stochast": [4, 111, 119, 121, 125, 164, 166, 235], "enemi": 4, "miss": [4, 6, 7, 11, 20, 24, 42, 45, 47, 48, 49, 88, 92, 142, 143, 228], "variabl": [4, 7, 8, 21, 25, 117, 131, 132, 133, 164, 231], "pomdp": 4, "previou": [4, 10, 24, 125, 233, 235, 238, 241], "loos": [4, 234, 235], "nonexist": 4, "sure": [4, 7, 39, 102, 225, 233, 235, 238, 241, 242], "inform": [4, 12, 13, 15, 16, 24, 42, 43, 45, 47, 48, 49, 104, 115, 231, 234, 235, 238], "architectur": [4, 234], "sequenc": [4, 12, 13, 15, 16, 20, 22, 23, 26, 27, 40, 41, 63, 64, 65, 66, 68, 69, 72, 74, 76, 77, 80, 81, 82, 83, 84, 89, 90, 91, 96, 104, 109, 115, 123, 130, 138, 141, 142, 143, 144, 182, 183, 195, 197, 199, 200, 206, 214, 216, 219, 234, 235, 237, 241], "rather": [4, 233, 234, 235], "last": [4, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 72, 76, 80, 89, 104, 114, 115, 121, 134, 136, 233, 234, 235, 238, 239, 241, 242], "lstm": [4, 114, 120], "explicitli": [4, 233], "rel": [4, 88, 109, 126], "tend": 4, "stabl": [4, 9, 10, 233], "don": [4, 6, 7, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 42, 233, 234, 235, 241, 242], "compens": 4, "faster": [4, 47], "descent": [4, 119], "1000": [4, 96, 134, 136, 137, 141, 161, 233, 234, 235, 239], "know": [4, 134, 136, 164, 196, 233, 234, 235], "minimum": [4, 19, 82, 111, 120, 126, 127, 128, 138, 150, 152, 166, 191, 233, 235, 238, 241, 242], "rang": [4, 8, 11, 21, 43, 96, 102, 162, 231, 233, 234, 235, 238, 242], "manual": [4, 87], "deviat": [4, 76, 96, 103, 111, 117, 118, 119, 134, 163, 233], "radic": 4, "begin": 4, "updat": [4, 8, 12, 13, 15, 16, 24, 33, 42, 45, 46, 47, 48, 49, 68, 92, 94, 96, 103, 117, 137, 140, 141, 153, 161, 163, 167, 172, 173, 174, 196, 200, 202, 207, 208, 220, 221, 231, 233, 234, 235, 238, 241, 242], "stabil": [4, 73], "stage": [4, 238], "never": 4, "prevent": [4, 113, 127, 128, 162, 163, 233], "solv": [4, 10, 228, 233, 234, 235, 238], "entir": [4, 234, 235, 238], "submit": [4, 228, 242], "suffici": [4, 233, 234], "recommend": [4, 7], "system": [4, 5, 235, 238], "adequ": [4, 98, 235], "infeas": 4, "allevi": 4, "prune": 4, "develop": [4, 7, 233, 242], "filter": [4, 233], "fire": [4, 24, 42, 45, 47, 48, 49], "certain": [4, 24, 42, 45, 47, 48, 49, 73, 87, 92, 162, 233, 234, 235, 241], "illeg": 4, "chess": 4, "combin": [4, 91, 234], "grasp": 4, "releas": [4, 7, 10, 24, 42, 45, 47, 48, 49, 92, 242], "top": [4, 103, 117], "p": [4, 43], "wherein": 4, "cumul": [4, 84, 103, 235], "probabl": [4, 8, 109, 123, 128, 141, 234, 242], "q": [4, 105, 106, 107, 108, 110, 112, 146, 147, 155, 156, 157, 161, 164, 166, 216, 219], "flow": [4, 233, 235, 238], "directli": [4, 8, 46, 225, 235, 238], "reparameter": [4, 109, 123], "soft": [4, 161, 166, 167], "actor": [4, 103, 105, 107, 111, 117, 131, 132, 133, 135, 136, 137, 138, 139, 146, 147, 153, 154, 155, 158, 162, 163, 164, 166, 206, 209, 211, 214, 216, 219, 227, 233, 234, 235, 239, 242], "critic": [4, 8, 131, 153, 154, 162, 163, 165, 166, 235], "clip": [4, 82, 154, 200, 235, 238], "oppos": 4, "incorrect": 4, "thought": 4, "bound": [4, 12, 13, 15, 16, 19, 20, 24, 42, 45, 47, 48, 49, 96, 124, 125, 137, 140, 141, 234, 235, 241], "region": 4, "squash": [4, 242], "tanh": [4, 104, 113, 115, 126, 127, 128, 233, 235, 238, 239, 242], "correct": [4, 203, 234, 235], "prob": [4, 123, 235], "rememb": 4, "remap": 4, "origin": [4, 8, 12, 13, 15, 16, 68, 79, 92, 95, 140, 141, 161, 163, 216, 219, 237, 238, 241], "side": [4, 241], "tool": [5, 238, 241], "real": [5, 141, 238], "world": [5, 46, 145, 159, 238, 241], "robot": [5, 7, 79, 95], "adopt": [5, 233, 241], "histor": 5, "wa": [5, 7, 42, 45, 47, 48, 49, 92, 161, 167, 234, 235, 237, 242], "ceas": 5, "maintain": [5, 9, 238], "fork": 5, "gymnasium": [5, 11, 234, 235, 238, 242], "farama": [5, 235, 238], "foundat": [5, 235], "document": [5, 7, 24, 42, 45, 47, 48, 49, 92, 242], "further": [5, 235], "detail": [5, 6, 7, 24, 42, 45, 47, 48, 49, 92, 146, 153, 157, 163, 209, 228, 237], "usag": [5, 7, 166, 233, 234, 235, 237, 238, 239, 241, 242], "known": [5, 7, 8, 233, 234], "bc": [5, 242], "break": [5, 12, 13, 15, 24, 42, 45, 47, 48, 49, 96, 233, 234, 242], "face": [5, 8, 9, 241], "modif": [5, 20, 24, 42, 45, 47, 48, 49, 72, 233, 235], "against": [5, 7, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 98, 140, 141, 235], "13": [5, 10, 11, 234, 235, 238, 240], "howev": [5, 7, 24, 42, 45, 47, 48, 49, 84, 87, 92, 233, 234, 235, 241], "around": [5, 7, 16, 28, 29, 46, 141, 172, 241], "construct": [5, 24, 42, 45, 47, 48, 49, 98, 125, 141, 200, 206, 214, 233, 235, 238, 241], "automat": [5, 42, 45, 47, 48, 49, 76, 130, 138, 233, 234, 235, 238, 242], "wrap": [5, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 98, 131, 132, 133, 145, 233, 234, 235, 241], "best": [5, 9, 234, 242], "gymwrapp": [5, 45, 227, 235, 242], "you": [5, 6, 7, 8, 10, 24, 42, 45, 47, 48, 49, 96, 228, 233, 234, 235, 237, 239, 241, 242], "feel": [5, 228, 242], "free": [5, 7, 153, 159, 163, 231, 235, 242], "gladli": 5, "instruct": [6, 7, 10, 68, 234, 235], "prepar": [6, 235], "conda": [6, 7, 228], "assum": [6, 20, 25, 29, 45, 48, 49, 66, 72, 79, 80, 84, 88, 95, 114, 166, 177, 178, 180, 181, 183, 233, 234, 235, 237, 238], "let": [6, 7, 24, 42, 45, 47, 48, 49, 196, 233, 234, 235, 237, 238, 239, 241, 242], "n": [6, 7, 18, 21, 24, 25, 42, 45, 47, 48, 49, 64, 68, 72, 93, 117, 141, 153, 171, 197, 231, 233, 234, 241], "7": [6, 10, 21, 25, 103, 104, 114, 115, 117, 233, 234, 235, 238, 239, 242], "cmake": 6, "14": [6, 11, 76, 234, 235, 238, 239], "activ": [6, 7, 9, 104, 111, 115, 163, 242], "sim": 6, "bullet": 6, "physic": [6, 7, 231, 233, 238], "headless": [6, 7], "mode": [6, 15, 24, 42, 45, 47, 48, 49, 92, 96, 99, 101, 109, 113, 123, 126, 127, 128, 141, 196, 233, 234, 241, 242], "cluster": [6, 7, 8, 228], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": 6, "y": [6, 7, 114, 149, 235], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": 6, "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 42, 45, 47, 48, 49, 86, 241], "command": [6, 7, 10, 233, 235, 238, 241], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 227], "_has_habitat": 6, "_env": [6, 241], "available_env": [6, 51, 52, 53, 54, 55, 56, 58, 59, 241], "startswith": 6, "oserror": 6, "load": [6, 12, 13, 15, 16, 26, 27, 28, 54, 225, 231], "libllvmlit": 6, "solut": [6, 7, 8, 9, 228, 231, 242], "ionstal": 6, "pointer": [6, 43, 238], "path": [6, 7, 24, 36, 42, 45, 47, 48, 49, 79, 95, 117, 200, 231], "env_nam": [6, 47, 51, 53, 55, 58, 233, 235, 241], "llvmlite": 6, "config": [6, 7, 79, 95, 204, 206, 207, 208, 209, 211, 214, 216, 217, 219, 222], "var": [6, 7, 24, 42, 45, 47, 48, 49, 92], "ld_preload": [6, 7], "python3": [6, 7, 10, 233], "8": [6, 7, 33, 52, 104, 105, 106, 112, 115, 131, 132, 133, 138, 140, 143, 233, 234, 235, 238, 239, 242], "site": [6, 7], "deactiv": [6, 7], "importerror": [6, 7, 10], "usr": [6, 7, 10, 233], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 24, 42, 45, 47, 48, 49, 92], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7], "right": [6, 7, 114, 233, 234, 235, 238, 241], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": 7, "repositori": 7, "stand": [7, 131, 132, 133, 237, 238, 241], "joint": [7, 234], "contact": 7, "engin": [7, 238], "facilit": [7, 78, 79, 95, 131, 132, 133, 233, 238], "biomechan": 7, "graphic": 7, "anim": 7, "machin": [7, 24], "area": 7, "demand": [7, 241], "fast": [7, 9, 52, 164, 233, 234, 235], "accur": [7, 233, 238], "articul": 7, "recent": [7, 11, 233, 241], "acquir": [7, 233, 235], "deepmind": [7, 8, 9, 53, 54, 235], "access": [7, 8, 24, 42, 45, 47, 48, 49, 50, 79, 225, 228, 238], "whomev": 7, "licenc": 7, "incorpor": [7, 233, 238], "relianc": 7, "obsolet": 7, "seri": [7, 8, 25, 40, 41, 49, 75, 91, 183, 234, 235, 241], "legaci": 7, "capabl": [7, 231, 233, 237, 239, 241], "glfw": 7, "osmesa": 7, "egl": 7, "hand": [7, 233, 238], "gpu": [7, 8, 24, 42, 45, 47, 48, 49, 233, 235, 241], "our": [7, 8, 233, 234, 235, 237, 239, 242], "advic": [7, 241], "sudo": [7, 228], "enabl": [7, 8, 137, 196, 235, 238], "apt": 7, "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 36, 37, 38, 39], "fact": [7, 8, 234, 235, 238, 239, 241], "indent": 7, "workflow": [7, 131, 132, 133], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "both": [7, 24, 42, 43, 45, 47, 48, 49, 92, 104, 115, 131, 132, 133, 196, 233, 235, 238, 239, 241], "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 24, 37, 42, 45, 47, 48, 49, 79, 95, 241], "binari": [7, 18, 25, 63, 146, 147], "These": [7, 24, 42, 45, 47, 48, 49, 79, 95, 233, 235, 238, 241], "refer": [7, 8, 24, 42, 45, 47, 48, 49, 92, 96, 103, 111, 117, 121, 122, 124, 125, 146, 153, 157, 158, 159, 160, 163, 172, 175, 176, 179, 209, 233, 235], "setup": [7, 233], "mkdir": 7, "cd": 7, "tag": [7, 183, 186, 225], "earlier": [7, 12, 13, 15, 16, 233, 235], "roboti": 7, "u": [7, 10, 233, 235, 238, 239, 241, 242], "download": [7, 10, 79, 95, 233, 234, 235, 236, 237, 238, 239, 241, 242], "html": [7, 47, 234], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 45, 79, 95, 103, 197, 233, 234, 235], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 239], "bin": 7, "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "hard": [7, 161, 234, 241], "later": [7, 108, 141, 233, 235], "nativ": [7, 9, 42, 45, 47, 48, 49, 64], "modifi": [7, 8, 24, 42, 45, 47, 48, 49, 67, 72, 79, 88, 91, 92, 95, 137, 140, 203, 206, 214, 216, 219, 233, 234, 235], "nvidia": 7, "driver": 7, "older": [7, 11], "hack": 7, "line": [7, 24, 42, 45, 47, 48, 49, 233], "adatp": 7, "script": [7, 98, 206, 209, 211, 214, 216, 219, 221, 225, 231, 233, 234, 235, 237, 238, 239, 241, 242], "unnot": [7, 80], "until": [7, 235], "complet": [7, 9, 45, 228, 234, 235, 237], "mujoco_pi": 7, "trigger": 7, "pipelin": [7, 235], "problem": [7, 8, 15, 234, 235, 238, 241], "troubleshoot": 7, "gl": 7, "h": [7, 66, 81, 90, 117, 183, 234], "eglshim": 7, "10": [7, 20, 43, 46, 60, 61, 90, 103, 114, 117, 136, 137, 164, 165, 166, 172, 173, 174, 191, 231, 233, 234, 235, 238, 240, 241, 242], "fatal": 7, "No": 7, "directori": [7, 36, 186, 231], "glu": 7, "38": [7, 233, 234, 235, 238], "disappear": [7, 234, 237], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "__init__": [7, 46, 103, 117, 144, 146, 149, 231, 238, 241], "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": 7, "runtimeerror": [7, 8, 24, 42, 45, 47, 48, 49, 92, 233, 241], "job": 7, "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 234, 235, 238, 239], "114": [7, 238], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 238], "offscreenopenglcontext": 7, "fail": [7, 98], "opengl": 7, "global": [7, 24, 42, 45, 47, 48, 49, 141, 231, 233], "cuda_visible_devic": 7, "id": [7, 17, 137, 164, 189, 216], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "read": [7, 12, 13, 15, 16, 36, 37, 38, 39, 45, 48, 49, 50, 64, 65, 67, 68, 70, 71, 72, 73, 78, 80, 85, 87, 88, 89, 91, 94, 96, 123, 131, 132, 133, 140, 141, 143, 145, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 172, 173, 174, 183, 200, 206, 214, 216, 219, 233, 234, 235, 237, 238, 239, 241], "onscreen": 7, "101": [7, 238], "displai": [7, 200, 231, 234, 238], "correctli": [7, 24, 42, 45, 47, 48, 49], "scratch": [8, 233, 234, 238], "loop": [8, 12, 13, 15, 16, 45, 102, 200, 231, 233, 237], "sketch": [8, 231], "_": [8, 43, 65, 68, 69, 76, 90, 96, 140, 152, 172, 173, 174, 233, 234, 235, 238, 242], "n_training_step": 8, "datapoint": 8, "onlin": [8, 12, 16, 153, 163, 191, 225, 235], "n_data_per_train": 8, "no_grad": [8, 24, 42, 45, 47, 48, 49, 233, 234, 235], "replay_buff": [8, 33, 34, 35, 36, 37, 38, 39, 40, 41, 197, 221, 233, 234, 235], "extend": [8, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 197, 231, 233, 234, 235, 239, 242], "offlin": [8, 12, 13, 15, 16, 98, 231, 239, 242], "loss_fn": [8, 242], "backward": [8, 24, 42, 45, 47, 48, 49, 96, 233, 234, 235, 238], "zero_grad": [8, 24, 42, 45, 47, 48, 49, 231, 233, 234, 235, 238], "backpropag": [8, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 238], "decor": [8, 11], "differenti": [8, 172, 173, 174, 233, 238], "understand": [8, 233, 234], "denomin": 8, "artifact": 8, "numer": [8, 96, 113, 127, 128, 140, 141, 235, 241], "misconcept": 8, "save": [8, 24, 42, 45, 47, 48, 49, 182, 200, 231, 234], "freed": 8, "appear": [8, 25], "compuat": 8, "twice": [8, 166], "fix": [8, 88, 166, 238, 241], "retain_graph": 8, "discuss": [8, 9], "inplac": [8, 24, 42, 45, 47, 48, 49, 233, 234], "flag": [8, 26, 27, 28, 29, 175, 176, 177, 178, 179, 180, 181, 239], "accumul": 8, "onto": [8, 25, 134, 136, 140, 141, 234, 238], "exclud": [8, 48, 49, 70, 233], "forward": [8, 24, 42, 45, 47, 48, 49, 64, 65, 67, 68, 70, 71, 72, 73, 76, 78, 79, 80, 85, 87, 88, 89, 91, 94, 96, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 118, 120, 121, 122, 124, 125, 134, 136, 137, 140, 141, 144, 146, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 172, 173, 174, 233, 234, 238, 242], "submodul": [8, 24, 42, 45, 47, 48, 49], "param": [8, 24, 42, 45, 46, 47, 48, 49, 109, 126, 138, 139, 140, 143, 144, 146, 147, 167, 170, 172, 173, 174, 209, 233, 234, 238, 239, 242], "grad": [8, 24, 42, 45, 47, 48, 49, 234, 235], "whose": [8, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 120, 140, 233], "strictli": [8, 24, 42, 45, 47, 48, 49, 92, 233, 235], "neg": [8, 12, 13, 15, 16, 26, 28, 33, 64, 72, 80, 93, 158, 233, 235, 238], "ask": [8, 233, 235, 239, 241], "core": [8, 206, 209, 211, 214, 216, 219, 231, 242], "much": [8, 26, 28, 33, 162, 163, 234, 235, 238, 241], "upon": [8, 238], "factor": [8, 24, 113, 119, 127, 128, 137, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 233, 234, 241], "fit": [8, 11, 76, 231], "everi": [8, 12, 13, 16, 20, 24, 25, 39, 42, 45, 47, 48, 49, 96, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150, 200, 231, 233, 234, 235, 238], "bottlneck": 8, "affect": [8, 24, 42, 45, 47, 48, 49, 91, 92, 98], "brax": [8, 51, 52, 241], "jax": [8, 11], "improperli": 8, "item": [8, 12, 71, 155, 156, 191, 231, 233, 234, 235, 238], "underli": [8, 238], "tedeiou": 8, "priorit": [8, 26, 28, 33, 155, 156, 164, 166, 233, 234], "amount": [8, 48, 49, 137, 234], "isn": [8, 140], "contigu": [8, 235, 238, 241, 242], "costli": [8, 238], "concaten": [8, 22, 23, 64, 65, 76, 91, 115, 143, 233, 234, 238, 241], "constitut": [8, 234, 238], "plain": 8, "profil": 8, "indic": [8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 45, 47, 48, 49, 65, 87, 88, 104, 115, 137, 150, 204, 225, 228, 231, 233, 235, 238, 241], "fulli": [8, 24, 42, 45, 47, 48, 49, 234, 238], "frequent": 8, "techniqu": [8, 234], "program": [8, 241], "incl": 8, "suit": [8, 54, 235, 241], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "view": [8, 21, 24, 25, 42, 45, 47, 48, 49, 115, 146, 233, 234, 238, 241, 242], "expand": [8, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 140, 143, 233, 238, 242], "new_shap": 8, "content": [8, 15, 47, 104, 115, 234, 235, 238, 242], "lost": 8, "permut": [8, 241, 242], "spin": [9, 241], "deep": [9, 64, 105, 106, 107, 108, 110, 137, 153, 161, 166, 167, 209, 233], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 76, 96, 233, 234, 235], "reddit": 9, "reagent": 9, "orient": [9, 241], "baselines3": 9, "tf": 9, "agent": [9, 119, 238], "bandit": 9, "tensorflow": 9, "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "simpl": [9, 24, 25, 42, 45, 47, 48, 49, 105, 141, 165, 172, 233, 234, 235, 241], "sequenti": [9, 24, 42, 45, 47, 48, 49, 142, 143, 235, 238, 239, 241], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 242], "grade": 9, "factori": 9, "throughput": [9, 233], "cherri": 9, "jaxrl": 9, "mbrl": [9, 46], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "dist": [10, 233], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 235], "notebook": [10, 233, 234, 235, 236, 237, 238, 239, 241, 242], "24": [10, 233, 234, 235, 238, 240], "11": [10, 21, 25, 43, 90, 103, 117, 234, 235, 237, 238, 239, 240], "2022": [10, 242], "12": [10, 234, 235, 238], "pip": [10, 241, 242], "pip3": [10, 235], "extra": [10, 24, 42, 45, 47, 48, 49, 96, 234, 235], "url": 10, "org": [10, 26, 33, 64, 79, 105, 106, 107, 108, 111, 112, 117, 119, 121, 122, 124, 125, 137, 146, 153, 157, 158, 159, 160, 161, 163, 165, 166, 167, 172, 175, 176, 179, 206, 209, 214, 219, 233, 234, 239], "whl": 10, "latest": [10, 47, 197, 235, 238, 242], "There": [10, 231, 234, 235, 238, 241], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": 11, "str": [11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 42, 44, 45, 47, 48, 49, 53, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92, 95, 96, 99, 101, 103, 104, 105, 106, 107, 108, 112, 114, 115, 116, 117, 118, 119, 120, 130, 134, 135, 136, 137, 138, 140, 141, 144, 146, 147, 148, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 197, 199, 204, 206, 209, 214, 216, 217, 219, 225, 235], "from_vers": 11, "to_vers": 11, "intersect": 11, "eg": [11, 36, 37, 38, 39, 68], "v": [11, 96, 114, 166, 234, 242], "longer": [11, 234], "fun": [11, 235, 238], "self": [11, 24, 42, 45, 46, 47, 48, 49, 67, 79, 88, 92, 95, 103, 117, 134, 136, 140, 144, 146, 149, 231, 233, 238, 242], "x": [11, 17, 20, 24, 90, 104, 110, 112, 114, 115, 117, 146, 149, 150, 152, 175, 176, 177, 178, 179, 180, 181, 183, 200, 234, 235, 238, 242], "27": [11, 234, 235, 238, 240], "create_env_fn": [12, 13, 15, 16, 43, 48, 49, 233, 242], "callabl": [12, 13, 15, 16, 24, 26, 27, 28, 42, 43, 45, 46, 47, 48, 49, 152, 207, 208, 223, 224, 225], "tensordictmodul": [12, 13, 15, 16, 117, 140, 142, 233, 234, 235, 237, 238, 239], "tensordictbas": [12, 13, 15, 16, 17, 20, 24, 28, 29, 42, 44, 45, 47, 48, 49, 50, 64, 65, 67, 70, 71, 72, 75, 78, 80, 84, 85, 87, 88, 89, 91, 94, 96, 102, 103, 116, 117, 134, 136, 137, 140, 141, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 171, 172, 173, 174, 200, 238], "total_fram": [12, 13, 15, 16, 200, 203, 221, 231, 233, 234, 235, 242], "int": [12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 53, 64, 65, 66, 67, 68, 72, 73, 75, 76, 79, 80, 81, 86, 87, 89, 92, 93, 95, 98, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 124, 125, 126, 127, 134, 136, 137, 139, 140, 141, 146, 147, 153, 154, 155, 158, 159, 160, 162, 163, 164, 166, 182, 183, 191, 192, 193, 196, 197, 200, 202, 206, 209, 214, 216, 217, 219, 223, 224, 225, 238], "create_env_kwarg": [12, 13, 15, 16, 43, 47, 48, 49, 233], "dict": [12, 13, 15, 16, 20, 21, 22, 24, 42, 43, 45, 47, 48, 49, 88, 92, 96, 104, 105, 106, 107, 108, 112, 114, 115, 141, 186, 190, 196, 207, 208, 209, 216, 219, 223, 224, 225, 235, 241], "200": [12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 60, 61, 105, 106, 111, 124, 125, 238], "postproc": [12, 13, 15, 16, 233, 234], "pin_memori": [12, 15, 16, 26, 27, 28, 48, 49, 78, 233, 242], "init_with_lag": [12, 13, 15, 16], "given": [12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 46, 47, 48, 49, 67, 68, 76, 79, 88, 92, 95, 102, 103, 111, 117, 137, 140, 141, 142, 143, 146, 147, 152, 155, 156, 171, 172, 173, 174, 192, 196, 221, 231, 233, 234, 235, 238, 241], "datacollector": [12, 13, 15, 16, 141, 235], "synchron": [12, 47, 223, 224, 234, 235], "recept": 12, "safe": [12, 13, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 134, 137, 140, 141, 148, 233, 242], "env_mak": [12, 13, 15, 221, 241], "lambda": [12, 13, 15, 16, 43, 158, 160, 174, 177, 178, 180, 181, 221, 241, 242], "linear": [12, 13, 15, 24, 42, 45, 46, 47, 48, 49, 67, 79, 88, 92, 95, 103, 104, 115, 117, 118, 119, 120, 124, 125, 130, 131, 132, 133, 136, 137, 138, 139, 140, 143, 144, 146, 147, 149, 172, 173, 174, 221, 233, 234, 237, 239, 242], "2000": [12, 13, 15, 234, 235], "50": [12, 13, 15, 234, 235, 238, 239], "enumer": [12, 13, 15, 24, 42, 45, 47, 48, 49, 233, 234, 235, 242], "step_count": [12, 13, 15, 87, 234, 235, 242], "int64": [12, 13, 15, 18, 21, 22, 23, 25, 135, 137, 139, 146, 147, 211, 234, 235, 238, 241, 242], "traj_id": [12, 13, 15, 17, 234, 242], "shutdown": [12, 13, 15, 16, 233, 234, 242], "del": [12, 13, 15, 233, 234, 235, 237, 241, 242], "total": [12, 13, 15, 16, 18, 22, 23, 25, 45, 154, 162, 163, 191, 193, 196, 200, 203, 204, 233, 234, 235, 237, 238, 239, 240, 241, 242], "greater": [12, 13, 16, 233, 234, 242], "close": [12, 13, 15, 16, 45, 47, 154, 162, 163, 233, 237, 238, 242], "signal": [12, 13, 16, 233, 235], "sent": [12, 13, 16, 36, 37, 48, 49, 96], "server": [12, 13, 16], "dictionari": [12, 13, 15, 16, 20, 24, 42, 45, 47, 48, 49, 88, 92, 141, 223, 224, 225, 231, 233, 235, 241], "span": [12, 13, 15, 16], "unless": [12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 235], "traje": [12, 13], "tori": [12, 13], "n_steps_max": [12, 13, 15, 16, 24, 233], "independ": [12, 13, 15, 16, 91, 93, 166, 231, 233, 234, 242], "ignor": [12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 68, 70, 85, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150, 241], "length": [12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 48, 49, 80, 103, 104, 105, 107, 110, 115, 117, 140, 191, 197, 233, 234, 235, 238, 241], "mainli": [12, 13, 15, 16, 238], "postprocessor": [12, 13, 16], "format": [12, 13, 15, 16, 23, 24, 25, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140, 234, 241], "accord": [12, 13, 15, 16, 50, 76, 83, 113, 118, 124, 127, 128, 238], "split_trajectori": [12, 13, 15, 16, 227], "accommod": [12, 13, 15, 16, 238], "kept": [12, 13, 15, 16, 48, 49, 68, 91, 98, 102, 113, 127, 128], "long": [12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 68, 234], "truncat": [12, 13, 15, 16, 128, 235, 241], "desynchron": [12, 13, 15, 16], "load_state_dict": [12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 92, 96, 231, 233], "state_dict": [12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 92, 96, 225, 231, 233, 234, 241], "ordereddict": [12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 92, 96, 234], "form": [12, 13, 16, 24, 26, 27, 28, 42, 45, 47, 48, 49, 96, 152, 154, 162, 163, 200], "worker0": [12, 13, 16], "state_dict0": [12, 13, 16], "worker1": [12, 13, 16], "state_dict1": [12, 13, 16], "reset_idx": [12, 13, 16], "static_se": [12, 13, 15, 16, 42, 45, 47, 48, 49, 92], "increment": [12, 13, 15, 16, 42, 45, 47, 48, 49, 87, 162], "env_fn": [12, 13, 15, 16, 43, 223, 224], "v0": [12, 13, 16, 45, 55, 56, 58, 59, 67, 92, 96, 221], "env_fn_parallel": [12, 13, 15, 16], "6": [12, 13, 15, 16, 59, 76, 104, 109, 114, 115, 126, 144, 206, 209, 211, 214, 216, 219, 234, 235, 238, 239, 241, 242], "out_se": [12, 13, 15, 16, 241], "shut": [12, 13, 15, 16, 234], "irrevers": [12, 13, 16], "arg": [13, 20, 24, 36, 37, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 79, 86, 92, 93, 94, 95, 104, 115, 130, 131, 135, 139, 188, 193, 197, 200, 225, 233], "kwarg": [13, 15, 16, 20, 24, 36, 37, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 79, 86, 88, 92, 93, 94, 95, 104, 105, 106, 107, 108, 112, 113, 115, 116, 123, 126, 128, 130, 131, 135, 138, 139, 141, 154, 162, 171, 183, 186, 188, 190, 193, 200, 206, 207, 208, 209, 214, 216, 219, 222, 223, 224, 233, 235], "envcreat": [15, 221, 222, 225, 227, 233, 234, 241, 242], "return_same_td": 15, "stop": [15, 42, 45, 47, 48, 49, 235, 241, 242], "equat": [15, 137, 152, 154, 167, 235, 238], "exce": [15, 235], "batcher": 15, "cautious": [15, 163], "whole": [15, 20, 24, 42, 45, 47, 48, 49, 92, 191, 234, 235], "chunk": 15, "policy_state_dict": 15, "env_state_dict": 15, "paradigm": 16, "regular": [16, 140, 141, 147, 157, 202, 231, 233, 241], "prefer": [16, 80, 85, 235], "mere": 16, "rollout_tensordict": 17, "max": [17, 25, 28, 33, 68, 89, 126, 127, 128, 154, 164, 166, 233, 235], "durat": [17, 234], "discret": [18, 21, 22, 23, 25, 32, 68, 123, 146, 147, 157, 234], "5": [18, 43, 47, 59, 60, 61, 103, 104, 111, 113, 114, 115, 117, 127, 128, 135, 139, 146, 147, 162, 233, 234, 237, 238, 239, 240, 241, 242], "assert_is_in": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "belong": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "otherwis": [18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 68, 76, 88, 92, 96, 113, 127, 128, 159, 166, 196, 197, 231, 233, 234, 235, 238, 241], "encod": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 68, 122, 123, 124, 135, 139, 146, 147, 152, 234, 235, 238], "val": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 234, 242], "ndarrai": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 45, 137], "np": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 45, 233, 238], "tupl": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 45, 47, 48, 49, 76, 105, 114, 115, 120, 155, 158, 172, 173, 174, 210, 212, 215, 218], "compli": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "current": [18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 50, 57, 80, 92, 99, 111, 114, 125, 137, 146, 147, 189, 206, 214, 231, 234, 235, 238, 241, 242], "least": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "complient": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "singleton": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 104, 115, 238], "slice": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "tensor_to_index": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "is_in": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 241], "project": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 68, 134, 136, 137, 140, 141, 234, 241, 242], "back": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 140, 141, 233, 235, 238], "rand": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 46, 52, 59, 103, 117, 238, 241, 242], "uniform": [18, 19, 20, 21, 22, 23, 25, 26, 28, 30, 31, 32, 33], "unbound": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 88, 238], "to_numpi": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "transformed_in": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 91, 92, 120, 126, 225], "type_check": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "fill": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 88, 238, 239], "float": [19, 21, 24, 25, 26, 28, 31, 33, 42, 45, 47, 48, 49, 67, 69, 76, 79, 82, 83, 88, 90, 92, 95, 96, 109, 111, 113, 117, 118, 119, 124, 125, 126, 128, 134, 136, 137, 140, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 198, 233, 234, 241], "upper": 19, "unnam": 20, "effect": [20, 24, 42, 45, 47, 48, 49, 84, 92, 200, 234, 241], "pixels_spec": 20, "boundedtensorspec": [20, 131, 132, 133, 136, 137, 138, 227, 235, 238, 241, 242], "32": [20, 60, 61, 104, 105, 106, 112, 115, 121, 122, 233, 234, 235, 238, 239, 241, 242], "observation_vector_spec": 20, "33": [20, 24, 42, 45, 47, 48, 49, 104, 115, 234, 235, 238], "composite_spec": 20, "observation_vector": [20, 65, 206, 209, 214, 216, 219, 233], "td": [20, 51, 52, 53, 54, 55, 56, 58, 59, 65, 68, 69, 76, 90, 92, 96, 102, 103, 116, 117, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 173, 174, 177, 178, 180, 181, 182, 191, 199, 206, 209, 211, 214, 216, 219, 238, 241, 242], "within": [20, 24, 29, 42, 45, 47, 48, 49, 96, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150, 238, 242], "randn": [20, 76, 114, 120, 130, 131, 132, 133, 135, 138, 139, 140, 143, 144, 146, 147, 172, 173, 174, 199, 241, 242], "td_project": 20, "yield_nesting_kei": 20, "nested_kei": 20, "keysview": 20, "immedi": [20, 24, 42, 45, 47, 48, 49, 171], "children": [20, 24, 42, 45, 47, 48, 49], "selected_kei": [20, 48, 49, 85, 233], "onehottensorspec": 21, "categor": [21, 23, 25, 123, 146, 147], "action_valu": [21, 25, 135, 139, 146, 147, 211, 234], "arang": [21, 25, 135, 146, 191], "argmax": [21, 135, 139, 146, 147], "dim": [21, 64, 65, 88, 93, 114, 225, 234, 238], "chosen_action_valu": [21, 25, 139, 211, 234], "outcom": [21, 25, 109, 126], "to_one_hot": [21, 22], "hot": [21, 22, 23, 25, 68, 123, 135, 139, 146, 147, 234], "to_one_hot_spec": [21, 22], "onehotdiscretetensorspec": [21, 135, 139, 146, 147, 227], "convert": [21, 22, 23, 24, 25, 42, 45, 47, 48, 49, 67, 69, 79, 88, 92, 95, 96, 140, 152, 234, 235, 238], "nvec": [22, 23], "cardin": [22, 23, 146, 147, 235], "ax": [22, 118, 119], "multionehotdiscretetensorspec": [22, 227], "use_regist": [23, 25], "to_categor": [23, 25], "to_categorical_spec": [23, 25], "multidiscretetensorspec": [23, 227], "gamma": [24, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 221, 233, 234, 235, 242], "present": [24, 26, 33, 42, 45, 47, 48, 49, 50, 70, 84, 85, 105, 106, 107, 108, 112, 119, 137, 140, 141, 142, 143, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 225, 231, 233, 237, 242], "sutton": 24, "1988": 24, "predict": [24, 111, 116, 117, 145, 157, 159, 160, 166, 171, 234], "tempor": [24, 117, 173, 234], "44": [24, 234, 235, 238, 239], "discount": [24, 43, 153, 154, 155, 156, 157, 158, 160, 162, 163, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 233, 234, 235], "ahead": [24, 241], "add_modul": [24, 42, 45, 47, 48, 49], "child": [24, 42, 45, 47, 48, 49], "fn": [24, 42, 45, 47, 48, 49, 120, 223, 224], "recurs": [24, 42, 45, 47, 48, 49], "init": [24, 42, 45, 47, 48, 49, 233, 234, 235], "init_weight": [24, 42, 45, 47, 48, 49], "m": [24, 42, 45, 47, 48, 49, 68, 141, 238], "fill_": [24, 42, 45, 47, 48, 49, 234, 241], "net": [24, 42, 45, 47, 48, 49, 114, 164, 216, 221, 234, 238, 239, 242], "in_featur": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 104, 105, 106, 107, 108, 114, 115, 118, 119, 131, 140, 242], "out_featur": [24, 42, 45, 46, 47, 48, 49, 67, 79, 88, 92, 95, 103, 104, 105, 106, 107, 108, 111, 112, 114, 115, 117, 118, 119, 131, 135, 140, 233, 242], "bia": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 104, 111, 115, 118, 119, 120, 136, 137, 140, 150, 151, 152, 234, 235, 242], "requires_grad": [24, 42, 45, 47, 48, 49, 233], "bfloat16": [24, 42, 45, 47, 48, 49], "cast": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 96, 140, 206, 209, 211, 214, 216, 219, 241], "datatyp": [24, 42, 45, 47, 48, 49], "direct": [24, 42, 45, 47, 48, 49, 234], "member": [24, 42, 45, 47, 48, 49], "xdoctest": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "skip": [24, 42, 45, 47, 48, 49, 73, 92, 98, 141, 182, 183, 193, 196, 235, 238], "buf": [24, 42, 45, 47, 48, 49], "20l": [24, 42, 45, 47, 48, 49], "1l": [24, 42, 45, 47, 48, 49], "5l": [24, 42, 45, 47, 48, 49], "associ": [24, 42, 45, 47, 48, 49, 124, 225], "copi": [24, 42, 45, 47, 48, 49, 92, 233, 234], "doubl": [24, 26, 28, 31, 42, 45, 47, 48, 49, 67, 69, 79, 88, 90, 92, 95, 140, 156, 157, 161, 164, 167, 233, 234, 235, 241], "eval": [24, 42, 45, 47, 48, 49, 92, 96, 233, 234, 235], "evalu": [24, 42, 45, 47, 48, 49, 92, 109, 123, 128, 164, 207, 208, 234, 235], "particular": [24, 42, 45, 47, 48, 49, 92, 231, 234, 237, 238], "dropout": [24, 42, 45, 47, 48, 49, 92], "batchnorm": [24, 42, 45, 47, 48, 49, 92], "disabl": [24, 42, 45, 47, 48, 49, 92, 113, 127, 128, 233], "comparison": [24, 42, 45, 47, 48, 49, 92], "similar": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 94, 95, 96, 102, 140, 141, 233, 234, 235, 238, 241], "confus": [24, 42, 45, 47, 48, 49, 92], "extra_repr": [24, 42, 45, 47, 48, 49], "represent": [24, 42, 45, 47, 48, 49, 79, 95, 233, 238, 239, 241], "string": [24, 42, 45, 47, 48, 49, 79, 95, 141, 152, 182, 199, 206, 214, 216, 219, 235], "tennsordict": 24, "shift": [24, 150, 235], "nontermin": 24, "termin": [24, 142, 233, 234, 235, 238, 242], "original_reward": 24, "newli": 24, "get_buff": [24, 42, 45, 47, 48, 49], "throw": [24, 42, 45, 47, 48, 49, 241], "docstr": [24, 42, 45, 47, 48, 49], "get_submodul": [24, 42, 45, 47, 48, 49], "explan": [24, 42, 45, 47, 48, 49], "qualifi": [24, 42, 45, 47, 48, 49], "referenc": [24, 42, 45, 47, 48, 49], "attributeerror": [24, 42, 45, 47, 48, 49], "invalid": [24, 42, 45, 47, 48, 49], "resolv": [24, 42, 45, 47, 48, 49], "someth": [24, 42, 45, 47, 48, 49, 228, 234, 235, 238, 241], "get_extra_st": [24, 42, 45, 47, 48, 49, 96], "set_extra_st": [24, 42, 45, 47, 48, 49, 96], "picklabl": [24, 42, 45, 47, 48, 49, 96], "ensur": [24, 26, 28, 33, 42, 45, 47, 48, 49, 64, 79, 96, 148, 233, 234, 235, 238], "guarante": [24, 36, 37, 38, 39, 42, 45, 47, 48, 49, 96, 242], "pickl": [24, 42, 45, 47, 48, 49, 96], "get_paramet": [24, 42, 45, 47, 48, 49], "sai": [24, 42, 45, 47, 48, 49, 239, 241], "net_b": [24, 42, 45, 47, 48, 49], "net_c": [24, 42, 45, 47, 48, 49], "conv": [24, 42, 45, 47, 48, 49, 104, 234], "conv2d": [24, 42, 45, 47, 48, 49, 104, 242], "16": [24, 42, 45, 47, 48, 49, 234, 235, 238, 239], "kernel_s": [24, 42, 45, 47, 48, 49, 104, 105, 106, 234, 242], "stride": [24, 42, 45, 47, 48, 49, 104, 105, 106, 112, 234, 242], "100": [24, 42, 45, 47, 48, 49, 76, 192, 200, 221, 234, 235, 237, 238, 239, 241, 242], "diagram": [24, 42, 45, 47, 48, 49], "show": [24, 42, 45, 47, 48, 49, 233, 234, 235, 238, 242], "itself": [24, 42, 45, 47, 48, 49, 87, 235], "degre": [24, 42, 45, 47, 48, 49], "named_modul": [24, 42, 45, 47, 48, 49], "o": [24, 42, 45, 47, 48, 49], "transit": [24, 42, 45, 47, 48, 49, 145, 233, 234, 238], "half": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140, 233], "ipu": [24, 42, 45, 47, 48, 49], "strict": [24, 42, 45, 47, 48, 49, 92], "descend": [24, 42, 45, 47, 48, 49, 92], "exactli": [24, 42, 45, 47, 48, 49, 57, 92, 233], "persist": [24, 42, 45, 47, 48, 49, 92], "enforc": [24, 42, 45, 47, 48, 49, 92, 142, 238], "missing_kei": [24, 42, 45, 47, 48, 49, 92], "unexpected_kei": [24, 42, 45, 47, 48, 49, 92], "namedtupl": [24, 42, 45, 47, 48, 49, 92], "duplic": [24, 42, 45, 47, 48, 49, 156, 157], "l": [24, 42, 45, 47, 48, 49, 171, 235, 238], "idx": [24, 42, 45, 47, 48, 49], "named_buff": [24, 42, 45, 47, 48, 49, 234], "prefix": [24, 42, 45, 47, 48, 49, 92, 182, 241], "remove_dupl": [24, 42, 45, 47, 48, 49], "prepend": [24, 42, 45, 47, 48, 49], "running_var": [24, 42, 45, 47, 48, 49], "named_children": [24, 42, 45, 47, 48, 49], "conv4": [24, 42, 45, 47, 48, 49], "conv5": [24, 42, 45, 47, 48, 49], "memo": [24, 42, 45, 47, 48, 49], "named_paramet": [24, 42, 45, 47, 48, 49, 234], "register_backward_hook": [24, 42, 45, 47, 48, 49], "removablehandl": [24, 42, 45, 47, 48, 49], "deprec": [24, 42, 45, 47, 48, 49, 92, 241], "favor": [24, 42, 45, 47, 48, 49, 235], "register_full_backward_hook": [24, 42, 45, 47, 48, 49], "register_buff": [24, 42, 45, 47, 48, 49], "running_mean": [24, 42, 45, 47, 48, 49], "alongsid": [24, 42, 45, 47, 48, 49], "latter": [24, 42, 45, 47, 48, 49, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150, 223, 224], "num_featur": [24, 42, 45, 47, 48, 49], "register_forward_hook": [24, 42, 45, 47, 48, 49, 146, 147], "with_kwarg": [24, 42, 45, 47, 48, 49], "posit": [24, 26, 27, 28, 29, 42, 45, 47, 48, 49, 72, 73, 86, 87, 89, 92, 93, 120, 235, 238], "signatur": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140, 149, 238], "possibli": [24, 42, 45, 47, 48, 49, 104, 140, 200, 235, 238, 241], "register_module_forward_hook": [24, 42, 45, 47, 48, 49], "register_forward_pre_hook": [24, 42, 45, 47, 48, 49], "invok": [24, 42, 45, 47, 48, 49], "And": [24, 42, 45, 47, 48, 49], "forward_pr": [24, 42, 45, 47, 48, 49], "register_module_forward_pre_hook": [24, 42, 45, 47, 48, 49], "respect": [24, 42, 45, 47, 48, 49, 63, 67, 79, 80, 88, 92, 95, 125, 140, 144, 195, 235], "grad_input": [24, 42, 45, 47, 48, 49], "grad_output": [24, 42, 45, 47, 48, 49], "subsequ": [24, 42, 45, 47, 48, 49], "entri": [24, 42, 45, 47, 48, 49, 66, 72, 76, 79, 95, 172, 173, 174, 233, 235, 238, 239], "technic": [24, 42, 45, 47, 48, 49, 234], "similarli": [24, 42, 45, 47, 48, 49, 142, 143, 233, 241], "caller": [24, 42, 45, 47, 48, 49], "register_module_full_backward_hook": [24, 42, 45, 47, 48, 49], "register_full_backward_pre_hook": [24, 42, 45, 47, 48, 49], "backward_pr": [24, 42, 45, 47, 48, 49], "register_module_full_backward_pre_hook": [24, 42, 45, 47, 48, 49], "register_load_state_dict_post_hook": [24, 42, 45, 47, 48, 49], "post": [24, 42, 45, 47, 48, 49, 233, 234], "incompatible_kei": [24, 42, 45, 47, 48, 49], "consist": [24, 42, 45, 47, 48, 49, 104, 115, 233, 234, 235, 238, 239, 241], "thrown": [24, 42, 45, 47, 48, 49], "clear": [24, 42, 45, 47, 48, 49, 192], "register_modul": [24, 42, 45, 47, 48, 49, 231], "alia": [24, 42, 45, 47, 48, 49], "register_paramet": [24, 42, 45, 47, 48, 49], "register_state_dict_pre_hook": [24, 42, 45, 47, 48, 49], "keep_var": [24, 42, 45, 47, 48, 49, 92], "made": [24, 36, 37, 38, 39, 42, 45, 47, 48, 49, 137, 233, 239], "requires_grad_": [24, 42, 45, 47, 48, 49, 233], "autograd": [24, 42, 45, 47, 48, 49, 92], "freez": [24, 42, 45, 47, 48, 49], "finetun": [24, 42, 45, 47, 48, 49], "gan": [24, 42, 45, 47, 48, 49], "share_memori": [24, 42, 43, 45, 47, 48, 49, 233], "share_memory_": [24, 42, 45, 47, 48, 49, 242], "destin": [24, 42, 45, 47, 48, 49, 92, 102], "averag": [24, 42, 45, 47, 48, 49, 92, 96, 137, 158, 159, 198, 233, 235], "shallow": [24, 42, 45, 47, 48, 49, 92], "pleas": [24, 42, 45, 47, 48, 49, 92, 228], "design": [24, 25, 42, 45, 47, 48, 49, 80, 92, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 233, 234, 235, 237, 238, 241], "detach": [24, 42, 45, 47, 48, 49, 92, 233, 234], "non_block": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140, 234], "memory_format": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "channels_last": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "Its": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "complex": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140, 233, 234], "integr": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 108, 117, 140, 238, 239], "unchang": [24, 42, 45, 47, 48, 49, 67, 68, 79, 88, 92, 95, 140], "tri": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "host": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "pin": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "4d": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "ignore_w": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "1913": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "3420": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "5113": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "2325": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "torch_doctest_cuda1": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "gpu1": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "1914": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "5112": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "2324": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "float16": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "cdoubl": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "3741": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "j": [24, 26, 33, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140, 231, 234], "2382": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "5593": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "4443": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "complex128": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "6122": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "1150": [24, 42, 45, 47, 48, 49, 67, 79, 88, 92, 95, 140], "to_empti": [24, 42, 45, 47, 48, 49], "dst_type": [24, 42, 45, 47, 48, 49], "xpu": [24, 42, 45, 47, 48, 49], "set_to_non": [24, 42, 45, 47, 48, 49], "unidimension": 25, "keepdim": 25, "user_regist": 25, "experiment": [25, 141], "priori": 25, "definit": [25, 39], "uniqu": 25, "discretebox": 25, "discretetensorspec": [25, 227], "alpha": [26, 28, 33, 104, 164, 166, 233, 234, 242], "ep": [26, 28, 33, 96, 137, 154, 167, 198], "1e": [26, 28, 33, 96, 109, 111, 120, 126, 235], "08": [26, 28, 33, 234, 235, 238], "collate_fn": [26, 27, 28, 242], "prefetch": [26, 27, 28, 233, 234], "schaul": [26, 33], "quan": [26, 33], "antonogl": [26, 33], "silver": [26, 33], "2015": [26, 33], "arxiv": [26, 33, 64, 79, 105, 106, 107, 108, 111, 112, 117, 119, 121, 122, 124, 125, 137, 146, 153, 157, 158, 159, 160, 161, 163, 166, 167, 172, 175, 176, 179, 206, 209, 214, 219, 233, 239], "ab": [26, 33, 79, 96, 111, 112, 117, 119, 121, 122, 124, 125, 153, 158, 159, 160, 161, 163, 166, 206, 214, 233, 239], "1511": [26, 33, 112], "05952": [26, 33], "expon": [26, 28, 33], "\u03b1": [26, 28, 33], "determin": [26, 28, 33, 79, 95, 137, 234], "delta": [26, 28, 33, 126, 141, 227], "null": [26, 28, 33, 63, 233], "max_siz": [26, 27, 28, 36, 38, 39, 234], "1_000": [26, 27, 28], "merg": [26, 27, 28], "mini": [26, 27, 28], "style": [26, 27, 28], "rb": [26, 27, 28, 234, 239, 242], "insert_transform": [26, 27, 28, 29], "insert": [26, 27, 28, 29, 40, 41, 93, 234], "return_info": [26, 27, 28, 29], "sampler": [26, 27, 28, 29, 33, 34, 36, 37, 38, 39, 80, 227, 233, 235], "info": [26, 27, 28, 29, 42, 45, 47, 48, 49, 60, 61, 97], "writer": [27, 40, 227, 235], "randomsampl": [27, 227, 233], "roundrobinwrit": [27, 227], "priority_kei": [28, 29, 156, 157, 166, 242], "td_error": [28, 29, 155, 156, 157, 164, 166, 233, 242], "reduct": [28, 33], "prioritizedreplaybuff": [28, 227, 242], "update_tensordict_prior": [28, 233, 242], "min": [28, 33, 126, 127, 128, 154, 164, 166, 233, 234, 235], "median": [28, 33, 141], "include_info": [28, 29], "kw": [29, 40], "replaybuff": [29, 41, 80, 217, 221, 227, 235, 239, 242], "meta": [30, 44, 231, 235], "describ": [30, 65, 91, 126, 127, 189, 206, 214, 235, 238, 241], "max_capac": [33, 233], "update_prior": [33, 197, 231, 242], "uniformli": [34, 241], "scratch_dir": [36, 233], "memmap": [36, 48, 49, 96, 197], "attach": [36, 37, 38, 39, 234], "entiti": [36, 37, 38, 39], "alloc": [37, 233], "__len__": 39, "roundrobin": 40, "piec": [40, 41, 235, 238], "_inplace_upd": [42, 47, 48, 49, 51, 52, 60, 61, 92], "_batch_lock": [42, 47, 48, 49, 51, 52, 60, 61, 92], "run_type_check": [42, 46], "batch_lock": [42, 44, 45, 47, 48, 49, 88, 92, 238], "environn": [42, 45, 46, 47, 48, 49, 92], "immut": [42, 45, 47, 48, 49, 92, 206, 214], "fake_tensordict": [42, 45, 47, 48, 49, 233, 234], "fake": [42, 45, 47, 48, 49, 233, 234], "overridden": [42, 45, 47, 48, 49, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150], "recip": [42, 45, 47, 48, 49, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150], "afterward": [42, 45, 47, 48, 49, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150, 241], "former": [42, 45, 47, 48, 49, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150], "silent": [42, 45, 47, 48, 49, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 120, 121, 122, 124, 125, 134, 136, 137, 150], "rand_act": [42, 45, 47, 48, 49], "_step": [42, 45, 47, 48, 49, 72], "privat": [42, 45, 47, 48, 49, 238, 241], "_reset": [42, 45, 46, 47, 48, 49, 103, 117], "overwritten": [42, 45, 47, 48, 49, 72, 102], "callback": [42, 45, 47, 48, 49], "auto_reset": [42, 45, 47, 48, 49, 234, 238], "auto_cast_to_devic": [42, 45, 47, 48, 49], "break_when_any_don": [42, 45, 47, 48, 49], "return_contigu": [42, 45, 47, 48, 49, 98, 237], "soon": [42, 45, 47, 48, 49], "lazystackedtensordict": [42, 45, 46, 47, 48, 49, 103, 117, 237, 241, 242], "concomitt": [42, 45, 47, 48, 49], "workspac": [42, 45, 47, 48, 49, 50], "carri": [42, 45, 47, 48, 49, 234, 238], "creator": [43, 207, 208, 223, 224, 225], "substitut": [43, 96], "multiprocess": [43, 44, 96, 234, 235, 238, 241], "vecnorm": [43, 225], "mp": [43, 96], "env_creat": [43, 233], "test_env1": 43, "_td": 43, "observation_count": [43, 241], "test_env2": 43, "sleep": [43, 241], "__name__": [43, 234], "__main__": 43, "p1": 43, "p2": 43, "join": [43, 206, 214, 235], "9934": 43, "env_str": 44, "union": [45, 104, 164], "discard": [45, 102, 182, 241], "info_dict_read": 45, "set_info_dict_read": 45, "put": [45, 96, 225, 234, 235, 238], "f": [45, 152, 172, 173, 174, 233, 234, 235, 238, 241], "read_act": 45, "read_don": 45, "reader": [45, 233, 234], "frame_skip": [45, 53, 54, 55, 58, 73, 193, 196, 203, 231, 233, 235, 242], "broken": [45, 98], "read_ob": 45, "dictat": [45, 141, 238], "inner": [45, 68, 231, 233, 235, 241], "read_reward": 45, "total_reward": 45, "step_reward": 45, "far": [45, 113, 127, 128, 238, 241], "baseinfodictread": 45, "info_dict": 45, "hoc": 45, "manner": [45, 79, 233, 234, 235, 237, 238], "dict_read": 45, "default_info_dict_read": 45, "my_info_kei": 45, "some_env": 45, "limit": [46, 48, 49, 233, 238], "safeti": 46, "constraint": [46, 235], "behav": [46, 57, 123, 239], "unboundedcontinuoustensorspec": [46, 88, 103, 130, 131, 132, 133, 140, 143, 144, 227, 235, 238, 241], "mymbenv": [46, 103, 117], "world_model": [46, 103, 117, 159], "super": [46, 103, 117, 144, 146, 149, 238, 242], "hidden_observ": [46, 103, 117], "mlp": [46, 103, 104, 105, 106, 107, 108, 114, 117, 131, 135, 206, 214, 216, 219, 227, 233, 234, 237, 239, 242], "worldmodelwrapp": [46, 103, 117, 227], "activation_class": [46, 103, 104, 105, 106, 107, 108, 111, 112, 115, 117, 233, 234, 242], "relu": [46, 103, 117, 120, 152], "activate_last_lay": [46, 103, 108, 115, 117], "depth": [46, 103, 104, 105, 106, 107, 108, 111, 112, 115, 117, 121, 122, 135, 234, 237], "less": [47, 223, 224, 233, 234, 235, 242], "equal": [47, 48, 49, 75, 76, 104, 110, 115, 168, 191, 223, 224, 235, 239], "readthedoc": 47, "io": [47, 48, 49], "en": 47, "python_interfac": 47, "num_work": [47, 48, 49, 233, 234], "thread": 47, "task_id": 47, "my_env_fun": [48, 49], "custom_attribute_list": [48, 49], "custom_attribut": [48, 49], "custom_method_list": [48, 49], "custom_method": [48, 49], "deploi": [48, 49], "creation": [48, 49, 241], "slight": [48, 49, 234], "overhead": [48, 49], "env_input_kei": [48, 49], "permit": [48, 49, 72, 93], "drastic": [48, 49], "burden": [48, 49], "_batchedenv": [48, 49], "might": [48, 49, 190, 228, 233, 241], "next_pixel": [48, 49], "next_vector": [48, 49], "occupi": [48, 49], "excluded_kei": [48, 49, 70], "share_individual_td": [48, 49], "lazi": [48, 49, 79, 118, 142, 143, 233, 234, 237, 241], "shared_memori": [48, 49], "policy_proof": [48, 49], "ll": [48, 49, 233, 234, 235, 241], "hidden": [48, 49, 111, 114, 121, 122, 124, 125, 131, 132, 133, 140, 143, 206, 214, 237, 242], "instanti": [48, 49, 91, 233, 234, 238, 241], "allow_step_when_don": [48, 49], "update_kwarg": [48, 49], "build_tensordict": 50, "next_observ": [50, 102, 114, 237], "log_prob": [50, 109, 123, 128], "empti": [50, 79, 89, 92, 95, 233, 238], "popul": [50, 88, 235], "googl": [51, 52, 235], "ant": [51, 52, 239], "get_environ": 52, "87": [52, 234, 238, 239], "acrobot": [52, 241], "fetch": [52, 239, 241], "dm_control": [53, 54, 233, 237, 241], "task_nam": 53, "cheetah": [53, 54, 233, 241], "serv": [57, 241], "placehold": [57, 92], "secur": 57, "jumanji": [58, 59], "snake": [58, 59], "6x6": [58, 59], "td1": 59, "int32": [59, 242], "12x12": 59, "tsp50": 59, "tsp100": 59, "vma": [60, 61], "scenario_nam": [60, 61], "flock": [60, 61], "num_env": [60, 61], "continuous_act": [60, 61], "scenario": [60, 61, 233, 238], "n_agent": [60, 61], "cohesion_rew": [60, 61], "collision_rew": [60, 61], "separation_rew": [60, 61], "velocity_rew": [60, 61], "18": [60, 61, 234, 235, 238, 241], "model_bas": [62, 103, 117], "transform_reward_spec": [63, 67, 69, 82, 83, 91, 93], "success": [64, 91, 234, 238, 242], "account": [64, 234], "movement": 64, "veloc": [64, 238, 241], "propos": [64, 116, 161, 167, 216, 219], "plai": [64, 234, 235, 241], "pdf": [64, 105, 106, 107, 108, 137, 146, 157, 164, 167, 172, 175, 176, 179, 209, 216, 219], "1312": [64, 234], "5602": 64, "_buffer": [64, 89], "transform_observation_spec": [64, 65, 66, 67, 69, 70, 72, 74, 76, 81, 84, 85, 87, 88, 89, 90, 91, 93, 238], "del_kei": [65, 234, 237, 238], "unsqueeze_if_oor": 65, "observation_posit": 65, "observation_veloc": 65, "delet": 65, "unsqueez": [65, 90, 93, 114, 238], "key1": [65, 191, 199], "key2": [65, 191, 199], "crop": [66, 80, 183], "center": [66, 183], "width": [66, 81], "height": [66, 81], "squar": [66, 113, 127, 128, 183], "rewardsc": [67, 92, 233, 234], "rewardclip": 67, "transformed_env": [67, 91, 92], "tranform": [67, 70, 85, 87, 91, 94, 234], "dest": [67, 79, 95, 140], "transform_input_spec": [67, 68, 69, 76, 87, 91, 93], "num_actions_effect": 68, "max_act": 68, "action_kei": [68, 103, 116, 117, 134, 136], "include_forward": 68, "dimension": [68, 172, 175, 176, 179], "num_act": [68, 234], "action_out": 68, "wherea": [68, 231, 233], "_call": [68, 72, 238], "inde": [68, 235, 238], "remain": [68, 119], "manual_se": [68, 76, 136, 137, 233, 238, 241, 242], "expos": [69, 142], "extern": [69, 241], "finit": 71, "first_dim": 72, "last_dim": 72, "allow_positive_dim": [72, 93], "flatten": [72, 197, 233, 234], "adjac": 72, "th": [72, 93, 238], "exclus": [72, 225], "frameskip": 72, "repeatedli": [73, 235], "turn": [74, 93, 196, 233, 234, 238, 239], "noop": [75, 242], "30": [75, 124, 125, 234, 235, 238, 240], "op": [75, 134, 136, 202], "randomli": [75, 76, 88, 141, 238], "noop_max": 75, "loc": [76, 83, 113, 120, 127, 128, 131, 132, 133, 138, 141, 143, 204, 206, 214, 216, 219, 225, 233, 234, 235, 242], "out_keys_inv": [76, 77, 91, 238], "standard_norm": [76, 83, 233, 234], "affin": [76, 83], "layer": [76, 96, 104, 105, 106, 111, 115, 118, 119, 121, 122, 129, 233, 234, 235, 239], "normal": [76, 96, 104, 113, 115, 120, 127, 128, 134, 141, 154, 162, 163, 196, 198, 225, 231, 241], "set_default_tensor_typ": 76, "doubletensor": 76, "isclos": 76, "next_ob": [76, 172, 173, 174, 233, 242], "rubric": [76, 143], "init_stat": [76, 233, 234, 235], "3752e": 76, "01": [76, 137, 150, 153, 154, 162, 163, 234, 235, 238, 239, 240], "5087e": 76, "03": [76, 234, 235, 238, 239], "9294e": 76, "9636": [76, 238], "5608": 76, "6408": 76, "num_it": [76, 234, 235], "reduce_dim": [76, 233, 234, 235], "cat_dim": [76, 233, 234, 235], "keep_dim": [76, 234], "constant": [76, 231, 233, 235, 241], "statist": [76, 96, 165, 225, 233, 234, 235, 241], "approach": [76, 233, 235, 241], "gaussian": [76, 88, 103, 117, 118, 119, 134, 235], "empir": [76, 103, 117, 141, 235], "3d": 76, "third": 76, "r3m": [79, 239], "resnet": [79, 95], "visual": [79, 95, 235, 238], "embed": [79, 94, 95, 131, 132, 133, 140, 239], "ego4d": [79, 95], "paper": [79, 95, 161, 216, 219, 233, 235], "univers": [79, 95], "suraj": 79, "nair": 79, "aravind": 79, "rajeswaran": 79, "vikash": [79, 95], "kumar": [79, 95], "chelsea": 79, "finn": 79, "abhinav": 79, "gupta": 79, "2203": [79, 117, 235, 239], "12601": [79, 239], "_init": 79, "snippet": [79, 233], "resnet50": [79, 95, 239], "model_nam": [79, 95, 189], "resnet34": 79, "resnet18": 79, "left": [79, 89, 95, 233, 234, 235], "r3m_vec": [79, 239], "feed": [79, 95], "244": [79, 95, 238], "stack_imag": [79, 95], "tread": [79, 95], "separet": [79, 95], "hub": [79, 95, 239], "cach": [79, 92, 95, 192, 239], "public": [79, 95], "resnet50_weight": [79, 95], "imagenet1k_v1": [79, 95], "download_path": [79, 95], "tensor_pixels_kei": [79, 95], "sub_seq_len": 80, "sample_dim": 80, "mask_kei": 80, "primarili": 80, "hesit": 80, "request": 80, "robust": 80, "vari": 80, "mix": 80, "NOT": 80, "improp": 80, "interpol": [81, 234], "bilinear": 81, "clamp_min": [82, 137], "clamp_max": 82, "clip_min": 82, "scalar": [82, 106, 108, 118, 119, 134, 136, 137, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 234, 238], "clip_max": 82, "episod": [84, 103, 175, 176, 177, 178, 179, 180, 181, 233, 234], "episode_": 84, "reward1": 84, "reward2": 84, "ho": 84, "excludetransform": 85, "squeeze_dim": 86, "squeez": [86, 104, 234, 238], "primer": 88, "default_valu": 88, "drawn": [88, 141, 235], "unit": [88, 103, 111, 121, 122, 124, 125, 235], "chosen": [88, 206, 214, 216, 219], "transfomedenv": 88, "lock": [88, 96, 238], "mykei": 88, "dtype_or_devic": 88, "pool": 89, "255": [90, 238], "precis": [90, 233, 235], "ri": 90, "randint": [90, 233], "principl": 91, "cattransform": 91, "notabl": 91, "cache_spec": 92, "anymor": [92, 140, 233], "unsqueeze_dim": [93, 238], "danger": 93, "vip": [94, 95, 239], "toward": 95, "implicit": 95, "jason": 95, "ma": 95, "shagun": 95, "sodhani": 95, "dinesh": 95, "jayaraman": 95, "osbert": 95, "bastani": 95, "ami": 95, "zhang": 95, "vip_vec": 95, "shared_td": 96, "decai": [96, 134, 136, 164, 198, 233, 234, 241], "9999": 96, "0001": [96, 111, 120, 198, 235, 238], "fly": [96, 162, 235, 238, 241], "to_observation_norm": 96, "99": [96, 117, 153, 154, 158, 160, 162, 163, 164, 165, 166, 171, 221, 233, 234, 235, 238, 242], "underflow": 96, "build_td_for_shared_vecnorm": 96, "memmori": 96, "memmap_": 96, "queue": 96, "td_share": 96, "observationnorm": [96, 225, 233, 234, 235, 242], "state_dim": [97, 124, 125], "action_dim": [97, 105, 107, 237], "gsde": [97, 164, 225], "func": 97, "gsdemodul": 97, "check_dtyp": 98, "short": [98, 235], "discrep": [98, 153, 154, 155, 156, 162, 163], "imposs": 98, "heterogen": [98, 234], "caution": [98, 241], "probabilistictdmodul": [101, 115, 141, 166, 171, 196], "next_tensordict": [102, 233], "keep_oth": [102, 238], "exclude_reward": 102, "exclude_don": 102, "exclude_act": 102, "_run_check": 102, "reflect": [102, 203, 235], "renam": [102, 233], "next_": 102, "funtion": [102, 238], "td_out": [102, 191, 199], "make_polici": 102, "next_td": 102, "planning_horizon": [103, 117], "optim_step": [103, 117], "num_candid": [103, 117], "top_k": [103, 117], "reward_kei": [103, 117], "cross": 103, "entropi": [103, 153, 154, 162, 163, 164, 166], "botev": 103, "et": 103, "al": [103, 211, 241], "2013": 103, "cem": 103, "plan": [103, 116, 117], "varianc": [103, 113, 120, 127, 128, 235], "rank": 103, "k": [103, 234], "repeat": [103, 235, 238], "maximis": [103, 105, 107, 117, 233, 235, 238], "horizon": [103, 117, 235], "modelbasedenv": [103, 117], "mpc": [103, 116, 117], "candid": [103, 117], "modelbasedenvbas": [103, 116, 117, 227], "next_hidden_observ": 103, "num_cel": [104, 105, 106, 107, 108, 111, 112, 115, 131, 233, 234, 235, 242], "elu": [104, 105, 106, 107, 108, 111, 112, 234, 242], "activation_kwarg": [104, 115], "norm_class": [104, 105, 106, 115], "norm_kwarg": [104, 115], "bias_last_lay": [104, 105, 106, 107, 108, 112, 115], "aggregator_class": [104, 105, 106, 234, 242], "squashdim": [104, 105, 242], "aggregator_kwarg": [104, 105, 106, 234], "squeeze_output": [104, 105, 106, 234], "convolut": [104, 105, 106], "neural": [104, 140, 234, 235, 238, 241], "produc": [104, 115, 123, 131, 133, 183, 235, 241], "len": [104, 115, 233, 234, 238, 239, 242], "cell": [104, 115, 235], "kernel": [104, 112, 114], "device_typ": [104, 105, 106, 107, 108, 112, 115, 118, 119], "cnet": 104, "34": [104, 115, 234, 235, 238], "35": [104, 115, 234, 235, 238, 239], "rectangular": 104, "conv_net_kwarg": [105, 106], "mlp_net_kwarg": [105, 106, 107], "use_avg_pool": [105, 106], "WITH": [105, 106, 107, 108, 137, 167, 209], "1509": [105, 106, 107, 108, 117, 137, 161, 167, 209, 233], "02971": [105, 106, 107, 108, 137, 167, 209, 233], "convnet": [105, 227, 242], "ndims_in": 105, "avgpool": [105, 106], "128": [106, 233, 234, 238, 239], "adaptiveavgpool2d": [106, 234], "400": [107, 108, 238], "300": [107, 108, 206, 214, 238], "mlp_net_kwargs_net1": 108, "mlp_net_kwargs_net2": 108, "atol": [109, 126], "06": [109, 126, 234, 235, 238], "rtol": [109, 126], "batch_shap": [109, 126], "event_shap": [109, 126], "absolut": [109, 126], "toler": [109, 126], "densiti": [109, 123, 128], "mass": [109, 123, 128, 238], "rsampl": [109, 123, 141], "sample_shap": [109, 123], "dqnet": 110, "atom": 110, "std_bia": 111, "std_min_val": 111, "belief": [111, 121, 124, 125], "1912": [111, 158, 159, 160], "01603": [111, 158, 159, 160], "softplu": [111, 120, 150, 151, 152], "out_features_valu": 112, "cnn_kwarg": [112, 234], "mlp_kwarg": [112, 114, 234], "duel": [112, 234], "cnn": [112, 234, 242], "06581": 112, "512": [112, 234, 238], "upscal": [113, 127, 128], "tanh_loc": [113, 127, 128], "event_dim": [113, 126, 127], "ultim": [113, 127, 128], "poor": [113, 127, 128], "explos": [113, 127, 128], "switch": [113, 127, 128], "sigma": [113, 127, 128, 134, 137, 235], "formula": [113, 127, 128, 154, 162, 163, 235], "lstm_kwarg": 114, "embedd": 114, "time_step": 114, "2d": 114, "hidden_s": 114, "input_s": 114, "hidden0_in": 114, "hidden1_in": 114, "hidden0_out": 114, "hidden1_out": 114, "single_bias_last_lay": 115, "layer_class": 115, "layer_kwarg": 115, "perceptron": 115, "seamless": 115, "reshap": [115, 235], "lazylinear": [115, 235, 238, 239, 242], "42": [115, 200, 234, 235, 238, 239], "noisylinear": [115, 118, 227, 234], "noisylazylinear": [115, 227], "At": [116, 235, 237, 238, 239], "mpcplanner": 116, "tensordict_out": [116, 241], "advantage_modul": [117, 153, 235], "temperatur": 117, "mppi": 117, "covari": 117, "william": [117, 165], "aldrich": 117, "theodor": 117, "01149": 117, "hansen": 117, "wang": 117, "su": 117, "04955": 117, "ndunboundedcontinuoustensorspec": [117, 143], "valueoper": [117, 131, 132, 133, 153, 154, 162, 163, 221, 227, 233, 235], "tdlambdaestim": [117, 227], "value_net": [117, 172, 173, 174, 235], "adv": 117, "95": [117, 158, 233, 234, 235, 238], "std_init": [118, 119], "term": [118, 119, 152, 153, 202, 234, 235], "matrix": [118, 119], "initialize_paramet": 118, "isol": [118, 234], "1706": 119, "10295v3": 119, "induc": 119, "aid": 119, "emploi": 119, "scale_map": 120, "biased_softplus_1": 120, "scale_lb": [120, 124, 125], "exp": [120, 152], "module_norm": 120, "decod": 121, "1803": [121, 122], "10122": [121, 122], "rnn_hidden": 121, "latent": 122, "logit": 123, "excacli": 123, "hidden_dim": [124, 125], "posterior": [124, 159], "rssm": [124, 125, 159], "1811": [124, 125], "04551": [124, 125], "obs_embed": 124, "rnn_hidden_dim": 125, "dream": 125, "recurr": [125, 234], "tanhtransform": 127, "tensordict_modul": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "translat": [130, 138], "td_modul": [130, 131, 132, 133, 138, 140, 141, 143, 144, 242], "get_policy_oper": [131, 132, 133, 206, 214], "alon": [131, 132, 133], "tdmodul": [131, 132, 133, 221], "get_critic_oper": 131, "common_oper": [131, 133], "policy_oper": [131, 132, 133], "value_oper": [131, 132, 133], "probabilisticactor": [131, 132, 133, 166, 227, 233, 235], "tanhnorm": [131, 132, 133, 138, 143, 227, 235, 242], "normalparamwrapp": [131, 132, 133, 138, 143, 227, 242], "spec_hidden": [131, 133], "module_hidden": [131, 133], "td_module_hidden": [131, 133], "spec_act": [131, 133], "module_act": [131, 133], "td_module_act": [131, 132, 133], "dist_in_kei": [131, 132, 133, 138, 143], "sample_out_kei": [131, 133, 143], "distribution_class": [131, 132, 133, 138, 141, 143, 233, 235, 242], "return_log_prob": [131, 132, 133, 141, 143, 235, 242], "module_valu": [131, 132, 133], "td_module_valu": [131, 132, 133], "state_action_valu": [131, 144, 171, 209, 216, 219, 221, 233, 242], "td_clone": [131, 132, 133], "sample_log_prob": [131, 132, 133, 141, 143, 206, 214, 216, 235, 242], "tensordictmodulewrapp": [131, 207, 208, 221], "get_value_oper": [131, 132, 133, 206, 214], "action_modul": 132, "state_valu": [132, 133, 144, 172, 173, 174, 175, 176, 177, 179, 180, 206, 214, 219, 233, 235], "safesequenti": [132, 133, 145, 227], "sigma_init": 134, "sigma_end": 134, "annealing_num_step": [134, 136, 137, 233, 234], "po": [134, 136], "epsilon": [134, 136, 137, 167, 234, 235], "recov": [134, 136, 142, 237], "action_spac": [135, 139, 146, 147], "one_hot": [135, 139, 146, 147], "nbin": [135, 146], "qvalue_actor": [135, 139, 146, 147], "eps_init": [136, 137, 234], "eps_end": [136, 137, 234], "greedi": [136, 147, 234], "explorative_polici": [136, 137], "0000": [136, 234, 235, 238, 242], "6986": 136, "9366": 136, "5837": 136, "8596": 136, "grad_fn": [136, 242], "addbackward0": [136, 242], "theta": [137, 235, 238], "15": [137, 158, 234, 235, 238, 240, 242], "mu": [137, 235], "dt": [137, 238], "x0": 137, "sigma_min": 137, "n_steps_ann": 137, "ornstein": [137, 233], "uhlenbeck": [137, 233], "ou": [137, 233], "introduc": 137, "auto": [137, 164, 166], "correl": 137, "sort": 137, "prev_nois": 137, "current_sigma": 137, "sqrt": 137, "n_step": [137, 235], "ou_prev_nois": 137, "ou_step": 137, "increas": [137, 234], "anneal": 137, "_ou_prev_nois": 137, "_ou_step": 137, "probabilist": [138, 235, 242], "functional_modul": [138, 139, 140, 143, 144, 146, 147], "make_funct": [138, 139, 140, 143, 144, 146, 147, 148, 234, 242], "functionalmodul": [140, 148], "functionalmodulewithbuff": [140, 148], "character": 140, "overflow": [140, 141], "grucel": 140, "td_fmodul": 140, "td_function": 140, "td_state": 140, "vmap": [140, 143, 234, 242], "ensembl": [140, 164], "params_repeat": 140, "td_vmap": [140, 143], "irrespect": [140, 141], "random_sampl": [140, 141], "tensor_spec": 141, "default_interaction_mod": 141, "distribution_kwarg": [141, 233, 235], "cache_dist": 141, "n_empirical_estim": 141, "probabilistictensordictmodul": [141, 142, 242], "rule": [141, 235], "interaction_mod": 141, "get_dist": [141, 142], "__call__": [141, 231], "suppli": 141, "fist": 141, "set_interaction_mod": 141, "diverg": [141, 159, 162], "partial_toler": [142, 143, 237], "probabilistictensordictsequenti": [142, 242], "tensordictsequenti": [142, 233, 237, 239, 242], "who": [142, 143], "AND": [142, 143], "scan": [142, 143], "tensordictsequenci": 143, "tensordictsequ": 143, "safeprobabilisticmodul": [143, 227], "spec1": 143, "net1": 143, "module1": 143, "td_module1": 143, "spec2": 143, "module2": 143, "td_module2": 143, "custommodul": [144, 149], "cat": [144, 242], "transition_model": 145, "reward_model": 145, "imaginari": 145, "imagin": 145, "get_reward_oper": 145, "get_transition_model_oper": 145, "var_num": [146, 147], "regard": [146, 153, 157, 163, 235, 238], "perspect": [146, 157, 235], "1707": [146, 157, 163, 206, 214, 238], "06887": [146, 157], "mult_one_hot": [146, 147], "customdistributionalqv": 146, "log_softmax": 146, "_functorch": 148, "wrapper_typ": 148, "mislead": 149, "other_kei": 149, "typeerror": 149, "min_val": [150, 152], "bias": [150, 233, 234], "_bia": 150, "invert": [151, 235], "surject": 152, "expln": 152, "biased_softplu": [152, 227], "beggin": 152, "biased_softplus_": 152, "syntax": [152, 233], "condit": [152, 233, 238], "met": [152, 238], "safeprobabilisticsequenti": [153, 154, 162, 163, 165, 207, 208, 227], "advantage_kei": [153, 154, 162, 163, 165, 172, 173, 174, 235], "value_target_kei": [153, 163, 165, 172, 173, 174, 235], "value_target": [153, 163, 165, 172, 173, 174, 235], "entropy_bonu": [153, 154, 162, 163, 235], "samples_mc_entropi": [153, 154, 162, 163], "entropy_coef": [153, 154, 162, 163, 235], "critic_coef": [153, 154, 162, 163, 235], "loss_critic_typ": [153, 154, 162, 163, 165, 235], "smooth_l1": [153, 154, 155, 156, 162, 163, 164, 165, 166, 168, 235], "reli": [153, 233, 235, 238, 241], "1602": 153, "01783v2": 153, "advantage_diff_kei": 153, "advantage_diff": 153, "value_error": [153, 172, 173, 174], "loss_function_typ": 153, "l1": [153, 154, 155, 156, 162, 163, 164, 168, 234], "l2": [153, 154, 155, 156, 159, 160, 162, 163, 164, 168], "tha": 153, "throughout": [153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 235, 241], "essenti": [153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 238], "clip_epsilon": [154, 235], "normalize_advantag": [154, 162, 163], "threshold": [154, 235], "favour": [154, 162, 163], "mont": [154, 162, 163], "carlo": [154, 162, 163], "multipli": [154, 162, 163, 164, 166, 233], "loss_funct": [154, 155, 156, 163, 164, 166, 168], "actor_network": [155, 164, 165, 166], "value_network": [155, 156, 157, 166, 172, 173, 174, 235], "delay_actor": [155, 166], "delay_valu": [155, 156, 157, 165, 166], "input_tensordict": [155, 156, 157], "qvalueactor": [156, 227, 234], "distributionalqvalueactor": [157, 227], "unlik": [157, 163, 234, 242], "disctount": 157, "actor_model": 158, "value_model": [158, 160], "model_based_env": 158, "dreamerenv": [158, 227], "imagination_horizon": 158, "lmbda": [158, 172, 174, 175, 177, 178, 179, 180, 181, 233, 234, 235], "discount_loss": [158, 160], "unrol": 158, "lambda_kl": 159, "lambda_reco": 159, "lambda_reward": 159, "reco_loss": 159, "reward_loss": 159, "free_nat": 159, "delayed_clamp": 159, "global_averag": 159, "kl": [159, 162], "reconstruct": [159, 241], "nat": 159, "clamp": [159, 200, 238], "value_loss": [160, 233], "fake_data": 160, "loss_modul": [161, 167, 200, 220, 221, 231, 235], "dqnloss": [161, 167, 212, 227], "ddpgloss": [161, 167, 210, 221, 227, 242], "sacloss": [161, 167, 218, 227], "td3loss": [161, 167], "value_network_update_interv": 161, "contrast": 161, "06461": 161, "dtarg": 162, "decrement": 162, "samples_mc_kl": 162, "penalti": 162, "old_polici": 162, "new_polici": 162, "adapt": [162, 233, 238], "thu": 162, "distanc": [162, 168, 171, 172], "apart": 162, "proxim": [163, 206, 214, 235], "optimis": [163, 196, 235], "flavour": [163, 242], "constrain": 163, "clipppoloss": [163, 227, 235], "klpenppoloss": [163, 227], "regularis": 163, "06347": [163, 206, 214], "qvalue_network": [164, 166], "num_qvalue_net": [164, 166], "sub_sample_len": 164, "priotity_kei": [164, 166], "alpha_init": [164, 166], "min_alpha": [164, 166], "max_alpha": [164, 166], "fixed_alpha": [164, 166], "target_entropi": [164, 166], "delay_qvalu": [164, 166], "openreview": [164, 216], "ay8zfzm0tdd": [164, 216], "idea": [164, 231], "subsampl": [164, 191, 231], "connectionist": 165, "1992": 165, "doi": 165, "1007": 165, "bf00992696": 165, "1801": [166, 219], "01290": [166, 219], "applic": [166, 238], "1812": 166, "05905": 166, "qvalue_network_bi": 166, "prod": 166, "n_action": 166, "redqloss": [167, 227], "999": [167, 198, 234], "prev_param": 167, "new_param": 167, "v2": [168, 177, 178, 180, 181, 206, 209, 214, 216, 219], "strict_shap": 168, "view_a": 168, "next_val_kei": 171, "pred_next_v": 171, "usus": 171, "mse": [171, 234], "q_valu": 171, "target_valu": [171, 242], "n_steps_to_next": 171, "value_next_st": 171, "average_ga": [172, 235], "value_kei": [172, 173, 174], "1506": [172, 175, 176, 179], "02438": [172, 175, 176, 179], "exponenti": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 198], "propag": [172, 173, 174, 235], "throught": [172, 173, 174], "advang": 172, "gradient_mod": 172, "sign": 172, "unused_arg": 172, "target_param": [172, 173, 174], "relev": [172, 173, 174, 238], "98": [172, 173, 174, 234, 235, 238, 239], "94": [172, 174, 234, 235, 238], "unpack": [172, 173, 174], "average_reward": [173, 174], "next_state_valu": [175, 176, 177, 178, 179, 180, 181, 227], "old_stat": [175, 176, 177, 179, 180], "new_stat": [175, 176, 177, 178, 179, 180, 181], "rolling_gamma": [177, 178, 180, 181], "ti": [177, 178, 180, 181], "event": [177, 178, 180, 181], "g1": [177, 178, 180, 181], "g2": [177, 178, 180, 181], "g3": [177, 178, 180, 181], "g4": [177, 178, 180, 181], "v3": [177, 178, 180, 181], "v4": [177, 178, 180, 181, 233, 235, 239], "upcom": [177, 178, 180, 181, 233], "out_file_bas": 182, "skip_reset": 182, "dump": 182, "interv": [182, 183, 192, 202, 234, 238], "center_crop": 183, "make_grid": 183, "Will": 183, "grid": 183, "exp_nam": [184, 185, 186, 187, 188, 221, 233], "log_dir": [184, 185, 187, 190], "minim": 184, "dependeci": 184, "csv": [184, 190], "templat": 185, "tracking_uri": 186, "mlflow": [186, 190], "uri": 186, "datastor": 186, "tb_log": 187, "tensoarboard": 187, "tensorboard": [187, 190, 242], "wandb": [188, 190, 242], "experiment_nam": [189, 190], "uuid": [189, 241], "date": 189, "logger_typ": 190, "logger_nam": 190, "wandb_kwarg": 190, "mlflow_kwarg": 190, "sub_traj_len": 191, "min_sub_traj_len": 191, "full": [191, 233, 234, 235, 237, 238, 239, 241, 242], "20": [191, 234, 235, 238, 241, 242], "register_op": [191, 192, 193, 194, 195, 197, 198, 199, 202, 231], "process_optim_batch": [191, 197, 198, 231], "_process_optim_batch_hook": [191, 231], "clear_cuda": 192, "pre_optim_step": [192, 231], "counter": [193, 231], "log_pbar": [193, 194, 196, 198, 231], "progress": [193, 194, 196, 200, 231, 241], "bar": [193, 194, 196, 200, 231], "count_fram": 193, "pre_steps_log": [193, 194, 231], "lognam": 194, "r_train": 194, "log_reward": 194, "loss_compon": 195, "appl": 195, "omit": [195, 233, 235, 238], "loss_": 195, "optimizer_hook": 195, "loss_actor": [195, 242], "record_interv": [196, 233], "record_fram": [196, 203, 233], "policy_explor": [196, 221, 233], "log_kei": 196, "suffix": 196, "underestim": 196, "suppos": [196, 231, 241], "set_exploration_mod": [196, 227, 233, 234, 235, 242], "reward_evalu": 196, "tensordictreplaybuff": [197, 221, 227, 233, 234], "flatten_tensordict": 197, "max_dim": 197, "rb_trainer": 197, "batch_process": [197, 198, 199, 231], "post_loss": [197, 231], "reward_norm": 198, "update_reward_stat": 198, "normalize_reward": 198, "make_train": [199, 227], "_process_batch_hook": [199, 231], "versatil": 200, "lossmodul": [200, 220, 221], "optim_steps_per_batch": [200, 231], "epoch": [200, 235], "clip_grad_norm": 200, "partial": 200, "deriv": 200, "clip_norm": 200, "progress_bar": 200, "tqdm": [200, 233, 234, 235, 238], "save_trainer_interv": 200, "disk": [200, 231, 234], "10000": [200, 234, 235], "save_trainer_fil": [200, 231], "_datacollector": [202, 207, 208, 221], "update_weights_interv": 202, "sit": [202, 234], "sync": [202, 221, 231, 233, 242], "update_weight": 202, "post_step": [202, 231], "cfg": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225], "dictconfig": [203, 204, 206, 207, 208, 209, 211, 214, 216, 217, 219, 220, 221, 222, 225], "divid": [203, 233], "unknowingli": 203, "annealing_fram": [203, 233], "init_env_step": [203, 204, 233], "proof_environ": [204, 206, 209, 211, 214, 216, 219, 233], "sta": 204, "ot": 204, "a2closs": [205, 227], "in_keys_actor": [206, 214], "observation_kei": [206, 214, 216, 219], "actorvalueoper": [206, 214, 227], "dummi": [206, 209, 211, 214, 216, 219, 233, 241], "actorcriticoper": [206, 214, 227], "parser_env_arg": [206, 214, 216], "make_ppo_model": [206, 227], "parser_model_args_continu": [206, 214, 216, 219], "cattensor": [206, 209, 214, 216, 219, 233, 234, 237, 238, 241], "hydra": [206, 209, 211, 214, 216, 219], "config_stor": [206, 209, 211, 214, 216, 219], "configstor": [206, 209, 211, 214, 216, 219], "dataclass": [206, 209, 211, 214, 216, 219], "halfcheetah": [206, 209, 214, 216, 219, 233], "config_field": [206, 209, 211, 214, 216, 219], "config_cl": [206, 209, 211, 214, 216, 219], "ppomodelconfig": [206, 214], "envconfig": [206, 209, 211, 214, 216, 219], "make_dataclass": [206, 209, 211, 214, 216, 219], "cls_name": [206, 209, 211, 214, 216, 219], "config_path": [206, 209, 211, 214, 216, 219], "config_nam": [206, 209, 211, 214, 216, 219], "actor_valu": [206, 214], "17": [206, 209, 214, 216, 219, 234, 235, 238], "actor_model_explor": [207, 208, 233], "make_env_kwarg": [207, 208], "actor_net_kwarg": [209, 216, 219], "value_net_kwarg": [209, 219], "modulelist": [209, 216, 219, 242], "ddpgcnnactor": [209, 227], "ddpgmlpactor": [209, 227], "ddpgcnnqnet": [209, 227], "ddpgmlpqnet": [209, 227], "ddpgmodelconfig": 209, "targetnetupdat": [210, 212, 215, 218, 220, 221], "discretemodelconfig": 211, "pong": [211, 241], "v5": [211, 241], "pixels_onli": [211, 233, 234, 241, 242], "210": [211, 238, 241], "160": [211, 234, 238, 241], "ppoloss": [213, 227], "redqloss_deprec": 215, "qvalue_net_kwarg": [216, 219], "qvalu": [216, 219, 234], "redqmodelconfig": 216, "replayargsconfig": 217, "sacmodelconfig": 219, "target_net_updat": 221, "constitu": 221, "learnt": [221, 234, 235], "tempfil": 221, "tensorboardlogg": [221, 227], "egreedywrapp": [221, 227, 234], "env_proof": 221, "obs_spec": 221, "net_valu": 221, "dir": [221, 231], "gettempdir": 221, "argpars": [222, 225], "namespac": [222, 225], "parser": [222, 225], "transformed_env_constructor": [222, 227], "env_kwarg": [223, 224, 233], "num_env_per_collector": [223, 224], "num_collector": [223, 224, 234], "video_tag": 225, "norm_obs_onli": 225, "use_env_cr": 225, "custom_env_mak": 225, "custom_env": 225, "return_transformed_env": 225, "action_dim_gsd": 225, "state_dim_gsd": 225, "batch_dim": 225, "obs_norm_state_dict": 225, "wheter": 225, "maker": 225, "overrid": 225, "randompolici": 227, "asyncdatacollector": 227, "tensordictprioritizedreplaybuff": [227, 242], "prioritizedsampl": [227, 233], "sotr": 227, "binarydiscretetensorspec": 227, "unboundeddiscretetensorspec": [227, 235, 241], "multistep": [227, 233, 234], "tensordictrecord": 227, "videorecord": [227, 235], "step_mdp": [227, 233, 234, 238, 241, 242], "get_available_librari": 227, "braxenv": 227, "braxwrapp": 227, "dmcontrolenv": [227, 233, 237, 241], "dmcontrolwrapp": 227, "jumanjienv": 227, "jumanjiwrapp": 227, "vmasenv": 227, "vmaswrapp": 227, "actorcriticwrapp": 227, "additivegaussianwrapp": 227, "ornsteinuhlenbeckprocesswrapp": [227, 233], "is_tensordict_compat": 227, "ensure_tensordict_compat": 227, "qvaluehook": 227, "distributionalqvaluehook": 227, "duelingcnndqnet": [227, 234], "distributionaldqnnet": 227, "lstmnet": 227, "dreameractor": 227, "obsencod": 227, "obsdecod": 227, "rssmprior": 227, "rssmposterior": 227, "reset_nois": 227, "cemplann": 227, "mpcplannerbas": 227, "mppiplann": 227, "independentnorm": 227, "truncatednorm": 227, "tanhdelta": [227, 233], "onehotcategor": 227, "inv_softplu": 227, "distributionaldqnloss": [227, 234], "reinforceloss": 227, "dreameractorloss": 227, "dreamermodelloss": 227, "dreamervalueloss": 227, "gae": [227, 235], "tdestim": 227, "generalized_advantage_estim": 227, "vec_generalized_advantage_estim": 227, "vec_td_lambda_return_estim": 227, "vec_td_lambda_advantage_estim": [227, 233, 234], "td_lambda_return_estim": 227, "td_lambda_advantage_estim": 227, "td_advantage_estim": 227, "distance_loss": 227, "hold_out_net": [227, 233], "hold_out_param": 227, "softupd": [227, 233], "hardupd": [227, 233], "batchsubsampl": [227, 231], "clearcudacach": 227, "countframeslog": 227, "logreward": [227, 231], "optimizerhook": 227, "replaybuffertrain": [227, 231], "rewardnorm": 227, "selectkei": [227, 231], "trainerhookbas": [227, 231], "updateweight": [227, 231], "make_a2c_loss": 227, "make_a2c_model": 227, "make_collector_offpolici": 227, "make_collector_onpolici": 227, "make_ddpg_actor": [227, 233], "make_ddpg_loss": 227, "make_dqn_actor": 227, "make_dqn_loss": 227, "make_ppo_loss": 227, "make_redq_loss": 227, "make_redq_model": 227, "make_replay_buff": [227, 233], "make_sac_loss": 227, "make_sac_model": 227, "make_target_updat": 227, "parallel_env_constructor": [227, 233], "sync_async_collector": 227, "sync_sync_collector": 227, "correct_for_frame_skip": 227, "get_stats_random_rollout": 227, "csvlogger": 227, "mlflowlogg": 227, "wandblogg": 227, "get_logg": 227, "generate_exp_nam": 227, "journei": 228, "guid": [228, 233, 234], "textbook": 228, "highlight": 228, "readi": [228, 235, 237], "ever": 228, "bump": 228, "think": [228, 235, 241], "benefit": 228, "pr": 228, "outer": [231, 233, 234, 241], "believ": 231, "scheme": [231, 241], "substenti": 231, "_pre_steps_log_hook": 231, "_pre_optim_hook": 231, "sub_batch": 231, "_post_loss_hook": 231, "_post_optim_hook": 231, "post_optim": 231, "_post_optim_log": 231, "post_optim_log": 231, "_post_steps_hook": 231, "_post_steps_log_hook": 231, "post_steps_log": 231, "comment": [231, 234, 242], "categori": 231, "extens": 231, "reserv": 231, "three": [231, 235, 238], "logginghook": 231, "logging_hook": 231, "save_dict": 231, "some_valu": 231, "els": [231, 233, 234, 235, 238, 239], "torchsnapshot": 231, "ckpt_backend": 231, "pt": [231, 239], "filepath": 231, "select_kei": 231, "save_train": 231, "load_from_fil": 231, "perfectli": [231, 233, 238], "intern": 232, "click": [233, 234, 235, 237, 238, 239, 241, 242], "author": [233, 234, 235, 238], "vincent": [233, 234, 235, 238], "moen": [233, 234, 235, 238], "tutori": [233, 234, 236, 237, 238, 239, 240, 241], "topic": 233, "asid": 233, "strongli": 233, "familiar": [233, 234, 241], "transpar": [233, 234], "understood": [233, 234], "sota": [233, 234, 242], "illustr": [233, 234], "deepcopi": 233, "matplotlib": [233, 234, 235, 238, 241], "pyplot": [233, 234, 235, 238, 241], "plt": [233, 234, 235, 238, 241], "environmet": 233, "remaind": 233, "focu": [233, 235], "funciton": 233, "env_librari": 233, "env_task": 233, "env_arg": 233, "elif": [233, 234], "notimplementederror": 233, "friendli": 233, "special": [233, 241], "torchr": 233, "rescal": 233, "presum": 233, "leav": [233, 238], "make_transformed_env": 233, "reward_sc": 233, "double_to_float_list": 233, "double_to_float_inv_list": 233, "dmcontrol": 233, "get_env_stat": 233, "proof_env": 233, "transform_state_dict": 233, "significantli": [233, 234], "leverag": [233, 241], "env_per_collector": 233, "make_t_env": 233, "copy_": 233, "parallel_env": [233, 241, 242], "maxim": [233, 238], "recal": [233, 234, 235], "materi": 233, "small": [233, 235, 241], "env_spec": 233, "actor_net": [233, 235], "num_lay": 233, "actor_modul": [233, 242], "q_net": 233, "qnet": 233, "frequenc": 233, "make_record": 233, "recorder_obj": 233, "flavor": 233, "circular": 233, "pick": [233, 234], "arrai": 233, "buffer_s": [233, 234], "prb": 233, "buffer_scratch_dir": 233, "adjust": [233, 238], "magnitud": 233, "1000000": 233, "device_count": [233, 234, 239, 241], "500k": 233, "meaning": 233, "5000": [233, 234, 235], "myopic": [233, 234], "n_steps_forward": 233, "lr": [233, 234, 235, 238], "5e": 233, "weight_decai": 233, "utd": 233, "update_to_data": 233, "tau": [233, 234], "005": [233, 234, 238], "tmp": [233, 234, 239], "semin": 233, "qnet_target": 233, "tight": 233, "natur": 233, "async": [233, 242], "seamlessli": [233, 238], "3018685293": 233, "adam": [233, 234, 235, 238], "optimizer_actor": 233, "optimizer_qnet": 233, "total_collection_step": 233, "scheduler1": 233, "lr_schedul": [233, 235, 238], "cosineannealinglr": [233, 235, 238], "t_max": 233, "scheduler2": 233, "temporarili": 233, "explain": [233, 239], "Then": [233, 235, 237], "fed": 233, "hood": 233, "metadata": [233, 235, 241], "coupl": [233, 238], "earli": [233, 242], "rewards_ev": 233, "norm_factor_train": 233, "collected_fram": 233, "pbar": [233, 234, 235, 238], "r0": 233, "numel": [233, 234, 235, 239], "current_fram": [233, 234], "sampled_tensordict": 233, "backprop": 233, "next_valu": [233, 234, 238], "value_est": 233, "pow": [233, 234], "sampled_tensordict_actor": 233, "actor_loss": 233, "p_in": 233, "p_dest": 233, "zip": [233, 236], "b_in": 233, "b_dest": 233, "td_record": 233, "r_evalu": 233, "set_descript": [233, 234, 235, 238], "4f": [233, 234, 235, 238], "traceback": 233, "__w": 233, "doc": [233, 234], "coding_ddpg": [233, 234, 240], "786": 233, "1424": [233, 238], "1501": [233, 238], "_call_impl": 233, "forward_cal": 233, "180": [233, 238], "post_termin": 233, "_get_termin": 233, "got": 233, "plot": [233, 234, 235, 238], "mention": [233, 234, 241], "figur": [233, 234, 235, 238, 241], "label": [233, 234], "legend": [233, 234], "xlabel": [233, 234, 238], "ylabel": [233, 234], "tight_layout": 233, "250": [233, 238], "100000": [233, 234], "batch_size_traj": 233, "simplic": [233, 234, 235, 239], "td_lambda": 233, "roughli": [233, 242], "four": [233, 238], "big": [233, 234, 235, 241], "incompat": 233, "rand_idx": 233, "titl": [233, 234, 235, 238], "labmda": 233, "minut": [233, 234, 235, 237, 238, 239, 241, 242], "632": [233, 240], "3972": 233, "mb": [233, 234, 235, 237, 238, 239, 240, 241, 242], "jupyt": [233, 234, 235, 236, 237, 238, 239, 241, 242], "ipynb": [233, 234, 235, 237, 238, 239, 241, 242], "galleri": [233, 234, 235, 236, 237, 238, 239, 241, 242], "sphinx": [233, 234, 235, 236, 237, 238, 239, 241, 242], "cartpol": [234, 241], "tabl": 234, "highest": 234, "lookup": 234, "amort": [234, 235], "seen": 234, "conjunct": 234, "cart": 234, "pole": 234, "un": 234, "actuat": 234, "frictionless": 234, "upright": [234, 241], "balanc": [234, 241], "flesh": 234, "grayscal": [234, 241], "did": [234, 235, 241], "get_funct": 234, "is_notebook": 234, "shell": 234, "get_ipython": 234, "__class__": 234, "zmqinteractiveshel": 234, "qtconsol": 234, "terminalinteractiveshel": 234, "ipython": [234, 238], "nameerror": 234, "interpret": 234, "hopefulli": 234, "sensit": 234, "variat": 234, "2e": [234, 238], "aka": 234, "upd": 234, "n_optim": 234, "smooth": 234, "harder": [234, 242], "500000": 234, "256": [234, 235, 238], "eps_greedy_v": 234, "eps_greedy_val_env": 234, "predefin": [234, 235], "mandatori": [234, 235, 238], "init_bia": 234, "observation_norm_state_dict": 234, "five": 234, "64x64": 234, "channel": 234, "motion": [234, 238], "simpler": 234, "test_env": 234, "9921": 234, "0785": 234, "0786": 234, "0787": [234, 238], "trick": 234, "mathbb": 234, "rightarrow": 234, "concept": 234, "pessimist": [234, 235], "power": 234, "ubiquit": 234, "trainabl": [234, 239], "augment": 234, "make_model": 234, "dummy_env": 234, "output_s": 234, "unflatten_kei": 234, "fairli": 234, "params_target": 234, "actor_explor": 234, "flat": 234, "unflatten": 234, "params_flat": 234, "flatten_kei": 234, "role": [234, 241], "coding_ppo": [234, 235, 240], "themselv": 234, "data_collector": 234, "q_": 234, "v_": 234, "defaultdict": [234, 235, 238], "logs_exp1": 234, "prev_traj_count": 234, "traj_length": 234, "enough": 234, "sampled_data": 234, "sampled_data_out": 234, "tdstep": 234, "exp_valu": 234, "mse_loss": 234, "gv": 234, "clip_grad_norm_": [234, 235, 238], "p_target": 234, "p_orig": 234, "grad_val": 234, "traj_count": 234, "eval_rollout": [234, 235], "traj_lengths_ev": 234, "mavg": 234, "05": [234, 235, 238, 239, 240], "traj_count_ev": 234, "00": [234, 235, 238, 239, 240], "02": [234, 235, 238, 239], "92it": [234, 238], "memmapstorag": [234, 239], "tmpy22l9edm": 234, "0762939453125": 234, "tmpva48t1db": 234, "03814697265625": 234, "tmpmiz5c2aw": 234, "019073486328125": 234, "tmpznr1htec": 234, "00476837158203125": 234, "tmpal25eqpc": 234, "tmpopse50if": 234, "312": [234, 238], "tmpp05nfyab": 234, "tmpstt6p_7r": 234, "tmpw3066dgz": 234, "tmpl0n6e0vb": 234, "09": [234, 235, 238], "70": [234, 235, 238, 239], "85it": [234, 235, 238], "96": [234, 235, 238, 239], "00it": [234, 235, 238], "49": [234, 235, 238], "49it": 234, "45": [234, 235, 238, 239], "28it": 234, "192": [234, 238], "04": [234, 235, 238, 239, 240], "27it": 234, "224": [234, 235, 238], "43": [234, 235, 238, 239], "15it": [234, 238], "40": [234, 235, 238], "47": [234, 235, 238], "31it": [234, 235], "288": [234, 235, 238], "81it": [234, 235, 238], "320": [234, 238, 241], "37": [234, 235, 238], "48": [234, 235, 238, 239], "12it": [234, 238], "352": [234, 238], "07": [234, 235, 238], "67it": 234, "6571": 234, "6871": [234, 238], "384": [234, 238], "42it": 234, "416": [234, 238], "64it": [234, 238], "448": [234, 238], "22it": [234, 235], "480": [234, 238, 239], "95it": [234, 238], "29": [234, 235, 238], "544": [234, 238], "50it": [234, 235, 238], "576": [234, 238], "28": [234, 235, 238, 239], "76it": [234, 238], "608": [234, 238], "640": 234, "31": [234, 235, 238, 239], "72it": [234, 238], "672": 234, "23it": 234, "2759": [234, 238], "5501": 234, "704": 234, "58it": [234, 235, 238], "736": 234, "10it": [234, 235, 238], "768": 234, "90it": 234, "800": 234, "03it": [234, 238], "832": 234, "864": [234, 238], "22": [234, 235, 238, 239], "40it": [234, 235], "896": 234, "21": [234, 235, 237, 238], "53it": 234, "19": [234, 235, 238, 239, 240], "928": [234, 238], "29it": 234, "960": 234, "992": 234, "51": [234, 235, 238, 239], "0454": 234, "3727": 234, "1024": 234, "86it": [234, 238], "1056": [234, 238], "87it": [234, 235, 238], "1088": [234, 238], "01it": [234, 235], "1120": 234, "23": [234, 235, 238], "06it": [234, 235, 238], "1152": 234, "1184": [234, 238], "43it": [234, 235], "1216": 234, "25": [234, 235, 238], "26it": 234, "1248": 234, "33it": [234, 238], "26": [234, 235, 238, 239], "1280": 234, "83it": [234, 238], "09it": [234, 235, 238], "0416": 234, "4759": 234, "1344": 234, "24it": 234, "1376": 234, "08it": [234, 235, 238], "1408": 234, "25it": [234, 235], "1440": 234, "1472": 234, "1504": 234, "13it": [234, 235, 238], "1536": [234, 238], "1568": 234, "02it": [234, 238], "1600": 234, "1632": 234, "48it": [234, 235, 238], "1035": 234, "4505": 234, "1664": [234, 235], "19it": [234, 235], "1696": 234, "30it": 234, "1728": 234, "70it": [234, 235, 238], "1760": 234, "36": [234, 235, 238], "1792": 234, "80it": 234, "1824": 234, "21it": 234, "1856": [234, 238], "1888": 234, "39": [234, 235, 238, 239, 240, 242], "20it": 234, "1920": 234, "34it": 234, "1952": 234, "2307": 234, "4638": 234, "41": [234, 235, 238], "1984": 234, "2016": 234, "2048": [234, 238, 239], "59": [234, 235, 238, 239], "2080": [234, 235], "45it": [234, 235], "2112": [234, 238], "57": [234, 235, 238, 239], "2144": 234, "58": [234, 235, 238, 239], "2176": 234, "2208": 234, "56": [234, 235, 238], "2240": [234, 238], "54": [234, 235, 238], "2272": [234, 238], "1459": 234, "4156": 234, "2304": 234, "55": [234, 238], "63it": 234, "2336": 234, "53": [234, 235, 238, 239], "73it": [234, 238], "2368": 234, "52": [234, 235, 238, 239, 240], "74it": [234, 238], "2400": 234, "2432": 234, "17it": [234, 238], "2464": [234, 235], "2496": 234, "2528": 234, "35it": [234, 235], "2560": 234, "2592": 234, "1119": 234, "2624": 234, "2656": [234, 235], "2688": 234, "61it": [234, 238], "2720": 234, "2752": 234, "2784": 234, "2816": 234, "2848": 234, "56it": [234, 238], "2880": 234, "2912": 234, "1205": [234, 238], "4264": 234, "2944": [234, 238], "60": [234, 235, 238, 239, 240, 241, 242], "2976": 234, "3008": [234, 238], "61": [234, 238, 239], "3040": 234, "3072": 234, "62": [234, 235, 238, 239], "3104": 234, "36it": [234, 235], "63": [234, 235, 238], "3136": 234, "60it": [234, 235, 238], "3168": 234, "55it": [234, 238], "3200": 234, "05it": [234, 235, 238], "65": [234, 238, 239], "3232": 234, "1017": 234, "3805": 234, "8000": [234, 235], "3264": 234, "66": [234, 235, 238, 239], "3296": [234, 238], "67": [234, 237, 238, 239], "3328": 234, "3360": 234, "71it": [234, 235, 238], "68": [234, 235, 238, 239], "3392": 234, "3424": 234, "69": [234, 238, 239], "3456": [234, 238], "3488": 234, "18it": 234, "3520": 234, "71": [234, 235, 238, 239], "3552": 234, "3079": 234, "0755": 234, "9000": [234, 235], "72": [234, 235, 238, 239], "3584": 234, "41it": 234, "3616": 234, "62it": [234, 238], "73": [234, 235, 238], "3648": 234, "74": [234, 235, 238, 239], "3680": 234, "98it": [234, 238], "3712": [234, 238], "75": [234, 238, 239], "3744": 234, "76": [234, 235, 238, 239], "3776": 234, "78it": [234, 235, 238], "3808": 234, "77": [234, 238], "3840": 234, "3872": 234, "1358": 234, "2342": 234, "3000": [234, 235], "78": [234, 235, 238, 239], "3904": 234, "79": [234, 238, 239], "3936": 234, "3968": 234, "93it": [234, 238], "80": [234, 235, 238, 239], "4000": [234, 235], "4032": 234, "88it": [234, 235, 238], "4064": 234, "65it": 234, "82": [234, 235, 238, 239], "4096": 234, "04it": [234, 238], "83": [234, 238, 239], "4128": 234, "4160": 234, "84": [234, 235, 238], "4192": 234, "54it": 234, "1394": 234, "0270": 234, "4224": 234, "85": [234, 238, 239], "4256": [234, 238], "86": [234, 235, 238, 239], "4288": 234, "96it": [234, 235], "4320": 234, "39it": 234, "4352": 234, "88": [234, 235, 238, 239], "4384": 234, "4416": [234, 238], "07it": [234, 235, 238], "89": [234, 238], "4448": 234, "90": [234, 235, 238], "4480": 234, "4512": 234, "1816": 234, "3332": 234, "91": [234, 235, 238], "4544": 234, "92": [234, 235, 238, 239], "4576": 234, "4608": 234, "93": [234, 238, 239], "4640": 234, "4672": 234, "4704": 234, "4736": 234, "4768": 234, "4800": 234, "97": [234, 238, 239], "4832": 234, "1349": 234, "8269": 234, "4864": 234, "14it": [234, 238], "4896": 234, "4928": 234, "57it": [234, 238], "4960": 234, "4992": 234, "5024it": 234, "figsiz": [234, 235, 238], "subplot": [234, 235, 238, 241], "traj": 234, "savefig": 234, "albeit": [234, 238], "slowli": 234, "dqn_td0": 234, "png": 234, "capac": [234, 235], "logs_exp2": 234, "37it": 234, "_batch_siz": 234, "tmp11b_29n0": 234, "00238800048828125": 234, "313": [234, 238], "tmpbi5gh4s5": 234, "076416015625": 234, "tmphwxlt33u": 234, "0382080078125": 234, "tmpgmawk4pr": 234, "01910400390625": 234, "tmpkgmjfyqh": 234, "0047760009765625": 234, "tmpg0ccv8uu": 234, "001194000244140625": 234, "tmpkqan73n": 234, "tmp_mhsve5z": 234, "tmpriqwr_pn": 234, "tmpqy134pe": 234, "tmpvg2z8hv1": 234, "69it": 234, "77it": [234, 235, 238], "1891": 234, "9867": 234, "46it": [234, 238], "94it": [234, 238], "52it": [234, 238], "79it": [234, 238], "2054": [234, 238], "1081": 234, "68it": [234, 235], "4048": 234, "1148": 234, "84it": [234, 238], "4119": 234, "5043": 234, "5719": 234, "4698": 234, "6836": 234, "38it": 234, "32it": 234, "51it": 234, "5492": 234, "5762": 234, "3267": 234, "7000": [234, 235], "47it": [234, 235], "44it": [234, 235, 238], "3721": 234, "7485": 234, "8917": 234, "4016": [234, 238], "11it": [234, 238], "59it": [234, 238], "97it": [234, 235, 238], "2148": [234, 235], "3738": 234, "5410": 234, "6733": 234, "3089": 234, "4230": 234, "2876": 234, "3977": 234, "91it": [234, 238], "16it": [234, 235, 238], "2417": [234, 238], "4788": [234, 238], "89it": [234, 238], "82it": [234, 235, 238], "dqn_tdlambda": 234, "fewer": 234, "plot_both": 234, "frames_td0": 234, "frames_tdlambda": 234, "evals_td0": 234, "evals_tdlambda": 234, "mavgs_td0": 234, "mavgs_tdlambda": 234, "traj_count_td0": 234, "traj_count_tdlambda": 234, "td0": 234, "pixels_sav": 234, "imageio": 234, "mimwrit": 234, "mp4": 234, "fp": 234, "qvaluenetwork": 234, "nth": 234, "noticebli": 234, "collectorclass": 234, "till": 234, "steps_to_next_ob": 234, "worst": 234, "accuraci": 234, "fanci": 234, "015": [234, 240], "1584": [234, 240], "coding_dqn": [234, 240], "demonstr": [235, 238, 241], "talk": 235, "repetit": 235, "six": 235, "consum": 235, "sophist": 235, "invent": 235, "wheel": 235, "brief": [235, 241], "overview": [235, 242], "theta_k": 235, "frac": 235, "pi_": 235, "ratio": 235, "exceed": 235, "discourag": [235, 238], "indispens": 235, "loader": 235, "analyz": 235, "lingua": 235, "franca": 235, "descript": 235, "normalparamextractor": 235, "samplerwithoutreplac": 235, "stepcount": [235, 242], "rest": [235, 242], "has_cuda": [235, 241], "3e": 235, "max_grad_norm": 235, "ourselv": [235, 241], "benefici": 235, "errat": 235, "hamper": 235, "reactiv": 235, "group": 235, "xy": 235, "budget": 235, "50_000": 235, "sub_batch_s": 235, "num_epoch": 235, "intro": 235, "entropy_ep": 235, "generalist": 235, "interchang": [235, 239], "panel": 235, "charact": 235, "inverteddoublependulum": 235, "transmit": 235, "stai": 235, "thumb": 235, "supplementari": [235, 241], "told": 235, "stringent": 235, "nevertheless": 235, "concret": 235, "everyth": 235, "continuousbox": [235, 238, 241, 242], "environemnt": 235, "confid": 235, "succeed": [235, 238], "pack": [235, 241], "ran": 235, "mutli": 235, "boundari": 235, "f_": 235, "text": 235, "mu_": 235, "difficulti": [235, 241], "brought": 235, "scrictli": 235, "d_ob": 235, "d_action": 235, "extract": 235, "carrier": 235, "policy_modul": 235, "That": 235, "said": 235, "value_modul": [235, 242], "briefli": 235, "simplest": [235, 241], "oblivi": 235, "refil": 235, "conveni": [235, 238], "easiest": 235, "hide": 235, "awai": 235, "mathemat": 235, "deal": 235, "tradeoff": 235, "eval_str": 235, "tensordict_data": 235, "data_view": 235, "subdata": 235, "loss_val": 235, "loss_valu": [235, 242], "loss_object": 235, "loss_crit": 235, "loss_entropi": 235, "cum_reward_str": 235, "stepcount_str": 235, "param_group": 235, "lr_str": 235, "nice": 235, "noth": 235, "50000": 235, "tensorstorag": 235, "1638": [235, 238], "0903": 235, "0003": [235, 238], "225": [235, 238], "1269": [235, 238], "226": [235, 238], "1682": 235, "2041": 235, "6000": 235, "227": [235, 238], "2165": 235, "1107": 235, "1767": 235, "1151": 235, "1290": 235, "11000": 235, "7866": 235, "1545": 235, "12000": 235, "1443": 235, "13000": 235, "1842": 235, "14000": 235, "1431": 235, "15000": 235, "1675": 235, "0002": [235, 238], "16000": 235, "1718": 235, "17000": 235, "1715": [235, 238], "18000": 235, "1734": 235, "19000": 235, "228": [235, 238], "1817": 235, "20000": 235, "229": [235, 238], "2068": 235, "21000": 235, "147": [235, 238], "9485": 235, "22000": 235, "2181": 235, "23000": 235, "24000": 235, "230": [235, 238], "2311": 235, "25000": 235, "2300": 235, "26000": 235, "2130": 235, "27000": 235, "99it": [235, 238], "28000": 235, "2184": 235, "29000": 235, "2266": 235, "30000": 235, "2488": 235, "31000": 235, "231": [235, 238], "185": [235, 238], "4459": [235, 238], "2369": 235, "32000": 235, "2391": [235, 238], "33000": 235, "2527": 235, "34000": 235, "2451": 235, "35000": 235, "2589": 235, "36000": 235, "2557": 235, "37000": 235, "2615": 235, "38000": 235, "2619": 235, "39000": 235, "2660": 235, "40000": 235, "2735": 235, "41000": 235, "0661": [235, 238], "2544": 235, "42000": 235, "2709": 235, "43000": 235, "44000": 235, "2642": 235, "45000": 235, "2595": 235, "46000": 235, "2537": 235, "47000": 235, "2533": 235, "48000": 235, "49000": 235, "2584": 235, "232": [235, 238], "2629": 235, "cap": 235, "bit": 235, "157": [235, 238, 240], "tutorials_python": 236, "tutorials_jupyt": 236, "distinct": 237, "humanoid": [237, 241], "walk": [237, 241], "env1": 237, "env1_obs_kei": 237, "observation_stand": 237, "env2": 237, "env2_obs_kei": 237, "observation_walk": 237, "tdreset1": 237, "tdreset2": 237, "tdreset": 237, "backbon": [237, 242], "policy_common": 237, "policy_stand": 237, "policy_walk": 237, "seq": 237, "But": 237, "env1_mak": 237, "env2_mak": 237, "_single_task": 237, "td_rollout": 237, "shown": 237, "841": [237, 240], "multi_task": [237, 240], "ground": 238, "freeli": 238, "inspir": 238, "sep": 238, "touch": 238, "undertaken": 238, "broader": 238, "challeng": [238, 239], "wider": 238, "algebra": 238, "acquaint": 238, "surpris": 238, "avenu": 238, "unsqueezetransform": 238, "_apply_to_composit": 238, "default_x": 238, "pi": 238, "default_i": 238, "_set_se": 238, "torqu": 238, "upward": 238, "angular": 238, "convent": 238, "dot": 238, "_t": 238, "sin": 238, "theta_t": 238, "rad": 238, "sec": 238, "gravit": 238, "theta_": 238, "001": 238, "angl": 238, "deleg": 238, "rearrang": 238, "new_th": 238, "plu": 238, "new_thdot": 238, "thdot": 238, "g_forc": 238, "max_torqu": 238, "angle_norm": 238, "max_spe": 238, "zeros_lik": 238, "is_empti": 238, "gen_param": 238, "high_th": 238, "high_thdot": 238, "low_th": 238, "low_thdot": 238, "rng": 238, "lazili": 238, "observationspec": 238, "trail": 238, "pollut": 238, "characterist": 238, "irrelev": 238, "_make_spec": 238, "td_param": 238, "make_composite_from_td": 238, "commong": 238, "pseudo": 238, "pendulumenv": 238, "homonym": 238, "render_mod": 238, "human": 238, "rgb_arrai": 238, "render_fp": 238, "random_": 238, "_make_step": 238, "staticmethod": 238, "hyperparam": 238, "complic": [238, 241], "showcas": 238, "skeleton": 238, "summar": 238, "_apply_transform": [238, 241], "_inv_apply_transform": [238, 241], "eventu": 238, "subset": [238, 239], "unitari": 238, "sine": 238, "cosin": 238, "sintransform": 238, "costransform": 238, "co": 238, "t_sin": 238, "t_co": 238, "cat_transform": 238, "mdp": 238, "convin": 238, "simplifi": 238, "simple_rollout": 238, "_data": 238, "unexplor": 238, "assumpt": 238, "recreat": 238, "20_000": 238, "init_td": 238, "traj_return": 238, "gn": 238, "last_reward": 238, "is_ipython": 238, "inlin": 238, "get_backend": 238, "ion": 238, "gcf": 238, "clear_output": 238, "625": 238, "0488": 238, "0748": 238, "519": 238, "0499": 238, "4472": 238, "073": 238, "0685": 238, "0408": 238, "552": 238, "5154": 238, "9086": 238, "527": [238, 239, 240], "2006": 238, "9386": 238, "145": 238, "2568": 238, "4982": 238, "222": 238, "8929": 238, "4492": 238, "583": 238, "3233": 238, "0663": 238, "589": 238, "1021": 238, "5244": 238, "9898": 238, "5877": 238, "8718": 238, "8325": 238, "0967": 238, "8062": 238, "242": 238, "2179": 238, "7262": 238, "7461": 238, "7757": 238, "8752": 238, "9663": 238, "2083": 238, "957": 238, "0258": 238, "0127": 238, "828": 238, "8078": 238, "4425": 238, "8061": 238, "2540": 238, "727": 238, "1843": 238, "6994": 238, "998": 238, "9611": 238, "5092": 238, "8093": 238, "2066": 238, "805": 238, "6929": 238, "7304": 238, "2194": 238, "2174": 238, "0835": 238, "7118": 238, "4855": 238, "4333": 238, "9062": 238, "087": 238, "5799": 238, "741": 238, "7915": 238, "9463": 238, "759": 238, "9582": 238, "0337": 238, "489": 238, "8955": 238, "5038": 238, "0326": 238, "6445": 238, "374": 238, "0052": 238, "3540": 238, "0470": 238, "4090": 238, "994": 238, "8757": 238, "4155": 238, "122": [238, 241], "0452": 238, "2663": 238, "9280": 238, "5935": 238, "0762": 238, "0957": 238, "317": 238, "5703": 238, "1460": 238, "663": 238, "6983": 238, "4603": 238, "375": 238, "3683": 238, "5978": 238, "109": 238, "2693": 238, "4812": 238, "6507": 238, "9621": 238, "767": 238, "5153": 238, "6395": 238, "176": 238, "4850": 238, "9067": 238, "571e": 238, "4747": 238, "4563": 238, "275": 238, "7113": 238, "8232": 238, "171": 238, "9608": 238, "0772": 238, "0709": 238, "8030": 238, "665": 238, "0262": 238, "9172": 238, "3522": 238, "9503": 238, "9829": 238, "174": 238, "7036": 238, "1462": 238, "3925": 238, "3889": 238, "1742": 238, "6703": 238, "1492": 238, "1557": 238, "4720": 238, "3170": 238, "3798": 238, "3453": 238, "6175": 238, "2050": 238, "777": 238, "4789": 238, "8256": 238, "364": 238, "0634": 238, "2166": 238, "931": 238, "3988": 238, "0044": 238, "3254": 238, "5686": 238, "394": 238, "2523": [238, 241], "5367": 238, "038": 238, "0764": 238, "6441": 238, "5747": 238, "4201": 238, "7650": 238, "4303": 238, "7035": 238, "842": 238, "4116": 238, "4044": 238, "623": 238, "6541": 238, "5596": 238, "3448": 238, "7735": 238, "0838": 238, "7139": 238, "1610": 238, "5759": 238, "933": 238, "1423": 238, "9190": 238, "351": 238, "75it": 238, "0906": 238, "8776": 238, "783": 238, "9555": 238, "5224": 238, "9766": 238, "0122": 238, "393": 238, "1190": 238, "278": 238, "8677": 238, "9878": 238, "9294": 238, "6069": 238, "2009": 238, "1751": 238, "555": 238, "1330": 238, "6126": 238, "942": 238, "6400": [238, 242], "8617": 238, "3124": 238, "5036": 238, "3492": 238, "5409": 238, "521": 238, "8237": 238, "5137": 238, "8519": 238, "5314": 238, "4999": 238, "1321": 238, "2661": 238, "8210": 238, "508": 238, "3793": 238, "3374": 238, "8859": 238, "0285": 238, "744": 238, "3340": 238, "7947": 238, "5806": 238, "2405": 238, "6171": 238, "2366": 238, "4432": 238, "0527": 238, "0431": 238, "0395": 238, "936": 238, "5728": 238, "1125": 238, "3933": 238, "2283": 238, "8808": 238, "2662": 238, "438": 238, "9777": 238, "3444": 238, "5377": 238, "7484": 238, "2128": 238, "102": 238, "4547": 238, "5356": 238, "103": 238, "0827": 238, "9097": 238, "104": 238, "1859": 238, "0977": 238, "501": 238, "105": 238, "7160": 238, "106": 238, "6663": 238, "5075": 238, "107": 238, "4690": 238, "9839": 238, "108": 238, "4717": 238, "2891": 238, "8636": 238, "110": 238, "2197": 238, "8676": 238, "111": 238, "1220": 238, "1607": 238, "112": 238, "8340": 238, "113": 238, "8101": 238, "1062": 238, "5096": 238, "946": 238, "115": 238, "8809": 238, "8884": 238, "116": 238, "0014": 238, "7230": 238, "117": 238, "2583": 238, "9271": 238, "118": 238, "3791": 238, "119": 238, "9975": 238, "5866": 238, "120": 238, "1589": 238, "121": [238, 241], "5611": 238, "1095": 238, "8228": 238, "8577": 238, "123": 238, "1126": 238, "3663": 238, "064": 238, "124": 238, "0229": 238, "9863": 238, "125": 238, "9055": 238, "126": 238, "4348": 238, "9514": 238, "127": 238, "2353": 238, "3809": 238, "0468": 238, "0446": 238, "129": 238, "4223": 238, "0783": 238, "3697": 238, "7116": 238, "131": 238, "6497": 238, "3884": 238, "132": 238, "1549": 238, "9987": 238, "133": 238, "1302": 238, "2613": 238, "004": 238, "134": 238, "1430": 238, "1773": 238, "135": 238, "0728": 238, "2888": 238, "136": 238, "0441": 238, "4899": 238, "137": 238, "8390": 238, "4154": 238, "138": 238, "2511": 238, "6673": 238, "139": 238, "9866": 238, "4015": 238, "140": 238, "8708": 238, "7321": 238, "141": 238, "9232": 238, "142": 238, "0151": 238, "5138": 238, "143": 238, "1538": 238, "6799": 238, "144": 238, "0606": 238, "3185": 238, "1136": 238, "8182": 238, "823": 238, "146": 238, "4268": 238, "8068": 238, "4925": 238, "2620": 238, "148": 238, "4227": 238, "8827": 238, "149": 238, "2689": 238, "9802": 238, "150": 238, "1815": 238, "8938": 238, "151": 238, "9671": 238, "3338": 238, "152": 238, "3598": 238, "5634": 238, "153": 238, "6261": 238, "7164": 238, "154": 238, "4859": 238, "6216": 238, "155": 238, "2037": 238, "1662": 238, "156": 238, "8980": 238, "285": 238, "7543": 238, "6701": 238, "158": 238, "7955": 238, "6318": 238, "159": 238, "1296": 238, "5656": 238, "9635": 238, "1976": 238, "161": 238, "9763": 238, "4486": 238, "162": 238, "0559": 238, "8767": 238, "163": [238, 239], "3259": 238, "9269": 238, "164": 238, "0034": 238, "0221": 238, "165": 238, "1361": 238, "0359": 238, "166": 238, "9381": 238, "6379": 238, "167": 238, "6932": 238, "168": 238, "9039": 238, "5081": 238, "169": 238, "9261": 238, "2532": 238, "170": 238, "0648": 238, "0427": 238, "2257": 238, "5870": 238, "172": 238, "1432": 238, "6341": 238, "173": 238, "9795": 238, "7483": 238, "7715": 238, "1491": 238, "175": 238, "0109": 238, "9641": 238, "959": 238, "8026": 238, "4795": 238, "177": 238, "6555": 238, "8104": 238, "178": 238, "7117": 238, "7429": 238, "179": 238, "7268": 238, "6273": 238, "9527": 238, "181": 238, "8814": 238, "182": 238, "0352": 238, "2748": 238, "183": 238, "3892": 238, "2521": 238, "184": 238, "3283": 238, "7224": 238, "2680": 238, "6670": 238, "186": 238, "9194": 238, "0433": 238, "187": 238, "7435": 238, "9644": 238, "188": 238, "6624": 238, "3579": 238, "444": 238, "189": 238, "6640": 238, "190": 238, "0084": 238, "0912": 238, "191": 238, "7261": 238, "7496": 238, "8658": 238, "193": 238, "9775": 238, "6801": 238, "194": 238, "195": 238, "3126": 238, "3415": 238, "196": 238, "7077": 238, "7883": 238, "197": 238, "0956": 238, "8094": 238, "198": 238, "9651": 238, "6747": 238, "199": 238, "7825": 238, "9442": 238, "0897": 238, "8159": 238, "871": 238, "201": 238, "9701": 238, "4418": 238, "202": 238, "8607": 238, "6710": 238, "203": 238, "8606": 238, "8493": 238, "345": 238, "204": 238, "8890": 238, "8663": 238, "205": 238, "1974": 238, "6908": 238, "206": 238, "3198": 238, "6145": 238, "207": 238, "0605": 238, "208": 238, "8499": 238, "5723": 238, "209": 238, "4914": 238, "7252": 238, "3179": 238, "2703": 238, "211": 238, "5423": 238, "8889": 238, "212": 238, "9634": 238, "3864": 238, "213": 238, "7308": 238, "5757": 238, "214": 238, "6914": 238, "6229": 238, "215": 238, "3974": 238, "8171": 238, "216": 238, "6824": 238, "9244": 238, "217": 238, "8755": 238, "1578": 238, "218": 238, "9689": 238, "2831": 238, "219": 238, "1064": 238, "0456": 238, "220": 238, "4405": 238, "1059": 238, "221": 238, "0823": 238, "6210": 238, "1268": 238, "0042": 238, "386": 238, "223": 238, "7941": 238, "9900": 238, "4357": 238, "7003": 238, "4908": 238, "3815": 238, "8097": 238, "2815": 238, "0432": 238, "7440": 238, "1490": 238, "1303": 238, "2092": 238, "6435": 238, "5436": 238, "1356": 238, "6182": 238, "4233": 238, "233": 238, "7169": 238, "2712": 238, "234": 238, "2727": 238, "4228": 238, "235": 238, "4538": 238, "4601": 238, "236": 238, "5388": 238, "9928": 238, "237": 238, "6006": 238, "7065": 238, "238": 238, "0161": 238, "0845": 238, "239": 238, "5093": 238, "8285": 238, "240": [238, 241, 242], "8338": 238, "5059": 238, "241": 238, "8543": 238, "0219": 238, "4368": 238, "0421": 238, "243": 238, "8687": 238, "0621": 238, "3220": 238, "6084": 238, "245": 238, "5520": 238, "8713": 238, "246": 238, "7191": 238, "247": 238, "4990": 238, "2904": 238, "248": 238, "4436": 238, "9947": 238, "249": 238, "3176": 238, "2223": 238, "6245": 238, "0668": 238, "251": 238, "1374": 238, "6062": 238, "252": 238, "8173": 238, "575": 238, "253": 238, "2360": 238, "9591": 238, "778": 238, "254": 238, "2296": 238, "3196": 238, "648": 238, "3992": 238, "5858": 238, "5306": 238, "7602": 238, "257": 238, "3148": 238, "9407": 238, "258": 238, "4969": 238, "0483": 238, "259": 238, "5871": 238, "9855": 238, "843": 238, "260": 238, "5374": 238, "1672": 238, "261": 238, "6953": 238, "8294": 238, "262": 238, "9961": 238, "263": 238, "0760": 238, "9218": 238, "264": 238, "5220": 238, "3707": 238, "265": 238, "4533": 238, "9902": 238, "266": 238, "3452": 238, "9945": 238, "267": 238, "1345": 238, "9587": 238, "268": 238, "5005": 238, "2492": 238, "269": 238, "3177": 238, "0159": 238, "069": 238, "270": 238, "3523": 238, "1329": 238, "586": 238, "271": 238, "5177": 238, "0848": 238, "272": 238, "3171": 238, "0391": 238, "273": 238, "6952": 238, "5605": 238, "274": 238, "8440": 238, "276": 238, "7257": 238, "2392": 238, "277": 238, "3724": 238, "4996": 238, "9537": 238, "9932": 238, "279": 238, "2056": 238, "280": 238, "0025": 238, "5817": 238, "281": 238, "8113": 238, "8401": 238, "282": 238, "6802": 238, "1165": 238, "283": 238, "9459": 238, "2713": 238, "284": 238, "1299": 238, "7790": 238, "8032": 238, "286": 238, "3529": 238, "4922": 238, "287": 238, "7998": 238, "0647": 238, "289": 238, "2202": 238, "3256": 238, "290": 238, "7688": 238, "7062": 238, "291": 238, "6013": 238, "0780": 238, "292": 238, "3772": 238, "3706": 238, "694": 238, "293": 238, "6219": 238, "2186": 238, "294": 238, "8050": 238, "295": 238, "8706": 238, "296": 238, "1351": 238, "6119": 238, "297": 238, "5235": 238, "6794": 238, "298": 238, "0105": 238, "0036": 238, "926": 238, "299": 238, "4877": 238, "2491": 238, "1058": 238, "0125": 238, "9166": 238, "301": 238, "4738": 238, "0693": 238, "977": 238, "302": 238, "8157": 238, "0234": 238, "693": 238, "303": 238, "2265": 238, "6642": 238, "304": 238, "1470": 238, "0490": 238, "305": 238, "6032": 238, "306": 238, "3159": 238, "1851": 238, "307": 238, "6655": 238, "0029": 238, "308": 238, "0539": 238, "309": 238, "8633": 238, "0063": 238, "363": 238, "310": 238, "1283": 238, "359": 238, "311": 238, "9965": 238, "0060": 238, "328": 238, "1115": 238, "406": 238, "4931": 238, "2550": 238, "314": 238, "3961": 238, "315": 238, "5998": 238, "9209": 238, "316": 238, "3596": 238, "4218": 238, "1245": 238, "318": 238, "3830": 238, "319": 238, "2154": 238, "5277": 238, "1644": 238, "321": 238, "8432": 238, "1038": 238, "701": 238, "322": 238, "3218": 238, "0206": 238, "093": 238, "323": 238, "8410": 238, "0061": 238, "7799": 238, "324": 238, "0349": 238, "9104": 238, "325": 238, "0157": 238, "975": 238, "326": 238, "5371": 238, "0364": 238, "401": 238, "327": 238, "3955": 238, "0072": 238, "598": 238, "3613": 238, "044": 238, "329": 238, "5881": 238, "1998": 238, "330": 238, "0930": 238, "0800": 238, "897": 238, "331": 238, "0266": 238, "2556": 238, "582": 238, "332": 238, "4752": 238, "0784": 238, "607": 238, "333": 238, "3595": 238, "2306": 238, "8049": 238, "334": 238, "2499": 238, "0031": 238, "9264": 238, "335": 238, "0296": 238, "336": 238, "2357": 238, "9049": 238, "337": 238, "0140": 238, "1273": 238, "429": 238, "338": 238, "1895": 238, "6780": 238, "339": 238, "2742": 238, "0009": 238, "082": 238, "340": 238, "1309": 238, "0141": 238, "679": 238, "341": 238, "4952": 238, "0325": 238, "342": 238, "0224": 238, "371": 238, "343": 238, "3927": 238, "2765": 238, "344": 238, "5389": 238, "3759": 238, "9915": 238, "0436": 238, "098": 238, "346": 238, "8202": 238, "347": 238, "0893": 238, "6934": 238, "348": 238, "9108": 238, "349": 238, "0725": 238, "873": 238, "350": 238, "3141": 238, "9006": 238, "0256": 238, "6093": 238, "0158": 238, "353": 238, "4824": 238, "1503": 238, "071": 238, "354": 238, "2968": 238, "096": 238, "355": 238, "2609": 238, "0505": 238, "356": 238, "2076": 238, "4968": 238, "357": 238, "8364": 238, "5498": 238, "358": 238, "4375": 238, "0887": 238, "0164": 238, "0286": 238, "494": 238, "360": 238, "2418": 238, "4173": 238, "361": 238, "3223": 238, "0129": 238, "362": 238, "3394": 238, "0261": 238, "083": 238, "1006": 238, "0155": 238, "8368": 238, "2131": 238, "0015": 238, "5904": 238, "365": 238, "4334": 238, "0097": 238, "7972": 238, "366": 238, "0553": 238, "0316": 238, "367": 238, "9400": 238, "0163": 238, "368": 238, "4470": 238, "3592": 238, "846": 238, "369": 238, "6599": 238, "0212": 238, "370": 238, "1730": 238, "0215": 238, "7763": 238, "0478": 238, "877": 238, "372": 238, "0360": 238, "0203": 238, "642": 238, "373": 238, "2729": 238, "0528": 238, "577": 238, "9315": 238, "0241": 238, "9806": 238, "1524": [238, 242], "376": 238, "8016": 238, "377": 238, "5091": 238, "418": 238, "378": 238, "3102": 238, "0315": 238, "432": 238, "379": 238, "2534": 238, "7214": 238, "380": 238, "5592": 238, "3980": 238, "381": 238, "9612": 238, "0160": 238, "579": 238, "382": 238, "1400": 238, "3899": 238, "383": 238, "9426": 238, "7802": 238, "3760": 238, "0355": 238, "385": 238, "6523": 238, "4011": 238, "1620": 238, "387": 238, "1276": 238, "0562": 238, "031": 238, "388": 238, "1068": 238, "0021": 238, "017": 238, "389": 238, "0714": 238, "0057": 238, "390": 238, "8994": 238, "0065": 238, "3976": 238, "391": 238, "9037": 238, "7911": 238, "392": 238, "8627": 238, "8566": 238, "0038": 238, "4516": 238, "0911": 238, "0123": 238, "395": 238, "3844": 238, "0169": 238, "396": 238, "0020": 238, "397": 238, "3425": [238, 242], "398": 238, "1860": 238, "0208": 238, "629": 238, "399": 238, "9846": 238, "0017": 238, "3495": 238, "8720": 238, "0041": 238, "7453": 238, "8915": 238, "0047": 238, "8384": 238, "402": 238, "8930": 238, "0011": 238, "691": 238, "403": 238, "0809": 238, "4144": 238, "404": 238, "7733": 238, "2374": 238, "405": 238, "8352": 238, "456": 238, "9677": 238, "0239": 238, "032": 238, "407": 238, "9020": 238, "0415": 238, "027": 238, "408": 238, "0004": 238, "409": 238, "2938": 238, "1003": 238, "410": 238, "5993": 238, "6878": 238, "411": 238, "3324": 238, "8201": 238, "412": 238, "6783": 238, "413": 238, "9123": 238, "414": 238, "1953": 238, "9014": 238, "415": 238, "1700": 238, "8236": 238, "2063": 238, "417": 238, "2929": 238, "0770": 238, "869": 238, "3652": 238, "5069": 238, "419": 238, "4950": 238, "6732": 238, "420": 238, "8126": 238, "0917": 238, "421": 238, "6658": 238, "0136": 238, "422": 238, "9130": 238, "2690": 238, "423": 238, "424": 238, "4340": 238, "425": 238, "8605": 238, "426": 238, "8701": 238, "1452": 238, "745": 238, "427": 238, "3257": 238, "428": 238, "8098": 238, "0411": 238, "492": 238, "8666": 238, "6538": 238, "430": 238, "8763": 238, "9627": 238, "431": 238, "0602": 238, "7747": 238, "6858": 238, "7238": 238, "433": 238, "9625": 238, "9441": 238, "434": 238, "8014": 238, "537": 238, "435": 238, "2749": 238, "0383": 238, "436": 238, "8456": 238, "0407": 238, "593": 238, "437": 238, "3946": 238, "0362": 238, "6683": 238, "0099": 238, "979": 238, "439": 238, "2734": 238, "4428": 238, "440": 238, "0878": 238, "441": 238, "7055": 238, "2138": 238, "442": 238, "0877": 238, "3166": 238, "443": 238, "1137": 238, "0027": 238, "3978": 238, "0496": 238, "0055": 238, "7568": 238, "445": 238, "3431": 238, "3825": 238, "446": 238, "1705": 238, "447": 238, "8119": 238, "0175": 238, "509": 238, "449": 238, "8132": 238, "0267": 238, "450": 238, "2008": 238, "4868": 238, "451": 238, "9422": 238, "0210": 238, "452": 238, "4661": 238, "7276": 238, "453": 238, "5522": 238, "0134": 238, "454": 238, "8172": 238, "045": 238, "455": 238, "8646": 238, "0094": 238, "7752": 238, "0518": 238, "457": 238, "0193": 238, "4525": 238, "458": 238, "1857": 238, "459": 238, "6043": 238, "0176": 238, "460": 238, "7129": 238, "0304": 238, "461": 238, "5279": 238, "0130": 238, "545": 238, "462": 238, "8424": 238, "0106": 238, "855": 238, "463": 238, "5417": 238, "464": 238, "3455": 238, "4673": 238, "465": 238, "0035": 238, "0242": 238, "466": 238, "2833": 238, "1311": 238, "467": 238, "9679": 238, "562": 238, "468": 238, "2411": 238, "469": 238, "1204": 238, "0068": 238, "9147": 238, "470": 238, "1257": 238, "006": 238, "471": 238, "0142": 238, "0108": 238, "5933": 238, "472": 238, "8278": 238, "473": 238, "3941": 238, "5805": 238, "474": 238, "8604": 238, "0086": 238, "526": 238, "475": 238, "8963": 238, "0114": 238, "476": 238, "2950": 238, "0195": 238, "477": 238, "7745": 238, "0156": 238, "503": 238, "478": 238, "8721": 238, "6205": 238, "479": 238, "8315": 238, "2365": 238, "0147": 238, "481": 238, "9253": 238, "0092": 238, "482": 238, "8611": 238, "3964": 238, "483": 238, "6852": 238, "0039": 238, "8835": 238, "484": 238, "6076": 238, "0037": 238, "8121": 238, "485": 238, "66it": 238, "1567": 238, "486": 238, "4406": 238, "487": 238, "1087": 238, "5797": 238, "488": 238, "1576": 238, "1200": 238, "951": 238, "490": 238, "2429": 238, "491": 238, "1075": 238, "0816": 238, "643": 238, "0010": 238, "493": 238, "0079": 238, "2903": 238, "0095": 238, "9576": 238, "495": 238, "0365": 238, "0024": 238, "5543": 238, "496": 238, "6124": 238, "0013": 238, "1235": 238, "497": 238, "9260": 238, "0087": 238, "7075": 238, "498": 238, "5954": 238, "0064": 238, "8257": 238, "499": 238, "7482": 238, "4076": 238, "6719": 238, "1367": 238, "7811": 238, "2795": 238, "502": 238, "2426": 238, "0032": 238, "5181": 238, "7401": 238, "0023": 238, "5572": 238, "504": 238, "9539": 238, "1993": 238, "505": 238, "7611": 238, "0007": 238, "3036": 238, "506": 238, "7396": 238, "034": 238, "507": 238, "7516": 238, "5318": 238, "7854": 238, "4167": 238, "0328": 238, "0008": 238, "510": 238, "7443": 238, "511": 238, "3155": 238, "0429": 238, "8397": 238, "2303": 238, "0199": 238, "057": 238, "513": 238, "4426": 238, "9545": 238, "514": 238, "0085": 238, "515": 238, "4581": 238, "0098": 238, "2598": 238, "516": 238, "7834": 238, "0554": 238, "6549": 238, "517": 238, "2504": 238, "0473": 238, "606": 238, "518": 238, "5102": 238, "702": 238, "3549": 238, "8076": 238, "520": 238, "6700": 238, "9308": 238, "4695": 238, "522": 238, "5815": 238, "0298": 238, "6727": 238, "523": 238, "3096": 238, "0292": 238, "8227": 238, "524": 238, "6543": 238, "1318": 238, "761": 238, "525": 238, "4687": 238, "0282": 238, "6978": 238, "8310": 238, "0033": 238, "4615": 238, "3352": 238, "581": 238, "528": 238, "9469": 238, "0070": 238, "8645": 238, "529": 238, "1743": 238, "0121": 238, "9721": 238, "530": 238, "4722": 238, "7389": 238, "531": 238, "2902": 238, "0078": 238, "3578": 238, "532": 238, "2149": 238, "0022": 238, "3183": 238, "533": 238, "9345": 238, "6002": 238, "534": 238, "5123": 238, "4093": 238, "535": 238, "3236": 238, "3639": 238, "536": 238, "5159": 238, "0592": 238, "3782": 238, "4212": 238, "538": 238, "7089": 238, "539": 238, "2481": 238, "0096": 238, "540": 238, "4158": 238, "541": 238, "5495": 238, "0066": 238, "3839": 238, "542": 238, "4365": 238, "1044": 238, "6169": 238, "543": 238, "707": 238, "3356": 238, "0117": 238, "6134": 238, "8793": 238, "907": 238, "546": 238, "0026": 238, "0053": 238, "3479": 238, "547": 238, "0895": 238, "4397": 238, "548": 238, "3876": 238, "0321": 238, "549": 238, "2143": 238, "0076": 238, "9554": 238, "550": 238, "3460": 238, "0187": 238, "763": 238, "551": 238, "5534": 238, "2692": 238, "4737": 238, "553": 238, "3320": 238, "554": 238, "4058": 238, "0201": 238, "851": 238, "4763": 238, "556": 238, "6003": 238, "1254": 238, "8694": 238, "557": 238, "1942": 238, "3817": 238, "558": 238, "559": 238, "1663": 238, "2696": 238, "560": 238, "2471": 238, "3877": 238, "561": 238, "9411": 238, "0280": 238, "0460": 238, "563": 238, "564": 238, "4964": 238, "565": 238, "5444": 238, "566": 238, "567": 238, "6533": 238, "0758": 238, "6368": 238, "568": 238, "6789": 238, "5127": 238, "569": 238, "3082": 238, "570": 238, "9187": 238, "0301": 238, "081": 238, "571": 238, "5027": 238, "1328": 238, "826": 238, "572": 238, "3064": 238, "029": 238, "573": 238, "8798": 238, "6415": 238, "574": 238, "7876": 238, "3600": 238, "996": 238, "0458": 238, "5328": 238, "2650": 238, "4309": 238, "063": 238, "4354": 238, "6834": 238, "578": 238, "0378": 238, "3354": 238, "6266": 238, "0131": 238, "580": 238, "6149": 238, "602": 238, "1385": 238, "0929": 238, "1253": 238, "5207": 238, "2421": 238, "848": 238, "584": 238, "747": 238, "585": 238, "6595": 238, "3061": 238, "2587": 238, "587": 238, "4095": 238, "0043": 238, "588": 238, "0810": 238, "924": 238, "0771": 238, "0464": 238, "092": 238, "590": 238, "2918": 238, "6804": 238, "591": 238, "3025": 238, "592": 238, "3150": 238, "0050": 238, "983": 238, "5221": 238, "1229": 238, "594": 238, "9613": 238, "1574": 238, "595": 238, "9316": 238, "1270": 238, "596": 238, "2107": 238, "6618": 238, "597": 238, "8017": 238, "4358": 238, "5340": 238, "599": 238, "2862": 238, "7371": 238, "361e": 238, "600": 238, "7185": 238, "0297": 238, "601": 238, "1916": 238, "5694": 238, "2415": 238, "0049": 238, "603": 238, "9805": 238, "0204": 238, "604": 238, "8446": 238, "0073": 238, "605": 238, "2980": 238, "8339": 238, "4792": 238, "2825": 238, "0116": 238, "0366": 238, "609": 238, "8660": 238, "5751": 238, "610": 238, "3262": 238, "1206": 238, "611": 238, "612": 238, "1822": 238, "1931": 238, "613": 238, "7700": 238, "3624": 238, "614": 238, "4229": 238, "0769": 238, "615": 238, "5302": 238, "4002": 238, "616": 238, "3459": 238, "8139": 238, "617": 238, "0056": 238, "5053": 238, "618": 238, "7466": 238, "2463": 238, "619": 238, "0844": 238, "3769": 238, "620": 238, "5379": 238, "3788": 238, "621": 238, "1982": 238, "764": 238, "622": 238, "6922": 238, "6675": 238, "5329": 238, "0924": 238, "624": 238, "1805": 238, "0259": 238, "subject": 238, "saw": 238, "683": [238, 240], "fine": 239, "semat": 239, "r3mtransform": 239, "sake": 239, "embodi": 239, "ai": 239, "env_transform": [239, 241], "s3": 239, "amazonaw": 239, "r3m_50": 239, "374m": 239, "4m": 239, "113mb": 239, "2m": 239, "117mb": 239, "102mb": 239, "1mb": 239, "6m": 239, "5mb": 239, "6mb": 239, "9m": 239, "4mb": 239, "3mb": 239, "105m": 239, "7mb": 239, "115m": 239, "8mb": 239, "131m": 239, "0mb": 239, "147m": 239, "159m": 239, "9mb": 239, "169m": 239, "179m": 239, "187m": 239, "197m": 239, "212m": 239, "220m": 239, "229m": 239, "2mb": 239, "244m": 239, "252m": 239, "261m": 239, "268m": 239, "277m": 239, "282m": 239, "293m": 239, "299m": 239, "310m": 239, "316m": 239, "328m": 239, "342m": 239, "350m": 239, "359m": 239, "365m": 239, "wiser": 239, "again": [239, 241], "conclud": 239, "tmpvpvwwtmm": 239, "030517578125": 239, "tmpp1p4emi6": 239, "00095367431640625": 239, "tmpppqb4fmn": 239, "659": 239, "1796875": 239, "tmpc6a5v_kh": 239, "003814697265625": 239, "tmph9xbno_z": 239, "haven": 239, "yet": 239, "_storag": 239, "3464": [239, 240], "pretrained_model": [239, 240], "867": 240, "torchrl_demo": [240, 242], "010": [240, 242], "torch_env": [240, 241], "002": [240, 241], "3971": 240, "supervis": 241, "unsupervis": 241, "rom": 241, "licens": 241, "pygam": 241, "unifi": 241, "insid": 241, "_build_env": 241, "sphinx_gallery_start_ignor": 241, "warn": 241, "filterwarn": 241, "sphinx_gallery_end_ignor": 241, "adventur": 241, "ram": 241, "airraid": 241, "alien": 241, "amidar": 241, "assault": 241, "3208": 241, "exectut": 241, "reproduct": 241, "shortcut": 241, "tensordict_tprim": 241, "tensordict_rollout": [241, 242], "quickli": 241, "imshow": 241, "axesimag": 241, "0x7f16dff93220": 241, "inconsist": 241, "swingup": 241, "swingup_spars": 241, "ball_in_cup": 241, "catch": 241, "balance_spars": 241, "three_pol": 241, "two_pol": 241, "finger": 241, "turn_easi": 241, "turn_hard": 241, "fish": 241, "swim": 241, "hopper": 241, "hop": 241, "run_pure_st": 241, "bring_bal": 241, "bring_peg": 241, "insert_bal": 241, "insert_peg": 241, "point_mass": 241, "reacher": 241, "swimmer": 241, "swimmer6": 241, "swimmer15": 241, "walker": 241, "dog": 241, "trot": 241, "humanoid_cmu": 241, "lqr": 241, "lqr_2_1": 241, "lqr_6_2": 241, "quadrup": 241, "escap": 241, "stacker": 241, "stack_2": 241, "stack_4": 241, "wrapper1": 241, "wrapper2": 241, "obviou": 241, "truth": 241, "env0": 241, "env_transformed_bi": 241, "stanc": 241, "transformeddistribut": 241, "base_dist": 241, "concat": 241, "mofidi": 241, "transformedenviron": 241, "noopresetenv": [241, 242], "moderet": 241, "computation": 241, "legitim": 241, "incom": 241, "amongst": 241, "wor": 241, "convention": 241, "scope": 241, "markovian": 241, "3288080526": 241, "sometim": 241, "constain": 241, "uuid1": 241, "foo": 241, "bar_": 241, "get_someth": 241, "bar_14dd284a": 241, "b8d0": 241, "11ed": 241, "b782": 241, "0242ac120002": 241, "aargh": 241, "foo_list": 241, "vec_env": 241, "_dispatch_caller_parallel": 241, "0x7f16dc7599a0": 241, "bar_1c7362a4": 241, "a6e7": 241, "bar_1c8bfada": 241, "b111": 241, "bar_1c77fd5a": 241, "a4d4": 241, "parallen": 241, "carefulli": 241, "commonli": 241, "approxim": 241, "particularili": 241, "evolv": 241, "steadi": 241, "approx": 241, "5121": 241, "2674": 241, "0953": 241, "8552": 241, "9139": 241, "9125": 241, "_extra_st": 241, "observation_ssq": 241, "observation_sum": 241, "1409": 241, "1429": 241, "2427": 241, "1587": 241, "1821": 241, "dispach": 241, "absor": 241, "demo": 242, "icml": 242, "dai": 242, "vmoen": 242, "fb": 242, "question": 242, "team": 242, "decid": 242, "invest": 242, "platform": 242, "media": 242, "truli": 242, "predominantli": 242, "tensordict1": 242, "tensordict2": 242, "tensordict_sampl": 242, "_sampler": 242, "_sum_tre": 242, "modulenotfounderror": 242, "06984968483448029": 242, "28791671991348267": 242, "gym_env": 242, "lazyconv2d": 242, "backbone_modul": 242, "params_expand": 242, "tensordict_exp": 242, "base_modul": 242, "0137": 242, "0641": 242, "indexputbackward0": 242, "8728": 242, "1335": 242, "9833": 242, "3497": 242, "6889": 242, "6433": 242, "clampbackward1": 242, "1131": 242, "1761": 242, "2665": 242, "2915": 242, "6207": 242, "1441": 242, "2375": 242, "1242": 242, "1372": 242, "3810": 242, "meanbackward1": 242, "tensordicts_prealloc": 242, "tensordicts_stack": 242, "disclaim": 242, "concatmodul": 242, "loss_td": 242, "pred_valu": 242, "pred_value_max": 242, "target_value_max": 242, "year": 242, "roadmap": 242, "compris": 242, "contributor": 242, "curiou": 242, "feedback": 242, "nascent": 242, "pypi": 242}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "MultiSyncDataCollector"], [13, 0, 1, "", "MultiaSyncDataCollector"], [14, 0, 1, "", "RandomPolicy"], [15, 0, 1, "", "SyncDataCollector"], [16, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[15, 1, 1, "", "iterator"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rollout"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[17, 2, 1, "", "split_trajectories"]], "torchrl.data": [[18, 0, 1, "", "BinaryDiscreteTensorSpec"], [19, 0, 1, "", "BoundedTensorSpec"], [20, 0, 1, "", "CompositeSpec"], [21, 0, 1, "", "DiscreteTensorSpec"], [22, 0, 1, "", "MultiDiscreteTensorSpec"], [23, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [24, 0, 1, "", "MultiStep"], [25, 0, 1, "", "OneHotDiscreteTensorSpec"], [26, 0, 1, "", "PrioritizedReplayBuffer"], [27, 0, 1, "", "ReplayBuffer"], [28, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [29, 0, 1, "", "TensorDictReplayBuffer"], [30, 0, 1, "", "TensorSpec"], [31, 0, 1, "", "UnboundedContinuousTensorSpec"], [32, 0, 1, "", "UnboundedDiscreteTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "expand"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "expand"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "expand"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "keys"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[21, 1, 1, "", "assert_is_in"], [21, 1, 1, "", "encode"], [21, 1, 1, "", "expand"], [21, 1, 1, "", "index"], [21, 1, 1, "", "is_in"], [21, 1, 1, "", "project"], [21, 1, 1, "", "rand"], [21, 1, 1, "", "to_numpy"], [21, 1, 1, "", "to_one_hot"], [21, 1, 1, "", "to_one_hot_spec"], [21, 1, 1, "", "type_check"], [21, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "expand"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "to_one_hot"], [22, 1, 1, "", "to_one_hot_spec"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "expand"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "to_categorical"], [23, 1, 1, "", "to_categorical_spec"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[24, 1, 1, "", "add_module"], [24, 1, 1, "", "apply"], [24, 1, 1, "", "bfloat16"], [24, 1, 1, "", "buffers"], [24, 1, 1, "", "children"], [24, 1, 1, "", "cpu"], [24, 1, 1, "", "cuda"], [24, 1, 1, "", "double"], [24, 1, 1, "", "eval"], [24, 1, 1, "", "extra_repr"], [24, 1, 1, "", "float"], [24, 1, 1, "", "forward"], [24, 1, 1, "", "get_buffer"], [24, 1, 1, "", "get_extra_state"], [24, 1, 1, "", "get_parameter"], [24, 1, 1, "", "get_submodule"], [24, 1, 1, "", "half"], [24, 1, 1, "", "ipu"], [24, 1, 1, "", "load_state_dict"], [24, 1, 1, "", "modules"], [24, 1, 1, "", "named_buffers"], [24, 1, 1, "", "named_children"], [24, 1, 1, "", "named_modules"], [24, 1, 1, "", "named_parameters"], [24, 1, 1, "", "parameters"], [24, 1, 1, "", "register_backward_hook"], [24, 1, 1, "", "register_buffer"], [24, 1, 1, "", "register_forward_hook"], [24, 1, 1, "", "register_forward_pre_hook"], [24, 1, 1, "", "register_full_backward_hook"], [24, 1, 1, "", "register_full_backward_pre_hook"], [24, 1, 1, "", "register_load_state_dict_post_hook"], [24, 1, 1, "", "register_module"], [24, 1, 1, "", "register_parameter"], [24, 1, 1, "", "register_state_dict_pre_hook"], [24, 1, 1, "", "requires_grad_"], [24, 1, 1, "", "set_extra_state"], [24, 1, 1, "", "share_memory"], [24, 1, 1, "", "state_dict"], [24, 1, 1, "", "to"], [24, 1, 1, "", "to_empty"], [24, 1, 1, "", "train"], [24, 1, 1, "", "type"], [24, 1, 1, "", "xpu"], [24, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "append_transform"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "insert_transform"], [26, 1, 1, "", "sample"]], "torchrl.data.ReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "append_transform"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "insert_transform"], [27, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[28, 1, 1, "", "add"], [28, 1, 1, "", "append_transform"], [28, 1, 1, "", "extend"], [28, 1, 1, "", "insert_transform"], [28, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[29, 1, 1, "", "add"], [29, 1, 1, "", "append_transform"], [29, 1, 1, "", "extend"], [29, 1, 1, "", "insert_transform"], [29, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.samplers": [[33, 0, 1, "", "PrioritizedSampler"], [34, 0, 1, "", "RandomSampler"], [35, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[33, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[36, 0, 1, "", "LazyMemmapStorage"], [37, 0, 1, "", "LazyTensorStorage"], [38, 0, 1, "", "ListStorage"], [39, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[36, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[39, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[40, 0, 1, "", "RoundRobinWriter"], [41, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[40, 1, 1, "", "add"], [40, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "extend"]], "torchrl.envs": [[42, 0, 1, "", "EnvBase"], [43, 0, 1, "", "EnvCreator"], [44, 0, 1, "", "EnvMetaData"], [45, 0, 1, "", "GymLikeEnv"], [46, 2, 1, "", "ModelBasedEnvBase"], [47, 0, 1, "", "MultiThreadedEnv"], [48, 0, 1, "", "ParallelEnv"], [49, 0, 1, "", "SerialEnv"], [50, 0, 1, "", "Specs"], [46, 1, 1, "", "rand_step"], [46, 1, 1, "", "reset"], [46, 1, 1, "", "rollout"], [46, 1, 1, "", "set_seed"], [46, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[42, 1, 1, "", "add_module"], [42, 1, 1, "", "apply"], [42, 3, 1, "", "batch_locked"], [42, 1, 1, "", "bfloat16"], [42, 1, 1, "", "buffers"], [42, 1, 1, "", "children"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 1, 1, "", "double"], [42, 1, 1, "", "eval"], [42, 1, 1, "", "extra_repr"], [42, 1, 1, "", "fake_tensordict"], [42, 1, 1, "", "float"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_buffer"], [42, 1, 1, "", "get_extra_state"], [42, 1, 1, "", "get_parameter"], [42, 1, 1, "", "get_submodule"], [42, 1, 1, "", "half"], [42, 1, 1, "", "ipu"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "modules"], [42, 1, 1, "", "named_buffers"], [42, 1, 1, "", "named_children"], [42, 1, 1, "", "named_modules"], [42, 1, 1, "", "named_parameters"], [42, 1, 1, "", "parameters"], [42, 1, 1, "", "rand_action"], [42, 1, 1, "id0", "rand_step"], [42, 1, 1, "", "register_backward_hook"], [42, 1, 1, "", "register_buffer"], [42, 1, 1, "", "register_forward_hook"], [42, 1, 1, "", "register_forward_pre_hook"], [42, 1, 1, "", "register_full_backward_hook"], [42, 1, 1, "", "register_full_backward_pre_hook"], [42, 1, 1, "", "register_load_state_dict_post_hook"], [42, 1, 1, "", "register_module"], [42, 1, 1, "", "register_parameter"], [42, 1, 1, "", "register_state_dict_pre_hook"], [42, 1, 1, "", "requires_grad_"], [42, 1, 1, "id1", "reset"], [42, 1, 1, "id2", "rollout"], [42, 1, 1, "", "set_extra_state"], [42, 1, 1, "id3", "set_seed"], [42, 1, 1, "", "share_memory"], [42, 3, 1, "", "specs"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "id4", "step"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_empty"], [42, 1, 1, "", "train"], [42, 1, 1, "", "type"], [42, 1, 1, "", "xpu"], [42, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 3, 1, "", "batch_locked"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "close"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "fake_tensordict"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "rand_action"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "read_action"], [45, 1, 1, "", "read_done"], [45, 1, 1, "", "read_obs"], [45, 1, 1, "", "read_reward"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_full_backward_pre_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "register_state_dict_pre_hook"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_info_dict_reader"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "share_memory"], [45, 3, 1, "", "specs"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "step"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[47, 1, 1, "", "add_module"], [47, 1, 1, "", "apply"], [47, 3, 1, "", "batch_locked"], [47, 1, 1, "", "bfloat16"], [47, 1, 1, "", "buffers"], [47, 1, 1, "", "children"], [47, 1, 1, "", "close"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 1, 1, "", "double"], [47, 1, 1, "", "eval"], [47, 1, 1, "", "extra_repr"], [47, 1, 1, "", "fake_tensordict"], [47, 1, 1, "", "float"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_buffer"], [47, 1, 1, "", "get_extra_state"], [47, 1, 1, "", "get_parameter"], [47, 1, 1, "", "get_submodule"], [47, 1, 1, "", "half"], [47, 1, 1, "", "ipu"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "modules"], [47, 1, 1, "", "named_buffers"], [47, 1, 1, "", "named_children"], [47, 1, 1, "", "named_modules"], [47, 1, 1, "", "named_parameters"], [47, 1, 1, "", "parameters"], [47, 1, 1, "", "rand_action"], [47, 1, 1, "", "rand_step"], [47, 1, 1, "", "register_backward_hook"], [47, 1, 1, "", "register_buffer"], [47, 1, 1, "", "register_forward_hook"], [47, 1, 1, "", "register_forward_pre_hook"], [47, 1, 1, "", "register_full_backward_hook"], [47, 1, 1, "", "register_full_backward_pre_hook"], [47, 1, 1, "", "register_load_state_dict_post_hook"], [47, 1, 1, "", "register_module"], [47, 1, 1, "", "register_parameter"], [47, 1, 1, "", "register_state_dict_pre_hook"], [47, 1, 1, "", "requires_grad_"], [47, 1, 1, "", "reset"], [47, 1, 1, "", "rollout"], [47, 1, 1, "", "set_extra_state"], [47, 1, 1, "", "set_seed"], [47, 1, 1, "", "share_memory"], [47, 3, 1, "", "specs"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "step"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_empty"], [47, 1, 1, "", "train"], [47, 1, 1, "", "type"], [47, 1, 1, "", "xpu"], [47, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[48, 1, 1, "", "add_module"], [48, 1, 1, "", "apply"], [48, 3, 1, "", "batch_locked"], [48, 1, 1, "", "bfloat16"], [48, 1, 1, "", "buffers"], [48, 1, 1, "", "children"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 1, 1, "", "double"], [48, 1, 1, "", "eval"], [48, 1, 1, "", "extra_repr"], [48, 1, 1, "", "fake_tensordict"], [48, 1, 1, "", "float"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_buffer"], [48, 1, 1, "", "get_extra_state"], [48, 1, 1, "", "get_parameter"], [48, 1, 1, "", "get_submodule"], [48, 1, 1, "", "half"], [48, 1, 1, "", "ipu"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "modules"], [48, 1, 1, "", "named_buffers"], [48, 1, 1, "", "named_children"], [48, 1, 1, "", "named_modules"], [48, 1, 1, "", "named_parameters"], [48, 1, 1, "", "parameters"], [48, 1, 1, "", "rand_action"], [48, 1, 1, "", "rand_step"], [48, 1, 1, "", "register_backward_hook"], [48, 1, 1, "", "register_buffer"], [48, 1, 1, "", "register_forward_hook"], [48, 1, 1, "", "register_forward_pre_hook"], [48, 1, 1, "", "register_full_backward_hook"], [48, 1, 1, "", "register_full_backward_pre_hook"], [48, 1, 1, "", "register_load_state_dict_post_hook"], [48, 1, 1, "", "register_module"], [48, 1, 1, "", "register_parameter"], [48, 1, 1, "", "register_state_dict_pre_hook"], [48, 1, 1, "", "requires_grad_"], [48, 1, 1, "", "reset"], [48, 1, 1, "", "rollout"], [48, 1, 1, "", "set_extra_state"], [48, 1, 1, "", "set_seed"], [48, 1, 1, "", "share_memory"], [48, 3, 1, "", "specs"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "step"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_empty"], [48, 1, 1, "", "train"], [48, 1, 1, "", "type"], [48, 1, 1, "", "update_kwargs"], [48, 1, 1, "", "xpu"], [48, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[49, 1, 1, "", "add_module"], [49, 1, 1, "", "apply"], [49, 3, 1, "", "batch_locked"], [49, 1, 1, "", "bfloat16"], [49, 1, 1, "", "buffers"], [49, 1, 1, "", "children"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 1, 1, "", "double"], [49, 1, 1, "", "eval"], [49, 1, 1, "", "extra_repr"], [49, 1, 1, "", "fake_tensordict"], [49, 1, 1, "", "float"], [49, 1, 1, "", "forward"], [49, 1, 1, "", "get_buffer"], [49, 1, 1, "", "get_extra_state"], [49, 1, 1, "", "get_parameter"], [49, 1, 1, "", "get_submodule"], [49, 1, 1, "", "half"], [49, 1, 1, "", "ipu"], [49, 1, 1, "", "load_state_dict"], [49, 1, 1, "", "modules"], [49, 1, 1, "", "named_buffers"], [49, 1, 1, "", "named_children"], [49, 1, 1, "", "named_modules"], [49, 1, 1, "", "named_parameters"], [49, 1, 1, "", "parameters"], [49, 1, 1, "", "rand_action"], [49, 1, 1, "", "rand_step"], [49, 1, 1, "", "register_backward_hook"], [49, 1, 1, "", "register_buffer"], [49, 1, 1, "", "register_forward_hook"], [49, 1, 1, "", "register_forward_pre_hook"], [49, 1, 1, "", "register_full_backward_hook"], [49, 1, 1, "", "register_full_backward_pre_hook"], [49, 1, 1, "", "register_load_state_dict_post_hook"], [49, 1, 1, "", "register_module"], [49, 1, 1, "", "register_parameter"], [49, 1, 1, "", "register_state_dict_pre_hook"], [49, 1, 1, "", "requires_grad_"], [49, 1, 1, "", "reset"], [49, 1, 1, "", "rollout"], [49, 1, 1, "", "set_extra_state"], [49, 1, 1, "", "set_seed"], [49, 1, 1, "", "share_memory"], [49, 3, 1, "", "specs"], [49, 1, 1, "", "state_dict"], [49, 1, 1, "", "step"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_empty"], [49, 1, 1, "", "train"], [49, 1, 1, "", "type"], [49, 1, 1, "", "update_kwargs"], [49, 1, 1, "", "xpu"], [49, 1, 1, "", "zero_grad"]], "torchrl.envs.Specs": [[50, 1, 1, "", "build_tensordict"]], "torchrl.envs.libs.brax": [[51, 2, 1, "", "BraxEnv"], [52, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[53, 2, 1, "", "DMControlEnv"], [54, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[55, 2, 1, "", "GymEnv"], [56, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[57, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[58, 2, 1, "", "JumanjiEnv"], [59, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.vmas": [[60, 2, 1, "", "VmasEnv"], [61, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[62, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[63, 0, 1, "", "BinarizeReward"], [64, 0, 1, "", "CatFrames"], [65, 0, 1, "", "CatTensors"], [66, 0, 1, "", "CenterCrop"], [67, 0, 1, "", "Compose"], [68, 0, 1, "", "DiscreteActionProjection"], [69, 0, 1, "", "DoubleToFloat"], [70, 0, 1, "", "ExcludeTransform"], [71, 0, 1, "", "FiniteTensorDictCheck"], [72, 0, 1, "", "FlattenObservation"], [73, 0, 1, "", "FrameSkipTransform"], [74, 0, 1, "", "GrayScale"], [75, 0, 1, "", "NoopResetEnv"], [76, 0, 1, "", "ObservationNorm"], [77, 0, 1, "", "ObservationTransform"], [78, 0, 1, "", "PinMemoryTransform"], [79, 0, 1, "", "R3MTransform"], [80, 0, 1, "", "RandomCropTensorDict"], [81, 0, 1, "", "Resize"], [82, 0, 1, "", "RewardClipping"], [83, 0, 1, "", "RewardScaling"], [84, 0, 1, "", "RewardSum"], [85, 0, 1, "", "SelectTransform"], [86, 0, 1, "", "SqueezeTransform"], [87, 0, 1, "", "StepCounter"], [88, 0, 1, "", "TensorDictPrimer"], [89, 0, 1, "", "TimeMaxPool"], [90, 0, 1, "", "ToTensorImage"], [91, 0, 1, "", "Transform"], [92, 0, 1, "", "TransformedEnv"], [93, 0, 1, "", "UnsqueezeTransform"], [94, 0, 1, "", "VIPRewardTransform"], [95, 0, 1, "", "VIPTransform"], [96, 0, 1, "", "VecNorm"], [97, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[63, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[64, 1, 1, "", "forward"], [64, 1, 1, "", "reset"], [64, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[65, 1, 1, "", "forward"], [65, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[66, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[67, 1, 1, "", "forward"], [67, 1, 1, "", "reset"], [67, 1, 1, "", "to"], [67, 1, 1, "", "transform_input_spec"], [67, 1, 1, "", "transform_observation_spec"], [67, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[68, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[69, 1, 1, "", "transform_input_spec"], [69, 1, 1, "", "transform_observation_spec"], [69, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[70, 1, 1, "", "forward"], [70, 1, 1, "", "reset"], [70, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[71, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[72, 1, 1, "", "forward"], [72, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[73, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[74, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[75, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[76, 1, 1, "", "init_stats"], [76, 1, 1, "", "transform_input_spec"], [76, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[78, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[79, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[80, 1, 1, "", "forward"]], "torchrl.envs.transforms.Resize": [[81, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[82, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[83, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[84, 1, 1, "", "reset"], [84, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[85, 1, 1, "", "forward"], [85, 1, 1, "", "reset"], [85, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[87, 1, 1, "", "forward"], [87, 1, 1, "", "reset"], [87, 1, 1, "", "transform_input_spec"], [87, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[88, 1, 1, "", "forward"], [88, 1, 1, "", "reset"], [88, 1, 1, "", "to"], [88, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[89, 1, 1, "", "forward"], [89, 1, 1, "", "reset"], [89, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[90, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[91, 1, 1, "", "forward"], [91, 1, 1, "", "reset"], [91, 1, 1, "", "transform_input_spec"], [91, 1, 1, "", "transform_observation_spec"], [91, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[92, 3, 1, "", "action_spec"], [92, 3, 1, "", "batch_locked"], [92, 1, 1, "", "eval"], [92, 3, 1, "", "input_spec"], [92, 1, 1, "", "load_state_dict"], [92, 3, 1, "", "observation_spec"], [92, 3, 1, "", "reward_spec"], [92, 1, 1, "", "set_seed"], [92, 1, 1, "", "state_dict"], [92, 1, 1, "", "to"], [92, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[93, 1, 1, "", "transform_input_spec"], [93, 1, 1, "", "transform_observation_spec"], [93, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[94, 1, 1, "", "forward"], [94, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[95, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[96, 1, 1, "", "build_td_for_shared_vecnorm"], [96, 1, 1, "", "forward"], [96, 1, 1, "", "get_extra_state"], [96, 1, 1, "", "set_extra_state"], [96, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[98, 2, 1, "", "check_env_specs"], [99, 2, 1, "", "exploration_mode"], [100, 2, 1, "", "get_available_libraries"], [101, 2, 1, "", "set_exploration_mode"], [102, 2, 1, "", "step_mdp"]], "torchrl.modules": [[103, 0, 1, "", "CEMPlanner"], [104, 0, 1, "", "ConvNet"], [105, 0, 1, "", "DdpgCnnActor"], [106, 0, 1, "", "DdpgCnnQNet"], [107, 0, 1, "", "DdpgMlpActor"], [108, 0, 1, "", "DdpgMlpQNet"], [109, 0, 1, "", "Delta"], [110, 0, 1, "", "DistributionalDQNnet"], [111, 0, 1, "", "DreamerActor"], [112, 0, 1, "", "DuelingCnnDQNet"], [113, 0, 1, "", "IndependentNormal"], [114, 0, 1, "", "LSTMNet"], [115, 0, 1, "", "MLP"], [116, 0, 1, "", "MPCPlannerBase"], [117, 0, 1, "", "MPPIPlanner"], [118, 0, 1, "", "NoisyLazyLinear"], [119, 0, 1, "", "NoisyLinear"], [120, 0, 1, "", "NormalParamWrapper"], [121, 0, 1, "", "ObsDecoder"], [122, 0, 1, "", "ObsEncoder"], [123, 0, 1, "", "OneHotCategorical"], [124, 0, 1, "", "RSSMPosterior"], [125, 0, 1, "", "RSSMPrior"], [126, 0, 1, "", "TanhDelta"], [127, 0, 1, "", "TanhNormal"], [128, 0, 1, "", "TruncatedNormal"], [129, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[103, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[104, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[105, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[106, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[107, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[108, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[109, 1, 1, "", "log_prob"], [109, 3, 1, "", "mean"], [109, 3, 1, "", "mode"], [109, 1, 1, "", "rsample"], [109, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[110, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[111, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[112, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[113, 3, 1, "", "mode"]], "torchrl.modules.LSTMNet": [[114, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[115, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[116, 1, 1, "", "forward"], [116, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[117, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[118, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[120, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[121, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[122, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[123, 1, 1, "", "log_prob"], [123, 3, 1, "", "mode"], [123, 1, 1, "", "rsample"], [123, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[124, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[125, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[126, 3, 1, "", "mean"], [126, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[127, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[128, 1, 1, "", "log_prob"], [128, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module": [[130, 0, 1, "", "Actor"], [131, 0, 1, "", "ActorCriticOperator"], [132, 0, 1, "", "ActorCriticWrapper"], [133, 0, 1, "", "ActorValueOperator"], [134, 0, 1, "", "AdditiveGaussianWrapper"], [135, 0, 1, "", "DistributionalQValueActor"], [136, 0, 1, "", "EGreedyWrapper"], [137, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [138, 0, 1, "", "ProbabilisticActor"], [139, 0, 1, "", "QValueActor"], [140, 0, 1, "", "SafeModule"], [141, 0, 1, "", "SafeProbabilisticModule"], [142, 0, 1, "", "SafeProbabilisticSequential"], [143, 0, 1, "", "SafeSequential"], [144, 0, 1, "", "ValueOperator"], [145, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[131, 1, 1, "", "get_critic_operator"], [131, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[132, 1, 1, "", "get_policy_operator"], [132, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[133, 1, 1, "", "get_policy_operator"], [133, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[136, 1, 1, "", "forward"], [136, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[137, 1, 1, "", "forward"], [137, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.SafeModule": [[140, 1, 1, "", "random"], [140, 1, 1, "", "random_sample"], [140, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[141, 1, 1, "", "random"], [141, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[145, 1, 1, "", "get_reward_operator"], [145, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.tensordict_module.actors": [[146, 0, 1, "", "DistributionalQValueHook"], [147, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[148, 0, 1, "", "ensure_tensordict_compatible"], [149, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[150, 0, 1, "", "biased_softplus"], [151, 0, 1, "", "inv_softplus"], [152, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[150, 1, 1, "", "forward"]], "torchrl.objectives": [[153, 0, 1, "", "A2CLoss"], [154, 0, 1, "", "ClipPPOLoss"], [155, 0, 1, "", "DDPGLoss"], [156, 0, 1, "", "DQNLoss"], [157, 0, 1, "", "DistributionalDQNLoss"], [158, 0, 1, "", "DreamerActorLoss"], [159, 0, 1, "", "DreamerModelLoss"], [160, 0, 1, "", "DreamerValueLoss"], [161, 0, 1, "", "HardUpdate"], [162, 0, 1, "", "KLPENPPOLoss"], [163, 0, 1, "", "PPOLoss"], [164, 0, 1, "", "REDQLoss"], [165, 0, 1, "", "ReinforceLoss"], [166, 0, 1, "", "SACLoss"], [167, 0, 1, "", "SoftUpdate"], [168, 0, 1, "", "distance_loss"], [169, 0, 1, "", "hold_out_net"], [170, 0, 1, "", "hold_out_params"], [171, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[153, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[154, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[155, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[156, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[157, 1, 1, "", "forward"]], "torchrl.objectives.DreamerActorLoss": [[158, 1, 1, "", "forward"]], "torchrl.objectives.DreamerModelLoss": [[159, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[160, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[162, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[163, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[164, 1, 1, "", "forward"]], "torchrl.objectives.ReinforceLoss": [[165, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[166, 1, 1, "", "forward"]], "torchrl.objectives.value": [[172, 0, 1, "", "GAE"], [173, 0, 1, "", "TDEstimate"], [174, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[172, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[173, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[174, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[175, 0, 1, "", "generalized_advantage_estimate"], [176, 0, 1, "", "td_advantage_estimate"], [177, 0, 1, "", "td_lambda_advantage_estimate"], [178, 0, 1, "", "td_lambda_return_estimate"], [179, 0, 1, "", "vec_generalized_advantage_estimate"], [180, 0, 1, "", "vec_td_lambda_advantage_estimate"], [181, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[182, 2, 1, "", "TensorDictRecorder"], [183, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[184, 2, 1, "", "CSVLogger"], [185, 2, 1, "", "Logger"], [186, 2, 1, "", "MLFlowLogger"], [187, 2, 1, "", "TensorboardLogger"], [188, 2, 1, "", "WandbLogger"], [189, 2, 1, "", "generate_exp_name"], [190, 2, 1, "", "get_logger"]], "torchrl.trainers": [[191, 0, 1, "", "BatchSubSampler"], [192, 0, 1, "", "ClearCudaCache"], [193, 0, 1, "", "CountFramesLog"], [194, 0, 1, "", "LogReward"], [195, 0, 1, "", "OptimizerHook"], [196, 0, 1, "", "Recorder"], [197, 0, 1, "", "ReplayBufferTrainer"], [198, 0, 1, "", "RewardNormalizer"], [199, 0, 1, "", "SelectKeys"], [200, 0, 1, "", "Trainer"], [201, 0, 1, "", "TrainerHookBase"], [202, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.helpers": [[203, 2, 1, "", "correct_for_frame_skip"], [204, 2, 1, "", "get_stats_random_rollout"], [205, 2, 1, "", "make_a2c_loss"], [206, 2, 1, "", "make_a2c_model"], [207, 2, 1, "", "make_collector_offpolicy"], [208, 2, 1, "", "make_collector_onpolicy"], [209, 2, 1, "", "make_ddpg_actor"], [210, 2, 1, "", "make_ddpg_loss"], [211, 2, 1, "", "make_dqn_actor"], [212, 2, 1, "", "make_dqn_loss"], [213, 2, 1, "", "make_ppo_loss"], [214, 2, 1, "", "make_ppo_model"], [215, 2, 1, "", "make_redq_loss"], [216, 2, 1, "", "make_redq_model"], [217, 2, 1, "", "make_replay_buffer"], [218, 2, 1, "", "make_sac_loss"], [219, 2, 1, "", "make_sac_model"], [220, 2, 1, "", "make_target_updater"], [221, 2, 1, "", "make_trainer"], [222, 2, 1, "", "parallel_env_constructor"], [223, 2, 1, "", "sync_async_collector"], [224, 2, 1, "", "sync_sync_collector"], [225, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 6, 229, 230, 231, 232, 233, 234, 235, 238, 241, 242], "document": [0, 9], "tutori": [0, 235], "basic": 0, "intermedi": [0, 8], "advanc": 0, "refer": [0, 227], "knowledg": [0, 228], "base": [0, 228, 234], "indic": 0, "tabl": 0, "collector": [1, 233, 234, 235, 242], "packag": [1, 2, 3, 229, 230, 231, 232], "data": [1, 2, 4, 233, 234, 235, 242], "helper": [1, 3], "function": [1, 4, 234, 235, 242], "replai": [2, 233, 234, 235, 242], "buffer": [2, 233, 234, 235, 242], "compos": [2, 67], "sotr": 2, "trajectori": [2, 233], "tensorspec": [2, 30], "util": [2, 229, 230, 231], "env": [3, 238, 241, 242], "vector": [3, 242], "transform": [3, 91, 233, 235, 238, 241, 242], "clone": [3, 7], "record": [3, 196, 231, 233], "domain": 3, "specif": [3, 237], "librari": [3, 242], "thing": [4, 238], "consid": 4, "when": [4, 7], "debug": [4, 8], "rl": [4, 9, 242], "gener": 4, "have": 4, "you": 4, "valid": 4, "your": [4, 6, 233, 238], "algorithm": 4, "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 233, 234], "return": [4, 230], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "agent": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 233, 235, 237, 238], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 242], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "i": [4, 5, 8], "favor": 4, "singl": 4, "compon": 4, "veloc": 4, "v": 4, "l2": 4, "action": [4, 238], "magnitud": 4, "task": [4, 237], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 233, 234, 235], "standard": 4, "explor": [4, 229, 234], "valu": [4, 233, 235], "loss": [4, 235], "earli": 4, "train": [4, 8, 233, 234, 235, 238], "roughli": 4, "uniformli": 4, "random": 4, "intrins": 4, "decai": 4, "learn": [4, 235], "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 234], "increas": 4, "an": [4, 235, 238], "environ": [4, 6, 7, 233, 234, 235, 237, 238, 241, 242], "dynam": 4, "can": 4, "low": 4, "forward": 4, "model": [4, 229, 233, 234, 239, 242], "also": 4, "us": [4, 6, 9, 233, 234, 239, 242], "offlin": 4, "observ": [4, 233], "space": 4, "effect": [4, 238], "dramat": 4, "dure": 4, "high": 4, "dimension": 4, "work": [5, 6], "gym": [5, 241], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 242], "from": [6, 7], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "about": 7, "mujoco": 7, "prerequisit": 7, "render": [7, 241], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "pro": 8, "tip": 8, "gradient": 8, "relat": 8, "error": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "pytorch": [9, 10], "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 238], "workaround": 10, "implement_for": 11, "multisyncdatacollector": 12, "multiasyncdatacollector": 13, "randompolici": 14, "syncdatacollector": 15, "asyncdatacollector": 16, "split_trajectori": 17, "binarydiscretetensorspec": 18, "boundedtensorspec": 19, "compositespec": 20, "discretetensorspec": 21, "multidiscretetensorspec": 22, "multionehotdiscretetensorspec": 23, "multistep": 24, "onehotdiscretetensorspec": 25, "prioritizedreplaybuff": 26, "replaybuff": 27, "tensordictprioritizedreplaybuff": 28, "tensordictreplaybuff": 29, "unboundedcontinuoustensorspec": 31, "unboundeddiscretetensorspec": 32, "prioritizedsampl": 33, "randomsampl": 34, "sampler": 35, "lazymemmapstorag": 36, "lazytensorstorag": 37, "liststorag": 38, "storag": 39, "roundrobinwrit": 40, "writer": 41, "envbas": [42, 238], "envcreat": 43, "envmetadata": 44, "gymlikeenv": 45, "modelbasedenvbas": 46, "multithreadedenv": 47, "parallelenv": 48, "serialenv": 49, "spec": [50, 238, 241], "braxenv": 51, "braxwrapp": 52, "dmcontrolenv": 53, "dmcontrolwrapp": 54, "gymenv": 55, "gymwrapp": 56, "habitatenv": 57, "jumanjienv": 58, "jumanjiwrapp": 59, "vmasenv": 60, "vmaswrapp": 61, "dreamerenv": 62, "binarizereward": 63, "catfram": 64, "cattensor": 65, "centercrop": 66, "discreteactionproject": 68, "doubletofloat": 69, "excludetransform": 70, "finitetensordictcheck": 71, "flattenobserv": 72, "frameskiptransform": 73, "grayscal": 74, "noopresetenv": 75, "observationnorm": 76, "observationtransform": 77, "pinmemorytransform": 78, "r3mtransform": 79, "randomcroptensordict": 80, "resiz": 81, "rewardclip": 82, "rewardsc": 83, "rewardsum": 84, "selecttransform": 85, "squeezetransform": 86, "stepcount": 87, "tensordictprim": 88, "timemaxpool": 89, "totensorimag": 90, "transformedenv": 92, "unsqueezetransform": 93, "viprewardtransform": 94, "viptransform": 95, "vecnorm": [96, 241], "gsdenois": 97, "check_env_spec": 98, "exploration_mod": 99, "get_available_librari": 100, "set_exploration_mod": 101, "step_mdp": 102, "cemplann": 103, "convnet": 104, "ddpgcnnactor": 105, "ddpgcnnqnet": 106, "ddpgmlpactor": 107, "ddpgmlpqnet": 108, "delta": 109, "distributionaldqnnet": 110, "dreameractor": 111, "duelingcnndqnet": 112, "independentnorm": 113, "lstmnet": 114, "mlp": 115, "mpcplannerbas": 116, "mppiplann": 117, "noisylazylinear": 118, "noisylinear": 119, "normalparamwrapp": 120, "obsdecod": 121, "obsencod": 122, "onehotcategor": 123, "rssmposterior": 124, "rssmprior": 125, "tanhdelta": 126, "tanhnorm": 127, "truncatednorm": 128, "reset_nois": 129, "actor": 130, "actorcriticoper": 131, "actorcriticwrapp": 132, "actorvalueoper": 133, "additivegaussianwrapp": 134, "distributionalqvalueactor": 135, "egreedywrapp": 136, "ornsteinuhlenbeckprocesswrapp": 137, "probabilisticactor": 138, "qvalueactor": 139, "safemodul": 140, "safeprobabilisticmodul": 141, "safeprobabilisticsequenti": 142, "safesequenti": 143, "valueoper": 144, "worldmodelwrapp": 145, "distributionalqvaluehook": 146, "qvaluehook": 147, "ensure_tensordict_compat": 148, "is_tensordict_compat": 149, "biased_softplu": 150, "inv_softplu": 151, "map": 152, "a2closs": 153, "clipppoloss": 154, "ddpgloss": 155, "dqnloss": 156, "distributionaldqnloss": 157, "dreameractorloss": 158, "dreamermodelloss": 159, "dreamervalueloss": 160, "hardupd": 161, "klpenppoloss": 162, "ppoloss": 163, "redqloss": 164, "reinforceloss": 165, "sacloss": 166, "softupd": 167, "distance_loss": 168, "hold_out_net": 169, "hold_out_param": 170, "next_state_valu": 171, "gae": 172, "tdestim": 173, "tdlambdaestim": 174, "generalized_advantage_estim": 175, "td_advantage_estim": 176, "td_lambda_advantage_estim": 177, "td_lambda_return_estim": 178, "vec_generalized_advantage_estim": 179, "vec_td_lambda_advantage_estim": 180, "vec_td_lambda_return_estim": 181, "tensordictrecord": 182, "videorecord": 183, "csvlogger": 184, "logger": [185, 231], "mlflowlogg": 186, "tensorboardlogg": 187, "wandblogg": 188, "generate_exp_nam": 189, "get_logg": 190, "batchsubsampl": 191, "clearcudacach": 192, "countframeslog": 193, "logreward": 194, "optimizerhook": 195, "replaybuffertrain": 197, "rewardnorm": 198, "selectkei": 199, "trainer": [200, 231], "trainerhookbas": 201, "updateweight": 202, "correct_for_frame_skip": 203, "get_stats_random_rollout": 204, "make_a2c_loss": 205, "make_a2c_model": 206, "make_collector_offpolici": 207, "make_collector_onpolici": 208, "make_ddpg_actor": 209, "make_ddpg_loss": 210, "make_dqn_actor": 211, "make_dqn_loss": 212, "make_ppo_loss": 213, "make_ppo_model": 214, "make_redq_loss": 215, "make_redq_model": 216, "make_replay_buff": 217, "make_sac_loss": 218, "make_sac_model": 219, "make_target_updat": 220, "make_train": 221, "parallel_env_constructor": 222, "sync_async_collector": 223, "sync_sync_collector": 224, "transformed_env_constructor": 225, "readm": [226, 236], "tuto": [226, 236], "api": 227, "contribut": [228, 242], "content": 228, "modul": [229, 234, 242], "tensordict": [229, 242], "hook": [229, 231], "planner": 229, "distribut": 229, "object": [230, 233, 242], "dqn": [230, 234], "ddpg": [230, 233], "sac": 230, "redq": 230, "ppo": [230, 235], "a2c": 230, "reinforc": [230, 235], "dreamer": 230, "checkpoint": 231, "builder": 231, "_util": 232, "code": [233, 234, 238], "import": 233, "parallel": [233, 237, 241], "execut": [233, 237, 238], "build": [233, 234], "evalu": 233, "hyperparamet": [233, 234, 235], "collect": [233, 234, 235], "initi": 233, "stat": 233, "q": [233, 234], "network": [233, 234, 235], "creation": 233, "time": [233, 240], "experi": [233, 238], "result": [233, 235], "sampl": 233, "td": [233, 234], "lambda": [233, 234], "pixel": 234, "paramet": [234, 235], "comput": [234, 238, 240], "deep": 234, "target": 234, "store": 234, "loop": [234, 235, 238], "regular": 234, "conclus": [234, 235, 238], "possibl": 234, "improv": 234, "defin": 235, "next": 235, "step": [235, 241], "multi": 237, "divers": 237, "rollout": [237, 238, 241], "pendulum": 238, "write": 238, "_step": 238, "reset": [238, 241], "simul": 238, "_reset": 238, "metadata": 238, "_spec": 238, "shape": 238, "seed": [238, 241], "wrap": 238, "togeth": 238, "class": [238, 242], "test": 238, "our": 238, "custom": 238, "batch": 238, "simpl": 238, "pretrain": 239, "frame_skip": 241, "deepmind": 241, "control": 241, "devic": 241, "run": 241, "close": 241, "access": 241, "attribut": 241, "kwarg": 241, "introduct": 242, "config": 242, "tensordictmodul": 242, "sequenc": 242, "program": 242, "ensembl": 242, "meta": 242, "special": 242, "state": 242}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials": [[0, "tutorials"]], "Basics": [[0, "basics"]], "Intermediate": [[0, "intermediate"]], "Advanced": [[0, "advanced"]], "References": [[0, "references"]], "Knowledge Base": [[0, "knowledge-base"], [228, "knowledge-base"]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers": [[2, "composable-replay-buffers"]], "Sotring trajectories": [[2, "sotring-trajectories"]], "TensorSpec": [[2, "tensorspec"], [30, "tensorspec"]], "Utils": [[2, "utils"], [229, "utils"], [230, "utils"], [231, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [233, "transforms"], [235, "transforms"], [242, "transforms"]], "Cloning transforms": [[3, "cloning-transforms"]], "Recorders": [[3, "recorders"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Things to consider when debugging RL": [[4, "things-to-consider-when-debugging-rl"]], "General": [[4, "general"]], "Have you validated your algorithm implementation on a few small, toy problems with known optimal returns e.g. gridworlds, mountaincar?": [[4, "have-you-validated-your-algorithm-implementation-on-a-few-small-toy-problems-with-known-optimal-returns-e-g-gridworlds-mountaincar"]], "Have you visualized your agents?": [[4, "have-you-visualized-your-agents"]], "Be very careful with any data augmentation.": [[4, "be-very-careful-with-any-data-augmentation"]], "Policy": [[4, "policy"], [235, "policy"], [237, "policy"]], "Does the entropy of your policy converge too quickly, too slowly or change drastically?": [[4, "does-the-entropy-of-your-policy-converge-too-quickly-too-slowly-or-change-drastically"]], "Rewards (beyond \u201cgoing up\u201d)": [[4, "rewards-beyond-going-up"]], "Is the agent favoring a single component of the reward function (i.e. velocity vs L2 action magnitude)?": [[4, "is-the-agent-favoring-a-single-component-of-the-reward-function-i-e-velocity-vs-l2-action-magnitude"]], "Is the task horizon extremely long?": [[4, "is-the-task-horizon-extremely-long"]], "Are your rewards normalized/standardized?": [[4, "are-your-rewards-normalized-standardized"]], "Exploration": [[4, "exploration"], [229, "exploration"]], "Is value loss going up early in training?": [[4, "is-value-loss-going-up-early-in-training"]], "Are actions (roughly) uniformly/normally random early in training?": [[4, "are-actions-roughly-uniformly-normally-random-early-in-training"]], "Are intrinsic rewards decaying as learning progresses in a singleton task?": [[4, "are-intrinsic-rewards-decaying-as-learning-progresses-in-a-singleton-task"]], "Are episodic intrinsic rewards remaining constant or increasing as learning progresses in an episodic task?": [[4, "are-episodic-intrinsic-rewards-remaining-constant-or-increasing-as-learning-progresses-in-an-episodic-task"]], "Environment Dynamics": [[4, "environment-dynamics"]], "Can you train a low entropy forward dynamics and/or reward model (also useful for offline RL)?": [[4, "can-you-train-a-low-entropy-forward-dynamics-and-or-reward-model-also-useful-for-offline-rl"]], "Observation Space": [[4, "observation-space"]], "Are your observations normalized/standardized?": [[4, "are-your-observations-normalized-standardized"]], "Action Space": [[4, "action-space"]], "Is the effect of an action changing dramatically during an episode?": [[4, "is-the-effect-of-an-action-changing-dramatically-during-an-episode"]], "Is the action space too high dimensional?": [[4, "is-the-action-space-too-high-dimensional"]], "Are your actions normalized/standardized?": [[4, "are-your-actions-normalized-standardized"]], "Working with gym": [[5, "working-with-gym"]], "What is OpenAI Gym?": [[5, "what-is-openai-gym"]], "Versioning": [[5, "versioning"]], "Working with habitat-lab": [[6, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[6, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[6, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[6, "installing-torchrl"]], "Using Habitat": [[6, "using-habitat"]], "Common issues": [[6, "common-issues"]], "About MuJoCo": [[7, "about-mujoco"]], "Installing MuJoCo": [[7, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[7, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[7, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[7, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[7, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[7, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[7, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips and Debugging": [[8, "pro-tips-and-debugging"]], "Gradient-related errors [Newcomers]": [[8, "gradient-related-errors-newcomers"]], "My Training is too slow [Newcomers / intermediate]": [[8, "my-training-is-too-slow-newcomers-intermediate"]], "Common bugs": [[8, "common-bugs"]], "Useful resources": [[9, "useful-resources"]], "Pytorch documentation": [[9, "pytorch-documentation"]], "functorch documentation": [[9, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[9, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[9, "educational-resource"]], "Forums": [[9, "forums"]], "Repos": [[9, "repos"]], "Versioning Issues": [[10, "versioning-issues"]], "Pytorch version": [[10, "pytorch-version"]], "How to reproduce": [[10, "how-to-reproduce"]], "Workarounds": [[10, "workarounds"]], "implement_for": [[11, "implement-for"]], "MultiSyncDataCollector": [[12, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[13, "multiasyncdatacollector"]], "RandomPolicy": [[14, "randompolicy"]], "SyncDataCollector": [[15, "syncdatacollector"]], "aSyncDataCollector": [[16, "asyncdatacollector"]], "split_trajectories": [[17, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[18, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[19, "boundedtensorspec"]], "CompositeSpec": [[20, "compositespec"]], "DiscreteTensorSpec": [[21, "discretetensorspec"]], "MultiDiscreteTensorSpec": [[22, "multidiscretetensorspec"]], "MultiOneHotDiscreteTensorSpec": [[23, "multionehotdiscretetensorspec"]], "MultiStep": [[24, "multistep"]], "OneHotDiscreteTensorSpec": [[25, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[26, "prioritizedreplaybuffer"]], "ReplayBuffer": [[27, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[28, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[29, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[31, "unboundedcontinuoustensorspec"]], "UnboundedDiscreteTensorSpec": [[32, "unboundeddiscretetensorspec"]], "PrioritizedSampler": [[33, "prioritizedsampler"]], "RandomSampler": [[34, "randomsampler"]], "Sampler": [[35, "sampler"]], "LazyMemmapStorage": [[36, "lazymemmapstorage"]], "LazyTensorStorage": [[37, "lazytensorstorage"]], "ListStorage": [[38, "liststorage"]], "Storage": [[39, "storage"]], "RoundRobinWriter": [[40, "roundrobinwriter"]], "Writer": [[41, "writer"]], "EnvBase": [[42, "envbase"]], "EnvCreator": [[43, "envcreator"]], "EnvMetaData": [[44, "envmetadata"]], "GymLikeEnv": [[45, "gymlikeenv"]], "ModelBasedEnvBase": [[46, "modelbasedenvbase"]], "MultiThreadedEnv": [[47, "multithreadedenv"]], "ParallelEnv": [[48, "parallelenv"]], "SerialEnv": [[49, "serialenv"]], "Specs": [[50, "specs"]], "BraxEnv": [[51, "braxenv"]], "BraxWrapper": [[52, "braxwrapper"]], "DMControlEnv": [[53, "dmcontrolenv"]], "DMControlWrapper": [[54, "dmcontrolwrapper"]], "GymEnv": [[55, "gymenv"]], "GymWrapper": [[56, "gymwrapper"]], "HabitatEnv": [[57, "habitatenv"]], "JumanjiEnv": [[58, "jumanjienv"]], "JumanjiWrapper": [[59, "jumanjiwrapper"]], "VmasEnv": [[60, "vmasenv"]], "VmasWrapper": [[61, "vmaswrapper"]], "DreamerEnv": [[62, "dreamerenv"]], "BinarizeReward": [[63, "binarizereward"]], "CatFrames": [[64, "catframes"]], "CatTensors": [[65, "cattensors"]], "CenterCrop": [[66, "centercrop"]], "Compose": [[67, "compose"]], "DiscreteActionProjection": [[68, "discreteactionprojection"]], "DoubleToFloat": [[69, "doubletofloat"]], "ExcludeTransform": [[70, "excludetransform"]], "FiniteTensorDictCheck": [[71, "finitetensordictcheck"]], "FlattenObservation": [[72, "flattenobservation"]], "FrameSkipTransform": [[73, "frameskiptransform"]], "GrayScale": [[74, "grayscale"]], "NoopResetEnv": [[75, "noopresetenv"]], "ObservationNorm": [[76, "observationnorm"]], "ObservationTransform": [[77, "observationtransform"]], "PinMemoryTransform": [[78, "pinmemorytransform"]], "R3MTransform": [[79, "r3mtransform"]], "RandomCropTensorDict": [[80, "randomcroptensordict"]], "Resize": [[81, "resize"]], "RewardClipping": [[82, "rewardclipping"]], "RewardScaling": [[83, "rewardscaling"]], "RewardSum": [[84, "rewardsum"]], "SelectTransform": [[85, "selecttransform"]], "SqueezeTransform": [[86, "squeezetransform"]], "StepCounter": [[87, "stepcounter"]], "TensorDictPrimer": [[88, "tensordictprimer"]], "TimeMaxPool": [[89, "timemaxpool"]], "ToTensorImage": [[90, "totensorimage"]], "Transform": [[91, "transform"]], "TransformedEnv": [[92, "transformedenv"]], "UnsqueezeTransform": [[93, "unsqueezetransform"]], "VIPRewardTransform": [[94, "viprewardtransform"]], "VIPTransform": [[95, "viptransform"]], "VecNorm": [[96, "vecnorm"], [241, "vecnorm"]], "gSDENoise": [[97, "gsdenoise"]], "check_env_specs": [[98, "check-env-specs"]], "exploration_mode": [[99, "exploration-mode"]], "get_available_libraries": [[100, "get-available-libraries"]], "set_exploration_mode": [[101, "set-exploration-mode"]], "step_mdp": [[102, "step-mdp"]], "CEMPlanner": [[103, "cemplanner"]], "ConvNet": [[104, "convnet"]], "DdpgCnnActor": [[105, "ddpgcnnactor"]], "DdpgCnnQNet": [[106, "ddpgcnnqnet"]], "DdpgMlpActor": [[107, "ddpgmlpactor"]], "DdpgMlpQNet": [[108, "ddpgmlpqnet"]], "Delta": [[109, "delta"]], "DistributionalDQNnet": [[110, "distributionaldqnnet"]], "DreamerActor": [[111, "dreameractor"]], "DuelingCnnDQNet": [[112, "duelingcnndqnet"]], "IndependentNormal": [[113, "independentnormal"]], "LSTMNet": [[114, "lstmnet"]], "MLP": [[115, "mlp"]], "MPCPlannerBase": [[116, "mpcplannerbase"]], "MPPIPlanner": [[117, "mppiplanner"]], "NoisyLazyLinear": [[118, "noisylazylinear"]], "NoisyLinear": [[119, "noisylinear"]], "NormalParamWrapper": [[120, "normalparamwrapper"]], "ObsDecoder": [[121, "obsdecoder"]], "ObsEncoder": [[122, "obsencoder"]], "OneHotCategorical": [[123, "onehotcategorical"]], "RSSMPosterior": [[124, "rssmposterior"]], "RSSMPrior": [[125, "rssmprior"]], "TanhDelta": [[126, "tanhdelta"]], "TanhNormal": [[127, "tanhnormal"]], "TruncatedNormal": [[128, "truncatednormal"]], "reset_noise": [[129, "reset-noise"]], "Actor": [[130, "actor"]], "ActorCriticOperator": [[131, "actorcriticoperator"]], "ActorCriticWrapper": [[132, "actorcriticwrapper"]], "ActorValueOperator": [[133, "actorvalueoperator"]], "AdditiveGaussianWrapper": [[134, "additivegaussianwrapper"]], "DistributionalQValueActor": [[135, "distributionalqvalueactor"]], "EGreedyWrapper": [[136, "egreedywrapper"]], "OrnsteinUhlenbeckProcessWrapper": [[137, "ornsteinuhlenbeckprocesswrapper"]], "ProbabilisticActor": [[138, "probabilisticactor"]], "QValueActor": [[139, "qvalueactor"]], "SafeModule": [[140, "safemodule"]], "SafeProbabilisticModule": [[141, "safeprobabilisticmodule"]], "SafeProbabilisticSequential": [[142, "safeprobabilisticsequential"]], "SafeSequential": [[143, "safesequential"]], "ValueOperator": [[144, "valueoperator"]], "WorldModelWrapper": [[145, "worldmodelwrapper"]], "DistributionalQValueHook": [[146, "distributionalqvaluehook"]], "QValueHook": [[147, "qvaluehook"]], "ensure_tensordict_compatible": [[148, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[149, "is-tensordict-compatible"]], "biased_softplus": [[150, "biased-softplus"]], "inv_softplus": [[151, "inv-softplus"]], "mappings": [[152, "mappings"]], "A2CLoss": [[153, "a2closs"]], "ClipPPOLoss": [[154, "clipppoloss"]], "DDPGLoss": [[155, "ddpgloss"]], "DQNLoss": [[156, "dqnloss"]], "DistributionalDQNLoss": [[157, "distributionaldqnloss"]], "DreamerActorLoss": [[158, "dreameractorloss"]], "DreamerModelLoss": [[159, "dreamermodelloss"]], "DreamerValueLoss": [[160, "dreamervalueloss"]], "HardUpdate": [[161, "hardupdate"]], "KLPENPPOLoss": [[162, "klpenppoloss"]], "PPOLoss": [[163, "ppoloss"]], "REDQLoss": [[164, "redqloss"]], "ReinforceLoss": [[165, "reinforceloss"]], "SACLoss": [[166, "sacloss"]], "SoftUpdate": [[167, "softupdate"]], "distance_loss": [[168, "distance-loss"]], "hold_out_net": [[169, "hold-out-net"]], "hold_out_params": [[170, "hold-out-params"]], "next_state_value": [[171, "next-state-value"]], "GAE": [[172, "gae"]], "TDEstimate": [[173, "tdestimate"]], "TDLambdaEstimate": [[174, "tdlambdaestimate"]], "generalized_advantage_estimate": [[175, "generalized-advantage-estimate"]], "td_advantage_estimate": [[176, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[177, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[178, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[179, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[180, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[181, "vec-td-lambda-return-estimate"]], "TensorDictRecorder": [[182, "tensordictrecorder"]], "VideoRecorder": [[183, "videorecorder"]], "CSVLogger": [[184, "csvlogger"]], "Logger": [[185, "logger"]], "MLFlowLogger": [[186, "mlflowlogger"]], "TensorboardLogger": [[187, "tensorboardlogger"]], "WandbLogger": [[188, "wandblogger"]], "generate_exp_name": [[189, "generate-exp-name"]], "get_logger": [[190, "get-logger"]], "BatchSubSampler": [[191, "batchsubsampler"]], "ClearCudaCache": [[192, "clearcudacache"]], "CountFramesLog": [[193, "countframeslog"]], "LogReward": [[194, "logreward"]], "OptimizerHook": [[195, "optimizerhook"]], "Recorder": [[196, "recorder"], [233, "recorder"]], "ReplayBufferTrainer": [[197, "replaybuffertrainer"]], "RewardNormalizer": [[198, "rewardnormalizer"]], "SelectKeys": [[199, "selectkeys"]], "Trainer": [[200, "trainer"]], "TrainerHookBase": [[201, "trainerhookbase"]], "UpdateWeights": [[202, "updateweights"]], "correct_for_frame_skip": [[203, "correct-for-frame-skip"]], "get_stats_random_rollout": [[204, "get-stats-random-rollout"]], "make_a2c_loss": [[205, "make-a2c-loss"]], "make_a2c_model": [[206, "make-a2c-model"]], "make_collector_offpolicy": [[207, "make-collector-offpolicy"]], "make_collector_onpolicy": [[208, "make-collector-onpolicy"]], "make_ddpg_actor": [[209, "make-ddpg-actor"]], "make_ddpg_loss": [[210, "make-ddpg-loss"]], "make_dqn_actor": [[211, "make-dqn-actor"]], "make_dqn_loss": [[212, "make-dqn-loss"]], "make_ppo_loss": [[213, "make-ppo-loss"]], "make_ppo_model": [[214, "make-ppo-model"]], "make_redq_loss": [[215, "make-redq-loss"]], "make_redq_model": [[216, "make-redq-model"]], "make_replay_buffer": [[217, "make-replay-buffer"]], "make_sac_loss": [[218, "make-sac-loss"]], "make_sac_model": [[219, "make-sac-model"]], "make_target_updater": [[220, "make-target-updater"]], "make_trainer": [[221, "make-trainer"]], "parallel_env_constructor": [[222, "parallel-env-constructor"]], "sync_async_collector": [[223, "sync-async-collector"]], "sync_sync_collector": [[224, "sync-sync-collector"]], "transformed_env_constructor": [[225, "transformed-env-constructor"]], "README Tutos": [[226, "readme-tutos"], [236, "readme-tutos"]], "API Reference": [[227, "api-reference"]], "Contributing": [[228, "contributing"], [242, "contributing"]], "Contents:": [[228, null]], "torchrl.modules package": [[229, "torchrl-modules-package"]], "TensorDict modules": [[229, "tensordict-modules"]], "Hooks": [[229, "hooks"]], "Models": [[229, "models"], [242, "models"]], "Planners": [[229, "planners"]], "Distributions": [[229, "distributions"]], "torchrl.objectives package": [[230, "torchrl-objectives-package"]], "DQN": [[230, "dqn"]], "DDPG": [[230, "ddpg"]], "SAC": [[230, "sac"]], "REDQ": [[230, "redq"]], "PPO": [[230, "ppo"]], "A2C": [[230, "a2c"]], "Reinforce": [[230, "reinforce"]], "Dreamer": [[230, "dreamer"]], "Returns": [[230, "returns"]], "torchrl.trainers package": [[231, "torchrl-trainers-package"]], "Checkpointing": [[231, "checkpointing"]], "Trainer and hooks": [[231, "trainer-and-hooks"]], "Builders": [[231, "builders"]], "Loggers": [[231, "loggers"]], "Recording utils": [[231, "recording-utils"]], "torchrl._utils package": [[232, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[233, "coding-ddpg-using-torchrl"]], "Imports": [[233, "imports"]], "Environment": [[233, "environment"], [233, "id1"]], "Normalization of the observations": [[233, "normalization-of-the-observations"]], "Parallel execution": [[233, "parallel-execution"]], "Building the model": [[233, "building-the-model"]], "Evaluator: building your recorder object": [[233, "evaluator-building-your-recorder-object"]], "Replay buffer": [[233, "replay-buffer"], [233, "id2"], [233, "id3"], [235, "replay-buffer"]], "Hyperparameters": [[233, "hyperparameters"], [234, "hyperparameters"]], "Collection": [[233, "collection"]], "Optimizer and optimization": [[233, "optimizer-and-optimization"]], "Model": [[233, "model"]], "Initialization": [[233, "initialization"]], "Normalization stats": [[233, "normalization-stats"]], "Models: policy and q-value network": [[233, "models-policy-and-q-value-network"]], "Parallel environment creation": [[233, "parallel-environment-creation"]], "Data collector": [[233, "data-collector"], [234, "data-collector"], [235, "data-collector"]], "Optimizer": [[233, "optimizer"], [234, "optimizer"]], "Time to train the policy": [[233, "time-to-train-the-policy"]], "Experiment results": [[233, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[233, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[234, "coding-a-pixel-based-dqn-using-torchrl"]], "DQN parameters": [[234, "dqn-parameters"]], "Data collection and replay buffer": [[234, "data-collection-and-replay-buffer"]], "Environment and exploration": [[234, "environment-and-exploration"]], "Building the environment": [[234, "building-the-environment"]], "Compute normalizing constants": [[234, "compute-normalizing-constants"]], "Building the model (Deep Q-network)": [[234, "building-the-model-deep-q-network"]], "Target parameters": [[234, "target-parameters"]], "Functionalizing modules": [[234, "functionalizing-modules"]], "Collecting and storing data": [[234, "collecting-and-storing-data"]], "Replay buffers": [[234, "replay-buffers"], [242, "replay-buffers"]], "Training loop of a regular DQN": [[234, "training-loop-of-a-regular-dqn"]], "DQN with TD(\\lambda)": [[234, "dqn-with-td-lambda"]], "Data: Replay buffer and collector": [[234, "data-replay-buffer-and-collector"]], "Training loop": [[234, "training-loop"], [235, "training-loop"], [238, "training-loop"]], "Conclusion and possible improvements": [[234, "conclusion-and-possible-improvements"]], "Reinforcement Learning (PPO) with TorchRL Tutorial": [[235, "reinforcement-learning-ppo-with-torchrl-tutorial"]], "Define Hyperparameters": [[235, "define-hyperparameters"]], "Data collection parameters": [[235, "data-collection-parameters"]], "PPO parameters": [[235, "ppo-parameters"]], "Define an environment": [[235, "define-an-environment"]], "Normalization": [[235, "normalization"]], "Value network": [[235, "value-network"]], "Loss function": [[235, "loss-function"]], "Results": [[235, "results"]], "Conclusion and next steps": [[235, "conclusion-and-next-steps"]], "Task-specific policy in multi-task environments": [[237, "task-specific-policy-in-multi-task-environments"]], "Executing diverse tasks in parallel": [[237, "executing-diverse-tasks-in-parallel"]], "Rollout": [[237, "rollout"]], "Pendulum: Writing your environment and transforms with TorchRL": [[238, "pendulum-writing-your-environment-and-transforms-with-torchrl"]], "Coding the effect of an action: torchrl.envs.EnvBase._step()": [[238, "coding-the-effect-of-an-action-torchrl-envs-envbase-step"]], "Resetting the simulator: torchrl.envs.EnvBase._reset()": [[238, "resetting-the-simulator-torchrl-envs-envbase-reset"]], "Environment metadata: env.*_spec": [[238, "environment-metadata-env-spec"]], "Specs shape": [[238, "specs-shape"]], "Reproducible experiments: seeding": [[238, "reproducible-experiments-seeding"]], "Wrapping things together: the torchrl.envs.EnvBase class": [[238, "wrapping-things-together-the-torchrl-envs-envbase-class"]], "Testing our environment": [[238, "testing-our-environment"]], "Transforming an environment": [[238, "transforming-an-environment"]], "Writing custom transforms": [[238, "writing-custom-transforms"]], "Executing a rollout": [[238, "executing-a-rollout"]], "Batching computations": [[238, "batching-computations"]], "Training a simple policy": [[238, "training-a-simple-policy"]], "Conclusion": [[238, "conclusion"]], "Using pretrained models": [[239, "using-pretrained-models"]], "Computation times": [[240, "computation-times"]], "TorchRL envs": [[241, "torchrl-envs"]], "Gym environments": [[241, "gym-environments"]], "Env Specs": [[241, "env-specs"]], "Seeding, resetting and steps": [[241, "seeding-resetting-and-steps"]], "Rollouts": [[241, "rollouts"]], "frame_skip": [[241, "frame-skip"]], "Rendering": [[241, "rendering"]], "DeepMind Control environments": [[241, "deepmind-control-environments"]], "Transforming envs": [[241, "transforming-envs"]], "Environment device": [[241, "environment-device"]], "Running environments in parallel": [[241, "running-environments-in-parallel"]], "Closing parallel environments": [[241, "closing-parallel-environments"]], "Seeding": [[241, "seeding"]], "Accessing environment attributes": [[241, "accessing-environment-attributes"]], "kwargs for parallel environments": [[241, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[241, "transforming-parallel-environments"]], "Introduction to TorchRL": [[242, "introduction-to-torchrl"]], "Data": [[242, "data"]], "TensorDict": [[242, "tensordict"]], "Envs": [[242, "envs"]], "Changing environments config": [[242, "changing-environments-config"]], "Vectorized Environments": [[242, "vectorized-environments"]], "Modules": [[242, "modules"]], "TensorDictModules": [[242, "tensordictmodules"]], "Sequences of Modules": [[242, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[242, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[242, "specialized-classes"]], "Using Environments and Modules": [[242, "using-environments-and-modules"]], "Collectors": [[242, "collectors"]], "Objectives": [[242, "objectives"]], "State of the Library": [[242, "state-of-the-library"]], "Installing the Library": [[242, "installing-the-library"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[11, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors.collectors)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors.collectors)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "randompolicy (class in torchrl.collectors.collectors)": [[14, "torchrl.collectors.collectors.RandomPolicy"]], "syncdatacollector (class in torchrl.collectors.collectors)": [[15, "torchrl.collectors.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors.collectors)": [[16, "torchrl.collectors.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[17, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[18, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "expand() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.expand"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[19, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.encode"]], "expand() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.expand"]], "index() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[20, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.encode"]], "expand() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.expand"]], "index() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[21, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.encode"]], "expand() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.expand"]], "index() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "to_one_hot() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.to_one_hot"]], "to_one_hot_spec() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.to_one_hot_spec"]], "type_check() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.zero"]], "multidiscretetensorspec (class in torchrl.data)": [[22, "torchrl.data.MultiDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.expand"]], "index() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.project"]], "rand() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.to_numpy"]], "to_one_hot() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.to_one_hot"]], "to_one_hot_spec() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.to_one_hot_spec"]], "type_check() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.zero"]], "multionehotdiscretetensorspec (class in torchrl.data)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.expand"]], "index() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.rand"]], "to_categorical() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_categorical"]], "to_categorical_spec() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_categorical_spec"]], "to_numpy() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[24, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_parameter"]], "register_state_dict_pre_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.zero_grad"]], "onehotdiscretetensorspec (class in torchrl.data)": [[25, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.expand"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_categorical() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.to_categorical"]], "to_categorical_spec() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.to_categorical_spec"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[26, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.sample"]], "replaybuffer (class in torchrl.data)": [[27, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.add"]], "append_transform() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data)": [[29, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[30, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.encode"]], "expand() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.expand"]], "index() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[31, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "expand() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.expand"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "unboundeddiscretetensorspec (class in torchrl.data)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.encode"]], "expand() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.expand"]], "index() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.index"]], "is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.is_in"]], "project() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.project"]], "rand() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.zero"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[33, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[33, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[35, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[36, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[36, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[37, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[38, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[39, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[39, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[41, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[41, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[41, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[42, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[42, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.parameters"]], "rand_action() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.rand_action"]], "rand_step() (torchrl.envs.envbase method)": [[42, "id0"], [42, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[42, "id1"], [42, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[42, "id2"], [42, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[42, "id3"], [42, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[42, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[42, "id4"], [42, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.zero_grad"]], "envcreator (class in torchrl.envs)": [[43, "torchrl.envs.EnvCreator"]], "envmetadata (class in torchrl.envs)": [[44, "torchrl.envs.EnvMetaData"]], "gymlikeenv (class in torchrl.envs)": [[45, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[45, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.parameters"]], "rand_action() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.rand_action"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[45, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[46, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[46, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[46, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[46, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[46, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[46, "torchrl.envs.step"]], "multithreadedenv (class in torchrl.envs)": [[47, "torchrl.envs.MultiThreadedEnv"]], "add_module() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.add_module"]], "apply() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.apply"]], "batch_locked (torchrl.envs.multithreadedenv property)": [[47, "torchrl.envs.MultiThreadedEnv.batch_locked"]], "bfloat16() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.bfloat16"]], "buffers() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.buffers"]], "children() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.children"]], "close() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.close"]], "cpu() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.cpu"]], "cuda() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.cuda"]], "double() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.double"]], "eval() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.eval"]], "extra_repr() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.fake_tensordict"]], "float() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.float"]], "forward() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.forward"]], "get_buffer() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.get_buffer"]], "get_extra_state() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.get_extra_state"]], "get_parameter() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.get_parameter"]], "get_submodule() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.get_submodule"]], "half() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.half"]], "ipu() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.ipu"]], "load_state_dict() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.load_state_dict"]], "modules() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.modules"]], "named_buffers() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.named_buffers"]], "named_children() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.named_children"]], "named_modules() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.named_modules"]], "named_parameters() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.named_parameters"]], "parameters() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.parameters"]], "rand_action() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.rand_action"]], "rand_step() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.rand_step"]], "register_backward_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_module"]], "register_parameter() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.requires_grad_"]], "reset() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.reset"]], "rollout() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.rollout"]], "set_extra_state() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.set_extra_state"]], "set_seed() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.set_seed"]], "share_memory() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.share_memory"]], "specs (torchrl.envs.multithreadedenv property)": [[47, "torchrl.envs.MultiThreadedEnv.specs"]], "state_dict() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.state_dict"]], "step() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.step"]], "to() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.to"]], "to_empty() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.to_empty"]], "train() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.train"]], "type() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.type"]], "xpu() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.xpu"]], "zero_grad() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.zero_grad"]], "parallelenv (class in torchrl.envs)": [[48, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[48, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.parameters"]], "rand_action() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.rand_action"]], "rand_step() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[48, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[49, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[49, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.parameters"]], "rand_action() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.rand_action"]], "rand_step() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[49, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.zero_grad"]], "specs (class in torchrl.envs)": [[50, "torchrl.envs.Specs"]], "build_tensordict() (torchrl.envs.specs method)": [[50, "torchrl.envs.Specs.build_tensordict"]], "braxenv() (in module torchrl.envs.libs.brax)": [[51, "torchrl.envs.libs.brax.BraxEnv"]], "braxwrapper() (in module torchrl.envs.libs.brax)": [[52, "torchrl.envs.libs.brax.BraxWrapper"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[53, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[54, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[55, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[56, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[57, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[58, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[59, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "vmasenv() (in module torchrl.envs.libs.vmas)": [[60, "torchrl.envs.libs.vmas.VmasEnv"]], "vmaswrapper() (in module torchrl.envs.libs.vmas)": [[61, "torchrl.envs.libs.vmas.VmasWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[62, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[63, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.CatFrames"]], "forward() (torchrl.envs.transforms.catframes method)": [[64, "torchrl.envs.transforms.CatFrames.forward"]], "reset() (torchrl.envs.transforms.catframes method)": [[64, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[64, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.CatTensors"]], "forward() (torchrl.envs.transforms.cattensors method)": [[65, "torchrl.envs.transforms.CatTensors.forward"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[65, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[66, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[67, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[67, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[67, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[67, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[67, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[67, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "discreteactionprojection (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.DiscreteActionProjection"]], "transform_input_spec() (torchrl.envs.transforms.discreteactionprojection method)": [[68, "torchrl.envs.transforms.DiscreteActionProjection.transform_input_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[69, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[69, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[69, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "excludetransform (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.ExcludeTransform"]], "forward() (torchrl.envs.transforms.excludetransform method)": [[70, "torchrl.envs.transforms.ExcludeTransform.forward"]], "reset() (torchrl.envs.transforms.excludetransform method)": [[70, "torchrl.envs.transforms.ExcludeTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.excludetransform method)": [[70, "torchrl.envs.transforms.ExcludeTransform.transform_observation_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "forward() (torchrl.envs.transforms.finitetensordictcheck method)": [[71, "torchrl.envs.transforms.FiniteTensorDictCheck.forward"]], "flattenobservation (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.FlattenObservation"]], "forward() (torchrl.envs.transforms.flattenobservation method)": [[72, "torchrl.envs.transforms.FlattenObservation.forward"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[72, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "frameskiptransform (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.FrameSkipTransform"]], "forward() (torchrl.envs.transforms.frameskiptransform method)": [[73, "torchrl.envs.transforms.FrameSkipTransform.forward"]], "grayscale (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[74, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[75, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[76, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_input_spec() (torchrl.envs.transforms.observationnorm method)": [[76, "torchrl.envs.transforms.ObservationNorm.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[76, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.PinMemoryTransform"]], "forward() (torchrl.envs.transforms.pinmemorytransform method)": [[78, "torchrl.envs.transforms.PinMemoryTransform.forward"]], "r3mtransform (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.R3MTransform"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[79, "torchrl.envs.transforms.R3MTransform.to"]], "randomcroptensordict (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.RandomCropTensorDict"]], "forward() (torchrl.envs.transforms.randomcroptensordict method)": [[80, "torchrl.envs.transforms.RandomCropTensorDict.forward"]], "resize (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[81, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[82, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[82, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[83, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[83, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "rewardsum (class in torchrl.envs.transforms)": [[84, "torchrl.envs.transforms.RewardSum"]], "reset() (torchrl.envs.transforms.rewardsum method)": [[84, "torchrl.envs.transforms.RewardSum.reset"]], "transform_observation_spec() (torchrl.envs.transforms.rewardsum method)": [[84, "torchrl.envs.transforms.RewardSum.transform_observation_spec"]], "selecttransform (class in torchrl.envs.transforms)": [[85, "torchrl.envs.transforms.SelectTransform"]], "forward() (torchrl.envs.transforms.selecttransform method)": [[85, "torchrl.envs.transforms.SelectTransform.forward"]], "reset() (torchrl.envs.transforms.selecttransform method)": [[85, "torchrl.envs.transforms.SelectTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.selecttransform method)": [[85, "torchrl.envs.transforms.SelectTransform.transform_observation_spec"]], "squeezetransform (class in torchrl.envs.transforms)": [[86, "torchrl.envs.transforms.SqueezeTransform"]], "stepcounter (class in torchrl.envs.transforms)": [[87, "torchrl.envs.transforms.StepCounter"]], "forward() (torchrl.envs.transforms.stepcounter method)": [[87, "torchrl.envs.transforms.StepCounter.forward"]], "reset() (torchrl.envs.transforms.stepcounter method)": [[87, "torchrl.envs.transforms.StepCounter.reset"]], "transform_input_spec() (torchrl.envs.transforms.stepcounter method)": [[87, "torchrl.envs.transforms.StepCounter.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.stepcounter method)": [[87, "torchrl.envs.transforms.StepCounter.transform_observation_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[88, "torchrl.envs.transforms.TensorDictPrimer"]], "forward() (torchrl.envs.transforms.tensordictprimer method)": [[88, "torchrl.envs.transforms.TensorDictPrimer.forward"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[88, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[88, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[88, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "timemaxpool (class in torchrl.envs.transforms)": [[89, "torchrl.envs.transforms.TimeMaxPool"]], "forward() (torchrl.envs.transforms.timemaxpool method)": [[89, "torchrl.envs.transforms.TimeMaxPool.forward"]], "reset() (torchrl.envs.transforms.timemaxpool method)": [[89, "torchrl.envs.transforms.TimeMaxPool.reset"]], "transform_observation_spec() (torchrl.envs.transforms.timemaxpool method)": [[89, "torchrl.envs.transforms.TimeMaxPool.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[90, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[90, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[91, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[91, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[91, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[91, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[91, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[91, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[92, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[92, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[92, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[92, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[92, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[92, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[92, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[92, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[92, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[92, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[92, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[92, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[93, "torchrl.envs.transforms.UnsqueezeTransform"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[93, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[93, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[93, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[94, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[94, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[94, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[95, "torchrl.envs.transforms.VIPTransform"]], "to() (torchrl.envs.transforms.viptransform method)": [[95, "torchrl.envs.transforms.VIPTransform.to"]], "vecnorm (class in torchrl.envs.transforms)": [[96, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[96, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "forward() (torchrl.envs.transforms.vecnorm method)": [[96, "torchrl.envs.transforms.VecNorm.forward"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[96, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[96, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[96, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[97, "torchrl.envs.transforms.gSDENoise"]], "check_env_specs() (in module torchrl.envs.utils)": [[98, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[99, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[100, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[101, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[102, "torchrl.envs.utils.step_mdp"]], "cemplanner (class in torchrl.modules)": [[103, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[103, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[104, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[104, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[105, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[105, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[106, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[106, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[107, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[107, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[108, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[108, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[109, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[109, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[109, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[109, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[109, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[109, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[110, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[110, "torchrl.modules.DistributionalDQNnet.forward"]], "dreameractor (class in torchrl.modules)": [[111, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[111, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[112, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[112, "torchrl.modules.DuelingCnnDQNet.forward"]], "independentnormal (class in torchrl.modules)": [[113, "torchrl.modules.IndependentNormal"]], "mode (torchrl.modules.independentnormal property)": [[113, "torchrl.modules.IndependentNormal.mode"]], "lstmnet (class in torchrl.modules)": [[114, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[114, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[115, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[115, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[116, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[116, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[116, "torchrl.modules.MPCPlannerBase.planning"]], "mppiplanner (class in torchrl.modules)": [[117, "torchrl.modules.MPPIPlanner"]], "planning() (torchrl.modules.mppiplanner method)": [[117, "torchrl.modules.MPPIPlanner.planning"]], "noisylazylinear (class in torchrl.modules)": [[118, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[118, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[119, "torchrl.modules.NoisyLinear"]], "normalparamwrapper (class in torchrl.modules)": [[120, "torchrl.modules.NormalParamWrapper"]], "forward() (torchrl.modules.normalparamwrapper method)": [[120, "torchrl.modules.NormalParamWrapper.forward"]], "obsdecoder (class in torchrl.modules)": [[121, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[121, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[122, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[122, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[123, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[123, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[123, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[123, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[123, "torchrl.modules.OneHotCategorical.sample"]], "rssmposterior (class in torchrl.modules)": [[124, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[124, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[125, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[125, "torchrl.modules.RSSMPrior.forward"]], "tanhdelta (class in torchrl.modules)": [[126, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[126, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[126, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[127, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[127, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[128, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[128, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[128, "torchrl.modules.TruncatedNormal.mode"]], "reset_noise (class in torchrl.modules)": [[129, "torchrl.modules.reset_noise"]], "actor (class in torchrl.modules.tensordict_module)": [[130, "torchrl.modules.tensordict_module.Actor"]], "actorcriticoperator (class in torchrl.modules.tensordict_module)": [[131, "torchrl.modules.tensordict_module.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[131, "torchrl.modules.tensordict_module.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[131, "torchrl.modules.tensordict_module.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules.tensordict_module)": [[132, "torchrl.modules.tensordict_module.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[132, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[132, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules.tensordict_module)": [[133, "torchrl.modules.tensordict_module.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[133, "torchrl.modules.tensordict_module.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[133, "torchrl.modules.tensordict_module.ActorValueOperator.get_value_operator"]], "additivegaussianwrapper (class in torchrl.modules.tensordict_module)": [[134, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper"]], "forward() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[134, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.forward"]], "step() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[134, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.step"]], "distributionalqvalueactor (class in torchrl.modules.tensordict_module)": [[135, "torchrl.modules.tensordict_module.DistributionalQValueActor"]], "egreedywrapper (class in torchrl.modules.tensordict_module)": [[136, "torchrl.modules.tensordict_module.EGreedyWrapper"]], "forward() (torchrl.modules.tensordict_module.egreedywrapper method)": [[136, "torchrl.modules.tensordict_module.EGreedyWrapper.forward"]], "step() (torchrl.modules.tensordict_module.egreedywrapper method)": [[136, "torchrl.modules.tensordict_module.EGreedyWrapper.step"]], "ornsteinuhlenbeckprocesswrapper (class in torchrl.modules.tensordict_module)": [[137, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper"]], "forward() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[137, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.forward"]], "step() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[137, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.step"]], "probabilisticactor (class in torchrl.modules.tensordict_module)": [[138, "torchrl.modules.tensordict_module.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules.tensordict_module)": [[139, "torchrl.modules.tensordict_module.QValueActor"]], "safemodule (class in torchrl.modules.tensordict_module)": [[140, "torchrl.modules.tensordict_module.SafeModule"]], "random() (torchrl.modules.tensordict_module.safemodule method)": [[140, "torchrl.modules.tensordict_module.SafeModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safemodule method)": [[140, "torchrl.modules.tensordict_module.SafeModule.random_sample"]], "to() (torchrl.modules.tensordict_module.safemodule method)": [[140, "torchrl.modules.tensordict_module.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules.tensordict_module)": [[141, "torchrl.modules.tensordict_module.SafeProbabilisticModule"]], "random() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[141, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[141, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random_sample"]], "safeprobabilisticsequential (class in torchrl.modules.tensordict_module)": [[142, "torchrl.modules.tensordict_module.SafeProbabilisticSequential"]], "safesequential (class in torchrl.modules.tensordict_module)": [[143, "torchrl.modules.tensordict_module.SafeSequential"]], "valueoperator (class in torchrl.modules.tensordict_module)": [[144, "torchrl.modules.tensordict_module.ValueOperator"]], "worldmodelwrapper (class in torchrl.modules.tensordict_module)": [[145, "torchrl.modules.tensordict_module.WorldModelWrapper"]], "get_reward_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[145, "torchrl.modules.tensordict_module.WorldModelWrapper.get_reward_operator"]], "get_transition_model_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[145, "torchrl.modules.tensordict_module.WorldModelWrapper.get_transition_model_operator"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[146, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[147, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[148, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[149, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[150, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[150, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[151, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[152, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[153, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[153, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[154, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[154, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[155, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[155, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[156, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[156, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[157, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[157, "torchrl.objectives.DistributionalDQNLoss.forward"]], "dreameractorloss (class in torchrl.objectives)": [[158, "torchrl.objectives.DreamerActorLoss"]], "forward() (torchrl.objectives.dreameractorloss method)": [[158, "torchrl.objectives.DreamerActorLoss.forward"]], "dreamermodelloss (class in torchrl.objectives)": [[159, "torchrl.objectives.DreamerModelLoss"]], "forward() (torchrl.objectives.dreamermodelloss method)": [[159, "torchrl.objectives.DreamerModelLoss.forward"]], "dreamervalueloss (class in torchrl.objectives)": [[160, "torchrl.objectives.DreamerValueLoss"]], "forward() (torchrl.objectives.dreamervalueloss method)": [[160, "torchrl.objectives.DreamerValueLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[161, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[162, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[162, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[163, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[163, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[164, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[164, "torchrl.objectives.REDQLoss.forward"]], "reinforceloss (class in torchrl.objectives)": [[165, "torchrl.objectives.ReinforceLoss"]], "forward() (torchrl.objectives.reinforceloss method)": [[165, "torchrl.objectives.ReinforceLoss.forward"]], "sacloss (class in torchrl.objectives)": [[166, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[166, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[167, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[168, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[169, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[170, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[171, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[172, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[172, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[173, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[173, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[174, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[174, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[175, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[176, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[177, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[178, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[179, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[180, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[181, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "tensordictrecorder() (in module torchrl.record)": [[182, "torchrl.record.TensorDictRecorder"]], "videorecorder() (in module torchrl.record)": [[183, "torchrl.record.VideoRecorder"]], "csvlogger() (in module torchrl.record.loggers)": [[184, "torchrl.record.loggers.CSVLogger"]], "logger() (in module torchrl.record.loggers)": [[185, "torchrl.record.loggers.Logger"]], "mlflowlogger() (in module torchrl.record.loggers)": [[186, "torchrl.record.loggers.MLFlowLogger"]], "tensorboardlogger() (in module torchrl.record.loggers)": [[187, "torchrl.record.loggers.TensorboardLogger"]], "wandblogger() (in module torchrl.record.loggers)": [[188, "torchrl.record.loggers.WandbLogger"]], "generate_exp_name() (in module torchrl.record.loggers)": [[189, "torchrl.record.loggers.generate_exp_name"]], "get_logger() (in module torchrl.record.loggers)": [[190, "torchrl.record.loggers.get_logger"]], "batchsubsampler (class in torchrl.trainers)": [[191, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[192, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[193, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[194, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[195, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[196, "torchrl.trainers.Recorder"]], "replaybuffertrainer (class in torchrl.trainers)": [[197, "torchrl.trainers.ReplayBufferTrainer"]], "rewardnormalizer (class in torchrl.trainers)": [[198, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[199, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[200, "torchrl.trainers.Trainer"]], "trainerhookbase (class in torchrl.trainers)": [[201, "torchrl.trainers.TrainerHookBase"]], "updateweights (class in torchrl.trainers)": [[202, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[203, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[204, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[205, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[206, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[207, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[208, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[209, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[210, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[211, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[212, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[213, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[214, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[215, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[216, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[217, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[218, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[219, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[220, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[221, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[222, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[223, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[224, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[225, "torchrl.trainers.helpers.transformed_env_constructor"]]}})