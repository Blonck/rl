Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.Specs", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.CSVLogger", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.MLFlowLogger", "reference/generated/torchrl.record.loggers.TensorboardLogger", "reference/generated/torchrl.record.loggers.WandbLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/index", "tutorials/multi_task", "tutorials/pretrained_models", "tutorials/sg_execution_times", "tutorials/tensordict_module", "tutorials/tensordict_tutorial", "tutorials/torch_envs", "tutorials/torchrl_demo"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.Specs.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.CSVLogger.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.WandbLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/pretrained_models.rst", "tutorials/sg_execution_times.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_tutorial.rst", "tutorials/torch_envs.rst", "tutorials/torchrl_demo.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips and Debugging", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "Specs", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "RSSMPosterior", "RSSMPrior", "TanhDelta", "TanhNormal", "TruncatedNormal", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DistributionalQValueActor", "EGreedyWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticSequential", "SafeSequential", "ValueOperator", "WorldModelWrapper", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "CSVLogger", "Logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "generate_exp_name", "get_logger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "README Tutos", "Task-specific policy in multi-task environments", "Using pretrained models", "Computation times", "TensorDictModule", "TensorDict", "TorchRL envs", "Introduction to TorchRL"], "terms": {"The": [0, 1, 2, 3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 41, 44, 46, 47, 48, 66, 69, 75, 78, 81, 83, 86, 90, 93, 101, 103, 104, 105, 106, 112, 114, 115, 117, 118, 122, 123, 128, 129, 135, 136, 138, 139, 141, 142, 143, 148, 152, 153, 154, 156, 157, 158, 160, 164, 169, 170, 171, 172, 182, 184, 185, 186, 189, 193, 218, 220, 221, 228, 230, 234, 236, 237, 238, 239], "tensordict": [0, 1, 3, 11, 12, 14, 15, 16, 19, 20, 21, 23, 27, 28, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 112, 114, 115, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 169, 170, 171, 172, 180, 189, 193, 195, 197, 198, 203, 206, 208, 211, 213, 216, 224, 228, 230, 231, 232, 233, 234, 235, 236, 238], "class": [0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 220, 221, 222, 228, 230, 231, 236, 237, 238], "ha": [0, 4, 6, 7, 9, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 42, 44, 46, 47, 48, 63, 86, 90, 132, 134, 139, 160, 230, 231, 233, 234, 236, 237, 238, 239], "been": [0, 4, 6, 7, 11, 12, 15, 41, 44, 46, 47, 48, 89, 231, 233, 238], "move": [0, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 94, 113, 138, 196, 231, 238, 239], "out": [0, 3, 4, 23, 41, 44, 46, 47, 48, 86, 96, 116, 117, 135, 138, 139, 167, 168, 228, 236, 237, 238, 239], "dedic": [0, 129, 130, 131, 230, 233], "librari": [0, 4, 5, 6, 7, 8, 9, 46, 98, 224, 225, 229, 230, 238], "take": [0, 1, 3, 7, 16, 41, 44, 46, 47, 48, 85, 87, 89, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 150, 173, 174, 175, 176, 177, 178, 179, 189, 199, 228, 230, 231, 236, 238], "look": [0, 4, 6, 7, 23, 41, 44, 46, 47, 48, 78, 139, 140, 141, 231, 234, 236, 238, 239], "find": [0, 5, 132, 134, 236], "sourc": [0, 1, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 230, 231, 232, 233, 234, 236, 237, 238, 239], "code": [0, 3, 4, 6, 7, 78, 141, 232, 233, 234, 235, 236, 238, 239], "github": [0, 2, 4, 5, 6, 9, 230, 231, 234, 239], "i": [0, 1, 2, 3, 5, 6, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 52, 62, 63, 64, 65, 66, 67, 69, 71, 74, 75, 78, 81, 82, 83, 85, 86, 88, 89, 90, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 123, 124, 125, 126, 128, 129, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 189, 191, 192, 193, 194, 195, 196, 198, 200, 201, 203, 206, 211, 213, 216, 218, 222, 225, 228, 230, 231, 233, 234, 236, 238, 239], "an": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 65, 67, 70, 74, 75, 78, 79, 86, 88, 89, 90, 94, 96, 102, 103, 104, 105, 106, 112, 113, 114, 116, 120, 129, 130, 131, 135, 138, 139, 140, 143, 146, 147, 150, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 170, 171, 172, 181, 187, 193, 194, 198, 201, 206, 219, 220, 221, 222, 225, 230, 231, 233, 234, 236, 237, 238, 239], "open": [0, 4, 6, 10, 239], "reinforc": [0, 2, 3, 8, 63, 103, 104, 105, 106, 135, 144, 151, 155, 159, 163, 164, 165, 206, 224, 231, 239], "learn": [0, 2, 3, 6, 7, 8, 23, 63, 103, 104, 105, 106, 115, 117, 135, 144, 151, 155, 159, 162, 163, 164, 165, 206, 230, 231, 233, 238, 239], "rl": [0, 1, 2, 3, 4, 7, 9, 11, 12, 14, 15, 45, 117, 128, 136, 142, 151, 161, 189, 225, 228, 230, 231, 234, 236, 237, 238], "pytorch": [0, 1, 2, 7, 88, 198, 228, 230, 234, 237, 238, 239], "It": [0, 2, 3, 6, 23, 27, 41, 44, 45, 46, 47, 48, 56, 75, 90, 96, 103, 105, 109, 122, 123, 135, 139, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 169, 170, 194, 213, 225, 230, 234, 236, 237, 238, 239], "provid": [0, 2, 3, 4, 7, 8, 14, 17, 21, 22, 23, 24, 25, 26, 27, 41, 44, 45, 46, 47, 48, 64, 65, 71, 74, 75, 78, 82, 86, 90, 93, 94, 102, 112, 113, 114, 128, 132, 134, 136, 144, 164, 169, 170, 171, 172, 181, 188, 189, 195, 201, 203, 211, 213, 216, 218, 225, 228, 230, 231, 233, 234, 236, 238, 239], "python": [0, 3, 4, 5, 6, 9, 228, 230, 231, 232, 233, 234, 236, 238, 239], "first": [0, 1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 44, 64, 71, 75, 78, 88, 90, 113, 116, 120, 138, 139, 157, 180, 197, 230, 231, 233, 234, 236, 237, 238, 239], "low": [0, 67, 230, 231, 239], "high": [0, 8, 67, 170, 173, 174, 177, 230, 231, 239], "level": [0, 19, 160, 230, 231, 239], "abstract": [0, 7, 18, 19, 20, 21, 29, 30, 31, 40, 41, 76, 114, 228, 237, 239], "ar": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 14, 15, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 66, 67, 68, 70, 71, 78, 82, 86, 89, 90, 91, 93, 94, 100, 101, 106, 107, 112, 114, 117, 121, 123, 135, 138, 139, 140, 141, 150, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 195, 218, 222, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239], "intend": [0, 6, 11, 12, 14, 15, 67, 239], "effici": [0, 2, 7, 117, 230, 231, 233, 234, 237, 239], "modular": [0, 141, 239], "properli": [0, 237, 239], "test": [0, 3, 4, 96, 112, 194, 218, 236, 239], "aim": [0, 3, 6, 78, 93, 113, 200, 225, 230, 231, 239], "support": [0, 3, 19, 38, 46, 75, 89, 98, 133, 138, 141, 144, 155, 170, 171, 172, 184, 228, 236, 237, 239], "research": [0, 6, 8, 239], "most": [0, 3, 6, 7, 23, 67, 230, 231, 239], "written": [0, 3, 35, 41, 44, 46, 47, 48, 63, 82, 87, 135, 138, 139, 151, 152, 160, 161, 169, 180, 181, 228, 230, 233, 236, 239], "highli": [0, 2, 238, 239], "wai": [0, 3, 78, 93, 161, 231, 233, 234, 238, 239], "can": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 41, 42, 44, 46, 47, 48, 63, 66, 67, 74, 75, 78, 82, 86, 89, 90, 93, 94, 101, 111, 114, 115, 117, 118, 125, 126, 132, 138, 139, 140, 141, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 169, 170, 171, 172, 194, 203, 211, 213, 216, 220, 221, 222, 225, 228, 230, 231, 233, 234, 236, 238, 239], "easili": [0, 3, 6, 47, 48, 203, 211, 213, 216, 231, 237, 238, 239], "swap": [0, 3, 234, 239], "compon": [0, 2, 3, 35, 36, 37, 38, 144, 145, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 193, 198, 233, 234, 236, 239], "transform": [0, 7, 23, 25, 26, 27, 28, 42, 44, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 103, 109, 144, 145, 148, 150, 181, 195, 203, 206, 208, 211, 213, 216, 222, 224, 231, 234], "them": [0, 6, 25, 26, 27, 28, 41, 42, 44, 46, 47, 48, 49, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 160, 181, 230, 231, 233, 234, 236, 237, 238, 239], "write": [0, 7, 23, 44, 77, 138, 139, 141, 153, 154, 162, 164, 169, 181, 228, 230, 231, 233, 234, 236, 237, 239], "new": [0, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 41, 44, 46, 47, 48, 82, 89, 94, 100, 135, 138, 139, 143, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 230, 231, 236, 237, 238, 239], "ones": [0, 19, 23, 41, 44, 46, 47, 48, 64, 66, 68, 75, 78, 86, 90, 93, 138, 230, 237, 238, 239], "littl": [0, 3, 238, 239], "effort": [0, 3, 239], "thi": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 41, 44, 45, 46, 47, 48, 49, 56, 63, 64, 66, 67, 70, 72, 75, 78, 82, 83, 86, 87, 89, 90, 92, 93, 94, 96, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 170, 171, 172, 180, 189, 191, 194, 195, 198, 199, 200, 201, 203, 211, 213, 216, 218, 222, 225, 228, 230, 231, 233, 234, 236, 238, 239], "repo": [0, 5, 225, 239], "attempt": [0, 132, 134, 239], "align": [0, 239], "exist": [0, 23, 41, 44, 46, 47, 48, 64, 90, 201, 222, 236, 238, 239], "ecosystem": [0, 239], "dataset": [0, 25, 26, 27, 94, 234, 237, 238, 239], "pillar": [0, 239], "environ": [0, 1, 2, 3, 4, 7, 10, 11, 12, 14, 15, 23, 24, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 67, 68, 72, 74, 75, 78, 85, 89, 90, 94, 96, 101, 112, 114, 115, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 189, 191, 194, 200, 201, 203, 204, 205, 206, 208, 211, 213, 216, 218, 219, 220, 221, 222, 225, 232, 234, 235], "model": [0, 1, 3, 7, 8, 11, 12, 14, 15, 23, 41, 44, 45, 46, 47, 48, 78, 86, 93, 95, 102, 113, 114, 115, 129, 130, 131, 138, 143, 151, 156, 157, 158, 161, 162, 164, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 224, 225, 228, 232, 235, 236, 238], "data": [0, 3, 7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 75, 96, 101, 112, 115, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 153, 162, 164, 170, 171, 172, 189, 195, 198, 199, 204, 218, 220, 221, 222, 224, 228, 231, 234, 236, 237, 238], "util": [0, 3, 11, 12, 14, 15, 16, 23, 41, 44, 46, 47, 48, 78, 93, 96, 97, 98, 99, 100, 102, 148, 149, 150, 218, 224, 229, 230, 231, 236, 238, 239], "e": [0, 1, 3, 7, 9, 10, 11, 12, 14, 15, 19, 23, 24, 35, 36, 41, 42, 44, 46, 47, 48, 64, 66, 71, 75, 78, 82, 86, 89, 90, 93, 96, 111, 115, 118, 125, 126, 138, 139, 145, 169, 170, 171, 172, 189, 200, 221, 230, 231, 234, 237, 238, 239], "g": [0, 1, 3, 7, 9, 10, 23, 24, 41, 42, 44, 46, 47, 48, 64, 66, 71, 75, 78, 82, 86, 89, 90, 93, 96, 111, 115, 125, 126, 138, 139, 169, 175, 176, 178, 179, 221, 230, 231, 234, 238, 239], "collector": [0, 3, 11, 12, 13, 14, 15, 16, 135, 195, 198, 199, 204, 205, 218, 220, 221, 224, 228, 231, 238, 239], "contain": [0, 3, 6, 11, 12, 14, 15, 19, 23, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 66, 68, 78, 86, 90, 93, 94, 100, 101, 102, 113, 115, 138, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 169, 170, 171, 172, 188, 189, 200, 203, 206, 208, 211, 213, 216, 218, 219, 220, 221, 222, 228, 231, 234, 236, 238, 239], "etc": [0, 3, 6, 7, 10, 23, 30, 31, 41, 44, 46, 47, 48, 90, 113, 230, 237, 238, 239], "have": [0, 3, 4, 5, 6, 7, 11, 12, 15, 19, 21, 23, 38, 41, 44, 46, 47, 48, 49, 63, 74, 75, 86, 89, 90, 94, 96, 102, 112, 113, 140, 141, 152, 160, 161, 166, 189, 198, 228, 230, 231, 233, 234, 236, 237, 238, 239], "few": [0, 2, 7, 189, 231, 238, 239], "depend": [0, 3, 6, 7, 142, 161, 238, 239], "possibl": [0, 3, 20, 23, 24, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 194, 198, 230, 236, 237, 238, 239], "standard": [0, 75, 81, 94, 101, 109, 115, 116, 117, 132, 170, 171, 172, 230, 231, 239], "numpi": [0, 10, 14, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 88, 198, 230, 231, 238, 239], "common": [0, 3, 44, 47, 48, 129, 130, 131, 146, 147, 218, 225, 228, 230, 233, 234, 236, 237, 238, 239], "openai": [0, 6, 54, 55, 238, 239], "gym": [0, 3, 7, 10, 11, 12, 14, 42, 44, 54, 55, 75, 86, 94, 203, 206, 208, 211, 213, 216, 218, 225, 230, 231, 234, 239], "onli": [0, 1, 3, 6, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 41, 44, 46, 47, 48, 49, 64, 66, 67, 71, 75, 78, 86, 90, 93, 94, 112, 138, 139, 140, 141, 201, 228, 230, 231, 233, 236, 238, 239], "option": [0, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 35, 36, 41, 42, 44, 45, 46, 47, 48, 49, 52, 59, 61, 62, 63, 64, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 132, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 153, 154, 156, 157, 158, 162, 163, 164, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 184, 189, 191, 192, 193, 194, 195, 196, 198, 201, 203, 204, 205, 206, 207, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 230, 231, 239], "On": [0, 6, 231, 237], "end": [0, 23, 25, 26, 27, 28, 41, 44, 46, 47, 48, 90, 102, 114, 173, 174, 175, 176, 177, 178, 179, 230, 233, 234, 238, 239], "come": [0, 1, 3, 7, 47, 48, 128, 129, 130, 131, 136, 142, 230, 236, 238, 239], "set": [0, 1, 2, 3, 6, 8, 11, 12, 14, 15, 23, 24, 25, 26, 27, 28, 38, 41, 43, 44, 45, 46, 47, 48, 64, 66, 78, 85, 86, 90, 93, 96, 99, 114, 132, 138, 189, 194, 195, 205, 222, 225, 229, 230, 231, 233, 234, 238, 239], "re": [0, 3, 7, 23, 41, 44, 46, 47, 48, 139, 228, 231, 233, 236, 238, 239], "usabl": [0, 228, 239], "function": [0, 3, 7, 10, 16, 23, 35, 36, 37, 38, 41, 42, 44, 46, 47, 48, 68, 90, 94, 96, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 118, 119, 120, 121, 122, 123, 126, 129, 130, 131, 132, 134, 135, 138, 139, 141, 142, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 203, 206, 208, 211, 213, 216, 218, 224, 230, 231, 233, 236, 237, 238], "cost": [0, 2, 20, 231], "return": [0, 3, 6, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 97, 98, 100, 101, 103, 104, 105, 106, 107, 111, 112, 113, 114, 115, 118, 121, 122, 123, 124, 125, 126, 129, 130, 131, 133, 137, 138, 139, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 175, 176, 178, 179, 198, 200, 203, 204, 206, 208, 211, 213, 216, 218, 219, 220, 221, 222, 224, 228, 230, 231, 233, 234, 236, 237, 238, 239], "process": [0, 1, 2, 3, 4, 7, 11, 12, 15, 42, 46, 47, 48, 94, 135, 228, 230, 231, 234, 238, 239], "good": [0, 1, 8, 238, 239], "runtim": [0, 3, 23, 41, 44, 46, 47, 48], "perform": [0, 3, 7, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 74, 90, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 118, 119, 120, 122, 123, 132, 134, 135, 148, 157, 161, 194, 198, 230, 231, 233, 237, 238], "introduct": [0, 232, 235, 238], "env": [0, 1, 2, 4, 5, 6, 7, 11, 12, 14, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 114, 115, 138, 180, 201, 203, 204, 205, 206, 208, 211, 213, 216, 218, 220, 221, 222, 224, 230, 231, 232, 233, 234, 235], "modul": [0, 3, 7, 10, 23, 41, 44, 45, 46, 47, 48, 66, 67, 78, 86, 90, 93, 94, 95, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 159, 162, 163, 165, 167, 170, 171, 172, 198, 202, 207, 209, 210, 212, 215, 218, 224, 228, 230, 231, 233, 234, 236], "us": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 19, 20, 23, 25, 26, 27, 28, 32, 41, 42, 44, 45, 46, 47, 48, 52, 64, 65, 67, 75, 78, 86, 88, 89, 90, 93, 94, 96, 99, 100, 101, 102, 103, 104, 109, 111, 113, 114, 115, 117, 118, 125, 126, 135, 138, 139, 143, 144, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 177, 187, 188, 194, 195, 198, 199, 201, 204, 205, 206, 214, 218, 222, 225, 228, 229, 232, 233, 235, 237, 238], "object": [0, 3, 5, 11, 12, 14, 15, 19, 23, 35, 36, 37, 38, 41, 44, 46, 47, 48, 68, 75, 78, 89, 90, 94, 115, 128, 129, 136, 138, 139, 140, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 201, 204, 205, 217, 218, 222, 224, 228, 231, 236, 238], "state": [0, 1, 3, 11, 12, 14, 15, 23, 41, 44, 45, 46, 47, 48, 51, 58, 63, 64, 66, 69, 75, 83, 85, 89, 90, 92, 94, 101, 109, 112, 113, 115, 119, 122, 123, 129, 138, 143, 162, 169, 170, 171, 172, 222, 230, 231, 238], "contribut": 0, "instal": [0, 4, 9, 198, 225, 238], "pretrain": [0, 232, 235], "improv": [0, 2, 72, 151], "structur": [0, 3, 6, 135, 170, 171, 172, 234], "dictionari": [0, 11, 12, 14, 15, 19, 23, 41, 44, 46, 47, 48, 86, 90, 139, 220, 221, 222, 228, 230, 238], "featur": [0, 3, 11, 12, 14, 15, 24, 41, 44, 46, 47, 48, 63, 71, 86, 91, 102, 109, 110, 113, 116, 117, 139, 170, 171, 172, 222, 230, 231, 236, 238], "tensor": [0, 3, 7, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 63, 64, 66, 67, 71, 75, 78, 81, 86, 87, 88, 89, 90, 91, 93, 94, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 121, 124, 125, 126, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 148, 149, 153, 154, 157, 158, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 203, 206, 208, 211, 213, 216, 228, 230, 231, 233, 234, 236, 238, 239], "tensordictmodul": [0, 11, 12, 14, 15, 115, 138, 140, 230, 231, 232, 233, 234, 235], "exampl": [0, 3, 8, 9, 10, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 66, 67, 68, 75, 78, 86, 88, 90, 93, 94, 100, 101, 102, 112, 113, 115, 118, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 147, 170, 171, 172, 189, 190, 191, 192, 193, 195, 196, 197, 199, 203, 206, 208, 211, 213, 216, 218, 228, 230, 231, 232, 233, 234, 237, 238, 239], "do": [0, 3, 6, 11, 12, 14, 15, 44, 74, 100, 116, 130, 228, 230, 231, 233, 238, 239], "": [0, 1, 3, 5, 6, 7, 23, 25, 26, 27, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 94, 96, 102, 117, 132, 138, 139, 164, 170, 171, 172, 213, 216, 230, 231, 233, 234, 237, 238, 239], "don": [0, 5, 6, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 230, 237, 238, 239], "t": [0, 3, 5, 6, 7, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 41, 42, 44, 46, 47, 48, 78, 87, 93, 94, 100, 138, 147, 153, 170, 171, 172, 198, 199, 222, 225, 230, 231, 233, 234, 238, 239], "showcas": 0, "implement": [0, 2, 3, 8, 10, 23, 38, 41, 44, 46, 47, 48, 94, 111, 124, 125, 126, 151, 161, 164, 203, 211, 213, 216, 228, 230, 231, 239], "deepmind": [0, 6, 7, 8, 52, 53], "control": [0, 1, 3, 4, 7, 47, 48, 52, 53, 67, 103, 104, 105, 106, 114, 115, 123, 135, 138, 139, 140, 152, 160, 161, 165, 170, 173, 174, 177, 206, 228, 230], "devic": [0, 1, 2, 3, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 35, 36, 41, 43, 44, 45, 46, 47, 48, 51, 58, 59, 60, 61, 66, 77, 78, 86, 88, 90, 93, 101, 102, 103, 104, 105, 106, 110, 112, 113, 115, 116, 117, 129, 130, 131, 133, 135, 136, 137, 138, 141, 142, 144, 145, 153, 195, 199, 203, 206, 208, 211, 213, 214, 216, 230, 231, 233, 234, 236, 239], "run": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 15, 23, 41, 44, 45, 46, 47, 48, 52, 53, 74, 75, 90, 94, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 140, 141, 148, 194, 220, 221, 222, 225, 228, 230, 231, 233, 234, 236, 237, 239], "parallel": [0, 1, 3, 7, 11, 12, 15, 96, 151, 219, 220, 221, 222, 231], "vecnorm": [0, 42, 222, 224], "task": [0, 8, 47, 48, 52, 78, 93, 230, 231, 232, 235, 238, 239], "specif": [0, 4, 7, 27, 28, 44, 198, 224, 228, 232, 235], "polici": [0, 1, 2, 3, 7, 11, 12, 13, 14, 15, 41, 44, 45, 46, 47, 48, 67, 99, 100, 117, 129, 130, 131, 132, 134, 135, 138, 139, 144, 145, 151, 152, 153, 160, 161, 162, 164, 194, 199, 203, 204, 205, 206, 208, 211, 218, 220, 221, 228, 231, 232, 234, 235, 236, 238, 239], "multi": [0, 3, 6, 8, 23, 41, 44, 46, 47, 48, 112, 113, 230, 231, 232, 235, 239], "execut": [0, 1, 3, 5, 6, 7, 11, 12, 14, 23, 25, 26, 27, 28, 41, 42, 44, 45, 46, 47, 48, 86, 140, 141, 201, 222, 228, 231, 235, 236, 238], "divers": [0, 47, 48], "rollout": [0, 1, 3, 11, 12, 14, 15, 41, 44, 45, 46, 47, 48, 59, 60, 96, 101, 115, 135, 151, 201, 230, 231, 234, 239], "ddpg": [0, 103, 104, 105, 106, 153, 159, 165, 206, 207, 224, 232, 235], "normal": [0, 75, 94, 102, 111, 113, 118, 125, 126, 132, 139, 152, 160, 161, 194, 196, 222, 228, 231, 238], "observ": [0, 2, 3, 7, 11, 12, 14, 29, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 58, 59, 60, 63, 64, 65, 66, 68, 69, 71, 73, 75, 76, 79, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 100, 103, 104, 105, 106, 112, 119, 120, 122, 128, 129, 130, 131, 133, 134, 135, 136, 137, 142, 143, 144, 145, 157, 170, 171, 172, 181, 203, 206, 208, 211, 213, 216, 218, 228, 231, 233, 236, 237, 238, 239], "build": [0, 3, 6, 16, 19, 23, 41, 44, 46, 47, 48, 94, 101, 115, 139, 198, 202, 207, 209, 210, 212, 214, 215, 217, 228, 234, 236, 237, 238, 239], "evalu": [0, 23, 41, 44, 46, 47, 48, 90, 107, 121, 126, 162, 204, 205, 231], "your": [0, 2, 3, 6, 7, 9, 23, 41, 44, 46, 47, 48, 94, 222, 225, 231, 237, 239], "record": [0, 23, 41, 44, 46, 47, 48, 161, 180, 181, 182, 183, 184, 185, 186, 187, 188, 218, 224, 231], "replai": [0, 7, 14, 25, 26, 27, 28, 32, 33, 34, 38, 39, 47, 48, 67, 86, 153, 154, 162, 164, 195, 198, 214, 218, 224, 228, 231, 234], "buffer": [0, 3, 7, 14, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 47, 48, 66, 67, 78, 86, 90, 93, 138, 141, 153, 154, 162, 164, 195, 198, 214, 218, 224, 228, 231, 234, 236, 238], "hyperparamet": [0, 1], "initi": [0, 6, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 75, 78, 86, 89, 90, 95, 101, 115, 116, 117, 132, 134, 135, 160, 162, 164, 203, 206, 208, 211, 213, 216, 222, 231, 238], "time": [0, 3, 6, 7, 11, 12, 14, 15, 23, 41, 42, 44, 46, 47, 48, 64, 86, 87, 94, 100, 109, 112, 135, 157, 162, 170, 171, 172, 198, 231, 233, 234, 236, 237, 238, 239], "train": [0, 1, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 72, 78, 90, 93, 96, 103, 105, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 170, 198, 199, 218, 228, 234, 237, 238], "experi": [0, 3, 25, 32, 96, 182, 184, 185, 186, 187, 188, 225], "result": [0, 1, 3, 6, 11, 12, 14, 15, 23, 25, 26, 27, 28, 41, 42, 44, 46, 47, 48, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 94, 96, 100, 113, 145, 170, 173, 174, 175, 176, 177, 178, 179, 180, 199, 231, 234, 237, 238, 239], "sampl": [0, 2, 7, 8, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 41, 45, 97, 99, 101, 107, 111, 115, 121, 122, 125, 126, 132, 134, 135, 138, 139, 152, 153, 154, 160, 161, 189, 195, 198, 200, 231, 234, 236, 238, 239], "trajectori": [0, 1, 11, 12, 14, 15, 16, 23, 41, 44, 46, 47, 48, 89, 101, 115, 135, 161, 170, 172, 173, 174, 175, 176, 177, 178, 179, 189, 231, 238, 239], "td": [0, 19, 50, 51, 52, 53, 54, 55, 57, 58, 64, 67, 68, 75, 88, 90, 94, 100, 101, 114, 115, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 171, 172, 175, 176, 178, 179, 180, 189, 197, 203, 206, 208, 211, 213, 216, 236, 237, 238, 239], "lambda": [0, 11, 12, 14, 15, 42, 156, 158, 172, 175, 176, 178, 179, 218, 236, 237, 238, 239], "pixel": [0, 3, 6, 19, 63, 65, 71, 73, 75, 78, 79, 88, 93, 103, 119, 120, 181, 203, 208, 211, 213, 216, 230, 232, 234, 235, 238, 239], "dqn": [0, 133, 137, 144, 154, 155, 159, 165, 208, 209, 224, 232, 235], "problem": [0, 6, 7, 14, 238], "deep": [0, 8, 63, 103, 104, 105, 106, 108, 135, 151, 159, 164, 165, 206, 230], "q": [0, 103, 104, 105, 106, 108, 110, 144, 145, 153, 154, 155, 159, 162, 164, 213, 216, 236], "network": [0, 1, 7, 23, 41, 44, 46, 47, 48, 102, 103, 104, 105, 106, 108, 109, 110, 113, 117, 119, 120, 122, 123, 129, 130, 131, 138, 153, 154, 155, 159, 162, 164, 165, 167, 170, 171, 172, 203, 206, 211, 217, 218, 228, 230, 233, 236, 238], "regular": [0, 15, 138, 139, 145, 155, 199, 228, 230, 236, 237, 238], "conclus": 0, "api": [0, 3, 4, 78, 93, 228, 238, 239], "packag": [0, 5, 6, 9, 224, 225, 230, 231, 238], "helper": [0, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 230, 239], "compos": [0, 3, 23, 25, 26, 27, 33, 34, 39, 41, 44, 46, 47, 48, 89, 90, 94, 157, 203, 206, 208, 211, 213, 216, 224, 231, 233, 238, 239], "tensorspec": [0, 3, 13, 17, 18, 19, 20, 21, 22, 24, 30, 31, 41, 45, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 123, 128, 132, 134, 135, 136, 138, 139, 140, 224], "envbas": [0, 3, 11, 12, 14, 15, 42, 44, 46, 47, 48, 49, 74, 89, 90, 94, 96, 101, 114, 115, 194, 201, 203, 204, 205, 206, 208, 211, 213, 216, 218, 220, 221, 222, 224], "gymlikeenv": [0, 224], "envmetadata": [0, 224], "spec": [0, 2, 3, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 43, 44, 45, 46, 47, 48, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 96, 123, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 203, 206, 208, 211, 213, 216, 224, 230, 231, 233, 239], "vector": [0, 7, 17, 24, 47, 48, 67, 103, 105, 113, 172, 178, 179, 224, 230, 231, 233, 234, 236, 238], "domain": [0, 2, 7, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 67, 86, 138, 139, 140, 141, 224, 238, 239], "hook": [0, 23, 41, 44, 46, 47, 48, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 133, 134, 135, 137, 144, 145, 148, 191, 192, 194, 195, 196, 198, 199, 224], "explor": [0, 1, 95, 117, 132, 134, 135, 138, 139, 151, 194, 204, 205, 218, 224, 230, 231], "planner": [0, 101, 115, 224], "distribut": [0, 2, 3, 8, 9, 75, 101, 107, 108, 109, 111, 115, 118, 121, 122, 123, 124, 125, 126, 132, 133, 139, 140, 144, 152, 155, 160, 161, 224, 228, 230, 231, 236, 238, 239], "sac": [0, 162, 164, 215, 216, 224], "redq": [0, 162, 212, 213, 224], "ppo": [0, 7, 139, 152, 160, 161, 203, 210, 211, 224], "a2c": [0, 151, 202, 224], "dreamer": [0, 61, 109, 156, 157, 158, 224], "trainer": [0, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 230], "checkpoint": [0, 224, 234], "builder": [0, 224, 231, 238], "logger": [0, 181, 182, 184, 185, 186, 187, 188, 192, 194, 198, 218, 222, 224], "_util": [0, 10, 224], "implement_for": [0, 224], "work": [0, 3, 6, 7, 10, 23, 41, 44, 46, 47, 48, 64, 78, 94, 102, 113, 198, 225, 231, 233, 234, 236, 237, 238, 239], "what": [0, 7, 29, 41, 44, 46, 47, 48, 86, 225, 231, 234, 236, 238, 239], "version": [0, 1, 5, 10, 23, 41, 44, 46, 47, 48, 164, 172, 225, 230, 231, 234, 238], "habitat": [0, 56, 225, 234], "lab": [0, 3, 52, 53, 225], "up": [0, 1, 2, 3, 7, 8, 20, 225, 230, 231, 236, 238], "issu": [0, 4, 7, 138, 139, 225, 239], "about": [0, 4, 225, 230, 231, 238, 239], "mujoco": [0, 5, 7, 225], "prerequisit": 0, "render": [0, 7, 194, 225, 230, 231], "all": [0, 3, 7, 11, 12, 14, 15, 23, 41, 42, 44, 45, 46, 47, 48, 49, 66, 70, 75, 78, 82, 86, 87, 90, 93, 94, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 138, 139, 141, 148, 157, 193, 198, 200, 220, 221, 222, 225, 228, 230, 231, 232, 233, 236, 237, 238, 239], "bindindg": 0, "2": [0, 1, 7, 9, 10, 11, 12, 14, 21, 22, 23, 41, 42, 44, 46, 47, 48, 59, 60, 64, 66, 67, 75, 78, 86, 90, 93, 94, 102, 103, 104, 105, 110, 112, 113, 118, 133, 134, 135, 138, 142, 144, 152, 153, 160, 162, 164, 169, 170, 171, 172, 175, 176, 178, 179, 181, 189, 230, 231, 233, 234, 237, 238, 239], "1": [0, 1, 2, 3, 7, 9, 10, 11, 12, 14, 15, 20, 21, 22, 23, 24, 30, 31, 41, 42, 44, 45, 46, 47, 48, 51, 58, 59, 60, 62, 64, 66, 67, 68, 72, 74, 75, 78, 86, 87, 88, 90, 93, 94, 100, 101, 102, 103, 104, 106, 110, 111, 113, 115, 116, 117, 118, 122, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 136, 137, 138, 141, 142, 144, 148, 151, 152, 157, 160, 161, 162, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 189, 194, 195, 196, 203, 206, 208, 211, 213, 216, 218, 222, 225, 228, 230, 231, 233, 234, 237, 238, 239], "old": [0, 160, 238], "bind": [0, 5], "py": [0, 3, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239], "when": [0, 1, 3, 4, 7, 11, 12, 14, 15, 23, 25, 26, 27, 28, 35, 36, 37, 38, 41, 42, 44, 46, 47, 48, 66, 67, 74, 75, 78, 82, 86, 89, 90, 93, 94, 99, 101, 113, 114, 115, 116, 125, 138, 139, 141, 148, 152, 160, 161, 169, 180, 181, 195, 222, 225, 228, 230, 231, 234, 236, 237, 238], "pro": [0, 6, 225], "tip": [0, 6, 225], "debug": [0, 5, 225, 238], "gradient": [0, 23, 41, 44, 46, 47, 48, 90, 111, 117, 125, 126, 151, 163, 169, 170, 171, 172, 198, 230, 231], "relat": [0, 9, 71, 230], "error": [0, 1, 3, 6, 9, 10, 23, 41, 44, 46, 47, 48, 96, 147, 230, 231, 237, 238], "newcom": 0, "my": 0, "too": [0, 6, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 111, 125, 126, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 170, 171, 172, 230, 231, 238], "slow": [0, 3], "intermedi": [0, 234], "bug": [0, 239], "resourc": [0, 225], "functorch": [0, 7, 9, 138, 141, 146, 231, 239], "blog": 0, "websit": 0, "index": [0, 6, 7, 9, 14, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 40, 67, 100, 230, 233, 237, 239], "search": [0, 231], "page": [0, 6], "somewhat": [1, 238], "equival": [1, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 90, 195, 238, 239], "dataload": [1, 237], "except": [1, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 70, 121, 147, 230, 231, 237, 238, 239], "thei": [1, 3, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 68, 70, 78, 89, 90, 93, 112, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 195, 198, 228, 230, 231, 233, 234, 236, 237, 238, 239], "collect": [1, 3, 7, 11, 12, 14, 15, 23, 25, 26, 27, 28, 75, 78, 93, 96, 135, 153, 162, 164, 189, 195, 198, 199, 200, 201, 218, 228, 230, 231, 234, 237, 238, 239], "over": [1, 2, 3, 7, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 67, 75, 87, 141, 155, 157, 200, 228, 230, 236, 237, 238], "non": [1, 7, 23, 41, 44, 46, 47, 48, 62, 66, 71, 78, 86, 90, 91, 93, 138, 139, 157, 170, 171, 172, 230, 236, 238], "static": [1, 94], "like": [1, 6, 23, 41, 44, 46, 47, 48, 56, 88, 96, 162, 230, 234, 237, 238], "being": [1, 3, 7, 15, 23, 41, 44, 46, 47, 48, 67, 68, 90, 99, 135, 152, 160, 161, 181, 195, 199, 220, 221, 222, 230, 231, 234], "accept": [1, 11, 12, 14, 15, 23, 41, 44, 45, 46, 47, 48, 66, 71, 78, 82, 86, 90, 91, 93, 138, 139, 140, 228, 236, 238], "two": [1, 7, 9, 23, 41, 44, 46, 47, 48, 75, 78, 93, 106, 139, 160, 164, 166, 194, 198, 203, 211, 213, 216, 230, 231, 233, 236, 237, 238, 239], "main": [1, 2, 4, 42, 139, 198, 230, 231, 233, 238], "argument": [1, 3, 11, 12, 14, 15, 19, 23, 41, 44, 46, 47, 48, 66, 78, 86, 89, 90, 93, 102, 113, 116, 138, 139, 140, 142, 180, 191, 200, 203, 206, 208, 211, 213, 216, 218, 219, 222, 230, 231, 236, 238], "list": [1, 5, 6, 7, 8, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 41, 44, 45, 46, 47, 48, 63, 68, 75, 78, 82, 90, 93, 113, 141, 142, 168, 170, 172, 180, 194, 195, 220, 221, 230, 231, 233, 234, 236, 237, 238, 239], "constructor": [1, 14, 89, 170, 171, 172, 203, 206, 208, 211, 213, 216, 219, 222, 236], "iter": [1, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 44, 46, 47, 48, 69, 75, 83, 94, 102, 113, 138, 139, 140, 141, 146, 168, 194, 197, 198, 203, 211, 213, 216, 228, 230], "step": [1, 3, 7, 11, 12, 14, 15, 23, 41, 42, 44, 45, 46, 47, 48, 49, 51, 58, 74, 75, 85, 87, 90, 100, 101, 109, 112, 114, 115, 132, 134, 135, 139, 151, 156, 161, 169, 180, 189, 194, 198, 228, 230, 231, 233, 234, 237, 239], "queri": [1, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 78, 89, 94, 141, 236, 239], "defin": [1, 2, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 44, 46, 47, 48, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 170, 171, 172, 180, 219, 231, 236, 237, 238], "number": [1, 3, 7, 11, 12, 14, 15, 18, 20, 23, 24, 25, 26, 27, 32, 35, 36, 37, 41, 44, 45, 46, 47, 48, 63, 67, 72, 74, 75, 81, 85, 87, 94, 101, 102, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 122, 123, 124, 125, 126, 132, 134, 135, 138, 139, 150, 156, 162, 164, 189, 191, 194, 198, 199, 200, 201, 220, 221, 222, 230, 231, 234, 238], "befor": [1, 3, 5, 6, 9, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 49, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 79, 80, 81, 83, 85, 86, 87, 88, 89, 91, 113, 116, 117, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 171, 172, 195, 230, 231, 236, 237, 238], "deliv": [1, 231, 239], "stack": [1, 6, 7, 47, 48, 94, 100, 140, 141, 180, 189, 231, 233, 236, 237, 239], "user": [1, 2, 4, 7, 23, 41, 44, 46, 47, 48, 85, 90, 112, 219, 228, 231, 236, 238, 239], "reset": [1, 3, 7, 11, 12, 14, 15, 41, 42, 44, 45, 46, 47, 48, 51, 58, 63, 66, 69, 74, 78, 82, 83, 85, 86, 87, 89, 92, 94, 96, 100, 127, 135, 180, 203, 206, 208, 211, 213, 216, 230, 231, 233, 239], "whenev": [1, 3, 199], "reach": [1, 11, 12, 14, 15, 41, 44, 46, 47, 48, 132, 134, 135, 238, 239], "done": [1, 3, 6, 7, 11, 12, 14, 19, 23, 41, 42, 44, 45, 46, 47, 48, 51, 58, 59, 60, 75, 81, 83, 85, 86, 94, 100, 101, 115, 153, 154, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 203, 206, 208, 211, 213, 216, 230, 231, 233, 234, 237, 238, 239], "after": [1, 7, 19, 23, 41, 44, 46, 47, 48, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 100, 116, 132, 134, 157, 230, 231, 234, 236, 237, 238], "predifin": 1, "becaus": [1, 6, 89, 106, 112, 138, 139, 230, 231, 233, 237, 238], "potenti": 1, "comput": [1, 3, 7, 11, 14, 20, 23, 41, 44, 46, 47, 48, 75, 90, 92, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 129, 132, 134, 135, 139, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 201, 230, 231, 233, 234, 236], "heavi": [1, 7], "crucial": [1, 230, 231, 238], "configur": [1, 7, 11, 12, 14, 15, 161, 203, 211, 213, 216], "appropri": [1, 6, 11, 12, 14, 15, 39, 40, 86, 219, 222], "paramet": [1, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 138, 139, 140, 141, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 211, 213, 216, 218, 219, 220, 221, 222, 230, 231, 234, 236, 239], "consider": [1, 3, 7, 230], "whether": [1, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 44, 45, 46, 47, 48, 90, 102, 113, 142, 153, 154, 155, 162, 164, 172, 231, 238], "should": [1, 3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 38, 41, 44, 45, 46, 47, 48, 63, 71, 75, 82, 83, 89, 90, 94, 96, 100, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 138, 139, 148, 159, 160, 161, 162, 165, 169, 170, 171, 172, 181, 193, 194, 195, 198, 218, 220, 221, 222, 228, 230, 231, 233, 234, 238, 239], "occur": [1, 7, 12, 64, 75, 138, 139, 157, 238], "serial": [1, 3, 23, 41, 44, 46, 47, 48, 94], "optim": [1, 7, 23, 41, 44, 46, 47, 48, 101, 115, 116, 117, 161, 164, 193, 198, 203, 211, 218, 228, 230, 231, 237], "syncdatacollector": [1, 11, 12, 15, 218, 221, 224], "worker": [1, 11, 12, 14, 15, 42, 46, 47, 48, 94, 220, 221, 222, 238, 239], "multisyncdatacollector": [1, 221, 224, 239], "split": [1, 11, 12, 14, 15, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 228, 239], "workload": 1, "across": [1, 7, 94, 135, 199, 237], "aggreg": [1, 102, 103, 104, 141, 237], "final": [1, 132, 134, 135, 140, 170, 194, 230, 231, 238], "multiasyncdatacollector": [1, 15, 220, 224, 230, 231, 239], "sever": [1, 7, 21, 23, 41, 44, 46, 47, 48, 64, 90, 161, 238], "batch": [1, 3, 11, 12, 14, 15, 16, 20, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 47, 48, 71, 75, 86, 90, 91, 107, 108, 112, 116, 121, 124, 135, 138, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 189, 195, 197, 198, 199, 220, 221, 222, 228, 230, 231, 233, 234, 236, 238, 239], "gather": [1, 169, 201, 225, 236, 238], "continu": [1, 8, 18, 30, 103, 104, 105, 106, 135, 139, 141, 165, 170, 173, 174, 177, 206, 230, 238, 239], "concomittantli": 1, "impli": [1, 238], "weight": [1, 8, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 117, 138, 151, 152, 157, 199, 217, 228, 230, 231, 233, 239], "mai": [1, 3, 4, 6, 7, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 75, 83, 90, 91, 94, 96, 113, 228, 230, 234, 238, 239], "slightli": [1, 230, 234, 236, 238], "lag": [1, 11, 12, 14, 15], "therefor": [1, 3, 6, 161, 237, 238], "although": [1, 7, 41, 44, 46, 47, 48, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 228, 230, 231], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 6, 7, 11, 12, 14, 15, 25, 26, 27, 28, 35, 36, 41, 44, 45, 46, 47, 48, 63, 78, 82, 87, 89, 91, 93, 132, 134, 138, 139, 150, 151, 152, 153, 155, 159, 160, 161, 162, 164, 165, 169, 170, 171, 172, 180, 181, 195, 198, 199, 228, 230, 231, 233, 236, 238], "asynchron": [1, 8, 12, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 151, 220], "off": [1, 2, 111, 125, 126, 164, 194, 204, 228, 231, 234, 238], "curriculum": 1, "For": [1, 3, 6, 7, 8, 9, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 71, 75, 116, 144, 151, 155, 161, 194, 206, 228, 230, 234, 236, 238], "remot": [1, 47, 48, 238], "necessari": [1, 5, 7, 11, 12, 14, 15, 83, 162, 170, 171, 172, 230], "synchronis": [1, 42], "from": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 64, 67, 69, 75, 78, 83, 85, 86, 88, 89, 90, 91, 93, 94, 100, 101, 103, 104, 105, 106, 111, 113, 114, 115, 116, 118, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 152, 153, 154, 160, 161, 162, 164, 169, 170, 171, 172, 180, 181, 189, 195, 198, 200, 201, 203, 206, 208, 211, 213, 214, 216, 218, 219, 222, 225, 228, 230, 231, 233, 234, 236, 237, 238, 239], "either": [1, 4, 23, 41, 44, 46, 47, 48, 143, 188, 206, 228, 234, 237, 238, 239], "update_policy_weights_": [1, 11, 12, 14, 15, 230, 231, 239], "update_at_each_batch": [1, 11, 12, 15, 230], "true": [1, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 59, 60, 64, 66, 67, 71, 74, 75, 78, 81, 85, 86, 88, 90, 91, 93, 94, 96, 100, 101, 102, 103, 104, 105, 106, 110, 111, 113, 115, 116, 117, 125, 126, 129, 130, 131, 132, 135, 138, 139, 140, 141, 147, 151, 152, 156, 157, 158, 160, 161, 162, 164, 166, 170, 171, 172, 175, 176, 178, 179, 180, 181, 191, 192, 194, 195, 198, 208, 222, 228, 230, 231, 233, 234, 236, 237, 238, 239], "second": [1, 7, 164, 197, 230, 231, 233, 234, 236, 237, 238, 239], "consid": [1, 7, 23, 41, 44, 46, 47, 48, 67, 107, 124, 230, 237], "oper": [1, 3, 6, 7, 11, 12, 15, 23, 41, 44, 46, 47, 48, 71, 89, 118, 129, 130, 131, 138, 143, 144, 151, 152, 153, 154, 155, 160, 161, 169, 170, 171, 172, 198, 206, 208, 213, 216, 228, 230, 231, 233, 236, 238], "instanc": [1, 3, 6, 7, 11, 12, 14, 15, 23, 29, 41, 42, 44, 45, 46, 47, 48, 53, 63, 75, 86, 89, 94, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 118, 119, 120, 122, 123, 132, 134, 135, 139, 140, 141, 148, 181, 188, 194, 201, 203, 204, 205, 206, 208, 211, 213, 216, 218, 220, 221, 228, 231, 236, 237, 238], "cpu": [1, 3, 7, 9, 11, 12, 14, 17, 23, 29, 35, 36, 41, 44, 45, 46, 47, 48, 51, 58, 59, 60, 61, 66, 78, 86, 90, 93, 101, 115, 117, 136, 138, 141, 195, 203, 206, 208, 211, 213, 216, 230, 231, 233, 234, 236, 237, 238, 239], "slower": 1, "than": [1, 7, 11, 12, 14, 15, 106, 113, 118, 132, 134, 138, 195, 199, 225, 230, 231, 236, 237, 238, 239], "one": [1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 22, 24, 25, 26, 27, 28, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 67, 74, 75, 78, 84, 90, 91, 93, 94, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 121, 122, 123, 132, 133, 134, 135, 137, 138, 139, 144, 145, 148, 150, 151, 152, 153, 154, 160, 161, 162, 191, 193, 194, 198, 201, 203, 211, 213, 216, 222, 225, 228, 230, 231, 233, 234, 236, 237, 238], "cuda": [1, 3, 6, 23, 41, 44, 46, 47, 48, 66, 77, 78, 86, 90, 93, 138, 190, 230, 231, 234, 237, 238], "multipl": [1, 3, 4, 7, 11, 12, 14, 15, 20, 47, 48, 64, 67, 82, 89, 94, 112, 116, 117, 138, 139, 162, 213, 222, 228, 231, 237, 239], "infer": [1, 47, 48, 94, 116, 164, 230, 236, 237], "dispatch": 1, "avail": [1, 5, 139, 144, 145, 220, 221, 230, 231, 238], "speed": [1, 2, 7, 20, 230, 231], "avoid": [1, 23, 41, 44, 46, 47, 48, 90, 94, 138, 200, 236], "oom": 1, "choic": [1, 2, 118], "size": [1, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 41, 43, 44, 45, 46, 47, 48, 51, 58, 59, 60, 61, 64, 71, 78, 84, 86, 88, 90, 91, 93, 101, 102, 107, 112, 113, 115, 118, 121, 122, 123, 124, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 169, 170, 171, 172, 181, 189, 195, 203, 206, 208, 211, 213, 216, 230, 231, 233, 234, 236, 238, 239], "pass": [1, 3, 14, 19, 23, 27, 41, 42, 43, 44, 46, 47, 48, 68, 89, 91, 94, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 116, 118, 119, 120, 122, 123, 132, 134, 135, 138, 139, 141, 147, 148, 170, 171, 172, 195, 220, 221, 222, 230, 231, 233, 238], "ie": [1, 11, 12, 14, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 71, 91], "store": [1, 7, 11, 12, 14, 15, 19, 23, 27, 28, 35, 36, 37, 41, 44, 46, 47, 48, 94, 101, 112, 115, 203, 206, 208, 211, 213, 216, 228, 230, 231, 234, 237, 238], "while": [1, 3, 6, 7, 23, 41, 44, 46, 47, 48, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 160, 161, 230, 231, 234, 239], "wait": [1, 231], "also": [1, 2, 3, 7, 10, 23, 27, 41, 44, 46, 47, 48, 67, 75, 82, 83, 86, 90, 123, 140, 141, 151, 153, 154, 170, 228, 230, 231, 233, 236, 237, 238], "impact": 1, "memori": [1, 7, 20, 23, 35, 41, 42, 44, 46, 47, 48, 66, 78, 86, 90, 93, 94, 138, 222, 228, 230, 239], "manag": [1, 7, 167, 168, 194, 230, 236], "kei": [1, 3, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 41, 44, 46, 47, 48, 49, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 82, 83, 85, 86, 87, 89, 90, 92, 93, 94, 100, 101, 114, 115, 132, 134, 135, 138, 139, 140, 141, 142, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 169, 170, 171, 172, 181, 193, 194, 197, 198, 201, 203, 211, 213, 216, 228, 230, 231, 233, 236, 238, 239], "which": [1, 3, 6, 7, 10, 11, 12, 14, 15, 19, 20, 23, 24, 28, 41, 44, 46, 47, 48, 49, 63, 64, 72, 74, 75, 78, 86, 87, 89, 90, 96, 111, 125, 126, 129, 130, 131, 138, 139, 141, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 170, 189, 193, 203, 206, 208, 211, 213, 216, 228, 230, 231, 233, 234, 236, 237, 238], "storing_devic": [1, 11, 12, 14, 15, 230, 231, 239], "dure": [1, 11, 12, 14, 15, 41, 44, 46, 47, 48, 72, 90, 194, 198, 230, 238], "A": [1, 3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 56, 67, 72, 78, 86, 89, 90, 92, 94, 95, 96, 100, 101, 102, 113, 115, 117, 118, 132, 134, 139, 140, 141, 144, 148, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 182, 183, 184, 191, 198, 199, 203, 208, 211, 213, 216, 218, 231, 237, 238], "heurist": [1, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 135, 230, 238], "usual": [1, 3, 5, 6, 7, 41, 44, 46, 47, 48, 117, 180, 203, 211, 213, 216, 225, 228, 238], "same": [1, 3, 10, 14, 23, 41, 42, 44, 46, 47, 48, 67, 72, 74, 75, 89, 90, 94, 102, 113, 135, 230, 231, 233, 234, 236, 237, 238], "storag": [1, 2, 7, 23, 25, 26, 27, 28, 35, 36, 37, 41, 43, 44, 46, 47, 48, 68, 224, 228, 230, 231, 234], "default": [1, 3, 9, 11, 12, 14, 15, 17, 19, 20, 23, 24, 25, 26, 27, 35, 36, 41, 44, 46, 47, 48, 49, 52, 63, 64, 67, 71, 74, 75, 78, 81, 86, 87, 88, 90, 91, 93, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 132, 134, 135, 136, 138, 139, 142, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 189, 191, 192, 194, 195, 196, 198, 203, 206, 211, 213, 216, 218, 222, 228, 230, 231, 234, 236, 237, 238, 239], "behaviour": [1, 3, 44, 64, 75, 111, 125, 126, 194, 231], "besid": 1, "those": [1, 4, 6, 47, 48, 75, 86, 139, 140, 141, 199, 220, 221, 230, 231, 238], "choos": [1, 230], "follow": [1, 2, 3, 5, 6, 7, 23, 41, 44, 45, 46, 47, 48, 78, 102, 113, 150, 152, 160, 163, 198, 213, 216, 228, 230, 231, 233, 236, 237, 238, 239], "max_frames_per_traj": [1, 11, 12, 14, 15, 200, 230, 239], "frame": [1, 11, 12, 14, 15, 23, 44, 63, 72, 132, 134, 135, 180, 181, 191, 194, 198, 200, 201, 230, 231, 238, 239], "call": [1, 3, 6, 7, 10, 11, 12, 14, 15, 23, 25, 26, 27, 28, 35, 36, 37, 38, 41, 44, 46, 47, 48, 63, 66, 67, 68, 75, 77, 78, 82, 85, 86, 90, 93, 94, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 115, 116, 118, 119, 120, 122, 123, 132, 134, 135, 138, 139, 141, 148, 169, 180, 194, 228, 230, 231, 236, 237, 238], "frames_per_batch": [1, 11, 12, 14, 15, 200, 230, 231, 239], "each": [1, 3, 6, 7, 11, 12, 14, 15, 16, 21, 22, 23, 27, 41, 42, 44, 46, 47, 48, 78, 82, 85, 86, 87, 93, 94, 132, 141, 144, 145, 175, 176, 178, 179, 194, 195, 220, 221, 230, 231, 234, 236, 238, 239], "init_random_fram": [1, 11, 12, 14, 15, 200, 230, 231], "random": [1, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 33, 41, 44, 45, 46, 47, 48, 67, 74, 75, 86, 96, 138, 139, 162, 194, 201, 230, 231, 234, 238, 239], "rand_step": [1, 41, 42, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 57, 94, 238, 239], "reset_at_each_it": [1, 11, 12, 14, 15, 230], "split_traj": [1, 11, 12, 14, 15, 230], "pad": [1, 16, 102, 103, 104, 112, 195, 230, 231], "along": [1, 63, 64, 75, 82, 88, 113, 117, 138, 139, 231, 237], "mask": [1, 11, 12, 14, 195, 230, 231, 237, 238, 239], "point": [1, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 32, 39, 40, 41, 44, 46, 47, 48, 63, 66, 78, 86, 88, 90, 93, 114, 138, 150, 155, 198, 225, 233, 238], "boolean": [1, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 44, 132, 173, 174, 175, 176, 177, 178, 179, 228], "repres": [1, 3, 11, 12, 14, 15, 19, 27, 41, 44, 46, 47, 48, 72, 139, 144, 145, 166, 170, 195, 236, 237], "valid": [1, 90, 102, 113, 132, 134, 160, 195, 228, 238], "valu": [1, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 41, 44, 46, 47, 48, 49, 62, 63, 64, 67, 74, 75, 78, 80, 82, 86, 87, 88, 89, 90, 93, 94, 103, 104, 105, 106, 107, 109, 110, 111, 113, 115, 116, 117, 118, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 189, 191, 192, 193, 194, 195, 198, 203, 206, 211, 213, 216, 218, 228, 230, 231, 233, 236, 238, 239], "exploration_mod": [1, 11, 14, 194, 224, 230, 231, 236], "strategi": [1, 228, 230], "reset_when_don": [1, 11, 14], "central": 2, "part": [2, 7, 23, 41, 44, 46, 47, 48, 75, 82, 142, 189, 222, 230, 231, 236, 238], "algorithm": [2, 7, 8, 11, 12, 45, 72, 151, 161, 162, 163, 164, 189, 203, 204, 211, 228, 230, 231, 234, 237, 239], "wide": [2, 3, 4], "we": [2, 3, 4, 6, 8, 19, 23, 41, 42, 44, 46, 47, 48, 78, 86, 94, 101, 112, 225, 228, 230, 231, 233, 234, 236, 237, 238, 239], "give": [2, 6, 45, 225, 230, 231, 234, 239], "abil": 2, "veri": [2, 3, 230, 231, 238, 239], "influenti": 2, "latenc": 2, "especi": [2, 3, 6, 7, 64], "larger": 2, "volum": 2, "lazymemmapstorag": [2, 224, 230, 231, 234], "advis": [2, 238], "share": [2, 5, 7, 35, 36, 37, 38, 42, 47, 48, 94, 129, 130, 131, 222, 233, 236, 238, 239], "due": [2, 3, 4, 234, 238], "lower": [2, 11, 12, 14, 15, 18, 94, 122, 123, 237], "serialis": 2, "memmaptensor": [2, 234], "well": [2, 3, 7, 11, 12, 15, 23, 38, 41, 44, 46, 47, 48, 122, 123, 230, 231, 234, 236, 237, 238, 239], "specifi": [2, 10, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 82, 84, 91, 101, 138, 139, 230, 236], "file": [2, 5, 6, 7, 180, 228, 230, 231, 235], "locat": [2, 6, 44, 75, 81, 111, 118, 125, 126, 237], "node": [2, 203, 206, 208, 211, 213, 216], "failur": 2, "recoveri": 2, "mean": [2, 3, 6, 14, 75, 94, 101, 107, 109, 112, 115, 124, 132, 139, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 230, 231, 238, 239], "liststorag": [2, 25, 26, 27, 224], "were": [2, 6, 47, 48, 230], "found": [2, 5, 6, 9, 19, 23, 27, 41, 44, 46, 47, 48, 94, 139, 153, 161, 230, 231, 236], "rough": 2, "benchmark": [2, 3, 8], "http": [2, 4, 5, 6, 9, 25, 32, 46, 63, 78, 103, 104, 105, 106, 109, 110, 115, 117, 119, 120, 122, 123, 135, 144, 151, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 170, 173, 174, 177, 203, 206, 211, 213, 216, 234, 239], "com": [2, 4, 5, 6, 9, 234, 239], "tree": 2, "type": [2, 3, 23, 25, 27, 29, 41, 44, 45, 46, 47, 48, 66, 78, 86, 90, 93, 94, 102, 113, 117, 132, 134, 138, 139, 146, 203, 206, 208, 211, 213, 216, 220, 230, 231, 237, 238], "1x": 2, "lazytensorstorag": [2, 224], "83x": 2, "3": [2, 3, 5, 6, 9, 10, 11, 12, 14, 19, 20, 21, 22, 23, 24, 41, 44, 46, 47, 48, 66, 67, 75, 78, 86, 88, 90, 93, 101, 102, 103, 104, 110, 112, 113, 115, 118, 128, 129, 130, 131, 133, 136, 138, 141, 142, 144, 147, 157, 170, 171, 172, 175, 176, 178, 179, 181, 197, 208, 228, 230, 231, 233, 234, 237, 238, 239], "44x": 2, "parent": [2, 3, 29, 41, 64, 71, 72, 75, 78, 86, 89, 91, 129, 161, 231, 237, 238, 239], "subclass": [2, 3, 41, 44, 46, 47, 48, 89, 96, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 133, 134, 135, 137, 138, 139, 140, 148, 161, 230], "basic": [2, 45, 238], "properti": [2, 41, 44, 45, 46, 47, 48, 90, 107, 111, 116, 121, 124, 125, 126, 236, 237], "action": [2, 3, 7, 8, 11, 12, 14, 20, 24, 29, 41, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 67, 68, 72, 74, 83, 90, 100, 101, 103, 104, 105, 106, 108, 109, 113, 114, 115, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 142, 144, 145, 154, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 203, 206, 208, 211, 213, 216, 218, 222, 228, 230, 231, 233, 234, 236, 237, 238, 239], "shape": [2, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 44, 46, 47, 48, 49, 64, 75, 86, 88, 95, 96, 107, 108, 113, 116, 118, 121, 124, 136, 138, 141, 166, 181, 189, 195, 198, 218, 230, 231, 233, 234, 236, 237, 238, 239], "dtype": [2, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 41, 44, 45, 46, 47, 48, 51, 58, 59, 60, 61, 66, 67, 68, 75, 78, 86, 88, 90, 93, 96, 101, 115, 116, 117, 129, 130, 131, 133, 135, 136, 137, 138, 141, 142, 144, 145, 170, 171, 172, 203, 206, 208, 211, 213, 216, 230, 231, 233, 234, 236, 237, 238, 239], "import": [2, 3, 5, 6, 9, 11, 12, 14, 25, 27, 32, 42, 44, 45, 47, 48, 75, 78, 86, 93, 94, 101, 113, 115, 118, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 152, 170, 171, 172, 191, 194, 203, 206, 208, 211, 213, 216, 218, 230, 231, 233, 234, 236, 237, 238, 239], "match": [2, 3, 5, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 42, 44, 46, 47, 48, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 102, 107, 113, 124, 138, 139, 160, 162, 164, 195, 199, 231, 233, 236, 237, 238, 239], "input": [2, 3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 45, 46, 47, 48, 63, 64, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 96, 100, 102, 103, 104, 105, 106, 112, 113, 116, 117, 122, 123, 135, 138, 139, 140, 141, 150, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 200, 218, 228, 231, 237, 238, 239], "output": [2, 3, 11, 12, 14, 15, 23, 25, 26, 27, 41, 44, 45, 46, 47, 48, 63, 75, 78, 87, 89, 93, 96, 102, 103, 104, 108, 109, 112, 113, 118, 129, 132, 134, 135, 138, 139, 140, 141, 144, 145, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 170, 181, 189, 230, 233, 234, 237, 238, 239], "send": [2, 3, 7, 231, 237, 239], "receiv": [2, 3, 23, 41, 44, 46, 47, 48, 89, 113, 231, 233], "parallelenv": [2, 3, 11, 12, 14, 15, 46, 48, 219, 224, 230, 231, 233, 238, 239], "creat": [2, 3, 4, 5, 6, 9, 11, 12, 15, 23, 25, 26, 27, 41, 42, 44, 46, 47, 48, 49, 78, 82, 89, 90, 94, 100, 102, 103, 104, 105, 106, 110, 113, 114, 139, 154, 155, 162, 181, 195, 201, 204, 205, 218, 220, 221, 230, 231, 234, 236, 237, 238, 239], "commun": [2, 3, 225, 238], "spawn": [2, 3, 46], "check": [2, 3, 4, 5, 6, 10, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 42, 44, 45, 46, 47, 48, 64, 70, 96, 138, 139, 146, 230, 231, 233, 234, 238], "check_env_spec": [2, 3, 224], "method": [2, 3, 11, 12, 14, 15, 23, 27, 35, 36, 37, 38, 41, 44, 46, 47, 48, 63, 66, 71, 75, 78, 79, 86, 90, 93, 101, 112, 129, 130, 131, 138, 139, 140, 146, 151, 180, 219, 228, 229, 230, 236, 237, 238], "saniti": [2, 3, 6, 96], "offer": [3, 6, 238], "handl": [3, 23, 41, 44, 46, 47, 48, 94, 113, 198, 220, 221], "differ": [3, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 63, 67, 75, 90, 91, 113, 115, 144, 145, 161, 166, 170, 171, 194, 198, 199, 220, 221, 228, 230, 231, 233, 234, 237, 238], "backend": [3, 6, 10, 228, 230], "dm": [3, 238], "base": [3, 7, 8, 11, 12, 14, 15, 34, 40, 45, 46, 86, 92, 129, 156, 198, 203, 211, 213, 216, 228, 230, 232, 235, 238], "custom": [3, 4, 23, 41, 44, 46, 47, 48, 222], "goal": [3, 230, 231], "abl": [3, 233, 237, 239], "even": [3, 7, 12, 35, 36, 37, 38, 42, 230, 237, 238], "simul": [3, 4, 6, 7, 60, 61, 101, 115, 230], "some": [3, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 78, 96, 103, 139, 140, 141, 189, 200, 228, 230, 231, 236, 238, 239], "box": [3, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "wrapper": [3, 10, 15, 27, 28, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 118, 132, 134, 135, 139, 143, 170, 184, 185, 186, 222, 230, 234, 238], "under": [3, 23, 41, 44, 46, 47, 48, 138, 139, 230, 238], "lib": [3, 4, 5, 6, 8, 9, 11, 12, 14, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 75, 86, 94, 203, 206, 208, 211, 213, 216, 218, 230, 231, 233, 234, 238, 239], "hope": 3, "imit": 3, "other": [3, 6, 7, 23, 35, 36, 37, 38, 41, 44, 45, 46, 47, 48, 67, 83, 94, 117, 118, 139, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 195, 203, 211, 213, 216, 220, 221, 228, 230, 231, 234, 236, 238, 239], "torch": [3, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 35, 36, 41, 42, 44, 45, 46, 47, 48, 51, 58, 59, 60, 64, 66, 67, 68, 75, 78, 81, 86, 88, 90, 93, 94, 100, 101, 102, 107, 109, 111, 112, 113, 115, 116, 117, 118, 121, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 153, 170, 171, 172, 189, 197, 203, 206, 208, 211, 213, 216, 218, 228, 230, 231, 233, 234, 236, 237, 238, 239], "nn": [3, 11, 12, 14, 23, 41, 44, 45, 46, 47, 48, 66, 67, 78, 86, 90, 93, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 115, 118, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 151, 154, 155, 170, 171, 172, 213, 216, 218, 230, 231, 233, 234, 236, 239], "typic": [3, 7, 23, 41, 44, 46, 47, 48, 228], "organis": 3, "allow": [3, 11, 12, 14, 15, 23, 24, 41, 44, 46, 47, 48, 49, 86, 100, 113, 166, 228, 230, 236, 237, 238], "gener": [3, 6, 7, 14, 26, 34, 42, 45, 75, 82, 83, 107, 121, 128, 136, 139, 142, 143, 162, 170, 173, 174, 177, 187, 198, 230, 231, 232, 233, 234, 236, 237, 238, 239], "arbitrari": [3, 24, 47, 48, 230, 231], "nest": [3, 19, 23, 41, 44, 46, 47, 48, 49, 170, 171, 172, 228, 231, 237, 239], "attribut": [3, 23, 41, 44, 46, 47, 48, 78, 85, 139, 231, 236], "batch_siz": [3, 7, 11, 12, 14, 19, 25, 26, 27, 28, 41, 43, 45, 51, 58, 59, 60, 61, 63, 86, 101, 115, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 189, 195, 203, 206, 208, 211, 213, 216, 230, 231, 233, 234, 236, 237, 238, 239], "togeth": [3, 11, 12, 14, 15, 129, 130, 131, 143, 236], "expect": [3, 6, 19, 23, 29, 41, 44, 45, 46, 47, 48, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 91, 96, 135, 138, 141, 151, 152, 160, 161, 201, 225, 228, 230, 238], "live": [3, 11, 12, 14, 15, 23, 25, 26, 27, 28, 41, 44, 45, 46, 47, 48], "doe": [3, 25, 27, 32, 38, 116, 140, 141, 152, 160, 161, 169, 198, 228, 230, 237, 238], "actual": [3, 6, 11, 12, 15, 41, 44, 46, 47, 48, 200, 230, 231], "respons": [3, 7, 198, 236, 238], "just": [3, 189, 228, 231, 236, 237, 238, 239], "retriev": [3, 25, 26, 27, 28, 41, 44, 46, 47, 48, 49, 64, 75, 100, 101, 115, 139, 152, 160, 161, 170, 171, 172, 203, 206, 208, 211, 213, 216, 222, 228, 237, 238], "care": [3, 7, 41, 44, 46, 47, 48, 89, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 230, 231], "map": [3, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 35, 41, 44, 46, 47, 48, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 79, 80, 81, 83, 85, 86, 87, 88, 89, 91, 94, 118, 129, 130, 131, 138, 139, 141, 143, 144, 224, 230, 231, 234, 236, 237], "desir": [3, 23, 41, 44, 46, 47, 48, 49, 66, 75, 78, 86, 90, 93, 99, 102, 113, 138, 139, 230, 231, 237], "see": [3, 5, 6, 7, 8, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 95, 102, 111, 113, 116, 125, 126, 138, 139, 195, 230, 231, 236, 237, 238], "below": [3, 6, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 102, 111, 113, 125, 126, 138, 195], "parametr": [3, 117, 139, 164, 230, 236], "hardwar": 3, "observation_spec": [3, 41, 45, 63, 64, 65, 66, 68, 69, 71, 73, 75, 78, 79, 82, 83, 85, 86, 87, 88, 89, 90, 91, 101, 115, 201, 218, 230, 233, 238], "compositespec": [3, 41, 43, 45, 67, 85, 86, 101, 115, 128, 132, 134, 136, 141, 224, 230, 238], "pair": [3, 23, 41, 44, 46, 47, 48, 49, 86, 129, 139, 230, 231, 233, 237, 238], "input_spec": [3, 41, 45, 47, 48, 66, 67, 68, 75, 83, 85, 89, 90, 91, 101, 115, 238], "action_spec": [3, 13, 41, 44, 45, 46, 47, 48, 51, 58, 90, 123, 128, 130, 133, 136, 137, 144, 145, 218, 230, 231, 233, 234, 238, 239], "reward_spec": [3, 41, 45, 62, 66, 68, 80, 81, 82, 89, 90, 91, 101, 115, 238], "reward": [3, 11, 12, 14, 23, 29, 41, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 62, 66, 68, 80, 81, 82, 83, 89, 90, 91, 92, 93, 94, 100, 101, 115, 143, 153, 154, 157, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 191, 192, 194, 196, 222, 228, 230, 231, 233, 234, 237, 238, 239], "importantli": [3, 139], "4": [3, 6, 11, 12, 14, 17, 20, 24, 45, 52, 53, 54, 57, 94, 101, 102, 103, 104, 109, 110, 112, 113, 115, 118, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 147, 180, 230, 231, 234, 237, 238, 239], "action_s": 3, "simpli": [3, 5, 69, 83, 230, 231, 238], "With": [3, 228, 237, 238], "necessarili": 3, "requir": [3, 6, 7, 14, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 113, 138, 140, 141, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 228, 230, 231, 236, 238], "stateless": [3, 47, 48, 89, 238], "set_se": [3, 11, 12, 14, 15, 41, 44, 45, 46, 47, 48, 51, 58, 75, 90, 230, 238, 239], "integ": [3, 11, 12, 14, 15, 21, 22, 23, 24, 31, 38, 41, 44, 46, 47, 48, 72, 75, 85, 102, 113], "seed": [3, 11, 12, 14, 15, 41, 44, 45, 46, 47, 48, 52, 59, 60, 90, 96, 198, 230], "next": [3, 7, 11, 12, 14, 19, 23, 25, 26, 27, 41, 42, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 94, 100, 101, 115, 123, 143, 162, 169, 170, 171, 172, 230, 231, 233, 234, 238, 239], "determinist": [3, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 109, 119, 123, 128, 134, 138, 139, 230, 231, 238], "preced": [3, 112, 236], "without": [3, 6, 8, 23, 41, 44, 46, 47, 48, 130, 162, 169, 218, 225, 230, 231, 238], "risk": 3, "overlap": 3, "consecut": [3, 135, 231, 238], "still": [3, 8, 85, 132, 160, 230, 231, 233, 238], "reproduc": [3, 96], "max_step": [3, 41, 44, 45, 46, 47, 48, 59, 60, 85, 100, 230, 231, 238, 239], "maximum": [3, 11, 12, 14, 15, 18, 23, 35, 36, 37, 41, 44, 46, 47, 48, 67, 80, 85, 87, 124, 125, 126, 136, 164, 195, 230, 231, 238, 239], "safemodul": [3, 45, 61, 101, 114, 129, 130, 131, 132, 134, 135, 136, 139, 141, 143, 146, 147, 151, 152, 153, 156, 157, 158, 160, 161, 162, 163, 164, 169, 170, 171, 172, 194, 204, 205, 218, 224, 239], "ani": [3, 4, 7, 19, 23, 25, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 71, 78, 90, 94, 96, 102, 113, 117, 138, 139, 140, 141, 161, 184, 198, 225, 230, 231, 238, 239], "compat": [3, 6, 10, 23, 38, 41, 44, 46, 47, 48, 56, 63, 94, 146, 166, 231, 239], "better": [3, 7, 231], "intens": [3, 7], "gym3": 3, "envpool": [3, 46], "interfac": [3, 113, 116, 236], "simultan": [3, 47, 48], "often": [3, 7, 159, 198, 238], "competit": 3, "advantag": [3, 7, 110, 151, 152, 160, 161, 163, 170, 171, 172, 173, 174, 175, 177, 178, 228, 230, 231, 238], "scale": [3, 75, 81, 109, 111, 118, 122, 123, 125, 126, 129, 130, 131, 136, 139, 141, 196, 201, 203, 211, 213, 216, 222, 230, 231, 236, 239], "varieti": 3, "its": [3, 4, 6, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 41, 44, 45, 46, 47, 48, 63, 89, 90, 94, 102, 132, 133, 134, 139, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 198, 218, 228, 230, 231, 234, 236, 238], "own": [3, 11, 12, 15, 23, 41, 44, 46, 47, 48, 231, 236], "As": [3, 41, 44, 46, 47, 48, 139, 230, 231, 234, 238, 239], "inherit": [3, 114, 228, 236, 237], "enjoi": 3, "exact": 3, "Of": [3, 6, 225, 238], "cours": [3, 225, 238], "correspond": [3, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 41, 44, 45, 46, 47, 48, 78, 86, 90, 93, 94, 135, 139, 231, 234], "count": [3, 42, 85, 135, 194, 200, 238], "def": [3, 10, 23, 41, 42, 44, 45, 46, 47, 48, 101, 115, 142, 144, 147, 228, 230, 231, 233, 236, 237, 238, 239], "make_env": [3, 60, 94, 100, 204, 205, 230, 231, 238], "gymenv": [3, 4, 11, 12, 14, 15, 42, 56, 66, 75, 86, 90, 94, 203, 206, 208, 211, 213, 216, 218, 224, 230, 231, 234, 238, 239], "pendulum": [3, 11, 12, 14, 15, 42, 46, 54, 55, 66, 75, 86, 90, 94, 218, 231, 238, 239], "v1": [3, 11, 12, 14, 42, 46, 75, 86, 166, 175, 176, 178, 179, 231, 238, 239], "from_pixel": [3, 52, 53, 203, 211, 213, 216, 230, 231, 234, 238, 239], "9": [3, 6, 23, 94, 230, 231, 234, 237], "81": 3, "0": [3, 4, 5, 6, 7, 9, 10, 21, 22, 23, 24, 25, 27, 32, 41, 44, 45, 46, 47, 48, 51, 58, 62, 64, 66, 67, 74, 75, 78, 86, 88, 90, 93, 94, 96, 100, 101, 102, 103, 104, 106, 109, 111, 113, 115, 116, 117, 118, 122, 123, 124, 125, 126, 132, 134, 135, 138, 141, 148, 151, 152, 156, 157, 158, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 189, 196, 198, 218, 222, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239], "must": [3, 6, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 35, 36, 37, 38, 41, 42, 44, 46, 47, 48, 72, 75, 86, 90, 91, 102, 113, 138, 139, 144, 145, 173, 174, 175, 176, 177, 178, 179, 189, 194, 195, 198, 199, 203, 206, 208, 211, 213, 216, 230, 231, 233, 236, 237, 239], "print": [3, 5, 6, 11, 12, 14, 17, 19, 20, 23, 24, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 67, 68, 75, 86, 88, 94, 100, 102, 113, 118, 128, 129, 130, 131, 133, 134, 135, 137, 138, 141, 142, 144, 145, 147, 203, 206, 208, 211, 213, 216, 218, 228, 230, 231, 233, 234, 236, 237, 238, 239], "b": [3, 6, 7, 16, 19, 116, 117, 170, 171, 172, 181, 234, 236, 237], "c": [3, 5, 6, 19, 75, 203, 206, 208, 211, 213, 216, 237], "d": [3, 25, 32, 139, 237, 239], "get": [3, 5, 6, 7, 38, 42, 47, 48, 64, 67, 68, 75, 88, 94, 128, 134, 139, 173, 174, 177, 188, 230, 231, 236, 238, 239], "forc": [3, 5, 6, 231], "variou": [3, 11, 12, 14, 15, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 220, 221, 230, 231, 238], "reset_work": 3, "fals": [3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 55, 58, 59, 60, 64, 66, 71, 74, 75, 78, 81, 86, 88, 90, 91, 93, 94, 96, 101, 102, 103, 113, 115, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 166, 170, 171, 172, 175, 176, 178, 179, 191, 192, 194, 195, 196, 198, 203, 206, 208, 211, 213, 216, 222, 228, 230, 231, 233, 234, 236, 237, 238, 239], "field": [3, 11, 12, 14, 15, 19, 23, 41, 44, 45, 46, 47, 48, 51, 58, 59, 60, 86, 90, 101, 115, 129, 130, 131, 133, 135, 136, 137, 138, 141, 142, 144, 145, 201, 203, 206, 208, 211, 213, 216, 225, 231, 233, 234, 236, 237, 238, 239], "bool": [3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 58, 59, 60, 64, 67, 71, 74, 75, 78, 81, 86, 88, 90, 91, 93, 94, 96, 100, 101, 102, 103, 104, 111, 113, 115, 116, 117, 125, 126, 132, 135, 138, 139, 140, 141, 146, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 170, 171, 172, 175, 176, 178, 179, 180, 181, 191, 192, 194, 195, 196, 198, 203, 206, 208, 211, 213, 216, 222, 231, 233, 234, 238, 239], "500": [3, 198, 230, 231, 238, 239], "uint8": [3, 31, 88, 231, 234, 238, 239], "none": [3, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 71, 73, 75, 76, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 110, 112, 113, 114, 115, 116, 117, 121, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 157, 158, 163, 164, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 193, 194, 195, 198, 201, 203, 204, 205, 206, 208, 211, 213, 216, 218, 220, 221, 222, 228, 230, 231, 236, 237, 238, 239], "is_shar": [3, 11, 12, 14, 19, 45, 51, 58, 59, 60, 86, 94, 101, 115, 129, 130, 131, 133, 135, 136, 137, 138, 141, 142, 144, 145, 203, 206, 208, 211, 213, 216, 231, 233, 234, 236, 237, 238, 239], "note": [3, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 94, 135, 139, 230, 231, 233, 236, 237, 238], "launch": 3, "quit": [3, 230, 231, 238], "mani": [3, 152, 160, 161, 162, 237, 238], "start": [3, 4, 11, 42, 100, 193, 230, 231, 238], "bottleneck": [3, 7], "why": [3, 230, 238], "so": [3, 5, 6, 9, 23, 41, 44, 46, 47, 48, 86, 94, 140, 141, 230, 238], "onc": [3, 6, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 90, 132, 134, 228, 230, 231, 238], "great": [3, 6, 7, 237, 239], "speedup": [3, 7, 238], "anoth": [3, 7, 41, 44, 46, 47, 48, 89, 113, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 230, 233, 237, 238], "thing": [3, 6, 7, 231, 238], "misspecifi": 3, "caus": [3, 6, 7], "breakag": 3, "prealloc": 3, "In": [3, 4, 6, 7, 9, 10, 11, 12, 15, 23, 41, 44, 46, 47, 48, 66, 78, 83, 86, 89, 90, 93, 111, 113, 123, 125, 126, 138, 141, 150, 199, 220, 221, 222, 230, 231, 233, 234, 237, 238], "obj": [3, 19, 138, 139, 140], "rais": [3, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 70, 90, 96, 147, 230, 231], "assert": [3, 5, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 44, 94, 96, 100, 118, 170, 171, 172, 189, 197, 230, 231, 233, 236, 237, 238], "mismatch": [3, 237], "serialenv": [3, 86, 224, 238], "mostli": [3, 15, 238], "purpos": [3, 6, 218, 234, 237, 238], "want": [3, 5, 6, 7, 75, 230, 234, 237, 238, 239], "assess": [3, 230], "subprocess": [3, 42], "addit": [3, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 132, 138, 150, 170, 231], "multithread": [3, 25, 26, 27, 46], "multithreadedenv": [3, 224], "underneath": 3, "higher": [3, 230, 231, 238], "restrict": [3, 231, 234, 238], "flexibl": [3, 8, 46, 228, 236, 238], "cover": [3, 225, 239], "popular": 3, "atari": [3, 63, 238], "classic": [3, 45, 236, 237], "benchmark_batched_env": 3, "compar": [3, 41, 194, 231, 238], "case": [3, 4, 6, 7, 10, 11, 12, 14, 15, 19, 25, 27, 32, 41, 44, 46, 47, 48, 86, 90, 96, 113, 138, 139, 141, 150, 189, 199, 220, 221, 222, 228, 230, 236, 237, 238], "raw": [3, 111, 125, 126], "treat": 3, "To": [3, 5, 6, 7, 23, 25, 26, 27, 41, 44, 46, 47, 48, 94, 129, 130, 131, 135, 198, 230, 231, 234, 236, 238, 239], "logic": 3, "torchvis": [3, 78, 93, 238, 239], "transformedenv": [3, 42, 66, 74, 75, 86, 89, 94, 203, 206, 208, 211, 213, 216, 224, 230, 231, 233, 234, 238, 239], "primit": [3, 230, 231], "built": [3, 4, 6, 214, 218, 219, 222, 238], "base_env": [3, 67, 68, 86, 230, 231, 234, 238, 239], "totensorimag": [3, 208, 224, 231, 238, 239], "in_kei": [3, 11, 12, 14, 45, 62, 63, 64, 65, 67, 68, 71, 73, 75, 76, 78, 79, 80, 81, 82, 87, 88, 89, 93, 94, 101, 115, 128, 129, 130, 131, 136, 138, 139, 141, 142, 146, 147, 153, 154, 170, 171, 172, 180, 181, 213, 216, 218, 230, 231, 233, 234, 236, 238, 239], "resiz": [3, 224, 231, 238], "64": [3, 103, 104, 110, 230, 231, 233, 234, 238, 239], "By": [3, 24, 44, 47, 48, 139, 194, 222, 234, 237, 238], "now": [3, 6, 230, 233, 234, 236, 237, 238], "appar": [3, 191], "bring": [3, 238], "signific": [3, 4, 7, 238], "kind": [3, 29, 100], "consult": 3, "achiev": [3, 23, 41, 44, 46, 47, 48, 195, 228, 236, 237, 238], "interest": [3, 47, 48, 139, 238], "abov": [3, 6, 23, 41, 44, 46, 47, 48, 111, 125, 126, 150, 228, 230, 231, 238], "resize_par": 3, "sinc": [3, 4, 6, 23, 41, 44, 46, 47, 48, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 230, 231, 234, 238, 239], "out_kei": [3, 11, 12, 14, 45, 47, 48, 62, 63, 64, 65, 71, 73, 75, 76, 78, 79, 80, 82, 87, 88, 89, 93, 101, 115, 128, 129, 130, 131, 136, 138, 139, 141, 142, 144, 145, 146, 147, 170, 171, 172, 194, 218, 230, 233, 234, 236, 238, 239], "keyword": [3, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 139, 219, 230, 236, 238], "easi": [3, 4, 231, 234, 237, 238], "root": [3, 19, 111, 125, 126, 238], "graph": [3, 7, 167, 168], "inv": [3, 67], "appli": [3, 23, 25, 26, 27, 28, 41, 44, 46, 47, 48, 63, 64, 66, 67, 69, 70, 71, 72, 77, 83, 85, 86, 87, 89, 90, 92, 94, 125, 170, 193, 228, 230, 231, 236, 238, 239], "revers": 3, "order": [3, 14, 23, 24, 25, 26, 27, 28, 41, 44, 46, 47, 48, 90, 138, 140, 141, 236], "chain": [3, 25, 26, 27, 66, 67, 102, 141, 238], "taken": [3, 41, 44, 46, 47, 48, 231], "includ": [3, 6, 8, 23, 35, 36, 37, 38, 41, 44, 45, 46, 47, 48, 90, 94, 200, 228, 230, 231, 237, 238], "invers": [3, 75, 149], "through": [3, 4, 7, 14, 47, 48, 113, 139, 140, 141, 148, 230, 231, 233, 234, 236, 238], "in_keys_inv": [3, 68, 75, 76, 89, 230, 233, 238], "append_transform": [3, 25, 26, 27, 28, 78, 86, 230, 238, 239], "doubletofloat": [3, 203, 206, 211, 213, 216, 224, 230, 233], "float32": [3, 11, 12, 14, 19, 25, 29, 32, 45, 51, 58, 59, 60, 68, 75, 86, 88, 101, 115, 129, 130, 131, 133, 135, 136, 137, 138, 141, 142, 144, 145, 203, 206, 208, 211, 213, 216, 231, 233, 234, 236, 237, 238, 239], "float64": [3, 23, 41, 44, 46, 47, 48, 59, 60, 66, 78, 86, 90, 93, 138, 233, 238], "regist": [3, 23, 24, 41, 44, 46, 47, 48, 90, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 228, 236], "log": [3, 7, 107, 121, 126, 139, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 191, 192, 194, 198, 218, 228, 231, 236, 239], "tool": [4, 238], "context": [4, 7, 23, 41, 42, 44, 46, 47, 48, 86, 91, 116, 167, 168, 170, 173, 174, 177, 194, 230, 231, 234, 236], "real": [4, 139], "world": [4, 45, 143, 157, 238], "system": 4, "robot": [4, 6, 78, 93], "game": 4, "adopt": [4, 230, 238], "interact": [4, 6, 7, 14, 139, 238], "histor": 4, "wa": [4, 6, 41, 44, 46, 47, 48, 90, 159, 165, 230, 231, 233, 239], "ceas": 4, "maintain": [4, 8], "fork": 4, "gymnasium": [4, 10, 239], "farama": 4, "foundat": 4, "document": [4, 6, 23, 41, 44, 46, 47, 48, 90, 239], "further": 4, "detail": [4, 5, 6, 23, 41, 44, 46, 47, 48, 90, 144, 151, 155, 161, 206, 225, 233, 237], "usag": [4, 6, 164], "known": [4, 6, 7, 230], "gone": 4, "bc": [4, 239], "break": [4, 11, 12, 14, 23, 41, 44, 46, 47, 48, 94, 230, 231, 236, 239], "chang": [4, 6, 23, 35, 36, 37, 38, 41, 44, 46, 47, 48, 90, 94, 230, 234, 237, 238], "face": [4, 7, 8, 231, 238], "modif": [4, 19, 23, 41, 44, 46, 47, 48, 71, 230, 237], "practic": [4, 7, 111, 125, 126, 150, 225, 231, 234, 238], "torchrl": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 232, 233, 234, 235, 236, 237], "against": [4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 96, 138, 139], "13": [4, 9, 10, 236], "between": [4, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 67, 74, 80, 88, 90, 96, 102, 113, 139, 157, 158, 160, 166, 170, 194, 198, 230, 231, 236, 237, 238], "howev": [4, 6, 23, 41, 44, 46, 47, 48, 82, 85, 90, 230, 231, 237, 238], "around": [4, 6, 15, 27, 28, 45, 139, 170, 238], "construct": [4, 23, 41, 44, 46, 47, 48, 96, 123, 139, 198, 203, 211, 236, 238], "automat": [4, 41, 44, 46, 47, 48, 75, 128, 136, 231, 239], "wrap": [4, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 96, 129, 130, 131, 143, 230, 231, 236, 238], "best": [4, 8, 231, 239], "gymwrapp": [4, 44, 224, 239], "If": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 44, 45, 46, 47, 48, 49, 64, 65, 67, 69, 71, 74, 75, 78, 82, 83, 85, 86, 89, 90, 93, 94, 102, 112, 113, 132, 134, 135, 138, 139, 140, 141, 147, 148, 150, 157, 164, 169, 170, 171, 172, 178, 179, 193, 195, 198, 199, 201, 203, 211, 213, 216, 218, 222, 225, 230, 231, 233, 236, 237, 238, 239], "you": [4, 5, 6, 7, 9, 23, 41, 44, 46, 47, 48, 94, 225, 230, 231, 233, 234, 237, 238, 239], "feel": [4, 225, 239], "free": [4, 6, 151, 157, 161, 228, 239], "gladli": 4, "instruct": [5, 6, 9, 67], "prepar": 5, "conda": [5, 6, 225], "assum": [5, 19, 24, 28, 44, 47, 48, 65, 71, 78, 82, 86, 93, 112, 164, 175, 176, 178, 179, 181, 230, 231, 233], "let": [5, 6, 23, 41, 44, 46, 47, 48, 194, 230, 231, 233, 234, 236, 237, 238, 239], "n": [5, 6, 17, 20, 23, 24, 41, 44, 46, 47, 48, 63, 67, 71, 91, 115, 139, 151, 169, 195, 228, 230, 231, 237, 238], "7": [5, 9, 20, 24, 101, 102, 112, 113, 115, 230, 231, 234, 239], "cmake": 5, "14": [5, 10, 75], "activ": [5, 6, 8, 102, 109, 113, 161, 239], "sim": 5, "bullet": 5, "physic": [5, 6, 228, 230], "headless": [5, 6], "mode": [5, 14, 23, 41, 44, 46, 47, 48, 90, 94, 97, 99, 107, 111, 121, 124, 125, 126, 139, 194, 230, 231, 238, 239], "cluster": [5, 6, 7, 225], "withbullet": 5, "forg": [5, 6], "aihabitat": 5, "nightli": 5, "y": [5, 6, 112, 147], "git": [5, 6, 9], "facebookresearch": 5, "subdirectori": 5, "reduc": [5, 20], "verbos": 5, "export": 5, "magnum_log": 5, "quiet": 5, "habitat_sim_log": 5, "remov": [5, 23, 41, 44, 46, 47, 48, 84, 230, 238], "command": [5, 6, 9, 238], "more": [5, 7, 10, 11, 12, 14, 15, 23, 25, 26, 27, 28, 41, 44, 46, 47, 48, 95, 113, 116, 118, 132, 134, 138, 144, 151, 155, 161, 170, 173, 174, 177, 193, 206, 225, 228, 230, 231, 233, 234, 236, 237, 238], "readm": [5, 6], "md": [5, 6], "habitatenv": [5, 224], "_has_habitat": 5, "_env": [5, 238], "available_env": [5, 50, 51, 52, 53, 54, 55, 57, 58, 238], "startswith": 5, "oserror": 5, "could": [5, 231, 234, 237, 238], "load": [5, 11, 12, 14, 15, 25, 26, 27, 53, 222, 228, 231], "libllvmlit": 5, "solut": [5, 6, 7, 8, 225, 228, 239], "ionstal": 5, "miss": [5, 6, 10, 19, 23, 41, 44, 46, 47, 48, 86, 90, 140, 141, 225], "add": [5, 23, 25, 26, 27, 28, 39, 40, 41, 44, 46, 47, 48, 116, 151, 193, 230, 231, 237, 239], "pointer": [5, 42, 237], "replac": [5, 6, 23, 67, 231], "path": [5, 6, 23, 35, 41, 44, 46, 47, 48, 78, 93, 115, 198, 228], "env_nam": [5, 46, 50, 52, 54, 56, 57, 230, 238], "llvmlite": 5, "config": [5, 6, 78, 93, 201, 203, 204, 205, 206, 208, 211, 213, 214, 216, 219], "var": [5, 6, 23, 41, 44, 46, 47, 48, 90], "ld_preload": [5, 6], "python3": [5, 6, 9, 230, 231], "8": [5, 6, 51, 102, 103, 104, 110, 113, 129, 130, 131, 136, 138, 141, 234, 236, 239], "site": [5, 6, 230, 231], "deactiv": [5, 6], "importerror": [5, 6, 9], "usr": [5, 6, 9], "x86_64": [5, 6], "linux": [5, 6], "gnu": [5, 6], "libopengl": [5, 6], "undefin": [5, 6, 9, 23, 41, 44, 46, 47, 48, 90], "symbol": [5, 6, 9], "_glapi_tls_curr": [5, 6], "link": [5, 6], "right": [5, 6, 112, 230, 231, 238], "mujoco_env": [5, 6], "proper": [5, 6], "name": [5, 6, 10, 23, 41, 44, 46, 47, 48, 52, 67, 69, 82, 83, 90, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 182, 184, 185, 186, 188, 192, 193, 203, 206, 208, 211, 213, 216, 228, 230, 231, 236, 238], "libglvnd": [5, 6], "glx": [5, 6], "cos7": [5, 6], "reinstal": [5, 6], "xvfbwrapper": [5, 6], "sysroot": [5, 6], "lib64": [5, 6], "libgldispatch": [5, 6], "offici": 6, "repositori": 6, "stand": [6, 129, 130, 131, 233, 238], "joint": [6, 231], "dynam": 6, "contact": 6, "engin": 6, "facilit": [6, 77, 78, 93, 129, 130, 131, 230], "develop": [6, 239], "biomechan": 6, "graphic": 6, "anim": 6, "machin": [6, 23], "area": 6, "demand": [6, 238], "fast": [6, 8, 51, 162, 230, 231], "accur": [6, 230], "articul": 6, "recent": [6, 10, 230, 231, 238], "acquir": [6, 230], "access": [6, 7, 23, 41, 44, 46, 47, 48, 49, 78, 222, 225, 237], "whomev": 6, "licenc": 6, "incorpor": [6, 230], "make": [6, 23, 38, 41, 44, 46, 47, 48, 55, 58, 75, 78, 96, 100, 116, 139, 161, 195, 205, 222, 230, 231, 233, 234, 236, 237, 238, 239], "relianc": 6, "obsolet": 6, "seri": [6, 7, 24, 39, 40, 48, 74, 89, 181, 238], "keep": [6, 7, 12, 75, 78, 93, 94, 135, 191, 198, 231, 237, 238, 239], "legaci": 6, "capabl": [6, 228, 230, 233, 234, 238], "glfw": 6, "osmesa": 6, "egl": 6, "hand": [6, 230], "gpu": [6, 7, 23, 41, 44, 46, 47, 48, 238], "our": [6, 7, 230, 231, 233, 234, 236, 237, 239], "advic": [6, 238], "sudo": [6, 225], "enabl": [6, 7, 135, 194], "apt": 6, "libglfw3": 6, "libglew2": 6, "libgl1": 6, "mesa": 6, "libosmesa6": 6, "via": [6, 7, 47, 78, 89, 93, 153, 228, 230, 238], "awar": [6, 35, 36, 37, 38], "fact": [6, 7, 231, 234, 238], "indent": 6, "workflow": [6, 129, 130, 131], "glew": 6, "mesalib": 6, "anaconda": 6, "libgl": 6, "cos6": 6, "menpo": 6, "glfw3": 6, "both": [6, 23, 41, 42, 44, 46, 47, 48, 90, 102, 113, 129, 130, 131, 194, 230, 234, 236, 238], "tell": 6, "variabl": [6, 7, 20, 24, 115, 129, 130, 131, 162, 228, 236], "mujoco_gl": 6, "pyopengl_platform": 6, "pre": [6, 23, 36, 41, 44, 46, 47, 48, 78, 93, 238], "binari": [6, 17, 24, 62, 144, 145], "releas": [6, 9, 23, 41, 44, 46, 47, 48, 90, 239], "need": [6, 7, 9, 23, 38, 41, 44, 46, 47, 48, 71, 78, 90, 93, 94, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 116, 118, 119, 120, 122, 123, 132, 134, 135, 138, 148, 150, 162, 169, 181, 198, 222, 230, 236, 237, 238, 239], "These": [6, 78, 93, 238], "instead": [6, 7, 10, 20, 23, 41, 44, 46, 47, 48, 71, 86, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 222, 230, 231, 236, 238], "refer": [6, 7, 23, 41, 44, 46, 47, 48, 90, 94, 101, 109, 115, 119, 120, 122, 123, 144, 151, 155, 156, 157, 158, 161, 170, 173, 174, 177, 206, 230, 231], "setup": 6, "mkdir": 6, "cd": 6, "here": [6, 7, 8, 9, 230, 231, 233, 234, 236, 237, 238, 239], "tag": [6, 181, 184, 222], "earlier": [6, 11, 12, 14, 15, 230], "roboti": 6, "u": [6, 9, 230, 234, 236, 238, 239], "download": [6, 9, 78, 93, 230, 231, 232, 233, 234, 236, 237, 238, 239], "html": [6, 46], "wget": 6, "mujoco210": 6, "tar": 6, "gz": 6, "xf": 6, "charg": 6, "obtain": [6, 44, 78, 93, 101, 195, 230, 231], "mjkei": 6, "txt": 6, "mjlib_path": 6, "home": [6, 230, 231, 234], "bin": 6, "libmujoco210": 6, "ld_library_path": 6, "mujoco_py_mujoco_path": 6, "mujoco_py_mjkey_path": 6, "reload": 6, "recommend": [6, 237], "hard": [6, 159, 231, 238], "later": [6, 106, 139, 230, 231], "try": [6, 7, 147, 231, 237, 238, 239], "nativ": [6, 8, 41, 44, 46, 47, 48, 63, 236], "local": [6, 9, 14, 23, 41, 44, 46, 47, 48, 90, 184], "modifi": [6, 7, 23, 41, 44, 46, 47, 48, 66, 71, 78, 86, 89, 90, 93, 135, 138, 200, 203, 211, 213, 216, 230, 236], "nvidia": 6, "driver": 6, "older": [6, 10], "hack": 6, "line": [6, 23, 41, 44, 46, 47, 48, 230, 231], "adatp": 6, "script": [6, 96, 203, 206, 208, 211, 213, 216, 218, 222, 228, 230, 231, 233, 234, 236, 237, 238, 239], "go": [6, 234, 236, 238], "unnot": 6, "until": 6, "complet": [6, 8, 44, 225, 231, 233], "mujoco_pi": 6, "trigger": 6, "pipelin": 6, "troubleshoot": 6, "gl": 6, "h": [6, 65, 79, 88, 115, 181], "eglshim": 6, "10": [6, 19, 42, 45, 59, 60, 88, 101, 112, 115, 134, 135, 162, 163, 164, 170, 171, 172, 189, 228, 230, 231, 236, 237, 238, 239], "fatal": 6, "No": 6, "directori": [6, 35, 184, 228], "sure": [6, 38, 100, 222, 230, 236, 237, 238, 239], "glu": 6, "38": 6, "disappear": [6, 233], "filenotfounderror": 6, "errno": 6, "patchelf": 6, "fatalerror": 6, "gladloadgl": 6, "mj_env": 6, "__init__": [6, 45, 101, 115, 142, 144, 147, 228, 236, 238], "912": 6, "glfwerror": 6, "65537": 6, "sovl": 6, "myscript": 6, "cymj": 6, "linuxgpuextensionbuild": 6, "filenam": 6, "runtimeerror": [6, 7, 23, 41, 44, 46, 47, 48, 90, 230, 237, 238], "job": [6, 237], "schedul": [6, 194], "slurm": 6, "mjrendercontext": 6, "pyx": 6, "46": 6, "114": 6, "_setup_opengl_context": 6, "opengl_context": 6, "130": 6, "offscreenopenglcontext": 6, "fail": [6, 96], "opengl": 6, "global": [6, 139, 228, 230, 236], "cuda_visible_devic": 6, "id": [6, 16, 135, 162, 187, 213], "slurm_step_gpu": 6, "enviro": [6, 9], "imag": [6, 52, 65, 78, 88, 93, 113, 231, 234, 237, 238], "black": 6, "read": [6, 11, 12, 14, 15, 35, 36, 37, 38, 44, 47, 48, 49, 63, 64, 66, 67, 69, 70, 71, 72, 77, 83, 85, 86, 87, 89, 92, 94, 121, 129, 130, 131, 138, 139, 141, 143, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 170, 171, 172, 181, 198, 203, 211, 213, 216, 230, 231, 233, 234, 236, 238], "onscreen": 6, "101": 6, "displai": [6, 198, 228, 231], "correctli": [6, 23, 41, 44, 46, 47, 48], "cannot": [6, 19, 237], "scratch": [7, 230, 231], "loop": [7, 11, 12, 14, 15, 44, 100, 198, 228, 230, 233, 237], "sketch": [7, 228], "ob": [7, 19, 68, 75, 88, 142, 170, 171, 172, 230, 233, 238, 239], "_": [7, 42, 64, 67, 68, 75, 88, 94, 138, 150, 170, 171, 172, 230, 231, 236, 239], "rang": [7, 10, 20, 42, 94, 100, 160, 228, 230, 231, 236, 237, 239], "n_training_step": 7, "datapoint": 7, "onlin": [7, 11, 15, 151, 161, 189, 222], "n_data_per_train": 7, "no_grad": [7, 23, 41, 44, 46, 47, 48, 230, 231], "append": [7, 25, 26, 27, 28, 42, 86, 100, 230, 231, 234, 237, 239], "replay_buff": [7, 32, 33, 34, 35, 36, 37, 38, 39, 40, 195, 218, 230, 231], "extend": [7, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 195, 228, 230, 231, 234, 239], "loss": [7, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 193, 198, 202, 207, 209, 210, 212, 213, 215, 218, 228, 230, 231, 237, 239], "offlin": [7, 11, 12, 14, 15, 96, 228, 234, 239], "loss_fn": [7, 239], "backward": [7, 23, 41, 44, 46, 47, 48, 94, 230, 231, 237], "zero_grad": [7, 23, 41, 44, 46, 47, 48, 228, 230, 231, 237], "backpropag": [7, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164], "decor": [7, 10], "differenti": [7, 170, 171, 172, 230], "pai": [7, 231], "attent": [7, 231, 236], "understand": [7, 230, 231], "denomin": 7, "probabl": [7, 107, 121, 126, 139, 231, 236, 239], "artifact": 7, "numer": [7, 94, 111, 125, 126, 138, 139, 237, 238], "misconcept": 7, "directli": [7, 45, 222, 231], "save": [7, 23, 41, 44, 46, 47, 48, 180, 198, 228, 231], "alreadi": [7, 23, 41, 44, 46, 47, 48, 139, 230, 231], "freed": 7, "appear": [7, 24], "compuat": 7, "twice": [7, 164], "fix": [7, 86, 164, 238], "retain_graph": 7, "lead": [7, 9, 10, 19, 86, 111, 125, 126, 239], "discuss": [7, 8], "inplac": [7, 23, 41, 44, 46, 47, 48, 230], "flag": [7, 25, 26, 27, 28, 173, 174, 175, 176, 177, 178, 179, 234], "reason": [7, 23, 41, 44, 46, 47, 48, 78, 230, 231], "updat": [7, 11, 12, 14, 15, 23, 32, 41, 44, 45, 46, 47, 48, 67, 90, 92, 94, 101, 115, 135, 138, 139, 151, 159, 161, 165, 170, 171, 172, 194, 198, 199, 204, 205, 217, 218, 228, 230, 231, 236, 238, 239], "critic": [7, 129, 151, 152, 160, 161, 163, 164, 236], "accumul": 7, "onto": [7, 24, 132, 134, 138, 139], "separ": [7, 11, 12, 15, 16, 78, 93, 153, 162, 164, 230, 238], "exclud": [7, 47, 48, 69, 230], "forward": [7, 23, 41, 44, 46, 47, 48, 63, 64, 66, 67, 69, 70, 71, 72, 75, 77, 78, 83, 85, 86, 87, 89, 92, 94, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 118, 119, 120, 122, 123, 132, 134, 135, 138, 139, 142, 144, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 170, 171, 172, 230, 231, 236, 239], "submodul": [7, 23, 41, 44, 46, 47, 48], "param": [7, 23, 41, 44, 45, 46, 47, 48, 107, 124, 136, 137, 138, 141, 142, 144, 145, 165, 168, 170, 171, 172, 206, 230, 231, 234, 236, 239], "grad": [7, 23, 41, 44, 46, 47, 48, 231], "whose": [7, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 118, 138, 230], "norm": [7, 198, 231], "strictli": [7, 23, 41, 44, 46, 47, 48, 90], "neg": [7, 11, 12, 14, 15, 25, 27, 32, 63, 71, 91, 156, 230], "ask": [7, 234, 238], "core": [7, 203, 206, 208, 211, 213, 216, 228, 239], "much": [7, 25, 27, 32, 160, 161, 237, 238], "upon": 7, "factor": [7, 23, 111, 117, 125, 126, 135, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 230, 231, 238], "fit": [7, 10, 75, 228], "everi": [7, 11, 12, 15, 19, 23, 24, 38, 41, 44, 46, 47, 48, 94, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 198, 228, 230, 231, 237], "bottlneck": 7, "affect": [7, 23, 41, 44, 46, 47, 48, 89, 90, 96], "brax": [7, 50, 51, 238], "jax": [7, 10], "improperli": 7, "item": [7, 11, 70, 153, 154, 189, 228, 230, 231, 237], "underli": 7, "manipul": [7, 78, 238], "tedeiou": 7, "priorit": [7, 25, 27, 32, 153, 154, 162, 164, 230, 231], "amount": [7, 47, 48, 135], "isn": [7, 138], "contigu": [7, 237, 238, 239], "costli": 7, "concaten": [7, 21, 22, 63, 64, 75, 89, 113, 141, 230, 231, 237, 238], "constitut": 7, "plain": 7, "profil": 7, "indic": [7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 44, 46, 47, 48, 64, 85, 86, 102, 113, 135, 148, 201, 222, 225, 228, 230, 236, 237, 238], "fulli": [7, 23, 41, 44, 46, 47, 48, 231], "frequent": 7, "techniqu": [7, 231], "target": [7, 23, 41, 42, 44, 46, 47, 48, 89, 138, 139, 153, 154, 155, 158, 159, 160, 162, 164, 165, 169, 170, 171, 172, 200, 217, 218, 228, 230, 231], "program": [7, 238], "incl": 7, "suit": [7, 53, 238], "mujoco_instal": 7, "valueerror": 7, "bad": 7, "fds_to_keep": 7, "One": [7, 121, 132, 134, 138, 166, 188, 230, 236, 237, 238], "view": [7, 20, 23, 24, 41, 44, 46, 47, 48, 113, 144, 230, 237, 238, 239], "expand": [7, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 138, 141, 236, 239], "new_shap": 7, "origin": [7, 11, 12, 14, 15, 67, 78, 90, 93, 138, 139, 159, 161, 213, 216, 233, 237, 238], "content": [7, 14, 46, 102, 113, 231, 237, 239], "lost": 7, "permut": [7, 237, 238, 239], "clone": [7, 129, 130, 131, 138, 203, 211, 213, 216, 230, 231, 236, 237, 239], "spin": [8, 238], "hug": 8, "syllabu": 8, "lectur": 8, "awesom": [8, 237], "curat": 8, "succinct": 8, "summari": [8, 75, 94], "reddit": 8, "reagent": 8, "product": [8, 220, 221], "orient": [8, 238], "stabl": [8, 9, 230], "baselines3": 8, "tf": 8, "agent": [8, 117], "bandit": 8, "tensorflow": 8, "kera": 8, "acm": 8, "framework": [8, 45, 238, 239], "dopamin": 8, "prototyp": 8, "salina": 8, "simpl": [8, 23, 24, 41, 44, 46, 47, 48, 103, 139, 163, 170, 230, 231, 237, 238], "sequenti": [8, 23, 41, 44, 46, 47, 48, 140, 141, 234, 236, 237, 238], "tianshou": 8, "eleg": 8, "rlpyt": 8, "rllib": 8, "industri": [8, 239], "grade": 8, "factori": 8, "throughput": 8, "cherri": 8, "jaxrl": 8, "space": [8, 24, 29, 67, 120, 132, 134, 135, 138, 139, 141, 144, 145, 230, 238, 239], "mbrl": [8, 45], "rlmeta": 8, "light": 8, "elegantrl": 8, "cloud": 8, "mtrl": 8, "baselin": [8, 231], "689": 9, "dist": 9, "_torchrl": 9, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 9, "colab": 9, "notebook": [9, 230, 231, 232, 233, 234, 236, 237, 238, 239], "24": [9, 234], "11": [9, 20, 24, 42, 88, 101, 115, 231, 235], "2022": [9, 239], "12": [9, 234, 237], "pip": [9, 238, 239], "solv": [9, 225, 230, 231], "pip3": 9, "extra": [9, 23, 41, 44, 46, 47, 48, 94], "url": 9, "org": [9, 25, 32, 63, 78, 103, 104, 105, 106, 109, 110, 115, 117, 119, 120, 122, 123, 135, 144, 151, 155, 156, 157, 158, 159, 161, 163, 164, 165, 170, 173, 174, 177, 203, 206, 211, 216, 234], "whl": 9, "latest": [9, 46, 195, 239], "There": [9, 228, 231, 238], "upgrad": 9, "previou": [9, 23, 123, 230, 236, 238], "relas": 9, "lib_version_her": 9, "module_nam": 10, "str": [10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 35, 41, 43, 44, 46, 47, 48, 52, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 93, 94, 97, 99, 101, 102, 103, 104, 105, 106, 110, 112, 113, 114, 115, 116, 117, 118, 128, 132, 133, 134, 135, 136, 138, 139, 142, 144, 145, 146, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 197, 201, 203, 206, 211, 213, 214, 216, 222, 230], "from_vers": 10, "to_vers": 10, "explicit": [10, 112, 230, 231], "intersect": 10, "eg": [10, 35, 36, 37, 38, 67], "v": [10, 94, 112, 164, 231, 236, 239], "longer": [10, 231], "fun": [10, 236, 237], "self": [10, 23, 41, 44, 45, 46, 47, 48, 66, 78, 86, 90, 93, 101, 115, 132, 134, 138, 142, 144, 147, 228, 230, 231, 236, 237, 239], "x": [10, 16, 19, 23, 88, 102, 108, 110, 112, 113, 115, 144, 147, 148, 150, 173, 174, 175, 176, 177, 178, 179, 181, 198, 231, 236, 239], "27": 10, "doesn": [10, 46], "create_env_fn": [11, 12, 14, 15, 42, 47, 48, 230, 239], "sequenc": [11, 12, 14, 15, 19, 21, 22, 25, 26, 39, 40, 62, 63, 64, 65, 67, 68, 71, 73, 75, 76, 79, 80, 81, 82, 87, 88, 89, 94, 102, 107, 113, 121, 128, 136, 139, 140, 141, 142, 180, 181, 193, 195, 197, 198, 203, 211, 213, 216, 231, 233, 236, 238], "callabl": [11, 12, 14, 15, 23, 25, 26, 27, 41, 42, 44, 45, 46, 47, 48, 150, 204, 205, 220, 221, 222], "union": [11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 41, 44, 46, 47, 48, 61, 66, 75, 78, 81, 90, 93, 94, 102, 103, 104, 105, 106, 107, 110, 112, 113, 116, 117, 121, 124, 125, 126, 135, 136, 138, 139, 140, 146, 147, 149, 154, 155, 159, 162, 164, 165, 170, 171, 172, 195, 203, 204, 205, 206, 211, 213, 214, 216, 218, 219, 220, 221, 222], "tensordictbas": [11, 12, 14, 15, 16, 19, 23, 27, 28, 41, 43, 44, 46, 47, 48, 49, 63, 64, 66, 69, 70, 71, 74, 77, 82, 83, 85, 86, 87, 89, 92, 94, 100, 101, 114, 115, 132, 134, 135, 138, 139, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 169, 170, 171, 172, 198], "total_fram": [11, 12, 14, 15, 198, 200, 218, 228, 230, 231, 239], "int": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 52, 59, 61, 63, 64, 65, 66, 67, 71, 72, 74, 75, 78, 79, 84, 85, 87, 90, 91, 93, 96, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 122, 123, 124, 125, 132, 134, 135, 137, 138, 139, 144, 145, 151, 152, 153, 156, 157, 158, 160, 161, 162, 164, 180, 181, 189, 190, 191, 194, 195, 198, 199, 203, 206, 211, 213, 214, 216, 220, 221, 222], "create_env_kwarg": [11, 12, 14, 15, 42, 46, 47, 48, 230], "dict": [11, 12, 14, 15, 19, 20, 21, 23, 41, 42, 44, 46, 47, 48, 86, 90, 94, 102, 103, 104, 105, 106, 110, 112, 113, 139, 184, 188, 194, 204, 205, 206, 213, 216, 220, 221, 222, 238], "200": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 59, 60, 103, 104, 109, 122, 123, 230], "postproc": [11, 12, 14, 15, 230, 231], "pin_memori": [11, 14, 15, 25, 26, 27, 47, 48, 77, 230, 239], "init_with_lag": [11, 12, 14, 15], "given": [11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 45, 46, 47, 48, 66, 67, 75, 78, 86, 90, 93, 100, 101, 109, 115, 135, 138, 139, 140, 141, 144, 145, 150, 153, 154, 169, 170, 171, 172, 190, 194, 218, 228, 230, 231, 236, 238], "datacollector": [11, 12, 14, 15, 139], "synchron": [11, 46, 220, 221], "recept": 11, "safe": [11, 12, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 132, 135, 138, 139, 146, 230, 239], "env_mak": [11, 12, 14, 218, 238], "linear": [11, 12, 14, 23, 41, 44, 45, 46, 47, 48, 66, 78, 86, 90, 93, 101, 102, 113, 115, 116, 117, 118, 122, 123, 128, 129, 130, 131, 134, 135, 136, 137, 138, 141, 142, 144, 145, 147, 170, 171, 172, 218, 233, 234, 236, 239], "2000": [11, 12, 14, 230], "50": [11, 12, 14, 234, 235], "enumer": [11, 12, 14, 23, 41, 44, 46, 47, 48, 230, 231, 239], "step_count": [11, 12, 14, 85, 230, 231, 239], "int64": [11, 12, 14, 17, 20, 21, 22, 24, 133, 135, 137, 144, 145, 208, 231, 238, 239], "traj_id": [11, 12, 14, 16, 230, 239], "shutdown": [11, 12, 14, 15, 230, 239], "del": [11, 12, 14, 230, 239], "bound": [11, 12, 14, 15, 18, 19, 23, 41, 44, 46, 47, 48, 94, 122, 123, 135, 138, 139, 238], "total": [11, 12, 14, 15, 17, 21, 22, 24, 44, 152, 160, 161, 189, 191, 194, 198, 200, 201, 230, 231, 233, 234, 235, 236, 237, 238, 239], "greater": [11, 12, 15, 230, 231, 239], "close": [11, 12, 14, 15, 44, 46, 152, 160, 161, 230, 239], "signal": [11, 12, 15, 230], "sent": [11, 12, 15, 35, 36, 47, 48, 94, 231, 237], "server": [11, 12, 15], "per": [11, 12, 14, 15, 47, 109, 198, 220, 221, 230, 231, 239], "span": [11, 12, 14, 15], "unless": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 236], "traje": [11, 12], "tori": [11, 12], "n_steps_max": [11, 12, 14, 15, 23, 230], "track": [11, 12, 14, 15, 82, 94, 135, 184, 191, 230, 231, 237], "independ": [11, 12, 14, 15, 89, 91, 164, 228, 230, 239], "ignor": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 67, 69, 83, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 236, 237, 238], "length": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 47, 48, 101, 102, 103, 105, 108, 113, 115, 138, 189, 195, 230, 231, 237, 238], "mainli": [11, 12, 14, 15], "postprocessor": [11, 12, 15], "format": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 238], "accord": [11, 12, 14, 15, 49, 75, 81, 111, 116, 122, 125, 126, 236, 237], "split_trajectori": [11, 12, 14, 15, 224], "inform": [11, 12, 14, 15, 23, 41, 42, 44, 46, 47, 48, 102, 113, 228, 231], "place": [11, 12, 14, 15, 19, 23, 41, 42, 44, 46, 47, 48, 49, 66, 78, 86, 90, 93, 94, 138, 195, 199, 200, 231, 236], "accommod": [11, 12, 14, 15], "kept": [11, 12, 14, 15, 47, 48, 67, 89, 96, 100, 111, 125, 126], "long": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 67, 231, 237], "truncat": [11, 12, 14, 15, 126, 238], "help": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 225, 230], "desynchron": [11, 12, 14, 15], "load_state_dict": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 90, 94, 228], "state_dict": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 90, 94, 222, 228, 238], "ordereddict": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 90, 94], "form": [11, 12, 15, 23, 25, 26, 27, 41, 44, 46, 47, 48, 94, 150, 152, 160, 161, 198], "worker0": [11, 12, 15], "state_dict0": [11, 12, 15], "worker1": [11, 12, 15], "state_dict1": [11, 12, 15], "reset_idx": [11, 12, 15], "static_se": [11, 12, 14, 15, 41, 44, 46, 47, 48, 90], "increment": [11, 12, 14, 15, 41, 44, 46, 47, 48, 85, 160], "last": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 71, 75, 87, 102, 112, 113, 119, 132, 134, 230, 231, 234, 238, 239], "env_fn": [11, 12, 14, 15, 42, 220, 221], "v0": [11, 12, 15, 44, 54, 55, 57, 58, 66, 90, 94, 218], "env_fn_parallel": [11, 12, 14, 15], "6": [11, 12, 14, 15, 58, 75, 102, 107, 112, 113, 124, 142, 203, 206, 208, 211, 213, 216, 230, 231, 234, 236, 237, 238, 239], "out_se": [11, 12, 14, 15, 238], "shut": [11, 12, 14, 15], "down": [11, 12, 14, 15], "irrevers": [11, 12, 15], "arg": [12, 19, 23, 35, 36, 41, 42, 44, 45, 46, 47, 48, 78, 84, 90, 91, 92, 93, 102, 113, 128, 129, 133, 137, 186, 191, 195, 198, 222], "kwarg": [12, 14, 15, 19, 23, 35, 36, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 78, 84, 86, 90, 91, 92, 93, 102, 103, 104, 105, 106, 110, 111, 113, 114, 121, 124, 126, 128, 129, 133, 136, 137, 139, 152, 160, 169, 181, 184, 186, 188, 191, 198, 203, 204, 205, 206, 211, 213, 216, 219, 220, 221], "envcreat": [14, 218, 219, 222, 224, 230, 231, 238, 239], "return_same_td": 14, "stop": [14, 41, 44, 46, 47, 48, 238, 239], "equat": [14, 135, 150, 152, 165], "exce": 14, "batcher": 14, "cautious": [14, 161], "ad": [14, 23, 25, 26, 27, 28, 32, 41, 44, 46, 47, 48, 49, 82, 90, 116, 117, 135, 152, 160, 161, 230, 238], "whole": [14, 19, 23, 41, 44, 46, 47, 48, 90, 189, 231], "ident": [14, 47, 48, 220, 221, 230, 236, 237], "yield": [14, 23, 41, 44, 46, 47, 48], "chunk": 14, "policy_state_dict": 14, "env_state_dict": 14, "singl": [15, 23, 25, 26, 27, 28, 41, 44, 46, 47, 48, 49, 63, 64, 78, 88, 93, 102, 112, 113, 141, 155, 162, 175, 176, 178, 179, 213, 222, 230, 231, 233, 234, 236], "paradigm": 15, "prefer": [15, 83], "mere": 15, "rollout_tensordict": 16, "zero": [16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 64, 67, 75, 101, 112, 134, 135, 148, 170, 171, 172, 236, 237, 239], "max": [16, 24, 67, 87, 124, 125, 126, 152, 162, 164, 230], "durat": [16, 231], "discret": [17, 20, 21, 22, 24, 31, 67, 121, 144, 145, 155], "dimens": [17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 63, 64, 71, 75, 84, 88, 91, 102, 113, 116, 117, 124, 125, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 170, 171, 172, 222, 230, 237], "5": [17, 42, 46, 58, 59, 60, 101, 102, 109, 111, 112, 113, 115, 125, 126, 133, 137, 144, 145, 160, 230, 231, 234, 237, 238, 239], "assert_is_in": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "belong": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "otherwis": [17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 67, 75, 86, 90, 94, 111, 125, 126, 157, 164, 194, 195, 228, 230, 238], "encod": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 67, 120, 121, 122, 133, 137, 144, 145, 150, 236], "val": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 239], "ndarrai": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 44, 135], "np": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 44, 230], "tupl": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 44, 46, 47, 48, 61, 75, 103, 112, 113, 118, 153, 156, 170, 171, 172, 207, 209, 212, 215, 237], "compli": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 230, 237], "current": [17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 49, 56, 90, 97, 109, 112, 123, 135, 144, 145, 187, 203, 211, 228, 230, 238, 239], "least": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "complient": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "singleton": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 102, 113], "slice": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 237], "tensor_to_index": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "is_in": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 238], "project": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 67, 132, 134, 135, 138, 139, 231, 238, 239], "back": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 138, 139, 230], "rand": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 45, 51, 58, 101, 115, 238, 239], "uniform": [17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 32], "unbound": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 86, 237], "to_numpi": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "transformed_in": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 89, 90, 118, 124, 222], "type_check": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "fill": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 86, 234, 237], "minimum": [18, 80, 109, 118, 124, 125, 126, 136, 148, 150, 164, 189, 230, 238, 239], "float": [18, 20, 23, 24, 25, 27, 30, 32, 41, 44, 46, 47, 48, 66, 68, 75, 78, 80, 81, 86, 88, 90, 93, 94, 107, 109, 111, 115, 116, 117, 122, 123, 124, 126, 132, 134, 135, 138, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 196, 230, 231, 238], "upper": 18, "composit": 19, "unnam": 19, "effect": [19, 23, 41, 44, 46, 47, 48, 82, 90, 198, 231, 238], "pixels_spec": 19, "boundedtensorspec": [19, 129, 130, 131, 134, 135, 136, 224, 238, 239], "32": [19, 59, 60, 102, 103, 104, 110, 113, 119, 120, 230, 231, 234, 238, 239], "observation_vector_spec": 19, "33": [19, 23, 41, 44, 46, 47, 48, 102, 113], "composite_spec": 19, "observation_vector": [19, 64, 203, 206, 211, 213, 216, 230], "within": [19, 23, 28, 41, 44, 46, 47, 48, 94, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 239], "randn": [19, 75, 112, 118, 128, 129, 130, 131, 133, 136, 137, 138, 141, 142, 144, 145, 170, 171, 172, 197, 236, 237, 238, 239], "td_project": 19, "yield_nesting_kei": 19, "nested_kei": 19, "keysview": 19, "immedi": [19, 23, 41, 44, 46, 47, 48, 169], "children": [19, 23, 41, 44, 46, 47, 48], "selected_kei": [19, 47, 48, 83, 230], "altern": [20, 46, 150, 231, 237], "onehottensorspec": 20, "categor": [20, 24, 121, 144, 145], "larg": 20, "action_valu": [20, 24, 133, 137, 144, 145, 208, 231], "arang": [20, 24, 133, 144, 189], "argmax": [20, 133, 137, 144, 145], "dim": [20, 63, 64, 86, 91, 112, 222, 230, 231, 236, 237], "chosen_action_valu": [20, 24, 137, 208, 231], "outcom": [20, 24, 107, 124], "nvec": [21, 22], "cardin": [21, 22, 144, 145], "element": [21, 22, 24, 25, 26, 27, 28, 32, 35, 36, 37, 102, 132, 138, 139, 189, 230, 238], "ax": [21, 116, 117], "use_regist": [22, 24], "hot": [22, 24, 67, 121, 133, 137, 144, 145], "sum": [22, 24, 44, 157, 169, 230, 231, 238], "gamma": [23, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 218, 230, 231, 239], "present": [23, 25, 32, 41, 44, 46, 47, 48, 49, 69, 82, 83, 103, 104, 105, 106, 110, 117, 135, 138, 139, 140, 141, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 222, 228, 230, 233, 239], "sutton": 23, "r": [23, 75, 139, 150, 169, 238], "1988": 23, "predict": [23, 109, 114, 115, 143, 155, 157, 158, 164, 169], "tempor": [23, 115, 171], "44": [23, 234], "discount": [23, 42, 151, 152, 153, 154, 155, 156, 158, 160, 161, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 230, 231], "ahead": [23, 238], "add_modul": [23, 41, 44, 46, 47, 48], "child": [23, 41, 44, 46, 47, 48, 237], "fn": [23, 41, 44, 46, 47, 48, 118, 220, 221], "recurs": [23, 41, 44, 46, 47, 48], "init": [23, 41, 44, 46, 47, 48, 230, 231], "init_weight": [23, 41, 44, 46, 47, 48], "m": [23, 41, 44, 46, 47, 48, 67, 139, 230, 231], "fill_": [23, 41, 44, 46, 47, 48, 231, 237, 238], "net": [23, 41, 44, 46, 47, 48, 112, 162, 213, 218, 231, 234, 236, 239], "in_featur": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 102, 103, 104, 105, 106, 112, 113, 116, 117, 129, 138, 236, 239], "out_featur": [23, 41, 44, 45, 46, 47, 48, 66, 78, 86, 90, 93, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 115, 116, 117, 129, 133, 138, 230, 231, 236, 239], "bia": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 102, 109, 113, 116, 117, 118, 134, 135, 138, 148, 149, 150, 231, 239], "requires_grad": [23, 41, 44, 46, 47, 48, 230], "bfloat16": [23, 41, 44, 46, 47, 48], "cast": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 94, 138, 203, 206, 208, 211, 213, 216, 237, 238], "datatyp": [23, 41, 44, 46, 47, 48], "direct": [23, 41, 44, 46, 47, 48, 231], "member": [23, 41, 44, 46, 47, 48], "xdoctest": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "skip": [23, 41, 44, 46, 47, 48, 72, 90, 96, 139, 180, 181, 191, 194, 236], "buf": [23, 41, 44, 46, 47, 48], "20l": [23, 41, 44, 46, 47, 48], "1l": [23, 41, 44, 46, 47, 48], "5l": [23, 41, 44, 46, 47, 48], "associ": [23, 41, 44, 46, 47, 48, 122, 222, 236], "copi": [23, 41, 44, 46, 47, 48, 90, 230, 231, 237], "doubl": [23, 25, 27, 30, 41, 44, 46, 47, 48, 66, 68, 78, 86, 88, 90, 93, 138, 154, 155, 159, 162, 165, 230, 238], "eval": [23, 41, 44, 46, 47, 48, 90, 94, 230, 231], "certain": [23, 41, 44, 46, 47, 48, 72, 85, 90, 160, 230, 231, 237, 238], "particular": [23, 41, 44, 46, 47, 48, 90, 228, 231, 233], "behavior": [23, 41, 44, 46, 47, 48, 90], "dropout": [23, 41, 44, 46, 47, 48, 90, 236], "batchnorm": [23, 41, 44, 46, 47, 48, 90], "disabl": [23, 41, 44, 46, 47, 48, 90, 111, 125, 126, 230], "comparison": [23, 41, 44, 46, 47, 48, 90], "similar": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 92, 93, 94, 100, 138, 139, 230, 236, 238], "mechan": [23, 41, 44, 46, 47, 48, 90], "confus": [23, 41, 44, 46, 47, 48, 90], "extra_repr": [23, 41, 44, 46, 47, 48], "represent": [23, 41, 44, 46, 47, 48, 78, 93, 230, 231, 234, 238], "string": [23, 41, 44, 46, 47, 48, 78, 93, 139, 150, 180, 197, 203, 211, 213, 216], "tennsordict": 23, "shift": [23, 148], "nontermin": [23, 230], "termin": [23, 140, 230, 231, 236, 239], "original_reward": [23, 230], "newli": 23, "get_buff": [23, 41, 44, 46, 47, 48], "throw": [23, 41, 44, 46, 47, 48, 238], "docstr": [23, 41, 44, 46, 47, 48], "get_submodul": [23, 41, 44, 46, 47, 48], "explan": [23, 41, 44, 46, 47, 48], "how": [23, 25, 27, 32, 41, 44, 46, 47, 48, 152, 159, 160, 161, 198, 225, 230, 231, 233, 234, 238, 239], "qualifi": [23, 41, 44, 46, 47, 48], "referenc": [23, 41, 44, 46, 47, 48], "attributeerror": [23, 41, 44, 46, 47, 48], "invalid": [23, 41, 44, 46, 47, 48], "resolv": [23, 41, 44, 46, 47, 48], "someth": [23, 41, 44, 46, 47, 48, 225, 238], "get_extra_st": [23, 41, 44, 46, 47, 48, 94], "set_extra_st": [23, 41, 44, 46, 47, 48, 94], "pickleabl": [23, 41, 44, 46, 47, 48, 94], "ensur": [23, 25, 27, 32, 41, 44, 46, 47, 48, 63, 78, 94, 146, 230], "guarante": [23, 35, 36, 37, 38, 41, 44, 46, 47, 48, 94, 239], "pickl": [23, 41, 44, 46, 47, 48, 94], "get_paramet": [23, 41, 44, 46, 47, 48], "sai": [23, 41, 44, 46, 47, 48, 234, 238], "net_b": [23, 41, 44, 46, 47, 48], "net_c": [23, 41, 44, 46, 47, 48], "conv": [23, 41, 44, 46, 47, 48, 102], "conv2d": [23, 41, 44, 46, 47, 48, 102, 239], "16": [23, 41, 44, 46, 47, 48, 234], "kernel_s": [23, 41, 44, 46, 47, 48, 102, 103, 104, 231, 239], "stride": [23, 41, 44, 46, 47, 48, 102, 103, 104, 110, 231, 239], "100": [23, 41, 44, 46, 47, 48, 75, 190, 198, 218, 230, 231, 233, 234, 238, 239], "diagram": [23, 41, 44, 46, 47, 48], "show": [23, 41, 44, 46, 47, 48, 231, 236, 239], "itself": [23, 41, 44, 46, 47, 48, 85], "would": [23, 41, 44, 46, 47, 48, 113, 228, 231, 236, 237, 238], "degre": [23, 41, 44, 46, 47, 48], "named_modul": [23, 41, 44, 46, 47, 48], "o": [23, 41, 44, 46, 47, 48], "transit": [23, 41, 44, 46, 47, 48, 143, 230, 231], "alwai": [23, 41, 44, 46, 47, 48, 74, 231], "half": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 230], "ipu": [23, 41, 44, 46, 47, 48], "strict": [23, 41, 44, 46, 47, 48, 90], "descend": [23, 41, 44, 46, 47, 48, 90], "exactli": [23, 41, 44, 46, 47, 48, 56, 90], "persist": [23, 41, 44, 46, 47, 48, 90], "enforc": [23, 41, 44, 46, 47, 48, 90, 140], "missing_kei": [23, 41, 44, 46, 47, 48, 90], "unexpected_kei": [23, 41, 44, 46, 47, 48, 90], "unexpect": [23, 41, 44, 46, 47, 48, 90, 238], "namedtupl": [23, 41, 44, 46, 47, 48, 90], "duplic": [23, 41, 44, 46, 47, 48, 154, 155, 237], "l": [23, 41, 44, 46, 47, 48, 169], "idx": [23, 41, 44, 46, 47, 48, 231, 237], "named_buff": [23, 41, 44, 46, 47, 48, 231], "prefix": [23, 41, 44, 46, 47, 48, 90, 180, 238], "prepend": [23, 41, 44, 46, 47, 48], "running_var": [23, 41, 44, 46, 47, 48], "named_children": [23, 41, 44, 46, 47, 48], "conv4": [23, 41, 44, 46, 47, 48], "conv5": [23, 41, 44, 46, 47, 48], "memo": [23, 41, 44, 46, 47, 48], "remove_dupl": [23, 41, 44, 46, 47, 48], "named_paramet": [23, 41, 44, 46, 47, 48, 231], "register_backward_hook": [23, 41, 44, 46, 47, 48], "removablehandl": [23, 41, 44, 46, 47, 48], "deprec": [23, 41, 44, 46, 47, 48, 90, 238], "favor": [23, 41, 44, 46, 47, 48], "register_full_backward_hook": [23, 41, 44, 46, 47, 48], "futur": [23, 41, 44, 46, 47, 48, 78, 90, 93, 113, 225, 239], "register_buff": [23, 41, 44, 46, 47, 48], "running_mean": [23, 41, 44, 46, 47, 48], "alongsid": [23, 41, 44, 46, 47, 48], "latter": [23, 41, 44, 46, 47, 48, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 220, 221], "num_featur": [23, 41, 44, 46, 47, 48], "register_forward_hook": [23, 41, 44, 46, 47, 48, 144, 145], "signatur": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 147], "posit": [23, 25, 26, 27, 28, 41, 44, 46, 47, 48, 71, 72, 84, 85, 87, 90, 91, 118, 236], "won": [23, 41, 42, 44, 46, 47, 48, 78, 93, 198, 222, 230], "register_forward_pre_hook": [23, 41, 44, 46, 47, 48], "invok": [23, 41, 44, 46, 47, 48], "respect": [23, 41, 44, 46, 47, 48, 62, 66, 78, 86, 90, 93, 123, 138, 142, 193], "grad_input": [23, 41, 44, 46, 47, 48], "grad_output": [23, 41, 44, 46, 47, 48], "subsequ": [23, 41, 44, 46, 47, 48], "entri": [23, 41, 44, 46, 47, 48, 65, 71, 75, 78, 93, 170, 171, 172, 234, 236], "technic": [23, 41, 44, 46, 47, 48], "similarli": [23, 41, 44, 46, 47, 48, 140, 141, 230, 236, 238], "caller": [23, 41, 44, 46, 47, 48], "register_load_state_dict_post_hook": [23, 41, 44, 46, 47, 48], "post": [23, 41, 44, 46, 47, 48, 231], "incompatible_kei": [23, 41, 44, 46, 47, 48], "consist": [23, 41, 44, 46, 47, 48, 102, 113, 230, 231, 234, 238], "thrown": [23, 41, 44, 46, 47, 48], "clearn": [23, 41, 44, 46, 47, 48], "register_modul": [23, 41, 44, 46, 47, 48, 228], "alia": [23, 41, 44, 46, 47, 48], "register_paramet": [23, 41, 44, 46, 47, 48], "requires_grad_": [23, 41, 44, 46, 47, 48, 230], "autograd": [23, 41, 44, 46, 47, 48, 90], "freez": [23, 41, 44, 46, 47, 48], "finetun": [23, 41, 44, 46, 47, 48], "individu": [23, 41, 44, 46, 47, 48], "gan": [23, 41, 44, 46, 47, 48], "share_memori": [23, 41, 42, 44, 46, 47, 48, 230], "share_memory_": [23, 41, 44, 46, 47, 48, 237, 239], "destin": [23, 41, 44, 46, 47, 48, 90, 100], "keep_var": [23, 41, 44, 46, 47, 48, 90], "averag": [23, 41, 44, 46, 47, 48, 90, 94, 135, 156, 157, 196, 230, 236], "shallow": [23, 41, 44, 46, 47, 48, 90], "pleas": [23, 41, 44, 46, 47, 48, 90, 225], "design": [23, 24, 41, 44, 46, 47, 48, 90, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 230, 231, 233, 237, 238], "detach": [23, 41, 44, 46, 47, 48, 90, 230, 231], "non_block": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 231], "memory_format": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "channels_last": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "Its": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "complex": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 236], "integr": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 106, 115, 138, 234], "unchang": [23, 41, 44, 46, 47, 48, 66, 67, 78, 86, 90, 93, 138], "tri": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "convert": [23, 41, 44, 46, 47, 48, 66, 68, 78, 86, 90, 93, 94, 138, 150, 237], "host": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "pin": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "4d": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "ignore_w": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "1913": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "3420": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "5113": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "2325": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "torch_doctest_cuda1": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "gpu1": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "1914": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "5112": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "2324": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "float16": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "cdoubl": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "3741": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "j": [23, 25, 32, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 228, 231], "2382": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "5593": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "4443": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "complex128": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "6122": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "1150": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "to_empti": [23, 41, 44, 46, 47, 48], "dst_type": [23, 41, 44, 46, 47, 48], "xpu": [23, 41, 44, 46, 47, 48], "set_to_non": [23, 41, 44, 46, 47, 48], "unidimension": [24, 237], "keepdim": 24, "user_regist": 24, "experiment": [24, 139], "priori": 24, "definit": [24, 38], "uniqu": 24, "discretebox": 24, "alpha": [25, 27, 32, 102, 162, 164, 230, 231, 239], "beta": [25, 27, 32, 160, 230, 231, 239], "ep": [25, 27, 32, 94, 135, 152, 165, 196], "1e": [25, 27, 32, 94, 107, 109, 118, 124], "08": [25, 27, 32, 235], "collate_fn": [25, 26, 27, 237, 239], "prefetch": [25, 26, 27, 230, 231], "schaul": [25, 32], "quan": [25, 32], "antonogl": [25, 32], "silver": [25, 32], "2015": [25, 32], "arxiv": [25, 32, 63, 78, 103, 104, 105, 106, 109, 110, 115, 117, 119, 120, 122, 123, 135, 144, 151, 155, 156, 157, 158, 159, 161, 164, 165, 170, 173, 174, 177, 203, 206, 211, 216, 234], "ab": [25, 32, 78, 94, 109, 110, 115, 117, 119, 120, 122, 123, 151, 156, 157, 158, 159, 161, 164, 203, 211, 234], "1511": [25, 32, 110], "05952": [25, 32], "expon": [25, 27, 32], "\u03b1": [25, 27, 32], "determin": [25, 27, 32, 78, 93, 135, 231], "delta": [25, 27, 32, 124, 139, 224], "prioriti": [25, 27, 28, 32, 35, 36, 37, 38, 153, 154, 162, 164, 228, 230, 231], "null": [25, 27, 32, 62, 230], "max_siz": [25, 26, 27, 35, 37, 38, 231], "1_000": [25, 26, 27], "merg": [25, 26, 27], "mini": [25, 26, 27], "style": [25, 26, 27], "rb": [25, 26, 27, 231, 234, 239], "insert_transform": [25, 26, 27, 28], "insert": [25, 26, 27, 28, 39, 40, 91, 231], "return_info": [25, 26, 27, 28], "sampler": [25, 26, 27, 28, 32, 33, 35, 36, 37, 38, 224, 230], "info": [25, 26, 27, 28, 41, 44, 46, 47, 48, 59, 60, 95, 236], "select": [25, 26, 27, 28, 47, 48, 63, 64, 66, 69, 70, 71, 72, 74, 77, 83, 85, 86, 87, 89, 92, 94, 101, 197, 230, 231], "writer": [26, 39, 224], "randomsampl": [26, 224, 230], "roundrobinwrit": [26, 224], "priority_kei": [27, 28, 154, 155, 164, 239], "td_error": [27, 28, 153, 154, 155, 162, 164, 230, 239], "prioritizedreplaybuff": [27, 224, 239], "update_tensordict_prior": [27, 230, 239], "include_info": [27, 28], "kw": [28, 39], "replaybuff": [28, 40, 214, 218, 224, 234, 239], "meta": [29, 43, 228], "describ": [29, 64, 89, 124, 125, 187, 203, 211, 238], "max_capac": [32, 230], "update_prior": [32, 195, 228, 230, 239], "uniformli": [33, 238], "scratch_dir": [35, 230], "memmap": [35, 47, 48, 94, 195, 230], "attach": [35, 36, 37, 38, 231], "entiti": [35, 36, 37, 38], "made": [35, 36, 37, 38, 135, 230, 234], "alloc": 36, "__len__": 38, "roundrobin": 39, "piec": [39, 40], "_inplace_upd": [41, 46, 47, 48, 90], "_batch_lock": [41, 46, 47, 48, 90], "run_type_check": [41, 45], "batch_lock": [41, 43, 44, 46, 47, 48, 86, 90], "environn": [41, 44, 45, 46, 47, 48, 90], "immut": [41, 44, 46, 47, 48, 90, 203, 211], "fake_tensordict": [41, 44, 46, 47, 48], "fake": [41, 44, 46, 47, 48], "overridden": [41, 44, 46, 47, 48, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148], "recip": [41, 44, 46, 47, 48, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148], "afterward": [41, 44, 46, 47, 48, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 238], "former": [41, 44, 46, 47, 48, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148], "silent": [41, 44, 46, 47, 48, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148], "_step": [41, 44, 46, 47, 48, 71], "privat": [41, 44, 46, 47, 48, 238], "_reset": [41, 44, 45, 46, 47, 48, 101, 115], "overwritten": [41, 44, 46, 47, 48, 71, 100, 230], "callback": [41, 44, 46, 47, 48], "auto_reset": [41, 44, 46, 47, 48, 231], "auto_cast_to_devic": [41, 44, 46, 47, 48], "break_when_any_don": [41, 44, 46, 47, 48], "return_contigu": [41, 44, 46, 47, 48, 96, 233], "soon": [41, 44, 46, 47, 48], "smaller": [41, 44, 46, 47, 48], "sub": [41, 44, 46, 47, 48, 140, 141, 189, 198, 233, 238, 239], "lazystackedtensordict": [41, 44, 45, 46, 47, 48, 101, 115, 233, 237, 238, 239], "concomitt": [41, 44, 46, 47, 48], "eras": [41, 44, 46, 47, 48, 49], "workspac": [41, 44, 46, 47, 48, 49], "carri": [41, 44, 46, 47, 48], "creator": [42, 204, 205, 220, 221, 222], "substitut": [42, 94], "multiprocess": [42, 43, 94, 238], "mp": [42, 94], "env_creat": [42, 230], "test_env1": 42, "_td": 42, "observation_count": [42, 238], "test_env2": 42, "sleep": [42, 238], "__name__": [42, 231], "__main__": 42, "p": [42, 231, 236], "p1": [42, 231], "p2": [42, 231], "join": [42, 203, 211], "9934": 42, "env_str": 43, "discard": [44, 100, 180, 238], "info_dict_read": 44, "set_info_dict_read": 44, "put": [44, 94, 222, 237], "f": [44, 150, 170, 171, 172, 230, 231, 236, 237, 238], "read_act": 44, "read_don": 44, "reader": [44, 230, 231], "frame_skip": [44, 52, 53, 54, 57, 72, 191, 194, 200, 228, 230, 239], "broken": [44, 96], "read_ob": 44, "dictat": [44, 139], "inner": [44, 67, 228, 230, 238], "read_reward": 44, "total_reward": 44, "step_reward": 44, "far": [44, 111, 125, 126, 238], "baseinfodictread": 44, "info_dict": 44, "hoc": 44, "manner": [44, 78, 230, 233], "dict_read": 44, "default_info_dict_read": 44, "my_info_kei": 44, "some_env": 44, "meant": 45, "limit": [45, 47, 48, 237], "safeti": 45, "constraint": 45, "behav": [45, 56, 121, 234], "unboundedcontinuoustensorspec": [45, 86, 101, 128, 129, 130, 131, 138, 141, 142, 224, 238], "mymbenv": [45, 101, 115], "world_model": [45, 61, 101, 115, 157], "super": [45, 101, 115, 142, 144, 147, 236, 239], "hidden_observ": [45, 101, 115], "mlp": [45, 101, 102, 103, 104, 105, 106, 112, 115, 129, 133, 203, 211, 213, 216, 224, 230, 231, 233, 234, 236, 239], "worldmodelwrapp": [45, 101, 115, 224], "activation_class": [45, 101, 102, 103, 104, 105, 106, 109, 110, 113, 115, 230, 231, 239], "relu": [45, 101, 115, 118, 150, 236], "activate_last_lay": [45, 101, 106, 113, 115], "depth": [45, 101, 102, 103, 104, 105, 106, 109, 110, 113, 115, 119, 120, 133, 231, 233], "faster": 46, "less": [46, 220, 221, 230, 231, 239], "equal": [46, 47, 48, 74, 75, 102, 108, 113, 166, 189, 220, 221, 234, 237], "readthedoc": 46, "io": [46, 47, 48], "en": 46, "python_interfac": 46, "num_work": [46, 47, 48, 230, 231], "thread": 46, "task_id": 46, "my_env_fun": [47, 48], "custom_attribute_list": [47, 48], "custom_attribut": [47, 48], "custom_method_list": [47, 48], "custom_method": [47, 48], "deploi": [47, 48], "creation": [47, 48, 230, 238], "slight": [47, 48, 231], "overhead": [47, 48, 236], "env_input_kei": [47, 48], "permit": [47, 48, 71, 91], "drastic": [47, 48], "decreas": [47, 48], "burden": [47, 48], "_batchedenv": [47, 48], "might": [47, 48, 188, 225, 230, 238], "next_pixel": [47, 48], "next_vector": [47, 48], "occupi": [47, 48], "excluded_kei": [47, 48, 69], "share_individual_td": [47, 48], "lazi": [47, 48, 78, 116, 140, 141, 230, 233, 237, 238], "shared_memori": [47, 48], "policy_proof": [47, 48], "ll": [47, 48, 230, 231, 238], "hidden": [47, 48, 109, 112, 119, 120, 122, 123, 129, 130, 131, 138, 141, 203, 211, 233, 236, 239], "instanti": [47, 48, 89, 230, 231, 237, 238], "allow_step_when_don": [47, 48], "encount": [47, 48, 225], "update_kwarg": [47, 48], "build_tensordict": 49, "next_observ": [49, 100, 112, 233], "log_prob": [49, 107, 121, 126], "empti": [49, 78, 87, 90, 93, 230], "popul": [49, 86], "googl": [50, 51], "ant": [50, 51, 234], "categorical_action_encod": [51, 55], "get_environ": 51, "87": [51, 234], "acrobot": [51, 238], "fetch": [51, 234, 238], "dm_control": [52, 53, 230, 233, 238], "task_nam": 52, "cheetah": [52, 53, 230, 238], "disable_env_check": [54, 56], "serv": [56, 238], "placehold": [56, 90], "secur": 56, "jumanji": [57, 58], "snake": [57, 58], "6x6": [57, 58], "td1": 58, "int32": [58, 237, 239], "12x12": 58, "tsp50": 58, "tsp100": 58, "vma": [59, 60], "scenario_nam": [59, 60], "num_env": [59, 60], "continuous_act": [59, 60], "flock": [59, 60], "scenario": [59, 60], "n_agent": [59, 60], "cohesion_rew": [59, 60], "collision_rew": [59, 60], "separation_rew": [59, 60], "velocity_rew": [59, 60], "18": [59, 60, 234, 238], "model_bas": [61, 101, 115], "prior_shap": 61, "belief_shap": 61, "obs_decod": 61, "transform_reward_spec": [62, 66, 68, 80, 81, 89, 91], "success": [63, 89, 239], "account": 63, "movement": 63, "veloc": [63, 238], "propos": [63, 114, 159, 165, 213, 216], "plai": [63, 238], "pdf": [63, 103, 104, 105, 106, 135, 144, 155, 162, 165, 170, 173, 174, 177, 206, 213, 216], "1312": 63, "5602": 63, "_buffer": [63, 87], "transform_observation_spec": [63, 64, 65, 66, 68, 69, 71, 73, 75, 79, 82, 83, 85, 86, 87, 88, 89, 91], "del_kei": [64, 231, 233], "unsqueeze_if_oor": 64, "observation_posit": 64, "observation_veloc": 64, "delet": [64, 237], "unsqueez": [64, 88, 91, 112, 237], "key1": [64, 189, 197], "key2": [64, 189, 197], "w": [65, 79, 88, 135, 181], "crop": [65, 181], "center": [65, 181], "width": [65, 79, 231], "height": [65, 79, 231], "squar": [65, 111, 125, 126, 181], "rewardsc": [66, 90, 224, 230], "rewardclip": [66, 224], "transformed_env": [66, 89, 90], "tranform": [66, 69, 83, 85, 89, 92], "dest": [66, 78, 93, 138], "transform_input_spec": [66, 67, 68, 75, 85, 89, 91], "num_actions_effect": 67, "max_act": 67, "action_kei": [67, 101, 114, 115, 132, 134], "include_forward": 67, "dimension": [67, 170, 173, 174, 177], "num_act": [67, 231], "action_out": 67, "wherea": [67, 228, 230, 236], "_call": [67, 71], "inde": [67, 230, 237], "remain": [67, 117], "manual_se": [67, 75, 134, 135, 230, 238, 239], "expos": [68, 140, 236], "extern": [68, 238], "finit": [70, 230], "first_dim": 71, "last_dim": 71, "allow_positive_dim": [71, 91], "flatten": [71, 195, 230, 231], "adjac": 71, "th": [71, 91], "exclus": [71, 222], "frameskip": 71, "repeatedli": 72, "stabil": 72, "turn": [73, 91, 194, 231, 234], "noop": [74, 239], "30": [74, 122, 123, 231], "op": [74, 132, 134, 199], "randomli": [74, 75, 86, 139], "noop_max": 74, "loc": [75, 81, 111, 118, 125, 126, 129, 130, 131, 136, 139, 141, 201, 203, 211, 213, 216, 222, 230, 231, 236, 239], "out_keys_inv": [75, 76, 89], "standard_norm": [75, 81, 230, 231], "affin": [75, 81], "layer": [75, 94, 102, 103, 104, 109, 113, 116, 117, 119, 120, 127, 230, 231, 234, 236], "set_default_tensor_typ": 75, "doubletensor": 75, "std": [75, 94, 118, 132, 230, 231, 238], "isclos": 75, "next_ob": [75, 170, 171, 172, 230, 239], "normalis": 75, "stat": [75, 201, 222, 230], "rubric": [75, 141], "init_stat": 75, "3752e": 75, "01": [75, 135, 148, 151, 152, 160, 161, 230, 234, 235], "5087e": 75, "03": [75, 230, 234, 235], "9294e": 75, "9636": 75, "5608": 75, "6408": 75, "num_it": 75, "reduce_dim": 75, "cat_dim": 75, "keep_dim": 75, "constant": [75, 228, 230, 231, 238], "ideal": [75, 230], "statist": [75, 94, 163, 222, 230, 238], "approach": [75, 238], "gaussian": [75, 86, 101, 115, 116, 117, 132], "empir": [75, 101, 115, 139], "deviat": [75, 94, 101, 109, 115, 116, 117, 132, 161, 230, 231], "3d": 75, "third": 75, "r3m": [78, 234], "resnet": [78, 93], "visual": [78, 93], "embed": [78, 92, 93, 129, 130, 131, 138, 234, 236], "ego4d": [78, 93], "paper": [78, 93, 159, 213, 216, 230], "univers": [78, 93], "suraj": 78, "nair": 78, "aravind": 78, "rajeswaran": 78, "vikash": [78, 93], "kumar": [78, 93], "chelsea": 78, "finn": 78, "abhinav": 78, "gupta": 78, "2203": [78, 115, 234], "12601": [78, 234], "_init": 78, "snippet": [78, 230], "resnet50": [78, 93, 234], "model_nam": [78, 93, 187], "resnet34": 78, "resnet18": 78, "left": [78, 87, 93, 231], "r3m_vec": [78, 234], "feed": [78, 93], "244": [78, 93], "stack_imag": [78, 93], "tread": [78, 93], "separet": [78, 93], "hub": [78, 93, 234], "cach": [78, 90, 93, 190, 234], "public": [78, 93], "resnet50_weight": [78, 93], "imagenet1k_v1": [78, 93], "download_path": [78, 93], "tensor_pixels_kei": [78, 93], "interpol": [79, 231], "bilinear": 79, "clamp_min": [80, 135], "clamp_max": 80, "clip": [80, 152, 198], "clip_min": 80, "scalar": [80, 104, 106, 116, 117, 132, 134, 135, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "clip_max": 80, "episod": [82, 101, 173, 174, 175, 176, 177, 178, 179, 231], "cumul": [82, 101], "episode_": 82, "reward1": 82, "reward2": 82, "ho": 82, "excludetransform": [83, 224], "squeeze_dim": 84, "squeez": [84, 102, 231, 237], "manual": 85, "primer": 86, "default_valu": 86, "drawn": [86, 139], "rel": [86, 107, 124], "unit": [86, 101, 109, 119, 120, 122, 123], "chosen": [86, 203, 211, 213, 216], "transfomedenv": 86, "lock": [86, 94], "mykei": 86, "dtype_or_devic": 86, "pool": 87, "255": 88, "precis": [88, 230], "ri": 88, "randint": [88, 230], "principl": 89, "combin": [89, 237], "cattransform": 89, "notabl": 89, "cache_spec": 90, "anymor": [90, 138, 230], "unsqueeze_dim": 91, "danger": 91, "vip": [92, 93, 234], "toward": 93, "implicit": 93, "jason": 93, "ma": 93, "shagun": 93, "sodhani": 93, "dinesh": 93, "jayaraman": 93, "osbert": 93, "bastani": 93, "ami": 93, "zhang": 93, "vip_vec": 93, "shared_td": 94, "decai": [94, 132, 134, 162, 196, 230, 231, 238], "9999": 94, "0001": [94, 109, 118, 196], "fly": [94, 160, 238], "to_observation_norm": 94, "rate": [94, 169, 230, 231], "99": [94, 115, 151, 152, 156, 158, 160, 161, 162, 163, 164, 169, 218, 230, 231, 239], "underflow": 94, "1000": [94, 132, 134, 135, 139, 159, 230, 231, 234], "build_td_for_shared_vecnorm": 94, "memmori": 94, "memmap_": [94, 237], "queue": 94, "td_share": 94, "observationnorm": [94, 222, 224, 230, 231, 239], "state_dim": [95, 122, 123], "action_dim": [95, 103, 105, 233], "gsde": [95, 162, 222], "nois": [95, 117, 127, 135, 162, 194, 222, 230], "func": [95, 236], "gsdemodul": 95, "check_dtyp": 96, "short": 96, "discrep": [96, 151, 152, 153, 154, 160, 161], "imposs": 96, "heterogen": 96, "caution": [96, 238], "adequ": 96, "probabilistictdmodul": [99, 113, 139, 164, 169, 194], "next_tensordict": [100, 230], "keep_oth": 100, "exclude_reward": 100, "exclude_don": 100, "exclude_act": 100, "_run_check": 100, "reflect": [100, 200], "renam": [100, 230], "next_": 100, "funtion": 100, "td_out": [100, 189, 197], "make_polici": 100, "next_td": 100, "planning_horizon": [101, 115], "optim_step": [101, 115, 237], "num_candid": [101, 115], "top_k": [101, 115], "reward_kei": [101, 115], "cross": 101, "entropi": [101, 151, 152, 160, 161, 162, 164], "botev": 101, "et": [101, 236], "al": [101, 208, 236, 238], "2013": 101, "cem": 101, "plan": [101, 114, 115], "varianc": [101, 111, 118, 125, 126], "rank": 101, "top": [101, 115], "k": [101, 231, 236, 237], "repeat": 101, "maximis": [101, 103, 105, 115, 230], "horizon": [101, 115], "modelbasedenv": [101, 115], "mpc": [101, 114, 115], "candid": [101, 115], "modelbasedenvbas": [101, 114, 115, 224], "next_hidden_observ": 101, "actor": [101, 103, 105, 109, 115, 129, 130, 131, 133, 134, 135, 136, 137, 144, 145, 151, 152, 153, 156, 160, 161, 162, 164, 203, 206, 208, 211, 213, 216, 224, 230, 231, 234, 239], "num_cel": [102, 103, 104, 105, 106, 109, 110, 113, 129, 230, 231, 236, 239], "elu": [102, 103, 104, 105, 106, 109, 110, 231, 239], "activation_kwarg": [102, 113], "norm_class": [102, 103, 104, 113], "norm_kwarg": [102, 113], "bias_last_lay": [102, 103, 104, 105, 106, 110, 113], "aggregator_class": [102, 103, 104, 231, 239], "squashdim": [102, 103, 239], "aggregator_kwarg": [102, 103, 104, 231], "squeeze_output": [102, 103, 104, 231], "convolut": [102, 103, 104], "neural": [102, 138, 231, 236, 238], "produc": [102, 113, 121, 129, 131, 181, 238], "len": [102, 113, 230, 231, 234, 236, 237, 239], "cell": [102, 113, 230], "kernel": [102, 110, 112], "tanh": [102, 111, 113, 124, 125, 126, 230, 234, 239], "device_typ": [102, 103, 104, 105, 106, 110, 113, 116, 117], "cnet": 102, "34": [102, 113], "35": [102, 113, 234], "possibli": [102, 138, 198, 230, 238], "rectangular": 102, "conv_net_kwarg": [103, 104], "mlp_net_kwarg": [103, 104, 105], "use_avg_pool": [103, 104], "WITH": [103, 104, 105, 106, 135, 165, 206], "1509": [103, 104, 105, 106, 115, 135, 159, 165, 206], "02971": [103, 104, 105, 106, 135, 165, 206], "convnet": [103, 224, 239], "ndims_in": 103, "avgpool": [103, 104], "128": [104, 230, 234], "adaptiveavgpool2d": [104, 231], "400": [105, 106, 231], "300": [105, 106, 203, 211], "mlp_net_kwargs_net1": 106, "mlp_net_kwargs_net2": 106, "atol": [107, 124], "06": [107, 124, 230], "rtol": [107, 124], "batch_shap": [107, 124], "event_shap": [107, 124], "absolut": [107, 124], "toler": [107, 124], "densiti": [107, 121, 126], "mass": [107, 121, 126], "rsampl": [107, 121, 139], "sample_shap": [107, 121], "reparameter": [107, 121], "dqnet": 108, "atom": 108, "std_bia": 109, "std_min_val": 109, "stochast": [109, 117, 119, 123, 162, 164], "belief": [109, 119, 122, 123], "1912": [109, 156, 157, 158], "01603": [109, 156, 157, 158], "softplu": [109, 118, 148, 149, 150], "out_features_valu": 110, "cnn_kwarg": [110, 231], "mlp_kwarg": [110, 112, 231], "duel": [110, 231], "cnn": [110, 231, 239], "06581": 110, "512": 110, "upscal": [111, 125, 126], "tanh_loc": [111, 125, 126], "event_dim": [111, 124, 125], "prevent": [111, 125, 126, 160, 161, 230], "ultim": [111, 125, 126], "unstabl": [111, 125, 126], "poor": [111, 125, 126], "explos": [111, 125, 126], "switch": [111, 125, 126], "sigma": [111, 125, 126, 132, 135], "formula": [111, 125, 126, 152, 160, 161], "lstm_kwarg": 112, "embedd": 112, "lstm": [112, 118], "time_step": 112, "2d": 112, "hidden_s": 112, "input_s": 112, "hidden0_in": 112, "hidden1_in": 112, "hidden0_out": 112, "hidden1_out": 112, "single_bias_last_lay": 113, "layer_class": 113, "layer_kwarg": 113, "perceptron": 113, "seamless": 113, "though": 113, "reshap": [113, 236, 237], "lazylinear": [113, 234, 239], "42": [113, 198], "noisylinear": [113, 116, 224, 231], "noisylazylinear": [113, 224], "At": [114, 233, 234], "mpcplanner": 114, "tensordict_out": [114, 236, 238], "advantage_modul": [115, 151], "temperatur": 115, "mppi": 115, "covari": 115, "william": [115, 163], "aldrich": 115, "theodor": 115, "01149": 115, "hansen": 115, "wang": 115, "su": 115, "04955": 115, "ndunboundedcontinuoustensorspec": [115, 141], "valueoper": [115, 129, 130, 131, 151, 152, 160, 161, 218, 224, 230, 236], "tdlambdaestim": [115, 224], "value_net": [115, 170, 171, 172], "adv": 115, "95": [115, 156, 230, 231], "std_init": [116, 117], "noisi": [116, 117, 127], "term": [116, 117, 150, 151, 199, 231], "matrix": [116, 117], "initialize_paramet": 116, "isol": 116, "1706": 117, "10295v3": 117, "induc": 117, "aid": 117, "descent": 117, "emploi": 117, "scale_map": 118, "biased_softplus_1": 118, "scale_lb": [118, 122, 123], "exp": [118, 150], "module_norm": 118, "decod": [119, 236], "1803": [119, 120], "10122": [119, 120], "rnn_hidden": 119, "latent": 120, "logit": 121, "prob": 121, "excacli": 121, "hidden_dim": [122, 123, 236], "posterior": [122, 157], "rssm": [122, 123, 157], "1811": [122, 123], "04551": [122, 123], "obs_embed": 122, "rnn_hidden_dim": 123, "prior": [123, 157], "dream": 123, "recurr": 123, "min": [124, 125, 126, 152, 162, 164, 230, 231], "tanhtransform": 125, "tensordict_modul": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 235, 236], "translat": [128, 136], "td_modul": [128, 129, 130, 131, 136, 138, 139, 141, 142, 236, 239], "get_policy_oper": [129, 130, 131, 203, 211, 236], "alon": [129, 130, 131], "tdmodul": [129, 130, 131, 218], "get_critic_oper": [129, 236], "common_oper": [129, 131], "policy_oper": [129, 130, 131], "value_oper": [129, 130, 131], "probabilisticactor": [129, 130, 131, 164, 224, 230], "tanhnorm": [129, 130, 131, 136, 141, 224, 236, 239], "normalparamwrapp": [129, 130, 131, 136, 141, 224, 236, 239], "spec_hidden": [129, 131], "module_hidden": [129, 131, 236], "td_module_hidden": [129, 131, 236], "spec_act": [129, 131], "module_act": [129, 131, 236], "td_module_act": [129, 130, 131, 236], "dist_in_kei": [129, 130, 131, 136, 141], "sample_out_kei": [129, 131, 141], "distribution_class": [129, 130, 131, 136, 139, 141, 230, 236, 239], "return_log_prob": [129, 130, 131, 139, 141, 236, 239], "module_valu": [129, 130, 131, 236], "td_module_valu": [129, 130, 131, 236], "state_action_valu": [129, 142, 169, 206, 213, 216, 218, 230, 236, 239], "td_clone": [129, 130, 131, 236], "sample_log_prob": [129, 130, 131, 139, 141, 203, 211, 213, 236, 239], "tensordictmodulewrapp": [129, 204, 205, 218], "estim": [129, 130, 131, 151, 152, 160, 161, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 230, 231], "get_value_oper": [129, 130, 131, 203, 211], "action_modul": 130, "state_valu": [130, 131, 142, 170, 171, 172, 173, 174, 175, 177, 178, 203, 211, 216, 230], "safesequenti": [130, 131, 143, 224], "sigma_init": 132, "sigma_end": 132, "annealing_num_step": [132, 134, 135, 230, 231], "po": [132, 134], "epsilon": [132, 134, 135, 165, 231], "know": [132, 134, 162, 194, 230, 231], "recov": [132, 134, 140, 233], "happen": [132, 234, 238], "action_spac": [133, 137, 144, 145], "one_hot": [133, 137, 144, 145], "onehotdiscretetensorspec": [133, 137, 144, 145, 224], "nbin": [133, 144], "qvalue_actor": [133, 137, 144, 145], "eps_init": [134, 135, 231], "eps_end": [134, 135, 231], "greedi": [134, 145, 231], "explorative_polici": [134, 135], "0000": [134, 239], "6986": 134, "9366": 134, "5837": 134, "8596": 134, "grad_fn": [134, 239], "addbackward0": [134, 239], "theta": 135, "15": [135, 156, 231, 234], "mu": 135, "dt": 135, "x0": 135, "sigma_min": 135, "n_steps_ann": 135, "ornstein": [135, 230], "uhlenbeck": [135, 230], "ou": [135, 230], "introduc": [135, 236, 237], "auto": [135, 162, 164], "correl": 135, "sort": 135, "prev_nois": 135, "current_sigma": 135, "sqrt": [135, 231], "n_step": 135, "ou_prev_nois": 135, "ou_step": 135, "increas": 135, "anneal": 135, "_ou_prev_nois": 135, "_ou_step": 135, "probabilist": [136, 236, 239], "functional_modul": [136, 137, 138, 141, 142, 144, 145], "make_funct": [136, 137, 138, 141, 142, 144, 145, 146, 231, 236, 239], "functionalmodul": [138, 146], "functionalmodulewithbuff": [138, 146], "character": 138, "overflow": [138, 139], "grucel": [138, 236], "td_fmodul": 138, "td_function": 138, "td_state": 138, "vmap": [138, 141, 231, 236, 239], "ensembl": [138, 162], "params_repeat": 138, "td_vmap": [138, 141], "irrespect": [138, 139], "random_sampl": [138, 139], "tensor_spec": 139, "default_interaction_mod": [139, 236], "distribution_kwarg": [139, 230], "cache_dist": 139, "n_empirical_estim": 139, "probabilistictensordictmodul": [139, 140, 239], "rule": [139, 236], "interaction_mod": 139, "get_dist": [139, 140, 236], "__call__": [139, 228, 236], "median": 139, "suppli": 139, "fist": 139, "set_interaction_mod": 139, "diverg": [139, 157, 160], "partial_toler": [140, 141, 233], "probabilistictensordictsequenti": [140, 236, 239], "tensordictsequenti": [140, 233, 234, 239], "who": [140, 141], "AND": [140, 141], "scan": [140, 141], "tensordictsequenci": 141, "tensordictsequ": 141, "safeprobabilisticmodul": [141, 224], "spec1": 141, "net1": 141, "module1": 141, "td_module1": 141, "spec2": 141, "module2": 141, "td_module2": 141, "custommodul": [142, 147], "cat": [142, 230, 237, 239], "transition_model": 143, "reward_model": 143, "imaginari": 143, "imagin": 143, "get_reward_oper": 143, "get_transition_model_oper": 143, "var_num": [144, 145], "regard": [144, 151, 155, 161, 237], "perspect": [144, 155], "1707": [144, 155, 161, 203, 211], "06887": [144, 155], "mult_one_hot": [144, 145], "customdistributionalqv": 144, "log_softmax": 144, "_src": 146, "wrapper_typ": 146, "mislead": 147, "other_kei": 147, "typeerror": 147, "min_val": [148, 150], "bias": [148, 230], "_bia": 148, "invert": 149, "surject": 150, "expln": 150, "biased_softplu": [150, 224], "beggin": 150, "biased_softplus_": 150, "syntax": [150, 230], "condit": 150, "met": 150, "safeprobabilisticsequenti": [151, 152, 160, 161, 163, 204, 205, 224], "advantage_kei": [151, 152, 160, 161, 163, 170, 171, 172], "value_target_kei": [151, 161, 163, 170, 171, 172], "value_target": [151, 161, 163, 170, 171, 172], "entropy_bonu": [151, 152, 160, 161], "samples_mc_entropi": [151, 152, 160, 161], "entropy_coef": [151, 152, 160, 161], "critic_coef": [151, 152, 160, 161], "loss_critic_typ": [151, 152, 160, 161, 163], "smooth_l1": [151, 152, 153, 154, 160, 161, 162, 163, 164, 166], "reli": [151, 230, 238], "1602": 151, "01783v2": 151, "advantage_diff_kei": 151, "advantage_diff": 151, "value_error": [151, 170, 171, 172], "loss_function_typ": 151, "l1": [151, 152, 153, 154, 160, 161, 162, 166, 231], "l2": [151, 152, 153, 154, 157, 158, 160, 161, 162, 166], "tha": 151, "throughout": [151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 238], "essenti": [151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 230, 237], "clip_epsilon": 152, "normalize_advantag": [152, 160, 161], "threshold": 152, "bonu": [152, 160, 161], "favour": [152, 160, 161], "exploratori": [152, 160, 161], "mont": [152, 160, 161], "carlo": [152, 160, 161], "multipli": [152, 160, 161, 162, 164, 230], "loss_funct": [152, 153, 154, 161, 162, 164, 166], "actor_network": [153, 162, 163, 164], "value_network": [153, 154, 155, 164, 170, 171, 172], "delay_actor": [153, 164], "delay_valu": [153, 154, 155, 163, 164], "input_tensordict": [153, 154, 155], "assign": [153, 154, 230, 236], "qvalueactor": [154, 224, 231], "distributionalqvalueactor": [155, 224], "unlik": [155, 161, 236, 237, 239], "disctount": 155, "actor_model": 156, "value_model": [156, 158], "model_based_env": 156, "dreamerenv": [156, 224], "imagination_horizon": 156, "lmbda": [156, 170, 172, 173, 175, 176, 177, 178, 179, 230, 231], "discount_loss": [156, 158], "unrol": 156, "lambda_kl": 157, "lambda_reco": 157, "lambda_reward": 157, "reco_loss": 157, "reward_loss": 157, "free_nat": 157, "delayed_clamp": 157, "global_averag": 157, "kl": [157, 160], "reconstruct": [157, 238], "nat": 157, "clamp": [157, 198], "value_loss": [158, 230], "fake_data": 158, "loss_modul": [159, 165, 198, 217, 218, 228, 237], "dqnloss": [159, 165, 209, 224], "ddpgloss": [159, 165, 207, 218, 224, 239], "sacloss": [159, 165, 215, 224], "td3loss": [159, 165], "value_network_update_interv": 159, "contrast": 159, "soft": [159, 164, 165], "06461": 159, "dtarg": 160, "decrement": 160, "samples_mc_kl": 160, "penalti": 160, "old_polici": 160, "new_polici": 160, "adapt": 160, "thu": 160, "distanc": [160, 166, 169, 170], "apart": 160, "proxim": [161, 203, 211], "optimis": [161, 194], "flavour": [161, 230, 239], "constrain": 161, "clipppoloss": [161, 224], "klpenppoloss": [161, 224], "regularis": 161, "06347": [161, 203, 211], "qvalue_network": [162, 164], "num_qvalue_net": [162, 164], "sub_sample_len": 162, "priotity_kei": [162, 164], "alpha_init": [162, 164], "min_alpha": [162, 164], "max_alpha": [162, 164], "fixed_alpha": [162, 164], "target_entropi": [162, 164], "delay_qvalu": [162, 164], "openreview": [162, 213], "ay8zfzm0tdd": [162, 213], "idea": [162, 228, 231, 237], "subsampl": [162, 189, 228], "connectionist": 163, "1992": 163, "doi": 163, "1007": 163, "bf00992696": 163, "1801": [164, 216], "01290": [164, 216], "applic": 164, "1812": [164, 238], "05905": 164, "qvalue_network_bi": 164, "prod": 164, "n_action": 164, "redqloss": [165, 224], "999": [165, 196, 231], "prev_param": 165, "new_param": 165, "v2": [166, 175, 176, 178, 179, 203, 206, 211, 213, 216], "strict_shap": 166, "view_a": 166, "hold": [167, 168], "next_val_kei": 169, "pred_next_v": 169, "usus": 169, "mse": [169, 231], "q_valu": 169, "target_valu": [169, 239], "n_steps_to_next": 169, "value_next_st": 169, "average_ga": 170, "value_kei": [170, 171, 172], "1506": [170, 173, 174, 177], "02438": [170, 173, 174, 177], "exponenti": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 196], "propag": [170, 171, 172], "throught": [170, 171, 172], "advang": 170, "gradient_mod": 170, "sign": 170, "unused_arg": 170, "target_param": [170, 171, 172], "relev": [170, 171, 172], "98": [170, 171, 172, 234], "94": [170, 172], "unpack": [170, 171, 172], "average_reward": [171, 172], "next_state_valu": [173, 174, 175, 176, 177, 178, 179, 224], "old_stat": [173, 174, 175, 177, 178], "timestep": [173, 174, 175, 176, 177, 178, 179, 231], "new_stat": [173, 174, 175, 176, 177, 178, 179], "rolling_gamma": [175, 176, 178, 179], "ti": [175, 176, 178, 179], "event": [175, 176, 178, 179], "g1": [175, 176, 178, 179], "g2": [175, 176, 178, 179], "g3": [175, 176, 178, 179], "g4": [175, 176, 178, 179], "v3": [175, 176, 178, 179], "v4": [175, 176, 178, 179, 230, 234], "upcom": [175, 176, 178, 179, 230], "out_file_bas": 180, "skip_reset": 180, "dump": 180, "interv": [180, 181, 190, 199, 231], "center_crop": 181, "make_grid": 181, "video": [181, 194, 222, 231], "Will": 181, "grid": 181, "exp_nam": [182, 183, 184, 185, 186, 218, 230], "log_dir": [182, 183, 185, 188], "minim": [182, 236], "dependeci": 182, "csv": [182, 188], "templat": 183, "tracking_uri": 184, "mlflow": [184, 188], "uri": 184, "datastor": 184, "tb_log": 185, "tensoarboard": 185, "tensorboard": [185, 188, 239], "wandb": [186, 188, 239], "experiment_nam": [187, 188], "uuid": [187, 238], "date": 187, "logger_typ": 188, "logger_nam": 188, "wandb_kwarg": 188, "mlflow_kwarg": 188, "sub_traj_len": 189, "min_sub_traj_len": 189, "full": [189, 230, 231, 233, 234, 236, 237, 238, 239], "20": [189, 230, 231, 238, 239], "register_op": [189, 190, 191, 192, 193, 195, 196, 197, 199, 228], "process_optim_batch": [189, 195, 196, 228], "_process_optim_batch_hook": [189, 228], "clear": 190, "clear_cuda": 190, "pre_optim_step": [190, 228], "counter": [191, 228], "log_pbar": [191, 192, 194, 196, 228], "progress": [191, 192, 194, 198, 228, 238], "bar": [191, 192, 194, 198, 228], "count_fram": 191, "pre_steps_log": [191, 192, 228], "lognam": 192, "r_train": 192, "log_reward": 192, "loss_compon": 193, "appl": 193, "omit": [193, 231], "loss_": 193, "optimizer_hook": 193, "loss_actor": [193, 239], "record_interv": [194, 230], "record_fram": [194, 200, 230], "policy_explor": [194, 218, 230], "log_kei": 194, "suffix": 194, "underestim": 194, "suppos": [194, 228, 236, 237, 238], "set_exploration_mod": [194, 224, 230, 231, 239], "reward_evalu": 194, "tensordictreplaybuff": [195, 218, 224, 230, 231], "flatten_tensordict": 195, "max_dim": 195, "rb_trainer": 195, "batch_process": [195, 196, 197, 228], "post_loss": [195, 228], "reward_norm": 196, "update_reward_stat": 196, "normalize_reward": 196, "make_train": [197, 224], "_process_batch_hook": [197, 228], "versatil": 198, "lossmodul": [198, 217, 218], "optim_steps_per_batch": [198, 228, 230], "epoch": 198, "clip_grad_norm": 198, "partial": 198, "deriv": 198, "clip_norm": 198, "progress_bar": 198, "tqdm": [198, 230, 231], "save_trainer_interv": 198, "disk": [198, 228, 231], "10000": [198, 231], "save_trainer_fil": [198, 228], "_datacollector": [199, 204, 205, 218], "update_weights_interv": 199, "sit": [199, 231], "sync": [199, 218, 228, 230, 239], "update_weight": 199, "post_step": [199, 228], "cfg": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222], "dictconfig": [200, 201, 203, 204, 205, 206, 208, 211, 213, 214, 216, 217, 218, 219, 222], "correct": [200, 231], "divid": 200, "unknowingli": 200, "1m": 200, "annealing_fram": [200, 230], "init_env_step": [200, 201, 230], "proof_environ": [201, 203, 206, 208, 211, 213, 216, 230], "sta": 201, "ot": 201, "a2closs": [202, 224], "in_keys_actor": [203, 211], "observation_kei": [203, 211, 213, 216], "actorvalueoper": [203, 211, 224, 236], "dummi": [203, 206, 208, 211, 213, 216, 238], "actorcriticoper": [203, 211, 224], "parser_env_arg": [203, 211, 213], "make_ppo_model": [203, 224], "parser_model_args_continu": [203, 211, 213, 216], "cattensor": [203, 206, 211, 213, 216, 224, 230, 231, 233, 238], "hydra": [203, 206, 208, 211, 213, 216], "config_stor": [203, 206, 208, 211, 213, 216], "configstor": [203, 206, 208, 211, 213, 216], "dataclass": [203, 206, 208, 211, 213, 216], "halfcheetah": [203, 206, 211, 213, 216, 230], "config_field": [203, 206, 208, 211, 213, 216], "config_cl": [203, 206, 208, 211, 213, 216], "ppomodelconfig": [203, 211], "envconfig": [203, 206, 208, 211, 213, 216], "make_dataclass": [203, 206, 208, 211, 213, 216], "cls_name": [203, 206, 208, 211, 213, 216], "config_path": [203, 206, 208, 211, 213, 216], "config_nam": [203, 206, 208, 211, 213, 216], "actor_valu": [203, 211], "17": [203, 206, 211, 213, 216, 230], "actor_model_explor": [204, 205, 230], "make_env_kwarg": [204, 205], "actor_net_kwarg": [206, 213, 216], "value_net_kwarg": [206, 216], "modulelist": [206, 213, 216, 236, 239], "ddpgcnnactor": [206, 224], "ddpgmlpactor": [206, 224], "ddpgcnnqnet": [206, 224], "ddpgmlpqnet": [206, 224], "ddpgmodelconfig": 206, "targetnetupdat": [207, 209, 212, 215, 217, 218], "discretemodelconfig": 208, "pong": [208, 238], "v5": [208, 238], "pixels_onli": [208, 230, 231, 238, 239], "210": [208, 238], "160": [208, 238], "ppoloss": [210, 224], "redqloss_deprec": 212, "qvalue_net_kwarg": [213, 216], "qvalu": [213, 216, 230, 231], "redqmodelconfig": 213, "replayargsconfig": 214, "sacmodelconfig": 216, "target_net_updat": 218, "constitu": 218, "learnt": [218, 231], "tempfil": 218, "tensorboardlogg": [218, 224], "egreedywrapp": [218, 224, 231], "env_proof": 218, "obs_spec": 218, "net_valu": 218, "dir": [218, 228], "gettempdir": 218, "argpars": [219, 222], "namespac": [219, 222], "parser": [219, 222], "transformed_env_constructor": [219, 224], "env_kwarg": [220, 221, 230], "num_env_per_collector": [220, 221], "num_collector": [220, 221], "video_tag": 222, "norm_obs_onli": 222, "use_env_cr": 222, "custom_env_mak": 222, "custom_env": 222, "return_transformed_env": 222, "action_dim_gsd": 222, "state_dim_gsd": 222, "batch_dim": [222, 237], "obs_norm_state_dict": 222, "wheter": 222, "maker": [222, 230], "overrid": 222, "randompolici": 224, "asyncdatacollector": 224, "tensordictprioritizedreplaybuff": [224, 239], "prioritizedsampl": [224, 230], "binarydiscretetensorspec": 224, "discretetensorspec": 224, "multidiscretetensorspec": 224, "multionehotdiscretetensorspec": 224, "unboundeddiscretetensorspec": [224, 238], "multistep": [224, 230, 231], "binarizereward": 224, "catfram": [224, 231], "centercrop": 224, "discreteactionproject": 224, "finitetensordictcheck": 224, "flattenobserv": 224, "frameskiptransform": 224, "grayscal": [224, 231, 238], "gsdenois": 224, "noopresetenv": [224, 238, 239], "observationtransform": 224, "pinmemorytransform": 224, "r3mtransform": [224, 234], "rewardsum": 224, "selecttransform": 224, "squeezetransform": 224, "stepcount": [224, 239], "tensordictprim": 224, "timemaxpool": 224, "unsqueezetransform": 224, "viprewardtransform": 224, "viptransform": 224, "tensordictrecord": 224, "videorecord": 224, "step_mdp": [224, 230, 231, 238, 239], "get_available_librari": 224, "braxenv": 224, "braxwrapp": 224, "dmcontrolenv": [224, 230, 233, 238], "dmcontrolwrapp": 224, "jumanjienv": 224, "jumanjiwrapp": 224, "vmasenv": 224, "vmaswrapp": 224, "actorcriticwrapp": [224, 236], "additivegaussianwrapp": 224, "ornsteinuhlenbeckprocesswrapp": [224, 230], "is_tensordict_compat": 224, "ensure_tensordict_compat": 224, "qvaluehook": 224, "distributionalqvaluehook": 224, "duelingcnndqnet": [224, 231], "distributionaldqnnet": 224, "lstmnet": 224, "dreameractor": 224, "obsencod": 224, "obsdecod": 224, "rssmprior": 224, "rssmposterior": 224, "reset_nois": 224, "cemplann": 224, "mpcplannerbas": 224, "mppiplann": 224, "independentnorm": 224, "truncatednorm": 224, "tanhdelta": [224, 230], "onehotcategor": 224, "inv_softplu": 224, "distributionaldqnloss": [224, 231], "reinforceloss": 224, "dreameractorloss": 224, "dreamermodelloss": 224, "dreamervalueloss": 224, "gae": 224, "tdestim": 224, "generalized_advantage_estim": 224, "vec_generalized_advantage_estim": 224, "vec_td_lambda_return_estim": 224, "vec_td_lambda_advantage_estim": [224, 230, 231], "td_lambda_return_estim": 224, "td_lambda_advantage_estim": 224, "td_advantage_estim": 224, "distance_loss": 224, "hold_out_net": [224, 230], "hold_out_param": 224, "softupd": [224, 230], "hardupd": [224, 230], "batchsubsampl": [224, 228], "clearcudacach": 224, "countframeslog": 224, "logreward": [224, 228], "optimizerhook": 224, "replaybuffertrain": [224, 228], "rewardnorm": 224, "selectkei": [224, 228], "updateweight": [224, 228], "make_a2c_loss": 224, "make_a2c_model": 224, "make_collector_offpolici": 224, "make_collector_onpolici": 224, "make_ddpg_actor": [224, 230], "make_ddpg_loss": 224, "make_dqn_actor": 224, "make_dqn_loss": 224, "make_ppo_loss": 224, "make_redq_loss": 224, "make_redq_model": 224, "make_replay_buff": [224, 230], "make_sac_loss": 224, "make_sac_model": 224, "make_target_updat": 224, "parallel_env_constructor": [224, 230], "sync_async_collector": 224, "sync_sync_collector": 224, "correct_for_frame_skip": 224, "get_stats_random_rollout": [224, 230], "csvlogger": 224, "mlflowlogg": 224, "wandblogg": 224, "get_logg": 224, "generate_exp_nam": 224, "journei": 225, "guid": [225, 230, 231], "textbook": 225, "highlight": 225, "readi": [225, 233], "ever": 225, "bump": 225, "think": [225, 238], "benefit": 225, "submit": [225, 239], "pr": 225, "outer": [228, 230, 238], "believ": 228, "scheme": [228, 238], "substenti": 228, "_pre_steps_log_hook": 228, "_pre_optim_hook": 228, "sub_batch": 228, "_post_loss_hook": 228, "_post_optim_hook": 228, "post_optim": 228, "_post_optim_log": 228, "post_optim_log": 228, "_post_steps_hook": 228, "_post_steps_log_hook": 228, "post_steps_log": 228, "comment": [228, 239], "categori": 228, "extens": 228, "reserv": 228, "trainerhookbas": 228, "three": [228, 231], "logginghook": 228, "logging_hook": 228, "save_dict": 228, "some_valu": 228, "els": [228, 230, 231, 234], "torchsnapshot": 228, "ckpt_backend": 228, "pt": [228, 231, 234], "filepath": 228, "select_kei": 228, "save_train": 228, "load_from_fil": 228, "perfectli": 228, "intern": 229, "click": [230, 231, 233, 234, 236, 237, 238, 239], "tutori": [230, 231, 233, 234, 235, 236, 238], "familiar": [230, 231, 238], "suffici": [230, 231], "transpar": [230, 231], "understood": [230, 231], "sota": [230, 231, 239], "rather": [230, 231], "illustr": [230, 231], "deepcopi": 230, "matplotlib": [230, 231, 238], "pyplot": [230, 231, 238], "plt": [230, 231, 238], "wish": 230, "env_librari": 230, "env_task": 230, "env_arg": 230, "elif": [230, 231], "notimplementederror": 230, "friendli": 230, "rescal": 230, "leav": 230, "make_transformed_env": 230, "reward_sc": 230, "double_to_float_list": 230, "double_to_float_inv_list": 230, "dmcontrol": 230, "downstream": 230, "_stat": 230, "leverag": [230, 238], "env_per_collector": 230, "parallel_env": [230, 238, 239], "td_stat": 230, "_td_stat": 230, "numel": [230, 234], "_td_stats_select": 230, "to_tensordict": [230, 231, 237], "got": [230, 237], "isfinit": 230, "sd": 230, "get_env_stat": 230, "proof_env": 230, "env_spec": 230, "actor_net": 230, "num_lay": 230, "actor_modul": [230, 239], "q_net": 230, "qnet": 230, "frequenc": 230, "make_record": 230, "recorder_obj": 230, "likelihood": 230, "circular": 230, "special": [230, 236, 238], "arrai": 230, "prb": 230, "buffer_s": [230, 231], "buffer_scratch_dir": 230, "adjust": 230, "device_count": [230, 231, 234, 238], "1000000": 230, "becom": [230, 238], "lr": [230, 231], "5e": 230, "weight_decai": 230, "5000": 230, "warm": 230, "tau": [230, 231], "005": [230, 231], "tmp": [230, 234], "n_steps_forward": 230, "semin": 230, "qnet_target": 230, "9152e": 230, "3728e": 230, "00": [230, 234, 235], "6790e": 230, "02": [230, 234, 235], "8100e": 230, "0432e": 230, "4661e": 230, "7335e": 230, "6330e": 230, "3439e": 230, "04": [230, 234], "3564e": 230, "1885e": 230, "4405e": 230, "1127e": 230, "9993e": 230, "7058e": 230, "7317e": 230, "3022e": 230, "2335": 230, "3836": 230, "3375": 230, "3587": 230, "3461": 230, "4445": 230, "3917": 230, "3489": 230, "5510": 230, "5761": 230, "1731": 230, "4106": 230, "3918": 230, "0521": 230, "4038": 230, "4419": 230, "9479": 230, "coupl": 230, "async": [230, 239], "transmiss": 230, "3018685293": 230, "adam": [230, 231], "optimizer_actor": 230, "optimizer_qnet": 230, "total_collection_step": 230, "scheduler1": 230, "lr_schedul": 230, "cosineannealinglr": 230, "t_max": 230, "scheduler2": 230, "temporarili": 230, "henc": 230, "word": [230, 238], "Then": [230, 233], "fed": 230, "hood": 230, "metadata": [230, 238], "ommit": 230, "earli": [230, 239], "rewards_ev": 230, "norm_factor_train": 230, "collected_fram": 230, "pbar": [230, 231], "r0": 230, "filter": 230, "current_fram": [230, 231], "sampled_tensordict": 230, "backprop": 230, "next_valu": [230, 231], "value_est": 230, "pow": [230, 231], "sampled_tensordict_actor": 230, "actor_loss": 230, "p_in": 230, "p_dest": 230, "zip": [230, 232], "copy_": 230, "b_in": 230, "b_dest": 230, "td_record": 230, "r_evalu": 230, "set_descript": [230, 231], "4f": [230, 231], "2500": 230, "547": 230, "58it": 230, "memmapstorag": [230, 234], "057220458984375": 230, "mb": [230, 234, 235], "002384185791015625": 230, "0095367431640625": 230, "1621246337890625": 230, "steps_to_next_ob": [230, 231], "019073486328125": 230, "2210": 230, "3128": 230, "7559": 230, "40": 230, "05": [230, 231, 234], "262": 230, "28it": 230, "1929": [230, 231], "60": [230, 239], "1500": 230, "336": 230, "86it": 230, "4851": 230, "80": [230, 234], "346": 230, "69it": 230, "7245": 230, "383": 230, "68it": 230, "1520": 230, "07": 230, "plot": [230, 231], "mention": [230, 231, 238], "figur": [230, 231, 236, 238], "label": [230, 231, 237], "legend": [230, 231], "xlabel": [230, 231], "ylabel": [230, 231], "tight_layout": [230, 231], "250": 230, "devid": 230, "100000": [230, 231], "batch_size_traj": 230, "simplic": [230, 234, 236], "td_lambda": 230, "roughli": [230, 239], "four": 230, "big": [230, 231, 238], "revert": 230, "incompat": [230, 237], "bit": 230, "rand_idx": 230, "traceback": [230, 231], "__w": [230, 231], "doc": [230, 231], "coding_ddpg": [230, 235], "896": 230, "miniconda": [230, 231], "2360": 230, "_batch_size_sett": 230, "new_siz": 230, "350": 230, "_check_new_batch_s": 230, "new_batch_s": 230, "1313": 230, "titl": [230, 231], "labmda": 230, "minut": [230, 231, 233, 234, 236, 237, 238, 239], "31": [230, 234, 235], "292": [230, 235], "jupyt": [230, 231, 232, 233, 234, 236, 237, 238, 239], "ipynb": [230, 231, 233, 234, 236, 237, 238, 239], "galleri": [230, 231, 232, 233, 234, 236, 237, 238, 239], "sphinx": [230, 231, 232, 233, 234, 236, 237, 238, 239], "cartpol": [231, 238], "tabl": 231, "pick": 231, "highest": 231, "discretiz": 231, "amort": 231, "seen": 231, "past": 231, "esitm": 231, "ipython": 231, "get_funct": [231, 236], "is_notebook": 231, "shell": 231, "get_ipython": 231, "__class__": 231, "zmqinteractiveshel": 231, "qtconsol": 231, "terminalinteractiveshel": 231, "nameerror": 231, "interpret": 231, "hyperparam": 231, "hopefulli": 231, "sentit": 231, "variat": 231, "2e": 231, "harder": [231, 239], "n_optim": 231, "n_worker": 231, "smooth": 231, "loos": 231, "notic": 231, "eps_greedy_v": 231, "eps_greedy_val_env": 231, "predefin": 231, "init_bia": 231, "500000": 231, "techin": 231, "dummy_env": 231, "9927796125411987": 231, "07610216736793518": 231, "pole": 231, "un": 231, "actuat": 231, "cart": 231, "frictionless": 231, "upright": [231, 238], "balanc": [231, 238], "pixels_sav": 231, "eval_rollout": 231, "imageio": 231, "mimwrit": 231, "cartpole_random": 231, "mp4": 231, "fp": 231, "480": [231, 234], "360": 231, "trick": 231, "num_ob": 231, "make_model": 231, "output_s": 231, "unflatten_kei": 231, "fairli": 231, "params_target": 231, "actor_explor": 231, "params_flat": 231, "flatten_kei": 231, "params_target_flat": 231, "600": 231, "bootstrap": 231, "value_next_step": 231, "not_termin": 231, "significantli": 231, "data_collector": 231, "traj_lengths_ev": 231, "grad_val": 231, "traj_length": 231, "mavg": 231, "traj_count": 231, "prev_traj_count": 231, "enough": 231, "sampled_data": 231, "sampled_data_out": 231, "tdstep": 231, "exp_valu": 231, "mse_loss": 231, "gv": 231, "clip_grad_value_": 231, "set_": 231, "clear_output": 231, "gcf": 231, "clf": 231, "figsiz": 231, "subplot": [231, 238], "traj": 231, "savefig": 231, "dqn_td0": 231, "png": 231, "coding_dqn": [231, 235], "382": 231, "__getitem__": [231, 237], "2662": 231, "_default_get": 231, "548": 231, "keyerror": 231, "imshow": [231, 238], "imread": 231, "axi": 231, "traj_lengths_train": 231, "saved_results_td0": 231, "entir": 231, "capac": 231, "smooth_l1_loss": 231, "clip_grad_norm_": 231, "dqn_tdlambda": 231, "saved_results_tdlambda": 231, "fewer": 231, "load_td0": 231, "load_tdlambda": 231, "frames_td0": 231, "frames_tdlambda": 231, "evals_td0": 231, "evals_tdlambda": 231, "mavgs_td0": 231, "mavgs_tdlambda": 231, "losses_td0": 231, "losses_tdlambda": 231, "values_td0": 231, "values_tdlambda": 231, "grad_vals_td0": 231, "grad_vals_tdlambda": 231, "traj_lengths_td0": 231, "traj_lengths_tdlambda": 231, "traj_count_td0": 231, "traj_count_tdlambda": 231, "td0": 231, "goe": [231, 238], "greatli": 231, "nth": 231, "noticebli": 231, "myopic": 231, "collectorclass": 231, "till": 231, "worst": 231, "accuraci": 231, "fanci": 231, "449": [231, 235], "tutorials_python": 232, "tutorials_jupyt": 232, "distinct": 233, "humanoid": [233, 238], "walk": [233, 238], "env1": 233, "env1_obs_kei": 233, "observation_stand": 233, "env2": 233, "env2_obs_kei": 233, "observation_walk": 233, "tdreset1": 233, "tdreset2": 233, "tdreset": 233, "67": 233, "backbon": [233, 239], "policy_common": 233, "policy_stand": 233, "policy_walk": 233, "seq": 233, "21": [233, 234], "But": 233, "env1_mak": 233, "env2_mak": 233, "_single_task": 233, "td_rollout": 233, "shown": 233, "937": [233, 235], "multi_task": [233, 235], "explain": 234, "fine": 234, "tune": 234, "semat": 234, "interchang": 234, "sake": 234, "challeng": 234, "embodi": 234, "ai": 234, "env_transform": [234, 238], "s3": 234, "amazonaw": 234, "r3m_50": 234, "374m": 234, "4m": 234, "103mb": 234, "2m": 234, "132mb": 234, "45": 234, "6m": 234, "102mb": 234, "56": 234, "92": 234, "7mb": 234, "65": 234, "84": 234, "3m": 234, "97": 234, "4mb": 234, "90": 234, "0m": 234, "76": 234, "26": [234, 235, 238], "71": 234, "115m": 234, "1mb": 234, "131m": 234, "3mb": 234, "39": 234, "147m": 234, "164m": 234, "93": 234, "5mb": 234, "48": 234, "179m": 234, "91": 234, "188m": 234, "53": 234, "197m": 234, "68": 234, "57": 234, "212m": 234, "73": 234, "8mb": 234, "59": 234, "220m": 234, "66": 234, "6mb": 234, "61": 234, "229m": 234, "239m": 234, "247m": 234, "70": 234, "261m": 234, "78": 234, "72": 234, "269m": 234, "2mb": 234, "74": 234, "277m": 234, "63": 234, "9mb": 234, "283m": 234, "58": 234, "293m": 234, "299m": 234, "82": 234, "305m": 234, "55": 234, "83": 234, "311m": 234, "0mb": 234, "326m": 234, "89": 234, "332m": 234, "54": 234, "344m": 234, "96": 234, "359m": 234, "366m": 234, "2048": 234, "trainabl": 234, "wiser": 234, "subset": 234, "163": 234, "again": [234, 238], "conclud": 234, "tmps7eghqq9": 234, "030517578125": 234, "tmpeynxwmf_": 234, "00095367431640625": 234, "tmp90wu7dg4": 234, "659": 234, "1796875": 234, "tmpk_so16nk": 234, "003814697265625": 234, "tmp2p1ykuyf": 234, "haven": 234, "yet": 234, "_storag": 234, "256": [234, 235], "pretrained_model": [234, 235], "726": 235, "torchrl_demo": [235, 239], "29": [235, 239], "145": [235, 239], "torch_env": [235, 238], "516": [235, 238], "104": [235, 236], "tensordict_tutori": [235, 237], "028": [235, 237], "recommand": 236, "conveni": [236, 237], "a_out": 236, "mergelinear": 236, "in_1": 236, "in_2": 236, "linear_1": 236, "linear_2": 236, "x_1": 236, "x_2": 236, "multiheadlinear": 236, "out_1": 236, "out_2": 236, "splitlinear": 236, "output_1": 236, "output_2": 236, "split_and_merge_linear": 236, "make_functional_with_buff": 236, "replica": 236, "params_expand": [236, 239], "buffers_expand": 236, "num_model": 236, "group": 236, "zeros_lik": 236, "result_td": 236, "ok": 236, "conflict": 236, "wire": 236, "tensordictsequentialand": 236, "block": 236, "demonstr": [236, 238], "architectur": 236, "vaswani": 236, "2017": 236, "asid": 236, "tokenstoqkv": 236, "to_dim": 236, "from_dim": 236, "latent_dim": 236, "x_to": 236, "x_from": 236, "splithead": 236, "num_head": 236, "to_num": 236, "from_num": 236, "d_tensor": 236, "transpos": 236, "softmax": 236, "n_head": 236, "d_in": 236, "attn": 236, "skiplayernorm": 236, "to_len": 236, "layer_norm": 236, "layernorm": 236, "x_0": 236, "ffn": 236, "dropout_r": 236, "attentionblock": 236, "tokens_to_qkv": 236, "split_head": 236, "encodertransformerblock": 236, "attention_block": 236, "x_out": 236, "decodertransformerblock": 236, "encoder_block": 236, "transformerencod": 236, "num_block": 236, "transformerdecod": 236, "from_len": 236, "attentionblocktensordict": 236, "connect": 236, "moreov": 236, "complic": [236, 237, 238], "to_nam": 236, "from_nam": 236, "thank": 236, "transformerblockencodertensordict": 236, "transformerblockdecodertensordict": 236, "token": 236, "extract": 236, "transformerencodertensordict": 236, "transformerdecodertensordict": 236, "transformertensordict": 236, "x_encod": 236, "x_decod": 236, "ve": 236, "operar": 236, "td_token": 236, "tdtransform": 236, "t1": 236, "t2": 236, "011502981185913086": 236, "t3": 236, "t4": 236, "00752568244934082": 236, "margin": 236, "deal": 237, "furthermor": 237, "awai": 237, "organ": 237, "power": 237, "segment": 237, "get_data_a": 237, "get_data_b": 237, "reusabl": 237, "lot": 237, "rewriten": 237, "modal": 237, "get_data": 237, "reus": 237, "argu": 237, "dictdataset": 237, "collat": 237, "collate_dict_fn": 237, "dict_list": 237, "final_dict": 237, "single_dict": 237, "simpler": 237, "collate_tensordict_fn": 237, "furtherdown": 237, "_permutedtensordict": 237, "_unsqueezedtensordict": 237, "_viewedtensordict": 237, "datastructur": 237, "explicitli": 237, "caramba": 237, "algebra": 237, "foo": [237, 238], "multidimension": 237, "insid": [237, 238], "violat": 237, "err": 237, "resp": 237, "among": 237, "tensordict_clon": 237, "tensodict": 237, "tuple_index": 237, "new_tensordict": 237, "get_sub_tensordict": 237, "subtensordict": 237, "subtd": 237, "td2": 237, "booltensor": 237, "fashion": 237, "clonned_tensordict": 237, "staked_tensordict": 237, "isinst": 237, "unbind": 237, "list_tensordict": 237, "comeback": 237, "unsqueezed_tensordict": 237, "role": 238, "supervis": 238, "unsupervis": 238, "rom": 238, "licens": 238, "pygam": 238, "unifi": 238, "_build_env": 238, "sphinx_gallery_start_ignor": 238, "warn": 238, "filterwarn": 238, "sphinx_gallery_end_ignor": 238, "adventur": 238, "ram": 238, "airraid": 238, "alien": 238, "amidar": 238, "assault": 238, "continuousbox": [238, 239], "4965": 238, "pack": 238, "brief": 238, "exectut": 238, "reproduct": 238, "did": 238, "shortcut": 238, "tensordict_tprim": 238, "tensordict_rollout": [238, 239], "quickli": 238, "axesimag": 238, "0x7fe5568f9b40": 238, "inconsist": 238, "supplementari": 238, "swingup": 238, "swingup_spars": 238, "ball_in_cup": 238, "catch": 238, "balance_spars": 238, "three_pol": 238, "two_pol": 238, "finger": 238, "turn_easi": 238, "turn_hard": 238, "fish": 238, "swim": 238, "hopper": 238, "hop": 238, "run_pure_st": 238, "bring_bal": 238, "bring_peg": 238, "insert_bal": 238, "insert_peg": 238, "point_mass": 238, "reacher": 238, "swimmer": 238, "swimmer6": 238, "swimmer15": 238, "walker": 238, "dog": 238, "trot": 238, "humanoid_cmu": 238, "lqr": 238, "lqr_2_1": 238, "lqr_6_2": 238, "quadrup": 238, "escap": 238, "stacker": 238, "stack_2": 238, "stack_4": 238, "240": [238, 239], "320": 238, "wrapper1": 238, "wrapper2": 238, "obviou": 238, "truth": 238, "env0": 238, "env_transformed_bi": 238, "stanc": 238, "transformeddistribut": 238, "base_dist": 238, "concat": 238, "mofidi": 238, "_inv_apply_transform": 238, "_apply_transform": 238, "transformedenviron": 238, "moderet": 238, "computation": 238, "legitim": 238, "side": 238, "incom": 238, "amongst": 238, "has_cuda": 238, "simplest": 238, "wor": 238, "convention": 238, "scope": 238, "difficulti": 238, "markovian": 238, "3288080526": 238, "sometim": 238, "constain": 238, "uuid1": 238, "bar_": 238, "get_someth": 238, "bar_c47f815a": 238, "a884": 238, "11ed": 238, "beb9": 238, "0242ac120002": 238, "aargh": 238, "ourselv": 238, "foo_list": 238, "vec_env": 238, "_dispatch_caller_parallel": 238, "0x7fe54c25a410": 238, "bar_c7dfeca4": 238, "8527": 238, "bar_c7edf768": 238, "a230": 238, "bar_c7cfc14": 238, "8ad8": 238, "121": 238, "122": 238, "parallen": 238, "carefulli": 238, "commonli": 238, "approxim": 238, "particularili": 238, "evolv": 238, "previous": 238, "steadi": 238, "approx": 238, "4694": 238, "0730": 238, "6443": 238, "2005": 238, "3139": 238, "8622": 238, "_extra_st": 238, "observation_ssq": 238, "observation_sum": 238, "3223": 238, "0050": 238, "1352": 238, "1342": 238, "2448": 238, "dispach": 238, "small": 238, "absor": 238, "demo": 239, "icml": 239, "dai": 239, "overview": 239, "vmoen": 239, "fb": 239, "question": 239, "team": 239, "decid": 239, "invest": 239, "platform": 239, "media": 239, "truli": 239, "rest": 239, "predominantli": 239, "tensordict1": 239, "tensordict2": 239, "tensordict_sampl": 239, "_sampler": 239, "_sum_tre": 239, "modulenotfounderror": 239, "28791671991348267": 239, "gym_env": 239, "squash": 239, "lazyconv2d": 239, "6400": 239, "backbone_modul": 239, "value_modul": 239, "tensordict_exp": 239, "base_modul": 239, "0137": 239, "1524": 239, "0641": 239, "indexputbackward0": 239, "8728": 239, "1335": 239, "9833": 239, "3497": 239, "6889": 239, "6433": 239, "clampbackward1": 239, "1131": 239, "1761": 239, "3425": 239, "2665": 239, "2915": 239, "6207": 239, "1441": 239, "2375": 239, "1242": 239, "1372": 239, "3810": 239, "meanbackward1": 239, "tensordicts_prealloc": 239, "tensordicts_stack": 239, "disclaim": 239, "concatmodul": 239, "loss_td": 239, "loss_valu": 239, "pred_valu": 239, "pred_value_max": 239, "target_value_max": 239, "year": 239, "roadmap": 239, "compris": 239, "hierarch": 239, "contributor": 239, "curiou": 239, "feedback": 239, "nascent": 239, "pypi": 239}, "objects": {"torchrl._utils": [[10, 0, 1, "", "implement_for"]], "torchrl.collectors.collectors": [[11, 0, 1, "", "MultiSyncDataCollector"], [12, 0, 1, "", "MultiaSyncDataCollector"], [13, 0, 1, "", "RandomPolicy"], [14, 0, 1, "", "SyncDataCollector"], [15, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[14, 1, 1, "", "iterator"], [14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "rollout"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[16, 2, 1, "", "split_trajectories"]], "torchrl.data": [[17, 0, 1, "", "BinaryDiscreteTensorSpec"], [18, 0, 1, "", "BoundedTensorSpec"], [19, 0, 1, "", "CompositeSpec"], [20, 0, 1, "", "DiscreteTensorSpec"], [21, 0, 1, "", "MultiDiscreteTensorSpec"], [22, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [23, 0, 1, "", "MultiStep"], [24, 0, 1, "", "OneHotDiscreteTensorSpec"], [25, 0, 1, "", "PrioritizedReplayBuffer"], [26, 0, 1, "", "ReplayBuffer"], [27, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [28, 0, 1, "", "TensorDictReplayBuffer"], [29, 0, 1, "", "TensorSpec"], [30, 0, 1, "", "UnboundedContinuousTensorSpec"], [31, 0, 1, "", "UnboundedDiscreteTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "expand"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "expand"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "expand"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "keys"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "expand"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[21, 1, 1, "", "assert_is_in"], [21, 1, 1, "", "encode"], [21, 1, 1, "", "expand"], [21, 1, 1, "", "index"], [21, 1, 1, "", "is_in"], [21, 1, 1, "", "project"], [21, 1, 1, "", "rand"], [21, 1, 1, "", "to_numpy"], [21, 1, 1, "", "type_check"], [21, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "expand"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[23, 1, 1, "", "add_module"], [23, 1, 1, "", "apply"], [23, 1, 1, "", "bfloat16"], [23, 1, 1, "", "buffers"], [23, 1, 1, "", "children"], [23, 1, 1, "", "cpu"], [23, 1, 1, "", "cuda"], [23, 1, 1, "", "double"], [23, 1, 1, "", "eval"], [23, 1, 1, "", "extra_repr"], [23, 1, 1, "", "float"], [23, 1, 1, "", "forward"], [23, 1, 1, "", "get_buffer"], [23, 1, 1, "", "get_extra_state"], [23, 1, 1, "", "get_parameter"], [23, 1, 1, "", "get_submodule"], [23, 1, 1, "", "half"], [23, 1, 1, "", "ipu"], [23, 1, 1, "", "load_state_dict"], [23, 1, 1, "", "modules"], [23, 1, 1, "", "named_buffers"], [23, 1, 1, "", "named_children"], [23, 1, 1, "", "named_modules"], [23, 1, 1, "", "named_parameters"], [23, 1, 1, "", "parameters"], [23, 1, 1, "", "register_backward_hook"], [23, 1, 1, "", "register_buffer"], [23, 1, 1, "", "register_forward_hook"], [23, 1, 1, "", "register_forward_pre_hook"], [23, 1, 1, "", "register_full_backward_hook"], [23, 1, 1, "", "register_load_state_dict_post_hook"], [23, 1, 1, "", "register_module"], [23, 1, 1, "", "register_parameter"], [23, 1, 1, "", "requires_grad_"], [23, 1, 1, "", "set_extra_state"], [23, 1, 1, "", "share_memory"], [23, 1, 1, "", "state_dict"], [23, 1, 1, "", "to"], [23, 1, 1, "", "to_empty"], [23, 1, 1, "", "train"], [23, 1, 1, "", "type"], [23, 1, 1, "", "xpu"], [23, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[25, 1, 1, "", "add"], [25, 1, 1, "", "append_transform"], [25, 1, 1, "", "extend"], [25, 1, 1, "", "insert_transform"], [25, 1, 1, "", "sample"]], "torchrl.data.ReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "append_transform"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "insert_transform"], [26, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "append_transform"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "insert_transform"], [27, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[28, 1, 1, "", "add"], [28, 1, 1, "", "append_transform"], [28, 1, 1, "", "extend"], [28, 1, 1, "", "insert_transform"], [28, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.samplers": [[32, 0, 1, "", "PrioritizedSampler"], [33, 0, 1, "", "RandomSampler"], [34, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[32, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[35, 0, 1, "", "LazyMemmapStorage"], [36, 0, 1, "", "LazyTensorStorage"], [37, 0, 1, "", "ListStorage"], [38, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[35, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[36, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[39, 0, 1, "", "RoundRobinWriter"], [40, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[39, 1, 1, "", "add"], [39, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[40, 1, 1, "", "add"], [40, 1, 1, "", "extend"]], "torchrl.envs": [[41, 0, 1, "", "EnvBase"], [42, 0, 1, "", "EnvCreator"], [43, 0, 1, "", "EnvMetaData"], [44, 0, 1, "", "GymLikeEnv"], [45, 2, 1, "", "ModelBasedEnvBase"], [46, 0, 1, "", "MultiThreadedEnv"], [47, 0, 1, "", "ParallelEnv"], [48, 0, 1, "", "SerialEnv"], [49, 0, 1, "", "Specs"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[41, 1, 1, "", "add_module"], [41, 1, 1, "", "apply"], [41, 3, 1, "", "batch_locked"], [41, 1, 1, "", "bfloat16"], [41, 1, 1, "", "buffers"], [41, 1, 1, "", "children"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 1, 1, "", "double"], [41, 1, 1, "", "eval"], [41, 1, 1, "", "extra_repr"], [41, 1, 1, "", "fake_tensordict"], [41, 1, 1, "", "float"], [41, 1, 1, "", "forward"], [41, 1, 1, "", "get_buffer"], [41, 1, 1, "", "get_extra_state"], [41, 1, 1, "", "get_parameter"], [41, 1, 1, "", "get_submodule"], [41, 1, 1, "", "half"], [41, 1, 1, "", "ipu"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "modules"], [41, 1, 1, "", "named_buffers"], [41, 1, 1, "", "named_children"], [41, 1, 1, "", "named_modules"], [41, 1, 1, "", "named_parameters"], [41, 1, 1, "", "parameters"], [41, 1, 1, "id0", "rand_step"], [41, 1, 1, "", "register_backward_hook"], [41, 1, 1, "", "register_buffer"], [41, 1, 1, "", "register_forward_hook"], [41, 1, 1, "", "register_forward_pre_hook"], [41, 1, 1, "", "register_full_backward_hook"], [41, 1, 1, "", "register_load_state_dict_post_hook"], [41, 1, 1, "", "register_module"], [41, 1, 1, "", "register_parameter"], [41, 1, 1, "", "requires_grad_"], [41, 1, 1, "id1", "reset"], [41, 1, 1, "id2", "rollout"], [41, 1, 1, "", "set_extra_state"], [41, 1, 1, "id3", "set_seed"], [41, 1, 1, "", "share_memory"], [41, 3, 1, "", "specs"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "id4", "step"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_empty"], [41, 1, 1, "", "train"], [41, 1, 1, "", "type"], [41, 1, 1, "", "xpu"], [41, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 3, 1, "", "batch_locked"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "close"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "fake_tensordict"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "rand_step"], [44, 1, 1, "", "read_action"], [44, 1, 1, "", "read_done"], [44, 1, 1, "", "read_obs"], [44, 1, 1, "", "read_reward"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "reset"], [44, 1, 1, "", "rollout"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_info_dict_reader"], [44, 1, 1, "", "set_seed"], [44, 1, 1, "", "share_memory"], [44, 3, 1, "", "specs"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "step"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[46, 1, 1, "", "add_module"], [46, 1, 1, "", "apply"], [46, 3, 1, "", "batch_locked"], [46, 1, 1, "", "bfloat16"], [46, 1, 1, "", "buffers"], [46, 1, 1, "", "children"], [46, 1, 1, "", "close"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 1, 1, "", "double"], [46, 1, 1, "", "eval"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "fake_tensordict"], [46, 1, 1, "", "float"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_buffer"], [46, 1, 1, "", "get_extra_state"], [46, 1, 1, "", "get_parameter"], [46, 1, 1, "", "get_submodule"], [46, 1, 1, "", "half"], [46, 1, 1, "", "ipu"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "modules"], [46, 1, 1, "", "named_buffers"], [46, 1, 1, "", "named_children"], [46, 1, 1, "", "named_modules"], [46, 1, 1, "", "named_parameters"], [46, 1, 1, "", "parameters"], [46, 1, 1, "", "rand_step"], [46, 1, 1, "", "register_backward_hook"], [46, 1, 1, "", "register_buffer"], [46, 1, 1, "", "register_forward_hook"], [46, 1, 1, "", "register_forward_pre_hook"], [46, 1, 1, "", "register_full_backward_hook"], [46, 1, 1, "", "register_load_state_dict_post_hook"], [46, 1, 1, "", "register_module"], [46, 1, 1, "", "register_parameter"], [46, 1, 1, "", "requires_grad_"], [46, 1, 1, "", "reset"], [46, 1, 1, "", "rollout"], [46, 1, 1, "", "set_extra_state"], [46, 1, 1, "", "set_seed"], [46, 1, 1, "", "share_memory"], [46, 3, 1, "", "specs"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "step"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_empty"], [46, 1, 1, "", "train"], [46, 1, 1, "", "type"], [46, 1, 1, "", "xpu"], [46, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[47, 1, 1, "", "add_module"], [47, 1, 1, "", "apply"], [47, 3, 1, "", "batch_locked"], [47, 1, 1, "", "bfloat16"], [47, 1, 1, "", "buffers"], [47, 1, 1, "", "children"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 1, 1, "", "double"], [47, 1, 1, "", "eval"], [47, 1, 1, "", "extra_repr"], [47, 1, 1, "", "fake_tensordict"], [47, 1, 1, "", "float"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_buffer"], [47, 1, 1, "", "get_extra_state"], [47, 1, 1, "", "get_parameter"], [47, 1, 1, "", "get_submodule"], [47, 1, 1, "", "half"], [47, 1, 1, "", "ipu"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "modules"], [47, 1, 1, "", "named_buffers"], [47, 1, 1, "", "named_children"], [47, 1, 1, "", "named_modules"], [47, 1, 1, "", "named_parameters"], [47, 1, 1, "", "parameters"], [47, 1, 1, "", "rand_step"], [47, 1, 1, "", "register_backward_hook"], [47, 1, 1, "", "register_buffer"], [47, 1, 1, "", "register_forward_hook"], [47, 1, 1, "", "register_forward_pre_hook"], [47, 1, 1, "", "register_full_backward_hook"], [47, 1, 1, "", "register_load_state_dict_post_hook"], [47, 1, 1, "", "register_module"], [47, 1, 1, "", "register_parameter"], [47, 1, 1, "", "requires_grad_"], [47, 1, 1, "", "reset"], [47, 1, 1, "", "rollout"], [47, 1, 1, "", "set_extra_state"], [47, 1, 1, "", "set_seed"], [47, 1, 1, "", "share_memory"], [47, 3, 1, "", "specs"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "step"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_empty"], [47, 1, 1, "", "train"], [47, 1, 1, "", "type"], [47, 1, 1, "", "update_kwargs"], [47, 1, 1, "", "xpu"], [47, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[48, 1, 1, "", "add_module"], [48, 1, 1, "", "apply"], [48, 3, 1, "", "batch_locked"], [48, 1, 1, "", "bfloat16"], [48, 1, 1, "", "buffers"], [48, 1, 1, "", "children"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 1, 1, "", "double"], [48, 1, 1, "", "eval"], [48, 1, 1, "", "extra_repr"], [48, 1, 1, "", "fake_tensordict"], [48, 1, 1, "", "float"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_buffer"], [48, 1, 1, "", "get_extra_state"], [48, 1, 1, "", "get_parameter"], [48, 1, 1, "", "get_submodule"], [48, 1, 1, "", "half"], [48, 1, 1, "", "ipu"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "modules"], [48, 1, 1, "", "named_buffers"], [48, 1, 1, "", "named_children"], [48, 1, 1, "", "named_modules"], [48, 1, 1, "", "named_parameters"], [48, 1, 1, "", "parameters"], [48, 1, 1, "", "rand_step"], [48, 1, 1, "", "register_backward_hook"], [48, 1, 1, "", "register_buffer"], [48, 1, 1, "", "register_forward_hook"], [48, 1, 1, "", "register_forward_pre_hook"], [48, 1, 1, "", "register_full_backward_hook"], [48, 1, 1, "", "register_load_state_dict_post_hook"], [48, 1, 1, "", "register_module"], [48, 1, 1, "", "register_parameter"], [48, 1, 1, "", "requires_grad_"], [48, 1, 1, "", "reset"], [48, 1, 1, "", "rollout"], [48, 1, 1, "", "set_extra_state"], [48, 1, 1, "", "set_seed"], [48, 1, 1, "", "share_memory"], [48, 3, 1, "", "specs"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "step"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_empty"], [48, 1, 1, "", "train"], [48, 1, 1, "", "type"], [48, 1, 1, "", "update_kwargs"], [48, 1, 1, "", "xpu"], [48, 1, 1, "", "zero_grad"]], "torchrl.envs.Specs": [[49, 1, 1, "", "build_tensordict"]], "torchrl.envs.libs.brax": [[50, 2, 1, "", "BraxEnv"], [51, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[52, 2, 1, "", "DMControlEnv"], [53, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[54, 2, 1, "", "GymEnv"], [55, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[56, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[57, 2, 1, "", "JumanjiEnv"], [58, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.vmas": [[59, 2, 1, "", "VmasEnv"], [60, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[61, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[62, 0, 1, "", "BinarizeReward"], [63, 0, 1, "", "CatFrames"], [64, 0, 1, "", "CatTensors"], [65, 0, 1, "", "CenterCrop"], [66, 0, 1, "", "Compose"], [67, 0, 1, "", "DiscreteActionProjection"], [68, 0, 1, "", "DoubleToFloat"], [69, 0, 1, "", "ExcludeTransform"], [70, 0, 1, "", "FiniteTensorDictCheck"], [71, 0, 1, "", "FlattenObservation"], [72, 0, 1, "", "FrameSkipTransform"], [73, 0, 1, "", "GrayScale"], [74, 0, 1, "", "NoopResetEnv"], [75, 0, 1, "", "ObservationNorm"], [76, 0, 1, "", "ObservationTransform"], [77, 0, 1, "", "PinMemoryTransform"], [78, 0, 1, "", "R3MTransform"], [79, 0, 1, "", "Resize"], [80, 0, 1, "", "RewardClipping"], [81, 0, 1, "", "RewardScaling"], [82, 0, 1, "", "RewardSum"], [83, 0, 1, "", "SelectTransform"], [84, 0, 1, "", "SqueezeTransform"], [85, 0, 1, "", "StepCounter"], [86, 0, 1, "", "TensorDictPrimer"], [87, 0, 1, "", "TimeMaxPool"], [88, 0, 1, "", "ToTensorImage"], [89, 0, 1, "", "Transform"], [90, 0, 1, "", "TransformedEnv"], [91, 0, 1, "", "UnsqueezeTransform"], [92, 0, 1, "", "VIPRewardTransform"], [93, 0, 1, "", "VIPTransform"], [94, 0, 1, "", "VecNorm"], [95, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[62, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[63, 1, 1, "", "forward"], [63, 1, 1, "", "reset"], [63, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[64, 1, 1, "", "forward"], [64, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[65, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[66, 1, 1, "", "forward"], [66, 1, 1, "", "reset"], [66, 1, 1, "", "to"], [66, 1, 1, "", "transform_input_spec"], [66, 1, 1, "", "transform_observation_spec"], [66, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[67, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[68, 1, 1, "", "transform_input_spec"], [68, 1, 1, "", "transform_observation_spec"], [68, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[69, 1, 1, "", "forward"], [69, 1, 1, "", "reset"], [69, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[70, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[71, 1, 1, "", "forward"], [71, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[72, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[73, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[74, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[75, 1, 1, "", "init_stats"], [75, 1, 1, "", "transform_input_spec"], [75, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[77, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[78, 1, 1, "", "to"]], "torchrl.envs.transforms.Resize": [[79, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[80, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[81, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[82, 1, 1, "", "reset"], [82, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[83, 1, 1, "", "forward"], [83, 1, 1, "", "reset"], [83, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[85, 1, 1, "", "forward"], [85, 1, 1, "", "reset"], [85, 1, 1, "", "transform_input_spec"], [85, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[86, 1, 1, "", "forward"], [86, 1, 1, "", "reset"], [86, 1, 1, "", "to"], [86, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[87, 1, 1, "", "forward"], [87, 1, 1, "", "reset"], [87, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[88, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[89, 1, 1, "", "forward"], [89, 1, 1, "", "reset"], [89, 1, 1, "", "transform_input_spec"], [89, 1, 1, "", "transform_observation_spec"], [89, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[90, 3, 1, "", "action_spec"], [90, 3, 1, "", "batch_locked"], [90, 1, 1, "", "eval"], [90, 3, 1, "", "input_spec"], [90, 1, 1, "", "load_state_dict"], [90, 3, 1, "", "observation_spec"], [90, 3, 1, "", "reward_spec"], [90, 1, 1, "", "set_seed"], [90, 1, 1, "", "state_dict"], [90, 1, 1, "", "to"], [90, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[91, 1, 1, "", "transform_input_spec"], [91, 1, 1, "", "transform_observation_spec"], [91, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[92, 1, 1, "", "forward"], [92, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[93, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[94, 1, 1, "", "build_td_for_shared_vecnorm"], [94, 1, 1, "", "forward"], [94, 1, 1, "", "get_extra_state"], [94, 1, 1, "", "set_extra_state"], [94, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[96, 2, 1, "", "check_env_specs"], [97, 2, 1, "", "exploration_mode"], [98, 2, 1, "", "get_available_libraries"], [99, 2, 1, "", "set_exploration_mode"], [100, 2, 1, "", "step_mdp"]], "torchrl.modules": [[101, 0, 1, "", "CEMPlanner"], [102, 0, 1, "", "ConvNet"], [103, 0, 1, "", "DdpgCnnActor"], [104, 0, 1, "", "DdpgCnnQNet"], [105, 0, 1, "", "DdpgMlpActor"], [106, 0, 1, "", "DdpgMlpQNet"], [107, 0, 1, "", "Delta"], [108, 0, 1, "", "DistributionalDQNnet"], [109, 0, 1, "", "DreamerActor"], [110, 0, 1, "", "DuelingCnnDQNet"], [111, 0, 1, "", "IndependentNormal"], [112, 0, 1, "", "LSTMNet"], [113, 0, 1, "", "MLP"], [114, 0, 1, "", "MPCPlannerBase"], [115, 0, 1, "", "MPPIPlanner"], [116, 0, 1, "", "NoisyLazyLinear"], [117, 0, 1, "", "NoisyLinear"], [118, 0, 1, "", "NormalParamWrapper"], [119, 0, 1, "", "ObsDecoder"], [120, 0, 1, "", "ObsEncoder"], [121, 0, 1, "", "OneHotCategorical"], [122, 0, 1, "", "RSSMPosterior"], [123, 0, 1, "", "RSSMPrior"], [124, 0, 1, "", "TanhDelta"], [125, 0, 1, "", "TanhNormal"], [126, 0, 1, "", "TruncatedNormal"], [127, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[101, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[102, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[103, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[104, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[105, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[106, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[107, 1, 1, "", "log_prob"], [107, 3, 1, "", "mean"], [107, 3, 1, "", "mode"], [107, 1, 1, "", "rsample"], [107, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[108, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[109, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[110, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[111, 3, 1, "", "mode"]], "torchrl.modules.LSTMNet": [[112, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[113, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[114, 1, 1, "", "forward"], [114, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[115, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[116, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[118, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[119, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[120, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[121, 1, 1, "", "log_prob"], [121, 3, 1, "", "mode"], [121, 1, 1, "", "rsample"], [121, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[122, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[123, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[124, 3, 1, "", "mean"], [124, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[125, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[126, 1, 1, "", "log_prob"], [126, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module": [[128, 0, 1, "", "Actor"], [129, 0, 1, "", "ActorCriticOperator"], [130, 0, 1, "", "ActorCriticWrapper"], [131, 0, 1, "", "ActorValueOperator"], [132, 0, 1, "", "AdditiveGaussianWrapper"], [133, 0, 1, "", "DistributionalQValueActor"], [134, 0, 1, "", "EGreedyWrapper"], [135, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [136, 0, 1, "", "ProbabilisticActor"], [137, 0, 1, "", "QValueActor"], [138, 0, 1, "", "SafeModule"], [139, 0, 1, "", "SafeProbabilisticModule"], [140, 0, 1, "", "SafeProbabilisticSequential"], [141, 0, 1, "", "SafeSequential"], [142, 0, 1, "", "ValueOperator"], [143, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[129, 1, 1, "", "get_critic_operator"], [129, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[130, 1, 1, "", "get_policy_operator"], [130, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[131, 1, 1, "", "get_policy_operator"], [131, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[132, 1, 1, "", "forward"], [132, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.SafeModule": [[138, 1, 1, "", "random"], [138, 1, 1, "", "random_sample"], [138, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[139, 1, 1, "", "random"], [139, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[143, 1, 1, "", "get_reward_operator"], [143, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.tensordict_module.actors": [[144, 0, 1, "", "DistributionalQValueHook"], [145, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[146, 0, 1, "", "ensure_tensordict_compatible"], [147, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[148, 0, 1, "", "biased_softplus"], [149, 0, 1, "", "inv_softplus"], [150, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[148, 1, 1, "", "forward"]], "torchrl.objectives": [[151, 0, 1, "", "A2CLoss"], [152, 0, 1, "", "ClipPPOLoss"], [153, 0, 1, "", "DDPGLoss"], [154, 0, 1, "", "DQNLoss"], [155, 0, 1, "", "DistributionalDQNLoss"], [156, 0, 1, "", "DreamerActorLoss"], [157, 0, 1, "", "DreamerModelLoss"], [158, 0, 1, "", "DreamerValueLoss"], [159, 0, 1, "", "HardUpdate"], [160, 0, 1, "", "KLPENPPOLoss"], [161, 0, 1, "", "PPOLoss"], [162, 0, 1, "", "REDQLoss"], [163, 0, 1, "", "ReinforceLoss"], [164, 0, 1, "", "SACLoss"], [165, 0, 1, "", "SoftUpdate"], [166, 0, 1, "", "distance_loss"], [167, 0, 1, "", "hold_out_net"], [168, 0, 1, "", "hold_out_params"], [169, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[151, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[152, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[153, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[154, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[155, 1, 1, "", "forward"]], "torchrl.objectives.DreamerActorLoss": [[156, 1, 1, "", "forward"]], "torchrl.objectives.DreamerModelLoss": [[157, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[158, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[160, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[161, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[162, 1, 1, "", "forward"]], "torchrl.objectives.ReinforceLoss": [[163, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[164, 1, 1, "", "forward"]], "torchrl.objectives.value": [[170, 0, 1, "", "GAE"], [171, 0, 1, "", "TDEstimate"], [172, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[170, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[171, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[172, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[173, 0, 1, "", "generalized_advantage_estimate"], [174, 0, 1, "", "td_advantage_estimate"], [175, 0, 1, "", "td_lambda_advantage_estimate"], [176, 0, 1, "", "td_lambda_return_estimate"], [177, 0, 1, "", "vec_generalized_advantage_estimate"], [178, 0, 1, "", "vec_td_lambda_advantage_estimate"], [179, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[180, 2, 1, "", "TensorDictRecorder"], [181, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[182, 2, 1, "", "CSVLogger"], [183, 2, 1, "", "Logger"], [184, 2, 1, "", "MLFlowLogger"], [185, 2, 1, "", "TensorboardLogger"], [186, 2, 1, "", "WandbLogger"], [187, 2, 1, "", "generate_exp_name"], [188, 2, 1, "", "get_logger"]], "torchrl.trainers": [[189, 0, 1, "", "BatchSubSampler"], [190, 0, 1, "", "ClearCudaCache"], [191, 0, 1, "", "CountFramesLog"], [192, 0, 1, "", "LogReward"], [193, 0, 1, "", "OptimizerHook"], [194, 0, 1, "", "Recorder"], [195, 0, 1, "", "ReplayBufferTrainer"], [196, 0, 1, "", "RewardNormalizer"], [197, 0, 1, "", "SelectKeys"], [198, 0, 1, "", "Trainer"], [199, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.helpers": [[200, 2, 1, "", "correct_for_frame_skip"], [201, 2, 1, "", "get_stats_random_rollout"], [202, 2, 1, "", "make_a2c_loss"], [203, 2, 1, "", "make_a2c_model"], [204, 2, 1, "", "make_collector_offpolicy"], [205, 2, 1, "", "make_collector_onpolicy"], [206, 2, 1, "", "make_ddpg_actor"], [207, 2, 1, "", "make_ddpg_loss"], [208, 2, 1, "", "make_dqn_actor"], [209, 2, 1, "", "make_dqn_loss"], [210, 2, 1, "", "make_ppo_loss"], [211, 2, 1, "", "make_ppo_model"], [212, 2, 1, "", "make_redq_loss"], [213, 2, 1, "", "make_redq_model"], [214, 2, 1, "", "make_replay_buffer"], [215, 2, 1, "", "make_sac_loss"], [216, 2, 1, "", "make_sac_model"], [217, 2, 1, "", "make_target_updater"], [218, 2, 1, "", "make_trainer"], [219, 2, 1, "", "parallel_env_constructor"], [220, 2, 1, "", "sync_async_collector"], [221, 2, 1, "", "sync_sync_collector"], [222, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 5, 226, 227, 228, 229, 230, 231, 238, 239], "document": [0, 8], "tutori": 0, "refer": [0, 224], "knowledg": [0, 225], "base": [0, 225, 231], "indic": 0, "tabl": 0, "collector": [1, 230], "packag": [1, 2, 3, 226, 227, 228, 229], "data": [1, 2, 230, 239], "helper": [1, 3], "function": [1, 239], "replai": [2, 230, 239], "buffer": [2, 230, 239], "compos": [2, 66], "tensorspec": [2, 29], "util": [2, 226, 227, 228], "env": [3, 238, 239], "vector": [3, 239], "transform": [3, 89, 230, 236, 238, 239], "record": [3, 194, 228, 230], "domain": 3, "specif": [3, 233], "librari": [3, 239], "work": [4, 5], "gym": [4, 238], "what": 4, "i": [4, 7, 237], "openai": 4, "version": [4, 6, 9], "habitat": 5, "lab": 5, "set": [5, 237], "up": 5, "your": [5, 230], "environ": [5, 6, 230, 231, 233, 238, 239], "instal": [5, 6, 239], "from": [5, 6], "pip": [5, 6], "us": [5, 8, 230, 231, 234, 236, 239], "common": [5, 6, 7], "issu": [5, 6, 9], "about": 6, "mujoco": 6, "prerequisit": 6, "render": [6, 238], "all": 6, "new": 6, "bindindg": 6, "2": [6, 236], "1": [6, 236], "old": 6, "bind": 6, "py": 6, "option": 6, "clone": 6, "repo": [6, 8], "when": 6, "pro": 7, "tip": 7, "debug": 7, "gradient": 7, "relat": 7, "error": 7, "newcom": 7, "my": 7, "train": [7, 230, 231], "too": 7, "slow": 7, "intermedi": 7, "bug": 7, "resourc": 8, "pytorch": [8, 9], "functorch": [8, 236], "rl": [8, 239], "blog": 8, "websit": 8, "educ": 8, "forum": 8, "how": 9, "reproduc": 9, "workaround": 9, "implement_for": 10, "multisyncdatacollector": 11, "multiasyncdatacollector": 12, "randompolici": 13, "syncdatacollector": 14, "asyncdatacollector": 15, "split_trajectori": 16, "binarydiscretetensorspec": 17, "boundedtensorspec": 18, "compositespec": 19, "discretetensorspec": 20, "multidiscretetensorspec": 21, "multionehotdiscretetensorspec": 22, "multistep": 23, "onehotdiscretetensorspec": 24, "prioritizedreplaybuff": 25, "replaybuff": 26, "tensordictprioritizedreplaybuff": 27, "tensordictreplaybuff": 28, "unboundedcontinuoustensorspec": 30, "unboundeddiscretetensorspec": 31, "prioritizedsampl": 32, "randomsampl": 33, "sampler": 34, "lazymemmapstorag": 35, "lazytensorstorag": 36, "liststorag": 37, "storag": 38, "roundrobinwrit": 39, "writer": 40, "envbas": 41, "envcreat": 42, "envmetadata": 43, "gymlikeenv": 44, "modelbasedenvbas": 45, "multithreadedenv": 46, "parallelenv": 47, "serialenv": 48, "spec": [49, 238], "braxenv": 50, "braxwrapp": 51, "dmcontrolenv": 52, "dmcontrolwrapp": 53, "gymenv": 54, "gymwrapp": 55, "habitatenv": 56, "jumanjienv": 57, "jumanjiwrapp": 58, "vmasenv": 59, "vmaswrapp": 60, "dreamerenv": 61, "binarizereward": 62, "catfram": 63, "cattensor": 64, "centercrop": 65, "discreteactionproject": 67, "doubletofloat": 68, "excludetransform": 69, "finitetensordictcheck": 70, "flattenobserv": 71, "frameskiptransform": 72, "grayscal": 73, "noopresetenv": 74, "observationnorm": 75, "observationtransform": 76, "pinmemorytransform": 77, "r3mtransform": 78, "resiz": 79, "rewardclip": 80, "rewardsc": 81, "rewardsum": 82, "selecttransform": 83, "squeezetransform": 84, "stepcount": 85, "tensordictprim": 86, "timemaxpool": 87, "totensorimag": 88, "transformedenv": 90, "unsqueezetransform": 91, "viprewardtransform": 92, "viptransform": 93, "vecnorm": [94, 238], "gsdenois": 95, "check_env_spec": 96, "exploration_mod": 97, "get_available_librari": 98, "set_exploration_mod": 99, "step_mdp": 100, "cemplann": 101, "convnet": 102, "ddpgcnnactor": 103, "ddpgcnnqnet": 104, "ddpgmlpactor": 105, "ddpgmlpqnet": 106, "delta": 107, "distributionaldqnnet": 108, "dreameractor": 109, "duelingcnndqnet": 110, "independentnorm": 111, "lstmnet": 112, "mlp": 113, "mpcplannerbas": 114, "mppiplann": 115, "noisylazylinear": 116, "noisylinear": 117, "normalparamwrapp": 118, "obsdecod": 119, "obsencod": 120, "onehotcategor": 121, "rssmposterior": 122, "rssmprior": 123, "tanhdelta": 124, "tanhnorm": 125, "truncatednorm": 126, "reset_nois": 127, "actor": [128, 236], "actorcriticoper": [129, 236], "actorcriticwrapp": 130, "actorvalueoper": 131, "additivegaussianwrapp": 132, "distributionalqvalueactor": 133, "egreedywrapp": 134, "ornsteinuhlenbeckprocesswrapp": 135, "probabilisticactor": [136, 236], "qvalueactor": 137, "safemodul": 138, "safeprobabilisticmodul": 139, "safeprobabilisticsequenti": 140, "safesequenti": 141, "valueoper": 142, "worldmodelwrapp": 143, "distributionalqvaluehook": 144, "qvaluehook": 145, "ensure_tensordict_compat": 146, "is_tensordict_compat": 147, "biased_softplu": 148, "inv_softplu": 149, "map": 150, "a2closs": 151, "clipppoloss": 152, "ddpgloss": 153, "dqnloss": 154, "distributionaldqnloss": 155, "dreameractorloss": 156, "dreamermodelloss": 157, "dreamervalueloss": 158, "hardupd": 159, "klpenppoloss": 160, "ppoloss": 161, "redqloss": 162, "reinforceloss": 163, "sacloss": 164, "softupd": 165, "distance_loss": 166, "hold_out_net": 167, "hold_out_param": 168, "next_state_valu": 169, "gae": 170, "tdestim": 171, "tdlambdaestim": 172, "generalized_advantage_estim": 173, "td_advantage_estim": 174, "td_lambda_advantage_estim": 175, "td_lambda_return_estim": 176, "vec_generalized_advantage_estim": 177, "vec_td_lambda_advantage_estim": 178, "vec_td_lambda_return_estim": 179, "tensordictrecord": 180, "videorecord": 181, "csvlogger": 182, "logger": [183, 228], "mlflowlogg": 184, "tensorboardlogg": 185, "wandblogg": 186, "generate_exp_nam": 187, "get_logg": 188, "batchsubsampl": 189, "clearcudacach": 190, "countframeslog": 191, "logreward": 192, "optimizerhook": 193, "replaybuffertrain": 195, "rewardnorm": 196, "selectkei": 197, "trainer": [198, 228], "updateweight": 199, "correct_for_frame_skip": 200, "get_stats_random_rollout": 201, "make_a2c_loss": 202, "make_a2c_model": 203, "make_collector_offpolici": 204, "make_collector_onpolici": 205, "make_ddpg_actor": 206, "make_ddpg_loss": 207, "make_dqn_actor": 208, "make_dqn_loss": 209, "make_ppo_loss": 210, "make_ppo_model": 211, "make_redq_loss": 212, "make_redq_model": 213, "make_replay_buff": 214, "make_sac_loss": 215, "make_sac_model": 216, "make_target_updat": 217, "make_train": 218, "parallel_env_constructor": 219, "sync_async_collector": 220, "sync_sync_collector": 221, "transformed_env_constructor": 222, "readm": [223, 232], "tuto": [223, 232], "api": 224, "contribut": [225, 239], "content": 225, "modul": [226, 239], "tensordict": [226, 237, 239], "hook": [226, 228], "model": [226, 230, 231, 234, 239], "explor": 226, "planner": 226, "distribut": 226, "object": [227, 230, 239], "dqn": [227, 231], "ddpg": [227, 230], "sac": 227, "redq": 227, "ppo": 227, "a2c": 227, "reinforc": 227, "dreamer": 227, "return": 227, "checkpoint": 228, "builder": 228, "_util": 229, "code": [230, 231, 237], "parallel": [230, 233, 238], "execut": [230, 233], "normal": 230, "observ": 230, "build": [230, 231], "evalu": 230, "hyperparamet": [230, 231], "initi": 230, "time": [230, 235], "polici": [230, 233], "experi": 230, "result": 230, "sampl": 230, "trajectori": 230, "td": [230, 231], "lambda": [230, 231], "pixel": 231, "The": 231, "problem": 231, "deep": 231, "q": 231, "network": 231, "regular": 231, "loop": 231, "conclus": 231, "possibl": 231, "improv": [231, 237], "task": 233, "multi": 233, "divers": 233, "rollout": [233, 238], "pretrain": 234, "comput": 235, "tensordictmodul": [236, 239], "exampl": 236, "simpl": 236, "usag": [236, 237], "multipl": 236, "input": 236, "3": 236, "output": 236, "4": 236, "combin": 236, "tensordictsequenti": 236, "5": 236, "compat": 236, "do": [236, 237], "": 236, "don": 236, "t": [236, 237], "probabilistictensordictmodul": 236, "showcas": 236, "implement": 236, "benchmark": 236, "modular": 237, "can": 237, "thi": 237, "python": 237, "dict": 237, "structur": 237, "dictionari": 237, "featur": 237, "get": 237, "kei": 237, "valu": 237, "updat": 237, "tensordict_or_dict": 237, "del": 237, "tensor": 237, "batch": 237, "size": 237, "devic": [237, 238], "memori": 237, "share": 237, "via": 237, "physic": 237, "oper": 237, "seed": 238, "reset": 238, "step": 238, "frame_skip": 238, "deepmind": 238, "control": 238, "run": 238, "close": 238, "access": 238, "attribut": 238, "kwarg": 238, "introduct": 239, "chang": 239, "config": 239, "sequenc": 239, "program": 239, "ensembl": 239, "meta": 239, "special": 239, "class": 239, "state": 239}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials": [[0, "tutorials"]], "References": [[0, "references"]], "Knowledge Base": [[0, "knowledge-base"], [225, "knowledge-base"]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers": [[2, "composable-replay-buffers"]], "TensorSpec": [[2, "tensorspec"], [29, "tensorspec"]], "Utils": [[2, "utils"], [226, "utils"], [227, "utils"], [228, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [230, "transforms"], [239, "transforms"]], "Recorders": [[3, "recorders"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Working with gym": [[4, "working-with-gym"]], "What is OpenAI Gym?": [[4, "what-is-openai-gym"]], "Versioning": [[4, "versioning"]], "Working with habitat-lab": [[5, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[5, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[5, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[5, "installing-torchrl"]], "Using Habitat": [[5, "using-habitat"]], "Common issues": [[5, "common-issues"]], "About MuJoCo": [[6, "about-mujoco"]], "Installing MuJoCo": [[6, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[6, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[6, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[6, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[6, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[6, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[6, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips and Debugging": [[7, "pro-tips-and-debugging"]], "Gradient-related errors [Newcomers]": [[7, "gradient-related-errors-newcomers"]], "My Training is too slow [Newcomers / intermediate]": [[7, "my-training-is-too-slow-newcomers-intermediate"]], "Common bugs": [[7, "common-bugs"]], "Useful resources": [[8, "useful-resources"]], "Pytorch documentation": [[8, "pytorch-documentation"]], "functorch documentation": [[8, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[8, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[8, "educational-resource"]], "Forums": [[8, "forums"]], "Repos": [[8, "repos"]], "Versioning Issues": [[9, "versioning-issues"]], "Pytorch version": [[9, "pytorch-version"]], "How to reproduce": [[9, "how-to-reproduce"]], "Workarounds": [[9, "workarounds"]], "implement_for": [[10, "implement-for"]], "MultiSyncDataCollector": [[11, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[12, "multiasyncdatacollector"]], "RandomPolicy": [[13, "randompolicy"]], "SyncDataCollector": [[14, "syncdatacollector"]], "aSyncDataCollector": [[15, "asyncdatacollector"]], "split_trajectories": [[16, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[17, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[18, "boundedtensorspec"]], "CompositeSpec": [[19, "compositespec"]], "DiscreteTensorSpec": [[20, "discretetensorspec"]], "MultiDiscreteTensorSpec": [[21, "multidiscretetensorspec"]], "MultiOneHotDiscreteTensorSpec": [[22, "multionehotdiscretetensorspec"]], "MultiStep": [[23, "multistep"]], "OneHotDiscreteTensorSpec": [[24, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[25, "prioritizedreplaybuffer"]], "ReplayBuffer": [[26, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[27, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[28, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[30, "unboundedcontinuoustensorspec"]], "UnboundedDiscreteTensorSpec": [[31, "unboundeddiscretetensorspec"]], "PrioritizedSampler": [[32, "prioritizedsampler"]], "RandomSampler": [[33, "randomsampler"]], "Sampler": [[34, "sampler"]], "LazyMemmapStorage": [[35, "lazymemmapstorage"]], "LazyTensorStorage": [[36, "lazytensorstorage"]], "ListStorage": [[37, "liststorage"]], "Storage": [[38, "storage"]], "RoundRobinWriter": [[39, "roundrobinwriter"]], "Writer": [[40, "writer"]], "EnvBase": [[41, "envbase"]], "EnvCreator": [[42, "envcreator"]], "EnvMetaData": [[43, "envmetadata"]], "GymLikeEnv": [[44, "gymlikeenv"]], "ModelBasedEnvBase": [[45, "modelbasedenvbase"]], "MultiThreadedEnv": [[46, "multithreadedenv"]], "ParallelEnv": [[47, "parallelenv"]], "SerialEnv": [[48, "serialenv"]], "Specs": [[49, "specs"]], "BraxEnv": [[50, "braxenv"]], "BraxWrapper": [[51, "braxwrapper"]], "DMControlEnv": [[52, "dmcontrolenv"]], "DMControlWrapper": [[53, "dmcontrolwrapper"]], "GymEnv": [[54, "gymenv"]], "GymWrapper": [[55, "gymwrapper"]], "HabitatEnv": [[56, "habitatenv"]], "JumanjiEnv": [[57, "jumanjienv"]], "JumanjiWrapper": [[58, "jumanjiwrapper"]], "VmasEnv": [[59, "vmasenv"]], "VmasWrapper": [[60, "vmaswrapper"]], "DreamerEnv": [[61, "dreamerenv"]], "BinarizeReward": [[62, "binarizereward"]], "CatFrames": [[63, "catframes"]], "CatTensors": [[64, "cattensors"]], "CenterCrop": [[65, "centercrop"]], "Compose": [[66, "compose"]], "DiscreteActionProjection": [[67, "discreteactionprojection"]], "DoubleToFloat": [[68, "doubletofloat"]], "ExcludeTransform": [[69, "excludetransform"]], "FiniteTensorDictCheck": [[70, "finitetensordictcheck"]], "FlattenObservation": [[71, "flattenobservation"]], "FrameSkipTransform": [[72, "frameskiptransform"]], "GrayScale": [[73, "grayscale"]], "NoopResetEnv": [[74, "noopresetenv"]], "ObservationNorm": [[75, "observationnorm"]], "ObservationTransform": [[76, "observationtransform"]], "PinMemoryTransform": [[77, "pinmemorytransform"]], "R3MTransform": [[78, "r3mtransform"]], "Resize": [[79, "resize"]], "RewardClipping": [[80, "rewardclipping"]], "RewardScaling": [[81, "rewardscaling"]], "RewardSum": [[82, "rewardsum"]], "SelectTransform": [[83, "selecttransform"]], "SqueezeTransform": [[84, "squeezetransform"]], "StepCounter": [[85, "stepcounter"]], "TensorDictPrimer": [[86, "tensordictprimer"]], "TimeMaxPool": [[87, "timemaxpool"]], "ToTensorImage": [[88, "totensorimage"]], "Transform": [[89, "transform"]], "TransformedEnv": [[90, "transformedenv"]], "UnsqueezeTransform": [[91, "unsqueezetransform"]], "VIPRewardTransform": [[92, "viprewardtransform"]], "VIPTransform": [[93, "viptransform"]], "VecNorm": [[94, "vecnorm"], [238, "vecnorm"]], "gSDENoise": [[95, "gsdenoise"]], "check_env_specs": [[96, "check-env-specs"]], "exploration_mode": [[97, "exploration-mode"]], "get_available_libraries": [[98, "get-available-libraries"]], "set_exploration_mode": [[99, "set-exploration-mode"]], "step_mdp": [[100, "step-mdp"]], "CEMPlanner": [[101, "cemplanner"]], "ConvNet": [[102, "convnet"]], "DdpgCnnActor": [[103, "ddpgcnnactor"]], "DdpgCnnQNet": [[104, "ddpgcnnqnet"]], "DdpgMlpActor": [[105, "ddpgmlpactor"]], "DdpgMlpQNet": [[106, "ddpgmlpqnet"]], "Delta": [[107, "delta"]], "DistributionalDQNnet": [[108, "distributionaldqnnet"]], "DreamerActor": [[109, "dreameractor"]], "DuelingCnnDQNet": [[110, "duelingcnndqnet"]], "IndependentNormal": [[111, "independentnormal"]], "LSTMNet": [[112, "lstmnet"]], "MLP": [[113, "mlp"]], "MPCPlannerBase": [[114, "mpcplannerbase"]], "MPPIPlanner": [[115, "mppiplanner"]], "NoisyLazyLinear": [[116, "noisylazylinear"]], "NoisyLinear": [[117, "noisylinear"]], "NormalParamWrapper": [[118, "normalparamwrapper"]], "ObsDecoder": [[119, "obsdecoder"]], "ObsEncoder": [[120, "obsencoder"]], "OneHotCategorical": [[121, "onehotcategorical"]], "RSSMPosterior": [[122, "rssmposterior"]], "RSSMPrior": [[123, "rssmprior"]], "TanhDelta": [[124, "tanhdelta"]], "TanhNormal": [[125, "tanhnormal"]], "TruncatedNormal": [[126, "truncatednormal"]], "reset_noise": [[127, "reset-noise"]], "Actor": [[128, "actor"], [236, "actor"]], "ActorCriticOperator": [[129, "actorcriticoperator"], [236, "actorcriticoperator"]], "ActorCriticWrapper": [[130, "actorcriticwrapper"]], "ActorValueOperator": [[131, "actorvalueoperator"]], "AdditiveGaussianWrapper": [[132, "additivegaussianwrapper"]], "DistributionalQValueActor": [[133, "distributionalqvalueactor"]], "EGreedyWrapper": [[134, "egreedywrapper"]], "OrnsteinUhlenbeckProcessWrapper": [[135, "ornsteinuhlenbeckprocesswrapper"]], "ProbabilisticActor": [[136, "probabilisticactor"], [236, "probabilisticactor"]], "QValueActor": [[137, "qvalueactor"]], "SafeModule": [[138, "safemodule"]], "SafeProbabilisticModule": [[139, "safeprobabilisticmodule"]], "SafeProbabilisticSequential": [[140, "safeprobabilisticsequential"]], "SafeSequential": [[141, "safesequential"]], "ValueOperator": [[142, "valueoperator"]], "WorldModelWrapper": [[143, "worldmodelwrapper"]], "DistributionalQValueHook": [[144, "distributionalqvaluehook"]], "QValueHook": [[145, "qvaluehook"]], "ensure_tensordict_compatible": [[146, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[147, "is-tensordict-compatible"]], "biased_softplus": [[148, "biased-softplus"]], "inv_softplus": [[149, "inv-softplus"]], "mappings": [[150, "mappings"]], "A2CLoss": [[151, "a2closs"]], "ClipPPOLoss": [[152, "clipppoloss"]], "DDPGLoss": [[153, "ddpgloss"]], "DQNLoss": [[154, "dqnloss"]], "DistributionalDQNLoss": [[155, "distributionaldqnloss"]], "DreamerActorLoss": [[156, "dreameractorloss"]], "DreamerModelLoss": [[157, "dreamermodelloss"]], "DreamerValueLoss": [[158, "dreamervalueloss"]], "HardUpdate": [[159, "hardupdate"]], "KLPENPPOLoss": [[160, "klpenppoloss"]], "PPOLoss": [[161, "ppoloss"]], "REDQLoss": [[162, "redqloss"]], "ReinforceLoss": [[163, "reinforceloss"]], "SACLoss": [[164, "sacloss"]], "SoftUpdate": [[165, "softupdate"]], "distance_loss": [[166, "distance-loss"]], "hold_out_net": [[167, "hold-out-net"]], "hold_out_params": [[168, "hold-out-params"]], "next_state_value": [[169, "next-state-value"]], "GAE": [[170, "gae"]], "TDEstimate": [[171, "tdestimate"]], "TDLambdaEstimate": [[172, "tdlambdaestimate"]], "generalized_advantage_estimate": [[173, "generalized-advantage-estimate"]], "td_advantage_estimate": [[174, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[175, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[176, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[177, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[178, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[179, "vec-td-lambda-return-estimate"]], "TensorDictRecorder": [[180, "tensordictrecorder"]], "VideoRecorder": [[181, "videorecorder"]], "CSVLogger": [[182, "csvlogger"]], "Logger": [[183, "logger"]], "MLFlowLogger": [[184, "mlflowlogger"]], "TensorboardLogger": [[185, "tensorboardlogger"]], "WandbLogger": [[186, "wandblogger"]], "generate_exp_name": [[187, "generate-exp-name"]], "get_logger": [[188, "get-logger"]], "BatchSubSampler": [[189, "batchsubsampler"]], "ClearCudaCache": [[190, "clearcudacache"]], "CountFramesLog": [[191, "countframeslog"]], "LogReward": [[192, "logreward"]], "OptimizerHook": [[193, "optimizerhook"]], "Recorder": [[194, "recorder"]], "ReplayBufferTrainer": [[195, "replaybuffertrainer"]], "RewardNormalizer": [[196, "rewardnormalizer"]], "SelectKeys": [[197, "selectkeys"]], "Trainer": [[198, "trainer"]], "UpdateWeights": [[199, "updateweights"]], "correct_for_frame_skip": [[200, "correct-for-frame-skip"]], "get_stats_random_rollout": [[201, "get-stats-random-rollout"]], "make_a2c_loss": [[202, "make-a2c-loss"]], "make_a2c_model": [[203, "make-a2c-model"]], "make_collector_offpolicy": [[204, "make-collector-offpolicy"]], "make_collector_onpolicy": [[205, "make-collector-onpolicy"]], "make_ddpg_actor": [[206, "make-ddpg-actor"]], "make_ddpg_loss": [[207, "make-ddpg-loss"]], "make_dqn_actor": [[208, "make-dqn-actor"]], "make_dqn_loss": [[209, "make-dqn-loss"]], "make_ppo_loss": [[210, "make-ppo-loss"]], "make_ppo_model": [[211, "make-ppo-model"]], "make_redq_loss": [[212, "make-redq-loss"]], "make_redq_model": [[213, "make-redq-model"]], "make_replay_buffer": [[214, "make-replay-buffer"]], "make_sac_loss": [[215, "make-sac-loss"]], "make_sac_model": [[216, "make-sac-model"]], "make_target_updater": [[217, "make-target-updater"]], "make_trainer": [[218, "make-trainer"]], "parallel_env_constructor": [[219, "parallel-env-constructor"]], "sync_async_collector": [[220, "sync-async-collector"]], "sync_sync_collector": [[221, "sync-sync-collector"]], "transformed_env_constructor": [[222, "transformed-env-constructor"]], "README Tutos": [[223, "readme-tutos"], [232, "readme-tutos"]], "API Reference": [[224, "api-reference"]], "Contributing": [[225, "contributing"], [239, "contributing"]], "Contents:": [[225, null]], "torchrl.modules package": [[226, "torchrl-modules-package"]], "TensorDict modules": [[226, "tensordict-modules"]], "Hooks": [[226, "hooks"]], "Models": [[226, "models"], [239, "models"]], "Exploration": [[226, "exploration"]], "Planners": [[226, "planners"]], "Distributions": [[226, "distributions"]], "torchrl.objectives package": [[227, "torchrl-objectives-package"]], "DQN": [[227, "dqn"]], "DDPG": [[227, "ddpg"]], "SAC": [[227, "sac"]], "REDQ": [[227, "redq"]], "PPO": [[227, "ppo"]], "A2C": [[227, "a2c"]], "Reinforce": [[227, "reinforce"]], "Dreamer": [[227, "dreamer"]], "Returns": [[227, "returns"]], "torchrl.trainers package": [[228, "torchrl-trainers-package"]], "Checkpointing": [[228, "checkpointing"]], "Trainer and hooks": [[228, "trainer-and-hooks"]], "Builders": [[228, "builders"]], "Loggers": [[228, "loggers"]], "Recording utils": [[228, "recording-utils"]], "torchrl._utils package": [[229, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[230, "coding-ddpg-using-torchrl"]], "Environment": [[230, "environment"]], "Parallel execution": [[230, "parallel-execution"]], "Normalization of the observations": [[230, "normalization-of-the-observations"]], "Building the model": [[230, "building-the-model"]], "Evaluator: building your recorder object": [[230, "evaluator-building-your-recorder-object"]], "Replay buffer": [[230, "replay-buffer"]], "Hyperparameters": [[230, "hyperparameters"], [231, "hyperparameters"]], "Initialization": [[230, "initialization"]], "Data collector": [[230, "data-collector"]], "Time to train the policy!": [[230, "time-to-train-the-policy"]], "Experiment results": [[230, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[230, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[231, "coding-a-pixel-based-dqn-using-torchrl"]], "Building the environment": [[231, "building-the-environment"]], "The problem": [[231, "the-problem"]], "Building the model (Deep Q-network)": [[231, "building-the-model-deep-q-network"]], "Regular DQN": [[231, "regular-dqn"]], "Training loop": [[231, "training-loop"], [231, "id1"]], "TD-lambda": [[231, "td-lambda"]], "Conclusion and possible improvements": [[231, "conclusion-and-possible-improvements"]], "Task-specific policy in multi-task environments": [[233, "task-specific-policy-in-multi-task-environments"]], "Policy": [[233, "policy"]], "Executing diverse tasks in parallel": [[233, "executing-diverse-tasks-in-parallel"]], "Rollout": [[233, "rollout"]], "Using pretrained models": [[234, "using-pretrained-models"]], "Computation times": [[235, "computation-times"]], "TensorDictModule": [[236, "tensordictmodule"]], "TensorDictModule by examples": [[236, "tensordictmodule-by-examples"]], "Example 1: Simple usage": [[236, "example-1-simple-usage"]], "Example 2: Multiple inputs": [[236, "example-2-multiple-inputs"]], "Example 3: Multiple outputs": [[236, "example-3-multiple-outputs"]], "Example 4: Combining multiple TensorDictModule with TensorDictSequential": [[236, "example-4-combining-multiple-tensordictmodule-with-tensordictsequential"]], "Example 5: Compatibility with functorch": [[236, "example-5-compatibility-with-functorch"]], "Do\u2019s and don\u2019t with TensorDictModule": [[236, "do-s-and-don-t-with-tensordictmodule"]], "ProbabilisticTensorDictModule": [[236, "probabilistictensordictmodule"]], "Showcase: Implementing a transformer using TensorDictModule": [[236, "showcase-implementing-a-transformer-using-tensordictmodule"]], "Benchmarking": [[236, "benchmarking"]], "TensorDict": [[237, "tensordict"], [239, "tensordict"]], "Improving the modularity of codes": [[237, "improving-the-modularity-of-codes"]], "Can\u2019t I do this with a python dict?": [[237, "can-t-i-do-this-with-a-python-dict"]], "TensorDict structure": [[237, "tensordict-structure"]], "TensorDict Dictionary Features": [[237, "tensordict-dictionary-features"]], "get(key)": [[237, "get-key"]], "set(key, value)": [[237, "set-key-value"]], "keys()": [[237, "keys"]], "values()": [[237, "values"]], "update(tensordict_or_dict)": [[237, "update-tensordict-or-dict"]], "del": [[237, "del"]], "TensorDict tensor features": [[237, "tensordict-tensor-features"]], "Batch size": [[237, "batch-size"]], "Devices": [[237, "devices"]], "Memory sharing via physical memory usage": [[237, "memory-sharing-via-physical-memory-usage"]], "Tensor operations": [[237, "tensor-operations"]], "TorchRL envs": [[238, "torchrl-envs"]], "Gym environments": [[238, "gym-environments"]], "Env Specs": [[238, "env-specs"]], "Seeding, resetting and steps": [[238, "seeding-resetting-and-steps"]], "Rollouts": [[238, "rollouts"]], "frame_skip": [[238, "frame-skip"]], "Rendering": [[238, "rendering"]], "DeepMind Control environments": [[238, "deepmind-control-environments"]], "Transforming envs": [[238, "transforming-envs"]], "Environment device": [[238, "environment-device"]], "Running environments in parallel": [[238, "running-environments-in-parallel"]], "Closing parallel environments": [[238, "closing-parallel-environments"]], "Seeding": [[238, "seeding"]], "Accessing environment attributes": [[238, "accessing-environment-attributes"]], "kwargs for parallel environments": [[238, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[238, "transforming-parallel-environments"]], "Introduction to TorchRL": [[239, "introduction-to-torchrl"]], "Data": [[239, "data"]], "Replay buffers": [[239, "replay-buffers"]], "Envs": [[239, "envs"]], "Changing environments config": [[239, "changing-environments-config"]], "Vectorized Environments": [[239, "vectorized-environments"]], "Modules": [[239, "modules"]], "TensorDictModules": [[239, "tensordictmodules"]], "Sequences of Modules": [[239, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[239, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[239, "specialized-classes"]], "Using Environments and Modules": [[239, "using-environments-and-modules"]], "Objectives": [[239, "objectives"]], "State of the Library": [[239, "state-of-the-library"]], "Installing the Library": [[239, "installing-the-library"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[10, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors.collectors)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors.collectors)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "randompolicy (class in torchrl.collectors.collectors)": [[13, "torchrl.collectors.collectors.RandomPolicy"]], "syncdatacollector (class in torchrl.collectors.collectors)": [[14, "torchrl.collectors.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors.collectors)": [[15, "torchrl.collectors.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[16, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[17, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "expand() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.expand"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[18, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.encode"]], "expand() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.expand"]], "index() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[19, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.encode"]], "expand() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.expand"]], "index() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[20, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.encode"]], "expand() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.expand"]], "index() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.zero"]], "multidiscretetensorspec (class in torchrl.data)": [[21, "torchrl.data.MultiDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.expand"]], "index() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.project"]], "rand() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.zero"]], "multionehotdiscretetensorspec (class in torchrl.data)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.expand"]], "index() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[23, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.zero_grad"]], "onehotdiscretetensorspec (class in torchrl.data)": [[24, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.expand"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[25, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.sample"]], "replaybuffer (class in torchrl.data)": [[26, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.add"]], "append_transform() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data)": [[28, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[29, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.encode"]], "expand() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.expand"]], "index() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[30, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "expand() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.expand"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "unboundeddiscretetensorspec (class in torchrl.data)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.encode"]], "expand() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.expand"]], "index() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.index"]], "is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.is_in"]], "project() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.project"]], "rand() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.zero"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[32, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[32, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[33, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[35, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[35, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[36, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[36, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[37, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[38, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[40, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[40, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[40, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[41, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[41, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[41, "id0"], [41, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[41, "id1"], [41, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[41, "id2"], [41, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[41, "id3"], [41, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[41, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[41, "id4"], [41, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.zero_grad"]], "envcreator (class in torchrl.envs)": [[42, "torchrl.envs.EnvCreator"]], "envmetadata (class in torchrl.envs)": [[43, "torchrl.envs.EnvMetaData"]], "gymlikeenv (class in torchrl.envs)": [[44, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[44, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[44, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[45, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[45, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[45, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[45, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[45, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[45, "torchrl.envs.step"]], "multithreadedenv (class in torchrl.envs)": [[46, "torchrl.envs.MultiThreadedEnv"]], "add_module() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.add_module"]], "apply() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.apply"]], "batch_locked (torchrl.envs.multithreadedenv property)": [[46, "torchrl.envs.MultiThreadedEnv.batch_locked"]], "bfloat16() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.bfloat16"]], "buffers() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.buffers"]], "children() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.children"]], "close() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.close"]], "cpu() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.cpu"]], "cuda() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.cuda"]], "double() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.double"]], "eval() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.eval"]], "extra_repr() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.fake_tensordict"]], "float() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.float"]], "forward() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.forward"]], "get_buffer() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.get_buffer"]], "get_extra_state() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.get_extra_state"]], "get_parameter() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.get_parameter"]], "get_submodule() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.get_submodule"]], "half() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.half"]], "ipu() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.ipu"]], "load_state_dict() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.load_state_dict"]], "modules() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.modules"]], "named_buffers() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.named_buffers"]], "named_children() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.named_children"]], "named_modules() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.named_modules"]], "named_parameters() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.named_parameters"]], "parameters() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.parameters"]], "rand_step() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.rand_step"]], "register_backward_hook() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_module"]], "register_parameter() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_parameter"]], "requires_grad_() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.requires_grad_"]], "reset() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.reset"]], "rollout() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.rollout"]], "set_extra_state() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.set_extra_state"]], "set_seed() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.set_seed"]], "share_memory() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.share_memory"]], "specs (torchrl.envs.multithreadedenv property)": [[46, "torchrl.envs.MultiThreadedEnv.specs"]], "state_dict() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.state_dict"]], "step() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.step"]], "to() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.to"]], "to_empty() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.to_empty"]], "train() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.train"]], "type() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.type"]], "xpu() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.xpu"]], "zero_grad() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.zero_grad"]], "parallelenv (class in torchrl.envs)": [[47, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[47, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[47, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[48, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[48, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[48, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.zero_grad"]], "specs (class in torchrl.envs)": [[49, "torchrl.envs.Specs"]], "build_tensordict() (torchrl.envs.specs method)": [[49, "torchrl.envs.Specs.build_tensordict"]], "braxenv() (in module torchrl.envs.libs.brax)": [[50, "torchrl.envs.libs.brax.BraxEnv"]], "braxwrapper() (in module torchrl.envs.libs.brax)": [[51, "torchrl.envs.libs.brax.BraxWrapper"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[52, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[53, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[54, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[55, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[56, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[57, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[58, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "vmasenv() (in module torchrl.envs.libs.vmas)": [[59, "torchrl.envs.libs.vmas.VmasEnv"]], "vmaswrapper() (in module torchrl.envs.libs.vmas)": [[60, "torchrl.envs.libs.vmas.VmasWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[61, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[62, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.CatFrames"]], "forward() (torchrl.envs.transforms.catframes method)": [[63, "torchrl.envs.transforms.CatFrames.forward"]], "reset() (torchrl.envs.transforms.catframes method)": [[63, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[63, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.CatTensors"]], "forward() (torchrl.envs.transforms.cattensors method)": [[64, "torchrl.envs.transforms.CatTensors.forward"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[64, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[65, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "discreteactionprojection (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.DiscreteActionProjection"]], "transform_input_spec() (torchrl.envs.transforms.discreteactionprojection method)": [[67, "torchrl.envs.transforms.DiscreteActionProjection.transform_input_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[68, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[68, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[68, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "excludetransform (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.ExcludeTransform"]], "forward() (torchrl.envs.transforms.excludetransform method)": [[69, "torchrl.envs.transforms.ExcludeTransform.forward"]], "reset() (torchrl.envs.transforms.excludetransform method)": [[69, "torchrl.envs.transforms.ExcludeTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.excludetransform method)": [[69, "torchrl.envs.transforms.ExcludeTransform.transform_observation_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "forward() (torchrl.envs.transforms.finitetensordictcheck method)": [[70, "torchrl.envs.transforms.FiniteTensorDictCheck.forward"]], "flattenobservation (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.FlattenObservation"]], "forward() (torchrl.envs.transforms.flattenobservation method)": [[71, "torchrl.envs.transforms.FlattenObservation.forward"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[71, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "frameskiptransform (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.FrameSkipTransform"]], "forward() (torchrl.envs.transforms.frameskiptransform method)": [[72, "torchrl.envs.transforms.FrameSkipTransform.forward"]], "grayscale (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[73, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[74, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[75, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_input_spec() (torchrl.envs.transforms.observationnorm method)": [[75, "torchrl.envs.transforms.ObservationNorm.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[75, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.PinMemoryTransform"]], "forward() (torchrl.envs.transforms.pinmemorytransform method)": [[77, "torchrl.envs.transforms.PinMemoryTransform.forward"]], "r3mtransform (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.R3MTransform"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[78, "torchrl.envs.transforms.R3MTransform.to"]], "resize (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[79, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[80, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[81, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "rewardsum (class in torchrl.envs.transforms)": [[82, "torchrl.envs.transforms.RewardSum"]], "reset() (torchrl.envs.transforms.rewardsum method)": [[82, "torchrl.envs.transforms.RewardSum.reset"]], "transform_observation_spec() (torchrl.envs.transforms.rewardsum method)": [[82, "torchrl.envs.transforms.RewardSum.transform_observation_spec"]], "selecttransform (class in torchrl.envs.transforms)": [[83, "torchrl.envs.transforms.SelectTransform"]], "forward() (torchrl.envs.transforms.selecttransform method)": [[83, "torchrl.envs.transforms.SelectTransform.forward"]], "reset() (torchrl.envs.transforms.selecttransform method)": [[83, "torchrl.envs.transforms.SelectTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.selecttransform method)": [[83, "torchrl.envs.transforms.SelectTransform.transform_observation_spec"]], "squeezetransform (class in torchrl.envs.transforms)": [[84, "torchrl.envs.transforms.SqueezeTransform"]], "stepcounter (class in torchrl.envs.transforms)": [[85, "torchrl.envs.transforms.StepCounter"]], "forward() (torchrl.envs.transforms.stepcounter method)": [[85, "torchrl.envs.transforms.StepCounter.forward"]], "reset() (torchrl.envs.transforms.stepcounter method)": [[85, "torchrl.envs.transforms.StepCounter.reset"]], "transform_input_spec() (torchrl.envs.transforms.stepcounter method)": [[85, "torchrl.envs.transforms.StepCounter.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.stepcounter method)": [[85, "torchrl.envs.transforms.StepCounter.transform_observation_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[86, "torchrl.envs.transforms.TensorDictPrimer"]], "forward() (torchrl.envs.transforms.tensordictprimer method)": [[86, "torchrl.envs.transforms.TensorDictPrimer.forward"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[86, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[86, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[86, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "timemaxpool (class in torchrl.envs.transforms)": [[87, "torchrl.envs.transforms.TimeMaxPool"]], "forward() (torchrl.envs.transforms.timemaxpool method)": [[87, "torchrl.envs.transforms.TimeMaxPool.forward"]], "reset() (torchrl.envs.transforms.timemaxpool method)": [[87, "torchrl.envs.transforms.TimeMaxPool.reset"]], "transform_observation_spec() (torchrl.envs.transforms.timemaxpool method)": [[87, "torchrl.envs.transforms.TimeMaxPool.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[88, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[88, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[89, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[89, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[89, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[89, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[89, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[89, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[90, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[90, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[90, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[90, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[90, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[90, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[90, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[90, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[90, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[90, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[90, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[90, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[91, "torchrl.envs.transforms.UnsqueezeTransform"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[91, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[91, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[91, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[92, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[92, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[92, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[93, "torchrl.envs.transforms.VIPTransform"]], "to() (torchrl.envs.transforms.viptransform method)": [[93, "torchrl.envs.transforms.VIPTransform.to"]], "vecnorm (class in torchrl.envs.transforms)": [[94, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[94, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "forward() (torchrl.envs.transforms.vecnorm method)": [[94, "torchrl.envs.transforms.VecNorm.forward"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[94, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[94, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[94, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[95, "torchrl.envs.transforms.gSDENoise"]], "check_env_specs() (in module torchrl.envs.utils)": [[96, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[97, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[98, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[99, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[100, "torchrl.envs.utils.step_mdp"]], "cemplanner (class in torchrl.modules)": [[101, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[101, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[102, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[102, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[103, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[103, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[104, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[104, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[105, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[105, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[106, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[106, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[107, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[107, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[107, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[107, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[107, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[107, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[108, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[108, "torchrl.modules.DistributionalDQNnet.forward"]], "dreameractor (class in torchrl.modules)": [[109, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[109, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[110, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[110, "torchrl.modules.DuelingCnnDQNet.forward"]], "independentnormal (class in torchrl.modules)": [[111, "torchrl.modules.IndependentNormal"]], "mode (torchrl.modules.independentnormal property)": [[111, "torchrl.modules.IndependentNormal.mode"]], "lstmnet (class in torchrl.modules)": [[112, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[112, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[113, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[113, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[114, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[114, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[114, "torchrl.modules.MPCPlannerBase.planning"]], "mppiplanner (class in torchrl.modules)": [[115, "torchrl.modules.MPPIPlanner"]], "planning() (torchrl.modules.mppiplanner method)": [[115, "torchrl.modules.MPPIPlanner.planning"]], "noisylazylinear (class in torchrl.modules)": [[116, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[116, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[117, "torchrl.modules.NoisyLinear"]], "normalparamwrapper (class in torchrl.modules)": [[118, "torchrl.modules.NormalParamWrapper"]], "forward() (torchrl.modules.normalparamwrapper method)": [[118, "torchrl.modules.NormalParamWrapper.forward"]], "obsdecoder (class in torchrl.modules)": [[119, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[119, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[120, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[120, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[121, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[121, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[121, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[121, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[121, "torchrl.modules.OneHotCategorical.sample"]], "rssmposterior (class in torchrl.modules)": [[122, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[122, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[123, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[123, "torchrl.modules.RSSMPrior.forward"]], "tanhdelta (class in torchrl.modules)": [[124, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[124, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[124, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[125, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[125, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[126, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[126, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[126, "torchrl.modules.TruncatedNormal.mode"]], "reset_noise (class in torchrl.modules)": [[127, "torchrl.modules.reset_noise"]], "actor (class in torchrl.modules.tensordict_module)": [[128, "torchrl.modules.tensordict_module.Actor"]], "actorcriticoperator (class in torchrl.modules.tensordict_module)": [[129, "torchrl.modules.tensordict_module.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[129, "torchrl.modules.tensordict_module.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[129, "torchrl.modules.tensordict_module.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules.tensordict_module)": [[130, "torchrl.modules.tensordict_module.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[130, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[130, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules.tensordict_module)": [[131, "torchrl.modules.tensordict_module.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[131, "torchrl.modules.tensordict_module.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[131, "torchrl.modules.tensordict_module.ActorValueOperator.get_value_operator"]], "additivegaussianwrapper (class in torchrl.modules.tensordict_module)": [[132, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper"]], "forward() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[132, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.forward"]], "step() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[132, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.step"]], "distributionalqvalueactor (class in torchrl.modules.tensordict_module)": [[133, "torchrl.modules.tensordict_module.DistributionalQValueActor"]], "egreedywrapper (class in torchrl.modules.tensordict_module)": [[134, "torchrl.modules.tensordict_module.EGreedyWrapper"]], "forward() (torchrl.modules.tensordict_module.egreedywrapper method)": [[134, "torchrl.modules.tensordict_module.EGreedyWrapper.forward"]], "step() (torchrl.modules.tensordict_module.egreedywrapper method)": [[134, "torchrl.modules.tensordict_module.EGreedyWrapper.step"]], "ornsteinuhlenbeckprocesswrapper (class in torchrl.modules.tensordict_module)": [[135, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper"]], "forward() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[135, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.forward"]], "step() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[135, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.step"]], "probabilisticactor (class in torchrl.modules.tensordict_module)": [[136, "torchrl.modules.tensordict_module.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules.tensordict_module)": [[137, "torchrl.modules.tensordict_module.QValueActor"]], "safemodule (class in torchrl.modules.tensordict_module)": [[138, "torchrl.modules.tensordict_module.SafeModule"]], "random() (torchrl.modules.tensordict_module.safemodule method)": [[138, "torchrl.modules.tensordict_module.SafeModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safemodule method)": [[138, "torchrl.modules.tensordict_module.SafeModule.random_sample"]], "to() (torchrl.modules.tensordict_module.safemodule method)": [[138, "torchrl.modules.tensordict_module.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules.tensordict_module)": [[139, "torchrl.modules.tensordict_module.SafeProbabilisticModule"]], "random() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[139, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[139, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random_sample"]], "safeprobabilisticsequential (class in torchrl.modules.tensordict_module)": [[140, "torchrl.modules.tensordict_module.SafeProbabilisticSequential"]], "safesequential (class in torchrl.modules.tensordict_module)": [[141, "torchrl.modules.tensordict_module.SafeSequential"]], "valueoperator (class in torchrl.modules.tensordict_module)": [[142, "torchrl.modules.tensordict_module.ValueOperator"]], "worldmodelwrapper (class in torchrl.modules.tensordict_module)": [[143, "torchrl.modules.tensordict_module.WorldModelWrapper"]], "get_reward_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[143, "torchrl.modules.tensordict_module.WorldModelWrapper.get_reward_operator"]], "get_transition_model_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[143, "torchrl.modules.tensordict_module.WorldModelWrapper.get_transition_model_operator"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[144, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[145, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[146, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[147, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[148, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[148, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[149, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[150, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[151, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[151, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[152, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[152, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[153, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[153, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[154, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[154, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[155, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[155, "torchrl.objectives.DistributionalDQNLoss.forward"]], "dreameractorloss (class in torchrl.objectives)": [[156, "torchrl.objectives.DreamerActorLoss"]], "forward() (torchrl.objectives.dreameractorloss method)": [[156, "torchrl.objectives.DreamerActorLoss.forward"]], "dreamermodelloss (class in torchrl.objectives)": [[157, "torchrl.objectives.DreamerModelLoss"]], "forward() (torchrl.objectives.dreamermodelloss method)": [[157, "torchrl.objectives.DreamerModelLoss.forward"]], "dreamervalueloss (class in torchrl.objectives)": [[158, "torchrl.objectives.DreamerValueLoss"]], "forward() (torchrl.objectives.dreamervalueloss method)": [[158, "torchrl.objectives.DreamerValueLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[159, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[160, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[160, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[161, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[161, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[162, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[162, "torchrl.objectives.REDQLoss.forward"]], "reinforceloss (class in torchrl.objectives)": [[163, "torchrl.objectives.ReinforceLoss"]], "forward() (torchrl.objectives.reinforceloss method)": [[163, "torchrl.objectives.ReinforceLoss.forward"]], "sacloss (class in torchrl.objectives)": [[164, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[164, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[165, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[166, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[167, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[168, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[169, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[170, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[170, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[171, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[171, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[172, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[172, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[173, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[174, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[175, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[176, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[177, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[178, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[179, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "tensordictrecorder() (in module torchrl.record)": [[180, "torchrl.record.TensorDictRecorder"]], "videorecorder() (in module torchrl.record)": [[181, "torchrl.record.VideoRecorder"]], "csvlogger() (in module torchrl.record.loggers)": [[182, "torchrl.record.loggers.CSVLogger"]], "logger() (in module torchrl.record.loggers)": [[183, "torchrl.record.loggers.Logger"]], "mlflowlogger() (in module torchrl.record.loggers)": [[184, "torchrl.record.loggers.MLFlowLogger"]], "tensorboardlogger() (in module torchrl.record.loggers)": [[185, "torchrl.record.loggers.TensorboardLogger"]], "wandblogger() (in module torchrl.record.loggers)": [[186, "torchrl.record.loggers.WandbLogger"]], "generate_exp_name() (in module torchrl.record.loggers)": [[187, "torchrl.record.loggers.generate_exp_name"]], "get_logger() (in module torchrl.record.loggers)": [[188, "torchrl.record.loggers.get_logger"]], "batchsubsampler (class in torchrl.trainers)": [[189, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[190, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[191, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[192, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[193, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[194, "torchrl.trainers.Recorder"]], "replaybuffertrainer (class in torchrl.trainers)": [[195, "torchrl.trainers.ReplayBufferTrainer"]], "rewardnormalizer (class in torchrl.trainers)": [[196, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[197, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[198, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[199, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[200, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[201, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[202, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[203, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[204, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[205, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[206, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[207, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[208, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[209, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[210, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[211, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[212, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[213, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[214, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[215, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[216, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[217, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[218, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[219, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[220, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[221, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[222, "torchrl.trainers.helpers.transformed_env_constructor"]]}})