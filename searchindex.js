Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/index", "tutorials/multi_task", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "D4RLExperienceReplay", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "OpenMLEnv", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "RSSMPosterior", "RSSMPrior", "TanhDelta", "TanhNormal", "TruncatedNormal", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DistributionalQValueActor", "EGreedyWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "ValueOperator", "WorldModelWrapper", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "Reinforcement Learning (PPO) with TorchRL Tutorial", "README Tutos", "Task-specific policy in multi-task environments", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 46, 48, 51, 53, 54, 55, 73, 76, 83, 86, 91, 93, 96, 100, 103, 110, 111, 113, 114, 115, 116, 122, 124, 125, 127, 128, 132, 133, 138, 139, 143, 145, 146, 147, 148, 149, 151, 152, 153, 158, 162, 163, 164, 166, 167, 168, 169, 172, 173, 184, 185, 186, 187, 188, 189, 205, 208, 209, 210, 211, 215, 241, 243, 244, 250, 251, 253, 254, 255, 258, 259, 261, 262], "tensordict": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 30, 31, 32, 33, 37, 38, 39, 41, 48, 49, 50, 51, 52, 53, 54, 55, 57, 64, 65, 66, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 111, 122, 124, 125, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 184, 185, 186, 187, 188, 189, 202, 211, 215, 217, 219, 220, 226, 229, 231, 234, 236, 239, 247, 250, 251, 253, 254, 255, 257, 258, 259, 262], "class": [0, 1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 243, 244, 245, 250, 251, 253, 254, 255, 262], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 48, 49, 51, 53, 54, 55, 70, 96, 100, 142, 144, 149, 172, 253, 254, 255, 257, 258, 259, 261, 262], "been": [0, 5, 7, 8, 17, 18, 20, 45, 48, 51, 53, 54, 55, 99, 254, 255, 257, 258, 262], "move": [0, 4, 48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 104, 110, 123, 148, 173, 218, 253, 254, 261, 262], "out": [0, 3, 4, 5, 37, 48, 51, 53, 54, 55, 96, 106, 126, 127, 138, 143, 145, 146, 147, 148, 149, 182, 183, 251, 253, 254, 255, 258, 261, 262], "dedic": [0, 1, 18, 19, 20, 139, 140, 141, 253, 257], "librari": [0, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 53, 108, 247, 248, 252, 255, 258, 262], "take": [0, 1, 3, 8, 22, 48, 51, 53, 54, 55, 95, 97, 99, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158, 160, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 222, 251, 253, 254, 255, 258, 262], "look": [0, 3, 5, 7, 8, 48, 51, 53, 54, 55, 86, 87, 146, 149, 150, 151, 250, 254, 255, 258, 259, 261, 262], "find": [0, 1, 4, 6, 18, 19, 20, 30, 142, 144, 214, 218], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 253, 254, 255, 256, 257, 258, 259, 261, 262], "code": [0, 3, 5, 7, 8, 86, 151, 255, 256, 257, 259, 260, 261, 262], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 259, 261], "i": [0, 1, 2, 3, 6, 7, 10, 11, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 48, 49, 51, 52, 53, 54, 55, 58, 65, 69, 70, 71, 72, 73, 74, 76, 78, 81, 82, 83, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 106, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 136, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 181, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 211, 213, 214, 215, 216, 217, 218, 220, 223, 224, 226, 229, 234, 236, 239, 241, 245, 248, 250, 251, 253, 254, 255, 257, 258, 259, 261, 262], "an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 48, 49, 51, 52, 53, 54, 55, 58, 65, 72, 74, 77, 82, 83, 86, 87, 88, 89, 96, 98, 99, 100, 104, 106, 112, 113, 114, 115, 116, 122, 123, 124, 126, 130, 139, 140, 141, 145, 146, 149, 150, 153, 156, 157, 160, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 185, 186, 187, 188, 189, 203, 206, 215, 216, 220, 221, 224, 229, 242, 243, 244, 245, 248, 250, 253, 254, 257, 259, 261, 262], "open": [0, 5, 7, 11, 261], "reinforc": [0, 2, 3, 9, 70, 113, 114, 115, 116, 145, 154, 161, 166, 170, 171, 176, 177, 178, 229, 247, 254, 256, 258, 260, 261], "learn": [0, 2, 3, 7, 8, 9, 18, 70, 113, 114, 115, 116, 125, 127, 145, 154, 161, 166, 170, 171, 175, 176, 177, 178, 229, 250, 253, 254, 256, 257, 258, 260, 261, 262], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 52, 127, 138, 146, 152, 161, 173, 174, 211, 248, 250, 251, 253, 254, 255, 259, 262], "pytorch": [0, 1, 2, 98, 220, 248, 251, 253, 254, 255, 258, 259, 261, 262], "It": [0, 2, 3, 4, 7, 32, 37, 48, 51, 52, 53, 54, 55, 62, 83, 87, 100, 106, 113, 115, 119, 132, 133, 145, 149, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 184, 185, 216, 236, 248, 250, 253, 258, 259, 261, 262], "provid": [0, 1, 2, 3, 5, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 28, 29, 30, 31, 32, 33, 37, 42, 48, 51, 52, 53, 54, 55, 71, 72, 78, 82, 83, 86, 87, 92, 96, 100, 103, 104, 112, 122, 123, 124, 138, 142, 144, 145, 146, 154, 161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 184, 185, 186, 187, 188, 189, 203, 207, 211, 217, 224, 226, 234, 236, 239, 241, 248, 250, 251, 253, 254, 255, 257, 258, 259, 261, 262], "python": [0, 3, 5, 6, 7, 10, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262], "first": [0, 1, 3, 4, 5, 7, 8, 11, 18, 20, 37, 51, 71, 78, 83, 86, 87, 98, 100, 123, 126, 130, 138, 143, 146, 147, 148, 149, 168, 202, 219, 253, 254, 255, 257, 258, 259, 261, 262], "low": [0, 74, 254, 258, 261], "high": [0, 9, 32, 74, 185, 190, 197, 253, 254, 261], "level": [0, 4, 21, 25, 172, 253, 254, 261], "abstract": [0, 8, 23, 24, 25, 26, 27, 34, 35, 36, 47, 48, 84, 124, 189, 221, 251, 255, 258, 261], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 22, 29, 30, 31, 32, 33, 37, 38, 39, 40, 46, 48, 49, 51, 52, 53, 54, 55, 65, 73, 74, 75, 77, 78, 86, 92, 96, 99, 100, 101, 103, 104, 111, 116, 117, 122, 124, 127, 131, 133, 145, 146, 148, 149, 150, 151, 160, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 181, 184, 185, 186, 187, 188, 189, 217, 241, 245, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 74, 261], "effici": [0, 1, 2, 4, 8, 127, 253, 254, 255, 257, 259, 261], "modular": [0, 151, 261], "properli": [0, 255, 258, 261], "test": [0, 3, 5, 106, 122, 216, 241, 254, 255, 261], "aim": [0, 3, 7, 86, 103, 123, 223, 248, 250, 253, 254, 261], "support": [0, 1, 3, 18, 20, 25, 37, 46, 53, 65, 83, 99, 108, 143, 148, 151, 154, 166, 185, 186, 187, 188, 208, 251, 255, 258, 261], "research": [0, 7, 9, 261], "most": [0, 3, 7, 8, 74, 253, 254, 255, 258, 261], "written": [0, 3, 37, 38, 48, 51, 53, 54, 55, 70, 92, 95, 97, 138, 143, 145, 146, 147, 148, 149, 152, 161, 162, 172, 174, 176, 184, 202, 203, 250, 251, 253, 257, 258, 261], "highli": [0, 2, 261, 262], "wai": [0, 3, 4, 86, 88, 103, 174, 185, 186, 187, 188, 253, 254, 255, 257, 259, 261, 262], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 45, 48, 49, 51, 53, 54, 55, 70, 73, 74, 82, 83, 86, 87, 92, 96, 99, 100, 103, 104, 111, 121, 124, 125, 127, 128, 135, 136, 138, 142, 143, 146, 147, 148, 149, 150, 151, 152, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 184, 185, 186, 187, 188, 189, 216, 226, 234, 236, 239, 243, 244, 245, 248, 250, 251, 253, 254, 255, 257, 258, 259, 261, 262], "easili": [0, 3, 7, 226, 234, 236, 239, 250, 254, 255, 261, 262], "swap": [0, 3, 255, 259, 261], "compon": [0, 2, 3, 38, 39, 40, 46, 154, 155, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 215, 220, 253, 255, 257, 258, 259, 261], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 30, 31, 32, 33, 37, 49, 51, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 113, 119, 154, 155, 158, 160, 203, 217, 226, 229, 231, 234, 236, 239, 245, 247, 254, 256, 259, 260], "them": [0, 2, 7, 30, 31, 32, 33, 37, 48, 49, 51, 53, 54, 55, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158, 172, 203, 253, 254, 257, 258, 259, 261, 262], "write": [0, 3, 8, 22, 51, 85, 138, 143, 147, 148, 149, 151, 152, 163, 164, 165, 171, 175, 177, 179, 184, 189, 203, 251, 253, 254, 255, 256, 257, 259, 260, 261], "new": [0, 3, 4, 8, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 41, 45, 48, 51, 53, 54, 55, 92, 99, 104, 110, 145, 148, 149, 153, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 253, 254, 255, 258, 261, 262], "ones": [0, 25, 30, 32, 33, 48, 51, 53, 54, 55, 71, 73, 75, 83, 86, 96, 100, 103, 148, 173, 253, 255, 258, 261, 262], "littl": [0, 3, 255, 261, 262], "effort": [0, 3, 258, 261], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 25, 29, 30, 31, 32, 33, 37, 38, 39, 40, 45, 46, 48, 51, 52, 53, 54, 55, 62, 70, 71, 73, 74, 77, 79, 81, 83, 86, 87, 88, 92, 93, 96, 97, 99, 100, 102, 103, 104, 106, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 202, 211, 213, 216, 217, 220, 222, 223, 224, 226, 234, 236, 239, 241, 245, 248, 250, 251, 253, 254, 255, 257, 258, 259, 261, 262], "repo": [0, 6, 37, 248, 261], "attempt": [0, 142, 144, 145, 171, 261], "align": [0, 261], "exist": [0, 4, 18, 48, 51, 53, 54, 55, 71, 100, 224, 245, 261, 262], "ecosystem": [0, 261], "dataset": [0, 30, 31, 32, 33, 37, 65, 104, 247, 254, 259, 261, 262], "pillar": [0, 261], "environ": [0, 1, 2, 3, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 29, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 74, 75, 79, 82, 83, 86, 87, 99, 100, 104, 106, 111, 122, 124, 125, 167, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 211, 213, 216, 223, 224, 226, 227, 228, 229, 231, 234, 236, 239, 241, 242, 243, 244, 245, 248, 256, 259, 260], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 48, 51, 52, 53, 54, 55, 86, 96, 103, 105, 112, 123, 124, 125, 139, 140, 141, 148, 153, 161, 167, 168, 169, 171, 173, 174, 175, 177, 220, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 247, 248, 251, 255, 256, 258, 260, 262], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 65, 83, 95, 106, 111, 122, 125, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 163, 165, 175, 177, 179, 185, 186, 187, 188, 189, 211, 217, 220, 222, 227, 241, 243, 244, 245, 247, 250, 251, 258, 259, 262], "util": [0, 3, 13, 14, 16, 17, 18, 19, 20, 22, 48, 51, 53, 54, 55, 86, 103, 106, 107, 108, 109, 110, 112, 158, 159, 160, 161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 180, 241, 247, 252, 253, 254, 255, 258, 261, 262], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 25, 29, 38, 39, 48, 49, 51, 53, 54, 55, 71, 73, 78, 83, 86, 92, 96, 99, 100, 103, 106, 121, 125, 128, 135, 136, 146, 148, 149, 155, 173, 184, 185, 186, 187, 188, 211, 223, 244, 253, 254, 255, 258, 259, 261, 262], "g": [0, 1, 3, 7, 8, 10, 11, 29, 48, 49, 51, 53, 54, 55, 71, 73, 78, 83, 86, 92, 96, 99, 100, 103, 106, 121, 125, 135, 136, 146, 148, 149, 173, 184, 193, 194, 195, 196, 198, 199, 200, 201, 244, 253, 254, 255, 258, 259, 261, 262], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 95, 145, 217, 220, 222, 227, 228, 241, 243, 244, 247, 251, 262], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 25, 30, 31, 32, 33, 34, 37, 41, 43, 46, 47, 48, 51, 52, 53, 54, 55, 73, 75, 86, 96, 100, 103, 104, 110, 111, 112, 123, 125, 138, 143, 146, 147, 148, 152, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 184, 185, 186, 187, 188, 189, 207, 211, 223, 226, 229, 231, 234, 236, 239, 241, 242, 243, 244, 245, 250, 251, 253, 254, 255, 258, 259, 261, 262], "etc": [0, 3, 7, 8, 11, 35, 36, 48, 51, 53, 54, 55, 100, 123, 253, 255, 261, 262], "have": [0, 1, 3, 5, 6, 7, 8, 13, 14, 17, 18, 20, 25, 27, 30, 31, 32, 33, 37, 45, 46, 48, 51, 53, 54, 55, 70, 82, 83, 96, 99, 100, 104, 106, 112, 122, 123, 150, 151, 161, 162, 172, 174, 181, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 220, 250, 251, 253, 254, 255, 257, 258, 259, 261, 262], "few": [0, 2, 8, 211, 254, 255, 261, 262], "depend": [0, 1, 2, 3, 4, 7, 8, 152, 174, 255, 258, 261, 262], "possibl": [0, 3, 4, 26, 29, 48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173, 216, 220, 253, 255, 258, 261, 262], "standard": [0, 83, 91, 104, 111, 119, 125, 126, 127, 142, 179, 185, 186, 187, 188, 253, 254, 261], "numpi": [0, 11, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 98, 220, 253, 254, 258, 261, 262], "common": [0, 3, 4, 51, 54, 55, 139, 140, 141, 156, 157, 241, 248, 251, 253, 255, 257, 259, 261, 262], "openai": [0, 7, 60, 61, 255, 258, 261, 262], "gym": [0, 3, 4, 8, 11, 13, 14, 16, 21, 49, 51, 60, 61, 81, 83, 88, 96, 104, 226, 229, 231, 234, 236, 239, 241, 248, 253, 254, 255, 258, 259, 261], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 51, 53, 54, 55, 71, 73, 74, 78, 83, 86, 87, 96, 100, 103, 104, 122, 138, 143, 146, 147, 148, 149, 150, 151, 173, 177, 189, 224, 251, 253, 254, 255, 257, 258, 261, 262], "option": [0, 4, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 48, 49, 51, 52, 53, 54, 55, 58, 65, 70, 71, 72, 74, 75, 78, 79, 81, 82, 83, 86, 87, 88, 91, 95, 96, 97, 98, 100, 101, 103, 104, 106, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 163, 164, 165, 167, 168, 169, 171, 172, 173, 175, 176, 177, 179, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 198, 199, 200, 201, 203, 211, 213, 214, 215, 216, 217, 218, 220, 224, 226, 229, 234, 236, 239, 241, 243, 244, 245, 258, 261], "On": [0, 3, 7, 18, 19, 20, 254], "end": [0, 13, 14, 30, 31, 32, 33, 37, 45, 48, 51, 53, 54, 55, 100, 112, 124, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 253, 254, 255, 257, 258, 259, 261, 262], "come": [0, 1, 3, 8, 54, 55, 138, 139, 140, 141, 146, 152, 253, 254, 255, 261, 262], "set": [0, 1, 2, 3, 7, 9, 13, 14, 16, 17, 18, 19, 20, 29, 30, 31, 32, 33, 37, 45, 46, 48, 50, 51, 52, 53, 54, 55, 71, 73, 81, 86, 95, 96, 100, 103, 106, 109, 124, 142, 148, 173, 211, 216, 217, 228, 245, 248, 250, 252, 253, 254, 255, 257, 258, 259, 261, 262], "re": [0, 3, 8, 45, 48, 51, 53, 54, 55, 146, 149, 251, 254, 255, 257, 258, 261, 262], "usabl": [0, 251, 261], "function": [0, 3, 8, 11, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 38, 39, 40, 46, 48, 49, 51, 53, 54, 55, 75, 100, 104, 106, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 226, 229, 231, 234, 236, 239, 241, 247, 253, 257, 258, 262], "cost": [0, 2, 26, 254, 258], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 47, 48, 49, 51, 52, 53, 54, 55, 58, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 83, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 107, 108, 110, 111, 113, 114, 115, 116, 117, 121, 122, 123, 124, 125, 128, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 146, 147, 148, 149, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 181, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 220, 223, 226, 227, 229, 231, 234, 236, 239, 241, 242, 243, 244, 245, 247, 251, 253, 254, 255, 257, 258, 259, 261, 262], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 30, 48, 49, 51, 53, 54, 55, 104, 145, 251, 253, 254, 258, 259, 261, 262], "good": [0, 1, 4, 9, 253, 255, 261, 262], "runtim": [0, 3, 48, 51, 53, 54, 55, 258], "perform": [0, 3, 4, 8, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 48, 51, 53, 54, 55, 82, 100, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 132, 133, 142, 144, 145, 158, 168, 174, 216, 220, 250, 253, 254, 255, 257, 258, 262], "ppo": [0, 4, 8, 146, 149, 162, 172, 174, 226, 233, 234, 247, 253, 254, 256, 260], "pendulum": [0, 3, 13, 14, 16, 17, 21, 49, 53, 60, 61, 73, 81, 83, 88, 96, 100, 104, 241, 254, 255, 256, 260, 261, 262], "your": [0, 2, 3, 7, 8, 10, 18, 48, 51, 53, 54, 55, 104, 245, 248, 250, 254, 255, 256, 260, 261], "introduct": [0, 250, 256, 260, 262], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 30, 31, 32, 33, 37, 41, 42, 48, 49, 51, 52, 53, 54, 55, 58, 65, 71, 72, 74, 81, 83, 86, 87, 88, 96, 98, 99, 100, 103, 104, 106, 109, 110, 111, 112, 113, 114, 119, 121, 123, 124, 125, 127, 128, 135, 136, 138, 143, 145, 146, 147, 148, 149, 152, 153, 154, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 181, 184, 185, 186, 187, 188, 189, 190, 197, 206, 207, 216, 217, 218, 220, 222, 224, 227, 228, 229, 237, 241, 245, 248, 250, 251, 252, 255, 256, 257, 258, 260, 262], "pretrain": [0, 256, 260], "task": [0, 9, 54, 55, 58, 86, 103, 171, 253, 254, 255, 256, 258, 260, 261, 262], "specif": [0, 5, 8, 32, 33, 51, 220, 247, 251, 253, 254, 255, 256, 260], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 48, 51, 52, 53, 54, 55, 74, 109, 127, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 161, 162, 163, 165, 172, 174, 175, 176, 177, 179, 216, 222, 226, 227, 228, 229, 231, 234, 241, 243, 244, 250, 251, 254, 256, 259, 260, 261, 262], "multi": [0, 3, 7, 9, 48, 51, 53, 54, 55, 122, 123, 253, 254, 256, 258, 260, 261], "ddpg": [0, 113, 114, 115, 116, 163, 170, 178, 229, 230, 247, 254, 256, 260, 261], "pixel": [0, 3, 7, 25, 70, 72, 78, 80, 83, 86, 89, 98, 103, 113, 129, 130, 203, 226, 231, 234, 236, 239, 253, 256, 259, 260, 261, 262], "dqn": [0, 143, 147, 154, 161, 163, 164, 165, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 231, 232, 247, 256, 260], "api": [0, 3, 5, 86, 103, 250, 251, 258, 261, 262], "packag": [0, 6, 7, 10, 247, 248, 254, 261, 262], "singl": [0, 3, 17, 18, 19, 20, 30, 31, 32, 33, 37, 48, 51, 53, 54, 55, 70, 71, 86, 98, 103, 112, 122, 123, 151, 165, 166, 175, 179, 193, 194, 195, 196, 198, 199, 200, 201, 236, 245, 247, 253, 254, 255, 257, 258, 259], "node": [0, 2, 18, 19, 20, 21, 226, 229, 231, 234, 236, 239, 247], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 83, 111, 117, 118, 119, 121, 125, 128, 131, 132, 133, 134, 135, 136, 142, 143, 146, 149, 150, 154, 161, 162, 166, 172, 174, 247, 251, 253, 254, 255, 258, 261, 262], "helper": [0, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 253, 258], "replai": [0, 8, 13, 14, 16, 30, 31, 32, 33, 37, 41, 42, 43, 44, 46, 74, 87, 96, 163, 164, 165, 171, 175, 177, 179, 217, 220, 237, 241, 247, 251, 258, 259], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 51, 52, 53, 54, 55, 73, 74, 86, 87, 96, 100, 103, 138, 143, 146, 147, 148, 151, 152, 163, 164, 165, 171, 173, 175, 177, 179, 217, 220, 237, 241, 247, 251, 258, 259, 262], "compos": [0, 3, 30, 31, 32, 33, 37, 42, 43, 44, 48, 51, 53, 54, 55, 99, 100, 104, 168, 226, 229, 231, 234, 236, 239, 247, 253, 254, 255, 257, 261, 262], "tensorspec": [0, 3, 15, 23, 24, 25, 26, 27, 28, 29, 35, 36, 48, 52, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 83, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 133, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 247, 258], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 30, 31, 32, 33, 37, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 124, 125, 148, 149, 150, 173, 202, 224, 226, 227, 228, 229, 231, 234, 236, 239, 241, 243, 244, 245, 247, 253, 254, 255, 256, 257, 259, 260], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 49, 51, 53, 54, 55, 82, 88, 99, 100, 104, 106, 111, 124, 125, 216, 224, 226, 227, 228, 229, 231, 234, 236, 239, 241, 243, 244, 245, 247], "gymlikeenv": [0, 247], "envmetadata": [0, 247], "vector": [0, 1, 8, 23, 29, 74, 113, 115, 123, 188, 197, 198, 199, 200, 201, 247, 253, 254, 257, 258, 259, 262], "record": [0, 48, 51, 53, 54, 55, 174, 202, 203, 204, 205, 206, 207, 208, 209, 210, 241, 247, 255], "domain": [0, 2, 8, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 74, 96, 138, 143, 146, 147, 148, 149, 150, 151, 247, 253, 255, 258, 261, 262], "modul": [0, 3, 4, 8, 11, 48, 51, 52, 53, 54, 55, 73, 74, 86, 87, 96, 100, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 170, 173, 175, 176, 177, 178, 179, 182, 185, 186, 187, 188, 189, 220, 225, 230, 232, 233, 235, 238, 241, 247, 250, 251, 253, 255, 257, 258, 259], "hook": [0, 48, 51, 53, 54, 55, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 143, 144, 145, 147, 154, 155, 158, 213, 214, 216, 217, 218, 220, 221, 222, 247, 253], "explor": [0, 1, 105, 127, 138, 142, 143, 144, 145, 146, 147, 148, 149, 161, 216, 227, 228, 241, 247, 253, 255, 258], "planner": [0, 111, 125, 247], "object": [0, 3, 4, 6, 13, 14, 16, 17, 18, 19, 20, 25, 38, 39, 40, 46, 48, 51, 53, 54, 55, 75, 83, 86, 99, 100, 104, 125, 138, 139, 146, 148, 149, 150, 156, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 224, 227, 228, 240, 241, 245, 247, 251, 254, 255, 258, 262], "train": [0, 1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 48, 51, 53, 54, 55, 79, 86, 100, 103, 106, 113, 115, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 185, 220, 222, 241, 247, 251, 259, 262], "valu": [0, 1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 51, 53, 54, 55, 69, 70, 71, 74, 82, 83, 86, 87, 90, 92, 96, 97, 98, 99, 100, 103, 104, 113, 114, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 131, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 211, 213, 214, 215, 216, 217, 220, 226, 229, 234, 236, 239, 241, 247, 251, 254, 257, 258, 261, 262], "sac": [0, 165, 175, 177, 238, 239, 247], "redq": [0, 175, 235, 236, 247], "iql": [0, 171, 247], "td3": [0, 179, 247], "a2c": [0, 161, 225, 247], "dreamer": [0, 68, 119, 167, 168, 169, 247], "trainer": [0, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 253], "checkpoint": [0, 247, 259], "builder": [0, 247, 254, 262], "logger": [0, 203, 205, 206, 207, 208, 209, 210, 214, 216, 220, 241, 245, 247], "_util": [0, 11, 247], "implement_for": [0, 247], "contribut": 0, "thing": [0, 3, 7, 8, 248, 253, 255, 262], "consid": [0, 1, 8, 20, 48, 51, 53, 54, 55, 74, 117, 134, 143, 147, 173, 248, 253, 258], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 48, 49, 51, 53, 54, 55, 65, 73, 74, 82, 83, 86, 87, 92, 96, 99, 100, 103, 104, 109, 111, 123, 124, 125, 126, 135, 146, 148, 149, 151, 158, 162, 172, 173, 174, 184, 202, 203, 217, 245, 248, 251, 253, 254, 255, 258, 259, 262], "debug": [0, 6, 8, 248, 262], "work": [0, 3, 4, 8, 11, 48, 51, 53, 54, 55, 71, 86, 104, 112, 123, 220, 248, 253, 254, 255, 257, 258, 259, 261, 262], "habitat": [0, 62, 248, 259], "lab": [0, 3, 58, 59, 248], "mujoco": [0, 6, 8, 248, 255], "error": [0, 1, 3, 7, 10, 11, 48, 51, 53, 54, 55, 87, 106, 157, 248, 253, 254, 255, 262], "solut": [0, 6, 7, 9, 248, 251, 261], "resourc": [0, 1, 248, 253, 255], "version": [0, 1, 6, 11, 48, 51, 53, 54, 55, 177, 188, 248, 253, 254, 255, 258, 259, 262], "issu": [0, 4, 5, 8, 87, 138, 143, 146, 147, 148, 149, 248, 261], "index": [0, 3, 7, 8, 10, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 43, 47, 74, 110, 253, 257, 261], "search": [0, 254], "page": [0, 7], "somewhat": [1, 250, 262], "equival": [1, 17, 23, 26, 27, 28, 29, 37, 48, 51, 53, 54, 55, 100, 217, 253, 261, 262], "dataload": [1, 45, 254, 255], "except": [1, 3, 13, 14, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 48, 77, 131, 157, 253, 254, 261, 262], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 49, 51, 52, 53, 54, 55, 57, 64, 65, 66, 67, 69, 71, 73, 74, 75, 79, 82, 83, 86, 87, 88, 96, 97, 98, 100, 103, 104, 110, 111, 112, 113, 114, 116, 120, 121, 123, 125, 126, 127, 128, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 151, 152, 154, 158, 161, 162, 165, 168, 171, 172, 173, 174, 175, 177, 178, 184, 185, 186, 187, 188, 192, 193, 194, 198, 199, 201, 211, 216, 217, 218, 226, 229, 231, 234, 236, 239, 241, 245, 248, 250, 251, 253, 254, 255, 257, 258, 259, 261, 262], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 48, 51, 53, 54, 55, 75, 77, 86, 99, 100, 103, 122, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 217, 220, 250, 251, 254, 255, 257, 258, 259, 261, 262], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 30, 31, 32, 33, 37, 83, 86, 103, 106, 145, 163, 165, 175, 177, 179, 211, 217, 220, 222, 223, 224, 241, 251, 258, 259, 261, 262], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 31, 33, 48, 51, 53, 54, 55, 74, 83, 97, 110, 151, 166, 168, 173, 223, 251, 253, 255, 258, 262], "non": [1, 8, 30, 31, 32, 33, 48, 51, 53, 54, 55, 69, 73, 78, 86, 96, 100, 101, 103, 110, 148, 149, 161, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 176, 177, 179, 185, 186, 187, 188, 253, 258, 262], "static": [1, 104, 171, 258], "2": [1, 3, 8, 10, 11, 13, 14, 16, 21, 27, 28, 30, 31, 32, 33, 48, 49, 51, 53, 54, 55, 65, 66, 67, 71, 73, 74, 83, 86, 96, 100, 103, 104, 112, 113, 114, 115, 120, 122, 123, 128, 143, 144, 145, 148, 152, 154, 162, 163, 165, 171, 172, 173, 175, 177, 179, 184, 185, 186, 187, 188, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 211, 250, 253, 254, 255, 257, 258, 259, 261, 262], "like": [1, 4, 7, 30, 31, 32, 33, 48, 51, 53, 54, 55, 62, 98, 106, 175, 250, 253, 255, 258, 259, 262], "being": [1, 3, 7, 8, 17, 18, 20, 48, 51, 53, 54, 55, 74, 75, 88, 100, 109, 145, 162, 172, 173, 174, 203, 217, 222, 243, 244, 245, 253, 254, 255, 258], "": [1, 2, 3, 6, 7, 8, 30, 31, 32, 33, 37, 48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 104, 106, 112, 127, 142, 146, 148, 149, 171, 173, 177, 185, 186, 187, 188, 189, 236, 239, 253, 254, 255, 257, 258, 259, 261, 262], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 48, 51, 52, 53, 54, 55, 73, 78, 86, 92, 96, 100, 101, 103, 148, 149, 150, 173, 251, 253, 255, 262], "two": [1, 4, 8, 10, 45, 48, 51, 53, 54, 55, 83, 86, 103, 116, 149, 172, 181, 216, 220, 226, 234, 236, 239, 250, 253, 254, 255, 257, 258, 261, 262], "main": [1, 2, 5, 20, 21, 49, 149, 220, 250, 253, 257, 262], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 25, 30, 31, 32, 33, 45, 48, 51, 53, 54, 55, 73, 86, 96, 99, 100, 103, 110, 112, 123, 126, 138, 143, 146, 147, 148, 149, 150, 152, 173, 180, 185, 186, 187, 188, 189, 202, 213, 223, 226, 229, 231, 234, 236, 239, 241, 242, 245, 253, 254, 255, 258, 262], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 45, 46, 48, 51, 52, 53, 54, 55, 70, 75, 83, 86, 88, 92, 100, 103, 123, 151, 152, 173, 183, 185, 188, 202, 216, 217, 243, 244, 253, 254, 255, 257, 258, 259, 261, 262], "constructor": [1, 16, 18, 19, 20, 31, 99, 161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 185, 186, 187, 188, 189, 226, 229, 231, 234, 236, 239, 242, 245, 253, 254, 255], "iter": [1, 13, 14, 16, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 51, 53, 54, 55, 76, 83, 93, 104, 112, 123, 138, 143, 146, 147, 148, 149, 150, 151, 152, 156, 173, 183, 216, 219, 220, 226, 234, 236, 239, 250, 251, 253, 255, 258], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 30, 31, 32, 33, 37, 48, 49, 51, 52, 53, 54, 55, 96, 150, 151, 224, 245, 251, 254, 255, 260, 262], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 48, 49, 51, 52, 53, 54, 55, 57, 64, 78, 81, 82, 83, 95, 97, 100, 110, 111, 119, 122, 124, 125, 142, 144, 145, 146, 149, 161, 167, 174, 184, 186, 191, 192, 202, 211, 216, 220, 251, 253, 254, 257, 258, 259, 261], "queri": [1, 13, 14, 16, 17, 48, 51, 53, 54, 55, 86, 99, 104, 151, 258, 261], "defin": [1, 2, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 48, 51, 53, 54, 55, 87, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158, 185, 186, 187, 188, 189, 202, 242, 254, 258, 262], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 26, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 48, 51, 52, 53, 54, 55, 65, 70, 74, 79, 82, 83, 91, 95, 97, 104, 111, 112, 117, 118, 119, 120, 121, 123, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 142, 143, 144, 145, 146, 147, 148, 149, 152, 160, 165, 167, 171, 172, 175, 177, 179, 211, 213, 216, 220, 222, 223, 224, 243, 244, 245, 253, 254, 255, 258, 259, 262], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 45, 48, 51, 53, 54, 55, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 83, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 101, 123, 126, 127, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 186, 187, 188, 217, 253, 255, 258, 262], "deliv": [1, 18, 19, 20, 261], "stack": [1, 7, 8, 18, 20, 54, 55, 104, 150, 151, 202, 211, 254, 257, 258, 261], "user": [1, 2, 5, 8, 37, 48, 51, 53, 54, 55, 100, 122, 242, 250, 251, 254, 258, 261, 262], "reset": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 48, 49, 51, 52, 53, 54, 55, 57, 64, 65, 70, 73, 76, 78, 81, 82, 86, 92, 93, 95, 96, 97, 99, 102, 104, 106, 137, 145, 202, 226, 229, 231, 234, 236, 239, 253, 254, 255, 257, 261], "whenev": [1, 3, 30, 31, 32, 33, 81, 222], "reach": [1, 3, 13, 14, 16, 17, 18, 19, 20, 45, 48, 51, 53, 54, 55, 142, 144, 145, 255, 261, 262], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 48, 49, 51, 52, 53, 54, 55, 57, 64, 65, 66, 67, 83, 88, 91, 93, 95, 96, 99, 100, 104, 110, 111, 125, 163, 164, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 226, 229, 231, 234, 236, 239, 250, 253, 254, 255, 257, 258, 259, 261, 262], "state": [1, 3, 4, 13, 14, 16, 17, 37, 48, 51, 52, 53, 54, 55, 57, 64, 70, 71, 73, 76, 81, 83, 88, 93, 95, 99, 100, 102, 104, 110, 111, 119, 122, 123, 125, 129, 132, 133, 139, 148, 153, 161, 162, 172, 173, 174, 175, 176, 184, 185, 186, 187, 188, 189, 245, 250, 253, 254, 255, 258, 262], "after": [1, 8, 13, 14, 18, 20, 25, 48, 51, 53, 54, 55, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 110, 126, 142, 144, 168, 253, 254, 255, 258, 259, 262], "predefin": [1, 254, 255], "becaus": [1, 3, 4, 7, 99, 116, 122, 138, 143, 146, 147, 148, 149, 253, 254, 257, 258, 262], "potenti": [1, 258], "comput": [1, 3, 4, 8, 13, 16, 26, 48, 51, 53, 54, 55, 83, 100, 102, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 128, 129, 130, 132, 133, 135, 136, 139, 142, 144, 145, 146, 149, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 224, 250, 253, 255, 257, 259], "heavi": [1, 8], "crucial": [1, 171, 253, 254, 255, 258, 262], "configur": [1, 8, 13, 14, 16, 17, 21, 174, 226, 234, 236, 239, 254, 255, 258], "hyperparamet": [1, 161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 258], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 43, 47, 96, 242, 245, 253, 254], "paramet": [1, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 49, 51, 52, 53, 54, 55, 58, 59, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 231, 234, 236, 239, 241, 242, 243, 244, 245, 250, 253, 258, 259, 261], "consider": [1, 3, 8, 253, 254], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 51, 52, 53, 54, 55, 100, 112, 123, 152, 163, 164, 165, 166, 173, 175, 177, 179, 188, 253, 254, 255, 258, 262], "should": [1, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 46, 48, 51, 52, 53, 54, 55, 70, 78, 83, 87, 88, 92, 93, 95, 99, 100, 104, 106, 110, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 146, 148, 149, 158, 165, 170, 172, 173, 174, 175, 178, 184, 185, 186, 187, 188, 189, 203, 215, 216, 217, 220, 241, 243, 244, 245, 251, 253, 254, 255, 257, 258, 259, 261, 262], "occur": [1, 8, 14, 71, 83, 87, 138, 143, 146, 147, 148, 149, 168, 262], "serial": [1, 3, 48, 51, 53, 54, 55, 104], "optim": [1, 8, 48, 51, 53, 54, 55, 111, 125, 126, 127, 173, 174, 177, 215, 220, 226, 234, 241, 250, 251, 255, 258], "parallel": [1, 3, 8, 17, 106, 161, 242, 243, 244, 245, 254, 255], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 241, 244, 247, 255], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 49, 53, 54, 55, 104, 243, 244, 245, 253, 255, 261, 262], "multisyncdatacollector": [1, 18, 19, 20, 244, 247, 255, 261], "split": [1, 3, 13, 14, 16, 17, 18, 19, 20, 37, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 251, 255, 261], "workload": 1, "across": [1, 8, 18, 19, 20, 30, 31, 32, 33, 104, 145, 222, 253, 258], "aggreg": [1, 112, 113, 114, 151], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 30, 31, 32, 33, 37, 45, 48, 49, 51, 53, 54, 55, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 83, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 104, 106, 110, 123, 155, 173, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 222, 254, 258, 259, 261, 262], "final": [1, 3, 4, 142, 144, 145, 150, 185, 216, 253, 254, 255, 258, 262], "multiasyncdatacollector": [1, 17, 18, 19, 20, 243, 247, 253, 254, 255, 261], "sever": [1, 8, 27, 48, 51, 53, 54, 55, 71, 100, 174, 255, 262], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 22, 26, 29, 30, 31, 32, 33, 37, 42, 45, 48, 51, 52, 53, 54, 55, 65, 78, 83, 87, 96, 100, 101, 117, 118, 122, 126, 131, 134, 145, 148, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 211, 214, 217, 218, 219, 220, 222, 243, 244, 245, 251, 253, 254, 255, 257, 259, 261, 262], "gather": [1, 3, 18, 20, 87, 184, 224, 248, 253, 254, 255, 258, 262], "continu": [1, 9, 24, 35, 113, 114, 115, 116, 145, 149, 151, 178, 185, 190, 197, 229, 253, 255, 258, 261, 262], "concomitantli": 1, "network": [1, 4, 8, 48, 51, 53, 54, 55, 112, 113, 114, 115, 116, 118, 119, 120, 123, 127, 129, 130, 132, 133, 139, 140, 141, 148, 163, 164, 165, 166, 170, 171, 173, 175, 176, 177, 178, 179, 182, 185, 186, 187, 188, 189, 226, 229, 234, 240, 241, 250, 251, 257, 258, 262], "impli": [1, 262], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 30, 48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 127, 148, 161, 162, 165, 168, 173, 222, 240, 251, 253, 254, 255, 257, 258, 261], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 37, 48, 51, 53, 54, 55, 83, 93, 100, 101, 104, 106, 123, 250, 251, 253, 254, 255, 258, 259, 261, 262], "slightli": [1, 250, 253, 258, 259, 262], "lag": [1, 13, 14, 16, 17, 254, 255], "therefor": [1, 3, 7, 174, 262], "although": [1, 8, 48, 51, 53, 54, 55, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158, 251, 253, 254], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 30, 31, 32, 33, 37, 38, 39, 48, 51, 52, 53, 54, 55, 65, 70, 86, 92, 95, 97, 99, 101, 103, 142, 144, 146, 148, 149, 160, 161, 162, 165, 166, 170, 171, 172, 174, 175, 176, 177, 178, 179, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 214, 217, 218, 220, 222, 250, 251, 253, 254, 255, 257, 258, 262], "asynchron": [1, 9, 14, 48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 161, 173, 243, 254, 255], "off": [1, 2, 4, 121, 135, 136, 177, 216, 227, 251, 254, 255, 259, 262], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 37, 48, 51, 53, 54, 55, 78, 83, 126, 154, 161, 166, 171, 173, 174, 216, 229, 251, 253, 254, 255, 258, 259, 262], "remot": [1, 18, 19, 20, 54, 55, 262], "rollout": [1, 3, 13, 14, 16, 22, 48, 51, 52, 53, 54, 55, 66, 67, 88, 106, 111, 125, 145, 161, 224, 253, 254, 255, 259, 261], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 93, 175, 185, 186, 187, 188, 189, 250, 253, 254, 255], "synchronis": [1, 49], "from": [1, 2, 3, 4, 5, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 48, 49, 51, 52, 53, 54, 55, 71, 74, 76, 81, 83, 86, 87, 88, 93, 95, 96, 98, 99, 100, 101, 103, 104, 110, 111, 113, 114, 115, 116, 121, 123, 124, 125, 126, 128, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 161, 162, 163, 164, 165, 172, 173, 174, 175, 177, 179, 180, 184, 185, 186, 187, 188, 202, 203, 211, 217, 220, 223, 224, 226, 229, 231, 234, 236, 237, 239, 241, 242, 245, 248, 250, 251, 253, 254, 255, 257, 258, 259, 261, 262], "either": [1, 5, 21, 48, 51, 53, 54, 55, 153, 207, 229, 251, 253, 254, 259, 261, 262], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 253, 254, 261], "update_at_each_batch": [1, 13, 14, 17, 253], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 67, 71, 73, 74, 78, 81, 82, 83, 86, 87, 88, 91, 95, 96, 98, 100, 101, 103, 104, 106, 110, 111, 112, 113, 114, 115, 116, 120, 121, 123, 125, 126, 127, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 157, 161, 162, 165, 167, 168, 169, 172, 173, 174, 175, 176, 177, 181, 185, 186, 187, 188, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 213, 214, 216, 217, 220, 231, 245, 250, 251, 253, 254, 255, 257, 258, 259, 261, 262], "second": [1, 8, 177, 219, 253, 254, 255, 257, 258, 259, 261, 262], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 38, 39, 48, 50, 51, 52, 53, 54, 55, 57, 64, 65, 66, 67, 73, 85, 86, 88, 96, 98, 100, 103, 110, 111, 112, 113, 114, 115, 116, 120, 122, 123, 125, 126, 127, 138, 139, 140, 141, 143, 145, 146, 147, 148, 151, 152, 154, 155, 173, 217, 222, 226, 229, 231, 234, 236, 237, 239, 253, 254, 255, 257, 258, 259, 261], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 48, 51, 53, 54, 55, 78, 99, 128, 139, 140, 141, 148, 153, 154, 161, 162, 163, 164, 166, 172, 173, 174, 176, 184, 185, 186, 187, 188, 220, 229, 231, 236, 239, 251, 253, 254, 255, 257, 258, 262], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 34, 37, 48, 49, 51, 52, 53, 54, 55, 59, 70, 83, 96, 99, 104, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 128, 129, 130, 132, 133, 142, 144, 145, 146, 149, 150, 151, 158, 203, 207, 216, 224, 226, 227, 228, 229, 231, 234, 236, 239, 241, 243, 244, 250, 251, 253, 255, 258, 262], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 23, 32, 33, 34, 38, 39, 48, 51, 52, 53, 54, 55, 57, 64, 65, 66, 67, 73, 86, 88, 96, 100, 103, 110, 111, 125, 127, 138, 139, 140, 141, 143, 146, 148, 151, 152, 173, 217, 226, 229, 231, 234, 236, 239, 253, 254, 255, 257, 258, 259, 261, 262], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 37, 88, 116, 123, 128, 138, 142, 143, 144, 147, 148, 152, 217, 222, 248, 250, 253, 254, 255, 258, 261, 262], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 37, 41, 43, 46, 47, 48, 49, 51, 53, 54, 55, 65, 74, 82, 83, 86, 94, 100, 101, 103, 104, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 131, 132, 133, 138, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 158, 160, 161, 162, 163, 164, 165, 172, 174, 175, 176, 179, 191, 192, 213, 215, 216, 220, 224, 226, 234, 236, 239, 245, 248, 250, 251, 253, 254, 255, 257, 258, 259, 262], "cuda": [1, 3, 7, 48, 51, 53, 54, 55, 73, 85, 86, 96, 100, 103, 148, 173, 212, 253, 254, 255, 259, 262], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 26, 54, 55, 71, 74, 92, 99, 104, 122, 126, 127, 138, 143, 146, 147, 148, 149, 165, 175, 179, 236, 245, 251, 253, 254, 255, 258, 261], "infer": [1, 54, 55, 104, 126, 253, 255], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 48, 51, 52, 53, 54, 55, 58, 59, 82, 83, 100, 104, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 150, 151, 158, 173, 216, 243, 244, 245, 248, 251, 253, 254, 255, 257, 258, 259, 261], "dispatch": [1, 18, 19, 20], "avail": [1, 4, 6, 45, 146, 149, 154, 155, 243, 244, 253, 254, 255, 262], "speed": [1, 2, 4, 8, 26, 250, 253, 254, 255, 258], "up": [1, 2, 3, 8, 9, 26, 37, 248, 250, 253, 254, 255, 258, 262], "avoid": [1, 48, 51, 53, 54, 55, 100, 104, 138, 143, 147, 148, 152, 223, 255], "oom": 1, "choic": [1, 2, 37, 128, 250], "size": [1, 2, 3, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 45, 46, 48, 50, 51, 52, 53, 54, 55, 57, 64, 65, 66, 67, 71, 78, 86, 88, 94, 96, 98, 100, 101, 103, 110, 111, 112, 117, 122, 123, 125, 128, 131, 132, 133, 134, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 173, 184, 185, 186, 187, 188, 189, 203, 211, 217, 226, 229, 231, 234, 236, 239, 253, 254, 255, 257, 258, 259, 261, 262], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 25, 30, 31, 32, 33, 48, 49, 50, 51, 53, 54, 55, 75, 88, 99, 101, 104, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 126, 128, 129, 130, 132, 133, 138, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 157, 158, 173, 185, 186, 187, 188, 189, 217, 243, 244, 245, 253, 254, 255, 257, 258, 262], "ie": [1, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 41, 65, 78, 101, 250, 254, 255], "store": [1, 3, 8, 13, 14, 16, 17, 20, 25, 32, 33, 38, 39, 40, 41, 48, 51, 53, 54, 55, 104, 111, 122, 125, 226, 229, 231, 234, 236, 239, 247, 251, 253, 255, 259, 262], "while": [1, 3, 7, 8, 48, 51, 53, 54, 55, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158, 171, 172, 173, 174, 253, 255, 258, 259, 261], "wait": [1, 20, 21, 258], "also": [1, 2, 3, 8, 11, 32, 48, 51, 53, 54, 55, 74, 83, 88, 92, 93, 96, 100, 133, 150, 151, 161, 163, 164, 173, 185, 191, 192, 251, 253, 254, 255, 257, 258, 262], "impact": [1, 254], "memori": [1, 2, 3, 8, 26, 38, 48, 49, 51, 53, 54, 55, 73, 86, 96, 100, 103, 104, 148, 173, 245, 251, 253, 254, 255, 257, 258, 259, 261, 262], "manag": [1, 8, 182, 183, 185, 186, 187, 188, 216, 253], "kei": [1, 3, 7, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 51, 53, 54, 55, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 86, 87, 88, 92, 93, 95, 96, 97, 99, 100, 102, 103, 104, 110, 111, 124, 125, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 184, 185, 186, 187, 188, 189, 203, 214, 215, 216, 218, 219, 220, 224, 226, 234, 236, 239, 250, 251, 253, 254, 255, 257, 258, 261, 262], "control": [1, 3, 5, 8, 16, 58, 59, 74, 110, 113, 114, 115, 116, 124, 125, 133, 145, 148, 149, 150, 161, 162, 172, 174, 178, 185, 190, 197, 229, 251, 253, 254, 255, 258], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 22, 25, 26, 29, 32, 33, 37, 45, 48, 51, 53, 54, 55, 70, 71, 79, 82, 83, 86, 87, 95, 96, 97, 99, 100, 106, 121, 135, 136, 138, 139, 140, 141, 143, 146, 147, 148, 149, 151, 152, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 181, 185, 211, 215, 226, 229, 231, 234, 236, 239, 250, 251, 253, 254, 255, 257, 258, 259, 262], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 253, 254, 261], "dure": [1, 7, 13, 14, 16, 17, 18, 19, 20, 37, 48, 51, 53, 54, 55, 79, 100, 216, 220, 250, 253, 254, 255, 258, 262], "A": [1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 62, 74, 79, 86, 87, 88, 96, 99, 100, 102, 104, 105, 106, 110, 111, 112, 123, 125, 127, 128, 142, 144, 146, 149, 151, 154, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 185, 186, 187, 188, 189, 204, 205, 208, 213, 220, 222, 226, 231, 234, 236, 239, 241, 250, 254, 255, 258, 262], "heurist": [1, 4, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 145, 253, 262], "usual": [1, 3, 4, 6, 7, 8, 37, 48, 51, 53, 54, 55, 127, 185, 186, 187, 188, 189, 202, 226, 234, 236, 239, 248, 251, 253, 255, 262], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 37, 45, 48, 49, 51, 53, 54, 55, 74, 79, 82, 83, 99, 100, 104, 112, 123, 145, 253, 254, 255, 257, 258, 259, 262], "storag": [1, 2, 8, 30, 31, 32, 33, 37, 38, 39, 40, 45, 48, 50, 51, 53, 54, 55, 75, 247, 251, 253, 254, 255, 259], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 37, 38, 39, 41, 48, 51, 53, 54, 55, 58, 65, 70, 71, 74, 78, 82, 83, 86, 87, 91, 95, 96, 97, 98, 100, 101, 103, 104, 106, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 142, 143, 144, 145, 146, 147, 148, 149, 152, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 211, 213, 214, 216, 217, 218, 220, 226, 229, 234, 236, 239, 241, 245, 251, 253, 254, 255, 259, 261, 262], "behaviour": [1, 3, 51, 71, 83, 87, 110, 121, 135, 136, 216, 254, 258], "besid": 1, "those": [1, 5, 7, 25, 54, 55, 83, 96, 146, 149, 150, 151, 222, 243, 244, 253, 254, 258, 262], "choos": [1, 250, 253, 254, 255], "follow": [1, 2, 3, 6, 7, 8, 37, 48, 51, 52, 53, 54, 55, 65, 86, 112, 123, 160, 162, 172, 176, 220, 236, 239, 250, 251, 253, 254, 255, 257, 258, 261, 262], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 223, 253, 255, 261], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 51, 70, 79, 142, 144, 145, 202, 203, 213, 216, 220, 223, 224, 253, 254, 255, 261, 262], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 30, 31, 32, 33, 37, 38, 39, 40, 42, 45, 46, 48, 51, 53, 54, 55, 65, 70, 73, 74, 75, 78, 81, 83, 85, 86, 92, 95, 96, 100, 103, 104, 106, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 125, 126, 128, 129, 130, 132, 133, 142, 144, 145, 148, 149, 151, 158, 173, 184, 185, 186, 187, 188, 202, 216, 251, 253, 254, 255, 258, 261, 262], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 223, 253, 254, 255, 261], "each": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 22, 27, 28, 32, 48, 49, 51, 53, 54, 55, 86, 92, 95, 96, 97, 103, 104, 142, 151, 154, 155, 193, 194, 195, 196, 198, 199, 200, 201, 216, 217, 243, 244, 253, 254, 255, 258, 259, 261, 262], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 223, 253, 254], "random": [1, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 42, 48, 51, 52, 53, 54, 55, 74, 82, 83, 96, 106, 146, 148, 149, 175, 216, 224, 253, 254, 255, 258, 259, 261, 262], "rand_step": [1, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 81, 104, 258, 261, 262], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 253], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 37, 253, 254, 255], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 22, 32, 37, 41, 48, 51, 53, 54, 55, 87, 99, 111, 125, 145, 174, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 247, 250, 254, 255, 258, 261, 262], "pad": [1, 22, 37, 112, 113, 114, 122, 217, 253], "along": [1, 22, 37, 70, 71, 83, 87, 92, 98, 123, 127, 146, 148, 149, 254, 258], "mask": [1, 4, 13, 14, 16, 22, 87, 217, 253, 254, 262], "point": [1, 21, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 41, 43, 47, 48, 51, 53, 54, 55, 70, 73, 86, 96, 98, 100, 103, 124, 148, 160, 166, 173, 220, 248, 254, 255, 257, 258, 262], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 51, 87, 142, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 251], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 25, 32, 48, 51, 53, 54, 55, 79, 87, 149, 154, 155, 181, 185, 217, 253, 254, 255], "valid": [1, 22, 87, 100, 112, 123, 142, 144, 145, 172, 217, 251, 262], "exploration_mod": [1, 13, 14, 16, 18, 19, 20, 216, 247, 253, 254], "strategi": [1, 16, 251, 253, 254], "reset_when_don": [1, 13, 14, 16, 18, 19, 20], "These": [1, 2, 7, 48, 51, 53, 54, 55, 86, 103, 250, 253, 255, 258, 262], "tool": [1, 5, 258, 262], "backend": [1, 3, 7, 11, 18, 19, 21, 251, 253, 255, 258], "gloo": [1, 18, 19, 21], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 20, 21, 247], "rpc": [1, 20, 21], "rpcdatacollector": [1, 21, 247], "launcher": [1, 18, 19, 20, 21], "rai": 1, "submitit": [1, 18, 19, 20, 21], "torch": [1, 3, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 45, 48, 49, 51, 52, 53, 54, 55, 57, 64, 65, 66, 67, 71, 73, 74, 75, 83, 86, 88, 91, 96, 98, 100, 103, 104, 110, 111, 112, 117, 119, 121, 122, 123, 125, 126, 127, 128, 131, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 159, 173, 185, 186, 187, 188, 211, 218, 219, 226, 229, 231, 234, 236, 239, 241, 250, 251, 253, 254, 255, 257, 258, 259, 261, 262], "multiprocess": [1, 18, 19, 20, 49, 50, 104, 254, 255, 258, 262], "synchron": [1, 13, 19, 53, 243, 244, 254, 255], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 48, 51, 53, 54, 55, 100, 104, 107, 109, 117, 121, 131, 134, 135, 136, 146, 149, 216, 253, 254, 261, 262], "exampl": [1, 2, 3, 4, 9, 10, 11, 13, 14, 16, 17, 18, 21, 23, 25, 26, 27, 28, 30, 31, 32, 33, 37, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 71, 73, 74, 75, 81, 83, 86, 88, 96, 98, 100, 103, 104, 110, 111, 112, 122, 123, 125, 128, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 157, 161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 180, 185, 186, 187, 188, 211, 212, 213, 214, 215, 217, 218, 219, 222, 226, 229, 231, 234, 236, 239, 241, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262], "folder": 1, "sub": [1, 2, 3, 13, 14, 18, 19, 20, 48, 51, 53, 54, 55, 87, 150, 151, 211, 220, 254, 255, 257, 261, 262], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 48, 49, 51, 52, 53, 54, 55, 73, 77, 83, 86, 92, 96, 97, 100, 103, 104, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 148, 149, 151, 158, 168, 173, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 220, 223, 243, 244, 245, 248, 250, 251, 253, 254, 255, 256, 257, 258, 261, 262], "variou": [1, 3, 13, 14, 16, 17, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 243, 244, 254, 255, 262], "machin": [1, 7, 18, 19, 20], "One": [1, 2, 4, 8, 28, 29, 131, 142, 144, 148, 181, 207, 253, 254, 262], "wonder": 1, "why": [1, 3, 253, 258, 262], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 53, 55, 242, 247, 253, 254, 255, 257, 261, 262], "instead": [1, 4, 7, 8, 11, 26, 48, 51, 53, 54, 55, 78, 96, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158, 189, 245, 253, 258, 262], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 37, 48, 51, 53, 54, 55, 73, 86, 93, 96, 99, 100, 103, 121, 123, 133, 135, 136, 148, 151, 160, 173, 222, 243, 244, 245, 250, 253, 254, 255, 257, 258, 259, 262], "gener": [1, 3, 7, 8, 16, 30, 31, 44, 45, 49, 52, 83, 88, 92, 93, 99, 117, 131, 138, 146, 149, 152, 153, 175, 180, 185, 190, 197, 206, 220, 253, 254, 255, 256, 257, 258, 259, 261, 262], "lower": [1, 2, 17, 24, 104, 132, 133, 255, 258], "io": [1, 53], "footprint": [1, 2], "need": [1, 2, 4, 7, 8, 10, 18, 19, 20, 46, 48, 51, 53, 54, 55, 78, 86, 88, 100, 103, 104, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 126, 128, 129, 130, 132, 133, 142, 144, 145, 148, 158, 160, 165, 175, 176, 177, 179, 184, 189, 203, 220, 245, 250, 253, 254, 255, 258, 261, 262], "commun": [1, 2, 3, 248, 255, 262], "yet": [1, 259], "spec": [1, 2, 3, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 48, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 83, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 106, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 226, 229, 231, 234, 236, 239, 253, 254, 255, 257, 261], "plai": [1, 70, 254, 255, 262], "role": [1, 254, 262], "opposit": 1, "direct": [1, 48, 51, 53, 54, 55, 173, 254], "sinc": [1, 3, 4, 5, 7, 30, 31, 32, 33, 48, 51, 53, 54, 55, 110, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158, 253, 254, 255, 258, 259, 261, 262], "faster": [1, 4, 53], "share": [1, 2, 3, 6, 8, 38, 39, 40, 46, 49, 54, 55, 104, 139, 140, 141, 245, 255, 257, 261, 262], "among": 1, "achiev": [1, 3, 4, 48, 51, 53, 54, 55, 217, 251, 253, 255, 258, 262], "via": [1, 3, 4, 7, 8, 30, 31, 32, 33, 37, 54, 86, 99, 103, 250, 251, 254, 255, 262], "capabl": [1, 7, 251, 253, 257, 259, 262], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 48, 216, 250, 254, 255, 262], "gpu": [1, 7, 8, 48, 51, 53, 54, 55, 173, 253, 255, 262], "nativ": [1, 7, 9, 48, 51, 53, 54, 55, 70], "driver": [1, 7], "practic": [1, 4, 5, 8, 121, 135, 136, 160, 248, 253, 254, 255, 259, 262], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 32, 41, 83, 104, 111, 117, 119, 122, 125, 134, 142, 146, 149, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 250, 253, 254, 255, 258, 261, 262], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 30, 31, 32, 33, 48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 138, 143, 146, 147, 148, 149, 152, 173, 180, 185, 186, 187, 188, 189, 242, 253, 254, 255, 262], "build": [1, 3, 7, 22, 25, 48, 51, 53, 54, 55, 104, 111, 125, 146, 149, 220, 225, 230, 232, 233, 235, 237, 238, 240, 251, 255, 258, 259, 261, 262], "central": [2, 253, 254], "part": [2, 4, 8, 48, 51, 53, 54, 55, 83, 92, 152, 173, 211, 245, 253, 254, 255, 258, 262], "algorithm": [2, 8, 9, 13, 14, 52, 79, 161, 174, 175, 176, 177, 211, 226, 227, 234, 250, 251, 253, 254, 255, 259, 261], "implement": [2, 3, 9, 11, 16, 46, 48, 51, 53, 54, 55, 88, 99, 104, 121, 134, 135, 136, 161, 171, 174, 177, 226, 234, 236, 239, 251, 253, 254, 255, 258, 261], "wide": [2, 3, 5, 253], "we": [2, 3, 5, 7, 9, 25, 33, 37, 45, 48, 49, 51, 53, 54, 55, 86, 88, 96, 104, 111, 122, 248, 250, 251, 253, 254, 255, 257, 258, 259, 261, 262], "give": [2, 7, 32, 52, 248, 250, 253, 254, 258, 259, 261], "abil": [2, 258], "veri": [2, 3, 254, 258, 261, 262], "influenti": 2, "sampl": [2, 4, 8, 9, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 48, 51, 52, 53, 54, 55, 65, 87, 107, 109, 111, 117, 121, 125, 131, 132, 135, 136, 138, 142, 143, 144, 145, 146, 147, 148, 149, 161, 162, 163, 164, 172, 174, 179, 211, 217, 220, 223, 254, 255, 259, 261, 262], "latenc": 2, "especi": [2, 3, 7, 8, 71], "larger": [2, 4, 171], "volum": 2, "lazymemmapstorag": [2, 247, 253, 254, 259], "advis": [2, 253, 262], "due": [2, 3, 5, 259, 262], "serialis": 2, "memmaptensor": [2, 259], "well": [2, 3, 8, 17, 30, 31, 32, 33, 46, 48, 51, 53, 54, 55, 132, 133, 173, 189, 253, 254, 259, 261, 262], "specifi": [2, 11, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 48, 51, 53, 54, 55, 92, 94, 101, 111, 148, 149, 173, 253, 254, 255], "file": [2, 6, 7, 8, 202, 251, 253, 254, 260, 261], "locat": [2, 7, 51, 83, 91, 121, 128, 135, 136, 254, 255], "improv": [2, 4, 79, 161, 250], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 30, 31, 32, 33, 247], "were": [2, 7, 54, 55, 253, 255], "found": [2, 6, 7, 10, 25, 48, 51, 53, 54, 55, 104, 146, 149, 172, 174, 253, 254, 261], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 30, 41, 53, 70, 86, 113, 114, 115, 116, 119, 120, 125, 127, 129, 130, 132, 133, 145, 154, 161, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 185, 190, 197, 226, 229, 234, 236, 239, 253, 254, 259, 261], "com": [2, 5, 6, 7, 10, 18, 19, 20, 259, 261], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 30, 31, 32, 33, 34, 48, 51, 52, 53, 54, 55, 73, 86, 88, 96, 99, 100, 103, 104, 112, 123, 127, 142, 144, 146, 148, 149, 156, 161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 180, 226, 229, 231, 234, 236, 239, 243, 254, 255, 258, 262], "1x": 2, "lazytensorstorag": [2, 32, 33, 247, 255], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 51, 53, 54, 55, 65, 73, 74, 83, 86, 88, 96, 98, 100, 103, 111, 112, 113, 114, 120, 122, 123, 125, 128, 138, 139, 140, 141, 143, 146, 148, 151, 152, 154, 157, 168, 173, 185, 186, 187, 188, 193, 194, 195, 196, 198, 199, 200, 201, 203, 219, 231, 251, 253, 254, 255, 258, 259, 261, 262], "44x": 2, "too": [2, 7, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 121, 135, 136, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 185, 186, 187, 188, 253, 254, 255, 258, 262], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 65, 87, 112, 138, 142, 143, 147, 148, 149, 152, 211, 255, 262], "pai": [2, 8, 254], "attent": [2, 8, 254], "alwai": [2, 20, 48, 51, 53, 54, 55, 82, 166, 250, 254, 255, 258], "lead": [2, 3, 4, 8, 10, 11, 25, 30, 31, 32, 33, 37, 45, 96, 121, 135, 136, 258, 261], "dimens": [2, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 70, 71, 78, 83, 87, 94, 98, 101, 112, 123, 126, 127, 134, 135, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 245, 254, 255, 258], "other": [2, 3, 4, 7, 8, 21, 30, 31, 32, 33, 37, 38, 39, 40, 45, 46, 48, 51, 52, 53, 54, 55, 74, 93, 104, 127, 128, 149, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 217, 226, 234, 236, 239, 243, 244, 251, 253, 254, 255, 258, 259, 261, 262], "word": [2, 37, 258, 262], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 30, 31, 32, 33, 48, 49, 51, 53, 54, 55, 86, 92, 99, 100, 104, 110, 112, 113, 114, 115, 116, 120, 123, 124, 149, 164, 166, 175, 203, 217, 224, 227, 228, 241, 243, 244, 253, 254, 255, 258, 259, 261, 262], "1m": [2, 223, 253, 255, 259], "multidimension": [2, 32, 41], "doe": [2, 3, 18, 30, 32, 37, 41, 46, 126, 150, 151, 161, 162, 166, 172, 174, 184, 220, 251, 253, 254, 255, 258, 262], "desir": [2, 3, 48, 51, 53, 54, 55, 73, 83, 86, 87, 96, 100, 103, 109, 112, 123, 138, 143, 146, 147, 148, 149, 173, 253, 258], "diversifi": 2, "make": [2, 4, 7, 37, 46, 48, 51, 53, 54, 55, 61, 64, 83, 86, 87, 106, 126, 149, 173, 174, 185, 186, 187, 188, 217, 228, 245, 250, 253, 254, 255, 257, 258, 259, 261, 262], "more": [2, 3, 4, 6, 8, 11, 13, 14, 16, 17, 18, 19, 20, 30, 31, 32, 33, 37, 48, 51, 53, 54, 55, 105, 123, 126, 128, 138, 142, 143, 144, 147, 148, 152, 154, 161, 166, 174, 185, 190, 197, 215, 229, 248, 250, 251, 253, 254, 255, 257, 258, 259, 262], "To": [2, 3, 4, 6, 7, 8, 18, 19, 20, 30, 31, 32, 33, 37, 48, 51, 53, 54, 55, 104, 139, 140, 141, 145, 220, 250, 253, 254, 255, 258, 259, 261, 262], "do": [2, 3, 4, 7, 51, 82, 87, 110, 126, 140, 251, 253, 254, 255, 257, 258, 261, 262], "custom": [2, 3, 5, 48, 51, 53, 54, 55, 166, 245, 254, 255], "name": [2, 6, 7, 11, 37, 48, 51, 53, 54, 55, 58, 74, 76, 88, 92, 93, 100, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 205, 207, 208, 209, 210, 214, 215, 226, 229, 231, 234, 236, 239, 251, 253, 254, 255, 258, 262], "randomcroptensordict": 2, "here": [2, 3, 4, 7, 8, 9, 10, 250, 253, 254, 255, 258, 261, 262], "how": [2, 3, 18, 19, 20, 30, 32, 41, 48, 51, 53, 54, 55, 161, 162, 170, 172, 174, 220, 248, 253, 254, 255, 257, 258, 259, 261, 262], "wrapper": [2, 3, 11, 17, 32, 33, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 128, 142, 144, 145, 149, 153, 185, 208, 209, 210, 245, 253, 255, 259, 262], "around": [2, 5, 7, 17, 32, 33, 52, 149, 185, 262], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 106, 171, 251, 259, 261], "present": [2, 3, 30, 37, 41, 45, 48, 51, 53, 54, 55, 76, 92, 93, 110, 113, 114, 115, 116, 120, 127, 145, 148, 149, 150, 151, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 185, 186, 187, 188, 189, 245, 251, 253, 257, 261], "replaybuff": [2, 32, 33, 47, 87, 237, 241, 247, 255, 259, 261], "sampler": [2, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 45, 46, 87, 247, 253, 255], "By": [2, 3, 29, 51, 149, 216, 245, 253, 254, 259, 262], "map": [2, 3, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 48, 51, 53, 54, 55, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 83, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 101, 104, 128, 138, 139, 140, 141, 143, 146, 147, 148, 149, 151, 152, 153, 154, 247, 250, 253, 254, 255, 259], "tensor": [2, 3, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 47, 48, 49, 51, 52, 53, 54, 55, 57, 64, 65, 66, 67, 70, 71, 73, 74, 78, 81, 83, 86, 87, 88, 91, 96, 97, 98, 99, 100, 101, 103, 104, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 131, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 158, 159, 163, 164, 168, 169, 173, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 226, 229, 231, 234, 236, 239, 251, 253, 254, 255, 257, 258, 259, 261, 262], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 29, 48, 51, 53, 54, 55, 88, 96, 110, 123, 181, 251, 253, 255, 258, 262], "promptli": 2, "virtual": 2, "instal": [2, 5, 10, 18, 19, 20, 37, 220, 248, 255, 262], "respons": [2, 3, 8, 220, 262], "d4rl": [2, 37], "clone": [2, 4, 8, 139, 140, 141, 148, 171, 226, 234, 236, 239, 247, 253, 254, 258, 261], "repositori": [2, 7], "latest": [2, 10, 53, 217, 255, 258, 261], "wheel": [2, 255], "publish": 2, "pypi": [2, 261], "openml": [2, 65], "scikit": 2, "panda": 2, "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 123, 148, 150, 151, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 251, 253, 254, 255, 258, 262], "parent": [2, 3, 34, 48, 71, 78, 79, 83, 86, 96, 99, 101, 139, 173, 174, 189, 258, 261, 262], "subclass": [2, 3, 48, 51, 53, 54, 55, 99, 106, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 143, 144, 145, 147, 148, 149, 150, 158, 174, 253, 258], "basic": [2, 52, 255, 262], "properti": [2, 3, 48, 51, 52, 53, 54, 55, 100, 117, 121, 126, 131, 134, 135, 136, 173, 258], "observ": [2, 3, 8, 13, 14, 16, 34, 37, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80, 81, 83, 84, 88, 89, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 110, 113, 114, 115, 116, 122, 129, 130, 132, 138, 139, 140, 141, 143, 144, 145, 146, 147, 152, 153, 154, 155, 164, 168, 185, 186, 187, 188, 189, 203, 226, 229, 231, 234, 236, 239, 241, 251, 254, 255, 257, 258, 261, 262], "action": [2, 3, 8, 9, 13, 14, 16, 26, 29, 34, 48, 51, 52, 53, 54, 55, 57, 64, 66, 67, 74, 75, 79, 82, 88, 93, 100, 110, 111, 113, 114, 115, 116, 118, 119, 123, 124, 125, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 154, 155, 164, 165, 173, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 226, 229, 231, 234, 236, 239, 241, 245, 250, 251, 253, 254, 255, 257, 259, 261, 262], "shape": [2, 3, 13, 14, 16, 21, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 48, 51, 53, 54, 55, 65, 71, 83, 88, 96, 98, 105, 106, 110, 117, 118, 123, 126, 128, 131, 134, 138, 139, 140, 141, 143, 146, 148, 151, 152, 181, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 211, 217, 220, 241, 253, 254, 255, 257, 259, 261, 262], "dtype": [2, 3, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 41, 48, 51, 52, 53, 54, 55, 57, 64, 65, 66, 67, 73, 74, 75, 83, 86, 88, 96, 98, 100, 103, 106, 110, 111, 125, 126, 127, 138, 139, 140, 141, 143, 145, 146, 147, 148, 151, 152, 154, 155, 173, 185, 186, 187, 188, 226, 229, 231, 234, 236, 239, 254, 255, 257, 258, 259, 261, 262], "import": [2, 3, 4, 6, 7, 10, 13, 14, 16, 21, 30, 31, 32, 33, 37, 41, 49, 51, 52, 81, 83, 86, 88, 96, 103, 104, 110, 111, 123, 125, 128, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 162, 185, 186, 187, 188, 213, 216, 226, 229, 231, 234, 236, 239, 241, 250, 254, 255, 257, 258, 259, 261, 262], "match": [2, 3, 6, 8, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 48, 49, 51, 53, 54, 55, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 83, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 112, 117, 123, 134, 138, 143, 146, 147, 148, 149, 152, 165, 172, 175, 177, 217, 222, 254, 255, 257, 258, 261, 262], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 48, 51, 52, 53, 54, 55, 65, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 86, 87, 88, 92, 93, 95, 96, 97, 99, 101, 102, 103, 104, 106, 110, 112, 113, 114, 115, 116, 122, 123, 126, 127, 132, 133, 138, 143, 145, 146, 147, 148, 149, 150, 151, 152, 160, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 214, 218, 223, 241, 250, 251, 253, 254, 255, 258, 261, 262], "output": [2, 3, 4, 13, 14, 16, 17, 30, 31, 32, 33, 37, 48, 51, 52, 53, 54, 55, 65, 70, 83, 86, 88, 97, 99, 103, 106, 112, 113, 114, 118, 119, 122, 123, 128, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 185, 189, 203, 211, 250, 253, 254, 255, 257, 258, 259, 261, 262], "send": [2, 3, 8, 254, 261], "receiv": [2, 3, 48, 51, 53, 54, 55, 99, 123, 250, 254, 255, 257, 258], "spawn": [2, 3, 4, 18, 21, 53], "check": [2, 3, 4, 5, 6, 7, 11, 18, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 48, 49, 51, 52, 53, 54, 55, 71, 77, 87, 106, 138, 143, 146, 147, 148, 149, 156, 250, 253, 254, 255, 257, 258, 259, 262], "check_env_spec": [2, 3, 247, 255, 258], "method": [2, 3, 4, 13, 14, 16, 17, 30, 31, 32, 33, 37, 38, 39, 40, 41, 46, 48, 51, 53, 54, 55, 70, 73, 78, 83, 86, 88, 89, 96, 99, 100, 103, 111, 122, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 152, 156, 161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 189, 202, 242, 250, 251, 252, 253, 255, 258, 262], "saniti": [2, 3, 7, 106, 254, 255], "offer": [3, 7, 258, 262], "handl": [3, 48, 51, 53, 54, 55, 104, 123, 220, 243, 244, 253, 255], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 48, 51, 53, 54, 55, 70, 74, 83, 88, 100, 101, 123, 125, 154, 155, 171, 173, 174, 181, 185, 186, 187, 191, 192, 216, 220, 222, 243, 244, 250, 251, 253, 254, 255, 257, 258, 259, 262], "dm": [3, 253, 262], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 30, 31, 32, 33, 44, 47, 52, 53, 96, 102, 139, 167, 220, 226, 234, 236, 239, 250, 251, 253, 256, 258, 260, 262], "goal": [3, 4, 253, 254, 255, 258], "abl": [3, 253, 255, 257, 258, 261], "experi": [3, 30, 31, 32, 33, 37, 41, 106, 205, 206, 207, 208, 209, 210, 248, 254, 255], "even": [3, 4, 8, 14, 18, 20, 38, 39, 40, 46, 49, 253, 255, 258, 262], "simul": [3, 5, 7, 8, 68, 111, 125, 253, 255], "some": [3, 4, 7, 8, 9, 21, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 48, 51, 53, 54, 55, 86, 106, 113, 149, 150, 151, 211, 223, 251, 253, 254, 255, 258, 261, 262], "box": [3, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36], "under": [3, 4, 37, 48, 51, 53, 54, 55, 138, 143, 146, 147, 148, 149, 185, 186, 187, 188, 189, 250, 253, 258, 262], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 21, 49, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 81, 83, 88, 96, 104, 226, 229, 231, 234, 236, 239, 241, 253, 254, 255, 257, 259, 261, 262], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 48, 51, 52, 53, 54, 55, 73, 74, 86, 96, 100, 103, 111, 112, 113, 114, 115, 116, 118, 119, 120, 123, 125, 128, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 164, 166, 173, 185, 186, 187, 188, 236, 239, 241, 250, 253, 254, 255, 257, 258, 259, 261], "typic": [3, 4, 8, 48, 51, 53, 54, 55, 173, 177, 250, 251, 255, 258], "organis": [3, 258], "arbitrari": [3, 29, 54, 55, 253, 254, 258], "nest": [3, 25, 48, 51, 53, 54, 55, 185, 186, 187, 188, 189, 251, 254, 255, 258, 261], "structur": [3, 7, 30, 31, 32, 33, 145, 185, 186, 187, 188, 189, 250, 254, 255, 258, 259], "attribut": [3, 4, 48, 51, 53, 54, 55, 86, 95, 149, 173, 258], "batch_siz": [3, 8, 13, 14, 16, 25, 30, 31, 32, 33, 37, 42, 48, 50, 52, 57, 64, 65, 66, 67, 70, 88, 96, 110, 111, 125, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 211, 217, 226, 229, 231, 234, 236, 239, 253, 254, 255, 257, 258, 259, 261, 262], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 87, 139, 140, 141, 153, 253, 255], "expect": [3, 4, 7, 25, 34, 45, 48, 51, 52, 53, 54, 55, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 83, 86, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 101, 106, 138, 143, 145, 146, 147, 148, 151, 152, 161, 162, 172, 174, 176, 224, 248, 250, 251, 253, 255, 258, 262], "live": [3, 12, 13, 14, 16, 17, 19, 20, 30, 31, 32, 33, 37, 48, 51, 52, 53, 54, 55, 173], "actual": [3, 4, 7, 17, 48, 51, 53, 54, 55, 223, 250, 253, 254, 255, 258], "just": [3, 4, 211, 251, 253, 254, 255, 258, 261, 262], "retriev": [3, 30, 31, 32, 33, 37, 48, 51, 53, 54, 55, 71, 83, 110, 111, 125, 146, 149, 161, 162, 172, 174, 185, 186, 187, 188, 226, 229, 231, 234, 236, 239, 245, 251, 254, 255, 258, 262], "care": [3, 8, 48, 51, 53, 54, 55, 99, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158, 253, 255, 258], "see": [3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 105, 112, 121, 123, 126, 135, 136, 148, 149, 173, 217, 253, 254, 255, 258, 262], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 112, 121, 123, 135, 136, 148, 173, 217, 254, 255, 258], "parametr": [3, 127, 149, 171, 177, 253, 255], "hardwar": 3, "input_spec": [3, 48, 52, 73, 74, 75, 83, 88, 93, 95, 99, 100, 101, 111, 125, 253, 255, 258, 262], "compositespec": [3, 48, 50, 51, 52, 53, 54, 55, 74, 88, 95, 96, 99, 111, 125, 138, 142, 144, 146, 151, 247, 253, 255, 258, 262], "output_spec": [3, 88, 99, 100, 258], "reward": [3, 13, 14, 16, 34, 48, 51, 52, 53, 54, 55, 57, 64, 65, 66, 67, 69, 73, 75, 88, 90, 91, 92, 93, 99, 100, 101, 102, 103, 104, 110, 111, 125, 153, 163, 164, 168, 173, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 214, 216, 218, 245, 250, 251, 253, 254, 255, 257, 258, 259, 261, 262], "observation_spec": [3, 48, 52, 70, 71, 72, 73, 75, 76, 78, 80, 81, 83, 86, 89, 92, 93, 95, 96, 97, 98, 99, 100, 101, 111, 125, 224, 241, 253, 255, 257, 258, 262], "pair": [3, 37, 48, 51, 53, 54, 55, 96, 139, 146, 149, 173, 250, 253, 254, 255, 257, 258, 262], "pointer": [3, 6, 49, 173], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 48, 51, 52, 53, 54, 55, 57, 64, 100, 133, 138, 140, 143, 146, 147, 154, 155, 241, 254, 255, 257, 258, 259, 261, 262], "reward_spec": [3, 48, 52, 69, 73, 75, 90, 91, 92, 99, 100, 101, 111, 125, 255, 258, 262], "done_spec": [3, 99, 100, 258, 262], "flag": [3, 8, 30, 31, 32, 33, 37, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 258, 259], "importantli": [3, 146, 149], "4": [3, 7, 13, 14, 16, 23, 26, 29, 30, 31, 52, 58, 59, 60, 63, 104, 111, 112, 113, 114, 119, 120, 122, 123, 125, 128, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 157, 202, 253, 254, 255, 258, 259, 261, 262], "action_s": 3, "help": [3, 4, 48, 51, 53, 54, 55, 248, 250, 253, 254, 255], "prealloc": [3, 258], "consist": [3, 30, 31, 32, 33, 48, 51, 53, 54, 55, 112, 123, 253, 254, 255, 258, 259, 262], "With": [3, 251, 253, 262], "necessarili": 3, "If": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 48, 49, 51, 52, 53, 54, 55, 71, 72, 74, 76, 78, 82, 83, 86, 87, 92, 93, 96, 99, 100, 103, 104, 110, 112, 122, 123, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 176, 177, 179, 184, 185, 186, 187, 188, 189, 198, 199, 200, 201, 215, 217, 220, 222, 224, 226, 234, 236, 239, 241, 245, 248, 253, 254, 255, 257, 258, 261, 262], "instanti": [3, 54, 55, 99, 253, 254, 258, 262], "0": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 21, 27, 28, 29, 30, 31, 32, 33, 37, 41, 48, 51, 52, 53, 54, 55, 57, 64, 69, 71, 73, 74, 82, 83, 86, 96, 98, 100, 103, 104, 106, 111, 112, 113, 114, 116, 119, 121, 123, 125, 126, 127, 128, 132, 133, 134, 135, 136, 138, 142, 144, 145, 148, 151, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 191, 192, 211, 218, 220, 241, 245, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262], "stateless": [3, 99, 253, 258, 262], "set_se": [3, 13, 14, 16, 17, 48, 51, 52, 53, 54, 55, 57, 64, 83, 88, 100, 253, 258, 261, 262], "seed": [3, 13, 14, 16, 17, 48, 51, 52, 53, 54, 55, 58, 66, 67, 100, 106, 220, 253], "next": [3, 4, 8, 13, 14, 16, 25, 30, 31, 32, 33, 37, 48, 49, 51, 52, 53, 54, 55, 57, 64, 66, 67, 81, 88, 104, 110, 111, 125, 133, 153, 164, 166, 175, 184, 185, 186, 187, 188, 189, 214, 218, 253, 254, 257, 258, 259, 261, 262], "determinist": [3, 48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 119, 129, 133, 138, 144, 148, 149, 173, 253, 254, 258, 262], "preced": [3, 122, 254], "without": [3, 7, 9, 48, 51, 53, 54, 55, 140, 175, 184, 185, 186, 187, 188, 189, 241, 248, 253, 254, 255, 258, 262], "risk": [3, 87], "overlap": [3, 32], "consecut": [3, 45, 145, 254, 262], "still": [3, 9, 95, 142, 172, 253, 254, 257, 258, 262], "reproduc": [3, 106, 255], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 24, 38, 39, 40, 48, 51, 53, 54, 55, 74, 90, 95, 97, 134, 135, 136, 146, 171, 177, 217, 253, 254, 255, 258, 261, 262], "max_step": [3, 13, 48, 51, 52, 53, 54, 55, 66, 67, 95, 254, 261, 262], "n": [3, 6, 7, 23, 26, 29, 48, 51, 53, 54, 55, 70, 74, 78, 101, 125, 149, 161, 184, 217, 251, 253, 254, 262], "tensordictmodul": [3, 13, 14, 16, 17, 20, 52, 125, 139, 140, 141, 142, 144, 145, 146, 148, 150, 151, 153, 156, 157, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 184, 185, 186, 187, 188, 216, 241, 253, 254, 255, 257, 258, 259], "ani": [3, 5, 8, 25, 30, 31, 32, 33, 37, 38, 39, 40, 43, 45, 46, 47, 48, 49, 51, 53, 54, 55, 78, 86, 87, 100, 104, 106, 112, 123, 127, 148, 149, 150, 151, 174, 208, 220, 248, 253, 254, 255, 258, 261, 262], "compat": [3, 7, 11, 18, 19, 46, 48, 51, 53, 54, 55, 62, 65, 70, 104, 156, 181, 254, 261], "figur": [3, 253, 254, 255, 258, 262], "summar": [3, 258], "brief": [3, 255, 262], "popul": [3, 31, 81, 96, 255, 258], "entri": [3, 13, 14, 16, 18, 19, 20, 22, 37, 48, 51, 53, 54, 55, 72, 78, 81, 83, 86, 88, 95, 103, 110, 177, 185, 186, 187, 188, 253, 255, 258, 259], "deliveri": 3, "step_mdp": [3, 247, 253, 254, 258, 261, 262], "nasium": 3, "recent": [3, 7, 11, 253, 254, 261, 262], "shift": [3, 158, 255], "termin": [3, 37, 150, 253, 254, 255, 258, 261], "trust": 3, "truncat": [3, 13, 14, 16, 18, 19, 20, 95, 136, 255, 262], "refer": [3, 7, 8, 48, 51, 53, 54, 55, 100, 104, 111, 119, 125, 129, 130, 132, 133, 154, 161, 166, 167, 168, 169, 174, 185, 190, 197, 229, 253, 254, 255, 261], "stepcount": [3, 13, 254, 255, 261], "chosen": [3, 96, 226, 234, 236, 239], "someth": [3, 48, 51, 53, 54, 55, 248, 254, 255, 258, 262], "els": [3, 251, 253, 254, 255, 258, 259], "100": [3, 32, 48, 51, 53, 54, 55, 83, 212, 220, 241, 254, 255, 257, 258, 259, 261, 262], "truncated_kei": [3, 95], "assess": [3, 253], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 247], "slice": [3, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37], "adjac": [3, 22, 78], "reli": [3, 161, 250, 253, 255, 258, 262], "traj_id": [3, 13, 14, 16, 22, 261], "junction": 3, "miss": [3, 4, 6, 7, 11, 25, 48, 51, 53, 54, 55, 96, 100, 110, 150, 151, 248], "context": [3, 5, 8, 48, 49, 51, 53, 54, 55, 65, 96, 101, 126, 182, 183, 185, 186, 187, 188, 190, 197, 216, 250, 253, 254, 255, 258, 259], "mark": 3, "through": [3, 4, 5, 8, 16, 18, 20, 54, 55, 87, 123, 149, 150, 151, 158, 185, 186, 187, 188, 253, 254, 255, 257, 258, 259, 262], "inittrack": 3, "our": [3, 7, 8, 18, 253, 254, 255, 257, 259, 261], "tutori": [3, 253, 254, 256, 257, 258, 259, 260, 261, 262], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 48, 49, 51, 53, 54, 55, 112, 123, 250, 251, 254, 255, 258], "design": [3, 13, 14, 29, 48, 51, 53, 54, 55, 87, 100, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 253, 254, 255, 257, 258, 262], "scratch": [3, 8, 253, 254, 258], "better": [3, 8, 250, 254, 255, 258], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 29, 48, 51, 53, 54, 55, 70, 78, 96, 101, 112, 119, 120, 123, 126, 127, 149, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 245, 253, 254, 255, 258, 262], "intens": [3, 8], "gym3": 3, "envpool": [3, 53], "interfac": [3, 65, 123, 126, 253, 255, 258], "simultan": [3, 20, 54, 55, 258], "often": [3, 8, 170, 220, 254, 258, 262], "competit": 3, "advantag": [3, 8, 120, 161, 162, 172, 174, 176, 185, 186, 187, 188, 189, 190, 191, 193, 195, 197, 198, 200, 250, 251, 253, 254, 255, 258, 261, 262], "scale": [3, 4, 37, 83, 91, 119, 121, 128, 132, 133, 135, 136, 139, 140, 141, 146, 149, 151, 218, 224, 226, 234, 236, 239, 245, 253, 254, 255, 261], "varieti": 3, "its": [3, 4, 5, 7, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 32, 34, 35, 36, 48, 51, 52, 53, 54, 55, 70, 99, 100, 104, 112, 142, 143, 144, 146, 149, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 220, 241, 251, 253, 254, 255, 258, 259, 262], "own": [3, 13, 14, 17, 21, 48, 51, 53, 54, 55, 254, 255, 258], "As": [3, 4, 48, 51, 53, 54, 55, 149, 253, 254, 255, 258, 259, 261, 262], "inherit": [3, 124, 173, 251, 255], "serialenv": [3, 96, 247, 262], "enjoi": 3, "exact": 3, "Of": [3, 7, 248, 258, 262], "cours": [3, 4, 248, 255, 258, 262], "correspond": [3, 4, 13, 14, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 41, 48, 51, 52, 53, 54, 55, 86, 96, 100, 103, 104, 145, 146, 149, 185, 186, 187, 188, 189, 254, 255, 258, 259], "count": [3, 49, 95, 145, 216, 223, 253, 254, 255, 262], "def": [3, 11, 21, 48, 49, 51, 52, 53, 54, 55, 111, 125, 152, 154, 157, 251, 253, 254, 257, 258, 261, 262], "make_env": [3, 67, 104, 227, 228, 253, 254, 262], "gymenv": [3, 5, 13, 14, 16, 17, 21, 49, 62, 73, 81, 83, 88, 96, 100, 104, 226, 229, 231, 234, 236, 239, 241, 247, 253, 254, 255, 259, 261, 262], "v1": [3, 13, 14, 16, 21, 37, 49, 53, 81, 83, 88, 96, 181, 193, 194, 195, 196, 198, 199, 200, 201, 254, 258, 261, 262], "from_pixel": [3, 58, 59, 226, 234, 236, 239, 253, 254, 259, 261, 262], "9": [3, 7, 30, 31, 32, 104, 161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 250, 254, 255, 258, 259, 260], "81": [3, 258, 259], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 38, 39, 40, 46, 48, 49, 51, 53, 54, 55, 79, 83, 96, 100, 101, 112, 123, 138, 143, 146, 147, 148, 149, 152, 154, 155, 161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 216, 217, 220, 222, 226, 229, 231, 234, 236, 239, 253, 254, 255, 257, 258, 261], "print": [3, 6, 7, 13, 14, 16, 21, 23, 25, 26, 29, 30, 31, 32, 33, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 71, 74, 75, 81, 83, 88, 96, 98, 104, 110, 112, 123, 128, 138, 139, 140, 141, 143, 144, 145, 147, 148, 151, 152, 154, 155, 157, 173, 226, 229, 231, 234, 236, 239, 241, 251, 253, 254, 255, 257, 258, 259, 261, 262], "simpli": [3, 6, 76, 93, 250, 253, 254, 255, 262], "b": [3, 7, 8, 22, 25, 32, 33, 126, 127, 185, 186, 187, 188, 189, 203, 254, 259], "c": [3, 6, 7, 25, 32, 33, 83, 226, 229, 231, 234, 236, 239, 254], "d": [3, 30, 41, 149, 261], "get": [3, 4, 6, 7, 8, 30, 37, 46, 49, 54, 55, 71, 74, 75, 83, 87, 98, 104, 138, 144, 146, 149, 185, 186, 187, 188, 189, 207, 253, 254, 255, 258, 261, 262], "forc": [3, 6, 7, 13, 14, 18, 20, 254, 258], "reset_work": 3, "fals": [3, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 71, 73, 78, 81, 82, 83, 86, 87, 88, 91, 96, 98, 100, 101, 103, 104, 106, 110, 111, 112, 113, 123, 125, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 181, 185, 186, 187, 188, 193, 194, 195, 196, 198, 199, 200, 201, 213, 214, 216, 217, 218, 220, 226, 229, 231, 234, 236, 239, 245, 251, 253, 254, 255, 257, 258, 259, 261, 262], "field": [3, 13, 14, 16, 17, 25, 32, 33, 48, 51, 52, 53, 54, 55, 57, 64, 65, 66, 67, 88, 96, 100, 110, 111, 125, 138, 139, 140, 141, 143, 145, 146, 147, 148, 151, 152, 154, 155, 224, 226, 229, 231, 234, 236, 239, 248, 254, 255, 257, 258, 259, 261, 262], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 64, 65, 66, 67, 71, 74, 78, 81, 82, 83, 86, 88, 91, 96, 98, 100, 101, 103, 104, 106, 110, 111, 112, 113, 114, 121, 123, 125, 126, 127, 135, 136, 138, 142, 143, 145, 146, 147, 148, 149, 150, 151, 156, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 181, 185, 186, 187, 188, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 213, 214, 216, 217, 218, 220, 226, 229, 231, 234, 236, 239, 245, 254, 255, 257, 258, 259, 261, 262], "500": [3, 220, 253, 258, 261, 262], "uint8": [3, 36, 98, 254, 259, 261, 262], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 48, 49, 51, 52, 53, 54, 55, 66, 67, 69, 70, 71, 72, 73, 75, 78, 80, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 122, 123, 124, 125, 126, 127, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 214, 215, 216, 217, 218, 220, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 251, 253, 254, 255, 258, 261, 262], "is_shar": [3, 13, 14, 16, 25, 32, 33, 52, 57, 64, 65, 66, 67, 88, 96, 104, 110, 111, 125, 138, 139, 140, 141, 143, 145, 146, 147, 148, 151, 152, 154, 155, 226, 229, 231, 234, 236, 239, 254, 255, 257, 258, 259, 261, 262], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 30, 31, 32, 33, 48, 51, 53, 54, 55, 104, 145, 146, 149, 166, 177, 185, 186, 187, 188, 250, 253, 254, 257, 262], "launch": [3, 18, 19, 20, 21], "quit": [3, 253, 254, 255, 262], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 30, 31, 32, 33, 48, 49, 51, 53, 54, 55, 65, 71, 87, 96, 97, 104, 110, 119, 122, 145, 165, 168, 175, 179, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 220, 250, 254, 255, 257, 258, 259, 261, 262], "mani": [3, 4, 31, 161, 162, 165, 172, 174, 175, 179, 254, 255, 258, 262], "start": [3, 4, 5, 13, 49, 110, 215, 254, 258, 262], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 48, 51, 53, 54, 55, 96, 104, 150, 151, 173, 253, 255, 258, 262], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 48, 51, 53, 54, 55, 100, 142, 144, 145, 218, 251, 253, 254, 255, 258, 262], "great": [3, 7, 8, 261], "speedup": [3, 8, 262], "precis": [3, 98, 110, 253, 255], "anoth": [3, 8, 48, 51, 53, 54, 55, 99, 123, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 250, 253, 255, 257, 258, 262], "misspecifi": 3, "caus": [3, 7, 8, 87], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 45, 48, 49, 51, 53, 54, 55, 86, 97, 103, 104, 110, 148, 157, 185, 186, 187, 188, 189, 220, 222, 245, 248, 253, 254, 255, 257, 258, 259, 261, 262], "rais": [3, 13, 14, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 48, 51, 53, 54, 55, 77, 100, 106, 157, 253, 254, 255, 261], "assert": [3, 6, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 51, 88, 104, 106, 128, 185, 186, 187, 188, 211, 219, 253, 254, 257, 262], "mismatch": [3, 254], "mostli": [3, 17, 250, 262], "purpos": [3, 7, 241, 253, 255, 259, 262], "want": [3, 6, 7, 8, 83, 161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 253, 254, 255, 258, 259, 261, 262], "subprocess": [3, 49], "addit": [3, 4, 37, 48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 142, 148, 160, 173, 185, 250], "multithread": [3, 30, 31, 32, 33, 37, 53, 254], "multithreadedenv": [3, 247], "underneath": 3, "higher": [3, 4, 253, 254, 255, 262], "restrict": [3, 254, 259, 262], "flexibl": [3, 9, 53, 251, 253, 262], "cover": [3, 248, 253, 255, 258, 261], "popular": 3, "atari": [3, 4, 70, 262], "classic": [3, 52, 254], "benchmark_batched_env": 3, "py": [3, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 25, 30, 32, 41, 48, 51, 53, 54, 55, 96, 100, 106, 123, 138, 143, 146, 147, 148, 149, 151, 152, 160, 211, 222, 243, 244, 245, 251, 253, 255, 258, 262], "raw": [3, 4, 121, 135, 136, 254, 258], "treat": 3, "logic": 3, "torchvis": [3, 86, 103, 261, 262], "transformedenv": [3, 13, 49, 73, 78, 81, 82, 83, 88, 96, 99, 104, 226, 229, 231, 234, 236, 239, 253, 254, 255, 257, 258, 259, 261, 262], "primit": [3, 4, 253, 254], "built": [3, 5, 7, 161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 237, 241, 242, 245, 254, 255, 262], "base_env": [3, 74, 75, 96, 253, 254, 255, 259, 261, 262], "totensorimag": [3, 231, 254, 261, 262], "in_kei": [3, 13, 14, 16, 52, 69, 70, 71, 72, 74, 75, 78, 80, 83, 84, 86, 88, 89, 90, 91, 92, 97, 98, 99, 103, 104, 111, 125, 138, 139, 140, 141, 143, 146, 147, 148, 149, 151, 152, 156, 157, 163, 164, 185, 186, 187, 188, 202, 203, 236, 239, 241, 253, 254, 255, 257, 258, 259, 261, 262], "resiz": [3, 254, 262], "64": [3, 113, 114, 120, 253, 254, 255, 257, 258, 261, 262], "now": [3, 7, 30, 253, 255, 257, 259, 262], "appar": [3, 213], "bring": [3, 255, 262], "signific": [3, 5, 8, 255, 262], "kind": [3, 34, 110], "consult": 3, "interest": [3, 146, 149, 255, 258, 262], "abov": [3, 7, 48, 51, 53, 54, 55, 121, 135, 136, 160, 250, 251, 253, 254, 255, 258, 262], "resize_par": 3, "out_kei": [3, 13, 14, 16, 52, 69, 70, 71, 72, 78, 80, 83, 84, 86, 88, 89, 90, 92, 97, 98, 99, 103, 111, 125, 138, 139, 140, 141, 143, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 185, 186, 187, 188, 216, 241, 253, 255, 257, 258, 259, 261, 262], "easi": [3, 5, 250, 253, 254, 255, 259, 262], "root": [3, 25, 110, 121, 135, 136, 258, 262], "graph": [3, 4, 8, 182, 183, 258], "inv": [3, 74, 258], "appli": [3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 51, 53, 54, 55, 70, 71, 73, 74, 76, 77, 78, 79, 81, 85, 87, 88, 92, 93, 95, 96, 97, 99, 100, 102, 104, 135, 185, 215, 251, 253, 254, 255, 258, 261, 262], "revers": 3, "order": [3, 16, 29, 30, 31, 32, 33, 37, 45, 48, 51, 53, 54, 55, 100, 138, 143, 147, 148, 150, 151, 152], "chain": [3, 30, 31, 32, 33, 37, 73, 74, 112, 151, 262], "taken": [3, 48, 51, 53, 54, 55, 250, 253, 254, 255, 258], "includ": [3, 4, 7, 9, 38, 39, 40, 46, 48, 51, 52, 53, 54, 55, 100, 104, 173, 223, 251, 253, 254, 255, 258, 262], "invers": [3, 4, 83, 159, 171, 258], "in_keys_inv": [3, 75, 83, 84, 88, 99, 253, 257, 258, 262], "append_transform": [3, 30, 31, 32, 33, 37, 86, 96, 253, 258, 261, 262], "doubletofloat": [3, 226, 229, 234, 236, 239, 253, 255, 257], "float32": [3, 13, 14, 16, 25, 30, 32, 33, 34, 41, 52, 57, 64, 65, 66, 67, 75, 83, 88, 96, 98, 110, 111, 125, 138, 139, 140, 141, 143, 145, 146, 147, 148, 151, 152, 154, 155, 226, 229, 231, 234, 236, 239, 254, 255, 257, 258, 259, 261, 262], "float64": [3, 48, 51, 53, 54, 55, 66, 67, 73, 86, 96, 100, 103, 148, 173, 257, 262], "append": [3, 8, 30, 31, 32, 33, 37, 49, 96, 253, 254, 255, 258, 259, 261], "regist": [3, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 48, 51, 53, 54, 55, 100, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158, 173, 251, 255], "manipul": [3, 4, 8, 86, 262], "keep": [3, 4, 7, 8, 14, 33, 45, 83, 86, 103, 104, 110, 145, 213, 220, 253, 254, 255, 258, 261, 262], "mind": 3, "go": [3, 7, 87, 253, 254, 255, 257, 258, 259, 261, 262], "what": [3, 8, 30, 34, 48, 51, 53, 54, 55, 96, 110, 248, 250, 254, 255, 258, 259, 261, 262], "third_transform": 3, "would": [3, 48, 51, 53, 54, 55, 123, 251, 254, 255, 258, 262], "replac": [3, 6, 7, 74, 110], "unexpect": [3, 48, 51, 53, 54, 55, 100, 253, 262], "behviour": 3, "fortun": 3, "eras": [3, 48, 51, 53, 54, 55], "ident": [3, 13, 14, 16, 54, 55, 243, 244, 253, 254], "alreadi": [3, 8, 48, 51, 53, 54, 55, 149, 253, 254, 255], "place": [3, 13, 14, 16, 17, 25, 48, 49, 51, 53, 54, 55, 73, 86, 96, 100, 103, 104, 148, 173, 217, 222, 223, 254, 255, 258], "chang": [3, 5, 7, 30, 31, 32, 33, 38, 39, 40, 45, 46, 48, 51, 53, 54, 55, 88, 99, 100, 104, 173, 250, 253, 255, 258, 259, 262], "happen": [3, 142, 254, 259, 262], "catfram": [3, 254], "hold": [3, 182, 183, 258], "about": [3, 5, 7, 18, 19, 20, 250, 253, 254, 255, 258, 261, 262], "notic": [3, 255, 258], "loss": [3, 8, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 184, 185, 215, 220, 225, 230, 232, 233, 235, 236, 238, 241, 250, 251, 253, 254, 258, 261], "parenthood": 3, "reason": [3, 4, 8, 48, 51, 53, 54, 55, 86, 250, 253, 254, 255], "henc": [3, 30, 87, 253, 255, 258], "composit": [3, 25, 48, 51, 53, 54, 55, 255, 258], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 258], "log": [3, 4, 8, 117, 131, 136, 146, 149, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 213, 214, 216, 220, 241, 250, 251, 254, 255, 258, 261], "reveal": 4, "bug": [4, 261], "curv": 4, "won": [4, 48, 49, 51, 53, 54, 55, 86, 103, 220, 245, 253, 254, 255], "tell": [4, 7], "exploit": 4, "video": [4, 203, 216, 245, 254], "game": [4, 5], "cannot": [4, 7, 21, 25, 87, 254, 255, 258], "cv": 4, "act": 4, "flip": 4, "imag": [4, 7, 58, 72, 86, 98, 103, 123, 253, 254, 259, 262], "correspondingli": 4, "relat": [4, 10, 30, 78, 254, 258], "prescript": 4, "tune": [4, 259], "coeffici": 4, "bonu": [4, 161, 162, 172, 174], "beta": [4, 30, 32, 41, 171, 172, 253, 254, 261], "altern": [4, 26, 53, 160, 253, 254, 255], "reduc": [4, 6, 26, 254, 255], "downstream": [4, 253], "formul": 4, "ob": [4, 8, 25, 75, 83, 98, 110, 152, 185, 186, 187, 188, 253, 254, 257, 258, 261, 262], "rate": [4, 104, 184, 253, 254, 255], "gradient": [4, 48, 51, 53, 54, 55, 100, 121, 127, 135, 136, 161, 176, 184, 185, 186, 187, 188, 220, 253, 255, 258], "norm": [4, 8, 220, 254, 255, 258], "easier": [4, 253], "behavior": [4, 48, 51, 53, 54, 55, 100, 171, 173, 255], "local": [4, 7, 10, 16, 48, 51, 53, 54, 55, 100, 208, 261], "optima": 4, "sens": [4, 258], "product": [4, 9, 243, 244], "sum": [4, 28, 29, 51, 168, 184, 250, 253, 254, 255, 258, 262], "track": [4, 13, 14, 16, 17, 18, 19, 20, 33, 45, 92, 104, 145, 208, 213, 253, 254, 258], "stat": [4, 83, 224, 245, 255], "w": [4, 72, 89, 98, 145, 203, 254], "r": [4, 83, 149, 160, 184, 254, 258, 262], "yield": [4, 16, 48, 51, 53, 54, 55, 173], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 163, 164, 255], "futur": [4, 48, 51, 53, 54, 55, 86, 100, 103, 123, 248, 261], "past": [4, 254], "becom": [4, 253, 262], "between": [4, 5, 13, 14, 16, 17, 45, 48, 51, 53, 54, 55, 74, 82, 90, 98, 100, 106, 112, 123, 146, 149, 168, 169, 172, 173, 181, 185, 216, 220, 250, 253, 254, 262], "spars": 4, "ineffici": 4, "interact": [4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 146, 149, 255, 258, 262], "ad": [4, 13, 14, 16, 30, 31, 32, 33, 37, 41, 48, 51, 53, 54, 55, 92, 100, 126, 127, 145, 161, 162, 172, 174, 253, 262], "intermedi": [4, 259], "instrument": 4, "greatli": [4, 254], "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 253], "discov": 4, "score": 4, "undesir": 4, "though": [4, 123, 255], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 48, 51, 53, 54, 55, 71, 74, 83, 110, 111, 122, 144, 145, 158, 173, 185, 186, 187, 188, 261], "subtask": 4, "hierarch": [4, 261], "framework": [4, 9, 21, 52, 261, 262], "individu": [4, 18, 19, 20, 48, 51, 53, 54, 55, 253], "select": [4, 30, 31, 32, 33, 37, 70, 71, 73, 76, 77, 78, 79, 81, 82, 85, 87, 88, 92, 93, 95, 96, 97, 99, 102, 104, 111, 219, 253, 254], "fall": 4, "section": 4, "explicit": [4, 11, 122, 254], "mechan": [4, 48, 51, 53, 54, 55, 100, 258], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 48, 51, 53, 54, 55, 171, 255], "addition": 4, "per": [4, 13, 14, 16, 17, 18, 19, 20, 54, 119, 220, 243, 244, 253, 254, 255, 261], "timestep": [4, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 254], "realli": 4, "larg": [4, 26, 255], "target": [4, 8, 48, 49, 51, 53, 54, 55, 99, 148, 149, 161, 162, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 184, 185, 186, 187, 188, 189, 223, 240, 241, 250, 251, 253, 258], "huge": 4, "std": [4, 83, 104, 128, 142, 262], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 256, 257, 259, 260], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 48, 51, 53, 54, 55, 83, 86, 96, 99, 100, 105, 111, 125, 126, 127, 142, 144, 145, 161, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 179, 226, 229, 231, 234, 236, 239, 245, 254, 258, 262], "estim": [4, 139, 140, 141, 161, 162, 166, 172, 173, 174, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 250, 253, 254, 255, 257, 258, 259, 261, 262], "encount": [4, 54, 55, 248, 254, 258], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 253, 254, 255, 262], "bonus": 4, "denser": 4, "prior": [4, 133, 168], "freshli": 4, "proper": [4, 6, 7, 185, 186, 187, 188, 254, 255], "doesn": [4, 11, 53], "drop": [4, 45, 110], "meant": [4, 52], "encourag": [4, 254], "measur": [4, 254, 255], "novelti": 4, "revisit": 4, "previous": [4, 255, 262], "diminish": 4, "decreas": 4, "ideal": [4, 83, 253, 258], "down": [4, 13, 14, 16, 17, 254], "gone": [4, 5], "anyth": 4, "try": [4, 7, 8, 157, 253, 254, 255, 258, 261, 262], "distil": 4, "add": [4, 6, 30, 31, 32, 33, 37, 43, 47, 48, 51, 53, 54, 55, 126, 161, 173, 215, 253, 254, 255, 258, 261], "nois": [4, 105, 127, 137, 145, 175, 179, 216, 245, 253], "exploratori": [4, 161, 162, 172, 174], "could": [4, 6, 253, 254, 255, 259, 262], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 30, 32, 33, 38, 39, 40, 41, 46, 163, 164, 165, 171, 175, 177, 179, 251, 253, 254], "schedul": [4, 7, 216, 255, 258], "separ": [4, 8, 13, 14, 17, 18, 20, 22, 86, 103, 163, 165, 175, 177, 179, 253, 254, 262], "divers": [4, 54, 55], "bootstrap": [4, 166, 186, 191, 192, 254], "noisi": [4, 126, 127, 137], "unstabl": [4, 121, 135, 136], "inher": 4, "stochast": [4, 119, 127, 129, 133, 165, 171, 175, 177, 255], "enemi": 4, "variabl": [4, 7, 8, 26, 29, 125, 139, 140, 141, 173, 175, 251], "pomdp": 4, "previou": [4, 10, 32, 133, 253, 255, 258, 262], "loos": [4, 254, 255], "nonexist": 4, "sure": [4, 7, 46, 245, 253, 255, 258, 261, 262], "architectur": [4, 254], "sequenc": [4, 13, 14, 16, 17, 25, 27, 28, 30, 31, 43, 47, 69, 70, 71, 72, 74, 75, 78, 80, 83, 84, 87, 89, 90, 91, 92, 97, 98, 99, 104, 112, 117, 123, 131, 138, 146, 149, 150, 151, 152, 202, 203, 215, 217, 219, 220, 226, 234, 236, 239, 254, 255, 257, 262], "rather": [4, 88, 253, 254, 255], "last": [4, 13, 14, 16, 17, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 45, 78, 83, 87, 97, 112, 122, 123, 129, 142, 144, 253, 254, 255, 258, 259, 261, 262], "lstm": [4, 122, 128], "explicitli": [4, 253], "rel": [4, 96, 117, 134], "tend": 4, "stabl": [4, 9, 10, 253], "don": [4, 6, 7, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 48, 253, 254, 255, 261, 262], "compens": 4, "descent": [4, 127], "1000": [4, 31, 104, 142, 144, 145, 146, 149, 170, 253, 254, 255, 259], "know": [4, 30, 31, 32, 33, 142, 144, 175, 216, 253, 254, 255], "minimum": [4, 24, 90, 119, 128, 134, 135, 136, 146, 158, 160, 211, 253, 255, 258, 261, 262], "rang": [4, 8, 11, 26, 30, 31, 49, 104, 172, 179, 250, 251, 253, 254, 255, 258, 261], "manual": [4, 18, 20], "deviat": [4, 83, 104, 111, 119, 125, 126, 127, 142, 174, 179, 253], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20], "updat": [4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 30, 32, 41, 48, 51, 52, 53, 54, 55, 74, 100, 102, 104, 111, 125, 145, 146, 148, 149, 161, 170, 174, 178, 185, 186, 187, 188, 189, 216, 220, 222, 227, 228, 240, 241, 251, 253, 254, 255, 258, 261, 262], "stabil": [4, 79], "stage": [4, 258], "never": 4, "prevent": [4, 121, 135, 136, 172, 174, 218, 253], "solv": [4, 10, 248, 253, 254, 255, 258], "entir": [4, 254, 255, 258], "submit": [4, 248, 261], "suffici": [4, 253, 254], "recommend": [4, 7], "system": [4, 5, 255, 258], "adequ": [4, 106, 255], "infeas": 4, "allevi": 4, "prune": 4, "develop": [4, 7, 253, 261], "filter": [4, 253], "fire": [4, 48, 51, 53, 54, 55], "certain": [4, 18, 20, 48, 51, 53, 54, 55, 79, 95, 100, 172, 253, 254, 255, 262], "illeg": 4, "chess": 4, "combin": [4, 99, 254], "grasp": 4, "releas": [4, 7, 10, 48, 51, 53, 54, 55, 100, 261], "top": [4, 111, 125], "p": [4, 49], "wherein": 4, "cumul": [4, 92, 111, 255], "probabl": [4, 8, 117, 123, 131, 136, 146, 149, 254, 261], "q": [4, 113, 114, 115, 116, 118, 120, 154, 155, 163, 164, 165, 166, 170, 171, 175, 177, 179, 236, 239], "flow": [4, 253, 255, 258], "directli": [4, 8, 52, 245, 255, 258], "reparameter": [4, 117, 131], "soft": [4, 170, 177, 178], "actor": [4, 111, 113, 115, 119, 125, 139, 140, 141, 143, 144, 145, 146, 147, 154, 155, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 179, 226, 229, 231, 234, 236, 239, 247, 250, 253, 254, 255, 259, 261], "critic": [4, 8, 139, 161, 162, 172, 174, 176, 177, 255], "clip": [4, 90, 162, 179, 220, 255, 258], "oppos": 4, "incorrect": 4, "thought": 4, "bound": [4, 17, 24, 25, 48, 51, 53, 54, 55, 104, 132, 133, 138, 143, 145, 146, 147, 148, 149, 254, 255, 262], "region": 4, "squash": [4, 261], "tanh": [4, 112, 121, 123, 134, 135, 136, 253, 255, 258, 259, 261], "correct": [4, 223, 254, 255], "prob": [4, 131, 255], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 74, 86, 100, 103, 146, 148, 149, 170, 174, 236, 239, 257, 258, 262], "side": [4, 262], "real": [5, 149, 250, 258], "world": [5, 52, 153, 168, 258, 262], "robot": [5, 7, 86, 103], "adopt": [5, 253, 262], "histor": 5, "wa": [5, 7, 48, 51, 53, 54, 55, 100, 170, 178, 250, 254, 255, 257, 261], "ceas": 5, "maintain": [5, 9, 258], "fork": 5, "gymnasium": [5, 11, 254, 255, 258, 261], "farama": [5, 255, 258], "foundat": [5, 255], "document": [5, 7, 18, 19, 48, 51, 53, 54, 55, 100, 261], "further": [5, 255], "detail": [5, 6, 7, 48, 51, 53, 54, 55, 100, 154, 161, 166, 174, 229, 248, 257], "usag": [5, 7, 37, 171, 177, 253, 254, 255, 257, 258, 259, 261, 262], "known": [5, 7, 8, 191, 192, 253, 254], "bc": [5, 261], "break": [5, 13, 14, 16, 31, 33, 48, 51, 53, 54, 55, 104, 253, 254, 261], "face": [5, 8, 9, 262], "modif": [5, 25, 48, 51, 53, 54, 55, 78, 253, 255, 258], "against": [5, 7, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 48, 51, 53, 54, 55, 106, 138, 143, 146, 147, 148, 149, 255], "13": [5, 10, 11, 255, 258, 260], "howev": [5, 7, 48, 51, 53, 54, 55, 92, 95, 100, 253, 254, 255, 262], "construct": [5, 30, 31, 32, 33, 48, 51, 53, 54, 55, 106, 133, 149, 173, 220, 226, 234, 253, 255, 258, 262], "automat": [5, 48, 51, 53, 54, 55, 83, 138, 146, 253, 254, 255, 258, 261], "wrap": [5, 13, 14, 16, 17, 18, 19, 20, 48, 51, 53, 54, 55, 106, 139, 140, 141, 153, 253, 254, 255, 262], "best": [5, 9, 254, 261], "gymwrapp": [5, 51, 247, 255, 261], "you": [5, 6, 7, 8, 10, 48, 51, 53, 54, 55, 104, 248, 253, 254, 255, 257, 259, 261, 262], "feel": [5, 248, 261], "free": [5, 7, 161, 168, 174, 251, 255, 261], "gladli": 5, "instruct": [6, 7, 10, 21, 37, 74, 254, 255], "prepar": [6, 255], "conda": [6, 7, 248], "assum": [6, 25, 29, 32, 33, 37, 51, 54, 55, 72, 78, 86, 87, 92, 96, 103, 122, 177, 193, 194, 195, 196, 198, 199, 200, 201, 203, 253, 254, 255, 257, 258], "let": [6, 7, 48, 51, 53, 54, 55, 216, 250, 253, 254, 255, 257, 258, 259, 261, 262], "7": [6, 10, 26, 29, 30, 31, 32, 111, 112, 122, 123, 125, 253, 258, 259, 261], "cmake": 6, "14": [6, 11, 83, 255, 258], "activ": [6, 7, 9, 112, 119, 123, 174, 261], "sim": 6, "bullet": 6, "physic": [6, 7, 251, 253, 258], "headless": [6, 7], "cluster": [6, 7, 8, 18, 248], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": 6, "y": [6, 7, 65, 122, 157, 255], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 48, 51, 53, 54, 55, 94, 173, 262], "command": [6, 7, 10, 253, 255, 258, 262], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 247], "_has_habitat": 6, "_env": [6, 262], "available_env": [6, 56, 57, 58, 59, 60, 61, 63, 64, 262], "startswith": [6, 250], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 30, 31, 32, 33, 37, 59, 245, 251], "libllvmlit": 6, "ionstal": 6, "path": [6, 7, 38, 48, 51, 53, 54, 55, 86, 103, 125, 220, 251], "env_nam": [6, 53, 56, 58, 60, 63, 253, 255, 262], "llvmlite": 6, "config": [6, 7, 86, 103, 224, 226, 227, 228, 229, 231, 234, 236, 237, 239, 242], "var": [6, 7, 48, 51, 53, 54, 55, 100, 173], "ld_preload": [6, 7], "python3": [6, 7, 10, 261], "8": [6, 7, 31, 41, 57, 112, 113, 114, 120, 123, 139, 140, 141, 146, 148, 151, 171, 254, 255, 258, 259, 261], "site": [6, 7], "bind": 6, "deactiv": [6, 7], "importerror": [6, 7, 10], "usr": [6, 7, 10, 261], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 48, 51, 53, 54, 55, 100, 173], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7], "right": [6, 7, 122, 253, 254, 255, 258, 262], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 37], "stand": [7, 139, 140, 141, 257, 258, 262], "joint": [7, 254], "dynam": [7, 171, 254, 255, 258], "contact": 7, "engin": [7, 258], "facilit": [7, 85, 86, 103, 139, 140, 141, 253, 258], "biomechan": 7, "graphic": 7, "anim": 7, "area": 7, "demand": [7, 262], "fast": [7, 9, 57, 88, 175, 253, 254, 255], "accur": [7, 37, 253, 258], "articul": 7, "acquir": [7, 253, 255], "deepmind": [7, 8, 9, 58, 59, 255], "access": [7, 8, 30, 48, 51, 53, 54, 55, 86, 173, 245, 248, 258], "whomev": 7, "licenc": 7, "incorpor": [7, 253, 258], "relianc": 7, "obsolet": 7, "seri": [7, 8, 29, 43, 47, 55, 82, 99, 203, 250, 254, 255, 262], "legaci": 7, "pro": [7, 248], "tip": [7, 248], "glfw": 7, "osmesa": 7, "egl": 7, "hand": [7, 253, 258], "advic": [7, 262], "sudo": [7, 248], "enabl": [7, 8, 37, 145, 216, 255, 258], "apt": 7, "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 38, 39, 40, 46], "fact": [7, 8, 254, 255, 258, 259, 262], "indent": 7, "workflow": [7, 139, 140, 141], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "both": [7, 48, 49, 51, 53, 54, 55, 88, 100, 112, 123, 139, 140, 141, 173, 216, 253, 255, 258, 259, 262], "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 21, 39, 48, 51, 53, 54, 55, 86, 103, 262], "binari": [7, 23, 29, 69, 143, 147, 154, 155], "setup": [7, 253], "mkdir": 7, "cd": 7, "tag": [7, 203, 208, 245], "earlier": [7, 253, 255], "roboti": 7, "u": [7, 10, 253, 255, 258, 259, 261, 262], "download": [7, 10, 86, 103, 253, 254, 255, 256, 257, 258, 259, 261, 262], "html": [7, 53, 254], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 51, 86, 103, 111, 217, 253, 254, 255], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 259], "bin": 7, "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "hard": [7, 170, 254, 262], "later": [7, 116, 146, 149, 253, 255], "modifi": [7, 8, 48, 51, 53, 54, 55, 73, 78, 86, 96, 99, 100, 103, 145, 148, 173, 223, 226, 234, 236, 239, 253, 254, 255], "nvidia": 7, "older": [7, 11], "hack": 7, "line": [7, 48, 51, 53, 54, 55, 253, 254, 261], "adatp": 7, "script": [7, 106, 226, 229, 231, 234, 236, 239, 241, 245, 250, 251, 253, 254, 255, 257, 258, 259, 261, 262], "unnot": [7, 87], "until": [7, 255], "complet": [7, 9, 45, 51, 248, 250, 254, 255, 257], "mujoco_pi": 7, "trigger": 7, "pipelin": [7, 255], "problem": [7, 8, 16, 254, 255, 258, 262], "troubleshoot": 7, "gl": 7, "h": [7, 72, 89, 98, 125, 203, 254], "eglshim": 7, "10": [7, 21, 25, 30, 31, 32, 33, 49, 52, 66, 67, 98, 111, 122, 125, 144, 145, 165, 175, 176, 177, 179, 185, 186, 187, 188, 211, 251, 253, 254, 255, 258, 260, 261, 262], "fatal": 7, "No": 7, "directori": [7, 38, 208, 251], "glu": 7, "38": [7, 255, 258, 259], "disappear": [7, 254, 257], "libstdc": 7, "6": [7, 13, 14, 16, 17, 31, 64, 83, 112, 117, 122, 123, 134, 152, 226, 229, 231, 234, 236, 239, 254, 255, 258, 259, 261, 262], "glibcxx_3": 7, "29": [7, 255, 258], "compil": 7, "libosmesa": 7, "libgcc": 7, "Then": [7, 253, 255, 257], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "__init__": [7, 52, 111, 125, 152, 154, 157, 251, 253, 254, 258, 262], "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": 7, "runtimeerror": [7, 8, 48, 51, 53, 54, 55, 100, 262], "job": [7, 18, 19, 20, 21], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 255, 258], "114": [7, 258], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 258], "offscreenopenglcontext": 7, "fail": [7, 106], "opengl": 7, "global": [7, 48, 51, 53, 54, 55, 146, 149, 251, 253], "cuda_visible_devic": 7, "id": [7, 22, 145, 175, 206, 236], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "read": [7, 17, 22, 38, 39, 40, 46, 51, 70, 71, 73, 74, 76, 77, 78, 79, 81, 85, 87, 88, 92, 93, 95, 96, 97, 99, 102, 104, 131, 138, 139, 140, 141, 143, 146, 147, 148, 149, 151, 152, 153, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 185, 186, 187, 188, 189, 203, 220, 226, 234, 236, 239, 253, 254, 255, 257, 258, 259, 262], "onscreen": 7, "101": [7, 255, 258], "displai": [7, 220, 251, 254, 258], "correctli": [7, 48, 51, 53, 54, 55], "loop": [8, 13, 14, 16, 17, 51, 110, 220, 251, 253, 257], "sketch": [8, 251], "_": [8, 49, 71, 74, 75, 83, 88, 98, 104, 138, 143, 147, 148, 152, 160, 185, 186, 187, 188, 253, 254, 255, 258, 261], "n_training_step": 8, "datapoint": 8, "onlin": [8, 13, 17, 161, 174, 211, 245, 255], "n_data_per_train": 8, "no_grad": [8, 48, 51, 53, 54, 55, 185, 186, 187, 188, 253, 254, 255], "replay_buff": [8, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 217, 241, 253, 254, 255], "extend": [8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 47, 217, 251, 253, 254, 255, 259, 261], "loss_fn": [8, 261], "backward": [8, 48, 51, 53, 54, 55, 104, 253, 254, 255, 258], "zero_grad": [8, 48, 51, 53, 54, 55, 251, 253, 254, 255, 258], "backpropag": [8, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 258], "decor": [8, 11, 185, 186, 187, 188], "differenti": [8, 185, 186, 187, 188, 253, 258], "understand": [8, 253, 254], "denomin": 8, "artifact": 8, "numer": [8, 104, 121, 135, 136, 138, 143, 146, 147, 148, 149, 218, 255, 262], "misconcept": 8, "save": [8, 48, 51, 53, 54, 55, 173, 202, 220, 251, 254], "freed": 8, "appear": [8, 29, 258], "compuat": 8, "twice": 8, "fix": [8, 96, 177, 258, 262], "retain_graph": 8, "discuss": [8, 9], "inplac": [8, 48, 51, 53, 54, 55, 253, 254], "accumul": 8, "onto": [8, 29, 138, 142, 143, 144, 145, 146, 147, 148, 149, 254, 258], "exclud": [8, 37, 76, 110, 253], "forward": [8, 48, 51, 53, 54, 55, 70, 71, 73, 74, 76, 77, 78, 79, 81, 83, 85, 86, 87, 88, 92, 93, 95, 96, 97, 99, 102, 104, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 126, 128, 129, 130, 132, 133, 138, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 185, 186, 187, 188, 189, 250, 253, 254, 258, 261], "submodul": [8, 48, 51, 53, 54, 55, 173], "param": [8, 48, 51, 52, 53, 54, 55, 88, 99, 117, 134, 138, 143, 146, 147, 148, 151, 152, 154, 155, 173, 178, 180, 183, 185, 186, 187, 188, 189, 229, 253, 254, 258, 259, 261], "grad": [8, 48, 51, 53, 54, 55, 254, 255], "whose": [8, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 128, 148, 173, 253], "strictli": [8, 48, 51, 53, 54, 55, 100, 253, 255], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 30, 32, 41, 70, 78, 87, 101, 167, 250, 253, 255, 258], "ask": [8, 253, 255, 259, 262], "core": [8, 226, 229, 231, 234, 236, 239, 251, 261], "much": [8, 30, 32, 41, 172, 174, 254, 255, 258, 262], "render": [8, 216, 253, 254, 255], "upon": [8, 258], "factor": [8, 121, 127, 135, 136, 145, 166, 167, 169, 253, 254, 262], "fit": [8, 11, 83, 250, 251], "everi": [8, 17, 25, 29, 46, 48, 51, 53, 54, 55, 104, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158, 220, 251, 253, 254, 255, 258], "bottlneck": 8, "affect": [8, 48, 51, 53, 54, 55, 99, 100, 106], "brax": [8, 56, 57, 88, 262], "jax": [8, 11], "improperli": 8, "item": [8, 13, 25, 77, 163, 164, 211, 250, 251, 253, 254, 255, 258], "underli": [8, 258], "tedeiou": 8, "priorit": [8, 30, 32, 41, 163, 164, 165, 171, 175, 177, 179, 253, 254], "amount": [8, 145, 254], "isn": [8, 148], "contigu": [8, 255, 258, 261, 262], "costli": [8, 258], "concaten": [8, 27, 28, 70, 71, 83, 99, 123, 151, 253, 254, 258, 262], "constitut": [8, 254, 258], "plain": 8, "profil": 8, "indic": [8, 11, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 45, 47, 48, 51, 53, 54, 55, 71, 95, 96, 112, 123, 145, 158, 161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 224, 245, 248, 251, 253, 255, 258, 262], "fulli": [8, 48, 51, 53, 54, 55, 254, 258], "frequent": 8, "techniqu": [8, 254], "program": [8, 171, 262], "functorch": [8, 10, 148, 151, 254, 261], "incl": 8, "suit": [8, 59, 255, 262], "mujoco_instal": 8, "valueerror": [8, 254], "bad": 8, "fds_to_keep": 8, "view": [8, 26, 29, 48, 51, 53, 54, 55, 123, 154, 253, 254, 258, 261, 262], "expand": [8, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 148, 151, 253, 258, 261], "new_shap": 8, "content": [8, 13, 14, 16, 30, 31, 32, 33, 45, 53, 112, 123, 254, 255, 258, 261], "lost": 8, "permut": [8, 45, 261, 262], "spin": [9, 262], "deep": [9, 70, 113, 114, 115, 116, 118, 145, 161, 170, 177, 178, 229, 253], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 83, 104, 253, 254, 255], "reddit": 9, "reagent": 9, "orient": [9, 262], "baselines3": 9, "tf": 9, "agent": [9, 127, 258], "bandit": [9, 65], "tensorflow": 9, "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "simpl": [9, 29, 48, 51, 53, 54, 55, 113, 149, 176, 185, 250, 253, 254, 255, 262], "sequenti": [9, 48, 51, 53, 54, 55, 150, 151, 255, 258, 259, 262], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 261], "grade": 9, "factori": 9, "throughput": [9, 253], "cherri": 9, "jaxrl": 9, "space": [9, 29, 34, 74, 130, 138, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 165, 253, 254, 255, 258, 261, 262], "mbrl": [9, 52], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "dist": [10, 261], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 255], "notebook": [10, 253, 254, 255, 256, 257, 258, 259, 261, 262], "24": [10, 255, 258, 262], "11": [10, 26, 29, 49, 98, 111, 125, 255, 257, 258], "2022": [10, 261], "12": [10, 255, 258, 259], "pip": [10, 261, 262], "pip3": [10, 255], "extra": [10, 48, 51, 53, 54, 55, 104, 110, 254, 255], "url": 10, "org": [10, 30, 41, 70, 86, 113, 114, 115, 116, 119, 120, 125, 127, 129, 130, 132, 133, 145, 154, 161, 166, 167, 168, 169, 170, 171, 174, 176, 177, 178, 185, 190, 197, 226, 229, 234, 239, 253, 254, 259], "whl": 10, "There": [10, 251, 254, 255, 258, 262], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 173], "str": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 41, 48, 50, 51, 53, 54, 55, 58, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 103, 104, 107, 109, 111, 112, 113, 114, 115, 116, 120, 122, 123, 124, 125, 126, 127, 128, 138, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 181, 184, 185, 186, 187, 188, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 224, 226, 229, 234, 236, 237, 239, 245, 255], "from_vers": 11, "to_vers": 11, "intersect": 11, "eg": [11, 38, 39, 40, 46, 74], "v": [11, 104, 122, 171, 177, 254, 261], "longer": [11, 254], "fun": [11, 255], "self": [11, 48, 51, 52, 53, 54, 55, 73, 86, 96, 100, 103, 111, 125, 142, 144, 148, 152, 154, 157, 173, 185, 186, 187, 188, 189, 251, 258, 261], "x": [11, 22, 25, 98, 112, 118, 120, 122, 123, 125, 154, 157, 158, 160, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 220, 254, 255, 258, 261], "27": [11, 255, 258], "arg": [12, 14, 25, 38, 39, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 86, 94, 100, 101, 102, 103, 112, 123, 139, 143, 147, 173, 189, 210, 213, 217, 220, 245, 253, 261], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 22, 25, 32, 33, 37, 48, 50, 51, 53, 54, 55, 70, 71, 73, 76, 77, 78, 81, 82, 85, 87, 88, 92, 93, 95, 96, 97, 99, 102, 104, 110, 111, 124, 125, 142, 144, 145, 148, 149, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 179, 184, 185, 186, 187, 188, 189, 220, 258], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 49, 54, 55, 253, 261], "callabl": [13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 49, 51, 52, 53, 54, 55, 160, 227, 228, 243, 244, 245], "int": [13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 51, 52, 53, 54, 55, 58, 70, 71, 72, 73, 74, 78, 79, 82, 83, 86, 87, 89, 94, 95, 97, 100, 101, 103, 106, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 135, 142, 144, 145, 146, 148, 149, 154, 155, 161, 162, 165, 167, 168, 169, 171, 172, 173, 174, 175, 177, 179, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 211, 212, 213, 216, 217, 220, 222, 226, 229, 234, 236, 237, 239, 243, 244, 245, 258], "200": [13, 14, 16, 17, 48, 51, 53, 54, 55, 66, 67, 113, 114, 119, 132, 133, 258], "total_fram": [13, 14, 16, 17, 18, 19, 20, 220, 223, 241, 251, 253, 254, 255, 261], "create_env_kwarg": [13, 14, 16, 17, 49, 53, 54, 55, 253], "dict": [13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 48, 49, 51, 53, 54, 55, 96, 100, 104, 112, 113, 114, 115, 116, 120, 122, 123, 146, 149, 207, 208, 216, 227, 228, 229, 236, 239, 243, 244, 245, 255, 262], "postproc": [13, 14, 16, 17, 18, 19, 20, 253, 254], "preemptive_threshold": [13, 14], "float": [13, 14, 24, 26, 29, 30, 32, 35, 41, 48, 51, 53, 54, 55, 73, 75, 83, 86, 90, 91, 96, 98, 100, 103, 104, 117, 119, 121, 123, 125, 126, 127, 132, 133, 134, 136, 142, 144, 145, 148, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 218, 253, 254, 262], "given": [13, 14, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 48, 51, 52, 53, 54, 55, 73, 74, 83, 86, 96, 100, 103, 110, 111, 119, 125, 138, 143, 145, 147, 148, 149, 150, 151, 152, 154, 155, 160, 163, 164, 173, 184, 185, 186, 187, 188, 189, 212, 216, 241, 251, 253, 254, 255, 258, 262], "datacollector": [13, 14, 16, 17, 146, 149, 255], "recept": 13, "safe": [13, 14, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 138, 142, 143, 145, 146, 147, 148, 149, 151, 156, 253, 261], "env_mak": [13, 14, 16, 241, 262], "lambda": [13, 14, 16, 17, 21, 49, 167, 169, 188, 195, 196, 200, 201, 241, 250, 261, 262], "50": [13, 14, 16, 255, 258], "linear": [13, 14, 16, 48, 51, 52, 53, 54, 55, 73, 86, 96, 100, 103, 111, 112, 123, 125, 126, 127, 128, 132, 133, 138, 139, 140, 141, 144, 145, 146, 147, 148, 151, 152, 154, 155, 157, 173, 185, 186, 187, 188, 241, 253, 254, 257, 259, 261], "2000": [13, 14, 16, 255], "enumer": [13, 14, 16, 31, 33, 48, 51, 53, 54, 55, 250, 253, 254, 255, 261], "step_count": [13, 14, 16, 95, 254, 255, 261], "int64": [13, 14, 16, 23, 26, 27, 28, 29, 32, 65, 143, 145, 147, 154, 155, 231, 254, 255, 258, 261, 262], "shutdown": [13, 14, 16, 17, 253, 254, 261], "del": [13, 14, 16, 253, 254, 255, 257, 261, 262], "randompolici": [13, 14, 16, 18, 19, 20, 21, 247], "total": [13, 14, 16, 17, 18, 19, 20, 23, 27, 28, 29, 51, 162, 172, 174, 211, 213, 216, 220, 223, 224, 253, 254, 255, 257, 258, 259, 260, 261, 262], "lifespan": [13, 14, 16, 18, 19, 20], "divis": [13, 14, 16, 18, 19, 20], "endless": [13, 14, 16, 18, 19, 20], "accommod": [13, 14, 16, 17], "kept": [13, 14, 16, 17, 45, 54, 55, 74, 99, 106, 110, 121, 135, 136], "long": [13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 74, 254], "dictionari": [13, 14, 16, 17, 18, 19, 20, 25, 48, 51, 53, 54, 55, 96, 100, 146, 149, 243, 244, 245, 251, 253, 255, 258, 262], "span": [13, 14, 16, 17, 18, 19, 20], "unless": [13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 45, 48, 51, 53, 54, 55, 255], "n_step": [13, 14, 16, 17, 18, 19, 20, 145, 253, 255], "independ": [13, 14, 16, 17, 18, 19, 20, 99, 101, 250, 251, 253, 254, 261], "ignor": [13, 14, 16, 17, 18, 19, 20, 48, 51, 53, 54, 55, 74, 76, 93, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158, 173, 262], "mainli": [13, 14, 16, 17, 18, 19, 20, 258], "post": [13, 14, 16, 18, 19, 20, 48, 51, 53, 54, 55, 253, 254], "multistep": [13, 14, 16, 18, 19, 20, 253, 254], "accord": [13, 14, 16, 17, 18, 19, 20, 83, 91, 121, 126, 132, 135, 136, 258], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 174], "whole": [13, 14, 16, 25, 48, 51, 53, 54, 55, 100, 211, 254, 255], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 222, 241, 251, 253, 261], "async": [13, 14, 18, 19, 20, 253, 261], "ratio": [13, 14, 255], "finish": [13, 14], "rest": [13, 14, 255, 261], "earli": [13, 14, 253, 261], "load_state_dict": [13, 14, 16, 17, 48, 51, 53, 54, 55, 100, 104, 251, 253], "state_dict": [13, 14, 16, 17, 48, 51, 53, 54, 55, 100, 104, 173, 245, 251, 253, 254, 262], "ordereddict": [13, 14, 16, 17, 48, 51, 53, 54, 55, 100, 104, 254], "form": [13, 14, 17, 30, 31, 32, 33, 37, 48, 51, 53, 54, 55, 104, 160, 161, 162, 172, 174, 220], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 48, 51, 53, 54, 55, 100], "integ": [13, 14, 16, 17, 22, 27, 28, 29, 36, 46, 48, 51, 53, 54, 55, 79, 83, 95, 112, 123, 171, 177], "increment": [13, 14, 16, 17, 48, 51, 53, 54, 55, 95, 172], "env_fn": [13, 14, 16, 17, 49, 243, 244], "v0": [13, 14, 17, 51, 60, 61, 63, 64, 73, 100, 104, 241], "env_fn_parallel": [13, 14, 16, 17], "out_se": [13, 14, 16, 17, 262], "shut": [13, 14, 16, 17, 254], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 25, 37, 38, 39, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 86, 94, 96, 100, 101, 102, 103, 112, 113, 114, 115, 116, 120, 121, 123, 124, 131, 134, 136, 138, 139, 143, 146, 147, 149, 162, 172, 173, 180, 184, 185, 186, 187, 188, 189, 203, 207, 208, 210, 213, 220, 226, 227, 228, 229, 234, 236, 239, 242, 243, 244, 250, 253, 255, 261], "envcreat": [16, 21, 241, 242, 245, 247, 253, 254, 261, 262], "interruptor": 16, "_interruptor": 16, "outsid": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 48, 51, 53, 54, 55, 255, 261, 262], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 51, 53, 161, 162, 172, 174, 253, 257, 258, 261], "pin_memori": [17, 30, 31, 32, 33, 37, 54, 55, 85, 253, 261], "paradigm": 17, "regular": [17, 148, 149, 155, 166, 222, 251, 253, 262], "prefer": [17, 20, 30, 31, 32, 33, 87, 93, 255], "mere": 17, "greater": [17, 253, 254, 261], "signal": [17, 37, 95, 250, 253, 255], "sent": [17, 38, 39, 104], "server": 17, "length": [17, 20, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 54, 55, 87, 111, 112, 113, 115, 118, 123, 125, 138, 143, 147, 148, 152, 211, 217, 253, 254, 255, 258, 262], "postprocessor": 17, "format": [17, 28, 29, 48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173, 254, 262], "collector_class": [18, 19, 20], "collector_kwarg": [18, 19, 20], "num_workers_per_collector": [18, 19, 20], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20], "max_weight_update_interv": [18, 19, 20], "tcp_port": [18, 19, 20, 21], "deriv": [18, 19, 20, 220], "string": [18, 19, 20, 48, 51, 53, 54, 55, 86, 103, 146, 149, 160, 202, 219, 226, 234, 236, 239, 250, 255], "respect": [18, 19, 20, 48, 51, 53, 54, 55, 69, 73, 86, 87, 96, 100, 103, 133, 148, 152, 173, 215, 255], "copi": [18, 19, 20, 48, 51, 53, 54, 55, 88, 100, 110, 173, 250, 253, 254], "subnod": [18, 19, 20], "readi": [18, 20, 248, 255, 257], "serv": [18, 20, 62, 262], "fashion": [18, 20], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 48, 51, 53, 54, 55, 78], "seen": [18, 20, 250, 254], "turn": [18, 20, 80, 101, 216, 250, 253, 254, 258, 259], "mp": [18, 19, 20, 49, 104], "submitit_delai": [18, 21], "former": [18, 19, 20, 30, 31, 32, 33, 37, 48, 51, 53, 54, 55, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158], "whilst": [18, 19, 20], "latter": [18, 19, 20, 37, 48, 51, 53, 54, 55, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158, 173, 243, 244], "homonym": [18, 19, 20, 258], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 21], "port": [18, 19, 20, 21], "10003": [18, 19, 20, 21], "worker_rank": [18, 19], "update_interv": 19, "frequenc": [19, 253], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 29, 146, 149], "union": [20, 51, 112, 165, 175], "tensorpiperpcbackendopt": 20, "num_job": 21, "tcpport": 21, "submitit_main_conf": 21, "slurm_cpus_per_task": 21, "32": [21, 25, 66, 67, 112, 113, 114, 120, 123, 129, 130, 253, 254, 255, 258, 259, 261, 262], "slurm_gpus_per_nod": 21, "slurm_partit": 21, "timeout_min": 21, "submitit_collection_conf": 21, "delai": 21, "jump": 21, "host": [21, 48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "wherea": [21, 74, 251, 253], "default_config": 21, "default_slurm_conf_main": 21, "default_slurm_conf": 21, "boundedtensorspec": [21, 25, 139, 140, 141, 144, 145, 146, 247, 255, 258, 261, 262], "__name__": [21, 49, 254], "__main__": [21, 49], "rollout_tensordict": 22, "prefix": [22, 48, 51, 53, 54, 55, 100, 173, 202, 262], "max": [22, 29, 32, 41, 74, 97, 134, 135, 136, 162, 165, 175, 177, 253, 255], "durat": [22, 254], "tupl": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 51, 53, 54, 55, 83, 88, 113, 122, 123, 128, 163, 167, 173, 185, 186, 187, 188, 214, 218, 230, 232, 235, 238], "meta": [22, 34, 37, 50, 251, 255], "aren": 22, "discret": [23, 26, 27, 28, 29, 36, 74, 131, 154, 155, 165, 166, 254, 262], "5": [23, 30, 31, 32, 33, 49, 53, 64, 66, 67, 111, 112, 119, 121, 122, 123, 125, 135, 136, 143, 147, 154, 155, 171, 172, 179, 253, 254, 258, 259, 260, 261, 262], "assert_is_in": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36], "belong": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36], "otherwis": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 48, 51, 53, 54, 55, 74, 83, 96, 100, 104, 121, 135, 136, 168, 173, 177, 216, 217, 251, 253, 254, 255, 258, 262], "encod": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 74, 130, 131, 132, 143, 147, 154, 155, 160, 254, 255, 258], "val": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 254, 261], "ndarrai": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 51, 145], "np": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 51, 253, 258], "compli": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36], "current": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 48, 51, 53, 54, 55, 62, 87, 100, 107, 110, 119, 122, 133, 145, 154, 155, 166, 206, 226, 234, 251, 254, 255, 258, 261, 262], "least": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36], "complient": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36], "singleton": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 112, 123], "classmethod": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36], "implements_for_spec": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36], "torch_funct": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36], "overrid": [23, 24, 25, 26, 27, 28, 29, 31, 34, 35, 36, 245], "tensor_to_index": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36], "is_in": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 262], "project": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 74, 138, 142, 143, 144, 145, 146, 147, 148, 149, 254, 261, 262], "back": [23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 138, 143, 146, 147, 148, 149, 253, 255, 258], "rand": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 52, 57, 64, 111, 125, 258, 261, 262], "uniform": [23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 41], "unbound": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 96, 258], "squeez": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 94, 112, 254, 258], "dim": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 70, 71, 96, 101, 122, 245, 254, 258], "to_numpi": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36], "transformed_in": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 99, 100, 128, 134, 245], "to_one_hot": [23, 26, 27], "hot": [23, 26, 27, 28, 29, 74, 131, 143, 147, 154, 155, 254], "to_one_hot_spec": [23, 26, 27], "onehotdiscretetensorspec": [23, 26, 143, 147, 154, 155, 247], "convert": [23, 26, 27, 28, 29, 48, 51, 53, 54, 55, 73, 75, 86, 96, 100, 103, 104, 148, 160, 173, 254, 255, 258], "type_check": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36], "fill": [23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 96, 258, 259], "upper": 24, "unnam": 25, "effect": [25, 48, 51, 53, 54, 55, 92, 100, 220, 254, 262], "pixels_spec": 25, "observation_vector_spec": 25, "33": [25, 48, 51, 53, 54, 55, 112, 123, 255, 258], "composite_spec": 25, "observation_vector": [25, 71, 226, 229, 234, 236, 239, 253], "td": [25, 56, 57, 58, 59, 60, 61, 63, 64, 71, 74, 75, 81, 83, 98, 100, 104, 110, 111, 124, 125, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 186, 187, 188, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 211, 219, 226, 229, 231, 234, 236, 239, 250, 258, 261, 262], "within": [25, 32, 33, 48, 51, 53, 54, 55, 104, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158, 258, 261], "randn": [25, 83, 122, 128, 138, 139, 140, 141, 143, 146, 147, 148, 151, 152, 154, 155, 185, 186, 187, 188, 219, 261, 262], "td_project": 25, "include_nest": 25, "leaves_onli": 25, "itemsview": 25, "immedi": [25, 48, 51, 53, 54, 55, 184], "children": [25, 48, 51, 53, 54, 55], "keysview": 25, "reflect": [25, 110, 223, 255], "selected_kei": [25, 93, 253], "valuesview": 25, "onehottensorspec": 26, "categor": [26, 28, 29, 131, 143, 147, 154, 155], "action_valu": [26, 29, 143, 147, 154, 155, 231, 254], "arang": [26, 29, 143, 154, 211], "argmax": [26, 143, 147, 154, 155], "chosen_action_valu": [26, 29, 147, 231, 254], "outcom": [26, 29, 117, 134], "nvec": [27, 28], "cardin": [27, 28, 154, 155, 255], "ax": [27, 126, 127], "multionehotdiscretetensorspec": [27, 247], "use_regist": [28, 29], "to_categor": [28, 29], "to_categorical_spec": [28, 29], "multidiscretetensorspec": [28, 247], "unidimension": 29, "keepdim": 29, "user_regist": 29, "priori": 29, "definit": [29, 46], "uniqu": 29, "discretebox": [29, 262], "discretetensorspec": [29, 247, 262], "alpha": [30, 32, 41, 112, 165, 175, 177, 253, 254, 261], "ep": [30, 32, 41, 104, 145, 162, 178, 218], "1e": [30, 32, 41, 104, 117, 119, 128, 134, 255], "08": [30, 32, 41, 258], "collate_fn": [30, 31, 32, 33, 37, 261], "prefetch": [30, 31, 32, 33, 37, 253, 254], "schaul": [30, 41], "quan": [30, 41], "j": [30, 41, 48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173, 251, 254], "antonogl": [30, 41], "silver": [30, 41], "2015": [30, 41], "arxiv": [30, 41, 70, 86, 113, 114, 115, 116, 119, 120, 125, 127, 129, 130, 132, 133, 145, 154, 161, 166, 167, 168, 169, 170, 171, 174, 177, 178, 185, 190, 197, 226, 229, 234, 239, 253, 259], "ab": [30, 41, 86, 104, 119, 120, 125, 127, 129, 130, 132, 133, 161, 167, 168, 169, 170, 171, 174, 177, 226, 234, 253, 259], "1511": [30, 41, 120], "05952": [30, 41], "expon": [30, 32, 41], "\u03b1": [30, 32, 41], "determin": [30, 32, 37, 41, 86, 103, 145, 254], "delta": [30, 32, 41, 134, 146, 149, 247, 250], "ensur": [30, 32, 41, 45, 48, 51, 53, 54, 55, 70, 86, 104, 156, 253, 254, 255, 258], "null": [30, 32, 41, 69, 253], "max_siz": [30, 31, 32, 33, 38, 40, 46, 254], "1_000": [30, 31, 32, 33], "merg": [30, 31, 32, 33, 37, 258], "mini": [30, 31, 32, 33, 37], "style": [30, 31, 32, 33, 37], "decid": [30, 31, 32, 33, 261], "rb": [30, 31, 32, 33, 37, 254, 259, 261], "meth": [30, 31, 32, 33], "incompat": [30, 31, 32, 33, 253, 254], "advanc": [30, 31, 32, 33, 254], "drop_last": [30, 31, 32, 33, 45], "return_info": [30, 31, 32, 33, 37], "tensordictprioritizedreplaybuff": [30, 247, 261], "simplifi": [30, 258], "manual_se": [30, 31, 32, 33, 74, 83, 138, 144, 145, 253, 258, 261, 262], "info": [30, 31, 32, 33, 37, 48, 51, 53, 54, 55, 66, 67, 105], "_weight": [30, 32, 261], "arrai": [30, 253], "update_prior": [30, 41, 217, 251, 261], "36278465": 30, "insert_transform": [30, 31, 32, 33, 37], "insert": [30, 31, 32, 33, 37, 43, 47, 101, 254], "posit": [30, 31, 32, 33, 37, 48, 51, 53, 54, 55, 78, 79, 94, 95, 97, 100, 101, 128, 250, 255, 258], "writer": [31, 33, 37, 43, 247, 255], "randomsampl": [31, 33, 37, 247, 253], "roundrobinwrit": [31, 33, 37, 247], "priority_kei": [32, 33, 164, 165, 166, 171, 175, 177, 179, 261], "td_error": [32, 33, 163, 164, 165, 166, 171, 175, 177, 179, 253, 261], "reduct": [32, 41], "prioritizedreplaybuff": [32, 247, 261], "update_tensordict_prior": [32, 253, 261], "prioritizedsampl": [32, 33, 247, 253], "min": [32, 41, 134, 135, 136, 162, 165, 175, 177, 253, 254, 255], "median": [32, 41, 146, 149], "len": [32, 112, 123, 253, 254, 258, 259, 261], "include_info": [32, 33, 37], "kw": [33, 43, 254], "int32": [33, 64], "describ": [34, 71, 99, 134, 135, 206, 226, 234, 250, 255, 258, 262], "doubl": [35, 48, 51, 53, 54, 55, 73, 75, 86, 96, 98, 100, 103, 148, 164, 166, 170, 173, 175, 178, 253, 254, 255, 262], "from_env": 37, "use_timeout_as_don": 37, "env_kwarg": [37, 243, 244, 253], "metadata": [37, 253, 255, 262], "transit": [37, 48, 51, 53, 54, 55, 153, 253, 254, 258], "reconstruct": [37, 168, 262], "timeout": 37, "recov": [37, 142, 144, 145, 150, 171, 257], "regard": [37, 154, 161, 166, 174, 255, 258], "get_dataset": 37, "qlearning_dataset": 37, "less": [37, 53, 243, 244, 250, 253, 254, 255, 261], "left": [37, 86, 88, 97, 99, 103, 253, 254, 255], "terminate_on_end": 37, "possess": 37, "unexpectedli": 37, "particular": [37, 48, 51, 53, 54, 55, 100, 250, 251, 254, 257], "episod": [37, 92, 111, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 254], "absent": 37, "traj_split": 37, "observationnorm": [37, 104, 245, 253, 254, 255, 261], "maze2d": 37, "umaz": 37, "loc": [37, 83, 91, 121, 128, 135, 136, 139, 140, 141, 146, 149, 151, 224, 226, 234, 236, 239, 245, 253, 254, 255, 261], "128": [37, 114, 253, 254, 258, 259], "scratch_dir": [38, 253], "memmap": [38, 54, 55, 104, 217], "attach": [38, 39, 40, 46, 254], "entiti": [38, 39, 40, 46], "guarante": [38, 39, 40, 46, 48, 51, 53, 54, 55, 104, 261], "made": [38, 39, 40, 46, 48, 51, 53, 54, 55, 145, 253, 259], "alloc": [39, 253], "max_capac": [41, 253], "uniformli": [42, 262], "roundrobin": 43, "piec": [43, 47, 255, 258], "consum": [45, 255], "incomplet": 45, "unlik": [45, 166, 174, 254, 261], "fresh": 45, "caution": [45, 106, 262], "shuffl": 45, "haven": [45, 259], "similarli": [45, 48, 51, 53, 54, 55, 150, 151, 171, 253, 262], "remain": [45, 74, 127], "enforc": [45, 48, 51, 53, 54, 55, 100, 150, 258], "draw": 45, "duplic": [45, 48, 51, 53, 54, 55, 164, 166, 173], "__len__": 46, "_inplace_upd": [48, 53, 54, 55, 56, 57, 65, 66, 67, 100], "_batch_lock": [48, 53, 54, 55, 56, 57, 65, 66, 67, 100], "run_type_check": [48, 52], "add_modul": [48, 51, 53, 54, 55], "child": [48, 51, 53, 54, 55], "fn": [48, 51, 53, 54, 55, 128, 243, 244], "recurs": [48, 51, 53, 54, 55, 173], "init": [48, 51, 53, 54, 55, 253, 254, 255], "init_weight": [48, 51, 53, 54, 55], "m": [48, 51, 53, 54, 55, 74, 149, 258], "fill_": [48, 51, 53, 54, 55, 254, 262], "net": [48, 51, 53, 54, 55, 122, 175, 236, 241, 254, 258, 259, 261], "in_featur": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 112, 113, 114, 115, 116, 122, 123, 126, 127, 139, 148, 173, 261], "out_featur": [48, 51, 52, 53, 54, 55, 73, 86, 96, 100, 103, 111, 112, 113, 114, 115, 116, 119, 120, 122, 123, 125, 126, 127, 139, 143, 148, 173, 253, 261], "bia": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 112, 119, 123, 126, 127, 128, 144, 145, 148, 158, 159, 160, 173, 250, 254, 255, 261], "requires_grad": [48, 51, 53, 54, 55, 253], "batch_lock": [48, 50, 51, 53, 54, 55, 96, 100, 258], "environn": [48, 51, 52, 53, 54, 55, 100], "immut": [48, 51, 53, 54, 55, 88, 100, 226, 234], "bfloat16": [48, 51, 53, 54, 55], "cast": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 104, 148, 173, 226, 229, 231, 234, 236, 239, 262], "datatyp": [48, 51, 53, 54, 55, 173], "member": [48, 51, 53, 54, 55, 173], "xdoctest": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "skip": [48, 51, 53, 54, 55, 79, 100, 106, 146, 149, 173, 202, 203, 213, 216, 255, 258], "buf": [48, 51, 53, 54, 55], "20l": [48, 51, 53, 54, 55, 173], "1l": [48, 51, 53, 54, 55, 173], "5l": [48, 51, 53, 54, 55, 173], "associ": [48, 51, 53, 54, 55, 132, 173, 245], "eval": [48, 51, 53, 54, 55, 100, 104, 253, 254, 255], "evalu": [48, 51, 53, 54, 55, 100, 117, 131, 136, 175, 227, 228, 254, 255], "dropout": [48, 51, 53, 54, 55, 100, 123], "batchnorm": [48, 51, 53, 54, 55, 100, 173], "disabl": [48, 51, 53, 54, 55, 100, 121, 135, 136, 253], "comparison": [48, 51, 53, 54, 55, 100], "similar": [48, 51, 53, 54, 55, 73, 86, 96, 100, 102, 103, 104, 146, 148, 149, 173, 250, 253, 254, 255, 258, 262], "confus": [48, 51, 53, 54, 55, 100], "extra_repr": [48, 51, 53, 54, 55], "represent": [48, 51, 53, 54, 55, 86, 103, 253, 258, 259, 262], "fake_tensordict": [48, 51, 53, 54, 55, 253, 254], "fake": [48, 51, 53, 54, 55, 253, 254], "overridden": [48, 51, 53, 54, 55, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158], "recip": [48, 51, 53, 54, 55, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158], "afterward": [48, 51, 53, 54, 55, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158, 262], "silent": [48, 51, 53, 54, 55, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 128, 129, 130, 132, 133, 142, 144, 145, 158], "get_buff": [48, 51, 53, 54, 55], "throw": [48, 51, 53, 54, 55, 262], "docstr": [48, 51, 53, 54, 55], "get_submodul": [48, 51, 53, 54, 55], "explan": [48, 51, 53, 54, 55], "qualifi": [48, 51, 53, 54, 55], "referenc": [48, 51, 53, 54, 55], "attributeerror": [48, 51, 53, 54, 55], "invalid": [48, 51, 53, 54, 55], "resolv": [48, 51, 53, 54, 55], "get_extra_st": [48, 51, 53, 54, 55, 104], "set_extra_st": [48, 51, 53, 54, 55, 104], "picklabl": [48, 51, 53, 54, 55, 104], "pickl": [48, 51, 53, 54, 55, 104], "get_paramet": [48, 51, 53, 54, 55], "sai": [48, 51, 53, 54, 55, 259, 262], "net_b": [48, 51, 53, 54, 55], "net_c": [48, 51, 53, 54, 55], "conv": [48, 51, 53, 54, 55, 112, 254], "conv2d": [48, 51, 53, 54, 55, 112, 261], "16": [48, 51, 53, 54, 55, 255, 258, 259], "kernel_s": [48, 51, 53, 54, 55, 112, 113, 114, 254, 261], "stride": [48, 51, 53, 54, 55, 112, 113, 114, 120, 254, 261], "diagram": [48, 51, 53, 54, 55], "show": [48, 51, 53, 54, 55, 253, 254, 255, 258, 261], "itself": [48, 51, 53, 54, 55, 173, 255], "degre": [48, 51, 53, 54, 55], "named_modul": [48, 51, 53, 54, 55], "o": [48, 51, 53, 54, 55], "half": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173, 253], "ipu": [48, 51, 53, 54, 55], "strict": [48, 51, 53, 54, 55, 100], "descend": [48, 51, 53, 54, 55, 100], "exactli": [48, 51, 53, 54, 55, 62, 100, 253], "persist": [48, 51, 53, 54, 55, 100, 110, 173], "missing_kei": [48, 51, 53, 54, 55, 100], "unexpected_kei": [48, 51, 53, 54, 55, 100], "namedtupl": [48, 51, 53, 54, 55, 100], "l": [48, 51, 53, 54, 55, 184, 255, 258], "idx": [48, 51, 53, 54, 55], "named_buff": [48, 51, 53, 54, 55, 254], "remove_dupl": [48, 51, 53, 54, 55, 173], "prepend": [48, 51, 53, 54, 55, 173], "running_var": [48, 51, 53, 54, 55], "named_children": [48, 51, 53, 54, 55], "conv4": [48, 51, 53, 54, 55], "conv5": [48, 51, 53, 54, 55], "memo": [48, 51, 53, 54, 55], "named_paramet": [48, 51, 53, 54, 55, 173, 254], "rand_act": [48, 51, 53, 54, 55], "register_backward_hook": [48, 51, 53, 54, 55], "removablehandl": [48, 51, 53, 54, 55], "deprec": [48, 51, 53, 54, 55, 100, 262], "favor": [48, 51, 53, 54, 55, 255], "register_full_backward_hook": [48, 51, 53, 54, 55], "register_buff": [48, 51, 53, 54, 55, 173], "running_mean": [48, 51, 53, 54, 55, 173], "alongsid": [48, 51, 53, 54, 55, 173], "num_featur": [48, 51, 53, 54, 55, 173], "register_forward_hook": [48, 51, 53, 54, 55, 154, 155], "with_kwarg": [48, 51, 53, 54, 55], "signatur": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 157, 173, 250, 258], "possibli": [48, 51, 53, 54, 55, 112, 138, 143, 146, 147, 148, 152, 220, 255, 258, 262], "register_module_forward_hook": [48, 51, 53, 54, 55], "register_forward_pre_hook": [48, 51, 53, 54, 55], "invok": [48, 51, 53, 54, 55], "And": [48, 51, 53, 54, 55], "forward_pr": [48, 51, 53, 54, 55], "register_module_forward_pre_hook": [48, 51, 53, 54, 55], "grad_input": [48, 51, 53, 54, 55], "grad_output": [48, 51, 53, 54, 55], "subsequ": [48, 51, 53, 54, 55], "technic": [48, 51, 53, 54, 55, 254], "caller": [48, 51, 53, 54, 55], "register_module_full_backward_hook": [48, 51, 53, 54, 55], "register_full_backward_pre_hook": [48, 51, 53, 54, 55], "backward_pr": [48, 51, 53, 54, 55], "register_module_full_backward_pre_hook": [48, 51, 53, 54, 55], "register_load_state_dict_post_hook": [48, 51, 53, 54, 55], "incompatible_kei": [48, 51, 53, 54, 55], "thrown": [48, 51, 53, 54, 55], "clear": [48, 51, 53, 54, 55, 212], "register_modul": [48, 51, 53, 54, 55, 251], "alia": [48, 51, 53, 54, 55], "register_paramet": [48, 51, 53, 54, 55], "register_state_dict_pre_hook": [48, 51, 53, 54, 55], "keep_var": [48, 51, 53, 54, 55, 100], "requires_grad_": [48, 51, 53, 54, 55, 253], "autograd": [48, 51, 53, 54, 55, 100], "freez": [48, 51, 53, 54, 55], "finetun": [48, 51, 53, 54, 55], "gan": [48, 51, 53, 54, 55], "_step": [48, 51, 53, 54, 55, 78, 88], "privat": [48, 51, 53, 54, 55, 258, 262], "_reset": [48, 51, 52, 53, 54, 55, 111, 125], "callback": [48, 51, 53, 54, 55], "auto_reset": [48, 51, 53, 54, 55, 254, 258], "auto_cast_to_devic": [48, 51, 53, 54, 55], "break_when_any_don": [48, 51, 53, 54, 55], "return_contigu": [48, 51, 53, 54, 55, 106, 257], "soon": [48, 51, 53, 54, 55], "lazystackedtensordict": [48, 51, 52, 53, 54, 55, 111, 125, 257, 261, 262], "concomitt": [48, 51, 53, 54, 55], "share_memori": [48, 49, 51, 53, 54, 55, 253], "share_memory_": [48, 51, 53, 54, 55, 261], "workspac": [48, 51, 53, 54, 55], "destin": [48, 51, 53, 54, 55, 100, 110], "averag": [48, 51, 53, 54, 55, 100, 104, 145, 167, 168, 218, 253, 255], "shallow": [48, 51, 53, 54, 55, 100], "pleas": [48, 51, 53, 54, 55, 100, 248], "detach": [48, 51, 53, 54, 55, 100, 185, 186, 187, 188, 253, 254], "carri": [48, 51, 53, 54, 55, 254, 258], "non_block": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173, 254], "memory_format": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "channels_last": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "Its": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173, 189], "complex": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173, 253, 254], "integr": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 116, 125, 148, 173, 258, 259], "unchang": [48, 51, 53, 54, 55, 73, 74, 86, 96, 100, 103, 148, 173], "tri": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "pin": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "4d": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "ignore_w": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "1913": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "3420": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "5113": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "2325": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "torch_doctest_cuda1": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "gpu1": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "1914": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "5112": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "2324": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "float16": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "cdoubl": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "3741": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "2382": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "5593": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "4443": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "complex128": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "6122": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "1150": [48, 51, 53, 54, 55, 73, 86, 96, 100, 103, 148, 173], "to_empti": [48, 51, 53, 54, 55], "dst_type": [48, 51, 53, 54, 55], "xpu": [48, 51, 53, 54, 55], "set_to_non": [48, 51, 53, 54, 55], "creator": [49, 227, 228, 243, 244, 245], "substitut": [49, 104], "vecnorm": [49, 245], "discount": [49, 166, 167, 169, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 250, 253, 254, 255], "env_creat": [49, 253], "test_env1": 49, "_td": 49, "observation_count": [49, 262], "test_env2": 49, "sleep": [49, 262], "p1": 49, "p2": 49, "join": [49, 226, 234, 255], "9934": 49, "env_str": 50, "discard": [51, 110, 202, 262], "info_dict_read": 51, "set_info_dict_read": 51, "put": [51, 104, 245, 254, 255, 258], "f": [51, 160, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 253, 254, 255, 258, 262], "read_act": 51, "read_don": 51, "reader": [51, 253, 254], "frame_skip": [51, 58, 59, 60, 63, 79, 213, 216, 223, 251, 253, 255, 261], "broken": [51, 106], "read_ob": 51, "dictat": [51, 146, 149, 258], "inner": [51, 74, 251, 253, 255, 262], "read_reward": 51, "total_reward": 51, "step_reward": 51, "far": [51, 121, 135, 136, 258, 262], "baseinfodictread": 51, "info_dict": 51, "hoc": 51, "manner": [51, 86, 253, 254, 255, 257, 258], "dict_read": 51, "default_info_dict_read": 51, "my_info_kei": 51, "some_env": 51, "limit": [52, 253, 258], "safeti": 52, "constraint": [52, 255], "behav": [52, 62, 131, 171, 259], "unboundedcontinuoustensorspec": [52, 96, 111, 138, 139, 140, 141, 148, 151, 152, 247, 255, 258, 262], "mymbenv": [52, 111, 125], "world_model": [52, 111, 125, 168], "super": [52, 111, 125, 152, 154, 157, 253, 254, 258, 261], "hidden_observ": [52, 111, 125], "mlp": [52, 111, 112, 113, 114, 115, 116, 122, 125, 139, 143, 226, 234, 236, 239, 247, 253, 254, 257, 259, 261], "worldmodelwrapp": [52, 111, 125, 247], "activation_class": [52, 111, 112, 113, 114, 115, 116, 119, 120, 123, 125, 253, 254, 261], "relu": [52, 111, 125, 128, 160], "activate_last_lay": [52, 111, 116, 123, 125], "depth": [52, 111, 112, 113, 114, 115, 116, 119, 120, 123, 125, 129, 130, 143, 254, 257], "equal": [53, 54, 55, 82, 83, 112, 118, 123, 181, 211, 243, 244, 255, 259], "readthedoc": 53, "en": 53, "python_interfac": 53, "num_work": [53, 54, 55, 253, 254], "thread": 53, "task_id": 53, "my_env_fun": [54, 55], "custom_attribute_list": [54, 55], "custom_attribut": [54, 55], "custom_method_list": [54, 55], "custom_method": [54, 55], "deploi": [54, 55], "creation": [54, 55, 262], "slight": [54, 55, 254], "overhead": [54, 55], "share_individual_td": [54, 55], "lazi": [54, 55, 86, 126, 150, 151, 253, 254, 257, 262], "shared_memori": [54, 55], "policy_proof": [54, 55], "ll": [54, 55, 253, 254, 255, 262], "hidden": [54, 55, 119, 122, 129, 130, 132, 133, 139, 140, 141, 148, 151, 226, 234, 257, 261], "allow_step_when_don": [54, 55], "update_kwarg": [54, 55], "googl": [56, 57, 255], "ant": [56, 57, 259], "get_environ": 57, "87": [57, 258], "acrobot": [57, 262], "fetch": [57, 259, 262], "dm_control": [58, 59, 253, 257, 262], "task_nam": 58, "cheetah": [58, 59, 253, 262], "placehold": [62, 100], "secur": 62, "jumanji": [63, 64], "snake": [63, 64], "6x6": [63, 64], "td1": [64, 161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179], "12x12": 64, "tsp50": 64, "tsp100": 64, "dataset_nam": 65, "adult_num": 65, "adult_onehot": 65, "mushroom_num": 65, "mushroom_onehot": 65, "covertyp": 65, "shuttl": 65, "magic": 65, "empti": [65, 86, 97, 100, 103, 253, 258], "106": [65, 258], "vma": [66, 67], "scenario_nam": 66, "flock": [66, 67], "num_env": [66, 67], "continuous_act": [66, 67], "scenario": [66, 67, 253, 258], "n_agent": [66, 67], "cohesion_rew": [66, 67], "collision_rew": [66, 67], "separation_rew": [66, 67], "velocity_rew": [66, 67], "18": [66, 67, 255, 258, 259, 262], "model_bas": [68, 111, 125], "transform_reward_spec": [69, 73, 75, 88, 90, 91, 99, 101], "success": [70, 99, 254, 258, 261], "account": [70, 254], "movement": 70, "veloc": [70, 258, 262], "propos": [70, 124, 170, 178, 236, 239], "pdf": [70, 113, 114, 115, 116, 145, 154, 166, 175, 178, 185, 190, 197, 229, 236, 239], "1312": 70, "5602": 70, "_buffer": [70, 97], "transform_observation_spec": [70, 71, 72, 73, 75, 76, 78, 80, 81, 83, 88, 89, 92, 93, 95, 96, 97, 98, 99, 101, 258], "del_kei": [71, 254, 257, 258], "unsqueeze_if_oor": 71, "observation_posit": 71, "observation_veloc": 71, "delet": 71, "unsqueez": [71, 98, 101, 122, 258], "key1": [71, 211, 219], "key2": [71, 211, 219], "crop": [72, 87, 203], "center": [72, 203], "width": [72, 89], "height": [72, 89], "squar": [72, 121, 135, 136, 203], "rewardsc": [73, 100, 253, 254], "rewardclip": 73, "transformed_env": [73, 99, 100], "tranform": [73, 76, 81, 93, 95, 99, 102, 254], "dest": [73, 86, 103, 148], "transform_input_spec": [73, 74, 75, 83, 88, 95, 99, 101], "num_actions_effect": 74, "max_act": 74, "action_kei": [74, 111, 124, 125, 142, 144, 145], "include_forward": 74, "dimension": [74, 185, 190, 197], "num_act": [74, 165, 254], "action_out": 74, "_call": [74, 78, 258], "inde": [74, 255, 258], "expos": [75, 150], "extern": [75, 262], "excluded_kei": 76, "finit": 77, "first_dim": 78, "last_dim": 78, "allow_positive_dim": [78, 101], "flatten": [78, 217, 253, 254], "th": [78, 101, 258], "permit": [78, 101], "exclus": [78, 245], "frameskip": 78, "repeatedli": [79, 255], "init_kei": 81, "is_init": 81, "tracker": 81, "noop": [82, 261], "30": [82, 132, 133, 254, 255, 258], "op": [82, 142, 144, 222], "randomli": [82, 83, 96, 146, 149, 258], "noop_max": 82, "out_keys_inv": [83, 84, 88, 99, 258], "standard_norm": [83, 91, 253, 254], "affin": [83, 91], "layer": [83, 104, 112, 113, 114, 119, 123, 126, 127, 129, 130, 137, 253, 254, 255, 259], "normal": [83, 104, 112, 121, 123, 128, 135, 136, 142, 146, 149, 162, 172, 174, 216, 218, 245, 251, 262], "set_default_tensor_typ": 83, "doubletensor": 83, "isclos": 83, "next_ob": [83, 185, 186, 187, 188, 253, 261], "rubric": [83, 151], "init_stat": [83, 253, 254, 255], "3752e": 83, "01": [83, 145, 158, 161, 162, 172, 174, 255, 258, 259, 260], "5087e": 83, "03": [83, 255, 258, 259, 260], "9294e": 83, "9636": 83, "5608": [83, 258], "6408": 83, "num_it": [83, 254, 255], "reduce_dim": [83, 253, 254, 255], "cat_dim": [83, 253, 254, 255], "keep_dim": [83, 254], "constant": [83, 251, 253, 255, 262], "statist": [83, 104, 176, 245, 253, 254, 255, 262], "approach": [83, 253, 255, 262], "gaussian": [83, 96, 111, 125, 126, 127, 142, 255], "empir": [83, 111, 125, 146, 149, 255], "3d": 83, "third": 83, "r3m": [86, 259], "resnet": [86, 103], "visual": [86, 103, 255, 258], "embed": [86, 102, 103, 138, 139, 140, 141, 143, 147, 148, 152, 259], "ego4d": [86, 103], "paper": [86, 103, 170, 236, 239, 253, 255], "univers": [86, 103], "suraj": 86, "nair": 86, "aravind": 86, "rajeswaran": 86, "vikash": [86, 103], "kumar": [86, 103], "chelsea": 86, "finn": 86, "abhinav": 86, "gupta": 86, "2203": [86, 125, 259], "12601": [86, 259], "_init": 86, "snippet": [86, 253], "resnet50": [86, 103, 259], "model_nam": [86, 103, 206], "resnet34": 86, "resnet18": 86, "r3m_vec": [86, 259], "feed": [86, 103], "244": [86, 103, 258], "stack_imag": [86, 103], "tread": [86, 103], "separet": [86, 103], "hub": [86, 103, 259], "cach": [86, 100, 103, 212, 259], "public": [86, 103], "resnet50_weight": [86, 103], "imagenet1k_v1": [86, 103], "download_path": [86, 103], "tensor_pixels_kei": [86, 103], "sub_seq_len": 87, "sample_dim": 87, "mask_kei": 87, "primarili": 87, "hesit": 87, "request": 87, "robust": 87, "vari": 87, "mix": 87, "NOT": 87, "improp": 87, "create_copi": 88, "renam": [88, 110, 253], "stuff": 88, "braxenv": [88, 247], "newnam": 88, "transform_output_spec": [88, 99], "untouch": [88, 99], "transform_done_spec": [88, 99], "interpol": [89, 254], "bilinear": 89, "clamp_min": [90, 145], "clamp_max": 90, "clip_min": 90, "scalar": [90, 114, 116, 126, 127, 142, 144, 145, 158, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 254, 258], "clip_max": 90, "episode_": 92, "reward1": 92, "reward2": 92, "ho": 92, "excludetransform": 93, "squeeze_dim": 94, "recognis": 95, "primer": 96, "default_valu": 96, "drawn": [96, 146, 149, 255], "unit": [96, 111, 119, 129, 130, 132, 133, 255], "transfomedenv": 96, "lock": [96, 104, 258], "mykei": 96, "dtype_or_devic": 96, "pool": 97, "255": [98, 258], "ri": 98, "randint": [98, 253], "principl": 99, "cattransform": 99, "notabl": 99, "cache_spec": 100, "anymor": [100, 148, 253], "unsqueeze_dim": [101, 258], "danger": 101, "vip": [102, 103, 259], "toward": 103, "implicit": [103, 171], "jason": 103, "ma": 103, "shagun": 103, "sodhani": 103, "dinesh": 103, "jayaraman": 103, "osbert": 103, "bastani": 103, "ami": 103, "zhang": 103, "vip_vec": 103, "shared_td": 104, "decai": [104, 142, 144, 218, 253, 254, 262], "9999": [104, 258], "0001": [104, 119, 128, 255, 258], "fly": [104, 172, 250, 255, 258, 262], "to_observation_norm": 104, "99": [104, 125, 169, 180, 184, 241, 253, 254, 255, 258, 259, 261], "underflow": [104, 218], "build_td_for_shared_vecnorm": 104, "memmori": 104, "memmap_": 104, "queue": 104, "td_share": 104, "state_dim": [105, 132, 133], "action_dim": [105, 113, 115, 257], "gsde": [105, 175, 245], "func": 105, "gsdemodul": 105, "check_dtyp": 106, "short": [106, 255], "discrep": [106, 161, 162, 163, 164, 172, 174, 176], "imposs": 106, "heterogen": [106, 254], "probabilistictdmodul": [109, 123, 146, 149, 184, 216], "next_tensordict": [110, 253], "keep_oth": [110, 258], "exclude_reward": 110, "exclude_don": 110, "exclude_act": 110, "THe": 110, "next_": 110, "funtion": [110, 258], "planning_horizon": [111, 125], "optim_step": [111, 125], "num_candid": [111, 125], "top_k": [111, 125], "reward_kei": [111, 125, 214, 218], "cross": 111, "entropi": [111, 161, 162, 165, 172, 174, 175, 177], "botev": 111, "et": 111, "al": [111, 231, 262], "2013": 111, "cem": 111, "plan": [111, 124, 125], "varianc": [111, 121, 128, 135, 136, 250, 255], "rank": 111, "k": [111, 254], "repeat": [111, 255, 258], "maximis": [111, 113, 115, 125, 253, 255, 258], "horizon": [111, 125, 255], "modelbasedenv": [111, 125], "mpc": [111, 124, 125], "candid": [111, 125], "modelbasedenvbas": [111, 124, 125, 247], "safemodul": [111, 124, 139, 141, 149, 227, 228, 241, 247, 261], "next_hidden_observ": 111, "num_cel": [112, 113, 114, 115, 116, 119, 120, 123, 139, 253, 254, 255, 261], "elu": [112, 113, 114, 115, 116, 119, 120, 254, 261], "activation_kwarg": [112, 123], "norm_class": [112, 113, 114, 123], "norm_kwarg": [112, 123], "bias_last_lay": [112, 113, 114, 115, 116, 120, 123], "aggregator_class": [112, 113, 114, 254, 261], "squashdim": [112, 113, 261], "aggregator_kwarg": [112, 113, 114, 254], "squeeze_output": [112, 113, 114, 254], "convolut": [112, 113, 114], "neural": [112, 148, 254, 255, 258, 262], "produc": [112, 123, 131, 139, 141, 203, 255, 262], "cell": [112, 123, 255], "kernel": [112, 120, 122], "device_typ": [112, 113, 114, 115, 116, 120, 123, 126, 127], "cnet": 112, "34": [112, 123, 255, 258], "35": [112, 123, 255, 258, 259, 260], "rectangular": 112, "conv_net_kwarg": [113, 114], "mlp_net_kwarg": [113, 114, 115], "use_avg_pool": [113, 114], "WITH": [113, 114, 115, 116, 145, 178, 229], "1509": [113, 114, 115, 116, 125, 145, 170, 178, 229, 253], "02971": [113, 114, 115, 116, 145, 178, 229, 253], "convnet": [113, 247, 261], "ndims_in": 113, "avgpool": [113, 114], "adaptiveavgpool2d": [114, 254], "400": [115, 116, 258], "300": [115, 116, 226, 234, 258], "mlp_net_kwargs_net1": 116, "mlp_net_kwargs_net2": 116, "atol": [117, 134], "06": [117, 134, 255, 258], "rtol": [117, 134], "batch_shap": [117, 134], "event_shap": [117, 134], "absolut": [117, 134], "toler": [117, 134], "log_prob": [117, 131, 136], "densiti": [117, 131, 136], "mass": [117, 131, 136, 258], "rsampl": [117, 131, 149], "sample_shap": [117, 131], "dqnet": 118, "atom": 118, "std_bia": 119, "std_min_val": 119, "predict": [119, 124, 125, 153, 166, 168, 169, 184, 254], "belief": [119, 129, 132, 133], "1912": [119, 167, 168, 169], "01603": [119, 167, 168, 169], "softplu": [119, 128, 158, 159, 160], "out_features_valu": 120, "cnn_kwarg": [120, 254], "mlp_kwarg": [120, 122, 254], "duel": [120, 254], "cnn": [120, 254, 261], "06581": 120, "512": [120, 258], "upscal": [121, 135, 136], "tanh_loc": [121, 135, 136], "event_dim": [121, 134, 135], "ultim": [121, 135, 136], "poor": [121, 135, 136], "explos": [121, 135, 136], "switch": [121, 135, 136], "sigma": [121, 135, 136, 142, 145, 255], "formula": [121, 135, 136, 161, 162, 172, 174, 250, 255], "lstm_kwarg": 122, "embedd": 122, "next_observ": [122, 257], "time_step": 122, "2d": 122, "hidden_s": 122, "input_s": 122, "hidden0_in": 122, "hidden1_in": 122, "hidden0_out": 122, "hidden1_out": 122, "single_bias_last_lay": 123, "layer_class": 123, "layer_kwarg": 123, "perceptron": 123, "seamless": 123, "reshap": [123, 255], "lazylinear": [123, 255, 258, 259, 261], "42": [123, 220, 255, 258], "noisylinear": [123, 126, 247, 254], "noisylazylinear": [123, 247], "At": [124, 255, 257, 258, 259], "mpcplanner": 124, "tensordict_out": [124, 262], "advantage_modul": [125, 255], "temperatur": [125, 171], "mppi": 125, "covari": 125, "william": [125, 176], "aldrich": 125, "theodor": 125, "01149": 125, "tempor": [125, 186, 187, 191, 192, 254], "hansen": 125, "wang": 125, "su": 125, "04955": 125, "ndunboundedcontinuoustensorspec": [125, 151], "valueoper": [125, 139, 140, 141, 161, 162, 172, 174, 176, 241, 247, 253, 255], "tdlambdaestim": [125, 247], "value_net": [125, 185, 186, 187, 188, 255], "adv": 125, "95": [125, 180, 253, 254, 255, 258, 259], "std_init": [126, 127], "term": [126, 127, 160, 161, 165, 222, 254, 255], "matrix": [126, 127], "initialize_paramet": 126, "isol": [126, 254], "1706": 127, "10295v3": 127, "induc": 127, "aid": 127, "emploi": 127, "scale_map": 128, "biased_softplus_1": 128, "scale_lb": [128, 132, 133], "exp": [128, 160], "module_norm": 128, "decod": 129, "1803": [129, 130], "10122": [129, 130], "rnn_hidden": 129, "latent": 130, "logit": 131, "excacli": 131, "hidden_dim": [132, 133], "posterior": [132, 168], "rssm": [132, 133, 168], "1811": [132, 133, 258], "04551": [132, 133], "obs_embed": 132, "rnn_hidden_dim": 133, "dream": 133, "recurr": [133, 254], "tanhtransform": 135, "tensordict_modul": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "translat": [138, 146], "character": [138, 143, 146, 147, 148], "overflow": [138, 143, 146, 147, 148, 149], "td_modul": [138, 139, 140, 141, 146, 148, 149, 151, 152, 261], "3635": 138, "0340": 138, "1476": 138, "3911": 138, "1664": 138, "5455": [138, 258], "2247": 138, "4583": 138, "2916": 138, "2160": 138, "5337": 138, "5193": 138, "grad_fn": [138, 144, 261], "addmmbackward0": 138, "get_policy_oper": [139, 140, 141, 226, 234], "alon": [139, 140, 141], "tdmodul": [139, 140, 141, 241], "get_critic_oper": 139, "common_oper": [139, 141], "policy_oper": [139, 140, 141], "value_oper": [139, 140, 141], "probabilisticactor": [139, 140, 141, 165, 171, 177, 247, 253, 255], "tanhnorm": [139, 140, 141, 146, 151, 247, 255, 261], "normalparamwrapp": [139, 140, 141, 146, 151, 247, 261], "spec_hidden": [139, 141], "module_hidden": [139, 141], "td_module_hidden": [139, 141], "spec_act": [139, 141], "module_act": [139, 141], "td_module_act": [139, 140, 141], "distribution_class": [139, 140, 141, 146, 149, 151, 253, 255, 261], "return_log_prob": [139, 140, 141, 146, 149, 151, 255, 261], "module_valu": [139, 140, 141], "td_module_valu": [139, 140, 141], "state_action_valu": [139, 152, 177, 184, 229, 236, 239, 241, 253, 261], "td_clone": [139, 140, 141], "sample_log_prob": [139, 140, 141, 146, 149, 151, 226, 234, 236, 255, 261], "tensordictmodulewrapp": [139, 227, 228, 241], "get_value_oper": [139, 140, 141, 226, 234], "action_modul": 140, "state_valu": [140, 141, 152, 177, 185, 186, 187, 188, 190, 191, 193, 195, 197, 198, 200, 226, 234, 239, 253, 255], "safesequenti": [140, 141, 247], "sigma_init": 142, "sigma_end": 142, "annealing_num_step": [142, 144, 145, 253, 254], "po": [142, 144], "epsilon": [142, 144, 145, 178, 218, 254, 255], "action_spac": [143, 147, 154, 155], "one_hot": [143, 147, 154, 155], "mult_one_hot": [143, 147, 154, 155], "nbin": [143, 154], "qvalue_actor": [143, 147, 154, 155], "eps_init": [144, 145, 254], "eps_end": [144, 145, 254], "greedi": [144, 155, 254], "explorative_polici": [144, 145], "0000": [144, 255, 258, 261], "9055": 144, "9277": [144, 258], "6295": 144, "2532": 144, "addbackward0": [144, 261], "theta": [145, 255, 258], "15": [145, 167, 254, 255, 258, 259], "mu": [145, 255], "dt": [145, 258], "x0": 145, "sigma_min": 145, "n_steps_ann": 145, "ornstein": [145, 253], "uhlenbeck": [145, 253], "ou": [145, 253], "introduc": 145, "auto": [145, 165, 175, 177, 250], "correl": 145, "sort": 145, "equat": [145, 160, 162, 178, 255, 258], "prev_nois": 145, "current_sigma": 145, "sqrt": 145, "ou_prev_nois": 145, "ou_step": 145, "increas": [145, 254], "anneal": 145, "_ou_prev_nois": 145, "_ou_step": 145, "probabilist": [146, 255, 261], "default_interaction_mod": [146, 149], "interaction_mod": [146, 149], "set_interaction_mod": [146, 149], "distribution_kwarg": [146, 149, 253, 255], "cache_dist": [146, 149], "diverg": [146, 149, 168, 172], "n_empirical_estim": [146, 149], "make_funct": [146, 147, 148, 151, 152, 154, 155, 156, 254, 261], "functional_modul": [147, 148, 151, 154, 155], "functionalmodul": [148, 156], "functionalmodulewithbuff": [148, 156], "grucel": 148, "td_fmodul": 148, "td_function": 148, "td_state": 148, "vmap": [148, 151, 254, 261], "ensembl": [148, 175], "params_repeat": 148, "td_vmap": [148, 151], "irrespect": [148, 149], "random_sampl": [148, 149], "tensor_spec": 149, "probabilistictensordictmodul": [149, 150, 261], "rule": [149, 255], "get_dist": [149, 150], "__call__": [149, 251], "suppli": 149, "fist": 149, "partial_toler": [150, 151, 257], "probabilistictensordictsequenti": [150, 161, 162, 172, 174, 176, 227, 228, 261], "tensordictsequenti": [150, 253, 257, 259, 261], "who": [150, 151], "AND": [150, 151], "scan": [150, 151], "tensordictsequenci": 151, "tensordictsequ": 151, "safeprobabilisticmodul": [151, 247], "spec1": 151, "net1": 151, "module1": 151, "td_module1": 151, "spec2": 151, "module2": 151, "td_module2": 151, "custommodul": [152, 157], "cat": [152, 261], "transition_model": 153, "reward_model": 153, "imaginari": 153, "imagin": 153, "get_reward_oper": 153, "get_transition_model_oper": 153, "var_num": [154, 155], "perspect": [154, 166, 255], "1707": [154, 166, 174, 226, 234], "06887": [154, 166], "customdistributionalqv": 154, "log_softmax": 154, "_functorch": 156, "wrapper_typ": 156, "mislead": 157, "other_kei": 157, "typeerror": [157, 253], "min_val": [158, 160], "bias": [158, 250, 253, 254], "_bia": 158, "invert": [159, 255], "surject": 160, "expln": 160, "biased_softplu": [160, 247], "beggin": 160, "biased_softplus_": 160, "syntax": [160, 253], "condit": [160, 253, 258], "met": [160, 258], "advantage_kei": [161, 162, 172, 174, 176, 185, 186, 187, 188, 255], "value_target_kei": [161, 162, 172, 174, 176, 185, 186, 187, 188, 255], "value_target": [161, 162, 172, 174, 176, 185, 186, 187, 188, 255], "entropy_bonu": [161, 162, 172, 174, 255], "samples_mc_entropi": [161, 162, 172, 174], "entropy_coef": [161, 162, 172, 174, 255], "critic_coef": [161, 162, 172, 174, 255], "loss_critic_typ": [161, 162, 172, 174, 176, 255], "smooth_l1": [161, 162, 163, 164, 165, 171, 172, 174, 175, 176, 177, 179, 181, 255], "gamma": [161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 241, 250, 253, 254, 255, 261], "1602": 161, "01783v2": 161, "favour": [161, 162, 172, 174], "mont": [161, 162, 172, 174], "carlo": [161, 162, 172, 174], "l1": [161, 162, 163, 164, 165, 172, 174, 175, 176, 179, 181, 254], "l2": [161, 162, 163, 164, 165, 168, 169, 172, 174, 175, 176, 179, 181], "throughout": [161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 255, 262], "essenti": [161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 258], "make_value_estim": [161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 250], "value_typ": [161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 180], "valueestim": [161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 180, 250], "hyperparam": [161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 258], "valuefunct": [161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 180], "enum": [161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 180], "default_value_kwarg": [161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179, 247], "dqn_loss": [161, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 179], "dqnloss": [161, 163, 165, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 232, 247, 250], "clip_epsilon": [162, 255], "normalize_advantag": [162, 172, 174], "threshold": [162, 255], "multipli": [162, 165, 172, 174, 175, 177, 218, 253], "actor_network": [163, 165, 171, 175, 177, 179], "value_network": [163, 164, 166, 171, 177, 185, 186, 187, 188, 250, 255], "loss_funct": [163, 164, 165, 171, 175, 177, 179, 181], "delay_actor": [163, 177, 179], "delay_valu": [163, 164, 166, 176, 177], "input_tensordict": [163, 164, 166], "qvalueactor": [164, 247, 254], "qvalue_network": [165, 171, 175, 177, 179], "num_qvalue_net": [165, 171, 175, 177, 179], "alpha_init": [165, 175, 177], "min_alpha": [165, 175, 177], "max_alpha": [165, 175, 177], "fixed_alpha": [165, 175, 177], "target_entropy_weight": 165, "98": [165, 185, 186, 187, 188, 255, 258, 259], "target_entropi": [165, 175, 177], "delay_qvalu": [165, 175, 177, 179], "distributionalqvalueactor": [166, 247], "disctount": 166, "actor_model": 167, "value_model": [167, 169], "model_based_env": 167, "dreamerenv": [167, 247], "imagination_horizon": 167, "discount_loss": [167, 169], "lmbda": [167, 180, 185, 188, 190, 195, 196, 197, 200, 201, 250, 253, 254, 255], "unrol": [167, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201], "lambda_kl": 168, "lambda_reco": 168, "lambda_reward": 168, "reco_loss": 168, "reward_loss": 168, "free_nat": 168, "delayed_clamp": 168, "global_averag": 168, "kl": [168, 172], "nat": 168, "clamp": [168, 220, 258], "value_loss": [169, 253], "fake_data": 169, "loss_modul": [170, 178, 220, 240, 241, 250, 251, 255], "ddpgloss": [170, 178, 230, 241, 247, 261], "sacloss": [170, 178, 238, 247], "td3loss": [170, 178, 247], "value_network_update_interv": 170, "contrast": 170, "06461": 170, "expectil": 171, "2110": 171, "06169": 171, "tau": [171, 253, 254], "antmaz": 171, "sticht": 171, "loss_value_diff": 171, "diff": 171, "dtarg": 172, "decrement": 172, "samples_mc_kl": 172, "penalti": 172, "old_polici": 172, "new_polici": 172, "adapt": [172, 253, 258], "old": [172, 262], "thu": 172, "distanc": [172, 181, 184, 185], "apart": 172, "analyt": 172, "loss_": [173, 215, 250], "defaylt_value_typ": 173, "equip": 173, "convert_to_funct": 173, "expand_dim": 173, "create_target_param": 173, "compare_against": 173, "funs_to_decor": 173, "value_estim": [173, 185, 186, 187, 188, 189, 250, 261], "valueestimatorbas": [173, 247], "blend": 173, "upcom": [173, 193, 194, 195, 196, 198, 199, 200, 201, 253], "proxim": [174, 226, 234, 255], "optimis": [174, 216, 255], "flavour": [174, 261], "constrain": 174, "clipppoloss": [174, 247, 255], "klpenppoloss": [174, 247], "regularis": 174, "06347": [174, 226, 234], "sub_sample_len": 175, "openreview": [175, 236], "ay8zfzm0tdd": [175, 236], "idea": [175, 251], "subsampl": [175, 211, 251], "connectionist": 176, "1992": 176, "doi": 176, "1007": 176, "bf00992696": 176, "1801": [177, 239], "01290": [177, 239], "applic": [177, 258], "1812": 177, "05905": 177, "prod": 177, "n_action": 177, "redqloss": [178, 247], "999": [178, 218, 254], "prev_param": 178, "new_param": 178, "policy_nois": 179, "noise_clip": 179, "tdlambda": [180, 250], "v2": [181, 193, 194, 195, 196, 198, 199, 200, 201, 226, 229, 234, 236, 239], "strict_shap": 181, "view_a": 181, "next_val_kei": 184, "pred_next_v": 184, "usus": 184, "mse": [184, 254], "q_valu": 184, "target_valu": [184, 250, 261], "n_steps_to_next": 184, "value_next_st": 184, "average_ga": [185, 255], "value_kei": [185, 186, 187, 188, 189], "1506": [185, 190, 197], "02438": [185, 190, 197], "exponenti": [185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218], "propag": [185, 186, 187, 188, 255], "advang": 185, "gradient_mod": 185, "value_error": [185, 186, 187, 188, 189], "sign": 185, "unused_arg": 185, "target_param": [185, 186, 187, 188, 189], "relev": [185, 186, 187, 188, 189, 258], "94": [185, 188, 255, 258, 259], "unpack": [185, 186, 187, 188], "recur": [185, 186, 187, 188, 189], "average_reward": [186, 187, 188], "aka": [186, 254], "tdestim": [186, 187, 189], "infti": 187, "valuefunctionbas": 189, "next_state_valu": [190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 247], "time_dim": [190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 253, 254], "old_stat": [190, 191, 193, 195, 197, 198, 200], "new_stat": [190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "rolling_gamma": [193, 194, 195, 196, 198, 199, 200, 201], "ti": [193, 194, 195, 196, 198, 199, 200, 201], "event": [193, 194, 195, 196, 198, 199, 200, 201], "g1": [193, 194, 195, 196, 198, 199, 200, 201], "g2": [193, 194, 195, 196, 198, 199, 200, 201], "g3": [193, 194, 195, 196, 198, 199, 200, 201], "g4": [193, 194, 195, 196, 198, 199, 200, 201], "v3": [193, 194, 195, 196, 198, 199, 200, 201], "v4": [193, 194, 195, 196, 198, 199, 200, 201, 253, 255, 259], "out_file_bas": 202, "skip_reset": 202, "dump": 202, "interv": [202, 203, 212, 222, 254, 258], "center_crop": 203, "make_grid": 203, "Will": 203, "grid": 203, "exp_nam": [204, 205, 208, 209, 210, 241, 253], "log_dir": [204, 205, 207, 209], "templat": 204, "csv": [205, 207], "minim": 205, "dependeci": 205, "experiment_nam": [206, 207], "uuid": [206, 262], "date": 206, "logger_typ": 207, "logger_nam": 207, "tensorboard": [207, 209, 261], "wandb": [207, 210, 261], "mlflow": [207, 208], "might": [207, 248, 253, 262], "wandb_kwarg": 207, "mlflow_kwarg": 207, "tracking_uri": 208, "uri": 208, "datastor": 208, "tb_log": 209, "tensoarboard": 209, "sub_traj_len": 211, "min_sub_traj_len": 211, "full": [211, 253, 254, 255, 257, 258, 259, 261, 262], "20": [211, 255, 258, 260, 261, 262], "register_op": [211, 212, 213, 214, 215, 217, 218, 219, 222, 251], "process_optim_batch": [211, 217, 218, 251], "td_out": [211, 219], "_process_optim_batch_hook": [211, 251], "clear_cuda": 212, "pre_optim_step": [212, 251], "counter": [213, 251], "log_pbar": [213, 214, 216, 218, 251], "progress": [213, 214, 216, 220, 251, 262], "bar": [213, 214, 216, 220, 251], "count_fram": 213, "pre_steps_log": [213, 214, 251], "lognam": 214, "r_train": 214, "log_reward": 214, "loss_compon": 215, "appl": 215, "omit": [215, 253, 255, 258], "optimizer_hook": 215, "loss_actor": 215, "record_interv": [216, 253], "record_fram": [216, 223, 253], "policy_explor": [216, 241, 253], "log_kei": 216, "suffix": 216, "underestim": 216, "suppos": [216, 251, 262], "set_exploration_mod": [216, 247, 253, 254, 255, 261], "reward_evalu": 216, "tensordictreplaybuff": [217, 241, 247, 253, 254], "flatten_tensordict": 217, "max_dim": 217, "rb_trainer": 217, "batch_process": [217, 218, 219, 251], "post_loss": [217, 251], "jitter": 218, "finfo": 218, "default_dtyp": 218, "get_default_dtyp": 218, "reward_norm": 218, "update_reward_stat": 218, "normalize_reward": 218, "make_train": [219, 247], "_process_batch_hook": [219, 251], "versatil": 220, "lossmodul": [220, 240, 241, 247], "optim_steps_per_batch": [220, 251], "epoch": [220, 255], "clip_grad_norm": 220, "partial": 220, "clip_norm": 220, "progress_bar": 220, "tqdm": [220, 253, 254, 255, 258], "save_trainer_interv": 220, "disk": [220, 251, 254], "10000": [220, 254, 255], "save_trainer_fil": [220, 251], "datacollectorbas": [222, 227, 228, 241, 247], "update_weights_interv": 222, "sit": [222, 254], "update_weight": 222, "post_step": [222, 251], "cfg": [223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245], "dictconfig": [223, 224, 226, 227, 228, 229, 231, 234, 236, 237, 239, 240, 241, 242, 245], "divid": [223, 253], "unknowingli": 223, "annealing_fram": [223, 253], "init_env_step": [223, 224, 253], "proof_environ": [224, 226, 229, 231, 234, 236, 239, 253], "sta": 224, "ot": 224, "a2closs": [225, 247], "in_keys_actor": [226, 234], "observation_kei": [226, 234, 236, 239], "actorvalueoper": [226, 234, 247], "dummi": [226, 229, 231, 234, 236, 239, 253, 262], "actorcriticoper": [226, 234, 247], "parser_env_arg": [226, 234, 236], "make_ppo_model": [226, 247], "parser_model_args_continu": [226, 234, 236, 239], "cattensor": [226, 229, 234, 236, 239, 253, 254, 257, 258, 262], "hydra": [226, 229, 231, 234, 236, 239], "config_stor": [226, 229, 231, 234, 236, 239], "configstor": [226, 229, 231, 234, 236, 239], "dataclass": [226, 229, 231, 234, 236, 239], "halfcheetah": [226, 229, 234, 236, 239, 253], "config_field": [226, 229, 231, 234, 236, 239], "config_cl": [226, 229, 231, 234, 236, 239], "ppomodelconfig": [226, 234], "envconfig": [226, 229, 231, 234, 236, 239], "make_dataclass": [226, 229, 231, 234, 236, 239], "cls_name": [226, 229, 231, 234, 236, 239], "config_path": [226, 229, 231, 234, 236, 239], "config_nam": [226, 229, 231, 234, 236, 239], "actor_valu": [226, 234], "17": [226, 229, 234, 236, 239, 258], "actor_model_explor": [227, 228, 253], "make_env_kwarg": [227, 228], "actor_net_kwarg": [229, 236, 239], "value_net_kwarg": [229, 239], "modulelist": [229, 236, 239, 261], "ddpgcnnactor": [229, 247], "ddpgmlpactor": [229, 247], "ddpgcnnqnet": [229, 247], "ddpgmlpqnet": [229, 247], "ddpgmodelconfig": 229, "targetnetupdat": [230, 232, 235, 238, 240, 241], "discretemodelconfig": 231, "pong": [231, 262], "v5": [231, 262], "pixels_onli": [231, 253, 254, 261, 262], "210": [231, 258, 262], "160": [231, 258, 262], "ppoloss": [233, 247], "redqloss_deprec": 235, "qvalue_net_kwarg": [236, 239], "qvalu": [236, 239, 254], "redqmodelconfig": 236, "replayargsconfig": 237, "sacmodelconfig": 239, "target_net_updat": 241, "constitu": 241, "learnt": [241, 254, 255], "tempfil": 241, "tensorboardlogg": [241, 247], "egreedywrapp": [241, 247, 254], "env_proof": 241, "obs_spec": [241, 258], "net_valu": 241, "dir": [241, 251], "gettempdir": 241, "argpars": [242, 245], "namespac": [242, 245], "parser": [242, 245], "transformed_env_constructor": [242, 247], "num_env_per_collector": [243, 244], "num_collector": [243, 244, 254], "video_tag": 245, "norm_obs_onli": 245, "use_env_cr": 245, "custom_env_mak": 245, "custom_env": 245, "return_transformed_env": 245, "action_dim_gsd": 245, "state_dim_gsd": 245, "batch_dim": 245, "obs_norm_state_dict": 245, "wheter": 245, "maker": 245, "asyncdatacollector": 247, "distributedsyncdatacollector": 247, "submitit_delayed_launch": 247, "samplerwithoutreplac": [247, 255], "d4rlexperiencereplai": 247, "binarydiscretetensorspec": 247, "unboundeddiscretetensorspec": [247, 255, 262], "tensordictrecord": 247, "videorecord": [247, 255], "get_available_librari": 247, "braxwrapp": 247, "dmcontrolenv": [247, 253, 257, 262], "dmcontrolwrapp": 247, "jumanjienv": 247, "jumanjiwrapp": 247, "openmlenv": 247, "vmasenv": 247, "vmaswrapp": 247, "actorcriticwrapp": 247, "additivegaussianwrapp": 247, "ornsteinuhlenbeckprocesswrapp": [247, 253], "safeprobabilistictensordictsequenti": 247, "is_tensordict_compat": 247, "ensure_tensordict_compat": 247, "qvaluehook": 247, "distributionalqvaluehook": 247, "duelingcnndqnet": [247, 254], "distributionaldqnnet": 247, "lstmnet": 247, "dreameractor": 247, "obsencod": 247, "obsdecod": 247, "rssmprior": 247, "rssmposterior": 247, "reset_nois": 247, "cemplann": 247, "mpcplannerbas": 247, "mppiplann": 247, "independentnorm": 247, "truncatednorm": 247, "tanhdelta": [247, 253], "onehotcategor": 247, "inv_softplu": 247, "distributionaldqnloss": [247, 254], "discretesacloss": 247, "iqlloss": 247, "reinforceloss": 247, "dreameractorloss": 247, "dreamermodelloss": 247, "dreamervalueloss": 247, "td0estim": 247, "td1estim": 247, "gae": [247, 250, 255], "td0_return_estim": 247, "td0_advantage_estim": 247, "td1_return_estim": 247, "vec_td1_return_estim": 247, "td1_advantage_estim": 247, "vec_td1_advantage_estim": 247, "td_lambda_return_estim": 247, "vec_td_lambda_return_estim": 247, "td_lambda_advantage_estim": 247, "vec_td_lambda_advantage_estim": [247, 253, 254], "generalized_advantage_estim": 247, "vec_generalized_advantage_estim": 247, "distance_loss": 247, "hold_out_net": [247, 253], "hold_out_param": 247, "softupd": [247, 253], "hardupd": [247, 253], "batchsubsampl": [247, 251], "clearcudacach": 247, "countframeslog": 247, "logreward": [247, 251], "optimizerhook": 247, "replaybuffertrain": [247, 251], "rewardnorm": 247, "selectkei": [247, 251], "trainerhookbas": [247, 251], "updateweight": [247, 251], "make_a2c_loss": 247, "make_a2c_model": 247, "make_collector_offpolici": 247, "make_collector_onpolici": 247, "make_ddpg_actor": [247, 253], "make_ddpg_loss": 247, "make_dqn_actor": 247, "make_dqn_loss": 247, "make_ppo_loss": 247, "make_redq_loss": 247, "make_redq_model": 247, "make_replay_buff": [247, 253], "make_sac_loss": 247, "make_sac_model": 247, "make_target_updat": 247, "parallel_env_constructor": [247, 253], "sync_async_collector": 247, "sync_sync_collector": 247, "correct_for_frame_skip": 247, "get_stats_random_rollout": 247, "csvlogger": 247, "mlflowlogg": 247, "wandblogg": 247, "get_logg": 247, "generate_exp_nam": 247, "journei": 248, "guid": [248, 253, 254], "textbook": 248, "highlight": 248, "ever": 248, "bump": 248, "think": [248, 255, 262], "benefit": 248, "pr": 248, "reusabl": 250, "swappabl": 250, "characterist": [250, 258], "trainabl": [250, 254, 259], "whatev": 250, "convent": [250, 258], "smth": 250, "metric": 250, "loss_val": [250, 255], "nutshel": 250, "sutton": 250, "barto": 250, "chapter": 250, "proxi": 250, "significantli": [250, 253, 254], "next_stat": 250, "value_net_loss": 250, "pow": [250, 253, 254], "therebi": 250, "room": 250, "convers": 250, "signifi": 250, "underperform": 250, "thin": 250, "intric": 250, "flexibli": 250, "outer": [251, 253, 254, 262], "believ": 251, "scheme": [251, 262], "substenti": 251, "_pre_steps_log_hook": 251, "_pre_optim_hook": 251, "sub_batch": 251, "_post_loss_hook": 251, "_post_optim_hook": 251, "post_optim": 251, "_post_optim_log": 251, "post_optim_log": 251, "_post_steps_hook": 251, "_post_steps_log_hook": 251, "post_steps_log": 251, "comment": [251, 254, 261], "categori": 251, "extens": 251, "reserv": 251, "three": [251, 255, 258], "logginghook": 251, "logging_hook": 251, "save_dict": 251, "some_valu": 251, "torchsnapshot": 251, "ckpt_backend": 251, "pt": [251, 259], "filepath": 251, "select_kei": 251, "save_train": 251, "load_from_fil": 251, "perfectli": [251, 253, 258], "intern": 252, "author": [253, 254, 255, 258], "vincent": [253, 254, 255, 258], "moen": [253, 254, 255, 258], "topic": 253, "asid": 253, "strongli": 253, "familiar": [253, 254, 262], "transpar": [253, 254], "understood": [253, 254], "sota": [253, 254, 261], "illustr": [253, 254], "deepcopi": 253, "matplotlib": [253, 254, 255, 258, 262], "pyplot": [253, 254, 255, 258, 262], "plt": [253, 254, 255, 258, 262], "environmet": 253, "remaind": 253, "focu": [253, 255], "funciton": 253, "env_librari": 253, "env_task": 253, "env_arg": 253, "elif": [253, 254], "notimplementederror": 253, "friendli": 253, "special": [253, 262], "torchr": 253, "rescal": 253, "presum": 253, "leav": 253, "make_transformed_env": 253, "reward_sc": 253, "double_to_float_list": 253, "double_to_float_inv_list": 253, "dmcontrol": 253, "get_env_stat": 253, "proof_env": 253, "transform_state_dict": 253, "leverag": [253, 262], "env_per_collector": 253, "make_t_env": 253, "copy_": 253, "parallel_env": [253, 261, 262], "maxim": [253, 258], "recal": [253, 254, 255], "materi": 253, "small": [253, 255, 262], "env_spec": 253, "actor_net": [253, 255], "num_lay": 253, "actor_modul": [253, 261], "q_net": 253, "qnet": 253, "make_record": 253, "recorder_obj": 253, "flavor": 253, "circular": 253, "pick": [253, 254], "buffer_s": [253, 254], "prb": 253, "buffer_scratch_dir": 253, "adjust": [253, 258], "magnitud": 253, "1000000": 253, "device_count": [253, 254, 259, 262], "500k": 253, "meaning": 253, "5000": [253, 254, 255], "myopic": [253, 254], "n_steps_forward": 253, "lr": [253, 254, 255, 258], "5e": 253, "weight_decai": 253, "utd": 253, "update_to_data": 253, "005": [253, 254], "tmp": 253, "semin": 253, "qnet_target": 253, "tight": 253, "natur": 253, "seamlessli": [253, 258], "traceback": [253, 254, 261], "__w": [253, 254, 261], "doc": [253, 254, 261], "coding_ddpg": [253, 254, 260], "677": 253, "1711": 253, "got": 253, "adam": [253, 254, 255, 258], "optimizer_actor": 253, "optimizer_qnet": 253, "total_collection_step": 253, "scheduler1": 253, "lr_schedul": [253, 255, 258], "cosineannealinglr": [253, 255, 258], "t_max": 253, "scheduler2": 253, "temporarili": 253, "explain": [253, 259], "fed": 253, "hood": [253, 258], "coupl": [253, 258], "rewards_ev": 253, "norm_factor_train": 253, "collected_fram": 253, "pbar": [253, 254, 255, 258], "r0": 253, "numel": [253, 254, 255, 259], "current_fram": [253, 254], "sampled_tensordict": 253, "backprop": 253, "next_valu": [253, 254], "value_est": 253, "sampled_tensordict_actor": 253, "actor_loss": 253, "p_in": 253, "p_dest": 253, "zip": [253, 256], "b_in": 253, "b_dest": 253, "td_record": 253, "r_evalu": 253, "set_descript": [253, 254, 255, 258], "4f": [253, 254, 255, 258], "plot": [253, 254, 255, 258], "mention": [253, 254, 262], "label": [253, 254], "legend": [253, 254], "xlabel": [253, 254, 258], "ylabel": [253, 254], "tight_layout": 253, "250": [253, 258], "100000": [253, 254], "batch_size_traj": 253, "simplic": [253, 254, 255, 259], "td_lambda": 253, "roughli": [253, 261], "four": [253, 258], "big": [253, 254, 255, 262], "ndim": [253, 254], "rand_idx": 253, "titl": [253, 254, 255, 258], "labmda": 253, "minut": [253, 254, 255, 257, 258, 259, 261, 262], "58": [253, 255, 258, 260], "814": [253, 260], "5347": 253, "mb": [253, 254, 255, 257, 258, 259, 260, 261, 262], "jupyt": [253, 254, 255, 256, 257, 258, 259, 261, 262], "ipynb": [253, 254, 255, 257, 258, 259, 261, 262], "galleri": [253, 254, 255, 256, 257, 258, 259, 261, 262], "sphinx": [253, 254, 255, 256, 257, 258, 259, 261, 262], "cartpol": [254, 262], "tabl": 254, "highest": 254, "lookup": 254, "amort": [254, 255], "conjunct": 254, "cart": 254, "pole": 254, "un": 254, "actuat": 254, "frictionless": 254, "upright": [254, 262], "balanc": [254, 262], "prerequisit": 254, "flesh": 254, "grayscal": [254, 262], "did": [254, 255, 262], "get_funct": 254, "is_notebook": 254, "shell": 254, "get_ipython": 254, "__class__": 254, "zmqinteractiveshel": 254, "qtconsol": 254, "terminalinteractiveshel": 254, "ipython": [254, 258], "nameerror": 254, "interpret": 254, "hopefulli": 254, "sensit": 254, "variat": 254, "2e": [254, 258], "upd": 254, "n_optim": 254, "smooth": 254, "harder": [254, 261], "500000": 254, "256": [254, 255, 258], "eps_greedy_v": 254, "eps_greedy_val_env": 254, "mandatori": [254, 255, 258], "init_bia": 254, "observation_norm_state_dict": 254, "five": 254, "64x64": 254, "channel": 254, "motion": [254, 258], "simpler": 254, "test_env": 254, "9921": 254, "0786": 254, "0787": 254, "0788": 254, "trick": 254, "mathbb": 254, "rightarrow": 254, "concept": 254, "pessimist": [254, 255], "power": 254, "ubiquit": 254, "augment": 254, "make_model": 254, "dummy_env": 254, "output_s": 254, "unflatten_kei": 254, "fairli": 254, "params_target": 254, "actor_explor": 254, "flat": 254, "unflatten": 254, "params_flat": 254, "flatten_kei": 254, "coding_dqn": [254, 260], "444": [254, 258], "638": [254, 258], "199": [254, 258], "coding_ppo": [254, 255, 260], "themselv": 254, "data_collector": 254, "q_": 254, "v_": 254, "defaultdict": [254, 255, 258], "logs_exp1": 254, "prev_traj_count": 254, "traj_length": 254, "enough": 254, "sampled_data": 254, "sampled_data_out": 254, "tdstep": 254, "exp_valu": 254, "mse_loss": 254, "gv": 254, "clip_grad_norm_": [254, 255, 258], "p_target": 254, "p_orig": 254, "grad_val": 254, "traj_count": 254, "eval_rollout": [254, 255], "traj_lengths_ev": 254, "mavg": 254, "05": [254, 258], "traj_count_ev": 254, "figsiz": [254, 255, 258], "subplot": [254, 255, 258, 262], "traj": 254, "savefig": 254, "albeit": [254, 258], "slowli": 254, "dqn_td0": 254, "png": 254, "capac": [254, 255], "logs_exp2": 254, "dqn_tdlambda": 254, "fewer": 254, "plot_both": 254, "frames_td0": 254, "frames_tdlambda": 254, "evals_td0": 254, "evals_tdlambda": 254, "mavgs_td0": 254, "mavgs_tdlambda": 254, "traj_count_td0": 254, "traj_count_tdlambda": 254, "td0": 254, "pixels_sav": 254, "imageio": 254, "mimwrit": 254, "mp4": 254, "fp": 254, "qvaluenetwork": 254, "nth": 254, "noticebli": 254, "collectorclass": 254, "till": 254, "steps_to_next_ob": 254, "worst": 254, "accuraci": 254, "fanci": 254, "906": [254, 260], "5346": [254, 260], "demonstr": [255, 258, 262], "talk": 255, "repetit": 255, "six": 255, "sophist": 255, "invent": 255, "overview": [255, 261], "theta_k": 255, "frac": 255, "pi_": 255, "exceed": 255, "discourag": [255, 258], "indispens": 255, "loader": 255, "analyz": 255, "lingua": 255, "franca": 255, "descript": 255, "normalparamextractor": 255, "has_cuda": [255, 262], "3e": 255, "max_grad_norm": 255, "ourselv": [255, 262], "benefici": 255, "errat": 255, "hamper": 255, "reactiv": 255, "group": 255, "xy": 255, "exce": 255, "budget": 255, "50_000": 255, "sub_batch_s": 255, "num_epoch": 255, "intro": 255, "entropy_ep": 255, "generalist": 255, "interchang": [255, 259], "panel": 255, "charact": 255, "inverteddoublependulum": 255, "transmit": 255, "stai": 255, "thumb": 255, "supplementari": [255, 262], "told": 255, "stringent": 255, "nevertheless": 255, "concret": 255, "everyth": 255, "continuousbox": [255, 258, 261, 262], "environemnt": 255, "confid": 255, "succeed": [255, 258], "pack": [255, 262], "ran": 255, "mutli": 255, "boundari": 255, "f_": 255, "text": 255, "mu_": 255, "difficulti": [255, 262], "brought": 255, "scrictli": 255, "d_ob": 255, "d_action": 255, "extract": 255, "carrier": 255, "policy_modul": 255, "That": 255, "said": 255, "value_modul": [255, 261], "briefli": 255, "simplest": [255, 262], "oblivi": 255, "refil": 255, "conveni": [255, 258], "easiest": 255, "hide": 255, "awai": 255, "mathemat": 255, "deal": 255, "tradeoff": 255, "eval_str": 255, "tensordict_data": 255, "data_view": 255, "subdata": 255, "loss_valu": [255, 261], "loss_object": 255, "loss_crit": 255, "loss_entropi": 255, "cum_reward_str": 255, "stepcount_str": 255, "param_group": 255, "lr_str": 255, "nice": 255, "noth": 255, "50000": 255, "00": [255, 258, 259, 260], "02": [255, 258, 259], "36": [255, 258], "312": [255, 258], "92it": 255, "5232": [255, 258], "0955": [255, 258], "0003": [255, 258], "315": [255, 258], "13it": 255, "1310": 255, "3000": 255, "09": [255, 258], "28": [255, 258], "316": [255, 258], "00it": [255, 258], "1818": 255, "19": [255, 258], "4000": 255, "23": [255, 258, 260], "319": [255, 258], "69it": 255, "2156": 255, "322": [255, 258], "65it": 255, "2290": 255, "6000": 255, "321": [255, 258], "94it": 255, "2309": 255, "7000": 255, "21": [255, 257, 258], "95it": 255, "2414": 255, "8000": 255, "324": [255, 258], "02it": [255, 258], "2497": 255, "44": [255, 258, 259], "9000": 255, "323": [255, 258], "35it": [255, 258], "2516": 255, "49": [255, 258], "31": [255, 258, 259], "325": [255, 258], "56it": [255, 258], "2616": 255, "22": [255, 258, 259], "11000": 255, "328": [255, 258], "16it": [255, 258], "306": [255, 258], "2166": 255, "2806": 255, "62": [255, 258, 259], "12000": 255, "37": [255, 258], "55": [255, 258], "327": [255, 258], "73it": 255, "2693": 255, "67": [255, 257, 258, 259], "26": [255, 258, 259, 260, 261], "13000": 255, "40": [255, 258, 259], "52": [255, 258, 260], "2613": [255, 258], "48": [255, 258, 259], "14000": 255, "43": [255, 258], "07it": [255, 258], "2803": 255, "69": [255, 258, 259], "15000": 255, "38it": [255, 258], "2781": 255, "0002": [255, 258], "16000": 255, "326": [255, 258], "51it": [255, 258], "2856": 255, "85": [255, 258], "17000": 255, "82it": 255, "2825": 255, "78": [255, 258, 259], "18000": 255, "55it": [255, 258], "2798": 255, "83": [255, 258, 259], "19000": 255, "99it": 255, "2827": 255, "20000": 255, "93it": 255, "2817": 255, "72": [255, 258], "21000": 255, "04": [255, 258, 260], "269": [255, 258], "4513": 255, "22000": 255, "07": [255, 258], "81it": [255, 258], "2774": 255, "76": [255, 258], "23000": 255, "23it": 255, "2705": 255, "24000": 255, "04it": [255, 258], "2859": 255, "25000": 255, "11it": 255, "2796": 255, "26000": 255, "48it": [255, 258], "2857": 255, "63": [255, 258], "54": [255, 258, 259], "27000": 255, "37it": [255, 258], "2770": 255, "73": [255, 258], "56": [255, 258, 259], "28000": 255, "88it": [255, 258], "2834": 255, "29000": 255, "08it": 255, "2939": 255, "136": [255, 257, 258, 260], "60": [255, 258, 261], "30000": 255, "2925": 255, "142": [255, 258], "31000": 255, "10it": [255, 258], "895": 255, "6727": 255, "2922": 255, "92": [255, 258, 259], "32000": 255, "2883": 255, "80": [255, 258, 259], "66": [255, 258, 259], "33000": 255, "41": [255, 258], "2879": 255, "68": [255, 258, 259], "34000": 255, "2847": 255, "70": [255, 258], "35000": 255, "47": [255, 258], "2828": 255, "71": [255, 258, 259], "36000": 255, "2831": 255, "74": [255, 258, 259], "37000": 255, "53": [255, 258, 260], "39": [255, 258], "85it": 255, "38000": 255, "57": [255, 257, 258, 259, 260], "80it": 255, "2955": 255, "39000": 255, "42it": [255, 258], "2936": 255, "40000": 255, "82": [255, 258], "41000": 255, "671": 255, "5225": 255, "2950": 255, "84": [255, 258], "42000": 255, "30it": [255, 258], "3033": 255, "86": [255, 258, 259], "43000": 255, "90it": 255, "2960": 255, "88": [255, 258, 259], "44000": 255, "05it": [255, 258], "3031": 255, "131": [255, 258], "90": [255, 258, 259], "45000": 255, "98it": [255, 258], "2990": 255, "46000": 255, "3015": 255, "102": [255, 258], "47000": 255, "3072": 255, "89": [255, 258], "96": [255, 258], "48000": 255, "3093": 255, "49000": 255, "46it": [255, 258], "3101": [255, 258], "115": [255, 258], "79it": 255, "3060": 255, "104": [255, 258], "cap": 255, "bit": 255, "219": [255, 258, 260], "tutorials_python": 256, "tutorials_jupyt": 256, "distinct": 257, "humanoid": [257, 262], "walk": [257, 262], "env1": 257, "env1_obs_kei": 257, "observation_stand": 257, "env2": 257, "env2_obs_kei": 257, "observation_walk": 257, "tdreset1": 257, "tdreset2": 257, "tdreset": 257, "backbon": [257, 261], "policy_common": 257, "policy_stand": 257, "policy_walk": 257, "seq": 257, "But": 257, "env1_mak": 257, "env2_mak": 257, "_single_task": 257, "td_rollout": 257, "shown": 257, "multi_task": [257, 260], "ground": 258, "freeli": 258, "inspir": 258, "sep": 258, "touch": 258, "undertaken": 258, "broader": 258, "challeng": [258, 259], "wider": 258, "algebra": 258, "acquaint": 258, "avenu": 258, "unsqueezetransform": 258, "_apply_to_composit": 258, "default_x": 258, "pi": 258, "default_i": 258, "_set_se": 258, "torqu": 258, "upward": 258, "angular": 258, "dot": 258, "_t": 258, "sin": 258, "theta_t": 258, "rad": 258, "sec": 258, "gravit": 258, "theta_": 258, "001": 258, "angl": 258, "deleg": 258, "new_th": 258, "plu": 258, "new_thdot": 258, "thdot": 258, "g_forc": 258, "max_torqu": 258, "angle_norm": 258, "max_spe": 258, "zeros_lik": 258, "is_empti": 258, "gen_param": 258, "high_th": 258, "high_thdot": 258, "low_th": 258, "low_thdot": 258, "rng": 258, "lazili": 258, "shortcut": [258, 262], "irrelev": 258, "_make_spec": 258, "td_param": 258, "make_composite_from_td": 258, "commong": 258, "pseudo": 258, "pendulumenv": 258, "render_mod": 258, "human": 258, "rgb_arrai": 258, "render_fp": 258, "random_": 258, "_make_step": 258, "staticmethod": 258, "complic": [258, 262], "showcas": 258, "skeleton": 258, "_apply_transform": [258, 262], "_inv_apply_transform": [258, 262], "eventu": 258, "subset": [258, 259], "unitari": 258, "sine": 258, "cosin": 258, "sintransform": 258, "costransform": 258, "co": 258, "t_sin": 258, "t_co": 258, "cat_transform": 258, "mdp": 258, "convin": 258, "simple_rollout": 258, "_data": 258, "unexplor": 258, "assumpt": 258, "recreat": 258, "20_000": 258, "init_td": 258, "traj_return": 258, "gn": 258, "last_reward": 258, "is_ipython": 258, "inlin": 258, "get_backend": 258, "ion": 258, "gcf": 258, "clear_output": 258, "625": 258, "9981": 258, "3292": 258, "33it": 258, "8997": 258, "7032": 258, "696": 258, "43it": 258, "8466": 258, "0202": 258, "807": 258, "2897": 258, "6322": 258, "47it": 258, "0338": 258, "4880": 258, "504": 258, "1698": 258, "9674": 258, "188": 258, "0643": 258, "9703": 258, "127": 258, "3363": 258, "0207": 258, "048": 258, "3501": 258, "5927": 258, "49it": 258, "5956": 258, "7665": 258, "732": 258, "3527": 258, "0354": 258, "468": 258, "50it": 258, "2219": 258, "2999": 258, "8446": 258, "7448": 258, "961": 258, "7403": 258, "5034": 258, "411": 258, "9381": 258, "7937": 258, "619": 258, "8760": 258, "1022": 258, "79": 258, "6977": 258, "0331": 258, "987": 258, "8657": 258, "4508": 258, "919": 258, "9990": 258, "8757": 258, "921": 258, "9021": 258, "9585": 258, "518": 258, "6612": 258, "6255": 258, "648": 258, "7181": 258, "7913": 258, "089": 258, "0750": 258, "5913": 258, "596": 258, "8299": 258, "4152": 258, "9993": 258, "4527": 258, "2555": 258, "551": 258, "25": 258, "3655": 258, "3651": 258, "6557": 258, "3352": 258, "9137": 258, "7104": 258, "8728": [258, 261], "144": 258, "8547": 258, "6320": 258, "871": 258, "44it": 258, "7414": 258, "4717": 258, "211": 258, "7268": 258, "1833": 258, "6634": 258, "3899": 258, "6083": 258, "3508": 258, "5830": 258, "6835": 258, "8209": 258, "3483": 258, "7688": 258, "599": 258, "8693": 258, "3066": 258, "008": 258, "5190": 258, "2003": 258, "5916": 258, "0074": 258, "053": 258, "3596": 258, "3337": 258, "3250": 258, "4695": 258, "556": 258, "4941": 258, "0976": 258, "436": 258, "5073": 258, "6267": 258, "7900": 258, "7116": 258, "0649": 258, "206": 258, "45": [258, 259], "9751": 258, "0522": 258, "52it": 258, "0844": 258, "7387": 258, "845": 258, "2246": 258, "5251": 258, "3373": 258, "9479": 258, "2709": 258, "3046": 258, "3977": 258, "3212": 258, "642": 258, "51": [258, 259], "3854": 258, "9375": 258, "837": 258, "12it": 258, "6287": 258, "6260": 258, "24it": 258, "7219": 258, "8860": 258, "32it": 258, "6979": 258, "2648": 258, "4459": 258, "3500": 258, "3812": 258, "3433": 258, "222": 258, "4411": 258, "6690": 258, "45it": 258, "3777": 258, "1538": 258, "59": [258, 259, 260, 262], "8743": 258, "4807": 258, "22e": 258, "3545": 258, "0107": 258, "61": 258, "2255": 258, "3131": 258, "1588": 258, "4491": 258, "076": 258, "2080": 258, "2076": 258, "831": 258, "7440": 258, "6878": 258, "65": [258, 259], "2344": 258, "1025": 258, "902": 258, "9207": 258, "3350": 258, "2087": 258, "2254": 258, "9928": 258, "3105": 258, "6532": 258, "8399": 258, "224": 258, "5124": 258, "8030": 258, "6501": 258, "4525": 258, "8541": 258, "8998": 258, "796e": 258, "2027": 258, "1556": 258, "3472": 258, "3081": 258, "396": 258, "75": 258, "53it": 258, "3959": 258, "7512": 258, "3240": 258, "8101": 258, "77": 258, "54it": 258, "2314": 258, "4188": 258, "295": 258, "25it": 258, "9779": 258, "5535": 258, "5627": 258, "6739": 258, "8125": 258, "6816": 258, "755": 258, "17it": 258, "6262": 258, "0773": 258, "28it": 258, "8989": 258, "1044": 258, "36it": 258, "4514": 258, "0407": 258, "41it": 258, "0062": 258, "4916": 258, "4074": 258, "0404": 258, "3795": 258, "3577": 258, "122": [258, 262], "3650": 258, "4141": 258, "134": 258, "9704": 258, "9697": 258, "1513": 258, "4501": 258, "285": 258, "2994": 258, "4022": 258, "579": 258, "91": [258, 259], "2008": 258, "9061": 258, "558": 258, "0307": 258, "9752": 258, "93": 258, "5623": 258, "5012": 258, "2079": 258, "5742": 258, "125": 258, "2724": 258, "3876": 258, "2708": 258, "7700": 258, "058": 258, "97": [258, 259], "1960": 258, "1463": 258, "3716": 258, "0288": 258, "2872": 258, "0933": 258, "9320": 258, "1261": 258, "1747": 258, "4484": 258, "0453": 258, "3530": 258, "209": 258, "103": 258, "89it": 258, "3564": 258, "3918": 258, "06it": 258, "4985": 258, "105": 258, "19it": 258, "5372": 258, "6419": 258, "238": 258, "29it": 258, "4172": 258, "1033": 258, "107": 258, "5129": 258, "1738": 258, "982": 258, "108": [258, 261], "2507": 258, "6379": 258, "109": 258, "2202": 258, "9865": 258, "110": 258, "6413": 258, "0470": 258, "111": 258, "7870": 258, "4711": 258, "386": 258, "112": 258, "8113": 258, "5438": 258, "113": 258, "7211": 258, "2379": 258, "054": 258, "4828": 258, "5023": 258, "9169": 258, "8205": 258, "171": 258, "116": 258, "0791": 258, "4240": 258, "117": 258, "0138": 258, "3126": 258, "651": 258, "118": 258, "6676": 258, "3220": 258, "119": 258, "0057": 258, "120": 258, "4148": 258, "9243": 258, "121": [258, 262], "2873": 258, "2469": 258, "1979": 258, "1586": 258, "123": 258, "6911": 258, "8230": 258, "124": 258, "7729": 258, "9686": 258, "126": 258, "2032": 258, "0313": 258, "656": 258, "9053": 258, "4081": 258, "9441": 258, "3413": 258, "5864": 258, "006": 258, "129": 258, "0038": 258, "5304": 258, "7869": 258, "2975": 258, "7712": 258, "1618": 258, "132": 258, "7366": 258, "133": 258, "4165": 258, "0684": 258, "188e": 258, "8963": 258, "1896": 258, "135": 258, "7390": 258, "9629": 258, "9319": 258, "169": 258, "137": 258, "3621": 258, "138": 258, "7266": 258, "1210": 258, "139": 258, "8384": 258, "5619": 258, "140": 258, "0575": 258, "5144": 258, "141": 258, "8710": 258, "7681": 258, "8321": 258, "8516": 258, "945": 258, "143": 258, "0932": 258, "2351": 258, "773": 258, "0999": 258, "1744": 258, "145": 258, "2118": 258, "8154": 258, "146": 258, "7484": 258, "4035": 258, "147": 258, "5152": 258, "0088": 258, "148": 258, "5423": 258, "7286": 258, "149": 258, "7692": 258, "1465": 258, "150": 258, "0797": 258, "1392": 258, "151": 258, "9611": 258, "9006": 258, "152": 258, "7773": 258, "6767": 258, "153": 258, "4340": 258, "2778": 258, "154": 258, "5407": 258, "8302": 258, "595": 258, "155": 258, "4597": 258, "1627": 258, "156": 258, "87it": 258, "7073": 258, "3922": 258, "157": 258, "7815": 258, "9858": 258, "158": 258, "6953": 258, "7051": 258, "159": 258, "26it": 258, "6165": 258, "0605": 258, "3321": 258, "9367": 258, "161": 258, "39it": 258, "3238": 258, "1825": 258, "162": 258, "6537": 258, "6867": 258, "163": [258, 259], "8555": 258, "0956": 258, "164": 258, "3248": 258, "0159": 258, "165": 258, "2370": 258, "7480": 258, "166": 258, "8993": 258, "8285": 258, "167": 258, "5465": 258, "3198": 258, "168": 258, "9088": 258, "3417": 258, "2199": 258, "2993": 258, "170": 258, "7042": 258, "1570": 258, "6141": 258, "284": [258, 261], "172": [258, 261], "9925": 258, "2946": 258, "173": 258, "5968": 258, "174": 258, "1712": 258, "175": 258, "6813": 258, "9453": 258, "176": 258, "5664": 258, "177": 258, "3610": 258, "9569": 258, "178": 258, "0602": 258, "9931": 258, "179": 258, "7767": 258, "8155": 258, "180": 258, "0498": 258, "7331": 258, "568": 258, "181": [258, 260], "0781": 258, "1768": 258, "182": 258, "9178": 258, "6354": 258, "183": 258, "1244": 258, "8991": 258, "336": 258, "184": 258, "8262": 258, "2116": 258, "185": 258, "2508": 258, "7676": 258, "186": 258, "0428": 258, "2621": 258, "187": 258, "0812": 258, "9802": 258, "9924": 258, "0870": 258, "189": 258, "3196": 258, "2363": 258, "190": 258, "27it": 258, "9864": 258, "0182": 258, "191": 258, "34it": 258, "0345": 258, "9245": 258, "192": 258, "9191": 258, "1752": 258, "491": 258, "193": 258, "1470": 258, "8907": 258, "257": 258, "194": 258, "1925": 258, "676": 258, "195": 258, "1042": 258, "5107": 258, "842": 258, "196": 258, "0179": 258, "2845": 258, "197": 258, "9784": 258, "0536": 258, "198": 258, "8914": 258, "3151": 258, "2599": 258, "7948": 258, "4072": 258, "201": 258, "5997": 258, "8325": 258, "202": 258, "8960": 258, "4193": 258, "203": 258, "0600": 258, "8070": 258, "204": 258, "0523": 258, "0025": 258, "205": 258, "5027": 258, "0148": 258, "736": 258, "0363": 258, "3280": 258, "207": 258, "1871": 258, "1571": 258, "208": 258, "8204": 258, "6373": 258, "84it": 258, "9863": 258, "2612": 258, "0748": 258, "9467": 258, "8050": 258, "6954": 258, "291": 258, "212": 258, "4752": 258, "1008": 258, "016": 258, "213": 258, "8463": 258, "1723": 258, "214": 258, "6868": 258, "215": 258, "5380": 258, "1126": 258, "891": 258, "216": 258, "2657": 258, "2562": 258, "217": 258, "5513": 258, "0549": 258, "566": 258, "218": 258, "0561": 258, "1288": 258, "607": 258, "3470": 258, "0052": 258, "220": 258, "4686": 258, "0242": 258, "941": 258, "221": 258, "8202": 258, "9284": 258, "1519": 258, "799": 258, "223": 258, "9705": 258, "0056": 258, "027": 258, "9204": 258, "2680": 258, "991": 258, "225": 258, "0383": 258, "226": 258, "40it": 258, "1037": 258, "7906": 258, "227": 258, "3671": 258, "5151": 258, "228": 258, "9767": 258, "9817": 258, "229": 258, "6483": 258, "230": 258, "6856": 258, "5156": 258, "231": 258, "7647": 258, "4922": 258, "232": 258, "3724": 258, "4932": 258, "233": 258, "3750": 258, "873": 258, "234": 258, "7854": 258, "2685": 258, "839": 258, "235": 258, "2902": 258, "1122": 258, "618": 258, "236": 258, "0771": 258, "428": 258, "237": 258, "0086": 258, "3233": 258, "3264": 258, "239": 258, "4450": 258, "1583": 258, "240": [258, 261, 262], "3840": 258, "3740": 258, "241": 258, "2403": 258, "0024": 258, "569": 258, "242": 258, "1011": 258, "0112": 258, "251": [258, 260], "243": 258, "6538": 258, "0162": 258, "9349": 258, "7379": 258, "245": 258, "8236": 258, "0259": 258, "8227": 258, "246": 258, "4424": 258, "6078": 258, "247": 258, "1075": 258, "2630": 258, "248": 258, "2208": 258, "0820": 258, "684": 258, "249": 258, "2719": 258, "7146": 258, "364": 258, "4423": 258, "9679": 258, "4463": 258, "5761": 258, "252": 258, "0347": 258, "0947": 258, "253": 258, "4200": 258, "0638": 258, "254": 258, "4313": 258, "0403": 258, "074": 258, "6630": 258, "0239": 258, "1293": 258, "0677": 258, "8976": 258, "0517": 258, "092": 258, "258": 258, "3424": 258, "1411": 258, "259": 258, "0897": 258, "0417": 258, "013": 258, "260": 258, "9226": 258, "0016": 258, "4881": 258, "261": 258, "1743": 258, "0167": 258, "262": 258, "86it": 258, "1668": 258, "0481": 258, "608": 258, "263": 258, "1277": 258, "0092": 258, "8715": 258, "264": 258, "18it": 258, "0661": 258, "0067": 258, "7747": 258, "265": 258, "2779": 258, "0430": 258, "9998": 258, "266": 258, "9067": 258, "0251": 258, "015": 258, "267": 258, "4558": 258, "0186": 258, "268": 258, "1901": 258, "1413": 258, "1785": 258, "0324": 258, "562": 258, "270": 258, "2759": 258, "826": 258, "271": 258, "1844": 258, "0168": 258, "587": 258, "272": 258, "3009": 258, "0362": 258, "273": 258, "7069": 258, "274": 258, "0793": 258, "5345": [258, 260], "275": 258, "0513": 258, "0211": 258, "088": 258, "276": 258, "4400": 258, "0433": 258, "866": 258, "277": 258, "2846": 258, "0157": 258, "427": 258, "278": 258, "2392": 258, "1046": 258, "408": 258, "279": 258, "1373": 258, "5125": 258, "280": 258, "1448": 258, "0560": 258, "678": 258, "281": 258, "5425": 258, "0506": 258, "282": 258, "5210": 258, "0940": 258, "334": 258, "283": 258, "0558": 258, "876": 258, "2645": 258, "0130": 258, "5357": 258, "7399": 258, "8931": 258, "286": 258, "2394": 258, "9803": 258, "287": 258, "6626": 258, "8780": 258, "288": 258, "2521": 258, "0027": 258, "289": 258, "1452": 258, "0534": 258, "877": 258, "290": 258, "2637": 258, "0477": 258, "519": 258, "2021": 258, "0382": 258, "742": 258, "292": 258, "1473": 258, "0208": 258, "293": 258, "3379": 258, "0450": 258, "294": 258, "2145": 258, "0270": 258, "3688": 258, "7527": 258, "296": 258, "8627": 258, "297": 258, "2180": 258, "0066": 258, "298": 258, "0373": 258, "0055": 258, "299": 258, "5879": 258, "9401": 258, "6223": 258, "8889": 258, "301": 258, "2797": 258, "1580": 258, "302": 258, "9936": 258, "4949": 258, "303": 258, "4579": 258, "9796": 258, "304": 258, "20it": 258, "0070": 258, "9057": 258, "305": 258, "2540": 258, "746": 258, "5077": 258, "1406": 258, "307": 258, "7956": 258, "7657": 258, "308": 258, "9119": 258, "1691": 258, "309": 258, "2513": 258, "3036": 258, "310": 258, "0779": 258, "0079": 258, "8692": 258, "311": 258, "9439": 258, "0460": 258, "592": 258, "8099": 258, "0491": 258, "313": 258, "516": 258, "314": 258, "8046": 258, "0147": 258, "404": 258, "0122": 258, "0017": 258, "6365": 258, "1499": 258, "0109": 258, "717": 258, "317": 258, "0034": 258, "4328": 258, "318": 258, "1559": 258, "0010": 258, "3445": 258, "9434": 258, "2862": 258, "320": [258, 262], "9168": 258, "0020": 258, "7494": 258, "7114": 258, "004": 258, "2146": 258, "8207": 258, "0008": 258, "093": 258, "0291": 258, "0036": 258, "733": 258, "0031": 258, "0059": 258, "9693": 258, "4539": 258, "4015": 258, "2260": 258, "0032": 258, "8712": 258, "2449": 258, "0100": 258, "7291": 258, "329": 258, "0009": 258, "5744": 258, "330": 258, "9889": 258, "0205": 258, "563": 258, "331": 258, "9478": 258, "0578": 258, "332": 258, "3117": [258, 262], "3474": 258, "333": 258, "3562": 258, "2592": 258, "2034": 258, "0292": 258, "335": 258, "6824": 258, "2522": 258, "565": 258, "337": 258, "9085": 258, "0041": 258, "798": 258, "338": 258, "0409": 258, "0278": 258, "339": 258, "0081": 258, "077": 258, "340": 258, "1038": 258, "0184": 258, "341": 258, "2485": 258, "948": 258, "342": 258, "3397": 258, "343": 258, "1390": 258, "1946": 258, "344": 258, "3108": 258, "9773": 258, "345": 258, "9628": 258, "8776": 258, "346": 258, "2432": 258, "593": 258, "347": 258, "91it": 258, "4281": 258, "3059": 258, "348": 258, "70it": 258, "9241": 258, "0303": 258, "349": 258, "4747": 258, "3566": 258, "350": [258, 259, 260], "5687": 258, "1356": 258, "351": 258, "9195": 258, "2604": 258, "352": 258, "5555": 258, "353": 258, "4093": 258, "354": 258, "3465": 258, "0412": 258, "498": 258, "355": 258, "4612": 258, "0659": 258, "888": 258, "356": 258, "0915": 258, "6161": 258, "357": 258, "4199": 258, "6984": 258, "358": 258, "1434": 258, "5982": 258, "359": 258, "6443": 258, "8121": 258, "360": 258, "9721": 258, "559": 258, "361": 258, "5386": 258, "0893": 258, "362": 258, "1242": [258, 261], "0828": 258, "507": 258, "363": 258, "8708": 258, "1920": 258, "548": 258, "9075": 258, "4399": 258, "365": 258, "6237": 258, "0761": 258, "929": 258, "366": 258, "1787": 258, "1726": 258, "367": 258, "4725": 258, "368": 258, "0309": 258, "502": 258, "369": 258, "6823": 258, "0098": 258, "370": 258, "2397": 258, "371": 258, "4634": 258, "0099": 258, "699": 258, "372": 258, "9857": 258, "9962": 258, "373": 258, "9991": 258, "2484": 258, "374": 258, "8959": 258, "737": 258, "375": 258, "1581": 258, "376": 258, "8401": 258, "377": 258, "9562": 258, "0272": 258, "378": 258, "9824": 258, "4239": 258, "379": 258, "2841": 258, "380": 258, "9922": 258, "4334": 258, "381": 258, "9613": 258, "6321": 258, "382": 258, "0516": 258, "8370": 258, "383": 258, "9549": 258, "7350": 258, "384": 258, "1794": 258, "4433": 258, "385": 258, "5432": 258, "738": 258, "9084": 258, "387": 258, "8010": 258, "388": 258, "9532": 258, "6513": 258, "389": 258, "8265": 258, "0729": 258, "390": 258, "8901": 258, "3721": 258, "391": 258, "8347": 258, "7444": 258, "392": 258, "31it": 258, "6952": 258, "7052": 258, "393": 258, "4568": 258, "1346": 258, "394": 258, "2150": 258, "0438": 258, "943": 258, "395": 258, "2904": 258, "9225": 258, "3052": 258, "0075": 258, "8393": 258, "397": 258, "1268": 258, "398": 258, "4296": 258, "1481": 258, "399": 258, "5538": 258, "3458": 258, "2728": 258, "1060": 258, "401": 258, "7887": 258, "2564": 258, "402": 258, "9080": 258, "5411": 258, "403": 258, "1620": 258, "7441": 258, "7703": 258, "405": 258, "6127": 258, "3102": 258, "406": 258, "4175": 258, "5960": 258, "407": 258, "0043": 258, "8779": 258, "409": 258, "6928": 258, "410": 258, "2700": 258, "022": 258, "0357": 258, "0019": 258, "028": 258, "412": 258, "0935": 258, "0060": 258, "7993": 258, "413": 258, "9033": 258, "0065": 258, "6378": 258, "414": 258, "9597": 258, "415": 258, "0110": 258, "0005": 258, "4133": 258, "416": 258, "8585": 258, "0042": 258, "6746": 258, "417": 258, "7328": 258, "1174": 258, "4613": 258, "418": 258, "2442": 258, "0233": 258, "419": 258, "3477": 258, "018": 258, "420": 258, "6869": 258, "0289": 258, "4806": 258, "421": 258, "1528": 258, "0134": 258, "2848": 258, "422": 258, "1684": 258, "2155": 258, "423": 258, "0116": 258, "5719": 258, "424": 258, "0214": 258, "2801": 258, "425": 258, "4760": 258, "0224": 258, "6168": 258, "426": 258, "2511": 258, "0045": 258, "1865": 258, "8317": 258, "1415": 258, "2207": 258, "0841": 258, "429": 258, "0849": 258, "985": 258, "430": 258, "9495": 258, "0372": 258, "9485": 258, "431": 258, "9242": 258, "0039": 258, "4826": 258, "432": 258, "1635": 258, "433": 258, "9218": 258, "1003": 258, "434": 258, "7468": 258, "1522": 258, "435": 258, "7471": 258, "5852": 258, "9354": 258, "0013": 258, "037": 258, "437": 258, "3633": 258, "0187": 258, "061": 258, "438": 258, "7091": 258, "0212": 258, "439": 258, "0950": 258, "6344": 258, "440": 258, "1945": 258, "5790": 258, "441": 258, "6370": 258, "7047": 258, "442": 258, "9447": 258, "0551": 258, "443": 258, "0674": 258, "0146": 258, "046": 258, "0087": 258, "0247": 258, "445": 258, "2640": 258, "0129": 258, "8987": 258, "446": 258, "1670": 258, "5398": 258, "447": 258, "9180": 258, "7940": 258, "448": 258, "2948": 258, "0588": 258, "449": 258, "0486": 258, "0029": 258, "1134": 258, "450": 258, "3267": 258, "5681": 258, "451": 258, "0151": 258, "452": 258, "6647": 258, "0316": 258, "453": 258, "5449": 258, "0209": 258, "097": 258, "454": 258, "9321": 258, "3687": 258, "953": 258, "455": 258, "9511": 258, "2701": 258, "456": 258, "0406": 258, "8281": 258, "457": 258, "0379": 258, "458": 258, "2470": 258, "0437": 258, "459": 258, "5843": 258, "0072": 258, "460": 258, "6838": 258, "3447": 258, "461": 258, "7313": 258, "0355": 258, "462": 258, "9268": 258, "0265": 258, "9834": 258, "463": 258, "8536": 258, "9786": 258, "464": 258, "0696": 258, "7232": 258, "465": 258, "9096": 258, "4422": 258, "466": 258, "3227": 258, "0026": 258, "467": 258, "9565": 258, "9563": 258, "9941": 258, "1284": 258, "469": 258, "1401": 258, "2850": 258, "470": 258, "1807": 258, "8859": 258, "471": 258, "0268": 258, "2992": 258, "472": 258, "7436": 258, "0048": 258, "034": 258, "473": 258, "7046": 258, "0352": 258, "474": 258, "2023": 258, "3258": 258, "515": 258, "475": 258, "03it": 258, "0141": 258, "9798": 258, "476": 258, "4474": 258, "0912": 258, "477": 258, "9181": 258, "5476": 258, "478": 258, "1264": 258, "3269": 258, "479": 258, "0714": 258, "0030": 258, "5317": 258, "480": [258, 259], "5477": 258, "0255": 258, "8628": 258, "481": 258, "1258": 258, "0015": 258, "482": 258, "9650": 258, "4266": 258, "483": 258, "8081": 258, "0004": 258, "4455": 258, "484": 258, "5812": 258, "1719": 258, "485": 258, "1741": 258, "486": 258, "1595": 258, "0089": 258, "936": 258, "487": 258, "1667": 258, "3892": 258, "488": 258, "3824": 258, "0093": 258, "6528": 258, "489": 258, "1727": 258, "1435": 258, "059": 258, "490": 258, "0916": 258, "0018": 258, "4518": 258, "9310": 258, "0006": 258, "3553": 258, "492": 258, "9972": 258, "4515": 258, "493": 258, "9493": 258, "8759": 258, "494": 258, "3700": 258, "495": 258, "0269": 258, "4107": 258, "496": 258, "6094": 258, "497": 258, "9116": 258, "1518": 258, "6022": 258, "0047": 258, "2026": 258, "499": 258, "8009": 258, "0007": 258, "1845": 258, "6948": 258, "501": 258, "0971": 258, "0387": 258, "951": 258, "2885": 258, "503": 258, "0894": 258, "2552": 258, "0191": 258, "505": 258, "8276": 258, "506": 258, "9520": 258, "0037": 258, "5835": 258, "0374": 258, "7556": 258, "508": 258, "0579": 258, "0399": 258, "509": 258, "0094": 258, "7127": 258, "510": 258, "0119": 258, "0121": 258, "511": 258, "6013": 258, "0220": 258, "8064": 258, "2684": 258, "8179": 258, "513": 258, "4730": 258, "0046": 258, "5481": 258, "514": 258, "0234": 258, "4331": 258, "8143": 258, "2915": [258, 261], "9051": 258, "0353": 258, "9127": 258, "517": 258, "0527": 258, "6465": 258, "7579": 258, "2010": 258, "3927": 258, "5383": 258, "862": 258, "520": 258, "7386": 258, "1014": 258, "521": 258, "9163": 258, "4487": 258, "522": 258, "5626": 258, "523": 258, "2899": 258, "0113": 258, "524": 258, "15it": 258, "6441": 258, "0044": 258, "3965": 258, "525": 258, "5001": 258, "2060": 258, "526": 258, "8905": 258, "4168": 258, "527": 258, "4458": 258, "0012": 258, "051": 258, "528": 258, "22it": 258, "9446": 258, "3096": 258, "529": 258, "2399": 258, "1971": 258, "530": 258, "76it": 258, "4471": 258, "531": 258, "97it": 258, "1270": 258, "0023": 258, "532": 258, "533": 258, "6550": 258, "583": 258, "534": 258, "1092": 258, "0049": 258, "787": 258, "535": 258, "63it": 258, "7641": 258, "6674": 258, "536": 258, "0083": 258, "6375": 258, "537": 258, "1713": 258, "4933": 258, "538": 258, "3557": 258, "3964": 258, "539": 258, "0040": 258, "4129": 258, "540": 258, "7999": 258, "3176": 258, "541": 258, "4742": 258, "542": 258, "1826": 258, "934": 258, "543": 258, "3158": 258, "544": 258, "3686": 258, "4047": 258, "545": 258, "7943": 258, "0902": 258, "546": 258, "3889": 258, "547": 258, "4309": 258, "4762": 258, "1662": 258, "9526": 258, "549": 258, "2170": 258, "0520": 258, "4367": 258, "550": 258, "4584": 258, "6931": 258, "0306": 258, "752": 258, "552": 258, "9054": 258, "2062": 258, "553": 258, "9523": 258, "4382": 258, "554": 258, "3534": 258, "0136": 258, "663": 258, "555": 258, "0279": 258, "0171": 258, "5679": 258, "4345": 258, "0145": 258, "4652": 258, "557": 258, "1205": 258, "0091": 258, "4838": 258, "0630": 258, "1721": 258, "3604": 258, "560": 258, "1695": 258, "561": 258, "6994": 258, "3646": 258, "0192": 258, "4547": 258, "564": 258, "2580": 258, "2356": 258, "1397": 258, "8400": 258, "7309": 258, "567": 258, "2400": 258, "0101": 258, "8539": 258, "1256": 258, "4851": 258, "0284": 258, "570": 258, "7214": 258, "2575": 258, "571": 258, "3996": 258, "572": 258, "2542": 258, "4089": 258, "573": 258, "5782": 258, "0071": 258, "7487": 258, "574": 258, "3665": 258, "0050": 258, "7797": 258, "575": 258, "5660": 258, "1355": 258, "932": 258, "576": 258, "8266": 258, "577": 258, "3782": 258, "743": [258, 261], "578": 258, "1228": 258, "2931": 258, "043": 258, "6242": 258, "580": 258, "7491": 258, "6910": 258, "581": 258, "2258": 258, "0262": 258, "582": 258, "2386": 258, "0249": 258, "816": 258, "2947": 258, "2122": 258, "584": 258, "0096": 258, "0124": 258, "585": 258, "2979": 258, "0156": 258, "4948": 258, "586": 258, "3268": 258, "0369": 258, "6409": 258, "4034": 258, "4395": 258, "588": 258, "8407": 258, "4432": 258, "589": 258, "0069": 258, "3628": 258, "590": 258, "591": 258, "3404": 258, "2912": 258, "2964": 258, "2112": 258, "4832": 258, "594": 258, "8374": 258, "4346": 258, "7782": 258, "3826": 258, "7098": 258, "597": 258, "8646": 258, "0526": 258, "598": 258, "7452": 258, "9579": 258, "0991": 258, "889": 258, "600": 258, "0332": 258, "0199": 258, "601": 258, "602": 258, "7237": 258, "3591": 258, "603": 258, "3797": 258, "0022": 258, "6776": 258, "604": 258, "9337": 258, "1918": 258, "605": 258, "6301": 258, "606": 258, "5972": 258, "5044": 258, "2131": 258, "664": 258, "609": 258, "1180": 258, "6142": 258, "610": 258, "5289": 258, "6693": 258, "611": 258, "4947": 258, "612": 258, "2196": 258, "4060": 258, "613": 258, "7377": 258, "3732": 258, "614": 258, "4574": 258, "0997": 258, "3581": 258, "615": 258, "9247": 258, "3012": 258, "616": 258, "3761": 258, "5136": 258, "617": 258, "4771": 258, "894": 258, "0177": 258, "3644": 258, "620": 258, "5914": 258, "1632": 258, "621": 258, "4353": 258, "7637": 258, "622": 258, "7577": 258, "1609": 258, "809": 258, "623": 258, "8873": 258, "624": 258, "6568": 258, "5234": 258, "subject": 258, "saw": 258, "fine": 259, "semat": 259, "r3mtransform": 259, "sake": 259, "embodi": 259, "ai": 259, "env_transform": [259, 262], "s3": 259, "amazonaw": 259, "r3m_50": 259, "374m": 259, "4m": 259, "120mb": 259, "9m": 259, "141mb": 259, "7m": 259, "6m": 259, "4mb": 259, "1mb": 259, "3mb": 259, "3m": 259, "115m": 259, "104mb": 259, "129m": 259, "115mb": 259, "141m": 259, "109mb": 259, "151m": 259, "164m": 259, "5mb": 259, "179m": 259, "111mb": 259, "190m": 259, "108mb": 259, "201m": 259, "211m": 259, "105mb": 259, "221m": 259, "103mb": 259, "231m": 259, "0mb": 259, "244m": 259, "255m": 259, "265m": 259, "279m": 259, "8mb": 259, "292m": 259, "107mb": 259, "303m": 259, "6mb": 259, "312m": 259, "321m": 259, "9mb": 259, "328m": 259, "342m": 259, "357m": 259, "7mb": 259, "367m": 259, "2mb": 259, "2048": 259, "wiser": 259, "again": [259, 262], "conclud": 259, "_storag": 259, "4888": 259, "pretrained_model": [259, 260], "torchrl_demo": [260, 261], "827": [260, 261], "5349": [260, 261], "torchrl_env": [260, 262], "679": [260, 262], "4887": 260, "demo": 261, "icml": 261, "dai": 261, "vmoen": 261, "fb": 261, "question": 261, "team": 261, "invest": 261, "platform": 261, "media": 261, "truli": 261, "predominantli": 261, "tensordict1": 261, "tensordict2": 261, "tensordict_sampl": 261, "_sampler": 261, "_sum_tre": 261, "modulenotfounderror": 261, "28791671991348267": 261, "gym_env": 261, "noopresetenv": [261, 262], "lazyconv2d": 261, "6400": 261, "backbone_modul": 261, "params_expand": 261, "tensordict_exp": 261, "base_modul": 261, "0137": 261, "1524": 261, "0641": 261, "copybackward": 261, "1335": 261, "9833": 261, "3497": 261, "6889": 261, "6433": 261, "clampbackward1": 261, "1131": 261, "1761": 261, "3425": 261, "2665": 261, "6207": 261, "1441": 261, "2375": 261, "1372": 261, "3810": 261, "meanbackward1": 261, "tensordicts_prealloc": 261, "tensordicts_stack": 261, "tensordict_rollout": [261, 262], "disclaim": 261, "concatmodul": 261, "loss_td": 261, "1501": 261, "_call_impl": 261, "forward_cal": 261, "pred_val": 261, "_loss_valu": 261, "3367": 261, "_default_get": 261, "1012": 261, "keyerror": 261, "year": 261, "roadmap": 261, "compris": 261, "contributor": 261, "curiou": 261, "feedback": 261, "nascent": 261, "supervis": 262, "unsupervis": 262, "rom": 262, "licens": 262, "pygam": 262, "unifi": 262, "insid": 262, "_build_env": 262, "sphinx_gallery_start_ignor": 262, "warn": 262, "filterwarn": 262, "sphinx_gallery_end_ignor": 262, "adventur": 262, "ram": 262, "airraid": 262, "alien": 262, "amidar": 262, "assault": 262, "2176": 262, "exectut": 262, "reproduct": 262, "tensordict_tprim": 262, "quickli": 262, "imshow": 262, "axesimag": 262, "0x7fdbe70a25e0": 262, "inconsist": 262, "swingup": 262, "swingup_spars": 262, "ball_in_cup": 262, "catch": 262, "balance_spars": 262, "three_pol": 262, "two_pol": 262, "finger": 262, "turn_easi": 262, "turn_hard": 262, "fish": 262, "swim": 262, "hopper": 262, "hop": 262, "run_pure_st": 262, "bring_bal": 262, "bring_peg": 262, "insert_bal": 262, "insert_peg": 262, "point_mass": 262, "reacher": 262, "swimmer": 262, "swimmer6": 262, "swimmer15": 262, "walker": 262, "dog": 262, "trot": 262, "humanoid_cmu": 262, "lqr": 262, "lqr_2_1": 262, "lqr_6_2": 262, "quadrup": 262, "escap": 262, "stacker": 262, "stack_2": 262, "stack_4": 262, "wrapper1": 262, "wrapper2": 262, "obviou": 262, "truth": 262, "env0": 262, "env_transformed_bi": 262, "stanc": 262, "transformeddistribut": 262, "base_dist": 262, "concat": 262, "mofidi": 262, "transformedenviron": 262, "moderet": 262, "computation": 262, "legitim": 262, "incom": 262, "amongst": 262, "wor": 262, "convention": 262, "scope": 262, "markovian": 262, "3288080526": 262, "sometim": 262, "constain": 262, "uuid1": 262, "foo": 262, "bar_": 262, "get_someth": 262, "bar_36b2e706": 262, "d25d": 262, "11ed": 262, "8cb4": 262, "0242ac120002": 262, "aargh": 262, "ahead": 262, "foo_list": 262, "vec_env": 262, "_dispatch_caller_parallel": 262, "0x7fdbe5e810d0": 262, "bar_3e839c6": 262, "a122": 262, "bar_3e8b54e0": 262, "bf64": 262, "bar_3e899bdc": 262, "ae31": 262, "parallen": 262, "carefulli": 262, "commonli": 262, "approxim": 262, "particularili": 262, "evolv": 262, "steadi": 262, "approx": 262, "6925": 262, "2124": 262, "0500": 262, "3903": 262, "3926": 262, "3580": 262, "_extra_st": 262, "observation_ssq": 262, "observation_sum": 262, "2297": 262, "2042": 262, "0759": 262, "2253": 262, "2480": 262, "dispach": 262, "absor": 262}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[22, 2, 1, "", "split_trajectories"]], "torchrl.data": [[23, 0, 1, "", "BinaryDiscreteTensorSpec"], [24, 0, 1, "", "BoundedTensorSpec"], [25, 0, 1, "", "CompositeSpec"], [26, 0, 1, "", "DiscreteTensorSpec"], [27, 0, 1, "", "MultiDiscreteTensorSpec"], [28, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [29, 0, 1, "", "OneHotDiscreteTensorSpec"], [30, 0, 1, "", "PrioritizedReplayBuffer"], [31, 0, 1, "", "ReplayBuffer"], [32, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [33, 0, 1, "", "TensorDictReplayBuffer"], [34, 0, 1, "", "TensorSpec"], [35, 0, 1, "", "UnboundedContinuousTensorSpec"], [36, 0, 1, "", "UnboundedDiscreteTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "expand"], [23, 1, 1, "", "implements_for_spec"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "squeeze"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "to_one_hot"], [23, 1, 1, "", "to_one_hot_spec"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "items"], [25, 1, 1, "", "keys"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "values"], [25, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_categorical"], [28, 1, 1, "", "to_categorical_spec"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_categorical"], [29, 1, 1, "", "to_categorical_spec"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[30, 1, 1, "", "add"], [30, 1, 1, "", "append_transform"], [30, 1, 1, "", "extend"], [30, 1, 1, "", "insert_transform"], [30, 1, 1, "", "sample"]], "torchrl.data.ReplayBuffer": [[31, 1, 1, "", "add"], [31, 1, 1, "", "append_transform"], [31, 1, 1, "", "extend"], [31, 1, 1, "", "insert_transform"], [31, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[32, 1, 1, "", "add"], [32, 1, 1, "", "append_transform"], [32, 1, 1, "", "extend"], [32, 1, 1, "", "insert_transform"], [32, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[33, 1, 1, "", "add"], [33, 1, 1, "", "append_transform"], [33, 1, 1, "", "extend"], [33, 1, 1, "", "insert_transform"], [33, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "implements_for_spec"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "squeeze"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "zero"]], "torchrl.data.datasets": [[37, 0, 1, "", "D4RLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[37, 1, 1, "", "add"], [37, 1, 1, "", "append_transform"], [37, 1, 1, "", "extend"], [37, 1, 1, "", "insert_transform"], [37, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[38, 0, 1, "", "LazyMemmapStorage"], [39, 0, 1, "", "LazyTensorStorage"], [40, 0, 1, "", "ListStorage"], [41, 0, 1, "", "PrioritizedSampler"], [42, 0, 1, "", "RandomSampler"], [43, 0, 1, "", "RoundRobinWriter"], [44, 0, 1, "", "Sampler"], [45, 0, 1, "", "SamplerWithoutReplacement"], [46, 0, 1, "", "Storage"], [47, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[39, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[40, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[41, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[43, 1, 1, "", "add"], [43, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[46, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[47, 1, 1, "", "add"], [47, 1, 1, "", "extend"]], "torchrl.envs": [[48, 0, 1, "", "EnvBase"], [49, 0, 1, "", "EnvCreator"], [50, 0, 1, "", "EnvMetaData"], [51, 0, 1, "", "GymLikeEnv"], [52, 2, 1, "", "ModelBasedEnvBase"], [53, 0, 1, "", "MultiThreadedEnv"], [54, 0, 1, "", "ParallelEnv"], [55, 0, 1, "", "SerialEnv"], [52, 1, 1, "", "rand_step"], [52, 1, 1, "", "reset"], [52, 1, 1, "", "rollout"], [52, 1, 1, "", "set_seed"], [52, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[48, 1, 1, "", "add_module"], [48, 1, 1, "", "apply"], [48, 3, 1, "", "batch_locked"], [48, 1, 1, "", "bfloat16"], [48, 1, 1, "", "buffers"], [48, 1, 1, "", "children"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 1, 1, "", "double"], [48, 1, 1, "", "eval"], [48, 1, 1, "", "extra_repr"], [48, 1, 1, "", "fake_tensordict"], [48, 1, 1, "", "float"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_buffer"], [48, 1, 1, "", "get_extra_state"], [48, 1, 1, "", "get_parameter"], [48, 1, 1, "", "get_submodule"], [48, 1, 1, "", "half"], [48, 1, 1, "", "ipu"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "modules"], [48, 1, 1, "", "named_buffers"], [48, 1, 1, "", "named_children"], [48, 1, 1, "", "named_modules"], [48, 1, 1, "", "named_parameters"], [48, 1, 1, "", "parameters"], [48, 1, 1, "", "rand_action"], [48, 1, 1, "id0", "rand_step"], [48, 1, 1, "", "register_backward_hook"], [48, 1, 1, "", "register_buffer"], [48, 1, 1, "", "register_forward_hook"], [48, 1, 1, "", "register_forward_pre_hook"], [48, 1, 1, "", "register_full_backward_hook"], [48, 1, 1, "", "register_full_backward_pre_hook"], [48, 1, 1, "", "register_load_state_dict_post_hook"], [48, 1, 1, "", "register_module"], [48, 1, 1, "", "register_parameter"], [48, 1, 1, "", "register_state_dict_pre_hook"], [48, 1, 1, "", "requires_grad_"], [48, 1, 1, "id1", "reset"], [48, 1, 1, "id2", "rollout"], [48, 1, 1, "", "set_extra_state"], [48, 1, 1, "id3", "set_seed"], [48, 1, 1, "", "share_memory"], [48, 3, 1, "", "specs"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "id4", "step"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_empty"], [48, 1, 1, "", "train"], [48, 1, 1, "", "type"], [48, 1, 1, "", "xpu"], [48, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[51, 1, 1, "", "add_module"], [51, 1, 1, "", "apply"], [51, 3, 1, "", "batch_locked"], [51, 1, 1, "", "bfloat16"], [51, 1, 1, "", "buffers"], [51, 1, 1, "", "children"], [51, 1, 1, "", "close"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 1, 1, "", "double"], [51, 1, 1, "", "eval"], [51, 1, 1, "", "extra_repr"], [51, 1, 1, "", "fake_tensordict"], [51, 1, 1, "", "float"], [51, 1, 1, "", "forward"], [51, 1, 1, "", "get_buffer"], [51, 1, 1, "", "get_extra_state"], [51, 1, 1, "", "get_parameter"], [51, 1, 1, "", "get_submodule"], [51, 1, 1, "", "half"], [51, 1, 1, "", "ipu"], [51, 1, 1, "", "load_state_dict"], [51, 1, 1, "", "modules"], [51, 1, 1, "", "named_buffers"], [51, 1, 1, "", "named_children"], [51, 1, 1, "", "named_modules"], [51, 1, 1, "", "named_parameters"], [51, 1, 1, "", "parameters"], [51, 1, 1, "", "rand_action"], [51, 1, 1, "", "rand_step"], [51, 1, 1, "", "read_action"], [51, 1, 1, "", "read_done"], [51, 1, 1, "", "read_obs"], [51, 1, 1, "", "read_reward"], [51, 1, 1, "", "register_backward_hook"], [51, 1, 1, "", "register_buffer"], [51, 1, 1, "", "register_forward_hook"], [51, 1, 1, "", "register_forward_pre_hook"], [51, 1, 1, "", "register_full_backward_hook"], [51, 1, 1, "", "register_full_backward_pre_hook"], [51, 1, 1, "", "register_load_state_dict_post_hook"], [51, 1, 1, "", "register_module"], [51, 1, 1, "", "register_parameter"], [51, 1, 1, "", "register_state_dict_pre_hook"], [51, 1, 1, "", "requires_grad_"], [51, 1, 1, "", "reset"], [51, 1, 1, "", "rollout"], [51, 1, 1, "", "set_extra_state"], [51, 1, 1, "", "set_info_dict_reader"], [51, 1, 1, "", "set_seed"], [51, 1, 1, "", "share_memory"], [51, 3, 1, "", "specs"], [51, 1, 1, "", "state_dict"], [51, 1, 1, "", "step"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_empty"], [51, 1, 1, "", "train"], [51, 1, 1, "", "type"], [51, 1, 1, "", "xpu"], [51, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[53, 1, 1, "", "add_module"], [53, 1, 1, "", "apply"], [53, 3, 1, "", "batch_locked"], [53, 1, 1, "", "bfloat16"], [53, 1, 1, "", "buffers"], [53, 1, 1, "", "children"], [53, 1, 1, "", "close"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 1, 1, "", "double"], [53, 1, 1, "", "eval"], [53, 1, 1, "", "extra_repr"], [53, 1, 1, "", "fake_tensordict"], [53, 1, 1, "", "float"], [53, 1, 1, "", "forward"], [53, 1, 1, "", "get_buffer"], [53, 1, 1, "", "get_extra_state"], [53, 1, 1, "", "get_parameter"], [53, 1, 1, "", "get_submodule"], [53, 1, 1, "", "half"], [53, 1, 1, "", "ipu"], [53, 1, 1, "", "load_state_dict"], [53, 1, 1, "", "modules"], [53, 1, 1, "", "named_buffers"], [53, 1, 1, "", "named_children"], [53, 1, 1, "", "named_modules"], [53, 1, 1, "", "named_parameters"], [53, 1, 1, "", "parameters"], [53, 1, 1, "", "rand_action"], [53, 1, 1, "", "rand_step"], [53, 1, 1, "", "register_backward_hook"], [53, 1, 1, "", "register_buffer"], [53, 1, 1, "", "register_forward_hook"], [53, 1, 1, "", "register_forward_pre_hook"], [53, 1, 1, "", "register_full_backward_hook"], [53, 1, 1, "", "register_full_backward_pre_hook"], [53, 1, 1, "", "register_load_state_dict_post_hook"], [53, 1, 1, "", "register_module"], [53, 1, 1, "", "register_parameter"], [53, 1, 1, "", "register_state_dict_pre_hook"], [53, 1, 1, "", "requires_grad_"], [53, 1, 1, "", "reset"], [53, 1, 1, "", "rollout"], [53, 1, 1, "", "set_extra_state"], [53, 1, 1, "", "set_seed"], [53, 1, 1, "", "share_memory"], [53, 3, 1, "", "specs"], [53, 1, 1, "", "state_dict"], [53, 1, 1, "", "step"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_empty"], [53, 1, 1, "", "train"], [53, 1, 1, "", "type"], [53, 1, 1, "", "xpu"], [53, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[54, 1, 1, "", "add_module"], [54, 1, 1, "", "apply"], [54, 3, 1, "", "batch_locked"], [54, 1, 1, "", "bfloat16"], [54, 1, 1, "", "buffers"], [54, 1, 1, "", "children"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 1, 1, "", "double"], [54, 1, 1, "", "eval"], [54, 1, 1, "", "extra_repr"], [54, 1, 1, "", "fake_tensordict"], [54, 1, 1, "", "float"], [54, 1, 1, "", "forward"], [54, 1, 1, "", "get_buffer"], [54, 1, 1, "", "get_extra_state"], [54, 1, 1, "", "get_parameter"], [54, 1, 1, "", "get_submodule"], [54, 1, 1, "", "half"], [54, 1, 1, "", "ipu"], [54, 1, 1, "", "load_state_dict"], [54, 1, 1, "", "modules"], [54, 1, 1, "", "named_buffers"], [54, 1, 1, "", "named_children"], [54, 1, 1, "", "named_modules"], [54, 1, 1, "", "named_parameters"], [54, 1, 1, "", "parameters"], [54, 1, 1, "", "rand_action"], [54, 1, 1, "", "rand_step"], [54, 1, 1, "", "register_backward_hook"], [54, 1, 1, "", "register_buffer"], [54, 1, 1, "", "register_forward_hook"], [54, 1, 1, "", "register_forward_pre_hook"], [54, 1, 1, "", "register_full_backward_hook"], [54, 1, 1, "", "register_full_backward_pre_hook"], [54, 1, 1, "", "register_load_state_dict_post_hook"], [54, 1, 1, "", "register_module"], [54, 1, 1, "", "register_parameter"], [54, 1, 1, "", "register_state_dict_pre_hook"], [54, 1, 1, "", "requires_grad_"], [54, 1, 1, "", "reset"], [54, 1, 1, "", "rollout"], [54, 1, 1, "", "set_extra_state"], [54, 1, 1, "", "set_seed"], [54, 1, 1, "", "share_memory"], [54, 3, 1, "", "specs"], [54, 1, 1, "", "state_dict"], [54, 1, 1, "", "step"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_empty"], [54, 1, 1, "", "train"], [54, 1, 1, "", "type"], [54, 1, 1, "", "update_kwargs"], [54, 1, 1, "", "xpu"], [54, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[55, 1, 1, "", "add_module"], [55, 1, 1, "", "apply"], [55, 3, 1, "", "batch_locked"], [55, 1, 1, "", "bfloat16"], [55, 1, 1, "", "buffers"], [55, 1, 1, "", "children"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 1, 1, "", "double"], [55, 1, 1, "", "eval"], [55, 1, 1, "", "extra_repr"], [55, 1, 1, "", "fake_tensordict"], [55, 1, 1, "", "float"], [55, 1, 1, "", "forward"], [55, 1, 1, "", "get_buffer"], [55, 1, 1, "", "get_extra_state"], [55, 1, 1, "", "get_parameter"], [55, 1, 1, "", "get_submodule"], [55, 1, 1, "", "half"], [55, 1, 1, "", "ipu"], [55, 1, 1, "", "load_state_dict"], [55, 1, 1, "", "modules"], [55, 1, 1, "", "named_buffers"], [55, 1, 1, "", "named_children"], [55, 1, 1, "", "named_modules"], [55, 1, 1, "", "named_parameters"], [55, 1, 1, "", "parameters"], [55, 1, 1, "", "rand_action"], [55, 1, 1, "", "rand_step"], [55, 1, 1, "", "register_backward_hook"], [55, 1, 1, "", "register_buffer"], [55, 1, 1, "", "register_forward_hook"], [55, 1, 1, "", "register_forward_pre_hook"], [55, 1, 1, "", "register_full_backward_hook"], [55, 1, 1, "", "register_full_backward_pre_hook"], [55, 1, 1, "", "register_load_state_dict_post_hook"], [55, 1, 1, "", "register_module"], [55, 1, 1, "", "register_parameter"], [55, 1, 1, "", "register_state_dict_pre_hook"], [55, 1, 1, "", "requires_grad_"], [55, 1, 1, "", "reset"], [55, 1, 1, "", "rollout"], [55, 1, 1, "", "set_extra_state"], [55, 1, 1, "", "set_seed"], [55, 1, 1, "", "share_memory"], [55, 3, 1, "", "specs"], [55, 1, 1, "", "state_dict"], [55, 1, 1, "", "step"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_empty"], [55, 1, 1, "", "train"], [55, 1, 1, "", "type"], [55, 1, 1, "", "update_kwargs"], [55, 1, 1, "", "xpu"], [55, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.brax": [[56, 2, 1, "", "BraxEnv"], [57, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[58, 2, 1, "", "DMControlEnv"], [59, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[60, 2, 1, "", "GymEnv"], [61, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[62, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[63, 2, 1, "", "JumanjiEnv"], [64, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.openml": [[65, 2, 1, "", "OpenMLEnv"]], "torchrl.envs.libs.vmas": [[66, 2, 1, "", "VmasEnv"], [67, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[68, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[69, 0, 1, "", "BinarizeReward"], [70, 0, 1, "", "CatFrames"], [71, 0, 1, "", "CatTensors"], [72, 0, 1, "", "CenterCrop"], [73, 0, 1, "", "Compose"], [74, 0, 1, "", "DiscreteActionProjection"], [75, 0, 1, "", "DoubleToFloat"], [76, 0, 1, "", "ExcludeTransform"], [77, 0, 1, "", "FiniteTensorDictCheck"], [78, 0, 1, "", "FlattenObservation"], [79, 0, 1, "", "FrameSkipTransform"], [80, 0, 1, "", "GrayScale"], [81, 0, 1, "", "InitTracker"], [82, 0, 1, "", "NoopResetEnv"], [83, 0, 1, "", "ObservationNorm"], [84, 0, 1, "", "ObservationTransform"], [85, 0, 1, "", "PinMemoryTransform"], [86, 0, 1, "", "R3MTransform"], [87, 0, 1, "", "RandomCropTensorDict"], [88, 0, 1, "", "RenameTransform"], [89, 0, 1, "", "Resize"], [90, 0, 1, "", "RewardClipping"], [91, 0, 1, "", "RewardScaling"], [92, 0, 1, "", "RewardSum"], [93, 0, 1, "", "SelectTransform"], [94, 0, 1, "", "SqueezeTransform"], [95, 0, 1, "", "StepCounter"], [96, 0, 1, "", "TensorDictPrimer"], [97, 0, 1, "", "TimeMaxPool"], [98, 0, 1, "", "ToTensorImage"], [99, 0, 1, "", "Transform"], [100, 0, 1, "", "TransformedEnv"], [101, 0, 1, "", "UnsqueezeTransform"], [102, 0, 1, "", "VIPRewardTransform"], [103, 0, 1, "", "VIPTransform"], [104, 0, 1, "", "VecNorm"], [105, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[69, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[70, 1, 1, "", "forward"], [70, 1, 1, "", "reset"], [70, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[71, 1, 1, "", "forward"], [71, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[72, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[73, 1, 1, "", "forward"], [73, 1, 1, "", "reset"], [73, 1, 1, "", "to"], [73, 1, 1, "", "transform_input_spec"], [73, 1, 1, "", "transform_observation_spec"], [73, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[74, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[75, 1, 1, "", "transform_input_spec"], [75, 1, 1, "", "transform_observation_spec"], [75, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[76, 1, 1, "", "forward"], [76, 1, 1, "", "reset"], [76, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[77, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[78, 1, 1, "", "forward"], [78, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[79, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[80, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[81, 1, 1, "", "forward"], [81, 1, 1, "", "reset"], [81, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[82, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[83, 1, 1, "", "init_stats"], [83, 1, 1, "", "transform_input_spec"], [83, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[85, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[86, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[87, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[88, 1, 1, "", "forward"], [88, 1, 1, "", "transform_input_spec"], [88, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[89, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[90, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[91, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[92, 1, 1, "", "forward"], [92, 1, 1, "", "reset"], [92, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[93, 1, 1, "", "forward"], [93, 1, 1, "", "reset"], [93, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[95, 1, 1, "", "forward"], [95, 1, 1, "", "reset"], [95, 1, 1, "", "transform_input_spec"], [95, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[96, 1, 1, "", "forward"], [96, 1, 1, "", "reset"], [96, 1, 1, "", "to"], [96, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[97, 1, 1, "", "forward"], [97, 1, 1, "", "reset"], [97, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[98, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[99, 1, 1, "", "forward"], [99, 1, 1, "", "reset"], [99, 1, 1, "", "transform_done_spec"], [99, 1, 1, "", "transform_input_spec"], [99, 1, 1, "", "transform_observation_spec"], [99, 1, 1, "", "transform_output_spec"], [99, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[100, 3, 1, "", "action_spec"], [100, 3, 1, "", "batch_locked"], [100, 3, 1, "", "done_spec"], [100, 1, 1, "", "eval"], [100, 3, 1, "", "input_spec"], [100, 1, 1, "", "load_state_dict"], [100, 3, 1, "", "observation_spec"], [100, 3, 1, "", "output_spec"], [100, 3, 1, "", "reward_spec"], [100, 1, 1, "", "set_seed"], [100, 1, 1, "", "state_dict"], [100, 1, 1, "", "to"], [100, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[101, 1, 1, "", "transform_input_spec"], [101, 1, 1, "", "transform_observation_spec"], [101, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[102, 1, 1, "", "forward"], [102, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[103, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[104, 1, 1, "", "build_td_for_shared_vecnorm"], [104, 1, 1, "", "forward"], [104, 1, 1, "", "get_extra_state"], [104, 1, 1, "", "set_extra_state"], [104, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[106, 2, 1, "", "check_env_specs"], [107, 2, 1, "", "exploration_mode"], [108, 2, 1, "", "get_available_libraries"], [109, 2, 1, "", "set_exploration_mode"], [110, 2, 1, "", "step_mdp"]], "torchrl.modules": [[111, 0, 1, "", "CEMPlanner"], [112, 0, 1, "", "ConvNet"], [113, 0, 1, "", "DdpgCnnActor"], [114, 0, 1, "", "DdpgCnnQNet"], [115, 0, 1, "", "DdpgMlpActor"], [116, 0, 1, "", "DdpgMlpQNet"], [117, 0, 1, "", "Delta"], [118, 0, 1, "", "DistributionalDQNnet"], [119, 0, 1, "", "DreamerActor"], [120, 0, 1, "", "DuelingCnnDQNet"], [121, 0, 1, "", "IndependentNormal"], [122, 0, 1, "", "LSTMNet"], [123, 0, 1, "", "MLP"], [124, 0, 1, "", "MPCPlannerBase"], [125, 0, 1, "", "MPPIPlanner"], [126, 0, 1, "", "NoisyLazyLinear"], [127, 0, 1, "", "NoisyLinear"], [128, 0, 1, "", "NormalParamWrapper"], [129, 0, 1, "", "ObsDecoder"], [130, 0, 1, "", "ObsEncoder"], [131, 0, 1, "", "OneHotCategorical"], [132, 0, 1, "", "RSSMPosterior"], [133, 0, 1, "", "RSSMPrior"], [134, 0, 1, "", "TanhDelta"], [135, 0, 1, "", "TanhNormal"], [136, 0, 1, "", "TruncatedNormal"], [137, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[111, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[112, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[113, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[114, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[115, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[116, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[117, 1, 1, "", "log_prob"], [117, 3, 1, "", "mean"], [117, 3, 1, "", "mode"], [117, 1, 1, "", "rsample"], [117, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[118, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[119, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[120, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[121, 3, 1, "", "mode"]], "torchrl.modules.LSTMNet": [[122, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[123, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[125, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[126, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[128, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[129, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[130, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[131, 1, 1, "", "log_prob"], [131, 3, 1, "", "mode"], [131, 1, 1, "", "rsample"], [131, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[132, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[133, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[134, 3, 1, "", "mean"], [134, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[135, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[136, 1, 1, "", "log_prob"], [136, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module": [[138, 0, 1, "", "Actor"], [139, 0, 1, "", "ActorCriticOperator"], [140, 0, 1, "", "ActorCriticWrapper"], [141, 0, 1, "", "ActorValueOperator"], [142, 0, 1, "", "AdditiveGaussianWrapper"], [143, 0, 1, "", "DistributionalQValueActor"], [144, 0, 1, "", "EGreedyWrapper"], [145, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [146, 0, 1, "", "ProbabilisticActor"], [147, 0, 1, "", "QValueActor"], [148, 0, 1, "", "SafeModule"], [149, 0, 1, "", "SafeProbabilisticModule"], [150, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [151, 0, 1, "", "SafeSequential"], [152, 0, 1, "", "ValueOperator"], [153, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[139, 1, 1, "", "get_critic_operator"], [139, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[140, 1, 1, "", "get_policy_operator"], [140, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[141, 1, 1, "", "get_policy_operator"], [141, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[142, 1, 1, "", "forward"], [142, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[144, 1, 1, "", "forward"], [144, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[145, 1, 1, "", "forward"], [145, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.SafeModule": [[148, 1, 1, "", "random"], [148, 1, 1, "", "random_sample"], [148, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[149, 1, 1, "", "random"], [149, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[153, 1, 1, "", "get_reward_operator"], [153, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.tensordict_module.actors": [[154, 0, 1, "", "DistributionalQValueHook"], [155, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[156, 0, 1, "", "ensure_tensordict_compatible"], [157, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[158, 0, 1, "", "biased_softplus"], [159, 0, 1, "", "inv_softplus"], [160, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[158, 1, 1, "", "forward"]], "torchrl.objectives": [[161, 0, 1, "", "A2CLoss"], [162, 0, 1, "", "ClipPPOLoss"], [163, 0, 1, "", "DDPGLoss"], [164, 0, 1, "", "DQNLoss"], [165, 0, 1, "", "DiscreteSACLoss"], [166, 0, 1, "", "DistributionalDQNLoss"], [167, 0, 1, "", "DreamerActorLoss"], [168, 0, 1, "", "DreamerModelLoss"], [169, 0, 1, "", "DreamerValueLoss"], [170, 0, 1, "", "HardUpdate"], [171, 0, 1, "", "IQLLoss"], [172, 0, 1, "", "KLPENPPOLoss"], [173, 0, 1, "", "LossModule"], [174, 0, 1, "", "PPOLoss"], [175, 0, 1, "", "REDQLoss"], [176, 0, 1, "", "ReinforceLoss"], [177, 0, 1, "", "SACLoss"], [178, 0, 1, "", "SoftUpdate"], [179, 0, 1, "", "TD3Loss"], [180, 0, 1, "", "default_value_kwargs"], [181, 0, 1, "", "distance_loss"], [182, 0, 1, "", "hold_out_net"], [183, 0, 1, "", "hold_out_params"], [184, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[161, 1, 1, "", "forward"], [161, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[162, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[163, 1, 1, "", "forward"], [163, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[164, 1, 1, "", "forward"], [164, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteSACLoss": [[165, 1, 1, "", "forward"], [165, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[166, 1, 1, "", "forward"], [166, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[167, 1, 1, "", "forward"], [167, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[168, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[169, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[171, 1, 1, "", "forward"], [171, 1, 1, "", "loss_value_diff"], [171, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[172, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[173, 1, 1, "", "convert_to_functional"], [173, 1, 1, "", "cpu"], [173, 1, 1, "", "cuda"], [173, 1, 1, "", "double"], [173, 1, 1, "", "float"], [173, 1, 1, "", "forward"], [173, 1, 1, "", "half"], [173, 1, 1, "", "make_value_estimator"], [173, 1, 1, "", "named_parameters"], [173, 1, 1, "", "parameters"], [173, 1, 1, "", "register_buffer"], [173, 1, 1, "", "to"], [173, 3, 1, "", "value_estimator"]], "torchrl.objectives.PPOLoss": [[174, 1, 1, "", "forward"], [174, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[175, 1, 1, "", "forward"], [175, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[176, 1, 1, "", "forward"], [176, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[177, 1, 1, "", "forward"], [177, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.TD3Loss": [[179, 1, 1, "", "forward"], [179, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[185, 0, 1, "", "GAE"], [186, 0, 1, "", "TD0Estimator"], [187, 0, 1, "", "TD1Estimator"], [188, 0, 1, "", "TDLambdaEstimator"], [189, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[185, 1, 1, "", "forward"], [185, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[187, 1, 1, "", "forward"], [187, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[188, 1, 1, "", "forward"], [188, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[190, 0, 1, "", "generalized_advantage_estimate"], [191, 0, 1, "", "td0_advantage_estimate"], [192, 0, 1, "", "td0_return_estimate"], [193, 0, 1, "", "td1_advantage_estimate"], [194, 0, 1, "", "td1_return_estimate"], [195, 0, 1, "", "td_lambda_advantage_estimate"], [196, 0, 1, "", "td_lambda_return_estimate"], [197, 0, 1, "", "vec_generalized_advantage_estimate"], [198, 0, 1, "", "vec_td1_advantage_estimate"], [199, 0, 1, "", "vec_td1_return_estimate"], [200, 0, 1, "", "vec_td_lambda_advantage_estimate"], [201, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[202, 2, 1, "", "TensorDictRecorder"], [203, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[204, 2, 1, "", "Logger"], [206, 2, 1, "", "generate_exp_name"], [207, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[205, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[208, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[209, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[210, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[211, 0, 1, "", "BatchSubSampler"], [212, 0, 1, "", "ClearCudaCache"], [213, 0, 1, "", "CountFramesLog"], [214, 0, 1, "", "LogReward"], [215, 0, 1, "", "OptimizerHook"], [216, 0, 1, "", "Recorder"], [217, 0, 1, "", "ReplayBufferTrainer"], [218, 0, 1, "", "RewardNormalizer"], [219, 0, 1, "", "SelectKeys"], [220, 0, 1, "", "Trainer"], [221, 0, 1, "", "TrainerHookBase"], [222, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.helpers": [[223, 2, 1, "", "correct_for_frame_skip"], [224, 2, 1, "", "get_stats_random_rollout"], [225, 2, 1, "", "make_a2c_loss"], [226, 2, 1, "", "make_a2c_model"], [227, 2, 1, "", "make_collector_offpolicy"], [228, 2, 1, "", "make_collector_onpolicy"], [229, 2, 1, "", "make_ddpg_actor"], [230, 2, 1, "", "make_ddpg_loss"], [231, 2, 1, "", "make_dqn_actor"], [232, 2, 1, "", "make_dqn_loss"], [233, 2, 1, "", "make_ppo_loss"], [234, 2, 1, "", "make_ppo_model"], [235, 2, 1, "", "make_redq_loss"], [236, 2, 1, "", "make_redq_model"], [237, 2, 1, "", "make_replay_buffer"], [238, 2, 1, "", "make_sac_loss"], [239, 2, 1, "", "make_sac_model"], [240, 2, 1, "", "make_target_updater"], [241, 2, 1, "", "make_trainer"], [242, 2, 1, "", "parallel_env_constructor"], [243, 2, 1, "", "sync_async_collector"], [244, 2, 1, "", "sync_sync_collector"], [245, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 6, 249, 250, 251, 252, 253, 254, 255, 258, 261, 262], "document": [0, 9], "tutori": [0, 255], "basic": 0, "intermedi": [0, 8], "advanc": 0, "refer": [0, 247], "knowledg": [0, 248], "base": [0, 7, 248, 254], "indic": 0, "tabl": 0, "collector": [1, 253, 254, 255, 261], "packag": [1, 2, 3, 249, 250, 251, 252], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 253, 254, 255, 261], "distribut": [1, 249], "helper": [1, 3], "function": [1, 4, 250, 254, 255, 261], "replai": [2, 253, 254, 255, 261], "buffer": [2, 253, 254, 255, 261], "compos": [2, 73], "store": [2, 254], "trajectori": [2, 253], "dataset": 2, "tensorspec": [2, 34], "util": [2, 249, 250, 251], "env": [3, 258, 261, 262], "vector": [3, 261], "transform": [3, 99, 253, 255, 258, 261, 262], "clone": [3, 7], "record": [3, 216, 251, 253], "domain": 3, "specif": [3, 257], "librari": [3, 261], "thing": [4, 258], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 261], "gener": 4, "have": 4, "you": 4, "valid": 4, "your": [4, 6, 253, 258], "algorithm": 4, "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 253, 254], "return": [4, 250], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "agent": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 253, 255, 257, 258], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 261], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "i": [4, 5, 8], "favor": 4, "compon": 4, "veloc": 4, "v": 4, "l2": 4, "action": [4, 258], "magnitud": 4, "task": [4, 257], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 253, 254, 255], "standard": 4, "explor": [4, 249, 254], "valu": [4, 250, 253, 255], "loss": [4, 255], "earli": 4, "train": [4, 8, 250, 253, 254, 255, 258], "roughli": 4, "uniformli": 4, "random": 4, "intrins": 4, "decai": 4, "learn": [4, 255], "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 254], "increas": 4, "an": [4, 255, 258], "environ": [4, 6, 7, 253, 254, 255, 257, 258, 261, 262], "dynam": 4, "can": 4, "low": 4, "forward": 4, "model": [4, 249, 253, 254, 259, 261], "also": 4, "us": [4, 6, 9, 253, 254, 259, 261], "offlin": 4, "observ": [4, 253], "space": 4, "effect": [4, 258], "dramat": 4, "dure": 4, "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 262], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 261], "from": [6, 7], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 262], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 258], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "submitit_delayed_launch": 21, "split_trajectori": 22, "binarydiscretetensorspec": 23, "boundedtensorspec": 24, "compositespec": 25, "discretetensorspec": 26, "multidiscretetensorspec": 27, "multionehotdiscretetensorspec": 28, "onehotdiscretetensorspec": 29, "prioritizedreplaybuff": 30, "replaybuff": 31, "tensordictprioritizedreplaybuff": 32, "tensordictreplaybuff": 33, "unboundedcontinuoustensorspec": 35, "unboundeddiscretetensorspec": 36, "d4rlexperiencereplai": 37, "lazymemmapstorag": 38, "lazytensorstorag": 39, "liststorag": 40, "prioritizedsampl": 41, "randomsampl": 42, "roundrobinwrit": 43, "sampler": 44, "samplerwithoutreplac": 45, "storag": 46, "writer": 47, "envbas": [48, 258], "envcreat": 49, "envmetadata": 50, "gymlikeenv": 51, "modelbasedenvbas": 52, "multithreadedenv": 53, "parallelenv": 54, "serialenv": 55, "braxenv": 56, "braxwrapp": 57, "dmcontrolenv": 58, "dmcontrolwrapp": 59, "gymenv": 60, "gymwrapp": 61, "habitatenv": 62, "jumanjienv": 63, "jumanjiwrapp": 64, "openmlenv": 65, "vmasenv": 66, "vmaswrapp": 67, "dreamerenv": 68, "binarizereward": 69, "catfram": 70, "cattensor": 71, "centercrop": 72, "discreteactionproject": 74, "doubletofloat": 75, "excludetransform": 76, "finitetensordictcheck": 77, "flattenobserv": 78, "frameskiptransform": 79, "grayscal": 80, "inittrack": 81, "noopresetenv": 82, "observationnorm": 83, "observationtransform": 84, "pinmemorytransform": 85, "r3mtransform": 86, "randomcroptensordict": 87, "renametransform": 88, "resiz": 89, "rewardclip": 90, "rewardsc": 91, "rewardsum": 92, "selecttransform": 93, "squeezetransform": 94, "stepcount": 95, "tensordictprim": 96, "timemaxpool": 97, "totensorimag": 98, "transformedenv": 100, "unsqueezetransform": 101, "viprewardtransform": 102, "viptransform": 103, "vecnorm": [104, 262], "gsdenois": 105, "check_env_spec": 106, "exploration_mod": 107, "get_available_librari": 108, "set_exploration_mod": 109, "step_mdp": 110, "cemplann": 111, "convnet": 112, "ddpgcnnactor": 113, "ddpgcnnqnet": 114, "ddpgmlpactor": 115, "ddpgmlpqnet": 116, "delta": 117, "distributionaldqnnet": 118, "dreameractor": 119, "duelingcnndqnet": 120, "independentnorm": 121, "lstmnet": 122, "mlp": 123, "mpcplannerbas": 124, "mppiplann": 125, "noisylazylinear": 126, "noisylinear": 127, "normalparamwrapp": 128, "obsdecod": 129, "obsencod": 130, "onehotcategor": 131, "rssmposterior": 132, "rssmprior": 133, "tanhdelta": 134, "tanhnorm": 135, "truncatednorm": 136, "reset_nois": 137, "actor": 138, "actorcriticoper": 139, "actorcriticwrapp": 140, "actorvalueoper": 141, "additivegaussianwrapp": 142, "distributionalqvalueactor": 143, "egreedywrapp": 144, "ornsteinuhlenbeckprocesswrapp": 145, "probabilisticactor": 146, "qvalueactor": 147, "safemodul": 148, "safeprobabilisticmodul": 149, "safeprobabilistictensordictsequenti": 150, "safesequenti": 151, "valueoper": 152, "worldmodelwrapp": 153, "distributionalqvaluehook": 154, "qvaluehook": 155, "ensure_tensordict_compat": 156, "is_tensordict_compat": 157, "biased_softplu": 158, "inv_softplu": 159, "map": 160, "a2closs": 161, "clipppoloss": 162, "ddpgloss": 163, "dqnloss": 164, "discretesacloss": 165, "distributionaldqnloss": 166, "dreameractorloss": 167, "dreamermodelloss": 168, "dreamervalueloss": 169, "hardupd": 170, "iqlloss": 171, "klpenppoloss": 172, "lossmodul": 173, "ppoloss": 174, "redqloss": 175, "reinforceloss": 176, "sacloss": 177, "softupd": 178, "td3loss": 179, "default_value_kwarg": 180, "distance_loss": 181, "hold_out_net": 182, "hold_out_param": 183, "next_state_valu": 184, "gae": 185, "td0estim": 186, "td1estim": 187, "tdlambdaestim": 188, "valueestimatorbas": 189, "generalized_advantage_estim": 190, "td0_advantage_estim": 191, "td0_return_estim": 192, "td1_advantage_estim": 193, "td1_return_estim": 194, "td_lambda_advantage_estim": 195, "td_lambda_return_estim": 196, "vec_generalized_advantage_estim": 197, "vec_td1_advantage_estim": 198, "vec_td1_return_estim": 199, "vec_td_lambda_advantage_estim": 200, "vec_td_lambda_return_estim": 201, "tensordictrecord": 202, "videorecord": 203, "logger": [204, 251], "csvlogger": 205, "generate_exp_nam": 206, "get_logg": 207, "mlflowlogg": 208, "tensorboardlogg": 209, "wandblogg": 210, "batchsubsampl": 211, "clearcudacach": 212, "countframeslog": 213, "logreward": 214, "optimizerhook": 215, "replaybuffertrain": 217, "rewardnorm": 218, "selectkei": 219, "trainer": [220, 251], "trainerhookbas": 221, "updateweight": 222, "correct_for_frame_skip": 223, "get_stats_random_rollout": 224, "make_a2c_loss": 225, "make_a2c_model": 226, "make_collector_offpolici": 227, "make_collector_onpolici": 228, "make_ddpg_actor": 229, "make_ddpg_loss": 230, "make_dqn_actor": 231, "make_dqn_loss": 232, "make_ppo_loss": 233, "make_ppo_model": 234, "make_redq_loss": 235, "make_redq_model": 236, "make_replay_buff": 237, "make_sac_loss": 238, "make_sac_model": 239, "make_target_updat": 240, "make_train": 241, "parallel_env_constructor": 242, "sync_async_collector": 243, "sync_sync_collector": 244, "transformed_env_constructor": 245, "readm": [246, 256], "tuto": [246, 256], "api": 247, "contribut": [248, 261], "content": 248, "modul": [249, 254, 261], "tensordict": [249, 261], "hook": [249, 251], "planner": 249, "object": [250, 253, 261], "dqn": [250, 254], "ddpg": [250, 253], "sac": 250, "redq": 250, "iql": 250, "td3": 250, "ppo": [250, 255], "a2c": 250, "reinforc": [250, 255], "dreamer": 250, "checkpoint": 251, "builder": 251, "_util": 252, "code": [253, 254, 258], "import": 253, "parallel": [253, 257, 262], "execut": [253, 257, 258], "build": [253, 254], "evalu": 253, "hyperparamet": [253, 254, 255], "collect": [253, 254, 255], "initi": 253, "stat": 253, "q": [253, 254], "network": [253, 254, 255], "creation": 253, "time": [253, 260], "experi": [253, 258], "result": [253, 255], "sampl": 253, "td": [253, 254], "lambda": [253, 254], "pixel": 254, "paramet": [254, 255], "comput": [254, 258, 260], "deep": 254, "target": 254, "loop": [254, 255, 258], "regular": 254, "conclus": [254, 255, 258], "possibl": 254, "improv": 254, "defin": 255, "next": 255, "step": [255, 262], "multi": 257, "divers": 257, "rollout": [257, 258, 262], "pendulum": 258, "write": 258, "_step": 258, "reset": [258, 262], "simul": 258, "_reset": 258, "metadata": 258, "_spec": 258, "spec": [258, 262], "shape": 258, "seed": [258, 262], "wrap": 258, "togeth": 258, "class": [258, 261], "test": 258, "our": 258, "custom": 258, "batch": 258, "simpl": 258, "pretrain": 259, "introduct": 261, "config": 261, "tensordictmodul": 261, "sequenc": 261, "program": 261, "ensembl": 261, "meta": 261, "special": 261, "state": 261, "frame_skip": 262, "deepmind": 262, "control": 262, "devic": 262, "run": 262, "close": 262, "access": 262, "attribut": 262, "kwarg": 262}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials": [[0, "tutorials"]], "Basics": [[0, "basics"]], "Intermediate": [[0, "intermediate"]], "Advanced": [[0, "advanced"]], "References": [[0, "references"]], "Knowledge Base": [[0, "knowledge-base"], [248, "knowledge-base"]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Single node data collectors": [[1, "single-node-data-collectors"]], "Distributed data collectors": [[1, "distributed-data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers": [[2, "composable-replay-buffers"]], "Storing trajectories": [[2, "storing-trajectories"]], "Datasets": [[2, "datasets"]], "TensorSpec": [[2, "tensorspec"], [34, "tensorspec"]], "Utils": [[2, "utils"], [249, "utils"], [250, "utils"], [251, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [253, "transforms"], [255, "transforms"], [261, "transforms"]], "Cloning transforms": [[3, "cloning-transforms"]], "Recorders": [[3, "recorders"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Things to consider when debugging RL": [[4, "things-to-consider-when-debugging-rl"]], "General": [[4, "general"]], "Have you validated your algorithm implementation on a few small, toy problems with known optimal returns e.g. gridworlds, mountaincar?": [[4, "have-you-validated-your-algorithm-implementation-on-a-few-small-toy-problems-with-known-optimal-returns-e-g-gridworlds-mountaincar"]], "Have you visualized your agents?": [[4, "have-you-visualized-your-agents"]], "Be very careful with any data augmentation.": [[4, "be-very-careful-with-any-data-augmentation"]], "Policy": [[4, "policy"], [255, "policy"], [257, "policy"]], "Does the entropy of your policy converge too quickly, too slowly or change drastically?": [[4, "does-the-entropy-of-your-policy-converge-too-quickly-too-slowly-or-change-drastically"]], "Rewards (beyond \u201cgoing up\u201d)": [[4, "rewards-beyond-going-up"]], "Is the agent favoring a single component of the reward function (i.e. velocity vs L2 action magnitude)?": [[4, "is-the-agent-favoring-a-single-component-of-the-reward-function-i-e-velocity-vs-l2-action-magnitude"]], "Is the task horizon extremely long?": [[4, "is-the-task-horizon-extremely-long"]], "Are your rewards normalized/standardized?": [[4, "are-your-rewards-normalized-standardized"]], "Exploration": [[4, "exploration"], [249, "exploration"]], "Is value loss going up early in training?": [[4, "is-value-loss-going-up-early-in-training"]], "Are actions (roughly) uniformly/normally random early in training?": [[4, "are-actions-roughly-uniformly-normally-random-early-in-training"]], "Are intrinsic rewards decaying as learning progresses in a singleton task?": [[4, "are-intrinsic-rewards-decaying-as-learning-progresses-in-a-singleton-task"]], "Are episodic intrinsic rewards remaining constant or increasing as learning progresses in an episodic task?": [[4, "are-episodic-intrinsic-rewards-remaining-constant-or-increasing-as-learning-progresses-in-an-episodic-task"]], "Environment Dynamics": [[4, "environment-dynamics"]], "Can you train a low entropy forward dynamics and/or reward model (also useful for offline RL)?": [[4, "can-you-train-a-low-entropy-forward-dynamics-and-or-reward-model-also-useful-for-offline-rl"]], "Observation Space": [[4, "observation-space"]], "Are your observations normalized/standardized?": [[4, "are-your-observations-normalized-standardized"]], "Action Space": [[4, "action-space"]], "Is the effect of an action changing dramatically during an episode?": [[4, "is-the-effect-of-an-action-changing-dramatically-during-an-episode"]], "Is the action space too high dimensional?": [[4, "is-the-action-space-too-high-dimensional"]], "Are your actions normalized/standardized?": [[4, "are-your-actions-normalized-standardized"]], "Working with gym": [[5, "working-with-gym"]], "What is OpenAI Gym?": [[5, "what-is-openai-gym"]], "Versioning": [[5, "versioning"]], "Working with habitat-lab": [[6, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[6, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[6, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[6, "installing-torchrl"]], "Using Habitat": [[6, "using-habitat"]], "Common issues": [[6, "common-issues"]], "Working with MuJoCo-based environments": [[7, "working-with-mujoco-based-environments"]], "Installing MuJoCo": [[7, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[7, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[7, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[7, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[7, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[7, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[7, "common-issues-when-rendering-mujoco-environments"]], "Common PyTorch errors and solutions": [[8, "common-pytorch-errors-and-solutions"]], "Gradient-related errors [Newcomers]": [[8, "gradient-related-errors-newcomers"]], "My Training is too slow [Newcomers / intermediate]": [[8, "my-training-is-too-slow-newcomers-intermediate"]], "Common bugs": [[8, "common-bugs"]], "Useful resources": [[9, "useful-resources"]], "Pytorch documentation": [[9, "pytorch-documentation"]], "functorch documentation": [[9, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[9, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[9, "educational-resource"]], "Forums": [[9, "forums"]], "Repos": [[9, "repos"]], "Versioning Issues": [[10, "versioning-issues"]], "Pytorch version": [[10, "pytorch-version"]], "How to reproduce": [[10, "how-to-reproduce"]], "Workarounds": [[10, "workarounds"]], "implement_for": [[11, "implement-for"]], "DataCollectorBase": [[12, "datacollectorbase"]], "MultiSyncDataCollector": [[13, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[14, "multiasyncdatacollector"]], "RandomPolicy": [[15, "randompolicy"]], "SyncDataCollector": [[16, "syncdatacollector"]], "aSyncDataCollector": [[17, "asyncdatacollector"]], "DistributedDataCollector": [[18, "distributeddatacollector"]], "DistributedSyncDataCollector": [[19, "distributedsyncdatacollector"]], "RPCDataCollector": [[20, "rpcdatacollector"]], "submitit_delayed_launcher": [[21, "submitit-delayed-launcher"]], "split_trajectories": [[22, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[23, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[24, "boundedtensorspec"]], "CompositeSpec": [[25, "compositespec"]], "DiscreteTensorSpec": [[26, "discretetensorspec"]], "MultiDiscreteTensorSpec": [[27, "multidiscretetensorspec"]], "MultiOneHotDiscreteTensorSpec": [[28, "multionehotdiscretetensorspec"]], "OneHotDiscreteTensorSpec": [[29, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[30, "prioritizedreplaybuffer"]], "ReplayBuffer": [[31, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[32, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[33, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[35, "unboundedcontinuoustensorspec"]], "UnboundedDiscreteTensorSpec": [[36, "unboundeddiscretetensorspec"]], "D4RLExperienceReplay": [[37, "d4rlexperiencereplay"]], "LazyMemmapStorage": [[38, "lazymemmapstorage"]], "LazyTensorStorage": [[39, "lazytensorstorage"]], "ListStorage": [[40, "liststorage"]], "PrioritizedSampler": [[41, "prioritizedsampler"]], "RandomSampler": [[42, "randomsampler"]], "RoundRobinWriter": [[43, "roundrobinwriter"]], "Sampler": [[44, "sampler"]], "SamplerWithoutReplacement": [[45, "samplerwithoutreplacement"]], "Storage": [[46, "storage"]], "Writer": [[47, "writer"]], "EnvBase": [[48, "envbase"]], "EnvCreator": [[49, "envcreator"]], "EnvMetaData": [[50, "envmetadata"]], "GymLikeEnv": [[51, "gymlikeenv"]], "ModelBasedEnvBase": [[52, "modelbasedenvbase"]], "MultiThreadedEnv": [[53, "multithreadedenv"]], "ParallelEnv": [[54, "parallelenv"]], "SerialEnv": [[55, "serialenv"]], "BraxEnv": [[56, "braxenv"]], "BraxWrapper": [[57, "braxwrapper"]], "DMControlEnv": [[58, "dmcontrolenv"]], "DMControlWrapper": [[59, "dmcontrolwrapper"]], "GymEnv": [[60, "gymenv"]], "GymWrapper": [[61, "gymwrapper"]], "HabitatEnv": [[62, "habitatenv"]], "JumanjiEnv": [[63, "jumanjienv"]], "JumanjiWrapper": [[64, "jumanjiwrapper"]], "OpenMLEnv": [[65, "openmlenv"]], "VmasEnv": [[66, "vmasenv"]], "VmasWrapper": [[67, "vmaswrapper"]], "DreamerEnv": [[68, "dreamerenv"]], "BinarizeReward": [[69, "binarizereward"]], "CatFrames": [[70, "catframes"]], "CatTensors": [[71, "cattensors"]], "CenterCrop": [[72, "centercrop"]], "Compose": [[73, "compose"]], "DiscreteActionProjection": [[74, "discreteactionprojection"]], "DoubleToFloat": [[75, "doubletofloat"]], "ExcludeTransform": [[76, "excludetransform"]], "FiniteTensorDictCheck": [[77, "finitetensordictcheck"]], "FlattenObservation": [[78, "flattenobservation"]], "FrameSkipTransform": [[79, "frameskiptransform"]], "GrayScale": [[80, "grayscale"]], "InitTracker": [[81, "inittracker"]], "NoopResetEnv": [[82, "noopresetenv"]], "ObservationNorm": [[83, "observationnorm"]], "ObservationTransform": [[84, "observationtransform"]], "PinMemoryTransform": [[85, "pinmemorytransform"]], "R3MTransform": [[86, "r3mtransform"]], "RandomCropTensorDict": [[87, "randomcroptensordict"]], "RenameTransform": [[88, "renametransform"]], "Resize": [[89, "resize"]], "RewardClipping": [[90, "rewardclipping"]], "RewardScaling": [[91, "rewardscaling"]], "RewardSum": [[92, "rewardsum"]], "SelectTransform": [[93, "selecttransform"]], "SqueezeTransform": [[94, "squeezetransform"]], "StepCounter": [[95, "stepcounter"]], "TensorDictPrimer": [[96, "tensordictprimer"]], "TimeMaxPool": [[97, "timemaxpool"]], "ToTensorImage": [[98, "totensorimage"]], "Transform": [[99, "transform"]], "TransformedEnv": [[100, "transformedenv"]], "UnsqueezeTransform": [[101, "unsqueezetransform"]], "VIPRewardTransform": [[102, "viprewardtransform"]], "VIPTransform": [[103, "viptransform"]], "VecNorm": [[104, "vecnorm"], [262, "vecnorm"]], "gSDENoise": [[105, "gsdenoise"]], "check_env_specs": [[106, "check-env-specs"]], "exploration_mode": [[107, "exploration-mode"]], "get_available_libraries": [[108, "get-available-libraries"]], "set_exploration_mode": [[109, "set-exploration-mode"]], "step_mdp": [[110, "step-mdp"]], "CEMPlanner": [[111, "cemplanner"]], "ConvNet": [[112, "convnet"]], "DdpgCnnActor": [[113, "ddpgcnnactor"]], "DdpgCnnQNet": [[114, "ddpgcnnqnet"]], "DdpgMlpActor": [[115, "ddpgmlpactor"]], "DdpgMlpQNet": [[116, "ddpgmlpqnet"]], "Delta": [[117, "delta"]], "DistributionalDQNnet": [[118, "distributionaldqnnet"]], "DreamerActor": [[119, "dreameractor"]], "DuelingCnnDQNet": [[120, "duelingcnndqnet"]], "IndependentNormal": [[121, "independentnormal"]], "LSTMNet": [[122, "lstmnet"]], "MLP": [[123, "mlp"]], "MPCPlannerBase": [[124, "mpcplannerbase"]], "MPPIPlanner": [[125, "mppiplanner"]], "NoisyLazyLinear": [[126, "noisylazylinear"]], "NoisyLinear": [[127, "noisylinear"]], "NormalParamWrapper": [[128, "normalparamwrapper"]], "ObsDecoder": [[129, "obsdecoder"]], "ObsEncoder": [[130, "obsencoder"]], "OneHotCategorical": [[131, "onehotcategorical"]], "RSSMPosterior": [[132, "rssmposterior"]], "RSSMPrior": [[133, "rssmprior"]], "TanhDelta": [[134, "tanhdelta"]], "TanhNormal": [[135, "tanhnormal"]], "TruncatedNormal": [[136, "truncatednormal"]], "reset_noise": [[137, "reset-noise"]], "Actor": [[138, "actor"]], "ActorCriticOperator": [[139, "actorcriticoperator"]], "ActorCriticWrapper": [[140, "actorcriticwrapper"]], "ActorValueOperator": [[141, "actorvalueoperator"]], "AdditiveGaussianWrapper": [[142, "additivegaussianwrapper"]], "DistributionalQValueActor": [[143, "distributionalqvalueactor"]], "EGreedyWrapper": [[144, "egreedywrapper"]], "OrnsteinUhlenbeckProcessWrapper": [[145, "ornsteinuhlenbeckprocesswrapper"]], "ProbabilisticActor": [[146, "probabilisticactor"]], "QValueActor": [[147, "qvalueactor"]], "SafeModule": [[148, "safemodule"]], "SafeProbabilisticModule": [[149, "safeprobabilisticmodule"]], "SafeProbabilisticTensorDictSequential": [[150, "safeprobabilistictensordictsequential"]], "SafeSequential": [[151, "safesequential"]], "ValueOperator": [[152, "valueoperator"]], "WorldModelWrapper": [[153, "worldmodelwrapper"]], "DistributionalQValueHook": [[154, "distributionalqvaluehook"]], "QValueHook": [[155, "qvaluehook"]], "ensure_tensordict_compatible": [[156, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[157, "is-tensordict-compatible"]], "biased_softplus": [[158, "biased-softplus"]], "inv_softplus": [[159, "inv-softplus"]], "mappings": [[160, "mappings"]], "A2CLoss": [[161, "a2closs"]], "ClipPPOLoss": [[162, "clipppoloss"]], "DDPGLoss": [[163, "ddpgloss"]], "DQNLoss": [[164, "dqnloss"]], "DiscreteSACLoss": [[165, "discretesacloss"]], "DistributionalDQNLoss": [[166, "distributionaldqnloss"]], "DreamerActorLoss": [[167, "dreameractorloss"]], "DreamerModelLoss": [[168, "dreamermodelloss"]], "DreamerValueLoss": [[169, "dreamervalueloss"]], "HardUpdate": [[170, "hardupdate"]], "IQLLoss": [[171, "iqlloss"]], "KLPENPPOLoss": [[172, "klpenppoloss"]], "LossModule": [[173, "lossmodule"]], "PPOLoss": [[174, "ppoloss"]], "REDQLoss": [[175, "redqloss"]], "ReinforceLoss": [[176, "reinforceloss"]], "SACLoss": [[177, "sacloss"]], "SoftUpdate": [[178, "softupdate"]], "TD3Loss": [[179, "td3loss"]], "default_value_kwargs": [[180, "default-value-kwargs"]], "distance_loss": [[181, "distance-loss"]], "hold_out_net": [[182, "hold-out-net"]], "hold_out_params": [[183, "hold-out-params"]], "next_state_value": [[184, "next-state-value"]], "GAE": [[185, "gae"]], "TD0Estimator": [[186, "td0estimator"]], "TD1Estimator": [[187, "td1estimator"]], "TDLambdaEstimator": [[188, "tdlambdaestimator"]], "ValueEstimatorBase": [[189, "valueestimatorbase"]], "generalized_advantage_estimate": [[190, "generalized-advantage-estimate"]], "td0_advantage_estimate": [[191, "td0-advantage-estimate"]], "td0_return_estimate": [[192, "td0-return-estimate"]], "td1_advantage_estimate": [[193, "td1-advantage-estimate"]], "td1_return_estimate": [[194, "td1-return-estimate"]], "td_lambda_advantage_estimate": [[195, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[196, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[197, "vec-generalized-advantage-estimate"]], "vec_td1_advantage_estimate": [[198, "vec-td1-advantage-estimate"]], "vec_td1_return_estimate": [[199, "vec-td1-return-estimate"]], "vec_td_lambda_advantage_estimate": [[200, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[201, "vec-td-lambda-return-estimate"]], "TensorDictRecorder": [[202, "tensordictrecorder"]], "VideoRecorder": [[203, "videorecorder"]], "Logger": [[204, "logger"]], "CSVLogger": [[205, "csvlogger"]], "generate_exp_name": [[206, "generate-exp-name"]], "get_logger": [[207, "get-logger"]], "MLFlowLogger": [[208, "mlflowlogger"]], "TensorboardLogger": [[209, "tensorboardlogger"]], "WandbLogger": [[210, "wandblogger"]], "BatchSubSampler": [[211, "batchsubsampler"]], "ClearCudaCache": [[212, "clearcudacache"]], "CountFramesLog": [[213, "countframeslog"]], "LogReward": [[214, "logreward"]], "OptimizerHook": [[215, "optimizerhook"]], "Recorder": [[216, "recorder"], [253, "recorder"]], "ReplayBufferTrainer": [[217, "replaybuffertrainer"]], "RewardNormalizer": [[218, "rewardnormalizer"]], "SelectKeys": [[219, "selectkeys"]], "Trainer": [[220, "trainer"]], "TrainerHookBase": [[221, "trainerhookbase"]], "UpdateWeights": [[222, "updateweights"]], "correct_for_frame_skip": [[223, "correct-for-frame-skip"]], "get_stats_random_rollout": [[224, "get-stats-random-rollout"]], "make_a2c_loss": [[225, "make-a2c-loss"]], "make_a2c_model": [[226, "make-a2c-model"]], "make_collector_offpolicy": [[227, "make-collector-offpolicy"]], "make_collector_onpolicy": [[228, "make-collector-onpolicy"]], "make_ddpg_actor": [[229, "make-ddpg-actor"]], "make_ddpg_loss": [[230, "make-ddpg-loss"]], "make_dqn_actor": [[231, "make-dqn-actor"]], "make_dqn_loss": [[232, "make-dqn-loss"]], "make_ppo_loss": [[233, "make-ppo-loss"]], "make_ppo_model": [[234, "make-ppo-model"]], "make_redq_loss": [[235, "make-redq-loss"]], "make_redq_model": [[236, "make-redq-model"]], "make_replay_buffer": [[237, "make-replay-buffer"]], "make_sac_loss": [[238, "make-sac-loss"]], "make_sac_model": [[239, "make-sac-model"]], "make_target_updater": [[240, "make-target-updater"]], "make_trainer": [[241, "make-trainer"]], "parallel_env_constructor": [[242, "parallel-env-constructor"]], "sync_async_collector": [[243, "sync-async-collector"]], "sync_sync_collector": [[244, "sync-sync-collector"]], "transformed_env_constructor": [[245, "transformed-env-constructor"]], "README Tutos": [[246, "readme-tutos"], [256, "readme-tutos"]], "API Reference": [[247, "api-reference"]], "Contributing": [[248, "contributing"], [261, "contributing"]], "Contents:": [[248, null]], "torchrl.modules package": [[249, "torchrl-modules-package"]], "TensorDict modules": [[249, "tensordict-modules"]], "Hooks": [[249, "hooks"]], "Models": [[249, "models"], [261, "models"]], "Planners": [[249, "planners"]], "Distributions": [[249, "distributions"]], "torchrl.objectives package": [[250, "torchrl-objectives-package"]], "Training value functions": [[250, "training-value-functions"]], "DQN": [[250, "dqn"]], "DDPG": [[250, "ddpg"]], "SAC": [[250, "sac"]], "REDQ": [[250, "redq"]], "IQL": [[250, "iql"]], "TD3": [[250, "td3"]], "PPO": [[250, "ppo"]], "A2C": [[250, "a2c"]], "Reinforce": [[250, "reinforce"]], "Dreamer": [[250, "dreamer"]], "Returns": [[250, "returns"]], "torchrl.trainers package": [[251, "torchrl-trainers-package"]], "Checkpointing": [[251, "checkpointing"]], "Trainer and hooks": [[251, "trainer-and-hooks"]], "Builders": [[251, "builders"]], "Loggers": [[251, "loggers"]], "Recording utils": [[251, "recording-utils"]], "torchrl._utils package": [[252, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[253, "coding-ddpg-using-torchrl"]], "Imports": [[253, "imports"]], "Environment": [[253, "environment"], [253, "id1"]], "Normalization of the observations": [[253, "normalization-of-the-observations"]], "Parallel execution": [[253, "parallel-execution"]], "Building the model": [[253, "building-the-model"]], "Evaluator: building your recorder object": [[253, "evaluator-building-your-recorder-object"]], "Replay buffer": [[253, "replay-buffer"], [253, "id2"], [253, "id3"], [255, "replay-buffer"]], "Hyperparameters": [[253, "hyperparameters"], [254, "hyperparameters"]], "Collection": [[253, "collection"]], "Optimizer and optimization": [[253, "optimizer-and-optimization"]], "Model": [[253, "model"]], "Initialization": [[253, "initialization"]], "Normalization stats": [[253, "normalization-stats"]], "Models: policy and q-value network": [[253, "models-policy-and-q-value-network"]], "Parallel environment creation": [[253, "parallel-environment-creation"]], "Data collector": [[253, "data-collector"], [254, "data-collector"], [255, "data-collector"]], "Optimizer": [[253, "optimizer"], [254, "optimizer"]], "Time to train the policy": [[253, "time-to-train-the-policy"]], "Experiment results": [[253, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[253, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[254, "coding-a-pixel-based-dqn-using-torchrl"]], "DQN parameters": [[254, "dqn-parameters"]], "Data collection and replay buffer": [[254, "data-collection-and-replay-buffer"]], "Environment and exploration": [[254, "environment-and-exploration"]], "Building the environment": [[254, "building-the-environment"]], "Compute normalizing constants": [[254, "compute-normalizing-constants"]], "Building the model (Deep Q-network)": [[254, "building-the-model-deep-q-network"]], "Target parameters": [[254, "target-parameters"]], "Functionalizing modules": [[254, "functionalizing-modules"]], "Collecting and storing data": [[254, "collecting-and-storing-data"]], "Replay buffers": [[254, "replay-buffers"], [261, "replay-buffers"]], "Training loop of a regular DQN": [[254, "training-loop-of-a-regular-dqn"]], "DQN with TD(\\lambda)": [[254, "dqn-with-td-lambda"]], "Data: Replay buffer and collector": [[254, "data-replay-buffer-and-collector"]], "Training loop": [[254, "training-loop"], [255, "training-loop"], [258, "training-loop"]], "Conclusion and possible improvements": [[254, "conclusion-and-possible-improvements"]], "Reinforcement Learning (PPO) with TorchRL Tutorial": [[255, "reinforcement-learning-ppo-with-torchrl-tutorial"]], "Define Hyperparameters": [[255, "define-hyperparameters"]], "Data collection parameters": [[255, "data-collection-parameters"]], "PPO parameters": [[255, "ppo-parameters"]], "Define an environment": [[255, "define-an-environment"]], "Normalization": [[255, "normalization"]], "Value network": [[255, "value-network"]], "Loss function": [[255, "loss-function"]], "Results": [[255, "results"]], "Conclusion and next steps": [[255, "conclusion-and-next-steps"]], "Task-specific policy in multi-task environments": [[257, "task-specific-policy-in-multi-task-environments"]], "Executing diverse tasks in parallel": [[257, "executing-diverse-tasks-in-parallel"]], "Rollout": [[257, "rollout"]], "Pendulum: Writing your environment and transforms with TorchRL": [[258, "pendulum-writing-your-environment-and-transforms-with-torchrl"]], "Coding the effect of an action: torchrl.envs.EnvBase._step()": [[258, "coding-the-effect-of-an-action-torchrl-envs-envbase-step"]], "Resetting the simulator: torchrl.envs.EnvBase._reset()": [[258, "resetting-the-simulator-torchrl-envs-envbase-reset"]], "Environment metadata: env.*_spec": [[258, "environment-metadata-env-spec"]], "Specs shape": [[258, "specs-shape"]], "Reproducible experiments: seeding": [[258, "reproducible-experiments-seeding"]], "Wrapping things together: the torchrl.envs.EnvBase class": [[258, "wrapping-things-together-the-torchrl-envs-envbase-class"]], "Testing our environment": [[258, "testing-our-environment"]], "Transforming an environment": [[258, "transforming-an-environment"]], "Writing custom transforms": [[258, "writing-custom-transforms"]], "Executing a rollout": [[258, "executing-a-rollout"]], "Batching computations": [[258, "batching-computations"]], "Training a simple policy": [[258, "training-a-simple-policy"]], "Conclusion": [[258, "conclusion"]], "Using pretrained models": [[259, "using-pretrained-models"]], "Computation times": [[260, "computation-times"]], "Introduction to TorchRL": [[261, "introduction-to-torchrl"]], "Data": [[261, "data"]], "TensorDict": [[261, "tensordict"]], "Envs": [[261, "envs"]], "Changing environments config": [[261, "changing-environments-config"]], "Vectorized Environments": [[261, "vectorized-environments"]], "Modules": [[261, "modules"]], "TensorDictModules": [[261, "tensordictmodules"]], "Sequences of Modules": [[261, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[261, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[261, "specialized-classes"]], "Using Environments and Modules": [[261, "using-environments-and-modules"]], "Collectors": [[261, "collectors"]], "Objectives": [[261, "objectives"]], "State of the Library": [[261, "state-of-the-library"]], "Installing the Library": [[261, "installing-the-library"]], "TorchRL envs": [[262, "torchrl-envs"]], "Gym environments": [[262, "gym-environments"]], "Env Specs": [[262, "env-specs"]], "Seeding, resetting and steps": [[262, "seeding-resetting-and-steps"]], "Rollouts": [[262, "rollouts"]], "frame_skip": [[262, "frame-skip"]], "Rendering": [[262, "rendering"]], "DeepMind Control environments": [[262, "deepmind-control-environments"]], "Transforming envs": [[262, "transforming-envs"]], "Environment device": [[262, "environment-device"]], "Running environments in parallel": [[262, "running-environments-in-parallel"]], "Closing parallel environments": [[262, "closing-parallel-environments"]], "Seeding": [[262, "seeding"]], "Accessing environment attributes": [[262, "accessing-environment-attributes"]], "kwargs for parallel environments": [[262, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[262, "transforming-parallel-environments"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[11, "torchrl._utils.implement_for"]], "datacollectorbase (class in torchrl.collectors.collectors)": [[12, "torchrl.collectors.collectors.DataCollectorBase"]], "update_policy_weights_() (torchrl.collectors.collectors.datacollectorbase method)": [[12, "torchrl.collectors.collectors.DataCollectorBase.update_policy_weights_"]], "multisyncdatacollector (class in torchrl.collectors.collectors)": [[13, "torchrl.collectors.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multisyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multisyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multisyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multisyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors.collectors)": [[14, "torchrl.collectors.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[14, "torchrl.collectors.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[14, "torchrl.collectors.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[14, "torchrl.collectors.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[14, "torchrl.collectors.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[14, "torchrl.collectors.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[14, "torchrl.collectors.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "randompolicy (class in torchrl.collectors.collectors)": [[15, "torchrl.collectors.collectors.RandomPolicy"]], "syncdatacollector (class in torchrl.collectors.collectors)": [[16, "torchrl.collectors.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.collectors.syncdatacollector method)": [[16, "torchrl.collectors.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[16, "torchrl.collectors.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.syncdatacollector method)": [[16, "torchrl.collectors.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.collectors.syncdatacollector method)": [[16, "torchrl.collectors.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.collectors.syncdatacollector method)": [[16, "torchrl.collectors.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.syncdatacollector method)": [[16, "torchrl.collectors.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[16, "torchrl.collectors.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.syncdatacollector method)": [[16, "torchrl.collectors.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors.collectors)": [[17, "torchrl.collectors.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[17, "torchrl.collectors.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.asyncdatacollector method)": [[17, "torchrl.collectors.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.asyncdatacollector method)": [[17, "torchrl.collectors.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.asyncdatacollector method)": [[17, "torchrl.collectors.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[17, "torchrl.collectors.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.asyncdatacollector method)": [[17, "torchrl.collectors.collectors.aSyncDataCollector.update_policy_weights_"]], "distributeddatacollector (class in torchrl.collectors.distributed)": [[18, "torchrl.collectors.distributed.DistributedDataCollector"]], "update_policy_weights_() (torchrl.collectors.distributed.distributeddatacollector method)": [[18, "torchrl.collectors.distributed.DistributedDataCollector.update_policy_weights_"]], "distributedsyncdatacollector (class in torchrl.collectors.distributed)": [[19, "torchrl.collectors.distributed.DistributedSyncDataCollector"]], "update_policy_weights_() (torchrl.collectors.distributed.distributedsyncdatacollector method)": [[19, "torchrl.collectors.distributed.DistributedSyncDataCollector.update_policy_weights_"]], "rpcdatacollector (class in torchrl.collectors.distributed)": [[20, "torchrl.collectors.distributed.RPCDataCollector"]], "update_policy_weights_() (torchrl.collectors.distributed.rpcdatacollector method)": [[20, "torchrl.collectors.distributed.RPCDataCollector.update_policy_weights_"]], "submitit_delayed_launcher (class in torchrl.collectors.distributed)": [[21, "torchrl.collectors.distributed.submitit_delayed_launcher"]], "split_trajectories() (in module torchrl.collectors.utils)": [[22, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[23, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[23, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[23, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "expand() (torchrl.data.binarydiscretetensorspec method)": [[23, "torchrl.data.BinaryDiscreteTensorSpec.expand"]], "implements_for_spec() (torchrl.data.binarydiscretetensorspec class method)": [[23, "torchrl.data.BinaryDiscreteTensorSpec.implements_for_spec"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[23, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[23, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[23, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[23, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "squeeze() (torchrl.data.binarydiscretetensorspec method)": [[23, "torchrl.data.BinaryDiscreteTensorSpec.squeeze"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[23, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "to_one_hot() (torchrl.data.binarydiscretetensorspec method)": [[23, "torchrl.data.BinaryDiscreteTensorSpec.to_one_hot"]], "to_one_hot_spec() (torchrl.data.binarydiscretetensorspec method)": [[23, "torchrl.data.BinaryDiscreteTensorSpec.to_one_hot_spec"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[23, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[23, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[24, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[24, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[24, "torchrl.data.BoundedTensorSpec.encode"]], "expand() (torchrl.data.boundedtensorspec method)": [[24, "torchrl.data.BoundedTensorSpec.expand"]], "implements_for_spec() (torchrl.data.boundedtensorspec class method)": [[24, "torchrl.data.BoundedTensorSpec.implements_for_spec"]], "index() (torchrl.data.boundedtensorspec method)": [[24, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[24, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[24, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[24, "torchrl.data.BoundedTensorSpec.rand"]], "squeeze() (torchrl.data.boundedtensorspec method)": [[24, "torchrl.data.BoundedTensorSpec.squeeze"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[24, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[24, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[24, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[25, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[25, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[25, "torchrl.data.CompositeSpec.encode"]], "expand() (torchrl.data.compositespec method)": [[25, "torchrl.data.CompositeSpec.expand"]], "implements_for_spec() (torchrl.data.compositespec class method)": [[25, "torchrl.data.CompositeSpec.implements_for_spec"]], "index() (torchrl.data.compositespec method)": [[25, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[25, "torchrl.data.CompositeSpec.is_in"]], "items() (torchrl.data.compositespec method)": [[25, "torchrl.data.CompositeSpec.items"]], "keys() (torchrl.data.compositespec method)": [[25, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[25, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[25, "torchrl.data.CompositeSpec.rand"]], "squeeze() (torchrl.data.compositespec method)": [[25, "torchrl.data.CompositeSpec.squeeze"]], "to_numpy() (torchrl.data.compositespec method)": [[25, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[25, "torchrl.data.CompositeSpec.type_check"]], "values() (torchrl.data.compositespec method)": [[25, "torchrl.data.CompositeSpec.values"]], "zero() (torchrl.data.compositespec method)": [[25, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[26, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[26, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[26, "torchrl.data.DiscreteTensorSpec.encode"]], "expand() (torchrl.data.discretetensorspec method)": [[26, "torchrl.data.DiscreteTensorSpec.expand"]], "implements_for_spec() (torchrl.data.discretetensorspec class method)": [[26, "torchrl.data.DiscreteTensorSpec.implements_for_spec"]], "index() (torchrl.data.discretetensorspec method)": [[26, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[26, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[26, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[26, "torchrl.data.DiscreteTensorSpec.rand"]], "squeeze() (torchrl.data.discretetensorspec method)": [[26, "torchrl.data.DiscreteTensorSpec.squeeze"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[26, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "to_one_hot() (torchrl.data.discretetensorspec method)": [[26, "torchrl.data.DiscreteTensorSpec.to_one_hot"]], "to_one_hot_spec() (torchrl.data.discretetensorspec method)": [[26, "torchrl.data.DiscreteTensorSpec.to_one_hot_spec"]], "type_check() (torchrl.data.discretetensorspec method)": [[26, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[26, "torchrl.data.DiscreteTensorSpec.zero"]], "multidiscretetensorspec (class in torchrl.data)": [[27, "torchrl.data.MultiDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multidiscretetensorspec method)": [[27, "torchrl.data.MultiDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multidiscretetensorspec method)": [[27, "torchrl.data.MultiDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multidiscretetensorspec method)": [[27, "torchrl.data.MultiDiscreteTensorSpec.expand"]], "implements_for_spec() (torchrl.data.multidiscretetensorspec class method)": [[27, "torchrl.data.MultiDiscreteTensorSpec.implements_for_spec"]], "index() (torchrl.data.multidiscretetensorspec method)": [[27, "torchrl.data.MultiDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multidiscretetensorspec method)": [[27, "torchrl.data.MultiDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multidiscretetensorspec method)": [[27, "torchrl.data.MultiDiscreteTensorSpec.project"]], "rand() (torchrl.data.multidiscretetensorspec method)": [[27, "torchrl.data.MultiDiscreteTensorSpec.rand"]], "squeeze() (torchrl.data.multidiscretetensorspec method)": [[27, "torchrl.data.MultiDiscreteTensorSpec.squeeze"]], "to_numpy() (torchrl.data.multidiscretetensorspec method)": [[27, "torchrl.data.MultiDiscreteTensorSpec.to_numpy"]], "to_one_hot() (torchrl.data.multidiscretetensorspec method)": [[27, "torchrl.data.MultiDiscreteTensorSpec.to_one_hot"]], "to_one_hot_spec() (torchrl.data.multidiscretetensorspec method)": [[27, "torchrl.data.MultiDiscreteTensorSpec.to_one_hot_spec"]], "type_check() (torchrl.data.multidiscretetensorspec method)": [[27, "torchrl.data.MultiDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multidiscretetensorspec method)": [[27, "torchrl.data.MultiDiscreteTensorSpec.zero"]], "multionehotdiscretetensorspec (class in torchrl.data)": [[28, "torchrl.data.MultiOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[28, "torchrl.data.MultiOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multionehotdiscretetensorspec method)": [[28, "torchrl.data.MultiOneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multionehotdiscretetensorspec method)": [[28, "torchrl.data.MultiOneHotDiscreteTensorSpec.expand"]], "implements_for_spec() (torchrl.data.multionehotdiscretetensorspec class method)": [[28, "torchrl.data.MultiOneHotDiscreteTensorSpec.implements_for_spec"]], "index() (torchrl.data.multionehotdiscretetensorspec method)": [[28, "torchrl.data.MultiOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[28, "torchrl.data.MultiOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multionehotdiscretetensorspec method)": [[28, "torchrl.data.MultiOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multionehotdiscretetensorspec method)": [[28, "torchrl.data.MultiOneHotDiscreteTensorSpec.rand"]], "squeeze() (torchrl.data.multionehotdiscretetensorspec method)": [[28, "torchrl.data.MultiOneHotDiscreteTensorSpec.squeeze"]], "to_categorical() (torchrl.data.multionehotdiscretetensorspec method)": [[28, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_categorical"]], "to_categorical_spec() (torchrl.data.multionehotdiscretetensorspec method)": [[28, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_categorical_spec"]], "to_numpy() (torchrl.data.multionehotdiscretetensorspec method)": [[28, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multionehotdiscretetensorspec method)": [[28, "torchrl.data.MultiOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multionehotdiscretetensorspec method)": [[28, "torchrl.data.MultiOneHotDiscreteTensorSpec.zero"]], "onehotdiscretetensorspec (class in torchrl.data)": [[29, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.expand"]], "implements_for_spec() (torchrl.data.onehotdiscretetensorspec class method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.implements_for_spec"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "squeeze() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.squeeze"]], "to_categorical() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.to_categorical"]], "to_categorical_spec() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.to_categorical_spec"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[30, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[30, "torchrl.data.PrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.prioritizedreplaybuffer method)": [[30, "torchrl.data.PrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[30, "torchrl.data.PrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.prioritizedreplaybuffer method)": [[30, "torchrl.data.PrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[30, "torchrl.data.PrioritizedReplayBuffer.sample"]], "replaybuffer (class in torchrl.data)": [[31, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[31, "torchrl.data.ReplayBuffer.add"]], "append_transform() (torchrl.data.replaybuffer method)": [[31, "torchrl.data.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replaybuffer method)": [[31, "torchrl.data.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replaybuffer method)": [[31, "torchrl.data.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replaybuffer method)": [[31, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[32, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[32, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[32, "torchrl.data.TensorDictPrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[32, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[32, "torchrl.data.TensorDictPrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[32, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data)": [[33, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[33, "torchrl.data.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictreplaybuffer method)": [[33, "torchrl.data.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[33, "torchrl.data.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictreplaybuffer method)": [[33, "torchrl.data.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[33, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[34, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.encode"]], "expand() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.expand"]], "implements_for_spec() (torchrl.data.tensorspec class method)": [[34, "torchrl.data.TensorSpec.implements_for_spec"]], "index() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.rand"]], "squeeze() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.squeeze"]], "to_numpy() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[35, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "expand() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.expand"]], "implements_for_spec() (torchrl.data.unboundedcontinuoustensorspec class method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.implements_for_spec"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "squeeze() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.squeeze"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "unboundeddiscretetensorspec (class in torchrl.data)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.encode"]], "expand() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.expand"]], "implements_for_spec() (torchrl.data.unboundeddiscretetensorspec class method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.implements_for_spec"]], "index() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.index"]], "is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.is_in"]], "project() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.project"]], "rand() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.rand"]], "squeeze() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.squeeze"]], "to_numpy() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.zero"]], "d4rlexperiencereplay (class in torchrl.data.datasets)": [[37, "torchrl.data.datasets.D4RLExperienceReplay"]], "add() (torchrl.data.datasets.d4rlexperiencereplay method)": [[37, "torchrl.data.datasets.D4RLExperienceReplay.add"]], "append_transform() (torchrl.data.datasets.d4rlexperiencereplay method)": [[37, "torchrl.data.datasets.D4RLExperienceReplay.append_transform"]], "extend() (torchrl.data.datasets.d4rlexperiencereplay method)": [[37, "torchrl.data.datasets.D4RLExperienceReplay.extend"]], "insert_transform() (torchrl.data.datasets.d4rlexperiencereplay method)": [[37, "torchrl.data.datasets.D4RLExperienceReplay.insert_transform"]], "sample() (torchrl.data.datasets.d4rlexperiencereplay method)": [[37, "torchrl.data.datasets.D4RLExperienceReplay.sample"]], "lazymemmapstorage (class in torchrl.data.replay_buffers)": [[38, "torchrl.data.replay_buffers.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.lazymemmapstorage method)": [[38, "torchrl.data.replay_buffers.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers)": [[39, "torchrl.data.replay_buffers.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.lazytensorstorage method)": [[39, "torchrl.data.replay_buffers.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers)": [[40, "torchrl.data.replay_buffers.ListStorage"]], "attach() (torchrl.data.replay_buffers.liststorage method)": [[40, "torchrl.data.replay_buffers.ListStorage.attach"]], "prioritizedsampler (class in torchrl.data.replay_buffers)": [[41, "torchrl.data.replay_buffers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.prioritizedsampler method)": [[41, "torchrl.data.replay_buffers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers)": [[42, "torchrl.data.replay_buffers.RandomSampler"]], "roundrobinwriter (class in torchrl.data.replay_buffers)": [[43, "torchrl.data.replay_buffers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.roundrobinwriter method)": [[43, "torchrl.data.replay_buffers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.roundrobinwriter method)": [[43, "torchrl.data.replay_buffers.RoundRobinWriter.extend"]], "sampler (class in torchrl.data.replay_buffers)": [[44, "torchrl.data.replay_buffers.Sampler"]], "samplerwithoutreplacement (class in torchrl.data.replay_buffers)": [[45, "torchrl.data.replay_buffers.SamplerWithoutReplacement"]], "storage (class in torchrl.data.replay_buffers)": [[46, "torchrl.data.replay_buffers.Storage"]], "attach() (torchrl.data.replay_buffers.storage method)": [[46, "torchrl.data.replay_buffers.Storage.attach"]], "writer (class in torchrl.data.replay_buffers)": [[47, "torchrl.data.replay_buffers.Writer"]], "add() (torchrl.data.replay_buffers.writer method)": [[47, "torchrl.data.replay_buffers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writer method)": [[47, "torchrl.data.replay_buffers.Writer.extend"]], "envbase (class in torchrl.envs)": [[48, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[48, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.parameters"]], "rand_action() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.rand_action"]], "rand_step() (torchrl.envs.envbase method)": [[48, "id0"], [48, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[48, "id1"], [48, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[48, "id2"], [48, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[48, "id3"], [48, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[48, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[48, "id4"], [48, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.zero_grad"]], "envcreator (class in torchrl.envs)": [[49, "torchrl.envs.EnvCreator"]], "envmetadata (class in torchrl.envs)": [[50, "torchrl.envs.EnvMetaData"]], "gymlikeenv (class in torchrl.envs)": [[51, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[51, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.parameters"]], "rand_action() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.rand_action"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[51, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[51, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[52, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[52, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[52, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[52, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[52, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[52, "torchrl.envs.step"]], "multithreadedenv (class in torchrl.envs)": [[53, "torchrl.envs.MultiThreadedEnv"]], "add_module() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.add_module"]], "apply() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.apply"]], "batch_locked (torchrl.envs.multithreadedenv property)": [[53, "torchrl.envs.MultiThreadedEnv.batch_locked"]], "bfloat16() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.bfloat16"]], "buffers() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.buffers"]], "children() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.children"]], "close() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.close"]], "cpu() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.cpu"]], "cuda() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.cuda"]], "double() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.double"]], "eval() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.eval"]], "extra_repr() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.fake_tensordict"]], "float() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.float"]], "forward() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.forward"]], "get_buffer() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.get_buffer"]], "get_extra_state() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.get_extra_state"]], "get_parameter() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.get_parameter"]], "get_submodule() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.get_submodule"]], "half() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.half"]], "ipu() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.ipu"]], "load_state_dict() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.load_state_dict"]], "modules() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.modules"]], "named_buffers() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.named_buffers"]], "named_children() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.named_children"]], "named_modules() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.named_modules"]], "named_parameters() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.named_parameters"]], "parameters() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.parameters"]], "rand_action() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.rand_action"]], "rand_step() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.rand_step"]], "register_backward_hook() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.register_module"]], "register_parameter() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.requires_grad_"]], "reset() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.reset"]], "rollout() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.rollout"]], "set_extra_state() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.set_extra_state"]], "set_seed() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.set_seed"]], "share_memory() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.share_memory"]], "specs (torchrl.envs.multithreadedenv property)": [[53, "torchrl.envs.MultiThreadedEnv.specs"]], "state_dict() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.state_dict"]], "step() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.step"]], "to() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.to"]], "to_empty() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.to_empty"]], "train() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.train"]], "type() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.type"]], "xpu() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.xpu"]], "zero_grad() (torchrl.envs.multithreadedenv method)": [[53, "torchrl.envs.MultiThreadedEnv.zero_grad"]], "parallelenv (class in torchrl.envs)": [[54, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[54, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.parameters"]], "rand_action() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.rand_action"]], "rand_step() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[54, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[54, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[55, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[55, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.parameters"]], "rand_action() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.rand_action"]], "rand_step() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[55, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[55, "torchrl.envs.SerialEnv.zero_grad"]], "braxenv() (in module torchrl.envs.libs.brax)": [[56, "torchrl.envs.libs.brax.BraxEnv"]], "braxwrapper() (in module torchrl.envs.libs.brax)": [[57, "torchrl.envs.libs.brax.BraxWrapper"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[58, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[59, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[60, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[61, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[62, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[63, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[64, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "openmlenv() (in module torchrl.envs.libs.openml)": [[65, "torchrl.envs.libs.openml.OpenMLEnv"]], "vmasenv() (in module torchrl.envs.libs.vmas)": [[66, "torchrl.envs.libs.vmas.VmasEnv"]], "vmaswrapper() (in module torchrl.envs.libs.vmas)": [[67, "torchrl.envs.libs.vmas.VmasWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[68, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[69, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.CatFrames"]], "forward() (torchrl.envs.transforms.catframes method)": [[70, "torchrl.envs.transforms.CatFrames.forward"]], "reset() (torchrl.envs.transforms.catframes method)": [[70, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[70, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.CatTensors"]], "forward() (torchrl.envs.transforms.cattensors method)": [[71, "torchrl.envs.transforms.CatTensors.forward"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[71, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[72, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[73, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[73, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[73, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[73, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[73, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[73, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "discreteactionprojection (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.DiscreteActionProjection"]], "transform_input_spec() (torchrl.envs.transforms.discreteactionprojection method)": [[74, "torchrl.envs.transforms.DiscreteActionProjection.transform_input_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[75, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[75, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[75, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "excludetransform (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.ExcludeTransform"]], "forward() (torchrl.envs.transforms.excludetransform method)": [[76, "torchrl.envs.transforms.ExcludeTransform.forward"]], "reset() (torchrl.envs.transforms.excludetransform method)": [[76, "torchrl.envs.transforms.ExcludeTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.excludetransform method)": [[76, "torchrl.envs.transforms.ExcludeTransform.transform_observation_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "forward() (torchrl.envs.transforms.finitetensordictcheck method)": [[77, "torchrl.envs.transforms.FiniteTensorDictCheck.forward"]], "flattenobservation (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.FlattenObservation"]], "forward() (torchrl.envs.transforms.flattenobservation method)": [[78, "torchrl.envs.transforms.FlattenObservation.forward"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[78, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "frameskiptransform (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.FrameSkipTransform"]], "forward() (torchrl.envs.transforms.frameskiptransform method)": [[79, "torchrl.envs.transforms.FrameSkipTransform.forward"]], "grayscale (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[80, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "inittracker (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.InitTracker"]], "forward() (torchrl.envs.transforms.inittracker method)": [[81, "torchrl.envs.transforms.InitTracker.forward"]], "reset() (torchrl.envs.transforms.inittracker method)": [[81, "torchrl.envs.transforms.InitTracker.reset"]], "transform_observation_spec() (torchrl.envs.transforms.inittracker method)": [[81, "torchrl.envs.transforms.InitTracker.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[82, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[82, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[83, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[83, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_input_spec() (torchrl.envs.transforms.observationnorm method)": [[83, "torchrl.envs.transforms.ObservationNorm.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[83, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[84, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[85, "torchrl.envs.transforms.PinMemoryTransform"]], "forward() (torchrl.envs.transforms.pinmemorytransform method)": [[85, "torchrl.envs.transforms.PinMemoryTransform.forward"]], "r3mtransform (class in torchrl.envs.transforms)": [[86, "torchrl.envs.transforms.R3MTransform"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[86, "torchrl.envs.transforms.R3MTransform.to"]], "randomcroptensordict (class in torchrl.envs.transforms)": [[87, "torchrl.envs.transforms.RandomCropTensorDict"]], "forward() (torchrl.envs.transforms.randomcroptensordict method)": [[87, "torchrl.envs.transforms.RandomCropTensorDict.forward"]], "renametransform (class in torchrl.envs.transforms)": [[88, "torchrl.envs.transforms.RenameTransform"]], "forward() (torchrl.envs.transforms.renametransform method)": [[88, "torchrl.envs.transforms.RenameTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.renametransform method)": [[88, "torchrl.envs.transforms.RenameTransform.transform_input_spec"]], "transform_output_spec() (torchrl.envs.transforms.renametransform method)": [[88, "torchrl.envs.transforms.RenameTransform.transform_output_spec"]], "resize (class in torchrl.envs.transforms)": [[89, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[89, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[90, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[90, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[91, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[91, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "rewardsum (class in torchrl.envs.transforms)": [[92, "torchrl.envs.transforms.RewardSum"]], "forward() (torchrl.envs.transforms.rewardsum method)": [[92, "torchrl.envs.transforms.RewardSum.forward"]], "reset() (torchrl.envs.transforms.rewardsum method)": [[92, "torchrl.envs.transforms.RewardSum.reset"]], "transform_observation_spec() (torchrl.envs.transforms.rewardsum method)": [[92, "torchrl.envs.transforms.RewardSum.transform_observation_spec"]], "selecttransform (class in torchrl.envs.transforms)": [[93, "torchrl.envs.transforms.SelectTransform"]], "forward() (torchrl.envs.transforms.selecttransform method)": [[93, "torchrl.envs.transforms.SelectTransform.forward"]], "reset() (torchrl.envs.transforms.selecttransform method)": [[93, "torchrl.envs.transforms.SelectTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.selecttransform method)": [[93, "torchrl.envs.transforms.SelectTransform.transform_observation_spec"]], "squeezetransform (class in torchrl.envs.transforms)": [[94, "torchrl.envs.transforms.SqueezeTransform"]], "stepcounter (class in torchrl.envs.transforms)": [[95, "torchrl.envs.transforms.StepCounter"]], "forward() (torchrl.envs.transforms.stepcounter method)": [[95, "torchrl.envs.transforms.StepCounter.forward"]], "reset() (torchrl.envs.transforms.stepcounter method)": [[95, "torchrl.envs.transforms.StepCounter.reset"]], "transform_input_spec() (torchrl.envs.transforms.stepcounter method)": [[95, "torchrl.envs.transforms.StepCounter.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.stepcounter method)": [[95, "torchrl.envs.transforms.StepCounter.transform_observation_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[96, "torchrl.envs.transforms.TensorDictPrimer"]], "forward() (torchrl.envs.transforms.tensordictprimer method)": [[96, "torchrl.envs.transforms.TensorDictPrimer.forward"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[96, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[96, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[96, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "timemaxpool (class in torchrl.envs.transforms)": [[97, "torchrl.envs.transforms.TimeMaxPool"]], "forward() (torchrl.envs.transforms.timemaxpool method)": [[97, "torchrl.envs.transforms.TimeMaxPool.forward"]], "reset() (torchrl.envs.transforms.timemaxpool method)": [[97, "torchrl.envs.transforms.TimeMaxPool.reset"]], "transform_observation_spec() (torchrl.envs.transforms.timemaxpool method)": [[97, "torchrl.envs.transforms.TimeMaxPool.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[98, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[98, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[99, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[99, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[99, "torchrl.envs.transforms.Transform.reset"]], "transform_done_spec() (torchrl.envs.transforms.transform method)": [[99, "torchrl.envs.transforms.Transform.transform_done_spec"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[99, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[99, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_output_spec() (torchrl.envs.transforms.transform method)": [[99, "torchrl.envs.transforms.Transform.transform_output_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[99, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[100, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[100, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[100, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "done_spec (torchrl.envs.transforms.transformedenv property)": [[100, "torchrl.envs.transforms.TransformedEnv.done_spec"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[100, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[100, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[100, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[100, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "output_spec (torchrl.envs.transforms.transformedenv property)": [[100, "torchrl.envs.transforms.TransformedEnv.output_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[100, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[100, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[100, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[100, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[100, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[101, "torchrl.envs.transforms.UnsqueezeTransform"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[101, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[101, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[101, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[102, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[102, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[102, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[103, "torchrl.envs.transforms.VIPTransform"]], "to() (torchrl.envs.transforms.viptransform method)": [[103, "torchrl.envs.transforms.VIPTransform.to"]], "vecnorm (class in torchrl.envs.transforms)": [[104, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[104, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "forward() (torchrl.envs.transforms.vecnorm method)": [[104, "torchrl.envs.transforms.VecNorm.forward"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[104, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[104, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[104, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[105, "torchrl.envs.transforms.gSDENoise"]], "check_env_specs() (in module torchrl.envs.utils)": [[106, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[107, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[108, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[109, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[110, "torchrl.envs.utils.step_mdp"]], "cemplanner (class in torchrl.modules)": [[111, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[111, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[112, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[112, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[113, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[113, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[114, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[114, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[115, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[115, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[116, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[116, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[117, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[117, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[117, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[117, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[117, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[117, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[118, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[118, "torchrl.modules.DistributionalDQNnet.forward"]], "dreameractor (class in torchrl.modules)": [[119, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[119, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[120, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[120, "torchrl.modules.DuelingCnnDQNet.forward"]], "independentnormal (class in torchrl.modules)": [[121, "torchrl.modules.IndependentNormal"]], "mode (torchrl.modules.independentnormal property)": [[121, "torchrl.modules.IndependentNormal.mode"]], "lstmnet (class in torchrl.modules)": [[122, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[122, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[123, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[123, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[124, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[124, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[124, "torchrl.modules.MPCPlannerBase.planning"]], "mppiplanner (class in torchrl.modules)": [[125, "torchrl.modules.MPPIPlanner"]], "planning() (torchrl.modules.mppiplanner method)": [[125, "torchrl.modules.MPPIPlanner.planning"]], "noisylazylinear (class in torchrl.modules)": [[126, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[126, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[127, "torchrl.modules.NoisyLinear"]], "normalparamwrapper (class in torchrl.modules)": [[128, "torchrl.modules.NormalParamWrapper"]], "forward() (torchrl.modules.normalparamwrapper method)": [[128, "torchrl.modules.NormalParamWrapper.forward"]], "obsdecoder (class in torchrl.modules)": [[129, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[129, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[130, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[130, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[131, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[131, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[131, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[131, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[131, "torchrl.modules.OneHotCategorical.sample"]], "rssmposterior (class in torchrl.modules)": [[132, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[132, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[133, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[133, "torchrl.modules.RSSMPrior.forward"]], "tanhdelta (class in torchrl.modules)": [[134, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[134, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[134, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[135, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[135, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[136, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[136, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[136, "torchrl.modules.TruncatedNormal.mode"]], "reset_noise (class in torchrl.modules)": [[137, "torchrl.modules.reset_noise"]], "actor (class in torchrl.modules.tensordict_module)": [[138, "torchrl.modules.tensordict_module.Actor"]], "actorcriticoperator (class in torchrl.modules.tensordict_module)": [[139, "torchrl.modules.tensordict_module.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[139, "torchrl.modules.tensordict_module.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[139, "torchrl.modules.tensordict_module.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules.tensordict_module)": [[140, "torchrl.modules.tensordict_module.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[140, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[140, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules.tensordict_module)": [[141, "torchrl.modules.tensordict_module.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[141, "torchrl.modules.tensordict_module.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[141, "torchrl.modules.tensordict_module.ActorValueOperator.get_value_operator"]], "additivegaussianwrapper (class in torchrl.modules.tensordict_module)": [[142, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper"]], "forward() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[142, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.forward"]], "step() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[142, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.step"]], "distributionalqvalueactor (class in torchrl.modules.tensordict_module)": [[143, "torchrl.modules.tensordict_module.DistributionalQValueActor"]], "egreedywrapper (class in torchrl.modules.tensordict_module)": [[144, "torchrl.modules.tensordict_module.EGreedyWrapper"]], "forward() (torchrl.modules.tensordict_module.egreedywrapper method)": [[144, "torchrl.modules.tensordict_module.EGreedyWrapper.forward"]], "step() (torchrl.modules.tensordict_module.egreedywrapper method)": [[144, "torchrl.modules.tensordict_module.EGreedyWrapper.step"]], "ornsteinuhlenbeckprocesswrapper (class in torchrl.modules.tensordict_module)": [[145, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper"]], "forward() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[145, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.forward"]], "step() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[145, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.step"]], "probabilisticactor (class in torchrl.modules.tensordict_module)": [[146, "torchrl.modules.tensordict_module.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules.tensordict_module)": [[147, "torchrl.modules.tensordict_module.QValueActor"]], "safemodule (class in torchrl.modules.tensordict_module)": [[148, "torchrl.modules.tensordict_module.SafeModule"]], "random() (torchrl.modules.tensordict_module.safemodule method)": [[148, "torchrl.modules.tensordict_module.SafeModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safemodule method)": [[148, "torchrl.modules.tensordict_module.SafeModule.random_sample"]], "to() (torchrl.modules.tensordict_module.safemodule method)": [[148, "torchrl.modules.tensordict_module.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules.tensordict_module)": [[149, "torchrl.modules.tensordict_module.SafeProbabilisticModule"]], "random() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[149, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[149, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random_sample"]], "safeprobabilistictensordictsequential (class in torchrl.modules.tensordict_module)": [[150, "torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential"]], "safesequential (class in torchrl.modules.tensordict_module)": [[151, "torchrl.modules.tensordict_module.SafeSequential"]], "valueoperator (class in torchrl.modules.tensordict_module)": [[152, "torchrl.modules.tensordict_module.ValueOperator"]], "worldmodelwrapper (class in torchrl.modules.tensordict_module)": [[153, "torchrl.modules.tensordict_module.WorldModelWrapper"]], "get_reward_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[153, "torchrl.modules.tensordict_module.WorldModelWrapper.get_reward_operator"]], "get_transition_model_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[153, "torchrl.modules.tensordict_module.WorldModelWrapper.get_transition_model_operator"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[154, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[155, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[156, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[157, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[158, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[158, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[159, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[160, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[161, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[161, "torchrl.objectives.A2CLoss.forward"]], "make_value_estimator() (torchrl.objectives.a2closs method)": [[161, "torchrl.objectives.A2CLoss.make_value_estimator"]], "clipppoloss (class in torchrl.objectives)": [[162, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[162, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[163, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[163, "torchrl.objectives.DDPGLoss.forward"]], "make_value_estimator() (torchrl.objectives.ddpgloss method)": [[163, "torchrl.objectives.DDPGLoss.make_value_estimator"]], "dqnloss (class in torchrl.objectives)": [[164, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[164, "torchrl.objectives.DQNLoss.forward"]], "make_value_estimator() (torchrl.objectives.dqnloss method)": [[164, "torchrl.objectives.DQNLoss.make_value_estimator"]], "discretesacloss (class in torchrl.objectives)": [[165, "torchrl.objectives.DiscreteSACLoss"]], "forward() (torchrl.objectives.discretesacloss method)": [[165, "torchrl.objectives.DiscreteSACLoss.forward"]], "make_value_estimator() (torchrl.objectives.discretesacloss method)": [[165, "torchrl.objectives.DiscreteSACLoss.make_value_estimator"]], "distributionaldqnloss (class in torchrl.objectives)": [[166, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[166, "torchrl.objectives.DistributionalDQNLoss.forward"]], "make_value_estimator() (torchrl.objectives.distributionaldqnloss method)": [[166, "torchrl.objectives.DistributionalDQNLoss.make_value_estimator"]], "dreameractorloss (class in torchrl.objectives)": [[167, "torchrl.objectives.DreamerActorLoss"]], "forward() (torchrl.objectives.dreameractorloss method)": [[167, "torchrl.objectives.DreamerActorLoss.forward"]], "make_value_estimator() (torchrl.objectives.dreameractorloss method)": [[167, "torchrl.objectives.DreamerActorLoss.make_value_estimator"]], "dreamermodelloss (class in torchrl.objectives)": [[168, "torchrl.objectives.DreamerModelLoss"]], "forward() (torchrl.objectives.dreamermodelloss method)": [[168, "torchrl.objectives.DreamerModelLoss.forward"]], "dreamervalueloss (class in torchrl.objectives)": [[169, "torchrl.objectives.DreamerValueLoss"]], "forward() (torchrl.objectives.dreamervalueloss method)": [[169, "torchrl.objectives.DreamerValueLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[170, "torchrl.objectives.HardUpdate"]], "iqlloss (class in torchrl.objectives)": [[171, "torchrl.objectives.IQLLoss"]], "forward() (torchrl.objectives.iqlloss method)": [[171, "torchrl.objectives.IQLLoss.forward"]], "loss_value_diff() (torchrl.objectives.iqlloss static method)": [[171, "torchrl.objectives.IQLLoss.loss_value_diff"]], "make_value_estimator() (torchrl.objectives.iqlloss method)": [[171, "torchrl.objectives.IQLLoss.make_value_estimator"]], "klpenppoloss (class in torchrl.objectives)": [[172, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[172, "torchrl.objectives.KLPENPPOLoss.forward"]], "lossmodule (class in torchrl.objectives)": [[173, "torchrl.objectives.LossModule"]], "convert_to_functional() (torchrl.objectives.lossmodule method)": [[173, "torchrl.objectives.LossModule.convert_to_functional"]], "cpu() (torchrl.objectives.lossmodule method)": [[173, "torchrl.objectives.LossModule.cpu"]], "cuda() (torchrl.objectives.lossmodule method)": [[173, "torchrl.objectives.LossModule.cuda"]], "double() (torchrl.objectives.lossmodule method)": [[173, "torchrl.objectives.LossModule.double"]], "float() (torchrl.objectives.lossmodule method)": [[173, "torchrl.objectives.LossModule.float"]], "forward() (torchrl.objectives.lossmodule method)": [[173, "torchrl.objectives.LossModule.forward"]], "half() (torchrl.objectives.lossmodule method)": [[173, "torchrl.objectives.LossModule.half"]], "make_value_estimator() (torchrl.objectives.lossmodule method)": [[173, "torchrl.objectives.LossModule.make_value_estimator"]], "named_parameters() (torchrl.objectives.lossmodule method)": [[173, "torchrl.objectives.LossModule.named_parameters"]], "parameters() (torchrl.objectives.lossmodule method)": [[173, "torchrl.objectives.LossModule.parameters"]], "register_buffer() (torchrl.objectives.lossmodule method)": [[173, "torchrl.objectives.LossModule.register_buffer"]], "to() (torchrl.objectives.lossmodule method)": [[173, "torchrl.objectives.LossModule.to"]], "value_estimator (torchrl.objectives.lossmodule property)": [[173, "torchrl.objectives.LossModule.value_estimator"]], "ppoloss (class in torchrl.objectives)": [[174, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[174, "torchrl.objectives.PPOLoss.forward"]], "make_value_estimator() (torchrl.objectives.ppoloss method)": [[174, "torchrl.objectives.PPOLoss.make_value_estimator"]], "redqloss (class in torchrl.objectives)": [[175, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[175, "torchrl.objectives.REDQLoss.forward"]], "make_value_estimator() (torchrl.objectives.redqloss method)": [[175, "torchrl.objectives.REDQLoss.make_value_estimator"]], "reinforceloss (class in torchrl.objectives)": [[176, "torchrl.objectives.ReinforceLoss"]], "forward() (torchrl.objectives.reinforceloss method)": [[176, "torchrl.objectives.ReinforceLoss.forward"]], "make_value_estimator() (torchrl.objectives.reinforceloss method)": [[176, "torchrl.objectives.ReinforceLoss.make_value_estimator"]], "sacloss (class in torchrl.objectives)": [[177, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[177, "torchrl.objectives.SACLoss.forward"]], "make_value_estimator() (torchrl.objectives.sacloss method)": [[177, "torchrl.objectives.SACLoss.make_value_estimator"]], "softupdate (class in torchrl.objectives)": [[178, "torchrl.objectives.SoftUpdate"]], "td3loss (class in torchrl.objectives)": [[179, "torchrl.objectives.TD3Loss"]], "forward() (torchrl.objectives.td3loss method)": [[179, "torchrl.objectives.TD3Loss.forward"]], "make_value_estimator() (torchrl.objectives.td3loss method)": [[179, "torchrl.objectives.TD3Loss.make_value_estimator"]], "default_value_kwargs (class in torchrl.objectives)": [[180, "torchrl.objectives.default_value_kwargs"]], "distance_loss (class in torchrl.objectives)": [[181, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[182, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[183, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[184, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[185, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[185, "torchrl.objectives.value.GAE.forward"]], "value_estimate() (torchrl.objectives.value.gae method)": [[185, "torchrl.objectives.value.GAE.value_estimate"]], "td0estimator (class in torchrl.objectives.value)": [[186, "torchrl.objectives.value.TD0Estimator"]], "forward() (torchrl.objectives.value.td0estimator method)": [[186, "torchrl.objectives.value.TD0Estimator.forward"]], "value_estimate() (torchrl.objectives.value.td0estimator method)": [[186, "torchrl.objectives.value.TD0Estimator.value_estimate"]], "td1estimator (class in torchrl.objectives.value)": [[187, "torchrl.objectives.value.TD1Estimator"]], "forward() (torchrl.objectives.value.td1estimator method)": [[187, "torchrl.objectives.value.TD1Estimator.forward"]], "value_estimate() (torchrl.objectives.value.td1estimator method)": [[187, "torchrl.objectives.value.TD1Estimator.value_estimate"]], "tdlambdaestimator (class in torchrl.objectives.value)": [[188, "torchrl.objectives.value.TDLambdaEstimator"]], "forward() (torchrl.objectives.value.tdlambdaestimator method)": [[188, "torchrl.objectives.value.TDLambdaEstimator.forward"]], "value_estimate() (torchrl.objectives.value.tdlambdaestimator method)": [[188, "torchrl.objectives.value.TDLambdaEstimator.value_estimate"]], "valueestimatorbase (class in torchrl.objectives.value)": [[189, "torchrl.objectives.value.ValueEstimatorBase"]], "forward() (torchrl.objectives.value.valueestimatorbase method)": [[189, "torchrl.objectives.value.ValueEstimatorBase.forward"]], "value_estimate() (torchrl.objectives.value.valueestimatorbase method)": [[189, "torchrl.objectives.value.ValueEstimatorBase.value_estimate"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[190, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td0_advantage_estimate (class in torchrl.objectives.value.functional)": [[191, "torchrl.objectives.value.functional.td0_advantage_estimate"]], "td0_return_estimate (class in torchrl.objectives.value.functional)": [[192, "torchrl.objectives.value.functional.td0_return_estimate"]], "td1_advantage_estimate (class in torchrl.objectives.value.functional)": [[193, "torchrl.objectives.value.functional.td1_advantage_estimate"]], "td1_return_estimate (class in torchrl.objectives.value.functional)": [[194, "torchrl.objectives.value.functional.td1_return_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[195, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[196, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[197, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td1_advantage_estimate (class in torchrl.objectives.value.functional)": [[198, "torchrl.objectives.value.functional.vec_td1_advantage_estimate"]], "vec_td1_return_estimate (class in torchrl.objectives.value.functional)": [[199, "torchrl.objectives.value.functional.vec_td1_return_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[200, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[201, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "tensordictrecorder() (in module torchrl.record)": [[202, "torchrl.record.TensorDictRecorder"]], "videorecorder() (in module torchrl.record)": [[203, "torchrl.record.VideoRecorder"]], "logger() (in module torchrl.record.loggers)": [[204, "torchrl.record.loggers.Logger"]], "csvlogger() (in module torchrl.record.loggers.csv)": [[205, "torchrl.record.loggers.csv.CSVLogger"]], "generate_exp_name() (in module torchrl.record.loggers)": [[206, "torchrl.record.loggers.generate_exp_name"]], "get_logger() (in module torchrl.record.loggers)": [[207, "torchrl.record.loggers.get_logger"]], "mlflowlogger() (in module torchrl.record.loggers.mlflow)": [[208, "torchrl.record.loggers.mlflow.MLFlowLogger"]], "tensorboardlogger() (in module torchrl.record.loggers.tensorboard)": [[209, "torchrl.record.loggers.tensorboard.TensorboardLogger"]], "wandblogger() (in module torchrl.record.loggers.wandb)": [[210, "torchrl.record.loggers.wandb.WandbLogger"]], "batchsubsampler (class in torchrl.trainers)": [[211, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[212, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[213, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[214, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[215, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[216, "torchrl.trainers.Recorder"]], "replaybuffertrainer (class in torchrl.trainers)": [[217, "torchrl.trainers.ReplayBufferTrainer"]], "rewardnormalizer (class in torchrl.trainers)": [[218, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[219, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[220, "torchrl.trainers.Trainer"]], "trainerhookbase (class in torchrl.trainers)": [[221, "torchrl.trainers.TrainerHookBase"]], "updateweights (class in torchrl.trainers)": [[222, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[223, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[224, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[225, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[226, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[227, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[228, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[229, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[230, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[231, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[232, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[233, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[234, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[235, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[236, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[237, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[238, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[239, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[240, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[241, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[242, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[243, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[244, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[245, "torchrl.trainers.helpers.transformed_env_constructor"]]}})