Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.NdBoundedTensorSpec", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.Actor", "reference/generated/torchrl.modules.ActorCriticOperator", "reference/generated/torchrl.modules.ActorCriticWrapper", "reference/generated/torchrl.modules.ActorValueOperator", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueActor", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.ProbabilisticActor", "reference/generated/torchrl.modules.ProbabilisticTensorDictModule", "reference/generated/torchrl.modules.QValueActor", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TensorDictModule", "reference/generated/torchrl.modules.TensorDictModuleWrapper", "reference/generated/torchrl.modules.TensorDictSequential", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.ValueOperator", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBuffer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/index", "tutorials/multi_task", "tutorials/sg_execution_times", "tutorials/tensordict_module", "tutorials/tensordict_tutorial", "tutorials/torch_envs", "tutorials/torchrl_demo"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.NdBoundedTensorSpec.rst", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.Actor.rst", "reference/generated/torchrl.modules.ActorCriticOperator.rst", "reference/generated/torchrl.modules.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.ActorValueOperator.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.ProbabilisticActor.rst", "reference/generated/torchrl.modules.ProbabilisticTensorDictModule.rst", "reference/generated/torchrl.modules.QValueActor.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TensorDictModule.rst", "reference/generated/torchrl.modules.TensorDictModuleWrapper.rst", "reference/generated/torchrl.modules.TensorDictSequential.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.ValueOperator.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBuffer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/sg_execution_times.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_tutorial.rst", "tutorials/torch_envs.rst", "tutorials/torchrl_demo.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips", "Useful resources", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultOneHotDiscreteTensorSpec", "MultiStep", "NdBoundedTensorSpec", "NdUnboundedContinuousTensorSpec", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "TensorDictReplayBuffer", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "GymLikeEnv", "ModelBasedEnvBase", "ParallelEnv", "SerialEnv", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DoubleToFloat", "FiniteTensorDictCheck", "FlattenObservation", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "TensorDictPrimer", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPTransform", "VecNorm", "gSDENoise", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DistributionalQValueActor", "DreamerActor", "DuelingCnnDQNet", "LSTMNet", "MLP", "MPCPlannerBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "ProbabilisticActor", "ProbabilisticTensorDictModule", "QValueActor", "RSSMPosterior", "RSSMPrior", "TanhDelta", "TanhNormal", "TensorDictModule", "TensorDictModuleWrapper", "TensorDictSequential", "TruncatedNormal", "ValueOperator", "reset_noise", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "Recorder", "ReplayBuffer", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Demos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "README Demos", "Task-specific policy in multi-task environments", "Computation times", "TensorDictModule", "TensorDict", "TorchRL envs", "Introduction to TorchRL"], "terms": {"i": [0, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 61, 62, 65, 68, 69, 70, 71, 72, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 137, 138, 139, 140, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 156, 158, 159, 162, 167, 169, 172, 174, 178, 181, 184, 186, 187, 189, 191, 193, 194], "an": [0, 2, 3, 4, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 55, 58, 61, 62, 65, 66, 70, 71, 72, 75, 82, 83, 84, 86, 87, 88, 89, 90, 96, 97, 99, 102, 105, 119, 120, 123, 124, 127, 129, 130, 131, 132, 138, 139, 140, 152, 153, 156, 159, 162, 175, 176, 177, 178, 181, 186, 187, 189, 191, 192, 193, 194], "open": [0, 4, 6, 9, 194], "sourc": [0, 6, 156, 186, 187, 188, 189, 191, 192, 193, 194], "reinforc": [0, 2, 8, 53, 87, 88, 89, 90, 117, 127, 128, 132, 133, 162, 187, 194], "learn": [0, 2, 6, 8, 20, 53, 87, 88, 89, 90, 100, 117, 127, 128, 131, 132, 133, 162, 186, 187, 189, 193, 194], "rl": [0, 2, 7, 10, 11, 12, 13, 44, 81, 100, 104, 115, 130, 148, 181, 184, 186, 192, 193], "librari": [0, 6, 8, 78, 180, 181, 185, 186, 193], "pytorch": [0, 2, 70, 156, 184, 186, 192, 193, 194], "It": [0, 6, 20, 26, 42, 43, 44, 45, 46, 72, 87, 89, 94, 105, 107, 108, 124, 127, 129, 130, 131, 132, 137, 152, 169, 181, 186, 191, 192, 193, 194], "provid": [0, 2, 3, 8, 12, 20, 24, 25, 26, 31, 42, 43, 44, 45, 46, 54, 61, 62, 65, 69, 72, 74, 75, 81, 86, 96, 97, 98, 104, 117, 137, 148, 153, 159, 167, 169, 172, 174, 181, 184, 186, 187, 189, 191, 193, 194], "python": [0, 5, 6, 111, 184, 186, 187, 188, 189, 191, 193, 194], "first": [0, 6, 9, 10, 11, 12, 13, 43, 54, 59, 62, 65, 70, 72, 97, 99, 102, 105, 111, 155, 186, 187, 189, 191, 192, 193, 194], "low": [0, 186, 187, 194], "high": [0, 8, 138, 141, 142, 145, 186, 187, 194], "level": [0, 129, 186, 187, 194], "abstract": [0, 16, 17, 18, 21, 22, 28, 29, 41, 42, 63, 98, 184, 192, 194], "ar": [0, 2, 6, 7, 8, 10, 11, 12, 13, 20, 23, 36, 37, 38, 39, 42, 43, 44, 45, 46, 56, 57, 58, 65, 69, 71, 72, 74, 75, 80, 85, 90, 91, 96, 100, 103, 105, 108, 111, 112, 113, 123, 124, 127, 129, 130, 131, 132, 134, 137, 138, 139, 140, 174, 178, 179, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194], "intend": [0, 6, 10, 11, 12, 13, 194], "effici": [0, 2, 100, 186, 187, 189, 192, 194], "modular": [0, 113, 194], "properli": [0, 192, 194], "test": [0, 4, 96, 152, 174, 191, 194], "The": [0, 2, 6, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 43, 45, 46, 56, 62, 65, 68, 69, 72, 74, 81, 82, 85, 87, 88, 89, 90, 96, 98, 100, 104, 105, 107, 108, 111, 113, 115, 121, 124, 125, 126, 129, 132, 137, 148, 174, 176, 177, 184, 186, 191, 192, 193, 194], "code": [0, 6, 65, 113, 188, 189, 190, 191, 193, 194], "aim": [0, 3, 6, 65, 74, 97, 158, 181, 186, 187, 194], "support": [0, 39, 71, 78, 93, 105, 111, 113, 117, 127, 184, 191, 192, 194], "research": [0, 6, 8, 194], "most": [0, 3, 6, 20, 186, 194], "written": [0, 26, 36, 42, 43, 45, 46, 105, 111, 124, 129, 130, 137, 184, 186, 189, 194], "highli": [0, 2, 193, 194], "wai": [0, 130, 187, 189, 193, 194], "can": [0, 5, 6, 7, 9, 10, 11, 12, 13, 17, 18, 20, 26, 28, 30, 42, 43, 45, 46, 53, 56, 61, 62, 65, 69, 71, 72, 74, 75, 85, 98, 100, 105, 110, 111, 112, 113, 114, 120, 123, 124, 125, 126, 127, 129, 130, 131, 132, 137, 152, 167, 169, 172, 176, 177, 178, 181, 184, 186, 187, 189, 191, 193, 194], "easili": [0, 6, 45, 46, 167, 169, 172, 187, 192, 193, 194], "swap": [0, 194], "compon": [0, 36, 37, 38, 39, 117, 118, 124, 127, 129, 130, 131, 132, 156, 189, 191, 194], "transform": [0, 20, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 87, 94, 105, 111, 113, 117, 118, 121, 123, 162, 164, 167, 169, 172, 178, 180, 187], "them": [0, 6, 30, 31, 32, 42, 43, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 129, 186, 187, 189, 191, 192, 193, 194], "write": [0, 20, 43, 64, 105, 111, 113, 125, 126, 131, 132, 137, 184, 186, 187, 189, 191, 192, 194], "new": [0, 10, 11, 12, 13, 20, 24, 26, 33, 42, 43, 45, 46, 71, 75, 80, 111, 113, 124, 126, 127, 129, 130, 131, 132, 186, 187, 191, 192, 193, 194], "ones": [0, 17, 20, 42, 43, 45, 46, 54, 56, 57, 62, 65, 69, 72, 74, 111, 186, 192, 193, 194], "littl": [0, 193, 194], "effort": [0, 194], "thi": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 20, 23, 26, 32, 36, 37, 38, 39, 42, 43, 44, 45, 46, 53, 54, 56, 58, 62, 65, 69, 71, 72, 73, 74, 75, 80, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 117, 118, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 148, 150, 152, 156, 157, 158, 159, 167, 169, 172, 174, 178, 181, 184, 186, 187, 189, 191, 193, 194], "repo": [0, 5, 181, 194], "attempt": [0, 194], "align": [0, 194], "exist": [0, 20, 42, 43, 45, 46, 54, 72, 159, 178, 191, 193, 194], "ecosystem": [0, 194], "ha": [0, 6, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 44, 45, 46, 69, 72, 105, 111, 113, 129, 186, 187, 189, 191, 192, 193, 194], "dataset": [0, 24, 25, 26, 31, 75, 153, 192, 193, 194], "pillar": [0, 194], "environ": [0, 3, 7, 9, 10, 11, 12, 13, 20, 23, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 57, 61, 62, 65, 71, 72, 75, 85, 96, 98, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 158, 159, 160, 161, 162, 164, 167, 169, 172, 174, 175, 176, 177, 178, 181, 188, 190], "model": [0, 8, 10, 11, 12, 13, 20, 42, 43, 44, 45, 46, 65, 74, 76, 82, 83, 84, 86, 97, 98, 105, 111, 130, 131, 132, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 180, 181, 184, 191, 193], "data": [0, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 62, 81, 82, 83, 84, 85, 93, 96, 104, 105, 106, 111, 112, 113, 115, 117, 118, 125, 131, 132, 138, 139, 140, 148, 153, 156, 157, 160, 174, 176, 177, 178, 180, 184, 187, 192, 193], "util": [0, 10, 11, 12, 13, 14, 20, 42, 43, 45, 46, 65, 74, 77, 78, 79, 80, 86, 112, 121, 122, 123, 174, 180, 185, 186, 187, 193, 194], "e": [0, 9, 10, 11, 12, 13, 20, 23, 36, 37, 42, 43, 45, 46, 54, 56, 65, 69, 71, 72, 74, 80, 105, 110, 111, 114, 118, 137, 148, 158, 177, 186, 187, 192, 193, 194], "g": [0, 9, 20, 23, 42, 43, 45, 46, 54, 56, 65, 69, 71, 72, 74, 105, 110, 111, 114, 137, 143, 144, 146, 147, 177, 186, 187, 193, 194], "collector": [0, 10, 11, 12, 13, 14, 156, 157, 160, 161, 174, 176, 177, 180, 184, 187, 193, 194], "contain": [0, 6, 10, 11, 12, 13, 20, 24, 25, 26, 27, 28, 30, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 56, 65, 69, 72, 74, 75, 80, 85, 86, 97, 111, 112, 124, 125, 126, 127, 129, 130, 131, 132, 137, 138, 139, 140, 148, 153, 158, 162, 164, 167, 169, 172, 174, 175, 176, 177, 178, 184, 187, 191, 193, 194], "etc": [0, 6, 20, 22, 29, 42, 43, 45, 46, 72, 97, 186, 192, 193, 194], "have": [0, 5, 6, 10, 11, 13, 17, 20, 39, 42, 43, 45, 46, 53, 61, 71, 72, 75, 86, 96, 97, 113, 124, 129, 130, 134, 148, 156, 184, 186, 187, 189, 191, 192, 193, 194], "few": [0, 2, 7, 148, 187, 191, 193, 194], "depend": [0, 6, 115, 130, 193, 194], "possibl": [0, 18, 20, 23, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111, 152, 156, 186, 191, 192, 193, 194], "standard": [0, 62, 75, 85, 94, 99, 100, 138, 139, 140, 186, 187, 194], "numpi": [0, 12, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 70, 156, 186, 187, 193, 194], "common": [0, 43, 45, 46, 82, 83, 84, 105, 119, 120, 174, 181, 184, 186, 189, 191, 192, 193, 194], "openai": [0, 6, 49, 50, 193, 194], "gym": [0, 9, 43, 49, 50, 62, 69, 75, 162, 164, 167, 169, 172, 174, 181, 186, 187, 194], "onli": [0, 4, 6, 10, 11, 13, 20, 26, 42, 43, 45, 46, 54, 56, 65, 69, 72, 74, 75, 96, 105, 111, 113, 159, 184, 186, 187, 189, 191, 193, 194], "option": [0, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 36, 37, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 80, 81, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 125, 126, 130, 131, 132, 137, 138, 139, 140, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 156, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 186, 187, 194], "On": [0, 6, 187, 192], "end": [0, 20, 42, 43, 45, 46, 72, 86, 98, 141, 142, 143, 144, 145, 146, 147, 186, 189, 193, 194], "come": [0, 45, 46, 81, 82, 83, 84, 104, 115, 186, 191, 193], "set": [0, 2, 3, 6, 8, 10, 11, 12, 13, 20, 23, 39, 42, 43, 44, 45, 46, 54, 56, 65, 69, 72, 74, 77, 79, 111, 112, 148, 152, 161, 178, 181, 185, 186, 187, 189, 193, 194], "re": [0, 7, 20, 42, 43, 45, 46, 105, 184, 187, 189, 192, 193, 194], "usabl": [0, 184], "function": [0, 9, 14, 20, 36, 37, 38, 39, 42, 43, 45, 46, 65, 71, 72, 73, 74, 75, 82, 83, 84, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 105, 107, 108, 111, 112, 113, 114, 115, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 162, 164, 167, 169, 172, 174, 180, 186, 187, 189, 191, 192, 193], "cost": [0, 2, 18, 187], "return": [0, 6, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 96, 97, 98, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 137, 138, 139, 140, 143, 144, 146, 147, 153, 156, 158, 160, 162, 164, 167, 169, 172, 174, 175, 176, 177, 178, 180, 184, 186, 187, 189, 191, 192, 193, 194], "process": [0, 10, 11, 13, 45, 46, 75, 184, 186, 187, 193, 194], "good": [0, 8, 193, 194], "runtim": [0, 20, 42, 43, 45, 46], "perform": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 61, 65, 71, 72, 73, 74, 85, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 130, 152, 156, 186, 187, 189, 192, 193], "introduct": [0, 188, 190, 193], "env": [0, 5, 6, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 98, 111, 159, 160, 161, 162, 164, 167, 169, 172, 174, 176, 177, 178, 180, 186, 187, 188, 189, 190], "modul": [0, 9, 20, 42, 43, 44, 45, 46, 56, 65, 69, 71, 72, 73, 74, 75, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 131, 133, 135, 156, 163, 165, 166, 168, 171, 174, 179, 180, 184, 186, 187, 188, 189, 191], "us": [0, 2, 6, 9, 10, 11, 12, 13, 17, 18, 20, 24, 25, 26, 30, 31, 32, 33, 42, 43, 44, 45, 46, 47, 54, 55, 62, 65, 69, 70, 71, 72, 74, 75, 79, 80, 85, 86, 87, 88, 94, 97, 100, 105, 110, 111, 112, 113, 114, 117, 120, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 145, 152, 153, 156, 157, 159, 160, 161, 162, 170, 174, 178, 179, 181, 184, 185, 188, 189, 190, 192, 193], "object": [0, 3, 10, 11, 12, 13, 20, 36, 37, 38, 39, 42, 43, 45, 46, 65, 71, 72, 75, 81, 82, 104, 105, 111, 112, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 160, 161, 173, 174, 178, 180, 184, 187, 191, 193], "state": [0, 10, 11, 12, 13, 20, 42, 43, 44, 45, 46, 53, 54, 56, 65, 69, 71, 72, 74, 75, 76, 82, 85, 94, 96, 97, 101, 105, 107, 108, 111, 113, 131, 137, 138, 139, 140, 178, 186, 187, 193], "contribut": 0, "instal": [0, 156, 181, 193], "tensordict": [0, 10, 11, 12, 13, 14, 17, 18, 20, 26, 27, 30, 32, 36, 37, 42, 43, 44, 45, 46, 53, 54, 56, 57, 58, 61, 62, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 83, 84, 85, 93, 96, 98, 104, 105, 106, 111, 112, 113, 115, 117, 118, 119, 120, 124, 125, 126, 127, 129, 130, 131, 132, 137, 138, 139, 140, 148, 155, 156, 162, 164, 167, 169, 172, 180, 184, 186, 187, 188, 189, 190, 191, 193], "improv": [0, 2], "structur": [0, 6], "dictionari": [0, 10, 11, 12, 13, 17, 20, 42, 43, 45, 46, 72, 105, 176, 177, 178, 184, 186, 193], "featur": [0, 10, 11, 12, 13, 23, 42, 43, 45, 46, 53, 86, 94, 95, 97, 99, 100, 105, 178, 186, 187, 191, 193], "tensor": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 43, 44, 45, 46, 53, 54, 56, 59, 62, 65, 68, 69, 70, 71, 72, 74, 75, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 117, 118, 121, 122, 125, 126, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 162, 164, 167, 169, 172, 184, 186, 187, 189, 191, 193, 194], "tensordictmodul": [0, 44, 51, 82, 83, 84, 85, 98, 104, 105, 112, 113, 119, 120, 124, 125, 129, 130, 131, 132, 137, 138, 139, 140, 152, 160, 161, 174, 180, 186, 187, 188, 189, 190], "exampl": [0, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 56, 57, 62, 65, 69, 70, 72, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 93, 96, 97, 104, 105, 106, 111, 112, 113, 115, 117, 118, 120, 148, 149, 150, 151, 154, 155, 157, 162, 164, 167, 169, 172, 174, 179, 184, 186, 187, 188, 189, 192, 193, 194], "do": [0, 3, 6, 10, 11, 12, 13, 43, 61, 80, 83, 99, 184, 186, 187, 189, 193, 194], "": [0, 5, 6, 20, 24, 25, 26, 31, 42, 43, 44, 45, 46, 56, 65, 69, 72, 74, 75, 86, 100, 105, 111, 113, 132, 153, 169, 172, 186, 187, 189, 192, 193, 194], "don": [0, 5, 6, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 42, 186, 187, 192, 193, 194], "t": [0, 5, 6, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 33, 42, 43, 45, 46, 65, 74, 75, 111, 120, 125, 156, 157, 178, 181, 186, 187, 189, 193, 194], "showcas": 0, "implement": [0, 2, 8, 9, 20, 39, 42, 43, 45, 46, 75, 109, 110, 114, 130, 132, 167, 169, 172, 184, 186, 187, 194], "deepmind": [0, 6, 8, 47, 48], "control": [0, 45, 46, 47, 48, 87, 88, 89, 90, 98, 108, 124, 129, 130, 133, 138, 141, 142, 145, 162, 184, 186], "devic": [0, 2, 6, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 36, 37, 42, 43, 44, 45, 46, 51, 56, 64, 65, 69, 70, 72, 74, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 99, 100, 104, 105, 106, 111, 112, 113, 115, 117, 118, 125, 157, 162, 164, 167, 169, 170, 172, 186, 187, 189, 191, 194], "run": [0, 4, 5, 6, 7, 10, 11, 13, 20, 42, 43, 44, 45, 46, 47, 48, 61, 62, 65, 71, 72, 73, 74, 75, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 152, 176, 177, 178, 181, 184, 186, 187, 189, 191, 192, 194], "parallel": [0, 7, 10, 11, 13, 175, 176, 177, 178, 187], "vecnorm": [0, 178, 180], "task": [0, 8, 45, 46, 47, 65, 74, 186, 187, 188, 190, 193, 194], "specif": [0, 4, 26, 27, 32, 43, 156, 180, 184, 188, 190, 191], "polici": [0, 2, 3, 10, 11, 12, 13, 42, 43, 44, 45, 46, 79, 80, 82, 83, 84, 100, 105, 111, 117, 118, 124, 125, 129, 130, 131, 132, 152, 157, 160, 161, 162, 164, 167, 174, 176, 177, 184, 187, 188, 190, 191, 193, 194], "multi": [0, 6, 8, 20, 21, 22, 42, 43, 45, 46, 96, 97, 186, 187, 188, 190, 194], "execut": [0, 6, 12, 42, 43, 44, 45, 46, 113, 159, 178, 184, 187, 190, 191, 193], "divers": [0, 45, 46], "rollout": [0, 10, 11, 12, 13, 42, 43, 44, 45, 46, 79, 85, 159, 186, 187, 194], "ddpg": [0, 87, 88, 89, 90, 125, 128, 133, 162, 163, 180, 188, 190, 194], "normal": [0, 30, 62, 75, 86, 97, 105, 110, 114, 152, 154, 178, 184, 187, 193], "observ": [0, 2, 28, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 87, 88, 89, 90, 93, 96, 101, 102, 104, 106, 107, 115, 117, 118, 138, 139, 140, 162, 164, 167, 169, 172, 174, 184, 187, 189, 191, 192, 193, 194], "build": [0, 6, 14, 20, 42, 43, 45, 46, 75, 85, 105, 156, 163, 165, 166, 168, 170, 171, 173, 184, 191, 192, 193], "evalu": [0, 20, 42, 43, 45, 46, 72, 91, 103, 114, 131, 160, 161, 187], "your": [0, 6, 7, 20, 42, 43, 45, 46, 75, 178, 181, 187, 192, 194], "record": [0, 20, 42, 43, 45, 46, 130, 174, 180, 184, 187, 194], "replai": [0, 12, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 39, 40, 45, 46, 125, 126, 131, 132, 153, 156, 170, 174, 180, 184, 187], "buffer": [0, 12, 20, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 56, 65, 69, 72, 74, 104, 105, 106, 111, 112, 113, 115, 117, 118, 125, 126, 131, 132, 138, 139, 140, 153, 156, 170, 174, 180, 184, 187, 191, 193], "hyperparamet": 0, "initi": [0, 6, 10, 11, 12, 13, 20, 42, 43, 45, 46, 62, 65, 69, 71, 72, 76, 85, 99, 100, 105, 111, 113, 129, 131, 132, 162, 164, 167, 169, 172, 178, 187, 193], "time": [0, 4, 6, 10, 11, 12, 13, 20, 42, 43, 45, 46, 54, 69, 75, 80, 94, 96, 131, 156, 187, 189, 191, 192, 193, 194], "train": [0, 10, 11, 12, 13, 20, 42, 43, 45, 46, 65, 72, 74, 87, 89, 124, 127, 129, 130, 131, 132, 156, 157, 174, 184, 192, 193], "experi": [0, 24, 33, 181], "result": [0, 6, 10, 11, 12, 13, 20, 42, 43, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 97, 118, 141, 142, 143, 144, 145, 146, 147, 157, 187, 192, 193, 194], "sampl": [0, 2, 8, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 42, 44, 85, 91, 103, 105, 107, 110, 111, 114, 124, 125, 126, 129, 130, 148, 153, 156, 158, 187, 191, 193, 194], "trajectori": [0, 10, 11, 12, 13, 14, 20, 42, 43, 45, 46, 71, 85, 130, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 187, 193, 194], "td": [0, 17, 47, 48, 49, 50, 54, 57, 62, 70, 72, 75, 80, 81, 82, 83, 84, 85, 93, 98, 104, 105, 106, 111, 112, 113, 115, 117, 118, 139, 140, 143, 144, 146, 147, 148, 155, 162, 164, 167, 169, 172, 191, 192, 193, 194], "lambda": [0, 10, 11, 12, 13, 140, 143, 144, 146, 147, 174, 192, 193, 194], "pixel": [0, 6, 17, 60, 66, 87, 101, 102, 164, 167, 169, 172, 186, 188, 190, 193, 194], "base": [0, 8, 10, 11, 12, 13, 35, 41, 44, 82, 156, 167, 169, 172, 184, 186, 188, 190, 193], "dqn": [0, 93, 106, 117, 126, 127, 128, 133, 164, 165, 180, 188, 190, 194], "problem": [0, 6, 12, 193], "deep": [0, 8, 53, 87, 88, 89, 90, 92, 128, 132, 133, 162, 186], "q": [0, 87, 88, 89, 90, 92, 95, 117, 118, 125, 126, 127, 128, 131, 132, 169, 172, 191], "network": [0, 20, 42, 43, 45, 46, 79, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 97, 100, 101, 102, 107, 108, 111, 125, 126, 127, 128, 131, 132, 133, 135, 162, 167, 173, 174, 184, 186, 189, 191, 193], "regular": [0, 13, 105, 111, 118, 127, 157, 184, 186, 191, 192, 193], "conclus": 0, "api": [0, 65, 74, 184, 193, 194], "packag": [0, 5, 180, 181, 193], "trainer": [0, 124, 127, 129, 130, 131, 132, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 186, 194], "_util": [0, 9, 180], "knowledg": 0, "work": [0, 6, 7, 20, 42, 43, 45, 46, 54, 65, 75, 86, 97, 156, 181, 187, 189, 191, 192, 193, 194], "habitat": [0, 181], "lab": [0, 47, 48, 181], "about": [0, 181, 186, 187, 193, 194], "mujoco": [0, 5, 181], "issu": [0, 4, 105, 111, 181, 194], "when": [0, 4, 7, 10, 11, 12, 13, 20, 24, 25, 26, 31, 36, 37, 38, 39, 42, 43, 45, 46, 56, 61, 65, 69, 71, 72, 74, 75, 79, 85, 97, 99, 105, 110, 111, 113, 121, 124, 129, 130, 137, 153, 178, 181, 184, 186, 187, 191, 192, 193], "render": [0, 7, 152, 181, 186, 187], "pro": [0, 6, 181], "tip": [0, 6, 181], "resourc": [0, 181], "index": [0, 6, 12, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 41, 153, 186, 189, 192, 194], "search": [0, 187], "page": [0, 6], "central": 2, "part": [2, 20, 42, 43, 45, 46, 105, 115, 148, 178, 186, 187, 191, 193], "off": [2, 105, 110, 111, 113, 114, 132, 152, 160, 184, 187, 193], "algorithm": [2, 8, 10, 11, 44, 130, 131, 148, 160, 167, 184, 186, 187, 192, 194], "wide": 2, "we": [2, 4, 6, 8, 20, 42, 43, 45, 46, 65, 75, 85, 96, 113, 181, 184, 186, 187, 189, 191, 192, 193, 194], "also": [2, 7, 20, 26, 42, 43, 45, 46, 72, 108, 113, 125, 126, 184, 186, 187, 189, 191, 192, 193], "storag": [2, 20, 24, 25, 26, 27, 30, 31, 32, 36, 37, 38, 42, 43, 45, 46, 153, 180, 184, 186, 187, 194], "choic": 2, "veri": [2, 186, 187, 193, 194], "influenti": 2, "latenc": 2, "especi": [2, 6, 7, 54], "distribut": [2, 3, 8, 24, 26, 62, 85, 91, 92, 93, 94, 103, 105, 107, 108, 109, 110, 114, 117, 124, 127, 129, 130, 180, 184, 186, 187, 191, 193, 194], "larger": 2, "volum": 2, "lazymemmapstorag": [2, 180, 186, 187], "advis": [2, 193], "share": [2, 36, 37, 38, 39, 45, 46, 75, 82, 83, 84, 111, 115, 117, 118, 178, 189, 191, 193, 194], "due": [2, 193], "lower": [2, 10, 11, 12, 13, 16, 21, 75, 107, 108, 192], "serialis": 2, "memmaptensor": 2, "well": [2, 10, 11, 13, 20, 39, 42, 43, 45, 46, 107, 108, 186, 187, 191, 192, 193, 194], "abil": 2, "specifi": [2, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 73, 85, 105, 111, 186, 191], "file": [2, 5, 6, 184, 190], "locat": [2, 6, 43, 62, 68, 110, 114, 192], "node": [2, 162, 164, 167, 169, 172], "failur": 2, "recoveri": 2, "follow": [2, 5, 6, 20, 42, 43, 44, 45, 46, 65, 86, 97, 123, 124, 129, 156, 169, 172, 184, 186, 187, 189, 191, 192, 193, 194], "mean": [2, 6, 12, 62, 75, 85, 91, 94, 96, 105, 109, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 186, 187, 193, 194], "over": [2, 10, 11, 12, 13, 20, 42, 43, 45, 46, 62, 113, 127, 158, 184, 186, 192, 193], "liststorag": [2, 24, 25, 26, 31, 153, 180], "were": [2, 6, 45, 46, 186], "found": [2, 5, 6, 20, 26, 42, 43, 45, 46, 75, 125, 130, 186, 187, 191], "from": [2, 8, 9, 10, 11, 12, 13, 14, 20, 23, 24, 25, 26, 27, 30, 31, 32, 36, 37, 38, 39, 42, 43, 44, 45, 46, 54, 62, 65, 69, 70, 71, 72, 74, 75, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 93, 97, 98, 99, 104, 105, 106, 110, 111, 112, 113, 114, 115, 117, 118, 124, 125, 126, 129, 130, 131, 132, 137, 148, 153, 156, 158, 159, 162, 164, 167, 169, 170, 172, 174, 175, 178, 181, 184, 186, 187, 189, 191, 192, 193, 194], "rough": 2, "benchmark": [2, 8], "http": [2, 5, 6, 24, 33, 53, 65, 87, 88, 89, 90, 94, 95, 100, 101, 102, 107, 108, 117, 127, 128, 130, 131, 132, 133, 138, 141, 142, 145, 162, 167, 169, 172, 194], "github": [2, 5, 6, 194], "com": [2, 5, 6, 194], "tree": 2, "main": [2, 105, 156, 186, 187, 189, 193], "type": [2, 20, 28, 42, 43, 44, 45, 46, 56, 65, 69, 72, 74, 75, 86, 97, 100, 105, 111, 119, 162, 164, 167, 169, 172, 176, 186, 187, 192, 193], "speed": [2, 7, 18, 186, 187], "up": [2, 7, 8, 18, 181, 186, 187, 191, 193], "1x": 2, "lazytensorstorag": [2, 180], "1": [2, 10, 11, 12, 13, 18, 19, 20, 23, 42, 43, 44, 45, 46, 52, 54, 56, 57, 61, 62, 65, 69, 70, 72, 74, 75, 82, 83, 84, 85, 86, 87, 88, 90, 95, 97, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 121, 124, 129, 130, 131, 132, 133, 137, 141, 142, 143, 144, 145, 146, 147, 148, 152, 154, 162, 164, 167, 169, 172, 174, 178, 181, 184, 186, 187, 189, 192, 193, 194], "83x": 2, "3": [2, 5, 6, 17, 18, 19, 20, 23, 42, 43, 45, 46, 53, 56, 59, 62, 65, 69, 70, 72, 74, 81, 82, 83, 84, 85, 86, 87, 88, 93, 95, 97, 104, 105, 111, 113, 115, 117, 120, 143, 144, 146, 147, 155, 164, 184, 186, 187, 189, 192, 193, 194], "44x": 2, "parent": [2, 28, 42, 54, 62, 65, 71, 82, 130, 187, 192, 193, 194], "class": [2, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 176, 177, 178, 184, 186, 187, 191, 192, 193], "subclass": [2, 42, 43, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 101, 102, 105, 106, 107, 108, 111, 112, 113, 121, 130, 186], "defin": [2, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 42, 43, 45, 46, 65, 71, 73, 74, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 175, 187, 191, 192, 193], "basic": [2, 44, 193], "properti": [2, 42, 43, 44, 45, 46, 72, 91, 99, 103, 109, 110, 114, 191, 192], "action": [2, 8, 18, 23, 28, 42, 43, 44, 45, 46, 57, 61, 72, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 97, 98, 104, 105, 106, 108, 109, 110, 115, 117, 118, 126, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 162, 164, 167, 169, 172, 174, 178, 184, 186, 187, 189, 191, 192, 193, 194], "shape": [2, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 42, 43, 45, 46, 54, 70, 91, 92, 97, 99, 103, 104, 105, 109, 111, 112, 113, 134, 148, 156, 174, 186, 187, 189, 191, 192, 193, 194], "dtype": [2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 33, 42, 43, 44, 45, 46, 51, 56, 57, 62, 65, 69, 70, 72, 74, 82, 83, 84, 85, 93, 99, 100, 104, 105, 106, 111, 112, 113, 115, 117, 118, 162, 164, 167, 169, 172, 186, 187, 189, 191, 192, 193, 194], "domain": [2, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 69, 105, 111, 113, 180, 191, 193, 194], "In": [3, 6, 9, 10, 11, 13, 20, 42, 43, 45, 46, 56, 65, 69, 71, 72, 74, 97, 105, 108, 110, 111, 113, 114, 123, 157, 176, 177, 178, 186, 187, 189, 192, 193], "case": [3, 6, 9, 10, 11, 12, 13, 17, 24, 26, 33, 42, 43, 45, 46, 72, 97, 105, 111, 113, 123, 148, 157, 176, 177, 178, 184, 186, 191, 192, 193], "raw": [3, 110, 114], "output": [3, 10, 11, 12, 13, 20, 24, 25, 26, 31, 42, 43, 44, 45, 46, 65, 71, 74, 82, 86, 87, 88, 92, 94, 96, 97, 105, 111, 112, 113, 117, 118, 124, 127, 129, 130, 131, 132, 148, 153, 186, 187, 189, 192, 193, 194], "must": [3, 6, 10, 11, 12, 13, 20, 36, 37, 38, 39, 42, 43, 45, 46, 69, 72, 86, 97, 105, 111, 117, 118, 141, 142, 143, 144, 145, 146, 147, 148, 152, 156, 157, 162, 164, 167, 169, 172, 186, 187, 189, 191, 192, 194], "treat": 3, "befor": [3, 6, 10, 11, 12, 13, 20, 42, 43, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 73, 74, 97, 99, 100, 105, 111, 113, 124, 127, 129, 130, 131, 132, 138, 139, 140, 186, 187, 191, 192, 193], "being": [3, 13, 20, 42, 43, 45, 46, 72, 79, 157, 176, 177, 178, 186, 187], "pass": [3, 12, 20, 26, 42, 43, 45, 46, 65, 71, 73, 74, 75, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 101, 102, 105, 107, 108, 111, 112, 113, 120, 121, 176, 177, 178, 186, 187, 189, 193], "anoth": [3, 42, 43, 45, 46, 71, 80, 97, 105, 124, 127, 129, 130, 131, 132, 186, 189, 191, 192, 193], "valu": [3, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 42, 43, 44, 45, 46, 52, 54, 61, 65, 67, 69, 70, 71, 72, 74, 75, 81, 82, 83, 84, 87, 88, 89, 90, 91, 93, 94, 95, 97, 99, 100, 103, 104, 105, 106, 109, 110, 111, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 156, 162, 167, 169, 172, 174, 184, 186, 187, 189, 191, 193, 194], "oper": [3, 6, 10, 11, 13, 20, 42, 43, 45, 46, 71, 82, 83, 84, 111, 112, 117, 124, 125, 126, 127, 129, 130, 137, 138, 139, 140, 156, 162, 164, 169, 172, 184, 186, 187, 189, 191, 193], "To": [3, 5, 6, 20, 42, 43, 45, 46, 75, 82, 83, 84, 156, 186, 187, 191, 193, 194], "reproduc": 3, "logic": 3, "torch": [3, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 33, 36, 37, 42, 43, 44, 45, 46, 54, 56, 57, 62, 65, 68, 69, 70, 72, 74, 75, 80, 81, 82, 83, 84, 85, 86, 91, 93, 94, 96, 97, 99, 100, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 125, 148, 155, 162, 164, 167, 169, 172, 174, 184, 186, 187, 189, 191, 192, 193, 194], "torchvis": [3, 193, 194], "torchrl": [4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 188, 189, 190, 191, 192], "against": [4, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 105, 111], "latest": [4, 194], "guarante": [4, 20, 36, 37, 38, 39, 42, 43, 45, 46, 75, 194], "compat": [4, 6, 9, 20, 39, 42, 43, 45, 46, 75, 119, 134, 187, 194], "wa": [4, 6, 42, 43, 45, 46, 72, 128, 133, 186, 187, 189, 194], "avail": [4, 5, 105, 117, 118, 176, 177, 186, 187, 193], "releas": [4, 6, 20, 42, 43, 45, 46, 72, 194], "howev": [4, 6, 20, 42, 43, 45, 46, 72, 186, 187, 192, 193], "project": [4, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 105, 111, 187, 193, 194], "mai": [4, 6, 10, 11, 12, 13, 20, 42, 43, 45, 46, 72, 75, 97, 184, 186, 193, 194], "willing": 4, "keep": [4, 6, 11, 65, 74, 75, 150, 156, 187, 192, 193, 194], "backward": [4, 20, 42, 43, 45, 46, 75, 186, 187, 192], "older": [4, 6], "If": [4, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 42, 43, 44, 45, 46, 54, 55, 61, 65, 71, 72, 74, 75, 86, 96, 97, 105, 111, 113, 120, 121, 123, 137, 146, 147, 153, 156, 157, 159, 167, 169, 172, 174, 178, 181, 186, 187, 189, 191, 192, 193, 194], "you": [4, 5, 6, 7, 20, 42, 43, 45, 46, 75, 181, 186, 187, 189, 191, 192, 193, 194], "feel": [4, 181, 194], "free": [4, 6, 130, 184, 194], "gladli": 4, "look": [4, 6, 20, 42, 43, 45, 46, 65, 105, 113, 187, 193, 194], "instruct": 5, "prepar": 5, "conda": [5, 6, 181], "assum": [5, 17, 23, 32, 43, 45, 46, 65, 69, 74, 96, 143, 144, 146, 147, 186, 187, 189], "let": [5, 6, 20, 42, 43, 45, 46, 152, 186, 187, 189, 191, 192, 193, 194], "creat": [5, 6, 10, 11, 13, 20, 31, 42, 43, 45, 46, 65, 71, 72, 75, 80, 86, 87, 88, 89, 90, 95, 97, 105, 111, 112, 113, 126, 127, 131, 159, 160, 161, 174, 176, 177, 186, 187, 191, 192, 193, 194], "n": [5, 6, 15, 18, 20, 23, 42, 43, 45, 46, 53, 105, 137, 184, 186, 187, 192, 193], "7": [5, 18, 23, 85, 86, 96, 97, 186, 187, 194], "cmake": 5, "14": [5, 9, 62, 187], "0": [5, 6, 9, 19, 20, 23, 24, 26, 33, 42, 43, 44, 45, 46, 52, 54, 56, 59, 61, 62, 65, 69, 70, 72, 74, 75, 80, 85, 86, 87, 88, 90, 94, 97, 99, 100, 105, 107, 108, 109, 110, 111, 112, 113, 114, 121, 124, 129, 130, 131, 132, 133, 137, 148, 154, 156, 174, 178, 184, 186, 187, 189, 190, 191, 192, 193, 194], "activ": [5, 6, 8, 86, 94, 97, 130, 194], "sim": 5, "bullet": 5, "physic": [5, 6, 184, 186], "headless": [5, 6], "mode": [5, 12, 20, 42, 43, 45, 46, 72, 75, 77, 79, 91, 103, 105, 109, 110, 114, 152, 186, 187, 193, 194], "usual": [5, 42, 43, 45, 46, 100, 167, 169, 172, 181, 184, 193], "necessari": [5, 10, 11, 12, 13, 113, 131, 138, 139, 140, 186], "cluster": [5, 6, 181], "withbullet": 5, "c": [5, 6, 162, 164, 167, 169, 172, 192], "forg": [5, 6], "aihabitat": 5, "nightli": 5, "y": [5, 6, 96, 120], "git": [5, 6], "facebookresearch": 5, "subdirectori": 5, "reduc": [5, 18], "verbos": 5, "export": 5, "magnum_log": 5, "quiet": 5, "habitat_sim_log": 5, "want": [5, 6, 113, 186, 187, 192, 193, 194], "simpli": [5, 186, 187, 193], "remov": [5, 20, 42, 43, 45, 46, 80, 186, 193], "command": [5, 6, 193], "see": [5, 6, 7, 8, 10, 11, 12, 13, 20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 76, 86, 97, 99, 110, 111, 114, 186, 187, 191, 192, 193], "more": [5, 7, 10, 11, 12, 13, 20, 24, 25, 26, 27, 30, 31, 32, 42, 43, 45, 46, 76, 97, 99, 111, 117, 127, 130, 138, 141, 142, 145, 153, 162, 181, 184, 186, 187, 189, 191, 192, 193], "detail": [5, 6, 20, 42, 43, 45, 46, 72, 117, 127, 130, 162, 181, 189, 191, 192], "readm": [5, 6], "md": [5, 6], "get": [5, 6, 39, 45, 46, 54, 57, 62, 70, 75, 81, 105, 112, 141, 142, 145, 186, 187, 191, 193, 194], "list": [5, 6, 8, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 38, 39, 42, 43, 44, 45, 46, 53, 65, 72, 74, 97, 105, 111, 113, 115, 136, 138, 139, 140, 152, 153, 176, 177, 186, 187, 189, 191, 192, 193, 194], "lib": [5, 6, 8, 47, 48, 49, 50, 62, 69, 75, 162, 164, 167, 169, 172, 174, 186, 187, 189, 193, 194], "import": [5, 6, 24, 26, 33, 43, 44, 45, 46, 62, 69, 75, 81, 82, 83, 84, 85, 93, 97, 104, 105, 106, 111, 112, 113, 115, 117, 118, 124, 150, 152, 162, 164, 167, 169, 172, 174, 186, 187, 189, 191, 192, 193, 194], "habitatenv": 5, "_has_habitat": 5, "assert": [5, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 43, 75, 80, 148, 155, 186, 187, 189, 191, 192, 193], "check": [5, 6, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 44, 45, 46, 54, 58, 105, 111, 119, 186, 187, 189, 193], "print": [5, 6, 17, 18, 20, 23, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 57, 62, 69, 70, 75, 80, 81, 82, 83, 84, 86, 93, 97, 105, 106, 111, 112, 113, 115, 117, 118, 120, 162, 164, 167, 169, 172, 174, 184, 186, 187, 189, 191, 192, 193, 194], "_env": [5, 193], "available_env": [5, 47, 48, 49, 50, 193], "startswith": 5, "importerror": [5, 6], "usr": [5, 6], "x86_64": [5, 6], "linux": [5, 6], "gnu": [5, 6], "libopengl": [5, 6], "so": [5, 6, 20, 42, 43, 45, 46, 75, 113, 186, 193], "undefin": [5, 6, 20, 42, 43, 45, 46, 72], "symbol": [5, 6], "_glapi_tls_curr": [5, 6], "solut": [5, 6, 8, 181, 184, 194], "debug": [5, 193], "link": [5, 6], "right": [5, 6, 96, 186, 187, 193], "replac": [5, 6, 20, 187], "path": [5, 6, 20, 36, 42, 43, 45, 46, 65, 74, 156, 184], "mujoco_env": [5, 6], "proper": [5, 6], "name": [5, 6, 9, 20, 42, 43, 45, 46, 47, 72, 124, 127, 129, 130, 131, 132, 151, 162, 164, 167, 169, 172, 184, 186, 187, 191, 193], "libglvnd": [5, 6], "glx": [5, 6], "cos7": [5, 6], "forc": [5, 6, 187], "reinstal": [5, 6], "xvfbwrapper": [5, 6], "config": [5, 6, 159, 160, 161, 162, 164, 167, 169, 170, 172, 175], "var": [5, 6, 20, 42, 43, 45, 46, 72], "ld_preload": [5, 6], "sysroot": [5, 6], "lib64": [5, 6], "libgldispatch": [5, 6], "its": [6, 10, 11, 12, 13, 20, 26, 42, 43, 44, 45, 46, 53, 71, 72, 75, 86, 93, 105, 111, 113, 124, 127, 129, 130, 131, 132, 156, 174, 184, 186, 187, 191, 193], "offici": 6, "repositori": 6, "stand": [6, 82, 83, 84, 189, 193], "joint": [6, 187], "dynam": 6, "contact": 6, "gener": [6, 12, 31, 35, 44, 62, 81, 91, 103, 104, 105, 115, 131, 138, 141, 142, 145, 156, 186, 187, 188, 189, 191, 192, 193, 194], "purpos": [6, 174, 192, 193], "engin": 6, "facilit": [6, 26, 64, 65, 74, 82, 83, 84, 186], "develop": [6, 194], "robot": [6, 65, 74], "biomechan": 6, "graphic": 6, "anim": 6, "machin": [6, 20], "other": [6, 20, 36, 37, 38, 39, 42, 43, 44, 45, 46, 75, 100, 105, 124, 127, 129, 130, 131, 132, 167, 169, 172, 176, 177, 184, 186, 187, 191, 193, 194], "area": 6, "which": [6, 9, 10, 11, 12, 13, 17, 18, 20, 23, 32, 42, 43, 45, 46, 53, 54, 61, 65, 71, 72, 82, 83, 84, 105, 110, 111, 113, 114, 124, 127, 129, 130, 131, 132, 134, 148, 162, 164, 167, 169, 172, 184, 186, 187, 189, 191, 192, 193], "demand": [6, 193], "fast": [6, 8, 131, 186, 187], "accur": [6, 186], "simul": [6, 51, 85, 186], "articul": 6, "interact": [6, 12, 79, 105, 193], "recent": [6, 193], "acquir": [6, 186], "sinc": [6, 20, 42, 43, 44, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 186, 187, 193, 194], "access": [6, 20, 42, 43, 45, 46, 65, 178, 181, 192], "whomev": 6, "without": [6, 8, 20, 42, 43, 45, 46, 80, 83, 131, 137, 174, 181, 186, 187, 193], "licenc": 6, "incorpor": [6, 186], "make": [6, 20, 39, 42, 43, 45, 46, 50, 62, 65, 80, 99, 105, 130, 161, 178, 186, 187, 189, 191, 192, 193, 194], "relianc": 6, "obsolet": 6, "seri": [6, 23, 40, 41, 46, 61, 71, 193], "legaci": 6, "document": [6, 20, 42, 43, 45, 46, 72, 194], "offer": [6, 193], "some": [6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 65, 87, 105, 113, 148, 158, 184, 186, 187, 191, 193, 194], "great": [6, 7, 192, 194], "capabl": [6, 184, 186, 189, 193], "one": [6, 9, 10, 11, 12, 13, 19, 23, 24, 25, 26, 27, 30, 31, 32, 39, 40, 41, 42, 43, 45, 46, 61, 65, 71, 72, 73, 74, 75, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 108, 111, 112, 113, 117, 118, 121, 123, 124, 125, 126, 129, 130, 131, 150, 152, 153, 156, 159, 167, 169, 172, 178, 181, 184, 186, 187, 189, 191, 192, 193], "backend": [6, 184, 186], "glfw": 6, "osmesa": 6, "egl": 6, "Of": [6, 181, 193], "hand": [6, 186], "gpu": [6, 7, 20, 42, 43, 45, 46, 193], "therefor": [6, 130, 192, 193], "our": [6, 186, 187, 189, 191, 192, 194], "advic": [6, 193], "sudo": [6, 181], "enabl": [6, 152], "apt": 6, "libglfw3": 6, "libglew2": 6, "libgl1": 6, "mesa": 6, "libosmesa6": 6, "via": [6, 45, 71, 74, 125, 184, 186, 193], "awar": [6, 36, 37, 38, 39], "fact": [6, 187, 193], "indent": 6, "workflow": [6, 82, 83, 84], "thing": [6, 187, 193], "expect": [6, 20, 28, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 73, 74, 105, 111, 113, 124, 129, 130, 159, 181, 184, 186, 193], "glew": 6, "mesalib": 6, "anaconda": 6, "libgl": 6, "cos6": 6, "menpo": 6, "glfw3": 6, "both": [6, 20, 42, 43, 45, 46, 72, 82, 83, 84, 86, 97, 152, 186, 191, 193], "tell": 6, "done": [6, 17, 20, 42, 43, 44, 45, 46, 62, 69, 75, 80, 85, 125, 126, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 162, 164, 167, 169, 172, 186, 187, 189, 192, 193, 194], "appropri": [6, 10, 11, 12, 13, 40, 41, 175, 178], "variabl": [6, 18, 23, 82, 83, 84, 131, 184, 191], "mujoco_gl": 6, "pyopengl_platform": 6, "deactiv": 6, "pre": [6, 20, 37, 42, 43, 45, 46, 65, 74, 193], "built": [6, 170, 174, 175, 178, 193], "binari": [6, 15, 23, 52, 117, 118], "need": [6, 20, 39, 42, 43, 45, 46, 65, 71, 72, 73, 74, 75, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 101, 102, 105, 107, 108, 111, 112, 113, 121, 123, 131, 137, 156, 178, 186, 191, 192, 193, 194], "These": [6, 193], "9": [6, 20, 75, 184, 187, 192], "For": [6, 8, 10, 11, 12, 13, 20, 42, 43, 45, 46, 99, 117, 127, 130, 152, 162, 184, 186, 191, 193], "instanc": [6, 7, 10, 11, 12, 13, 20, 28, 42, 43, 44, 45, 46, 48, 53, 65, 69, 71, 73, 74, 75, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 152, 159, 160, 161, 162, 164, 167, 169, 172, 174, 176, 177, 184, 187, 191, 192, 193], "instead": [6, 18, 20, 42, 43, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 178, 186, 187, 191, 193], "becaus": [6, 71, 90, 96, 105, 111, 186, 187, 189, 192, 193], "requir": [6, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 42, 43, 45, 46, 56, 65, 69, 72, 74, 97, 111, 113, 124, 127, 129, 130, 131, 132, 184, 186, 187, 191, 193], "refer": [6, 20, 42, 43, 45, 46, 72, 75, 85, 94, 101, 102, 107, 108, 117, 127, 130, 138, 141, 142, 145, 162], "setup": 6, "should": [6, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 39, 42, 43, 44, 45, 46, 62, 65, 71, 72, 73, 74, 75, 80, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 128, 129, 130, 131, 133, 137, 152, 153, 156, 174, 176, 177, 178, 184, 186, 187, 189, 191, 192, 193, 194], "like": [6, 20, 42, 43, 45, 46, 70, 131, 186, 192, 193], "mkdir": 6, "cd": 6, "here": [6, 8, 186, 187, 189, 191, 192, 193, 194], "tag": [6, 178], "earlier": [6, 10, 11, 12, 13, 186], "roboti": 6, "u": [6, 186, 191, 193, 194], "download": [6, 65, 74, 186, 187, 188, 189, 191, 192, 193, 194], "html": 6, "wget": 6, "mujoco210": 6, "tar": 6, "gz": 6, "xf": 6, "now": [6, 186, 189, 191, 192, 193], "charg": 6, "obtain": [6, 43, 85, 186, 187], "mjkei": 6, "txt": 6, "mjlib_path": 6, "home": 6, "bin": 6, "libmujoco210": 6, "ld_library_path": 6, "mujoco_py_mujoco_path": 6, "kei": [6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 32, 42, 43, 45, 46, 53, 54, 62, 65, 69, 71, 72, 74, 75, 80, 85, 98, 105, 111, 112, 113, 115, 123, 124, 125, 126, 127, 129, 130, 131, 132, 137, 138, 139, 140, 152, 155, 156, 159, 167, 169, 172, 184, 186, 187, 189, 191, 193, 194], "too": [6, 110, 114, 124, 127, 129, 130, 131, 132, 186, 187, 193], "mujoco_py_mjkey_path": 6, "reload": 6, "recommend": [6, 192], "hard": [6, 128, 187, 193], "chang": [6, 20, 36, 37, 38, 39, 42, 43, 45, 46, 72, 75, 186, 192, 193], "later": [6, 90, 105, 186, 187], "known": [6, 7, 186], "try": [6, 120, 187, 192, 193, 194], "nativ": [6, 8, 42, 43, 45, 46, 53, 105, 111, 113, 187], "below": [6, 10, 11, 12, 13, 20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 86, 97, 110, 111, 114, 179, 188], "usag": [6, 132], "local": [6, 12, 20, 30, 42, 43, 45, 46, 72], "cuda": [6, 20, 42, 43, 45, 46, 56, 64, 65, 69, 72, 74, 111, 149, 186, 187, 192, 193], "modifi": [6, 20, 42, 43, 45, 46, 56, 65, 69, 71, 72, 74, 111, 158, 167, 169, 172, 186, 191], "nvidia": 6, "driver": 6, "those": [6, 45, 46, 62, 105, 113, 157, 176, 177, 186, 187, 193], "hack": 6, "where": [6, 10, 11, 12, 13, 24, 25, 26, 27, 30, 31, 32, 36, 37, 42, 43, 44, 45, 46, 65, 71, 74, 105, 111, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 137, 153, 156, 157, 184, 186, 187, 189, 191, 193], "line": [6, 20, 42, 43, 45, 46], "adatp": 6, "script": [6, 162, 164, 167, 169, 172, 174, 178, 184, 186, 187, 189, 191, 192, 193, 194], "go": [6, 191, 193], "unnot": 6, "until": 6, "actual": [6, 10, 11, 13, 42, 43, 45, 46, 158, 186, 187], "complet": [6, 8, 43, 181, 187, 189], "mujoco_pi": 6, "trigger": 6, "pipelin": 6, "abov": [6, 20, 42, 43, 45, 46, 110, 114, 123, 184, 186, 187, 193], "caus": 6, "give": [6, 44, 181, 186, 187, 194], "troubleshoot": 6, "each": [6, 10, 11, 12, 13, 14, 19, 20, 24, 26, 42, 43, 45, 46, 69, 75, 113, 117, 118, 143, 144, 146, 147, 152, 176, 177, 186, 187, 191, 193], "gl": 6, "h": [6, 55, 66, 70], "eglshim": 6, "4": [6, 18, 23, 44, 47, 48, 49, 53, 75, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 104, 105, 106, 111, 112, 113, 115, 117, 118, 120, 186, 187, 192, 193, 194], "10": [6, 17, 44, 70, 85, 112, 131, 132, 148, 184, 186, 187, 191, 192, 193, 194], "fatal": 6, "error": [6, 9, 20, 42, 43, 45, 46, 120, 186, 187, 192, 193], "No": 6, "directori": [6, 36, 184], "includ": [6, 8, 20, 36, 37, 38, 39, 42, 43, 44, 45, 46, 72, 75, 158, 184, 186, 187, 192, 193], "sure": [6, 39, 80, 178, 186, 191, 192, 193, 194], "glu": 6, "38": [6, 187], "disappear": [6, 189], "onc": [6, 10, 11, 12, 13, 20, 42, 43, 45, 46, 72, 112, 184, 186, 187, 193], "filenotfounderror": 6, "errno": 6, "patchelf": 6, "_solution_": 6, "saniti": 6, "been": [6, 10, 11, 13, 42, 43, 45, 46, 71, 105, 111, 113, 187, 189, 193], "cymj": 6, "linuxgpuextensionbuild": 6, "filenam": 6, "runtimeerror": [6, 20, 42, 43, 45, 46, 72, 186, 192, 193], "stack": [6, 26, 45, 46, 75, 80, 113, 148, 187, 189, 192, 194], "job": [6, 192], "schedul": [6, 152], "slurm": 6, "mjrendercontext": 6, "pyx": 6, "46": 6, "__init__": [6, 44, 85, 115, 117, 120, 184, 191, 193], "114": 6, "_setup_opengl_context": 6, "opengl_context": 6, "130": 6, "offscreenopenglcontext": 6, "fail": 6, "opengl": 6, "global": [6, 105, 184, 186, 191], "while": [6, 20, 42, 43, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 129, 130, 186, 187, 194], "cuda_visible_devic": 6, "id": [6, 14, 131, 169], "around": [6, 13, 26, 27, 32, 44, 105, 111, 138, 191, 193], "slurm_step_gpu": 6, "enviro": 6, "imag": [6, 47, 55, 65, 70, 74, 97, 187, 192, 193], "black": 6, "call": [6, 9, 10, 11, 12, 13, 20, 24, 25, 26, 30, 31, 36, 37, 38, 39, 42, 43, 45, 46, 53, 56, 57, 64, 65, 69, 71, 72, 73, 74, 75, 79, 85, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 101, 102, 105, 107, 108, 111, 112, 113, 121, 137, 152, 153, 184, 186, 187, 191, 192, 193], "read": [6, 10, 11, 12, 13, 36, 37, 38, 39, 43, 45, 46, 71, 82, 83, 84, 103, 105, 111, 113, 124, 127, 129, 130, 131, 132, 156, 167, 169, 172, 186, 187, 189, 191, 193], "miss": [6, 9, 17, 20, 42, 43, 45, 46, 72, 113, 181], "onscreen": 6, "101": 6, "displai": [6, 156, 184, 187], "correctli": [6, 20, 42, 43, 45, 46], "cpu": [7, 17, 20, 28, 36, 37, 42, 43, 44, 45, 46, 51, 56, 65, 69, 72, 74, 82, 83, 84, 85, 93, 100, 104, 105, 106, 111, 113, 115, 117, 118, 162, 164, 167, 169, 172, 186, 187, 189, 192, 193, 194], "intens": 7, "even": [7, 11, 36, 37, 38, 39, 186, 192, 193], "ask": [7, 193], "core": [7, 162, 164, 167, 169, 172, 184, 194], "than": [7, 10, 11, 12, 13, 90, 97, 111, 157, 181, 186, 187, 191, 192, 193, 194], "number": [7, 10, 11, 12, 13, 16, 18, 20, 21, 23, 24, 25, 26, 31, 33, 36, 37, 38, 42, 43, 44, 45, 46, 53, 61, 62, 68, 75, 85, 86, 91, 92, 94, 95, 97, 101, 102, 105, 107, 108, 109, 110, 111, 114, 123, 131, 132, 148, 150, 152, 153, 156, 157, 158, 159, 176, 177, 178, 186, 187, 193], "twice": [7, 132], "much": [7, 24, 26, 33, 129, 130, 192, 193], "true": [7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 42, 43, 44, 45, 46, 47, 48, 54, 56, 61, 62, 65, 69, 70, 72, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 97, 99, 100, 105, 110, 111, 113, 114, 120, 124, 129, 130, 131, 132, 134, 138, 139, 140, 143, 144, 146, 147, 150, 151, 152, 156, 164, 178, 184, 186, 187, 189, 191, 192, 193, 194], "thei": [7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 57, 58, 71, 72, 96, 124, 127, 129, 130, 131, 132, 156, 184, 186, 187, 189, 191, 192, 193], "spin": [8, 193], "hug": 8, "face": [8, 187, 193], "syllabu": 8, "lectur": 8, "best": [8, 187], "awesom": [8, 192], "curat": 8, "discuss": 8, "reddit": 8, "maintain": 8, "still": [8, 129, 186, 187, 189, 193], "reagent": 8, "product": [8, 176, 177], "orient": [8, 193], "stabl": [8, 186], "baselines3": 8, "tf": 8, "agent": [8, 30, 100], "bandit": 8, "tensorflow": 8, "kera": 8, "acm": 8, "framework": [8, 44, 193, 194], "dopamin": 8, "prototyp": [8, 180], "salina": 8, "A": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 65, 69, 71, 72, 75, 76, 80, 85, 86, 97, 100, 105, 111, 113, 117, 121, 124, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 150, 153, 156, 157, 164, 167, 169, 172, 174, 187, 192, 193], "flexibl": [8, 184, 191, 193], "simpl": [8, 20, 23, 42, 43, 45, 46, 87, 105, 186, 187, 192, 193], "sequenti": [8, 20, 42, 43, 45, 46, 113, 191, 192, 193], "tianshou": 8, "eleg": 8, "rlpyt": 8, "rllib": 8, "industri": [8, 194], "grade": 8, "factori": 8, "throughput": 8, "asynchron": [8, 11, 20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111, 176], "cherri": 8, "jaxrl": 8, "continu": [8, 16, 21, 22, 29, 87, 88, 89, 90, 105, 113, 133, 138, 141, 142, 145, 162, 186, 193, 194], "space": [8, 23, 28, 102, 105, 111, 113, 117, 118, 186, 193, 194], "mbrl": [8, 44], "rlmeta": 8, "light": 8, "weight": [8, 10, 11, 12, 13, 20, 24, 26, 42, 43, 45, 46, 56, 65, 69, 72, 74, 100, 111, 124, 157, 173, 184, 186, 187, 189, 194], "elegantrl": 8, "cloud": 8, "mtrl": 8, "baselin": [8, 187], "module_nam": 9, "str": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 32, 36, 42, 43, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 67, 68, 70, 71, 72, 74, 75, 77, 79, 81, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 98, 99, 100, 104, 105, 111, 113, 115, 117, 118, 119, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 137, 139, 140, 151, 152, 155, 159, 162, 167, 169, 170, 172, 178, 186], "from_vers": 9, "none": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 103, 104, 105, 111, 113, 115, 117, 118, 119, 130, 137, 138, 139, 140, 143, 144, 146, 147, 152, 153, 156, 159, 160, 161, 162, 164, 167, 169, 172, 174, 176, 177, 178, 184, 186, 187, 191, 192, 193, 194], "to_vers": 9, "version": [9, 20, 42, 43, 45, 46, 140, 186, 187, 193], "decor": 9, "fit": [9, 62, 184], "lead": [9, 110, 114, 194], "explicit": [9, 96, 186], "intersect": 9, "rang": [9, 18, 75, 80, 129, 184, 186, 187, 191, 192, 194], "paramet": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 169, 172, 174, 175, 176, 177, 178, 186, 187, 191, 194], "longer": [9, 187], "13": [9, 187, 191], "def": [9, 20, 42, 43, 44, 45, 46, 85, 112, 115, 117, 120, 184, 186, 187, 189, 191, 192, 193, 194], "fun": [9, 191, 192], "self": [9, 20, 26, 42, 43, 44, 45, 46, 56, 65, 69, 72, 74, 85, 111, 112, 115, 117, 120, 184, 191, 192, 194], "x": [9, 14, 20, 70, 86, 92, 95, 96, 97, 117, 120, 121, 123, 141, 142, 143, 144, 145, 146, 147, 156, 186, 187, 191, 194], "indic": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 43, 44, 45, 46, 54, 69, 86, 97, 121, 153, 159, 178, 181, 184, 186, 191, 192, 193], "doesn": 9, "create_env_fn": [10, 11, 12, 13, 45, 46, 186, 194], "sequenc": [10, 11, 12, 13, 17, 19, 24, 25, 27, 31, 40, 41, 52, 53, 54, 55, 57, 59, 60, 62, 63, 66, 67, 68, 70, 71, 75, 81, 86, 91, 97, 103, 104, 105, 113, 115, 153, 155, 156, 167, 169, 172, 187, 189, 191, 193], "callabl": [10, 11, 12, 13, 20, 24, 25, 26, 27, 31, 42, 43, 44, 45, 46, 123, 130, 153, 160, 161, 176, 177, 178], "envbas": [10, 11, 12, 13, 43, 45, 46, 61, 71, 72, 75, 85, 98, 152, 159, 160, 161, 162, 164, 167, 169, 172, 174, 176, 177, 178, 180], "union": [10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 32, 33, 42, 43, 45, 46, 51, 56, 62, 65, 68, 72, 74, 75, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 103, 104, 105, 109, 110, 111, 113, 114, 119, 120, 122, 126, 127, 128, 131, 132, 133, 138, 139, 140, 160, 161, 162, 167, 169, 170, 172, 174, 175, 176, 177, 178], "probabilistictensordictmodul": [10, 11, 12, 13, 113, 124, 129, 130, 160, 161, 180, 194], "tensordictbas": [10, 11, 12, 13, 14, 17, 20, 26, 30, 32, 42, 43, 45, 46, 53, 56, 61, 69, 71, 73, 75, 76, 80, 85, 98, 105, 111, 113, 124, 125, 126, 127, 129, 130, 131, 132, 137, 138, 139, 140, 156], "total_fram": [10, 11, 12, 13, 156, 158, 174, 184, 186, 187, 194], "int": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 53, 54, 55, 56, 59, 61, 62, 65, 66, 72, 73, 74, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 117, 118, 124, 125, 129, 130, 131, 132, 148, 149, 150, 152, 153, 156, 157, 162, 167, 169, 170, 172, 176, 177, 178], "create_env_kwarg": [10, 11, 12, 13, 45, 46, 186], "dict": [10, 11, 12, 13, 17, 18, 20, 31, 42, 43, 45, 46, 72, 75, 86, 87, 88, 89, 90, 95, 96, 97, 105, 152, 160, 161, 162, 169, 172, 176, 177, 178, 193], "max_frames_per_traj": [10, 11, 12, 13, 158, 186, 194], "frames_per_batch": [10, 11, 12, 13, 158, 186, 187, 194], "200": [10, 11, 12, 13, 20, 42, 43, 45, 46, 87, 88, 94, 107, 108, 186], "init_random_fram": [10, 11, 12, 13, 158, 186, 187], "reset_at_each_it": [10, 11, 12, 13, 186], "bool": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 44, 45, 46, 47, 48, 54, 61, 62, 65, 69, 70, 72, 74, 75, 80, 85, 86, 87, 88, 97, 99, 100, 105, 110, 111, 113, 114, 119, 124, 125, 126, 127, 129, 130, 131, 132, 134, 138, 139, 140, 143, 144, 146, 147, 150, 151, 152, 153, 154, 156, 162, 164, 167, 169, 172, 178, 187, 189, 193, 194], "fals": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 44, 45, 46, 47, 50, 54, 56, 61, 62, 65, 69, 70, 72, 74, 75, 82, 83, 84, 85, 86, 87, 93, 97, 104, 105, 106, 111, 112, 113, 115, 117, 118, 119, 120, 125, 126, 127, 131, 132, 134, 138, 139, 140, 143, 144, 146, 147, 150, 151, 152, 153, 154, 156, 162, 164, 167, 169, 172, 178, 184, 186, 187, 189, 191, 192, 193, 194], "postproc": [10, 11, 12, 13, 186, 187, 194], "split_traj": [10, 11, 12, 13, 186], "seed": [10, 11, 12, 13, 42, 43, 44, 45, 46, 47, 72, 156, 186], "pin_memori": [10, 12, 13, 24, 25, 26, 27, 31, 45, 46, 64, 153, 186, 194], "passing_devic": [10, 11, 12, 13, 186, 187, 194], "update_at_each_batch": [10, 11, 13, 186], "init_with_lag": [10, 11, 12, 13], "exploration_mod": [10, 12, 105, 152, 180, 186, 187, 191], "random": [10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 28, 29, 34, 42, 43, 44, 45, 46, 61, 62, 69, 79, 105, 111, 112, 131, 152, 159, 186, 187, 193, 194], "reset_when_don": [10, 12], "given": [10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 44, 45, 46, 56, 62, 65, 69, 72, 74, 80, 85, 94, 105, 111, 113, 117, 118, 123, 125, 126, 137, 138, 139, 140, 149, 152, 174, 184, 186, 187, 191, 193], "datacollector": [10, 11, 12, 13, 105], "separ": [10, 11, 13, 14, 125, 131, 132, 186, 193], "synchron": [10, 176, 177], "collect": [10, 11, 12, 13, 20, 24, 25, 26, 27, 30, 31, 32, 65, 74, 125, 131, 132, 148, 153, 156, 157, 158, 159, 174, 184, 186, 187, 192, 193, 194], "start": [10, 20, 80, 186, 187, 193], "next": [10, 11, 20, 24, 25, 26, 31, 42, 43, 45, 46, 108, 131, 137, 153, 186, 187, 193], "item": [10, 26, 58, 125, 126, 148, 184, 186, 187, 192], "queri": [10, 11, 12, 13, 20, 42, 43, 45, 46, 65, 71, 75, 113, 191, 194], "step": [10, 11, 12, 13, 20, 42, 43, 44, 45, 46, 61, 62, 72, 80, 85, 94, 96, 98, 105, 130, 137, 148, 152, 156, 184, 186, 187, 189, 192, 194], "comput": [10, 12, 18, 20, 24, 26, 42, 43, 45, 46, 62, 65, 71, 72, 73, 74, 82, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 110, 111, 112, 113, 114, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 159, 186, 187, 189, 191], "between": [10, 11, 12, 13, 20, 42, 43, 45, 46, 61, 67, 70, 72, 86, 97, 105, 129, 134, 152, 156, 186, 187, 191, 192, 193], "recept": 10, "batch": [10, 11, 12, 13, 14, 18, 20, 23, 24, 25, 26, 27, 30, 31, 32, 42, 43, 44, 45, 46, 72, 91, 92, 96, 99, 103, 105, 109, 111, 124, 127, 129, 130, 131, 132, 141, 142, 143, 144, 145, 146, 147, 148, 153, 155, 156, 157, 176, 177, 178, 184, 186, 187, 189, 193, 194], "safe": [10, 11, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 105, 111, 119, 186, 194], "onlin": [10, 13, 130, 148, 178], "accept": [10, 11, 12, 13, 20, 42, 43, 44, 45, 46, 56, 65, 69, 72, 74, 111, 184, 193], "input": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 42, 43, 44, 45, 46, 54, 56, 57, 65, 71, 73, 74, 80, 86, 87, 88, 89, 90, 96, 97, 99, 100, 105, 107, 108, 111, 112, 113, 123, 124, 127, 129, 130, 131, 132, 137, 141, 142, 143, 144, 145, 146, 147, 158, 174, 184, 187, 192, 193, 194], "bound": [10, 11, 12, 13, 16, 17, 20, 21, 42, 43, 45, 46, 75, 105, 107, 108, 111, 193], "total": [10, 11, 12, 13, 43, 124, 129, 130, 148, 150, 152, 156, 158, 159, 186, 187, 189, 190, 191, 192, 193, 194], "frame": [10, 11, 12, 13, 20, 43, 53, 150, 152, 156, 158, 159, 186, 187, 193, 194], "greater": [10, 11, 13, 186, 187, 194], "close": [10, 11, 12, 13, 43, 124, 129, 130, 186, 194], "signal": [10, 11, 13, 186], "sent": [10, 11, 13, 36, 37, 45, 46, 75, 187, 192], "worker": [10, 11, 12, 13, 45, 46, 75, 176, 177, 178, 193, 194], "server": [10, 11, 13], "argument": [10, 11, 12, 13, 20, 42, 43, 45, 46, 56, 65, 69, 71, 72, 74, 86, 97, 99, 105, 111, 115, 150, 158, 162, 164, 167, 169, 172, 174, 175, 178, 186, 187, 191, 193], "maximum": [10, 11, 12, 13, 16, 20, 21, 24, 25, 26, 36, 37, 38, 42, 43, 45, 46, 67, 104, 109, 110, 114, 132, 153, 186, 187, 193, 194], "per": [10, 11, 12, 13, 45, 94, 156, 176, 177, 186, 187, 194], "note": [10, 11, 12, 13, 20, 42, 43, 45, 46, 75, 105, 186, 187, 189, 191, 192, 193], "span": [10, 11, 12, 13], "multipl": [10, 11, 12, 13, 18, 45, 46, 54, 71, 75, 96, 99, 100, 111, 131, 169, 178, 184, 187, 192, 194], "unless": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 191], "reach": [10, 11, 12, 13, 42, 43, 44, 45, 46, 193, 194], "n_steps_max": [10, 11, 12, 13, 20, 186], "reset": [10, 11, 12, 13, 42, 43, 44, 45, 46, 53, 56, 61, 65, 69, 71, 74, 75, 76, 80, 116, 162, 164, 167, 169, 172, 186, 187, 189, 194], "wrap": [10, 11, 12, 13, 20, 42, 43, 45, 46, 82, 83, 84, 112, 186, 187, 191, 193], "togeth": [10, 11, 12, 13, 82, 83, 84, 191], "track": [10, 11, 12, 13, 75, 150, 186, 187, 192], "independ": [10, 11, 12, 13, 71, 132, 184, 186, 194], "neg": [10, 11, 12, 13, 24, 26, 33, 186], "allow": [10, 11, 12, 13, 20, 23, 42, 43, 45, 46, 80, 97, 134, 184, 186, 191, 192, 193], "ignor": [10, 11, 12, 13, 20, 42, 43, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 191, 192], "default": [10, 11, 12, 13, 18, 20, 23, 26, 31, 36, 37, 42, 43, 45, 46, 47, 53, 54, 59, 61, 62, 65, 69, 70, 72, 74, 75, 80, 81, 85, 86, 87, 88, 89, 90, 91, 94, 95, 97, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 146, 147, 148, 150, 151, 152, 154, 156, 162, 167, 169, 172, 174, 178, 184, 186, 187, 191, 192, 193, 194], "length": [10, 11, 12, 13, 15, 45, 46, 85, 86, 87, 89, 92, 97, 111, 148, 186, 187, 192, 193], "equival": [10, 11, 12, 13, 20, 42, 43, 45, 46, 72, 193, 194], "configur": [10, 11, 12, 13, 130, 167, 169, 172], "mainli": [10, 11, 12, 13], "offlin": [10, 11, 12, 13, 184, 194], "whether": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 42, 43, 44, 45, 46, 72, 86, 97, 115, 125, 126, 127, 131, 132, 140, 153, 187, 193], "postprocessor": [10, 11, 13], "format": [10, 11, 12, 13, 20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111, 192, 193], "boolean": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 44, 141, 142, 143, 144, 145, 146, 147, 184], "split": [10, 11, 12, 13, 124, 127, 129, 130, 131, 132, 184, 194], "accord": [10, 11, 12, 13, 24, 26, 62, 68, 99, 107, 110, 114, 191, 192], "split_trajectori": [10, 11, 12, 13, 180], "inform": [10, 11, 12, 13, 20, 42, 43, 45, 46, 86, 97, 184, 187], "place": [10, 11, 12, 13, 17, 20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 75, 111, 157, 158, 187, 191], "differ": [10, 11, 12, 13, 20, 42, 43, 45, 46, 72, 97, 117, 118, 130, 134, 139, 152, 156, 157, 176, 177, 184, 186, 187, 189, 192, 193], "update_policy_weights_": [10, 11, 12, 13, 186, 187, 194], "method": [10, 11, 12, 13, 20, 26, 30, 36, 37, 38, 39, 42, 43, 45, 46, 53, 56, 62, 65, 66, 69, 72, 74, 82, 83, 84, 85, 96, 105, 111, 112, 113, 119, 175, 184, 185, 186, 191, 192, 193], "dure": [10, 11, 12, 13, 42, 43, 45, 46, 72, 152, 156, 186, 193], "loop": [10, 11, 12, 13, 43, 80, 156, 184, 186, 189, 192], "accommod": [10, 11, 12, 13], "lag": [10, 11, 12, 13], "variou": [10, 11, 12, 13, 124, 127, 129, 130, 131, 132, 176, 177, 186, 187, 193], "kept": [10, 11, 12, 13, 45, 46, 71, 80, 110, 114], "origin": [10, 11, 12, 13, 65, 72, 74, 105, 111, 113, 128, 130, 169, 172, 189, 192, 193], "store": [10, 11, 12, 13, 17, 20, 26, 32, 36, 37, 38, 42, 43, 45, 46, 75, 85, 96, 162, 164, 167, 169, 172, 184, 186, 187, 192, 193], "long": [10, 11, 12, 13, 18, 23, 187, 192], "updat": [10, 11, 12, 13, 20, 24, 26, 33, 42, 43, 44, 45, 46, 72, 75, 85, 105, 111, 128, 130, 133, 138, 139, 140, 152, 156, 157, 160, 161, 173, 174, 184, 186, 187, 191, 193, 194], "everi": [10, 11, 13, 20, 23, 39, 42, 43, 45, 46, 65, 71, 73, 74, 75, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 156, 184, 186, 187, 192], "truncat": [10, 11, 12, 13, 114, 193], "help": [10, 11, 12, 13, 20, 42, 43, 45, 46, 181, 186], "desynchron": [10, 11, 12, 13], "match": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 86, 91, 97, 105, 109, 111, 129, 131, 132, 157, 187, 189, 191, 192, 193, 194], "all": [10, 11, 12, 13, 20, 42, 43, 44, 45, 46, 56, 58, 62, 65, 69, 71, 72, 73, 74, 75, 78, 79, 80, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 156, 158, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 192, 193, 194], "load_state_dict": [10, 11, 12, 13, 20, 42, 43, 45, 46, 72, 75, 184], "state_dict": [10, 11, 12, 13, 20, 42, 43, 45, 46, 72, 75, 184, 193], "ordereddict": [10, 11, 12, 13, 20, 42, 43, 45, 46, 72, 75], "load": [10, 11, 12, 13, 24, 25, 26, 31, 48, 153, 184, 187], "form": [10, 11, 13, 20, 24, 25, 26, 31, 42, 43, 45, 46, 75, 123, 124, 129, 130, 153, 156], "worker0": [10, 11, 13], "state_dict0": [10, 11, 13], "worker1": [10, 11, 13], "state_dict1": [10, 11, 13], "reset_idx": [10, 11, 13], "set_se": [10, 11, 12, 13, 42, 43, 44, 45, 46, 62, 72, 186, 193, 194], "static_se": [10, 11, 12, 13, 42, 43, 45, 46, 72], "integ": [10, 11, 12, 13, 19, 20, 23, 24, 25, 26, 39, 42, 43, 45, 46, 86, 97, 153], "repres": [10, 11, 12, 13, 26, 42, 43, 45, 46, 117, 118, 134, 192], "increment": [10, 11, 12, 13, 42, 43, 45, 46, 129], "last": [10, 11, 12, 13, 20, 42, 44, 59, 86, 96, 97, 101, 187, 193, 194], "env_fn": [10, 11, 12, 13, 176, 177], "gymenv": [10, 11, 12, 13, 56, 62, 69, 72, 75, 162, 164, 167, 169, 172, 174, 180, 186, 187, 193, 194], "pendulum": [10, 11, 12, 13, 49, 50, 56, 62, 69, 72, 75, 174, 187, 193, 194], "v0": [10, 11, 13, 43, 49, 50, 56, 72, 75, 174], "env_fn_parallel": [10, 11, 12, 13], "parallelenv": [10, 11, 12, 13, 46, 175, 180, 186, 187, 189, 193, 194], "6": [10, 11, 12, 13, 62, 86, 91, 96, 97, 109, 115, 162, 164, 167, 169, 172, 186, 187, 191, 192, 193, 194], "syncdatacollector": [10, 11, 13, 174, 177, 180], "out_se": [10, 11, 12, 13, 193], "shutdown": [10, 11, 12, 13, 186], "shut": [10, 11, 12, 13], "down": [10, 11, 12, 13], "irrevers": [10, 11, 13], "field": [10, 11, 12, 13, 17, 20, 42, 43, 44, 45, 46, 69, 72, 82, 83, 84, 85, 93, 104, 105, 106, 111, 113, 115, 117, 118, 159, 162, 164, 167, 169, 172, 181, 187, 189, 191, 192, 193, 194], "own": [10, 11, 13, 20, 42, 43, 45, 46, 187, 191], "live": [10, 11, 12, 13, 20, 24, 25, 26, 27, 30, 31, 32, 42, 43, 44, 45, 46, 153], "arg": [11, 17, 20, 30, 36, 37, 42, 43, 44, 45, 46, 65, 72, 73, 74, 81, 82, 86, 93, 97, 106, 112, 150, 156, 178], "kwarg": [11, 12, 13, 17, 20, 30, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 65, 69, 72, 73, 74, 81, 82, 86, 87, 88, 89, 90, 93, 95, 97, 98, 103, 104, 105, 106, 109, 111, 112, 113, 114, 124, 129, 137, 150, 156, 160, 161, 162, 167, 169, 172, 175, 176, 177], "occur": [11, 54, 105, 111, 193], "iter": [11, 12, 19, 20, 24, 25, 26, 27, 30, 31, 32, 42, 43, 45, 46, 62, 75, 86, 97, 105, 111, 113, 119, 136, 152, 153, 155, 156, 167, 169, 172, 184, 186], "envcreat": [12, 174, 175, 178, 186, 187, 193, 194], "return_in_plac": 12, "return_same_td": 12, "constructor": [12, 71, 162, 164, 167, 169, 172, 175, 178, 191], "stop": [12, 42, 43, 45, 46, 193, 194], "equat": [12, 123, 124, 133], "exce": 12, "batcher": 12, "yield": [12, 20, 42, 43, 45, 46], "same": [12, 20, 42, 43, 45, 46, 61, 71, 72, 75, 86, 97, 186, 187, 189, 191, 192, 193], "cautious": [12, 130], "ad": [12, 20, 24, 25, 26, 27, 30, 31, 32, 33, 42, 43, 45, 46, 72, 99, 100, 124, 129, 130, 153, 186, 193], "whole": [12, 20, 42, 43, 45, 46, 72, 148, 187], "content": [12, 86, 97, 187, 192, 194], "ident": [12, 45, 46, 176, 177, 186, 191, 192], "through": [12, 45, 46, 97, 105, 113, 121, 186, 187, 189, 191, 193], "chunk": 12, "order": [12, 20, 23, 42, 43, 45, 46, 72, 111, 113, 191], "policy_state_dict": 12, "env_state_dict": 12, "v1": [12, 62, 69, 134, 143, 144, 146, 147, 187, 193, 194], "singl": [13, 20, 24, 25, 26, 27, 30, 31, 32, 42, 43, 45, 46, 53, 54, 70, 86, 96, 97, 113, 127, 131, 143, 144, 146, 147, 153, 169, 178, 186, 187, 189, 191], "mostli": [13, 193, 194], "paradigm": 13, "prefer": 13, "mere": 13, "wrapper": [13, 26, 27, 32, 44, 47, 48, 49, 50, 105, 111, 112, 138, 178, 186, 191, 193], "multiasyncdatacollector": [13, 176, 180, 186, 187, 194], "rollout_tensordict": 14, "take": [14, 42, 43, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 157, 184, 186, 187, 191, 193], "traj_id": [14, 186, 187, 194], "b": [14, 99, 100, 105, 113, 191, 192, 194], "zero": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 54, 62, 85, 96, 112, 121, 191, 192, 194], "pad": [14, 86, 87, 88, 96, 186, 187], "max": [14, 23, 109, 110, 114, 124, 131, 132, 186], "durat": [14, 187], "int64": [15, 18, 19, 23, 93, 106, 117, 118, 164, 187, 193], "discret": [15, 18, 19, 23, 103, 117, 118, 127, 194], "spec": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 81, 82, 83, 84, 93, 104, 105, 106, 108, 111, 112, 113, 117, 118, 162, 164, 167, 169, 172, 186, 187, 189, 194], "vector": [15, 23, 87, 89, 97, 140, 146, 147, 186, 187, 189, 193], "assert_is_in": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29], "belong": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29], "box": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29], "rais": [15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 58, 72, 120, 186], "except": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 42, 58, 103, 112, 120, 186, 187, 192, 193], "otherwis": [15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 62, 69, 72, 75, 110, 114, 132, 152, 184, 186, 193], "encod": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 93, 102, 103, 106, 107, 117, 118, 123, 191], "val": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 194], "ndarrai": [15, 16, 17, 18, 19, 21, 22, 23, 24, 28, 29, 43], "correspond": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 33, 42, 43, 44, 45, 46, 69, 72, 75, 105, 187], "np": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 43, 186], "slice": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 192], "tensor_to_index": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29], "is_in": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 193], "tensorspec": [15, 16, 17, 18, 19, 21, 22, 23, 29, 42, 44, 52, 53, 54, 55, 56, 57, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 81, 104, 105, 108, 111, 180], "map": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 36, 42, 43, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 82, 83, 84, 105, 111, 113, 117, 153, 180, 186, 187, 191, 192], "back": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 105, 111, 186], "heurist": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 186, 193], "rand": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 44, 85, 112, 193, 194], "uniform": [15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 28, 29, 33], "unbound": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 192], "size": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 42, 43, 44, 45, 46, 51, 54, 65, 69, 70, 72, 73, 74, 82, 83, 84, 85, 86, 91, 93, 96, 97, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 117, 118, 137, 148, 153, 162, 164, 167, 169, 172, 186, 187, 189, 191, 193, 194], "to_numpi": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29], "transformed_in": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 71, 72, 109, 178], "type_check": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29], "whose": [15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111, 186], "point": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 33, 40, 41, 42, 43, 45, 46, 53, 56, 65, 69, 70, 72, 74, 98, 111, 123, 127, 139, 140, 156, 181, 189, 193], "fill": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 69, 192], "minimum": [16, 21, 67, 94, 104, 109, 110, 114, 121, 123, 132, 148, 186, 193, 194], "float": [16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 33, 42, 43, 45, 46, 56, 57, 62, 65, 67, 68, 69, 70, 72, 74, 75, 91, 94, 99, 100, 107, 108, 109, 111, 114, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153, 154, 186, 187, 193], "unidimension": [16, 23, 29, 192], "upper": [16, 21], "composit": [17, 193], "effect": [17, 20, 42, 43, 45, 46, 72, 156, 187, 193], "cannot": [17, 192], "pixels_spec": 17, "ndboundedtensorspec": [17, 82, 83, 84, 104, 180, 193, 194], "32": [17, 86, 87, 88, 95, 97, 101, 102, 186, 187, 193, 194], "observation_vector_spec": 17, "33": [17, 20, 42, 43, 45, 46, 86, 97, 187, 190], "composite_spec": 17, "observation_vector": [17, 54, 162, 167, 169, 172, 186], "batch_siz": [17, 24, 25, 27, 30, 31, 32, 42, 44, 51, 69, 82, 83, 84, 85, 93, 104, 105, 106, 111, 113, 115, 117, 118, 148, 153, 162, 164, 167, 169, 172, 186, 187, 189, 191, 192, 193, 194], "within": [17, 20, 32, 42, 43, 45, 46, 65, 71, 73, 74, 75, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 194], "randn": [17, 62, 81, 82, 83, 84, 93, 96, 104, 105, 106, 111, 113, 115, 117, 118, 155, 191, 192, 193, 194], "td_project": 17, "modif": [17, 20, 42, 43, 45, 46, 186, 192], "after": [17, 20, 42, 43, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 99, 186, 187, 191, 192, 193], "float32": [17, 24, 28, 33, 44, 57, 62, 69, 70, 82, 83, 84, 85, 93, 104, 105, 106, 111, 113, 115, 117, 118, 162, 164, 167, 169, 172, 187, 189, 191, 192, 193, 194], "is_shar": [17, 44, 69, 75, 82, 85, 93, 104, 105, 106, 111, 113, 162, 164, 167, 169, 172, 187, 189, 191, 192, 193, 194], "ani": [17, 20, 24, 25, 26, 27, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 65, 72, 75, 86, 97, 100, 111, 113, 130, 153, 156, 181, 186, 187, 193], "selected_kei": [17, 45, 46, 186], "altern": [18, 123, 192], "onehottensorspec": 18, "categor": [18, 23, 103, 117, 118], "memori": [18, 20, 36, 42, 43, 45, 46, 56, 65, 69, 72, 74, 75, 111, 178, 184, 186, 194], "larg": 18, "action_valu": [18, 23, 93, 106, 117, 118, 164, 187], "arang": [18, 23, 93, 117, 148], "view": [18, 20, 23, 42, 43, 45, 46, 97, 117, 186, 192, 193, 194], "argmax": [18, 93, 106, 117, 118], "dim": [18, 54, 178, 186, 192], "chosen_action_valu": [18, 23, 106, 164, 187], "11": [18, 23, 70, 85, 187], "outcom": [18, 23, 91, 109], "nvec": 19, "use_regist": [19, 23], "concaten": [19, 53, 54, 71, 97, 113, 186, 187, 192, 193], "hot": [19, 23, 93, 103, 106, 117, 118], "cardin": [19, 117, 118], "element": [19, 23, 24, 25, 26, 27, 30, 31, 32, 33, 36, 37, 38, 86, 111, 148, 153, 186, 193], "2": [19, 20, 42, 43, 45, 46, 54, 56, 62, 65, 69, 72, 74, 75, 86, 87, 88, 89, 93, 95, 97, 111, 115, 117, 124, 125, 129, 131, 132, 137, 143, 144, 146, 147, 148, 186, 187, 189, 192, 193, 194], "gamma": [20, 124, 125, 126, 127, 129, 130, 131, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 174, 186, 187, 194], "reward": [20, 28, 42, 43, 44, 45, 46, 52, 56, 57, 65, 67, 68, 71, 72, 73, 74, 75, 80, 85, 125, 126, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 178, 184, 186, 187, 189, 192, 193, 194], "present": [20, 24, 33, 42, 43, 45, 46, 87, 88, 89, 90, 95, 100, 111, 113, 124, 127, 129, 130, 131, 132, 178, 184, 186, 189, 194], "sutton": 20, "r": [20, 62, 105, 123, 137, 193], "1988": 20, "predict": [20, 94, 98, 127, 132, 137], "tempor": [20, 139], "44": 20, "discount": [20, 124, 125, 126, 127, 129, 130, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 186, 187], "factor": [20, 100, 110, 114, 124, 125, 126, 127, 129, 130, 131, 186, 187, 193], "ahead": [20, 193], "add_modul": [20, 42, 43, 45, 46], "add": [20, 24, 25, 26, 27, 30, 31, 32, 40, 41, 42, 43, 45, 46, 99, 153, 186, 187, 192, 194], "child": [20, 42, 43, 45, 46, 192], "current": [20, 42, 43, 45, 46, 72, 77, 94, 96, 108, 117, 118, 167, 184, 186, 193, 194], "attribut": [20, 42, 43, 45, 46, 65, 105, 187, 191], "appli": [20, 42, 43, 45, 46, 72, 110, 184, 186, 187, 193, 194], "fn": [20, 42, 43, 45, 46, 176, 177], "recurs": [20, 42, 43, 45, 46], "submodul": [20, 42, 43, 45, 46], "children": [20, 42, 43, 45, 46], "typic": [20, 42, 43, 45, 46, 184], "nn": [20, 42, 43, 44, 45, 46, 56, 65, 69, 72, 74, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 104, 105, 106, 111, 112, 113, 115, 117, 118, 119, 120, 126, 127, 169, 172, 174, 186, 187, 189, 191, 194], "init": [20, 42, 43, 45, 46, 186, 187], "no_grad": [20, 42, 43, 45, 46, 186, 187], "init_weight": [20, 42, 43, 45, 46], "m": [20, 42, 43, 45, 46, 105, 186, 187], "linear": [20, 42, 43, 44, 45, 46, 56, 65, 69, 72, 74, 81, 82, 83, 84, 85, 86, 97, 99, 100, 104, 106, 107, 108, 111, 112, 113, 115, 117, 118, 120, 174, 189, 191, 194], "fill_": [20, 42, 43, 45, 46, 187, 192, 193], "net": [20, 42, 43, 45, 46, 96, 105, 131, 169, 174, 187, 191, 194], "in_featur": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 82, 86, 87, 88, 89, 90, 96, 97, 99, 100, 111, 191, 194], "out_featur": [20, 42, 43, 44, 45, 46, 56, 65, 69, 72, 74, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 111, 186, 187, 191, 194], "bia": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 86, 94, 97, 99, 100, 111, 112, 121, 122, 123, 187, 194], "requires_grad": [20, 42, 43, 45, 46, 186], "bfloat16": [20, 42, 43, 45, 46], "cast": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 75, 111, 162, 164, 167, 169, 172, 192, 193], "datatyp": [20, 42, 43, 45, 46], "direct": [20, 42, 43, 45, 46, 187], "member": [20, 42, 43, 45, 46], "xdoctest": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "skip": [20, 42, 43, 45, 46, 72, 105, 150, 152], "buf": [20, 42, 43, 45, 46], "20l": [20, 42, 43, 45, 46], "1l": [20, 42, 43, 45, 46], "5l": [20, 42, 43, 45, 46], "immedi": [20, 42, 43, 45, 46, 137], "move": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 75, 97, 111, 154, 187, 193, 194], "associ": [20, 42, 43, 45, 46, 107, 178, 191], "construct": [20, 42, 43, 45, 46, 105, 108, 156, 167, 191, 193], "optim": [20, 42, 43, 45, 46, 85, 99, 100, 130, 132, 156, 167, 174, 184, 186, 187, 192], "copi": [20, 42, 43, 45, 46, 72, 186, 187, 192], "doubl": [20, 22, 29, 42, 43, 45, 46, 56, 57, 65, 69, 70, 72, 74, 111, 126, 127, 128, 131, 133, 186, 193], "eval": [20, 42, 43, 45, 46, 72, 75, 186, 187], "certain": [20, 42, 43, 45, 46, 72, 129, 186, 187, 192, 193], "particular": [20, 42, 43, 45, 46, 72, 184, 187, 189], "behavior": [20, 42, 43, 45, 46, 72], "affect": [20, 42, 43, 45, 46, 71, 72], "dropout": [20, 42, 43, 45, 46, 72], "batchnorm": [20, 42, 43, 45, 46, 72], "disabl": [20, 42, 43, 45, 46, 72, 110, 114, 186], "gradient": [20, 42, 43, 45, 46, 72, 100, 110, 114, 137, 138, 139, 140, 156, 186, 187], "comparison": [20, 42, 43, 45, 46, 72], "sever": [20, 42, 43, 45, 46, 54, 72, 130, 193], "similar": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 75, 80, 105, 111, 186, 191, 193], "mechan": [20, 42, 43, 45, 46, 72], "confus": [20, 42, 43, 45, 46, 72], "extra_repr": [20, 42, 43, 45, 46], "extra": [20, 42, 43, 45, 46, 75], "represent": [20, 42, 43, 45, 46, 65, 74, 186, 187, 193], "custom": [20, 42, 43, 45, 46, 178], "string": [20, 42, 43, 45, 46, 105, 123, 155, 167, 169, 172], "forward": [20, 42, 43, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 101, 102, 105, 107, 108, 111, 112, 113, 115, 117, 119, 120, 121, 124, 125, 126, 127, 129, 130, 131, 132, 138, 139, 140, 186, 187, 191, 194], "tennsordict": 20, "dimens": [20, 53, 54, 59, 62, 70, 73, 86, 97, 99, 100, 109, 110, 124, 127, 129, 130, 131, 132, 178, 186, 192], "next_": [20, 42, 43, 45, 46, 75, 80, 193], "prefix": [20, 42, 43, 45, 46, 72, 75, 80, 193], "shift": [20, 121], "pair": [20, 26, 42, 43, 45, 46, 82, 105, 186, 187, 189, 192, 193], "nontermin": [20, 186], "non": [20, 24, 26, 42, 43, 45, 46, 52, 56, 65, 69, 72, 74, 111, 186, 193], "termin": [20, 186, 187, 194], "original_reward": [20, 186], "previou": [20, 108, 186, 191, 193], "newli": 20, "get_buff": [20, 42, 43, 45, 46], "target": [20, 42, 43, 45, 46, 71, 105, 111, 125, 126, 127, 128, 129, 131, 132, 133, 137, 158, 173, 174, 184, 186, 187], "throw": [20, 42, 43, 45, 46, 193], "docstr": [20, 42, 43, 45, 46], "get_submodul": [20, 42, 43, 45, 46], "explan": [20, 42, 43, 45, 46], "how": [20, 24, 26, 33, 42, 43, 45, 46, 124, 128, 129, 130, 156, 181, 186, 187, 189, 193, 194], "fulli": [20, 42, 43, 45, 46, 187], "qualifi": [20, 42, 43, 45, 46], "referenc": [20, 42, 43, 45, 46], "attributeerror": [20, 42, 43, 45, 46], "invalid": [20, 42, 43, 45, 46], "resolv": [20, 42, 43, 45, 46], "someth": [20, 42, 43, 45, 46, 181, 193], "get_extra_st": [20, 42, 43, 45, 46, 75], "set_extra_st": [20, 42, 43, 45, 46, 75], "pickleabl": [20, 42, 43, 45, 46, 75], "ensur": [20, 24, 26, 33, 42, 43, 45, 46, 65, 75, 119, 186], "serial": [20, 42, 43, 45, 46, 75], "break": [20, 42, 43, 45, 46, 75, 186, 187, 191, 194], "pickl": [20, 42, 43, 45, 46, 75], "get_paramet": [20, 42, 43, 45, 46], "sai": [20, 42, 43, 45, 46, 193], "net_b": [20, 42, 43, 45, 46], "net_c": [20, 42, 43, 45, 46], "conv": [20, 42, 43, 45, 46, 86], "conv2d": [20, 42, 43, 45, 46, 86, 194], "16": [20, 42, 43, 45, 46, 187], "kernel_s": [20, 42, 43, 45, 46, 86, 87, 88, 187, 194], "stride": [20, 42, 43, 45, 46, 86, 87, 88, 95, 187, 194], "100": [20, 42, 43, 45, 46, 62, 79, 149, 156, 174, 186, 187, 189, 193, 194], "diagram": [20, 42, 43, 45, 46], "show": [20, 42, 43, 45, 46, 187, 191, 194], "nest": [20, 42, 43, 45, 46, 184, 192, 194], "itself": [20, 42, 43, 45, 46], "two": [20, 42, 43, 45, 46, 90, 105, 129, 132, 134, 152, 156, 167, 169, 172, 186, 187, 189, 191, 192, 193], "would": [20, 42, 43, 45, 46, 97, 184, 187, 191, 192, 193], "degre": [20, 42, 43, 45, 46], "named_modul": [20, 42, 43, 45, 46], "achiev": [20, 42, 43, 45, 46, 184, 191, 192, 193], "o": [20, 42, 43, 45, 46], "transit": [20, 42, 43, 45, 46, 186, 187], "alwai": [20, 42, 43, 45, 46, 61, 187], "half": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111, 186], "ipu": [20, 42, 43, 45, 46], "strict": [20, 42, 43, 45, 46, 72], "descend": [20, 42, 43, 45, 46, 72], "exactli": [20, 42, 43, 45, 46, 72, 112], "persist": [20, 42, 43, 45, 46, 72], "strictli": [20, 42, 43, 45, 46, 72], "enforc": [20, 42, 43, 45, 46, 72], "missing_kei": [20, 42, 43, 45, 46, 72], "unexpected_kei": [20, 42, 43, 45, 46, 72], "unexpect": [20, 42, 43, 45, 46, 72, 193], "namedtupl": [20, 42, 43, 45, 46, 72], "regist": [20, 23, 42, 43, 45, 46, 65, 71, 72, 73, 74, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 184, 191], "duplic": [20, 42, 43, 45, 46, 126, 127, 192], "l": [20, 42, 43, 45, 46, 137], "idx": [20, 42, 43, 45, 46, 192], "enumer": [20, 42, 43, 45, 46, 186, 187, 194], "named_buff": [20, 42, 43, 45, 46], "tupl": [20, 24, 31, 42, 43, 45, 46, 51, 62, 87, 96, 97, 105, 111, 113, 125, 163, 165, 168, 171, 192], "prepend": [20, 42, 43, 45, 46], "running_var": [20, 42, 43, 45, 46], "named_children": [20, 42, 43, 45, 46], "conv4": [20, 42, 43, 45, 46], "conv5": [20, 42, 43, 45, 46], "memo": [20, 42, 43, 45, 46], "remove_dupl": [20, 42, 43, 45, 46], "alreadi": [20, 42, 43, 45, 46, 105, 186, 187], "named_paramet": [20, 42, 43, 45, 46, 187], "param": [20, 42, 43, 44, 45, 46, 91, 104, 105, 106, 109, 111, 112, 113, 115, 117, 118, 133, 136, 138, 139, 140, 162, 186, 187, 191, 194], "register_backward_hook": [20, 42, 43, 45, 46], "hook": [20, 42, 43, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 101, 102, 105, 106, 107, 108, 111, 112, 113, 117, 118, 121, 150, 151, 152, 154, 156, 157, 180], "removablehandl": [20, 42, 43, 45, 46], "deprec": [20, 42, 43, 45, 46, 72, 83, 193], "favor": [20, 42, 43, 45, 46], "register_full_backward_hook": [20, 42, 43, 45, 46], "futur": [20, 42, 43, 45, 46, 65, 72, 74, 97, 181, 194], "handl": [20, 42, 43, 45, 46, 75, 97, 156, 176, 177], "register_buff": [20, 42, 43, 45, 46], "consid": [20, 42, 43, 45, 46, 91, 109, 186, 192], "running_mean": [20, 42, 43, 45, 46], "save": [20, 42, 43, 45, 46, 156, 184, 187], "alongsid": [20, 42, 43, 45, 46], "latter": [20, 42, 43, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 176, 177], "num_featur": [20, 42, 43, 45, 46], "register_forward_hook": [20, 42, 43, 45, 46, 117, 118], "signatur": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111, 120], "posit": [20, 42, 43, 45, 46, 72, 73, 191], "keyword": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 105, 111, 175, 186, 191, 193], "won": [20, 42, 43, 45, 46, 65, 74, 156, 178, 186], "inplac": [20, 42, 43, 45, 46, 186], "register_forward_pre_hook": [20, 42, 43, 45, 46], "invok": [20, 30, 42, 43, 45, 46], "user": [20, 42, 43, 45, 46, 72, 96, 175, 184, 187, 191, 193, 194], "either": [20, 42, 43, 45, 46, 162, 184, 192, 193, 194], "respect": [20, 42, 43, 45, 46, 52, 56, 65, 69, 72, 74, 108, 111, 115], "grad_input": [20, 42, 43, 45, 46], "grad_output": [20, 42, 43, 45, 46], "subsequ": [20, 42, 43, 45, 46, 113], "entri": [20, 42, 43, 45, 46, 191], "technic": [20, 42, 43, 45, 46], "reason": [20, 42, 43, 45, 46, 65, 186, 187], "receiv": [20, 42, 43, 45, 46, 71, 97, 187, 189], "similarli": [20, 42, 43, 45, 46, 113, 186, 191, 193], "caller": [20, 42, 43, 45, 46], "register_load_state_dict_post_hook": [20, 42, 43, 45, 46], "post": [20, 42, 43, 45, 46, 187], "incompatible_kei": [20, 42, 43, 45, 46], "consist": [20, 42, 43, 45, 46, 86, 97, 105, 186, 187, 191, 193], "addit": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111, 123, 187], "thrown": [20, 42, 43, 45, 46], "clearn": [20, 42, 43, 45, 46], "out": [20, 42, 43, 45, 46, 99, 100, 105, 111, 135, 136, 184, 191, 192, 193, 194], "avoid": [20, 42, 43, 45, 46, 72, 75, 111, 158, 191], "register_modul": [20, 42, 43, 45, 46, 184], "alia": [20, 42, 43, 45, 46], "register_paramet": [20, 42, 43, 45, 46], "requires_grad_": [20, 42, 43, 45, 46, 186], "autograd": [20, 42, 43, 45, 46, 72], "freez": [20, 42, 43, 45, 46], "finetun": [20, 42, 43, 45, 46], "individu": [20, 42, 43, 45, 46], "gan": [20, 42, 43, 45, 46], "share_memori": [20, 42, 43, 45, 46, 186], "share_memory_": [20, 42, 43, 45, 46, 192, 194], "destin": [20, 42, 43, 45, 46, 72, 80], "keep_var": [20, 42, 43, 45, 46, 72], "averag": [20, 42, 43, 45, 46, 72, 75, 154, 186, 191], "shallow": [20, 42, 43, 45, 46, 72], "pleas": [20, 42, 43, 45, 46, 72, 181], "design": [20, 23, 42, 43, 45, 46, 72, 124, 127, 129, 130, 131, 132, 186, 187, 189, 192, 193], "compos": [20, 31, 34, 35, 40, 42, 43, 45, 46, 71, 72, 75, 162, 164, 167, 169, 172, 180, 187, 189, 193, 194], "detach": [20, 42, 43, 45, 46, 72, 186, 187], "non_block": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111, 187], "memory_format": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "channels_last": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "Its": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "complex": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111, 191], "integr": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 90, 111], "unchang": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "tri": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "convert": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 75, 111, 123, 192], "host": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "pin": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "desir": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 79, 86, 97, 105, 111, 186, 187, 192], "4d": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "ignore_w": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "determinist": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 81, 94, 101, 105, 108, 111, 186, 187, 193], "1913": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "3420": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "5113": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "2325": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "float64": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111, 189, 193], "torch_doctest_cuda1": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "gpu1": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "1914": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "5112": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "2324": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "float16": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "cdoubl": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "3741": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "j": [20, 24, 33, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111, 184, 186, 187], "2382": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "5593": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "4443": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "complex128": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "6122": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "1150": [20, 42, 43, 45, 46, 56, 65, 69, 72, 74, 111], "to_empti": [20, 42, 43, 45, 46], "dst_type": [20, 42, 43, 45, 46], "xpu": [20, 42, 43, 45, 46], "zero_grad": [20, 42, 43, 45, 46, 184, 186, 187, 192], "set_to_non": [20, 42, 43, 45, 46], "under": [20, 42, 43, 45, 46, 105, 111, 186], "context": [20, 42, 43, 45, 46, 99, 135, 136, 138, 141, 142, 145, 152, 186, 187, 191], "grad": [20, 42, 43, 45, 46, 187], "dimension": [21, 22, 138, 141, 142, 145], "By": [23, 43, 45, 46, 105, 152, 178, 192, 193], "keepdim": 23, "sum": [23, 43, 137, 186, 187, 193], "user_regist": 23, "experiment": [23, 105], "onto": [23, 80, 105, 111], "appear": 23, "priori": 23, "definit": [23, 39], "arbitrari": [23, 45, 46, 186, 187], "uniqu": 23, "discretebox": 23, "alpha": [24, 26, 33, 86, 131, 132, 186, 187, 194], "beta": [24, 26, 33, 129, 186, 187, 194], "ep": [24, 26, 33, 75, 112, 124, 133, 154], "1e": [24, 26, 33, 75, 91, 94, 109], "08": [24, 26, 33, 186, 187], "collate_fn": [24, 25, 26, 27, 31, 153, 186, 187, 192, 194], "prefetch": [24, 25, 26, 27, 31, 153, 186, 187], "priorit": [24, 26, 33, 125, 126, 131, 132, 186, 187], "schaul": [24, 33], "quan": [24, 33], "antonogl": [24, 33], "silver": [24, 33], "d": [24, 33, 105, 192, 194], "2015": [24, 33], "arxiv": [24, 33, 53, 65, 87, 88, 89, 90, 94, 95, 100, 101, 102, 107, 108, 117, 127, 128, 130, 132, 133, 138, 141, 142, 145, 162, 167, 172], "org": [24, 33, 53, 65, 87, 88, 89, 90, 94, 95, 100, 101, 102, 107, 108, 117, 127, 128, 130, 132, 133, 138, 141, 142, 145, 162, 167, 172], "ab": [24, 33, 65, 75, 94, 95, 100, 101, 102, 107, 108, 128, 130, 167], "1511": [24, 33, 95, 187], "05952": [24, 33], "expon": [24, 26, 33], "\u03b1": [24, 26, 33], "determin": [24, 26, 33, 65, 74, 187], "delta": [24, 26, 33, 105, 109, 180], "prioriti": [24, 26, 32, 33, 36, 37, 38, 39, 125, 126, 131, 132, 184, 186, 187], "doe": [24, 26, 33, 39, 99, 113, 124, 129, 130, 137, 156, 184, 186, 192, 193], "null": [24, 26, 33, 52, 186], "merg": [24, 25, 26, 31, 153], "mini": [24, 25, 26, 31, 153], "style": [24, 25, 26, 31, 153], "rb": [24, 25, 26, 31, 153, 187, 194], "multithread": [24, 25, 26, 31, 153], "instanti": [24, 25, 26, 45, 46, 71, 153, 186, 187, 192, 193], "extend": [24, 25, 26, 27, 30, 31, 32, 40, 41, 153, 184, 186, 187, 194], "gather": [24, 26, 137, 159, 181, 191, 193], "multinomi": [24, 26], "update_prior": [24, 26, 33, 184, 186, 194], "circular": [25, 153, 186], "randomli": [25, 27, 61, 62, 69, 105, 153], "select": [25, 26, 27, 30, 31, 32, 45, 46, 61, 85, 113, 153, 155, 186, 187], "priority_kei": [26, 32, 126, 127, 132, 194], "td_error": [26, 32, 125, 126, 127, 131, 132, 186, 194], "prioritizedreplaybuff": [26, 180, 194], "flaot": 26, "return_weight": 26, "_weight": 26, "replaybuff": [27, 30, 32, 41, 170, 174, 180, 194], "meta": [28, 184], "describ": [28, 54, 71, 109, 110, 167, 193], "what": [28, 42, 43, 45, 46, 69, 181, 187, 191, 193, 194], "kind": [28, 80], "replay_buff": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 174, 186, 187, 194], "rb_prototyp": [30, 31, 32], "remot": [30, 45, 46, 193], "invoc": 30, "friendli": [30, 186], "public": 30, "rpc": 30, "include_info": [30, 32], "sampler": [30, 31, 32, 33, 34, 36, 37, 38, 39, 180], "retriev": [30, 31, 32, 42, 43, 45, 46, 54, 62, 80, 85, 105, 124, 129, 130, 138, 139, 140, 162, 164, 167, 169, 172, 178, 184, 192, 193], "writer": [31, 40, 180], "max_siz": [31, 36, 38, 39, 187], "1_000": 31, "randomsampl": [31, 180], "roundrobinwrit": [31, 180], "kw": [32, 40], "max_capac": 33, "uniformli": [34, 193], "scratch_dir": [36, 186], "memmap": [36, 45, 46, 75], "attach": [36, 37, 38, 39, 187], "entiti": [36, 37, 38, 39], "made": [36, 37, 38, 39, 186], "eg": [36, 37, 38, 39], "alloc": 37, "__len__": 39, "roundrobin": 40, "insert": [40, 41, 73, 187], "piec": [40, 41], "_inplace_upd": [42, 45, 46, 72], "_batch_lock": [42, 45, 46, 72], "observation_spec": [42, 44, 53, 54, 55, 56, 57, 59, 60, 62, 65, 66, 69, 70, 71, 72, 73, 74, 85, 159, 174, 186, 189, 193], "compositespec": [42, 44, 69, 81, 85, 104, 113, 180, 186, 193], "action_spec": [42, 43, 44, 45, 46, 72, 79, 81, 93, 104, 106, 108, 117, 118, 174, 186, 187, 189, 193, 194], "input_spec": [42, 44, 45, 46, 56, 57, 65, 71, 72, 73, 74, 85, 193], "reward_spec": [42, 44, 52, 56, 57, 65, 67, 68, 71, 72, 73, 74, 85, 193], "is_don": [42, 44, 194], "run_type_check": [42, 44], "compar": [42, 152, 187, 193], "rand_step": [42, 43, 44, 45, 46, 47, 48, 49, 50, 75, 193, 194], "batch_lock": [42, 43, 45, 46, 72], "environn": [42, 43, 44, 45, 46, 72], "immut": [42, 43, 45, 46, 72, 167], "fake_tensordict": [42, 43, 45, 46], "fake": [42, 43, 45, 46], "overridden": [42, 43, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121], "although": [42, 43, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 184, 186, 187], "recip": [42, 43, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121], "afterward": [42, 43, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 193], "former": [42, 43, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121], "care": [42, 43, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121, 186, 187], "silent": [42, 43, 45, 46, 65, 71, 73, 74, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107, 108, 111, 112, 113, 121], "info": [42, 43, 45, 46, 76, 191], "execute_step": [42, 43, 45, 46], "As": [42, 43, 45, 46, 105, 186, 187, 193, 194], "_step": [42, 43, 45, 46], "privat": [42, 43, 45, 46, 193], "_reset": [42, 43, 44, 45, 46, 85], "overwritten": [42, 43, 45, 46, 80, 112, 186], "step_mdp": [42, 43, 45, 46, 180, 186, 187, 193, 194], "herebi": [42, 43, 45, 46], "max_step": [42, 43, 44, 45, 46, 79, 80, 186, 187, 193, 194], "callback": [42, 43, 45, 46], "auto_reset": [42, 43, 45, 46, 187], "auto_cast_to_devic": [42, 43, 45, 46], "break_when_any_don": [42, 43, 45, 46], "return_contigu": [42, 43, 45, 46, 189], "soon": [42, 43, 45, 46], "smaller": [42, 43, 45, 46], "automat": [42, 43, 45, 46, 62, 81, 104, 187, 194], "lazystackedtensordict": [42, 43, 45, 46, 189, 192, 193, 194], "concomitt": [42, 43, 45, 46], "eras": [42, 43, 45, 46], "workspac": [42, 43, 45, 46], "carri": [42, 43, 45, 46], "taken": [42, 43, 45, 46, 187], "behaviour": [43, 54, 110, 114, 152, 187], "discard": [43, 80, 193], "info_dict_read": 43, "set_info_dict_read": 43, "next_observ": [43, 75, 80, 96, 162, 167, 169, 172, 189, 193, 194], "put": [43, 75, 178, 192], "next_observation_": 43, "read_act": 43, "read_don": 43, "reader": [43, 186, 187], "frame_skip": [43, 47, 48, 49, 150, 152, 158, 184, 186, 194], "broken": 43, "read_ob": 43, "dictat": [43, 105], "inner": [43, 105, 184, 186, 193], "read_reward": 43, "total_reward": 43, "step_reward": 43, "far": [43, 110, 114, 193], "baseinfodictread": 43, "info_dict": 43, "hoc": 43, "manner": [43, 65, 186, 189], "dict_read": 43, "gymwrapp": [43, 180, 194], "default_info_dict_read": 43, "my_info_kei": 43, "some_env": 43, "meant": 44, "world": [44, 193], "limit": [44, 45, 46, 192], "safeti": 44, "constraint": 44, "behav": [44, 103, 112], "classic": [44, 191, 192], "directli": [44, 178, 187, 191], "ndunboundedcontinuoustensorspec": [44, 69, 81, 82, 83, 84, 85, 105, 111, 112, 113, 115, 180], "mymbenv": [44, 85], "world_model": [44, 51, 85], "super": [44, 85, 115, 117, 120, 191, 194], "next_hidden_observ": [44, 85], "hidden_observ": [44, 85], "mlp": [44, 82, 85, 86, 87, 88, 89, 90, 93, 96, 167, 169, 172, 180, 186, 187, 189, 191, 194], "worldmodelwrapp": [44, 85], "activation_class": [44, 85, 86, 87, 88, 89, 90, 94, 95, 97, 186, 187, 194], "relu": [44, 85, 123], "activate_last_lay": [44, 85, 90, 97], "depth": [44, 85, 86, 87, 88, 89, 90, 93, 94, 95, 97, 101, 102, 187, 189], "in_kei": [44, 52, 53, 54, 55, 57, 59, 60, 62, 63, 65, 66, 67, 68, 70, 71, 74, 75, 81, 82, 83, 84, 85, 104, 105, 111, 112, 113, 115, 119, 120, 125, 126, 169, 172, 174, 186, 187, 189, 191, 193, 194], "out_kei": [44, 45, 46, 52, 54, 63, 65, 66, 67, 70, 71, 74, 81, 82, 84, 85, 104, 105, 111, 112, 113, 115, 117, 118, 119, 120, 152, 174, 186, 189, 191, 193, 194], "equal": [45, 46, 61, 86, 92, 97, 134, 148, 176, 177, 192], "my_env_fun": [45, 46], "custom_attribute_list": [45, 46], "custom_attribut": [45, 46], "custom_method_list": [45, 46], "custom_method": [45, 46], "num_work": [45, 46, 186, 187], "deploi": [45, 46], "simultan": [45, 46], "creation": [45, 46, 186, 193], "slight": [45, 46, 187], "overhead": [45, 46, 191], "env_input_kei": [45, 46], "permit": [45, 46], "drastic": [45, 46], "decreas": [45, 46], "io": [45, 46], "burden": [45, 46], "stateless": [45, 46, 71, 193], "_batchedenv": [45, 46], "might": [45, 46, 181, 186, 193], "next_pixel": [45, 46, 65, 70, 74, 187, 193, 194], "next_vector": [45, 46], "interest": [45, 46, 105, 193], "amount": [45, 46], "occupi": [45, 46], "excluded_kei": [45, 46], "exclud": [45, 46, 186], "share_individual_td": [45, 46], "lazi": [45, 46, 65, 99, 105, 111, 113, 186, 189, 192, 193], "shared_memori": [45, 46], "policy_proof": [45, 46], "ll": [45, 46, 186, 187, 193], "hidden": [45, 46, 82, 83, 84, 94, 96, 101, 102, 105, 107, 108, 111, 113, 167, 189, 191, 194], "infer": [45, 46, 75, 99, 132, 186, 191, 192], "allow_step_when_don": [45, 46], "encount": [45, 46, 181], "update_kwarg": [45, 46], "dm_control": [47, 48, 186, 189, 193, 194], "env_nam": [47, 49, 186, 193], "task_nam": 47, "from_pixel": [47, 48, 167, 169, 172, 186, 187, 193, 194], "cheetah": [47, 48, 186, 193], "suit": [48, 193], "disable_env_check": 49, "categorical_action_encod": 50, "model_bas": [51, 85], "dreamer": [51, 94], "prior_shap": 51, "belief_shap": 51, "obs_decod": 51, "transform_reward_spec": [52, 56, 57, 65, 67, 68, 71, 73, 74], "cat_dim": 53, "success": [53, 71, 194], "account": 53, "movement": 53, "veloc": [53, 193], "propos": [53, 98, 128, 133, 169, 172], "plai": [53, 193], "atari": [53, 193], "pdf": [53, 87, 88, 89, 90, 117, 127, 131, 132, 133, 138, 141, 142, 145, 162, 169, 172], "1312": 53, "5602": 53, "along": [53, 54, 70, 97, 100, 105, 111, 187, 192], "tranform": [53, 56, 65, 69, 71, 74, 76], "transform_observation_spec": [53, 54, 55, 56, 57, 59, 60, 62, 65, 66, 69, 70, 71, 73, 74], "next_observation_vector": [54, 162, 167, 169, 172, 186], "del_kei": [54, 187, 189], "unsqueeze_if_oor": 54, "observation_posit": 54, "observation_veloc": 54, "delet": [54, 192], "unsqueez": [54, 70, 73, 96, 192], "key1": [54, 148, 155], "key2": [54, 148, 155], "_": [54, 57, 62, 70, 75, 93, 105, 106, 111, 113, 117, 118, 123, 187, 191], "w": [55, 66, 70], "crop": 55, "center": 55, "width": [55, 66, 187], "height": [55, 66, 187], "squar": [55, 110, 114], "chain": [56, 86, 113, 193], "rewardsc": [56, 72, 180, 186], "rewardclip": [56, 180], "transformed_env": [56, 71, 72], "transformedenv": [56, 61, 62, 69, 71, 75, 162, 164, 167, 169, 172, 180, 186, 187, 189, 193, 194], "dest": [56, 65, 74, 111], "transform_input_spec": [56, 57, 65, 71, 73, 74], "in_keys_inv": [57, 71, 186, 189, 193], "next_ob": [57, 62, 186, 194], "finit": [58, 186], "first_dim": 59, "last_dim": 59, "flatten": [59, 186, 187], "adjac": 59, "turn": [60, 152, 187], "noop": [61, 194], "30": [61, 107, 108, 187], "op": [61, 157], "noop_max": 61, "loc": [62, 68, 82, 84, 104, 105, 110, 113, 114, 159, 167, 169, 172, 178, 186, 187, 191, 194], "scale": [62, 68, 82, 84, 94, 104, 105, 107, 108, 110, 113, 114, 154, 159, 167, 169, 172, 178, 186, 187, 191, 194], "standard_norm": [62, 186, 187], "affin": [62, 68], "layer": [62, 75, 86, 87, 88, 94, 97, 99, 100, 101, 102, 116, 186, 187, 191], "ob": [62, 70, 115, 186, 189, 193, 194], "set_default_tensor_typ": 62, "doubletensor": 62, "std": [62, 75, 186, 187, 193], "isclos": 62, "normalis": 62, "stat": [62, 159, 178, 186], "rubric": [62, 113], "manual_se": [62, 186, 193, 194], "init_stat": 62, "3752e": 62, "01": [62, 121, 124, 129, 130, 186, 187, 190], "5087e": 62, "03": [62, 186, 187, 190], "9294e": 62, "9636": 62, "5608": 62, "6408": 62, "num_it": 62, "reduce_dim": 62, "constant": [62, 184, 186, 187, 193], "ideal": [62, 186], "statist": [62, 75, 178, 186, 193], "approach": [62, 193], "gaussian": [62, 85, 99, 100], "empir": [62, 85, 105], "deviat": [62, 75, 85, 94, 99, 100, 130, 186, 187], "summari": [62, 75], "r3m": 65, "resnet": [65, 74], "visual": [65, 74], "embed": [65, 74, 82, 83, 84, 111, 191], "ego4d": [65, 74], "paper": [65, 74, 128, 169, 172, 186], "univers": [65, 74], "manipul": [65, 193], "suraj": 65, "nair": 65, "aravind": 65, "rajeswaran": 65, "vikash": [65, 74], "kumar": [65, 74], "chelsea": 65, "finn": 65, "abhinav": 65, "gupta": 65, "2203": 65, "12601": 65, "_init": 65, "snippet": [65, 186, 192], "resenet50": 65, "append_transform": [65, 69, 186, 193, 194], "model_nam": [65, 74], "resnet50": [65, 74], "resnet34": 65, "resnet18": 65, "left": [65, 74, 187], "empti": [65, 72, 74, 186], "next_r3m_vec": 65, "feed": [65, 74], "244": [65, 74], "hub": [65, 74], "cach": [65, 72, 74, 149], "download_path": [65, 74], "tensor_pixels_kei": [65, 74], "interpol": [66, 187], "bilinear": 66, "clamp_min": 67, "clamp_max": 67, "clip": [67, 124, 156], "clip_min": 67, "scalar": [67, 88, 90, 99, 100, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "clip_max": 67, "default_valu": 69, "primer": 69, "popul": 69, "drawn": [69, 105], "rel": [69, 91, 109], "fix": [69, 132, 193], "chosen": [69, 167, 169, 172], "base_env": [69, 186, 187, 193, 194], "mykei": 69, "dtype_or_devic": 69, "255": [70, 193], "uint8": [70, 187, 193, 194], "precis": [70, 186], "ri": 70, "randint": [70, 186], "out_keys_inv": 71, "principl": 71, "combin": [71, 192], "cattransform": 71, "notabl": 71, "placehold": 72, "cache_spec": 72, "valid": [72, 86, 97, 129, 184, 193], "anymor": [72, 111, 186], "unsqueeze_dim": 73, "vip": 74, "toward": 74, "implicit": 74, "jason": 74, "ma": 74, "shagun": 74, "sodhani": 74, "dinesh": 74, "jayaraman": 74, "osbert": 74, "bastani": 74, "ami": 74, "zhang": 74, "next_vip_vec": 74, "shared_td": 75, "lock": 75, "decai": [75, 131, 154, 186, 187, 193], "9999": [75, 193], "0001": [75, 94, 154], "fly": [75, 129, 193], "substitut": 75, "to_observation_norm": 75, "rate": [75, 137, 186, 187], "99": [75, 124, 129, 130, 131, 132, 137, 174, 186, 187, 194], "numer": [75, 105, 110, 111, 114, 192, 193], "underflow": 75, "1000": [75, 105, 128, 174, 186, 187], "static": 75, "build_td_for_shared_vecnorm": 75, "keys_prefix": 75, "across": [75, 157, 192], "memmori": 75, "memmap_": [75, 192], "multiprocess": [75, 193], "mp": 75, "queue": 75, "make_env": [75, 80, 160, 161, 186, 187, 193], "td_share": 75, "v": [75, 96, 132, 187, 191, 194], "observationnorm": [75, 178, 180, 186, 187, 194], "state_dim": [76, 107, 108], "action_dim": [76, 87, 89, 189], "gsde": [76, 131, 178], "nois": [76, 100, 116, 131, 152, 178, 186], "func": [76, 191], "explor": [76, 77, 79, 100, 105, 111, 112, 152, 160, 161, 174, 180, 186, 187, 194], "gsdemodul": 76, "probabilistictdmodul": [79, 97, 105, 132, 137, 152], "actor": [79, 82, 83, 84, 85, 87, 89, 93, 94, 104, 106, 117, 118, 124, 125, 129, 130, 131, 132, 162, 164, 167, 169, 172, 180, 186, 187, 194], "default_interaction_mod": [79, 105, 191], "next_tensordict": [80, 186], "keep_oth": 80, "exclude_reward": 80, "exclude_don": 80, "exclude_act": 80, "reflect": [80, 158], "next_some_other_str": 80, "renam": [80, 186], "some_other_str": 80, "funtion": 80, "td_out": [80, 148, 155], "make_polici": 80, "next_td": 80, "append": [80, 186, 187, 192, 194], "translat": [81, 104], "td_modul": [81, 82, 83, 84, 104, 105, 111, 112, 113, 115, 191, 194], "critic": [82, 124, 129, 130, 132, 191], "get_policy_oper": [82, 83, 84, 167, 191], "alon": [82, 83, 84], "tdmodul": [82, 83, 84, 105, 174], "dedic": [82, 83, 84, 186, 189], "get_critic_oper": [82, 191], "common_oper": [82, 84], "produc": [82, 84, 86, 97, 103, 105, 193], "policy_oper": [82, 83, 84], "value_oper": [82, 83, 84], "tensordict_modul": [82, 83, 84, 104, 105, 106, 112, 113, 117, 118, 119, 120, 190, 191, 194], "probabilisticactor": [82, 84, 132, 180, 186], "valueoper": [82, 83, 84, 124, 129, 130, 174, 180, 186, 191], "tanhnorm": [82, 83, 84, 104, 105, 113, 180, 191, 194], "normalparamwrapp": [82, 84, 104, 105, 113, 191, 194], "spec_hidden": [82, 84], "module_hidden": [82, 84, 191], "td_module_hidden": [82, 84, 191], "spec_act": [82, 83, 84], "8": [82, 83, 84, 86, 87, 88, 95, 97, 104, 105, 111, 113, 187, 191, 193, 194], "module_act": [82, 83, 84, 191], "td_module_act": [82, 83, 84, 191], "dist_in_kei": [82, 84, 104, 105, 113, 186, 191, 194], "sample_out_kei": [82, 84, 104, 105, 113, 191, 194], "distribution_class": [82, 83, 84, 104, 105, 113, 186, 191, 194], "return_log_prob": [82, 83, 84, 105, 113, 191, 194], "module_valu": [82, 83, 84, 191], "num_cel": [82, 86, 87, 88, 89, 90, 94, 95, 97, 186, 187, 191, 194], "td_module_valu": [82, 83, 84, 191], "state_action_valu": [82, 115, 137, 162, 169, 172, 174, 186, 191, 194], "td_clone": [82, 83, 84, 191], "clone": [82, 83, 84, 105, 111, 112, 113, 167, 169, 172, 186, 187, 191, 192, 194], "sample_log_prob": [82, 83, 84, 105, 113, 167, 169, 191, 194], "tensordictmodulewrapp": [82, 160, 161, 174, 180], "estim": [82, 83, 84, 124, 129, 130, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 186, 187], "get_value_oper": [82, 83, 84, 167], "probabilisticactor_deprec": 83, "state_valu": [83, 84, 115, 139, 140, 141, 142, 143, 145, 146, 167, 172, 186], "tensordictsequenti": [83, 84, 180, 189, 194], "planning_horizon": 85, "optim_step": [85, 192], "num_candid": 85, "num_top_k_candid": 85, "reward_kei": 85, "action_kei": [85, 98], "cross": 85, "entropi": [85, 124, 129, 130, 131, 132], "botev": 85, "et": [85, 191], "al": [85, 164, 191, 193], "2013": 85, "cem": 85, "plan": [85, 98], "unit": [85, 94, 101, 102, 107, 108], "varianc": [85, 110, 114], "cumul": 85, "rank": 85, "top": 85, "k": [85, 187, 191, 192], "episod": [85, 141, 142, 143, 144, 145, 146, 147, 187], "repeat": 85, "maximis": [85, 87, 89, 186], "horizon": 85, "modelbasedenv": 85, "mpc": [85, 98], "planner": [85, 180], "candid": 85, "modelbasedenvbas": [85, 98, 180], "5": [85, 86, 93, 94, 97, 106, 110, 112, 114, 117, 118, 129, 186, 187, 192, 193, 194], "elu": [86, 87, 88, 89, 90, 94, 95, 187, 194], "activation_kwarg": [86, 97], "norm_class": [86, 87, 88, 97], "norm_kwarg": [86, 97], "bias_last_lay": [86, 87, 88, 89, 90, 95, 97], "aggregator_class": [86, 87, 88, 187, 194], "squashdim": [86, 87, 194], "aggregator_kwarg": [86, 87, 88, 187], "squeeze_output": [86, 87, 88, 187], "convolut": [86, 87, 88], "neural": [86, 111, 187, 191, 193], "len": [86, 97, 186, 187, 192, 194], "cell": [86, 97, 186, 187], "kernel": [86, 95, 96], "tanh": [86, 97, 109, 110, 114, 186, 194], "aggreg": [86, 87, 88, 113, 192], "squeez": [86, 186, 187, 192], "singleton": [86, 97], "device_typ": [86, 87, 88, 89, 90, 95, 97, 99, 100], "cnet": 86, "34": [86, 97], "35": [86, 97, 187], "possibli": [86, 105, 111, 156, 186, 193], "rectangular": 86, "conv_net_kwarg": [87, 88], "mlp_net_kwarg": [87, 88, 89], "use_avg_pool": [87, 88], "WITH": [87, 88, 89, 90, 133, 162], "1509": [87, 88, 89, 90, 128, 133, 162], "02971": [87, 88, 89, 90, 133, 162], "convnet": [87, 180, 194], "64": [87, 88, 95, 186, 187, 189, 193, 194], "ndims_in": 87, "avgpool": [87, 88], "128": [88, 186, 187], "adaptiveavgpool2d": [88, 187], "400": [89, 90, 187], "300": [89, 90, 167], "mlp_net_kwargs_net1": 90, "mlp_net_kwargs_net2": 90, "atol": [91, 109], "06": [91, 109, 186, 187], "rtol": [91, 109], "batch_shap": [91, 109], "event_shap": [91, 109], "absolut": [91, 109], "toler": [91, 109], "log_prob": [91, 103, 114], "log": [91, 103, 105, 114, 124, 127, 129, 130, 131, 132, 150, 151, 152, 156, 174, 184, 187, 191, 194], "probabl": [91, 103, 105, 114, 187, 191, 194], "densiti": [91, 103, 114], "mass": [91, 103, 114], "rsampl": [91, 103, 105], "sample_shap": [91, 103], "reparameter": [91, 103], "dqnet": 92, "atom": 92, "action_spac": [93, 106, 117, 118], "one_hot": [93, 106, 117, 118], "functorch": [93, 104, 105, 106, 111, 112, 113, 115, 117, 118, 119, 194], "onehotdiscretetensorspec": [93, 106, 117, 118, 180], "nbin": [93, 117], "qvalue_actor": [93, 106, 117, 118], "std_bia": 94, "std_min_val": 94, "stochast": [94, 100, 101, 108, 131, 132], "belief": [94, 101, 107, 108], "1912": 94, "016034": 94, "softplu": [94, 121, 122, 123], "out_features_valu": 95, "cnn_kwarg": [95, 187], "mlp_kwarg": [95, 96, 187], "duel": [95, 187], "cnn": [95, 187, 194], "06581": 95, "advantag": [95, 124, 129, 130, 138, 139, 140, 141, 142, 143, 145, 146, 184, 186, 187, 193, 194], "512": 95, "lstm_kwarg": 96, "embedd": 96, "lstm": 96, "preced": [96, 191], "time_step": 96, "2d": 96, "input_s": 96, "hidden_s": 96, "hidden0_in": 96, "hidden1_in": 96, "hidden0_out": 96, "hidden1_out": 96, "single_bias_last_lay": 97, "layer_class": 97, "layer_kwarg": 97, "perceptron": 97, "seamless": 97, "interfac": [97, 99, 191], "though": 97, "reshap": [97, 192], "lazylinear": [97, 105, 111, 113, 194], "42": [97, 156], "noisylinear": [97, 99, 180, 187], "noisylazylinear": [97, 180], "inherit": [98, 184, 191, 192], "At": [98, 189], "mpcplanner": 98, "tensordict_out": [98, 105, 111, 113, 191, 193], "std_init": [99, 100], "noisi": [99, 100, 116], "term": [99, 100, 123, 157, 187], "matrix": [99, 100], "ax": [99, 100], "initialize_paramet": 99, "isol": 99, "1706": 100, "10295v3": 100, "parametr": [100, 132, 186], "induc": 100, "aid": 100, "descent": 100, "remain": 100, "emploi": 100, "decod": [101, 191], "1803": [101, 102], "10122": [101, 102], "rnn_hidden": 101, "latent": 102, "logit": 103, "prob": 103, "One": [103, 111, 134, 186, 191, 192, 193], "excacli": 103, "probabilist": [104, 105, 191, 194], "fmodul": [104, 106, 111, 112, 115, 117, 118], "make_functional_with_buff": [104, 105, 106, 111, 112, 113, 115, 117, 118, 187, 191, 194], "tensor_spec": [105, 194], "distribution_kwarg": [105, 186], "cache_dist": 105, "n_empirical_estim": 105, "special": [105, 186, 191, 193], "rule": [105, 191], "respons": [105, 156, 191, 193], "get_dist": [105, 191], "__call__": [105, 184, 191], "real": 105, "median": 105, "functionalmodul": [105, 111, 119], "functionalmodulewithbuff": [105, 111, 119], "importantli": 105, "overflow": [105, 111], "fist": 105, "set_exploration_mod": [105, 152, 180, 186, 187, 194], "f": [105, 123, 186, 187, 191, 192, 193], "_log_prob": 105, "diverg": [105, 129], "ppo": [105, 124, 129, 130, 166, 167, 180, 194], "grucel": [105, 111, 191], "fnet": 105, "vmap": [105, 111, 113, 187, 191, 194], "again": [105, 193], "expend": 105, "p": [105, 113, 187, 191, 194], "expand": [105, 111, 113, 194], "contigu": [105, 111, 113, 192, 194], "normal_": [105, 111, 113], "td_vmap": [105, 111, 113], "unlik": [105, 111, 113, 127, 130, 191, 192, 194], "prevent": [105, 110, 111, 113, 114, 129, 130, 186], "scrape": [105, 111, 113], "lazy_modul": [105, 111], "18": [105, 111, 113, 187, 193], "some_input": [105, 111, 113], "some_output": [105, 111, 113], "hidden_dim": [107, 108], "scale_lb": [107, 108], "posterior": 107, "rssm": [107, 108], "1811": [107, 108], "04551": [107, 108], "obs_embed": 107, "rnn_hidden_dim": 108, "prior": 108, "dream": 108, "recurr": 108, "min": [109, 110, 114, 124, 131, 132, 186, 187], "event_dim": [109, 110], "upscal": [110, 114], "tanh_loc": [110, 114], "tanhtransform": 110, "ultim": [110, 114], "unstabl": [110, 114], "poor": [110, 114], "explos": [110, 114], "practic": [110, 114, 123, 181, 187, 193], "switch": [110, 114], "sigma": [110, 114], "root": [110, 114, 193], "formula": [110, 114, 124, 129, 130], "character": 111, "td_fmodul": 111, "td_function": 111, "td_state": 111, "isn": 111, "ensembl": [111, 131, 191], "params_repeat": 111, "buffers_repeat": 111, "irrespect": 111, "random_sampl": 111, "calss": 112, "expand_as_right": 112, "epsilongreedyexplor": 112, "rand_output_clon": 112, "det_output_clon": 112, "rand_output_idx": 112, "_rand_output": 112, "_det_output": 112, "rand_output_idx_expand": 112, "tensordict_module_wrap": 112, "partial_toler": [113, 189], "tensordictsequenci": 113, "who": 113, "AND": 113, "scan": 113, "sub": [113, 148, 156, 189, 193, 194], "tensordictsequ": 113, "spec1": 113, "net1": 113, "fnet1": 113, "params1": 113, "buffers1": 113, "fmodule1": 113, "td_module1": 113, "spec2": 113, "module2": 113, "fmodule2": 113, "params2": 113, "buffers2": 113, "td_module2": 113, "lazy_module1": 113, "lazy_module2": 113, "select_subsequ": 113, "acord": 113, "custommodul": [115, 120], "cat": [115, 186, 192, 194], "var_num": [117, 118], "regard": [117, 127, 130, 192], "perspect": [117, 127], "1707": [117, 127, 130, 167], "06887": [117, 127], "mult_one_hot": [117, 118], "customdistributionalqv": 117, "log_softmax": 117, "greedi": [118, 187], "_src": 119, "make_funct": 119, "wrapper_typ": 119, "mislead": 120, "other_kei": 120, "typeerror": 120, "min_val": [121, 123], "bias": [121, 186], "_bia": 121, "invers": 122, "invert": 122, "surject": 123, "exp": 123, "expln": 123, "biased_softplu": [123, 180], "beggin": 123, "biased_softplus_": 123, "syntax": [123, 186], "condit": 123, "met": 123, "advantage_kei": [124, 129, 130], "clip_epsilon": 124, "entropy_bonu": [124, 129, 130], "samples_mc_entropi": [124, 129, 130], "entropy_coef": [124, 129, 130], "critic_coef": [124, 129, 130], "loss_critic_typ": [124, 129, 130], "l2": [124, 125, 126, 129, 130, 131, 134], "loss": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 156, 163, 165, 166, 168, 169, 171, 174, 184, 186, 187, 192, 194], "threshold": 124, "bonu": [124, 129, 130], "favour": [124, 129, 130], "exploratori": [124, 129, 130], "mont": [124, 129, 130], "carlo": [124, 129, 130], "mani": [124, 129, 130, 131, 192, 193], "multipli": [124, 129, 130, 131, 132, 186], "loss_funct": [124, 125, 126, 130, 131, 132, 134], "discrep": [124, 125, 126, 129, 130], "l1": [124, 125, 126, 129, 130, 131, 134, 187], "smooth_l1": [124, 125, 126, 129, 130, 131, 132, 134], "throughout": [124, 127, 129, 130, 131, 132, 193], "essenti": [124, 127, 129, 130, 131, 132, 186, 192], "backpropag": [124, 127, 129, 130, 131, 132], "actor_network": [125, 131, 132], "value_network": [125, 126, 127, 132, 138, 139, 140], "delay_actor": [125, 132], "delay_valu": [125, 126, 127, 132], "input_tensordict": [125, 126, 127], "assign": [125, 126, 186, 191], "qvalueactor": [126, 180, 187], "distributionalqvalueactor": [127, 180], "disctount": 127, "loss_modul": [128, 133, 156, 173, 174, 184, 192], "dqnloss": [128, 133, 165, 180], "ddpgloss": [128, 133, 163, 174, 180, 194], "sacloss": [128, 133, 171, 180], "value_network_update_interv": 128, "contrast": 128, "soft": [128, 132, 133], "06461": 128, "often": [128, 156, 193], "dtarg": 129, "decrement": 129, "samples_mc_kl": 129, "kl": 129, "penalti": 129, "old_polici": 129, "new_polici": 129, "adapt": 129, "old": [129, 193], "thu": 129, "distanc": [129, 134, 137], "apart": 129, "advantage_diff_kei": 130, "value_error": [130, 138, 139, 140], "advantage_modul": 130, "proxim": [130, 167], "optimis": [130, 152], "flavour": [130, 186], "constrain": 130, "clipppoloss": [130, 180], "klpenppoloss": [130, 180], "regularis": 130, "06347": [130, 167], "qvalue_network": [131, 132], "num_qvalue_net": [131, 132], "sub_sample_len": 131, "priotity_kei": [131, 132], "alpha_init": [131, 132], "min_alpha": [131, 132], "max_alpha": [131, 132], "fixed_alpha": [131, 132], "target_entropi": [131, 132], "auto": [131, 132], "delay_qvalu": [131, 132], "redq": [131, 168, 169, 180, 194], "openreview": [131, 169], "ay8zfzm0tdd": [131, 169], "idea": [131, 184, 187, 192], "sac": [131, 132, 171, 172, 180, 194], "subsampl": [131, 148, 184], "know": [131, 152, 186, 187], "1801": [132, 172], "01290": [132, 172], "qvalue_network_bi": 132, "prod": 132, "n_action": 132, "redqloss": [133, 180], "999": [133, 154, 187], "epsilon": [133, 187], "prev_param": 133, "new_param": 133, "v2": [134, 143, 144, 146, 147, 162, 167, 169, 172], "strict_shap": 134, "view_a": 134, "manag": [135, 136, 152, 186, 191], "hold": [135, 136], "graph": [135, 136], "next_val_kei": 137, "pred_next_v": 137, "usus": 137, "mse": [137, 187], "q_valu": 137, "target_valu": [137, 194], "n_steps_to_next": 137, "value_next_st": 137, "lmbda": [138, 140, 141, 143, 144, 145, 146, 147, 186, 187], "average_reward": [138, 139, 140], "gradient_mod": [138, 139, 140], "1506": [138, 141, 142, 145], "02438": [138, 141, 142, 145], "exponenti": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154], "propag": [138, 139, 140], "throught": [138, 139, 140], "unused_arg": [138, 139, 140], "target_param": [138, 139, 140], "target_buff": [138, 139, 140], "value_kei": [139, 140], "gae": [139, 140, 180], "next_state_valu": [141, 142, 143, 144, 145, 146, 147, 180], "old_stat": [141, 142, 143, 145, 146], "timestep": [141, 142, 143, 144, 145, 146, 147, 187], "new_stat": [141, 142, 143, 144, 145, 146, 147], "flag": [141, 142, 143, 144, 145, 146, 147], "rolling_gamma": [143, 144, 146, 147], "ti": [143, 144, 146, 147], "event": [143, 144, 146, 147], "g1": [143, 144, 146, 147], "g2": [143, 144, 146, 147], "g3": [143, 144, 146, 147], "g4": [143, 144, 146, 147], "v3": [143, 144, 146, 147], "v4": [143, 144, 146, 147, 186], "upcom": [143, 144, 146, 147, 186], "sub_traj_len": 148, "min_sub_traj_len": 148, "just": [148, 184, 187, 191, 192, 193, 194], "full": [148, 186, 187, 189, 191, 192, 193, 194], "20": [148, 186, 187, 193, 194], "register_op": [148, 149, 150, 151, 154, 155, 157, 184], "process_optim_batch": [148, 154, 184], "_process_optim_batch_hook": [148, 184], "interv": [149, 157, 187], "clear": 149, "clear_cuda": 149, "pre_optim_step": [149, 184], "counter": [150, 184], "appar": 150, "log_pbar": [150, 151, 152, 154, 184], "progress": [150, 151, 152, 156, 184, 193], "bar": [150, 151, 152, 156, 184], "count_fram": 150, "pre_steps_log": [150, 151, 184], "lognam": 151, "r_train": 151, "logger": [151, 152, 156, 174, 178, 184, 194], "log_reward": 151, "record_interv": [152, 186], "record_fram": [152, 158, 186], "policy_explor": [152, 174, 186], "log_kei": 152, "suffix": 152, "count": [152, 158, 193], "underestim": 152, "final": [152, 186, 187, 193], "suppos": [152, 184, 191, 192, 193], "reward_evalu": 152, "video": [152, 178, 187], "reward_norm": 154, "batch_process": [154, 155, 184], "update_reward_stat": 154, "normalize_reward": 154, "make_train": [155, 180], "second": [155, 186, 187, 189, 191, 192, 193, 194], "_process_batch_hook": [155, 184], "versatil": 156, "lossmodul": [156, 173, 174], "optim_steps_per_batch": [156, 184, 186], "epoch": 156, "500": [156, 186, 187, 193, 194], "clip_grad_norm": 156, "norm": [156, 187], "partial": 156, "deriv": 156, "clamp": 156, "clip_norm": 156, "progress_bar": 156, "tqdm": [156, 186, 187], "save_trainer_interv": 156, "disk": [156, 184, 187], "10000": [156, 187], "save_trainer_fil": [156, 184], "_datacollector": [157, 160, 161, 174], "update_weights_interv": 157, "whenev": 157, "sit": [157, 187], "sync": [157, 174, 184, 186, 194], "update_weight": 157, "post_step": [157, 184], "helper": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 186, 194], "cfg": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178], "dictconfig": [158, 159, 160, 161, 162, 164, 167, 169, 170, 172, 173, 174, 175, 178], "correct": [158, 187], "divid": 158, "unknowingli": 158, "1m": 158, "annealing_fram": [158, 186], "init_env_step": [158, 159, 186], "proof_environ": [159, 162, 164, 167, 169, 172, 186], "sta": 159, "ot": 159, "actor_model_explor": [160, 161, 186], "make_env_kwarg": [160, 161], "creator": [160, 161, 176, 177, 178], "actor_net_kwarg": [162, 169, 172], "value_net_kwarg": [162, 172], "modulelist": [162, 169, 172, 194], "dummi": [162, 164, 167, 169, 172, 193], "ddpgcnnactor": [162, 180], "ddpgmlpactor": [162, 180], "ddpgcnnqnet": [162, 180], "ddpgmlpqnet": [162, 180], "cattensor": [162, 167, 169, 172, 180, 186, 187, 189, 193], "doubletofloat": [162, 167, 169, 172, 180, 186, 189], "hydra": [162, 164, 167, 169, 172], "config_stor": [162, 164, 167, 169, 172], "configstor": [162, 164, 167, 169, 172], "dataclass": [162, 164, 167, 169, 172], "halfcheetah": [162, 167, 169, 172, 186], "config_field": [162, 164, 167, 169, 172], "config_cl": [162, 164, 167, 169, 172], "ddpgmodelconfig": 162, "envconfig": [162, 164, 167, 169, 172], "make_dataclass": [162, 164, 167, 169, 172], "cls_name": [162, 164, 167, 169, 172], "config_path": [162, 164, 167, 169, 172], "config_nam": [162, 164, 167, 169, 172], "17": [162, 167, 169, 172, 186, 187], "targetnetupdat": [163, 165, 168, 171, 173, 174], "discretemodelconfig": 164, "totensorimag": [164, 180, 187, 193, 194], "pong": [164, 193], "v5": [164, 193], "pixels_onli": [164, 186, 187, 193, 194], "210": [164, 193], "160": [164, 187, 193], "ppoloss": [166, 180], "in_keys_actor": 167, "observation_kei": [167, 169, 172], "actorvalueoper": [167, 180, 191], "join": 167, "actorcriticoper": [167, 180], "parser_env_arg": [167, 169], "parser_model_args_continu": [167, 169, 172], "ppomodelconfig": 167, "actor_valu": 167, "redqloss_deprec": 168, "qvalue_net_kwarg": [169, 172], "qvalu": [169, 172, 186, 187], "redqmodelconfig": 169, "replayargsconfig": 170, "sacmodelconfig": 172, "target_net_updat": 174, "constitu": 174, "learnt": [174, 187], "tempfil": 174, "tensorboardlogg": 174, "tensordictreplaybuff": [174, 180, 186, 187], "egreedywrapp": [174, 187], "env_mak": [174, 193], "env_proof": 174, "obs_spec": 174, "net_valu": 174, "dir": [174, 184], "gettempdir": 174, "exp_nam": [174, 186], "argpars": [175, 178], "namespac": [175, 178], "parser": [175, 178], "transformed_env_constructor": [175, 180], "env_kwarg": [176, 177, 186], "num_env_per_collector": [176, 177], "num_collector": [176, 177], "less": [176, 177, 186, 187, 194], "multisyncdatacollector": [177, 180, 194], "video_tag": 178, "norm_obs_onli": 178, "use_env_cr": 178, "custom_env_mak": 178, "custom_env": 178, "return_transformed_env": 178, "action_dim_gsd": 178, "state_dim_gsd": 178, "batch_dim": [178, 192], "wheter": 178, "maker": [178, 186], "overrid": 178, "exclus": 178, "my": [179, 188], "asyncdatacollector": 180, "tensordictprioritizedreplaybuff": [180, 186, 194], "remotetensordictreplaybuff": 180, "prioritizedsampl": 180, "boundedtensorspec": 180, "unboundedcontinuoustensorspec": [180, 193], "binarydiscretetensorspec": 180, "multonehotdiscretetensorspec": 180, "discretetensorspec": 180, "multistep": [180, 186, 187], "gymlikeenv": 180, "serialenv": [180, 193], "get_available_librari": 180, "dreamerenv": 180, "dmcontrolenv": [180, 186, 189, 193], "dmcontrolwrapp": 180, "resiz": [180, 187, 193], "centercrop": 180, "grayscal": [180, 187, 193], "flattenobserv": 180, "unsqueezetransform": 180, "observationtransform": 180, "catfram": [180, 187], "finitetensordictcheck": 180, "noopresetenv": [180, 193, 194], "binarizereward": 180, "pinmemorytransform": 180, "gsdenois": 180, "tensordictprim": 180, "r3mtransform": 180, "viptransform": 180, "actorcriticwrapp": [180, 191], "is_tensordict_compat": 180, "ensure_tensordict_compat": 180, "qvaluehook": 180, "distributionalqvaluehook": 180, "duelingcnndqnet": [180, 187], "distributionaldqnnet": 180, "lstmnet": 180, "dreameractor": 180, "obsencod": 180, "obsdecod": 180, "rssmprior": 180, "rssmposterior": 180, "reset_nois": 180, "cemplann": 180, "mpcplannerbas": 180, "truncatednorm": 180, "tanhdelta": [180, 186], "onehotcategor": 180, "inv_softplu": 180, "distributionaldqnloss": [180, 187], "tdlambdaestim": 180, "tdestim": 180, "generalized_advantage_estim": 180, "vec_generalized_advantage_estim": 180, "vec_td_lambda_return_estim": 180, "vec_td_lambda_advantage_estim": [180, 186, 187], "td_lambda_return_estim": 180, "td_lambda_advantage_estim": 180, "td_advantage_estim": 180, "distance_loss": 180, "hold_out_net": [180, 186], "hold_out_param": 180, "softupd": [180, 186], "hardupd": [180, 186], "checkpoint": 180, "batchsubsampl": [180, 184], "countframeslog": 180, "logreward": [180, 184], "rewardnorm": 180, "selectkei": [180, 184], "updateweight": [180, 184], "clearcudacach": 180, "builder": [180, 187, 193], "sync_sync_collector": 180, "sync_async_collector": 180, "make_collector_offpolici": 180, "make_collector_onpolici": 180, "parallel_env_constructor": [180, 186], "make_sac_loss": 180, "make_dqn_loss": 180, "make_ddpg_loss": 180, "make_target_updat": 180, "make_ppo_loss": 180, "make_redq_loss": 180, "make_dqn_actor": 180, "make_ddpg_actor": [180, 186], "make_ppo_model": 180, "make_sac_model": 180, "make_redq_model": 180, "make_replay_buff": [180, 186], "correct_for_frame_skip": 180, "get_stats_random_rollout": [180, 186], "implement_for": 180, "solv": [181, 186, 187], "journei": 181, "guid": [181, 186, 187], "textbook": 181, "highlight": 181, "readi": [181, 189], "cours": [181, 193], "ever": 181, "cover": [181, 194], "bump": 181, "think": [181, 193], "commun": [181, 193], "benefit": 181, "submit": [181, 194], "pr": 181, "outer": [184, 186, 193], "believ": 184, "scheme": [184, 193], "substenti": 184, "sketch": 184, "_pre_steps_log_hook": 184, "_pre_optim_hook": 184, "sub_batch": 184, "_post_loss_hook": 184, "post_loss": 184, "_post_optim_hook": 184, "post_optim": 184, "_post_optim_log": 184, "post_optim_log": 184, "_post_steps_hook": 184, "_post_steps_log_hook": 184, "post_steps_log": 184, "There": [184, 187, 193], "comment": [184, 194], "categori": 184, "strategi": [184, 186], "extens": 184, "replaybuffertrain": 184, "reserv": 184, "trainerhookbas": 184, "three": [184, 187], "logginghook": 184, "logging_hook": 184, "save_dict": 184, "some_valu": 184, "els": [184, 186, 187], "torchsnapshot": 184, "ckpt_backend": 184, "py": [184, 186, 187, 189, 190, 191, 192, 193, 194], "With": [184, 192, 193], "wherea": [184, 186, 191], "pt": [184, 187], "filepath": 184, "select_kei": 184, "save_train": 184, "load_from_fil": 184, "perfectli": 184, "intern": 185, "click": [186, 187, 189, 191, 192, 193, 194], "tutori": [186, 187, 189, 190, 191, 193], "scratch": [186, 187], "familiar": [186, 187, 193], "primit": [186, 187], "suffici": [186, 187], "transpar": [186, 187], "understood": [186, 187], "understand": [186, 187], "sota": [186, 187, 194], "rather": [186, 187], "illustr": [186, 187], "deepcopi": 186, "matplotlib": [186, 187, 193], "pyplot": [186, 187, 193], "plt": [186, 187, 193], "ornsteinuhlenbeckprocesswrapp": 186, "goal": [186, 187], "reli": [186, 193], "wish": 186, "env_librari": 186, "env_task": 186, "env_arg": 186, "elif": [186, 187], "notimplementederror": 186, "rescal": 186, "leav": 186, "make_transformed_env": 186, "reward_sc": 186, "double_to_float_list": 186, "double_to_float_inv_list": 186, "dmcontrol": 186, "downstream": 186, "_stat": 186, "choos": 186, "leverag": [186, 193], "adopt": [186, 193], "env_per_collector": 186, "env_creat": [186, 194], "parallel_env": [186, 193, 194], "td_stat": 186, "_td_stat": 186, "numel": 186, "_td_stats_select": 186, "to_tensordict": [186, 187, 192], "del": [186, 194], "got": [186, 192], "isfinit": 186, "sd": 186, "get_env_stat": 186, "proof_env": 186, "env_spec": 186, "actor_net": 186, "num_lay": 186, "actor_modul": [186, 194], "q_net": 186, "qnet": 186, "assess": 186, "frequenc": 186, "make_record": 186, "recorder_obj": 186, "higher": [186, 187, 193], "likelihood": 186, "arrai": 186, "prb": 186, "buffer_s": [186, 187], "buffer_scratch_dir": 186, "adjust": 186, "device_count": [186, 187, 193], "1000000": 186, "ou": 186, "becom": [186, 193], "lr": [186, 187], "5e": 186, "weight_decai": 186, "5000": 186, "warm": 186, "tau": [186, 187], "005": [186, 187], "tmp": [186, 187], "n_steps_forward": 186, "semin": 186, "ornstein": 186, "uhlenbeck": 186, "qnet_target": 186, "annealing_num_step": [186, 187], "9205e": 186, "3762e": 186, "00": [186, 187, 190], "7278e": 186, "02": [186, 187], "9745e": 186, "0241e": 186, "3962e": 186, "7263e": 186, "4989e": 186, "1146e": 186, "3325e": 186, "2258e": 186, "4322e": 186, "1243e": 186, "0018e": 186, "7416e": 186, "6801e": 186, "4410e": 186, "2332": 186, "3817": 186, "3378": 186, "3587": 186, "3461": 186, "4451": 186, "3917": 186, "3489": 186, "5510": 186, "5762": 186, "1731": 186, "4107": 186, "3919": 186, "0521": 186, "4048": 186, "9554": 186, "crucial": [186, 187, 193], "coupl": 186, "async": [186, 194], "transmiss": 186, "3018685293": 186, "adam": [186, 187], "optimizer_actor": 186, "optimizer_qnet": 186, "total_collection_step": 186, "scheduler1": 186, "lr_schedul": 186, "cosineannealinglr": 186, "t_max": 186, "scheduler2": 186, "temporarili": 186, "differenti": 186, "henc": [186, 187], "word": [186, 193], "relat": 186, "Then": [186, 189], "fed": 186, "hood": 186, "metadata": [186, 193], "ommit": 186, "earli": [186, 194], "rewards_ev": 186, "norm_factor_train": 186, "collected_fram": 186, "pbar": [186, 187], "r0": 186, "mask": [186, 187, 192, 193, 194], "filter": 186, "current_fram": [186, 187], "sampled_tensordict": 186, "backprop": 186, "next_valu": [186, 187], "value_est": 186, "value_loss": 186, "pow": [186, 187], "sampled_tensordict_actor": 186, "actor_loss": 186, "p_in": 186, "p_dest": 186, "zip": [186, 188], "copy_": 186, "b_in": 186, "b_dest": 186, "td_record": 186, "r_evalu": 186, "set_descript": [186, 187], "4f": [186, 187], "2500": 186, "05": [186, 187], "382": 186, "37it": [186, 187], "memmapstorag": [186, 187], "xjumu200": 186, "057220458984375": 186, "mb": [186, 187, 190], "vlni_sar": 186, "002384185791015625": 186, "_mw67_0j": 186, "0095367431640625": 186, "i8ku1c87": 186, "ppsuyb5l": 186, "yhherw30": 186, "1621246337890625": 186, "llaw5cz_": 186, "3cxyfa6_": 186, "b15fsp45": 186, "o9r2y_32": 186, "c7p4a_wr": 186, "step_count": [186, 187, 194], "zvrxrpwy": 186, "steps_to_next_ob": [186, 187], "wze9b89d": 186, "019073486328125": 186, "g5dtabfi": 186, "2204": 186, "3090": 186, "7602": 186, "04": [186, 187], "40": [186, 187], "07": [186, 187], "203": 186, "16it": [186, 187], "1954": 186, "60": [186, 194], "1500": 186, "245": 186, "01it": 186, "4249": 186, "80": 186, "2000": 186, "294": 186, "61it": [186, 187], "4555": 186, "302": 186, "58it": 186, "1693": 186, "09": [186, 187], "plot": [186, 187], "quit": [186, 187, 193], "mention": [186, 187, 193], "figur": [186, 187, 191, 193], "label": [186, 187, 192], "legend": [186, 187], "xlabel": [186, 187], "ylabel": [186, 187], "tight_layout": [186, 187], "250": 186, "devid": 186, "100000": [186, 187], "batch_size_traj": 186, "simplic": [186, 191], "why": [186, 193], "td_lambda": 186, "95": [186, 187], "roughli": [186, 194], "slightli": [186, 191, 193], "four": 186, "big": [186, 187, 193], "inde": [186, 192], "revert": 186, "compli": [186, 192], "incompat": [186, 192], "bit": 186, "rand_idx": 186, "5iqwwdb3": 186, "1444091796875": 186, "06c9lmot": 186, "0476837158203125": 186, "1074jc2_": 186, "000762939453125": 186, "g0cqb3fi": 186, "w8b7sazi": 186, "24249267578125": 186, "dvw_vpv4": 186, "uoqi_emf": 186, "fijbszhg": 186, "19073486328125": 186, "xaq0yhn2": 186, "mld9ywfw": 186, "consider": 186, "titl": [186, 187], "labmda": 186, "text": 186, "minut": [186, 187, 189, 191, 192, 193, 194], "48": [186, 187, 190], "739": [186, 190], "coding_ddpg": [186, 190], "jupyt": [186, 187, 188, 189, 191, 192, 193, 194], "notebook": [186, 187, 188, 189, 191, 192, 193, 194], "ipynb": [186, 187, 189, 191, 192, 193, 194], "galleri": [186, 187, 188, 189, 191, 192, 193, 194], "sphinx": [186, 187, 188, 189, 191, 192, 193, 194], "cartpol": [187, 193], "tabl": 187, "pick": 187, "highest": 187, "discretiz": 187, "amort": 187, "seen": 187, "past": 187, "esitm": 187, "ipython": 187, "is_notebook": 187, "shell": 187, "get_ipython": 187, "__class__": 187, "__name__": 187, "zmqinteractiveshel": 187, "qtconsol": 187, "terminalinteractiveshel": 187, "nameerror": 187, "interpret": 187, "hyperparam": 187, "hopefulli": 187, "sentit": 187, "variat": 187, "2e": 187, "harder": [187, 194], "restrict": [187, 193], "n_optim": 187, "n_worker": 187, "smooth": 187, "loos": 187, "notic": 187, "eps_greedy_v": 187, "eps_greedy_val_env": 187, "predefin": 187, "init_bia": 187, "500000": 187, "techin": 187, "dummy_env": 187, "991818904876709": 187, "08038202673196793": 187, "pole": 187, "un": 187, "actuat": 187, "cart": 187, "frictionless": 187, "upright": [187, 193], "balanc": [187, 193], "next_pixels_sav": 187, "omit": 187, "eval_rollout": 187, "imageio": 187, "mimwrit": 187, "cartpole_random": 187, "mp4": 187, "fp": 187, "480": 187, "360": 187, "trick": 187, "num_ob": 187, "num_act": 187, "make_model": 187, "output_s": 187, "unflatten_kei": 187, "fairli": 187, "easi": [187, 192, 193], "params_target": 187, "buffers_target": 187, "actor_explor": 187, "eps_init": 187, "eps_end": 187, "pai": 187, "attent": [187, 191], "params_flat": 187, "flatten_kei": 187, "buffers_flat": 187, "params_target_flat": 187, "buffers_target_flat": 187, "pixels_sav": 187, "600": 187, "bootstrap": 187, "value_next_step": 187, "not_termin": 187, "could": [187, 192, 193], "significantli": 187, "deliv": [187, 194], "data_collector": 187, "traj_lengths_ev": 187, "grad_val": 187, "traj_length": 187, "mavg": 187, "traj_count": 187, "prev_traj_count": 187, "todo": [187, 192, 194], "hide": 187, "small": [187, 193], "consecut": [187, 193], "enough": 187, "send": [187, 192, 194], "sampled_data": 187, "sampled_data_out": 187, "tdstep": 187, "exp_valu": 187, "mse_loss": 187, "gv": 187, "sqrt": 187, "clip_grad_value_": 187, "p1": 187, "p2": 187, "set_": 187, "clear_output": 187, "wait": 187, "gcf": 187, "clf": 187, "figsiz": 187, "15": 187, "subplot": [187, 193], "traj": 187, "savefig": 187, "dqn_td0": 187, "png": 187, "52it": 187, "tmpdr5a_1d8": 187, "00762939453125": 187, "tmpn727pp8j": 187, "003814697265625": 187, "tmp__2nbyn0": 187, "0019073486328125": 187, "tmprvb7pv_8": 187, "000476837158203125": 187, "tmpq51z6lb1": 187, "tmplarif71x": 187, "31": 187, "25": 187, "tmpdn83tkin": 187, "tmpa_oww96v": 187, "tmpp9kzbywm": 187, "tmpxil8wjyt": 187, "23": 187, "47it": 187, "19": 187, "96": 187, "28it": 187, "12": [187, 192], "3062": 187, "5222": 187, "26": [187, 190, 193], "22": 187, "23it": 187, "8286": 187, "4031": 187, "28": 187, "7103": 187, "8095": 187, "192": 187, "3048": 187, "6264": 187, "45": 187, "224": 187, "27it": 187, "2675": 187, "5045": 187, "51": 187, "256": 187, "40it": 187, "3289": 187, "1292": 187, "58": 187, "288": 187, "31it": 187, "9970": 187, "4441": 187, "320": [187, 193], "21": [187, 189, 190], "2931": 187, "6888": 187, "70": 187, "352": 187, "05it": 187, "56": 187, "4022": 187, "5964": 187, "77": 187, "384": 187, "24": 187, "21it": 187, "8384": 187, "4597": 187, "83": 187, "416": 187, "64it": 187, "2662": 187, "6031": 187, "90": 187, "448": 187, "0303": 187, "4437": 187, "29": [187, 190, 194], "65it": 187, "8475": 187, "9333": 187, "512it": 187, "36it": 187, "2084": 187, "imshow": [187, 193], "imread": 187, "axi": 187, "1499": 187, "traj_lengths_train": 187, "saved_results_td0": 187, "better": 187, "entir": 187, "capac": 187, "smooth_l1_loss": 187, "clip_grad_norm_": 187, "dqn_tdlambda": 187, "54it": 187, "83it": 187, "tmp617ltx3l": 187, "244140625": 187, "tmpbxm9fu4h": 187, "1220703125": 187, "tmpgz08z5l8": 187, "06103515625": 187, "tmp03nnbzhx": 187, "0152587890625": 187, "tmpxnk67t_p": 187, "tmplxpf9p75": 187, "tmpf4756klf": 187, "tmpx_tvgf5_": 187, "tmp5qagih8i": 187, "tmpuqib90hh": 187, "50": 187, "07it": 187, "74it": 187, "9436": 187, "2465": 187, "7186": 187, "4815": 187, "1310": 187, "8787": 187, "51it": 187, "2941": 187, "2540": 187, "53it": 187, "9632": 187, "8119": 187, "9179": 187, "8342": 187, "84it": 187, "9073": 187, "8753": 187, "9740": 187, "1894": 187, "78it": 187, "4869": 187, "8355": 187, "90it": 187, "9830": 187, "8658": 187, "94it": 187, "1247": 187, "7157": 187, "3707": 187, "3600": 187, "27": 187, "2835": 187, "7074": 187, "8460": 187, "4245": 187, "saved_results_tdlambda": 187, "fewer": 187, "load_td0": 187, "load_tdlambda": 187, "frames_td0": 187, "frames_tdlambda": 187, "evals_td0": 187, "evals_tdlambda": 187, "mavgs_td0": 187, "mavgs_tdlambda": 187, "losses_td0": 187, "losses_tdlambda": 187, "values_td0": 187, "values_tdlambda": 187, "grad_vals_td0": 187, "grad_vals_tdlambda": 187, "traj_lengths_td0": 187, "traj_lengths_tdlambda": 187, "traj_count_td0": 187, "traj_count_tdlambda": 187, "td0": 187, "goe": [187, 193], "greatli": 187, "nth": 187, "noticebli": 187, "myopic": 187, "collectorclass": 187, "till": 187, "worst": 187, "accuraci": 187, "fanci": 187, "techniqu": 187, "358": [187, 190], "coding_dqn": [187, 190], "tutorials_python": 188, "tutorials_jupyt": 188, "distinct": 189, "abl": [189, 192, 194], "humanoid": [189, 193], "walk": [189, 193], "env1": 189, "env1_obs_kei": 189, "next_observation_stand": 189, "env2": 189, "env2_obs_kei": 189, "next_observation_walk": 189, "tdreset1": 189, "tdreset2": 189, "recov": 189, "tdreset": 189, "67": 189, "observation_stand": 189, "backbon": [189, 194], "observation_walk": 189, "policy_common": 189, "policy_stand": 189, "policy_walk": 189, "seq": 189, "But": 189, "env1_mak": 189, "env2_mak": 189, "_single_task": 189, "td_rollout": 189, "shown": 189, "668": [189, 190], "multi_task": [189, 190], "916": 190, "torchrl_demo": [190, 194], "327": [190, 194], "torch_env": [190, 193], "692": [190, 193], "106": [190, 191], "tensordict_tutori": [190, 192], "025": [190, 192], "recommand": 191, "conveni": [191, 192], "a_out": 191, "mergelinear": 191, "in_1": 191, "in_2": 191, "linear_1": 191, "linear_2": 191, "x_1": 191, "x_2": 191, "multiheadlinear": 191, "out_1": 191, "out_2": 191, "splitlinear": 191, "output_1": 191, "output_2": 191, "split_and_merge_linear": 191, "num_model": 191, "fmodel": 191, "result_td": 191, "ok": 191, "serv": [191, 193], "conflict": 191, "find": 191, "tensordictsequentialand": 191, "block": 191, "demonstr": [191, 193], "architectur": 191, "vaswani": 191, "2017": 191, "asid": 191, "src": 191, "ffn": 191, "skiplayernorm": 191, "splithead": 191, "tokenstoqkv": 191, "attentionblocktensordict": 191, "wire": 191, "connect": 191, "moreov": 191, "complic": [191, 192, 193], "to_nam": 191, "from_nam": 191, "to_dim": 191, "to_len": 191, "from_dim": 191, "latent_dim": 191, "num_head": 191, "x_out": 191, "attn": 191, "thank": 191, "transformerblockencodertensordict": 191, "transformerblockdecodertensordict": 191, "token": 191, "extract": 191, "x_from": 191, "x_to": 191, "transformerencodertensordict": 191, "num_block": 191, "transformerdecodertensordict": 191, "transformertensordict": 191, "from_len": 191, "x_encod": 191, "x_decod": 191, "ve": 191, "operar": 191, "td_token": 191, "tdtransform": 191, "t1": 191, "t2": 191, "013463497161865234": 191, "t3": 191, "t4": 191, "007737398147583008": 191, "minim": 191, "introduc": [191, 192], "margin": 191, "deal": 192, "furthermor": 192, "awai": 192, "organ": 192, "power": 192, "segment": 192, "get_data_a": 192, "get_data_b": 192, "reusabl": 192, "lot": 192, "rewriten": 192, "modal": 192, "get_data": 192, "reus": 192, "argu": 192, "dictdataset": 192, "__getitem__": 192, "collat": 192, "collate_dict_fn": 192, "dict_list": 192, "final_dict": 192, "single_dict": 192, "simpler": 192, "dataload": 192, "collate_tensordict_fn": 192, "furtherdown": 192, "_unsqueezedtensordict": 192, "_viewedtensordict": 192, "_permutedtensordict": 192, "datastructur": 192, "explicitli": 192, "caramba": 192, "int32": [192, 194], "algebra": 192, "foo": [192, 193], "multidimension": 192, "insid": [192, 193], "violat": 192, "err": 192, "mismatch": 192, "resp": 192, "among": 192, "tensordict_clon": 192, "tensodict": 192, "tuple_index": 192, "new_tensordict": 192, "get_sub_tensordict": 192, "subtensordict": 192, "pointer": 192, "subtd": 192, "td2": 192, "booltensor": 192, "fashion": 192, "clonned_tensordict": 192, "staked_tensordict": 192, "isinst": 192, "unbind": 192, "list_tensordict": 192, "comeback": 192, "permut": [192, 193, 194], "unsqueezed_tensordict": 192, "role": 193, "somewhat": 193, "supervis": 193, "unsupervis": 193, "pip": [193, 194], "rom": 193, "licens": 193, "pygam": 193, "unifi": 193, "_build_env": 193, "adventur": 193, "ram": 193, "airraid": 193, "alien": 193, "amidar": 193, "assault": 193, "happen": 193, "continuousbox": [193, 194], "inf": 193, "tool": 193, "8784": 193, "pack": 193, "brief": 193, "exectut": 193, "brax": 193, "reproduct": 193, "did": 193, "shortcut": 193, "tensordict_tprim": 193, "tensordict_rollout": [193, 194], "quickli": 193, "axesimag": 193, "0x7f3ee7b19910": 193, "inconsist": 193, "supplementari": 193, "dm": 193, "acrobot": 193, "swingup": 193, "swingup_spars": 193, "ball_in_cup": 193, "catch": 193, "balance_spars": 193, "three_pol": 193, "two_pol": 193, "finger": 193, "turn_easi": 193, "turn_hard": 193, "fish": 193, "swim": 193, "hopper": 193, "hop": 193, "run_pure_st": 193, "bring_bal": 193, "bring_peg": 193, "insert_bal": 193, "insert_peg": 193, "point_mass": 193, "reacher": 193, "swimmer": 193, "swimmer6": 193, "swimmer15": 193, "walker": 193, "dog": 193, "fetch": 193, "trot": 193, "humanoid_cmu": 193, "lqr": 193, "lqr_2_1": 193, "lqr_6_2": 193, "quadrup": 193, "escap": 193, "stacker": 193, "stack_2": 193, "stack_4": 193, "240": [193, 194], "env_transform": 193, "wrapper1": 193, "wrapper2": 193, "obviou": 193, "truth": 193, "extern": 193, "env0": 193, "env_transformed_bi": 193, "stanc": 193, "transformeddistribut": 193, "base_dist": 193, "ndunboundeddiscretetensorspec": 193, "concat": 193, "next_kei": 193, "next_orient": 193, "next_veloc": 193, "mofidi": 193, "_inv_apply_transform": 193, "_apply_transform": 193, "transformedenviron": 193, "bring": 193, "signific": 193, "speedup": 193, "moderet": 193, "computation": 193, "legitim": 193, "impli": 193, "side": 193, "incom": 193, "amongst": 193, "has_cuda": 193, "simplest": 193, "wor": 193, "convention": 193, "program": 193, "scope": 193, "difficulti": 193, "markovian": 193, "reconstruct": 193, "3288080526": 193, "sometim": 193, "constain": 193, "sleep": 193, "uuid": 193, "uuid1": 193, "bar_": 193, "get_someth": 193, "bar_0332b7d0": 193, "69b7": 193, "11ed": 193, "a846": 193, "0242ac120002": 193, "aargh": 193, "ourselv": 193, "foo_list": 193, "vec_env": [193, 194], "_dispatch_caller_parallel": 193, "0x7f3ecdcc3430": 193, "bar_069b595": 193, "a932": 193, "bar_0690dcea": 193, "b417": 193, "bar_06926dc6": 193, "a61a": 193, "121": 193, "122": 193, "parallen": 193, "carefulli": 193, "commonli": 193, "approxim": 193, "particularili": 193, "evolv": 193, "caution": 193, "previous": 193, "steadi": 193, "approx": 193, "9612": 193, "3299": 193, "1932": 193, "5192": 193, "5298": 193, "5193": 193, "_extra_st": 193, "next_observation_count": 193, "next_observation_ssq": 193, "next_observation_sum": 193, "2964": 193, "1882": 193, "2411": 193, "0968": 193, "0979": 193, "3187": 193, "dispach": 193, "absor": 193, "demo": 194, "icml": 194, "2022": 194, "dai": 194, "overview": 194, "vmoen": 194, "fb": 194, "question": 194, "team": 194, "decid": 194, "invest": 194, "platform": 194, "gym_lik": 194, "pg": 194, "vtrace": 194, "media": 194, "truli": 194, "wandb": 194, "tensorboard": 194, "tensordict1": 194, "tensordict2": 194, "tensordict_sampl": 194, "_sum_tre": 194, "06984968483448029": 194, "28791671991348267": 194, "gym_env": 194, "0000": 194, "squash": 194, "lazyconv2d": 194, "6400": 194, "backbone_modul": 194, "value_modul": 194, "fsequenc": 194, "params_expand": 194, "buffers_expand": 194, "tensordict_exp": 194, "base_modul": 194, "0137": 194, "1524": 194, "0641": 194, "grad_fn": 194, "addbackward0": 194, "indexputbackward0": 194, "8728": 194, "1335": 194, "9833": 194, "3497": 194, "6889": 194, "6433": 194, "clampbackward1": 194, "1131": 194, "1761": 194, "3425": 194, "2665": 194, "2915": 194, "6207": 194, "1441": 194, "2375": 194, "1242": 194, "1372": 194, "3810": 194, "meanbackward1": 194, "tensordicts_prealloc": 194, "tensordicts_stack": 194, "disclaim": 194, "concatmodul": 194, "loss_fn": 194, "loss_td": 194, "loss_actor": 194, "loss_valu": 194, "pred_valu": 194, "pred_value_max": 194, "target_value_max": 194, "bug": 194, "bc": 194, "year": 194, "roadmap": 194, "compris": 194, "hierarch": 194, "contributor": 194, "curiou": 194, "feedback": 194, "nascent": 194, "pypi": 194}, "objects": {"torchrl._utils": [[9, 0, 1, "", "implement_for"]], "torchrl.collectors": [[10, 0, 1, "", "MultiSyncDataCollector"], [11, 0, 1, "", "MultiaSyncDataCollector"], [12, 0, 1, "", "SyncDataCollector"], [13, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.MultiSyncDataCollector": [[10, 1, 1, "", "load_state_dict"], [10, 1, 1, "", "reset"], [10, 1, 1, "", "set_seed"], [10, 1, 1, "", "shutdown"], [10, 1, 1, "", "state_dict"], [10, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[12, 1, 1, "", "iterator"], [12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "rollout"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[14, 2, 1, "", "split_trajectories"]], "torchrl.data": [[15, 0, 1, "", "BinaryDiscreteTensorSpec"], [16, 0, 1, "", "BoundedTensorSpec"], [17, 0, 1, "", "CompositeSpec"], [18, 0, 1, "", "DiscreteTensorSpec"], [19, 0, 1, "", "MultOneHotDiscreteTensorSpec"], [20, 0, 1, "", "MultiStep"], [21, 0, 1, "", "NdBoundedTensorSpec"], [22, 0, 1, "", "NdUnboundedContinuousTensorSpec"], [23, 0, 1, "", "OneHotDiscreteTensorSpec"], [24, 0, 1, "", "PrioritizedReplayBuffer"], [25, 0, 1, "", "ReplayBuffer"], [26, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [27, 0, 1, "", "TensorDictReplayBuffer"], [28, 0, 1, "", "TensorSpec"], [29, 0, 1, "", "UnboundedContinuousTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[15, 1, 1, "", "assert_is_in"], [15, 1, 1, "", "encode"], [15, 1, 1, "", "index"], [15, 1, 1, "", "is_in"], [15, 1, 1, "", "project"], [15, 1, 1, "", "rand"], [15, 1, 1, "", "to_numpy"], [15, 1, 1, "", "type_check"], [15, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[16, 1, 1, "", "assert_is_in"], [16, 1, 1, "", "encode"], [16, 1, 1, "", "index"], [16, 1, 1, "", "is_in"], [16, 1, 1, "", "project"], [16, 1, 1, "", "rand"], [16, 1, 1, "", "to_numpy"], [16, 1, 1, "", "type_check"], [16, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.MultOneHotDiscreteTensorSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[20, 1, 1, "", "add_module"], [20, 1, 1, "", "apply"], [20, 1, 1, "", "bfloat16"], [20, 1, 1, "", "buffers"], [20, 1, 1, "", "children"], [20, 1, 1, "", "cpu"], [20, 1, 1, "", "cuda"], [20, 1, 1, "", "double"], [20, 1, 1, "", "eval"], [20, 1, 1, "", "extra_repr"], [20, 1, 1, "", "float"], [20, 1, 1, "", "forward"], [20, 1, 1, "", "get_buffer"], [20, 1, 1, "", "get_extra_state"], [20, 1, 1, "", "get_parameter"], [20, 1, 1, "", "get_submodule"], [20, 1, 1, "", "half"], [20, 1, 1, "", "ipu"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "modules"], [20, 1, 1, "", "named_buffers"], [20, 1, 1, "", "named_children"], [20, 1, 1, "", "named_modules"], [20, 1, 1, "", "named_parameters"], [20, 1, 1, "", "parameters"], [20, 1, 1, "", "register_backward_hook"], [20, 1, 1, "", "register_buffer"], [20, 1, 1, "", "register_forward_hook"], [20, 1, 1, "", "register_forward_pre_hook"], [20, 1, 1, "", "register_full_backward_hook"], [20, 1, 1, "", "register_load_state_dict_post_hook"], [20, 1, 1, "", "register_module"], [20, 1, 1, "", "register_parameter"], [20, 1, 1, "", "requires_grad_"], [20, 1, 1, "", "set_extra_state"], [20, 1, 1, "", "share_memory"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "to"], [20, 1, 1, "", "to_empty"], [20, 1, 1, "", "train"], [20, 1, 1, "", "type"], [20, 1, 1, "", "xpu"], [20, 1, 1, "", "zero_grad"]], "torchrl.data.NdBoundedTensorSpec": [[21, 1, 1, "", "assert_is_in"], [21, 1, 1, "", "encode"], [21, 1, 1, "", "index"], [21, 1, 1, "", "is_in"], [21, 1, 1, "", "project"], [21, 1, 1, "", "rand"], [21, 1, 1, "", "to_numpy"], [21, 1, 1, "", "type_check"], [21, 1, 1, "", "zero"]], "torchrl.data.NdUnboundedContinuousTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[24, 1, 1, "", "add"], [24, 1, 1, "", "extend"], [24, 1, 1, "", "sample"], [24, 1, 1, "", "update_priority"]], "torchrl.data.ReplayBuffer": [[25, 1, 1, "", "add"], [25, 1, 1, "", "extend"], [25, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "update_priority"]], "torchrl.data.TensorDictReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.rb_prototype": [[30, 0, 1, "", "RemoteTensorDictReplayBuffer"], [31, 0, 1, "", "ReplayBuffer"], [32, 0, 1, "", "TensorDictReplayBuffer"]], "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer": [[30, 1, 1, "", "add"], [30, 1, 1, "", "extend"], [30, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer": [[31, 1, 1, "", "add"], [31, 1, 1, "", "extend"], [31, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer": [[32, 1, 1, "", "add"], [32, 1, 1, "", "extend"], [32, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.samplers": [[33, 0, 1, "", "PrioritizedSampler"], [34, 0, 1, "", "RandomSampler"], [35, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[33, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[36, 0, 1, "", "LazyMemmapStorage"], [37, 0, 1, "", "LazyTensorStorage"], [38, 0, 1, "", "ListStorage"], [39, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[36, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[39, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[40, 0, 1, "", "RoundRobinWriter"], [41, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[40, 1, 1, "", "add"], [40, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "extend"]], "torchrl.envs": [[42, 0, 1, "", "EnvBase"], [43, 0, 1, "", "GymLikeEnv"], [44, 2, 1, "", "ModelBasedEnvBase"], [45, 0, 1, "", "ParallelEnv"], [46, 0, 1, "", "SerialEnv"], [44, 1, 1, "", "rand_step"], [44, 1, 1, "", "reset"], [44, 1, 1, "", "rollout"], [44, 1, 1, "", "set_seed"], [44, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[42, 1, 1, "", "add_module"], [42, 1, 1, "", "apply"], [42, 3, 1, "", "batch_locked"], [42, 1, 1, "", "bfloat16"], [42, 1, 1, "", "buffers"], [42, 1, 1, "", "children"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 1, 1, "", "double"], [42, 1, 1, "", "eval"], [42, 1, 1, "", "extra_repr"], [42, 1, 1, "", "fake_tensordict"], [42, 1, 1, "", "float"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_buffer"], [42, 1, 1, "", "get_extra_state"], [42, 1, 1, "", "get_parameter"], [42, 1, 1, "", "get_submodule"], [42, 1, 1, "", "half"], [42, 1, 1, "", "ipu"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "modules"], [42, 1, 1, "", "named_buffers"], [42, 1, 1, "", "named_children"], [42, 1, 1, "", "named_modules"], [42, 1, 1, "", "named_parameters"], [42, 1, 1, "", "parameters"], [42, 1, 1, "id0", "rand_step"], [42, 1, 1, "", "register_backward_hook"], [42, 1, 1, "", "register_buffer"], [42, 1, 1, "", "register_forward_hook"], [42, 1, 1, "", "register_forward_pre_hook"], [42, 1, 1, "", "register_full_backward_hook"], [42, 1, 1, "", "register_load_state_dict_post_hook"], [42, 1, 1, "", "register_module"], [42, 1, 1, "", "register_parameter"], [42, 1, 1, "", "requires_grad_"], [42, 1, 1, "id1", "reset"], [42, 1, 1, "id2", "rollout"], [42, 1, 1, "", "set_extra_state"], [42, 1, 1, "id3", "set_seed"], [42, 1, 1, "", "share_memory"], [42, 3, 1, "", "specs"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "id4", "step"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_empty"], [42, 1, 1, "", "train"], [42, 1, 1, "", "type"], [42, 1, 1, "", "xpu"], [42, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[43, 1, 1, "", "add_module"], [43, 1, 1, "", "apply"], [43, 3, 1, "", "batch_locked"], [43, 1, 1, "", "bfloat16"], [43, 1, 1, "", "buffers"], [43, 1, 1, "", "children"], [43, 1, 1, "", "close"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 1, 1, "", "double"], [43, 1, 1, "", "eval"], [43, 1, 1, "", "extra_repr"], [43, 1, 1, "", "fake_tensordict"], [43, 1, 1, "", "float"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "get_buffer"], [43, 1, 1, "", "get_extra_state"], [43, 1, 1, "", "get_parameter"], [43, 1, 1, "", "get_submodule"], [43, 1, 1, "", "half"], [43, 1, 1, "", "ipu"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "modules"], [43, 1, 1, "", "named_buffers"], [43, 1, 1, "", "named_children"], [43, 1, 1, "", "named_modules"], [43, 1, 1, "", "named_parameters"], [43, 1, 1, "", "parameters"], [43, 1, 1, "", "rand_step"], [43, 1, 1, "", "read_action"], [43, 1, 1, "", "read_done"], [43, 1, 1, "", "read_obs"], [43, 1, 1, "", "read_reward"], [43, 1, 1, "", "register_backward_hook"], [43, 1, 1, "", "register_buffer"], [43, 1, 1, "", "register_forward_hook"], [43, 1, 1, "", "register_forward_pre_hook"], [43, 1, 1, "", "register_full_backward_hook"], [43, 1, 1, "", "register_load_state_dict_post_hook"], [43, 1, 1, "", "register_module"], [43, 1, 1, "", "register_parameter"], [43, 1, 1, "", "requires_grad_"], [43, 1, 1, "", "reset"], [43, 1, 1, "", "rollout"], [43, 1, 1, "", "set_extra_state"], [43, 1, 1, "", "set_info_dict_reader"], [43, 1, 1, "", "set_seed"], [43, 1, 1, "", "share_memory"], [43, 3, 1, "", "specs"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "", "step"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_empty"], [43, 1, 1, "", "train"], [43, 1, 1, "", "type"], [43, 1, 1, "", "xpu"], [43, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 3, 1, "", "batch_locked"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "fake_tensordict"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "share_memory"], [45, 3, 1, "", "specs"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "step"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "update_kwargs"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[46, 1, 1, "", "add_module"], [46, 1, 1, "", "apply"], [46, 3, 1, "", "batch_locked"], [46, 1, 1, "", "bfloat16"], [46, 1, 1, "", "buffers"], [46, 1, 1, "", "children"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 1, 1, "", "double"], [46, 1, 1, "", "eval"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "fake_tensordict"], [46, 1, 1, "", "float"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_buffer"], [46, 1, 1, "", "get_extra_state"], [46, 1, 1, "", "get_parameter"], [46, 1, 1, "", "get_submodule"], [46, 1, 1, "", "half"], [46, 1, 1, "", "ipu"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "modules"], [46, 1, 1, "", "named_buffers"], [46, 1, 1, "", "named_children"], [46, 1, 1, "", "named_modules"], [46, 1, 1, "", "named_parameters"], [46, 1, 1, "", "parameters"], [46, 1, 1, "", "rand_step"], [46, 1, 1, "", "register_backward_hook"], [46, 1, 1, "", "register_buffer"], [46, 1, 1, "", "register_forward_hook"], [46, 1, 1, "", "register_forward_pre_hook"], [46, 1, 1, "", "register_full_backward_hook"], [46, 1, 1, "", "register_load_state_dict_post_hook"], [46, 1, 1, "", "register_module"], [46, 1, 1, "", "register_parameter"], [46, 1, 1, "", "requires_grad_"], [46, 1, 1, "", "reset"], [46, 1, 1, "", "rollout"], [46, 1, 1, "", "set_extra_state"], [46, 1, 1, "", "set_seed"], [46, 1, 1, "", "share_memory"], [46, 3, 1, "", "specs"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "step"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_empty"], [46, 1, 1, "", "train"], [46, 1, 1, "", "type"], [46, 1, 1, "", "update_kwargs"], [46, 1, 1, "", "xpu"], [46, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.dm_control": [[47, 2, 1, "", "DMControlEnv"], [48, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[49, 2, 1, "", "GymEnv"], [50, 2, 1, "", "GymWrapper"]], "torchrl.envs.model_based.dreamer": [[51, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[52, 0, 1, "", "BinarizeReward"], [53, 0, 1, "", "CatFrames"], [54, 0, 1, "", "CatTensors"], [55, 0, 1, "", "CenterCrop"], [56, 0, 1, "", "Compose"], [57, 0, 1, "", "DoubleToFloat"], [58, 0, 1, "", "FiniteTensorDictCheck"], [59, 0, 1, "", "FlattenObservation"], [60, 0, 1, "", "GrayScale"], [61, 0, 1, "", "NoopResetEnv"], [62, 0, 1, "", "ObservationNorm"], [63, 0, 1, "", "ObservationTransform"], [64, 0, 1, "", "PinMemoryTransform"], [65, 0, 1, "", "R3MTransform"], [66, 0, 1, "", "Resize"], [67, 0, 1, "", "RewardClipping"], [68, 0, 1, "", "RewardScaling"], [69, 0, 1, "", "TensorDictPrimer"], [70, 0, 1, "", "ToTensorImage"], [71, 0, 1, "", "Transform"], [72, 0, 1, "", "TransformedEnv"], [73, 0, 1, "", "UnsqueezeTransform"], [74, 0, 1, "", "VIPTransform"], [75, 0, 1, "", "VecNorm"], [76, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[52, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[53, 1, 1, "", "reset"], [53, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[54, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[55, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[56, 1, 1, "", "reset"], [56, 1, 1, "", "to"], [56, 1, 1, "", "transform_input_spec"], [56, 1, 1, "", "transform_observation_spec"], [56, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[57, 1, 1, "", "transform_input_spec"], [57, 1, 1, "", "transform_observation_spec"], [57, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.FlattenObservation": [[59, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[60, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[61, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[62, 1, 1, "", "init_stats"], [62, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[65, 1, 1, "", "forward"], [65, 1, 1, "", "reset"], [65, 1, 1, "", "to"], [65, 1, 1, "", "transform_input_spec"], [65, 1, 1, "", "transform_observation_spec"], [65, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Resize": [[66, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[67, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[68, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[69, 1, 1, "", "reset"], [69, 1, 1, "", "to"], [69, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[70, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[71, 1, 1, "", "forward"], [71, 1, 1, "", "reset"], [71, 1, 1, "", "transform_input_spec"], [71, 1, 1, "", "transform_observation_spec"], [71, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[72, 3, 1, "", "action_spec"], [72, 3, 1, "", "batch_locked"], [72, 1, 1, "", "eval"], [72, 3, 1, "", "input_spec"], [72, 1, 1, "", "load_state_dict"], [72, 3, 1, "", "observation_spec"], [72, 3, 1, "", "reward_spec"], [72, 1, 1, "", "set_seed"], [72, 1, 1, "", "state_dict"], [72, 1, 1, "", "to"], [72, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[73, 1, 1, "", "forward"], [73, 1, 1, "", "transform_input_spec"], [73, 1, 1, "", "transform_observation_spec"], [73, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPTransform": [[74, 1, 1, "", "forward"], [74, 1, 1, "", "reset"], [74, 1, 1, "", "to"], [74, 1, 1, "", "transform_input_spec"], [74, 1, 1, "", "transform_observation_spec"], [74, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VecNorm": [[75, 1, 1, "", "build_td_for_shared_vecnorm"], [75, 1, 1, "", "get_extra_state"], [75, 1, 1, "", "set_extra_state"], [75, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[76, 1, 1, "", "reset"]], "torchrl.envs.utils": [[77, 2, 1, "", "exploration_mode"], [78, 2, 1, "", "get_available_libraries"], [79, 2, 1, "", "set_exploration_mode"], [80, 2, 1, "", "step_mdp"]], "torchrl.modules": [[81, 0, 1, "", "Actor"], [82, 0, 1, "", "ActorCriticOperator"], [83, 0, 1, "", "ActorCriticWrapper"], [84, 0, 1, "", "ActorValueOperator"], [85, 0, 1, "", "CEMPlanner"], [86, 0, 1, "", "ConvNet"], [87, 0, 1, "", "DdpgCnnActor"], [88, 0, 1, "", "DdpgCnnQNet"], [89, 0, 1, "", "DdpgMlpActor"], [90, 0, 1, "", "DdpgMlpQNet"], [91, 0, 1, "", "Delta"], [92, 0, 1, "", "DistributionalDQNnet"], [93, 0, 1, "", "DistributionalQValueActor"], [94, 0, 1, "", "DreamerActor"], [95, 0, 1, "", "DuelingCnnDQNet"], [96, 0, 1, "", "LSTMNet"], [97, 0, 1, "", "MLP"], [98, 0, 1, "", "MPCPlannerBase"], [99, 0, 1, "", "NoisyLazyLinear"], [100, 0, 1, "", "NoisyLinear"], [101, 0, 1, "", "ObsDecoder"], [102, 0, 1, "", "ObsEncoder"], [103, 0, 1, "", "OneHotCategorical"], [104, 0, 1, "", "ProbabilisticActor"], [105, 0, 1, "", "ProbabilisticTensorDictModule"], [106, 0, 1, "", "QValueActor"], [107, 0, 1, "", "RSSMPosterior"], [108, 0, 1, "", "RSSMPrior"], [109, 0, 1, "", "TanhDelta"], [110, 0, 1, "", "TanhNormal"], [111, 0, 1, "", "TensorDictModule"], [112, 0, 1, "", "TensorDictModuleWrapper"], [113, 0, 1, "", "TensorDictSequential"], [114, 0, 1, "", "TruncatedNormal"], [115, 0, 1, "", "ValueOperator"], [116, 0, 1, "", "reset_noise"]], "torchrl.modules.ActorCriticOperator": [[82, 1, 1, "", "get_critic_operator"], [82, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorCriticWrapper": [[83, 1, 1, "", "get_policy_operator"], [83, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorValueOperator": [[84, 1, 1, "", "get_policy_operator"], [84, 1, 1, "", "get_value_operator"]], "torchrl.modules.CEMPlanner": [[85, 1, 1, "", "planning"]], "torchrl.modules.DdpgCnnActor": [[87, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[88, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[89, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[90, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[91, 1, 1, "", "log_prob"], [91, 3, 1, "", "mean"], [91, 3, 1, "", "mode"], [91, 1, 1, "", "rsample"], [91, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[92, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[94, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[95, 1, 1, "", "forward"]], "torchrl.modules.LSTMNet": [[96, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[97, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[98, 1, 1, "", "forward"], [98, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[99, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[101, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[102, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[103, 1, 1, "", "log_prob"], [103, 3, 1, "", "mode"], [103, 1, 1, "", "rsample"], [103, 1, 1, "", "sample"]], "torchrl.modules.ProbabilisticTensorDictModule": [[105, 1, 1, "", "forward"], [105, 1, 1, "", "make_functional_with_buffers"]], "torchrl.modules.RSSMPosterior": [[107, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[108, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[109, 3, 1, "", "mean"], [109, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[110, 3, 1, "", "mode"]], "torchrl.modules.TensorDictModule": [[111, 1, 1, "", "forward"], [111, 1, 1, "", "make_functional_with_buffers"], [111, 1, 1, "", "random"], [111, 1, 1, "", "random_sample"], [111, 1, 1, "", "to"]], "torchrl.modules.TensorDictModuleWrapper": [[112, 1, 1, "", "forward"]], "torchrl.modules.TensorDictSequential": [[113, 1, 1, "", "forward"], [113, 1, 1, "", "make_functional_with_buffers"], [113, 1, 1, "", "select_subsequence"]], "torchrl.modules.TruncatedNormal": [[114, 1, 1, "", "log_prob"], [114, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module.actors": [[117, 0, 1, "", "DistributionalQValueHook"], [118, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[119, 0, 1, "", "ensure_tensordict_compatible"], [120, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[121, 0, 1, "", "biased_softplus"], [122, 0, 1, "", "inv_softplus"], [123, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[121, 1, 1, "", "forward"]], "torchrl.objectives": [[124, 0, 1, "", "ClipPPOLoss"], [125, 0, 1, "", "DDPGLoss"], [126, 0, 1, "", "DQNLoss"], [127, 0, 1, "", "DistributionalDQNLoss"], [128, 0, 1, "", "HardUpdate"], [129, 0, 1, "", "KLPENPPOLoss"], [130, 0, 1, "", "PPOLoss"], [131, 0, 1, "", "REDQLoss"], [132, 0, 1, "", "SACLoss"], [133, 0, 1, "", "SoftUpdate"], [134, 0, 1, "", "distance_loss"], [135, 0, 1, "", "hold_out_net"], [136, 0, 1, "", "hold_out_params"], [137, 0, 1, "", "next_state_value"]], "torchrl.objectives.ClipPPOLoss": [[124, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[125, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[126, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[127, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[129, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[130, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[131, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[132, 1, 1, "", "forward"]], "torchrl.objectives.value": [[138, 0, 1, "", "GAE"], [139, 0, 1, "", "TDEstimate"], [140, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[138, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[139, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[140, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[141, 0, 1, "", "generalized_advantage_estimate"], [142, 0, 1, "", "td_advantage_estimate"], [143, 0, 1, "", "td_lambda_advantage_estimate"], [144, 0, 1, "", "td_lambda_return_estimate"], [145, 0, 1, "", "vec_generalized_advantage_estimate"], [146, 0, 1, "", "vec_td_lambda_advantage_estimate"], [147, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.trainers": [[148, 0, 1, "", "BatchSubSampler"], [149, 0, 1, "", "ClearCudaCache"], [150, 0, 1, "", "CountFramesLog"], [151, 0, 1, "", "LogReward"], [152, 0, 1, "", "Recorder"], [153, 0, 1, "", "ReplayBuffer"], [154, 0, 1, "", "RewardNormalizer"], [155, 0, 1, "", "SelectKeys"], [156, 0, 1, "", "Trainer"], [157, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.ReplayBuffer": [[153, 1, 1, "", "add"], [153, 1, 1, "", "extend"], [153, 1, 1, "", "sample"]], "torchrl.trainers.helpers": [[158, 2, 1, "", "correct_for_frame_skip"], [159, 2, 1, "", "get_stats_random_rollout"], [160, 2, 1, "", "make_collector_offpolicy"], [161, 2, 1, "", "make_collector_onpolicy"], [162, 2, 1, "", "make_ddpg_actor"], [163, 2, 1, "", "make_ddpg_loss"], [164, 2, 1, "", "make_dqn_actor"], [165, 2, 1, "", "make_dqn_loss"], [166, 2, 1, "", "make_ppo_loss"], [167, 2, 1, "", "make_ppo_model"], [168, 2, 1, "", "make_redq_loss"], [169, 2, 1, "", "make_redq_model"], [170, 2, 1, "", "make_replay_buffer"], [171, 2, 1, "", "make_sac_loss"], [172, 2, 1, "", "make_sac_model"], [173, 2, 1, "", "make_target_updater"], [174, 2, 1, "", "make_trainer"], [175, 2, 1, "", "parallel_env_constructor"], [176, 2, 1, "", "sync_async_collector"], [177, 2, 1, "", "sync_sync_collector"], [178, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 5, 182, 183, 184, 185, 186, 187, 193, 194], "document": [0, 8], "tutori": 0, "refer": [0, 180], "indic": 0, "tabl": 0, "collector": [1, 186], "packag": [1, 2, 3, 182, 183, 184, 185], "data": [1, 2, 186, 194], "helper": [1, 3], "function": [1, 194], "replai": [2, 186, 194], "buffer": [2, 186, 194], "compos": [2, 56], "prototyp": 2, "tensorspec": [2, 28], "util": [2, 182, 183, 184], "env": [3, 193, 194], "domain": 3, "specif": [3, 189], "librari": [3, 194], "transform": [3, 71, 186, 191, 193, 194], "work": [4, 5], "gym": [4, 193], "version": [4, 6], "habitat": 5, "lab": 5, "set": [5, 192], "up": 5, "your": [5, 186], "environ": [5, 6, 186, 187, 189, 193, 194], "instal": [5, 6, 194], "from": [5, 6], "pip": [5, 6], "us": [5, 8, 186, 187, 191, 194], "common": [5, 6], "issu": [5, 6], "about": 6, "mujoco": 6, "prerequisit": 6, "render": [6, 193], "all": 6, "new": 6, "bindindg": 6, "2": [6, 191], "1": [6, 191], "old": 6, "bind": 6, "py": 6, "option": 6, "clone": 6, "repo": [6, 8], "when": 6, "pro": 7, "tip": 7, "train": [7, 186, 187], "cluster": 7, "resourc": 8, "pytorch": 8, "functorch": [8, 191], "rl": [8, 191, 194], "blog": 8, "websit": 8, "educ": 8, "forum": 8, "implement_for": 9, "multisyncdatacollector": 10, "multiasyncdatacollector": 11, "syncdatacollector": 12, "asyncdatacollector": 13, "split_trajectori": 14, "binarydiscretetensorspec": 15, "boundedtensorspec": 16, "compositespec": 17, "discretetensorspec": 18, "multonehotdiscretetensorspec": 19, "multistep": 20, "ndboundedtensorspec": 21, "ndunboundedcontinuoustensorspec": 22, "onehotdiscretetensorspec": 23, "prioritizedreplaybuff": 24, "replaybuff": [25, 31, 153], "tensordictprioritizedreplaybuff": 26, "tensordictreplaybuff": [27, 32], "unboundedcontinuoustensorspec": 29, "remotetensordictreplaybuff": 30, "prioritizedsampl": 33, "randomsampl": 34, "sampler": 35, "lazymemmapstorag": 36, "lazytensorstorag": 37, "liststorag": 38, "storag": 39, "roundrobinwrit": 40, "writer": 41, "envbas": 42, "gymlikeenv": 43, "modelbasedenvbas": 44, "parallelenv": 45, "serialenv": 46, "dmcontrolenv": 47, "dmcontrolwrapp": 48, "gymenv": 49, "gymwrapp": 50, "dreamerenv": 51, "binarizereward": 52, "catfram": 53, "cattensor": 54, "centercrop": 55, "doubletofloat": 57, "finitetensordictcheck": 58, "flattenobserv": 59, "grayscal": 60, "noopresetenv": 61, "observationnorm": 62, "observationtransform": 63, "pinmemorytransform": 64, "r3mtransform": 65, "resiz": 66, "rewardclip": 67, "rewardsc": 68, "tensordictprim": 69, "totensorimag": 70, "transformedenv": 72, "unsqueezetransform": 73, "viptransform": 74, "vecnorm": [75, 193], "gsdenois": 76, "exploration_mod": 77, "get_available_librari": 78, "set_exploration_mod": 79, "step_mdp": 80, "actor": [81, 191], "actorcriticoper": [82, 191], "actorcriticwrapp": 83, "actorvalueoper": 84, "cemplann": 85, "convnet": 86, "ddpgcnnactor": 87, "ddpgcnnqnet": 88, "ddpgmlpactor": 89, "ddpgmlpqnet": 90, "delta": 91, "distributionaldqnnet": 92, "distributionalqvalueactor": 93, "dreameractor": 94, "duelingcnndqnet": 95, "lstmnet": 96, "mlp": 97, "mpcplannerbas": 98, "noisylazylinear": 99, "noisylinear": 100, "obsdecod": 101, "obsencod": 102, "onehotcategor": 103, "probabilisticactor": [104, 191], "probabilistictensordictmodul": [105, 191], "qvalueactor": 106, "rssmposterior": 107, "rssmprior": 108, "tanhdelta": 109, "tanhnorm": 110, "tensordictmodul": [111, 191, 194], "tensordictmodulewrapp": 112, "tensordictsequenti": [113, 191], "truncatednorm": 114, "valueoper": 115, "reset_nois": 116, "distributionalqvaluehook": 117, "qvaluehook": 118, "ensure_tensordict_compat": 119, "is_tensordict_compat": 120, "biased_softplu": 121, "inv_softplu": 122, "map": 123, "clipppoloss": 124, "ddpgloss": 125, "dqnloss": 126, "distributionaldqnloss": 127, "hardupd": 128, "klpenppoloss": 129, "ppoloss": 130, "redqloss": 131, "sacloss": 132, "softupd": 133, "distance_loss": 134, "hold_out_net": 135, "hold_out_param": 136, "next_state_valu": 137, "gae": 138, "tdestim": 139, "tdlambdaestim": 140, "generalized_advantage_estim": 141, "td_advantage_estim": 142, "td_lambda_advantage_estim": 143, "td_lambda_return_estim": 144, "vec_generalized_advantage_estim": 145, "vec_td_lambda_advantage_estim": 146, "vec_td_lambda_return_estim": 147, "batchsubsampl": 148, "clearcudacach": 149, "countframeslog": 150, "logreward": 151, "record": [152, 186], "rewardnorm": 154, "selectkei": 155, "trainer": [156, 184], "updateweight": 157, "correct_for_frame_skip": 158, "get_stats_random_rollout": 159, "make_collector_offpolici": 160, "make_collector_onpolici": 161, "make_ddpg_actor": 162, "make_ddpg_loss": 163, "make_dqn_actor": 164, "make_dqn_loss": 165, "make_ppo_loss": 166, "make_ppo_model": 167, "make_redq_loss": 168, "make_redq_model": 169, "make_replay_buff": 170, "make_sac_loss": 171, "make_sac_model": 172, "make_target_updat": 173, "make_train": 174, "parallel_env_constructor": 175, "sync_async_collector": 176, "sync_sync_collector": 177, "transformed_env_constructor": 178, "readm": [179, 188], "demo": [179, 188], "api": 180, "knowledg": 181, "base": [181, 187], "contribut": [181, 194], "content": 181, "modul": [182, 194], "tensordict": [182, 192, 194], "hook": [182, 184], "model": [182, 186, 187, 194], "explor": 182, "planner": 182, "distribut": 182, "object": [183, 186, 194], "dqn": [183, 187], "ddpg": [183, 186], "sac": 183, "redq": 183, "ppo": 183, "return": 183, "checkpoint": 184, "builder": 184, "_util": 185, "code": [186, 187, 192], "parallel": [186, 189, 193], "execut": [186, 189], "normal": 186, "observ": 186, "build": [186, 187], "evalu": 186, "hyperparamet": [186, 187], "initi": 186, "time": [186, 190], "polici": [186, 189], "experi": 186, "result": 186, "sampl": 186, "trajectori": 186, "td": [186, 187], "lambda": [186, 187], "pixel": 187, "The": 187, "problem": 187, "deep": 187, "q": 187, "network": 187, "regular": 187, "loop": 187, "conclus": 187, "possibl": 187, "improv": [187, 192], "task": 189, "multi": 189, "divers": 189, "rollout": [189, 193], "comput": 190, "exampl": 191, "simpl": 191, "usag": [191, 192], "multipl": 191, "input": 191, "3": 191, "output": 191, "4": 191, "combin": 191, "5": 191, "compat": 191, "do": [191, 192], "": 191, "don": 191, "t": [191, 192], "showcas": 191, "implement": 191, "benchmark": 191, "modular": 192, "can": 192, "i": 192, "thi": 192, "python": 192, "dict": 192, "structur": 192, "dictionari": 192, "featur": 192, "get": 192, "kei": 192, "valu": 192, "updat": 192, "tensordict_or_dict": 192, "del": 192, "tensor": 192, "batch": 192, "size": 192, "devic": [192, 193], "memori": 192, "share": 192, "via": 192, "physic": 192, "oper": 192, "spec": 193, "seed": 193, "reset": 193, "step": 193, "frame_skip": 193, "deepmind": 193, "control": 193, "run": 193, "close": 193, "access": 193, "attribut": 193, "kwarg": 193, "introduct": 194, "chang": 194, "config": 194, "vector": 194, "sequenc": 194, "program": 194, "ensembl": 194, "meta": 194, "special": 194, "class": 194, "state": 194}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials:": [[0, null]], "References:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers (Prototype)": [[2, "composable-replay-buffers-prototype"]], "TensorSpec": [[2, "tensorspec"], [28, "tensorspec"]], "Utils": [[2, "utils"], [182, "utils"], [183, "utils"], [184, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Transforms": [[3, "transforms"], [186, "transforms"], [194, "transforms"]], "Working with gym": [[4, "working-with-gym"]], "Versioning": [[4, "versioning"]], "Working with habitat-lab": [[5, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[5, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[5, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[5, "installing-torchrl"]], "Using Habitat": [[5, "using-habitat"]], "Common issues": [[5, "common-issues"]], "About MuJoCo": [[6, "about-mujoco"]], "Installing MuJoCo": [[6, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[6, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[6, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[6, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[6, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[6, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[6, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips": [[7, "pro-tips"]], "Training on a cluster": [[7, "training-on-a-cluster"]], "Useful resources": [[8, "useful-resources"]], "Pytorch documentation": [[8, "pytorch-documentation"]], "functorch documentation": [[8, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[8, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[8, "educational-resource"]], "Forums": [[8, "forums"]], "Repos": [[8, "repos"]], "implement_for": [[9, "implement-for"]], "MultiSyncDataCollector": [[10, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[11, "multiasyncdatacollector"]], "SyncDataCollector": [[12, "syncdatacollector"]], "aSyncDataCollector": [[13, "asyncdatacollector"]], "split_trajectories": [[14, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[15, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[16, "boundedtensorspec"]], "CompositeSpec": [[17, "compositespec"]], "DiscreteTensorSpec": [[18, "discretetensorspec"]], "MultOneHotDiscreteTensorSpec": [[19, "multonehotdiscretetensorspec"]], "MultiStep": [[20, "multistep"]], "NdBoundedTensorSpec": [[21, "ndboundedtensorspec"]], "NdUnboundedContinuousTensorSpec": [[22, "ndunboundedcontinuoustensorspec"]], "OneHotDiscreteTensorSpec": [[23, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[24, "prioritizedreplaybuffer"]], "ReplayBuffer": [[25, "replaybuffer"], [31, "replaybuffer"], [153, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[26, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[27, "tensordictreplaybuffer"], [32, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[29, "unboundedcontinuoustensorspec"]], "RemoteTensorDictReplayBuffer": [[30, "remotetensordictreplaybuffer"]], "PrioritizedSampler": [[33, "prioritizedsampler"]], "RandomSampler": [[34, "randomsampler"]], "Sampler": [[35, "sampler"]], "LazyMemmapStorage": [[36, "lazymemmapstorage"]], "LazyTensorStorage": [[37, "lazytensorstorage"]], "ListStorage": [[38, "liststorage"]], "Storage": [[39, "storage"]], "RoundRobinWriter": [[40, "roundrobinwriter"]], "Writer": [[41, "writer"]], "EnvBase": [[42, "envbase"]], "GymLikeEnv": [[43, "gymlikeenv"]], "ModelBasedEnvBase": [[44, "modelbasedenvbase"]], "ParallelEnv": [[45, "parallelenv"]], "SerialEnv": [[46, "serialenv"]], "DMControlEnv": [[47, "dmcontrolenv"]], "DMControlWrapper": [[48, "dmcontrolwrapper"]], "GymEnv": [[49, "gymenv"]], "GymWrapper": [[50, "gymwrapper"]], "DreamerEnv": [[51, "dreamerenv"]], "BinarizeReward": [[52, "binarizereward"]], "CatFrames": [[53, "catframes"]], "CatTensors": [[54, "cattensors"]], "CenterCrop": [[55, "centercrop"]], "Compose": [[56, "compose"]], "DoubleToFloat": [[57, "doubletofloat"]], "FiniteTensorDictCheck": [[58, "finitetensordictcheck"]], "FlattenObservation": [[59, "flattenobservation"]], "GrayScale": [[60, "grayscale"]], "NoopResetEnv": [[61, "noopresetenv"]], "ObservationNorm": [[62, "observationnorm"]], "ObservationTransform": [[63, "observationtransform"]], "PinMemoryTransform": [[64, "pinmemorytransform"]], "R3MTransform": [[65, "r3mtransform"]], "Resize": [[66, "resize"]], "RewardClipping": [[67, "rewardclipping"]], "RewardScaling": [[68, "rewardscaling"]], "TensorDictPrimer": [[69, "tensordictprimer"]], "ToTensorImage": [[70, "totensorimage"]], "Transform": [[71, "transform"]], "TransformedEnv": [[72, "transformedenv"]], "UnsqueezeTransform": [[73, "unsqueezetransform"]], "VIPTransform": [[74, "viptransform"]], "VecNorm": [[75, "vecnorm"], [193, "vecnorm"]], "gSDENoise": [[76, "gsdenoise"]], "exploration_mode": [[77, "exploration-mode"]], "get_available_libraries": [[78, "get-available-libraries"]], "set_exploration_mode": [[79, "set-exploration-mode"]], "step_mdp": [[80, "step-mdp"]], "Actor": [[81, "actor"], [191, "actor"]], "ActorCriticOperator": [[82, "actorcriticoperator"], [191, "actorcriticoperator"]], "ActorCriticWrapper": [[83, "actorcriticwrapper"]], "ActorValueOperator": [[84, "actorvalueoperator"]], "CEMPlanner": [[85, "cemplanner"]], "ConvNet": [[86, "convnet"]], "DdpgCnnActor": [[87, "ddpgcnnactor"]], "DdpgCnnQNet": [[88, "ddpgcnnqnet"]], "DdpgMlpActor": [[89, "ddpgmlpactor"]], "DdpgMlpQNet": [[90, "ddpgmlpqnet"]], "Delta": [[91, "delta"]], "DistributionalDQNnet": [[92, "distributionaldqnnet"]], "DistributionalQValueActor": [[93, "distributionalqvalueactor"]], "DreamerActor": [[94, "dreameractor"]], "DuelingCnnDQNet": [[95, "duelingcnndqnet"]], "LSTMNet": [[96, "lstmnet"]], "MLP": [[97, "mlp"]], "MPCPlannerBase": [[98, "mpcplannerbase"]], "NoisyLazyLinear": [[99, "noisylazylinear"]], "NoisyLinear": [[100, "noisylinear"]], "ObsDecoder": [[101, "obsdecoder"]], "ObsEncoder": [[102, "obsencoder"]], "OneHotCategorical": [[103, "onehotcategorical"]], "ProbabilisticActor": [[104, "probabilisticactor"], [191, "probabilisticactor"]], "ProbabilisticTensorDictModule": [[105, "probabilistictensordictmodule"], [191, "probabilistictensordictmodule"]], "QValueActor": [[106, "qvalueactor"]], "RSSMPosterior": [[107, "rssmposterior"]], "RSSMPrior": [[108, "rssmprior"]], "TanhDelta": [[109, "tanhdelta"]], "TanhNormal": [[110, "tanhnormal"]], "TensorDictModule": [[111, "tensordictmodule"], [191, "tensordictmodule"]], "TensorDictModuleWrapper": [[112, "tensordictmodulewrapper"]], "TensorDictSequential": [[113, "tensordictsequential"]], "TruncatedNormal": [[114, "truncatednormal"]], "ValueOperator": [[115, "valueoperator"]], "reset_noise": [[116, "reset-noise"]], "DistributionalQValueHook": [[117, "distributionalqvaluehook"]], "QValueHook": [[118, "qvaluehook"]], "ensure_tensordict_compatible": [[119, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[120, "is-tensordict-compatible"]], "biased_softplus": [[121, "biased-softplus"]], "inv_softplus": [[122, "inv-softplus"]], "mappings": [[123, "mappings"]], "ClipPPOLoss": [[124, "clipppoloss"]], "DDPGLoss": [[125, "ddpgloss"]], "DQNLoss": [[126, "dqnloss"]], "DistributionalDQNLoss": [[127, "distributionaldqnloss"]], "HardUpdate": [[128, "hardupdate"]], "KLPENPPOLoss": [[129, "klpenppoloss"]], "PPOLoss": [[130, "ppoloss"]], "REDQLoss": [[131, "redqloss"]], "SACLoss": [[132, "sacloss"]], "SoftUpdate": [[133, "softupdate"]], "distance_loss": [[134, "distance-loss"]], "hold_out_net": [[135, "hold-out-net"]], "hold_out_params": [[136, "hold-out-params"]], "next_state_value": [[137, "next-state-value"]], "GAE": [[138, "gae"]], "TDEstimate": [[139, "tdestimate"]], "TDLambdaEstimate": [[140, "tdlambdaestimate"]], "generalized_advantage_estimate": [[141, "generalized-advantage-estimate"]], "td_advantage_estimate": [[142, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[143, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[144, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[145, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[146, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[147, "vec-td-lambda-return-estimate"]], "BatchSubSampler": [[148, "batchsubsampler"]], "ClearCudaCache": [[149, "clearcudacache"]], "CountFramesLog": [[150, "countframeslog"]], "LogReward": [[151, "logreward"]], "Recorder": [[152, "recorder"]], "RewardNormalizer": [[154, "rewardnormalizer"]], "SelectKeys": [[155, "selectkeys"]], "Trainer": [[156, "trainer"]], "UpdateWeights": [[157, "updateweights"]], "correct_for_frame_skip": [[158, "correct-for-frame-skip"]], "get_stats_random_rollout": [[159, "get-stats-random-rollout"]], "make_collector_offpolicy": [[160, "make-collector-offpolicy"]], "make_collector_onpolicy": [[161, "make-collector-onpolicy"]], "make_ddpg_actor": [[162, "make-ddpg-actor"]], "make_ddpg_loss": [[163, "make-ddpg-loss"]], "make_dqn_actor": [[164, "make-dqn-actor"]], "make_dqn_loss": [[165, "make-dqn-loss"]], "make_ppo_loss": [[166, "make-ppo-loss"]], "make_ppo_model": [[167, "make-ppo-model"]], "make_redq_loss": [[168, "make-redq-loss"]], "make_redq_model": [[169, "make-redq-model"]], "make_replay_buffer": [[170, "make-replay-buffer"]], "make_sac_loss": [[171, "make-sac-loss"]], "make_sac_model": [[172, "make-sac-model"]], "make_target_updater": [[173, "make-target-updater"]], "make_trainer": [[174, "make-trainer"]], "parallel_env_constructor": [[175, "parallel-env-constructor"]], "sync_async_collector": [[176, "sync-async-collector"]], "sync_sync_collector": [[177, "sync-sync-collector"]], "transformed_env_constructor": [[178, "transformed-env-constructor"]], "README Demos": [[179, "readme-demos"], [188, "readme-demos"]], "API Reference": [[180, "api-reference"]], "Knowledge Base": [[181, "knowledge-base"]], "Contributing": [[181, "contributing"], [194, "contributing"]], "Contents:": [[181, null]], "torchrl.modules package": [[182, "torchrl-modules-package"]], "TensorDict modules": [[182, "tensordict-modules"]], "Hooks": [[182, "hooks"]], "Models": [[182, "models"], [194, "models"]], "Exploration": [[182, "exploration"]], "Planners": [[182, "planners"]], "Distributions": [[182, "distributions"]], "torchrl.objectives package": [[183, "torchrl-objectives-package"]], "DQN": [[183, "dqn"]], "DDPG": [[183, "ddpg"]], "SAC": [[183, "sac"]], "REDQ": [[183, "redq"]], "PPO": [[183, "ppo"]], "Returns": [[183, "returns"]], "torchrl.trainers package": [[184, "torchrl-trainers-package"]], "Checkpointing": [[184, "checkpointing"]], "Trainer and hooks": [[184, "trainer-and-hooks"]], "Builders": [[184, "builders"]], "torchrl._utils package": [[185, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[186, "coding-ddpg-using-torchrl"]], "Environment": [[186, "environment"]], "Parallel execution": [[186, "parallel-execution"]], "Normalization of the observations": [[186, "normalization-of-the-observations"]], "Building the model": [[186, "building-the-model"]], "Evaluator: building your recorder object": [[186, "evaluator-building-your-recorder-object"]], "Replay buffer": [[186, "replay-buffer"]], "Hyperparameters": [[186, "hyperparameters"], [187, "hyperparameters"]], "Initialization": [[186, "initialization"]], "Data collector": [[186, "data-collector"]], "Time to train the policy!": [[186, "time-to-train-the-policy"]], "Experiment results": [[186, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[186, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[187, "coding-a-pixel-based-dqn-using-torchrl"]], "Building the environment": [[187, "building-the-environment"]], "The problem": [[187, "the-problem"]], "Building the model (Deep Q-network)": [[187, "building-the-model-deep-q-network"]], "Regular DQN": [[187, "regular-dqn"]], "Training loop": [[187, "training-loop"], [187, "id1"]], "TD-lambda": [[187, "td-lambda"]], "Conclusion and possible improvements": [[187, "conclusion-and-possible-improvements"]], "Task-specific policy in multi-task environments": [[189, "task-specific-policy-in-multi-task-environments"]], "Policy": [[189, "policy"]], "Executing diverse tasks in parallel": [[189, "executing-diverse-tasks-in-parallel"]], "Rollout": [[189, "rollout"]], "Computation times": [[190, "computation-times"]], "TensorDictModule by examples": [[191, "tensordictmodule-by-examples"]], "Example 1: Simple usage": [[191, "example-1-simple-usage"]], "Example 2: Multiple inputs": [[191, "example-2-multiple-inputs"]], "Example 3: Multiple outputs": [[191, "example-3-multiple-outputs"]], "Example 4: Combining multiple TensorDictModule with TensorDictSequential": [[191, "example-4-combining-multiple-tensordictmodule-with-tensordictsequential"]], "Example 5: Compatibility with functorch": [[191, "example-5-compatibility-with-functorch"]], "Do\u2019s and don\u2019t with TensorDictModule": [[191, "do-s-and-don-t-with-tensordictmodule"]], "TensorDictModule for RL": [[191, "tensordictmodule-for-rl"]], "Showcase: Implementing a transformer using TensorDictModule": [[191, "showcase-implementing-a-transformer-using-tensordictmodule"]], "Benchmarking": [[191, "benchmarking"]], "TensorDict": [[192, "tensordict"], [194, "tensordict"]], "Improving the modularity of codes": [[192, "improving-the-modularity-of-codes"]], "Can\u2019t I do this with a python dict?": [[192, "can-t-i-do-this-with-a-python-dict"]], "TensorDict structure": [[192, "tensordict-structure"]], "TensorDict Dictionary Features": [[192, "tensordict-dictionary-features"]], "get(key)": [[192, "get-key"]], "set(key, value)": [[192, "set-key-value"]], "keys()": [[192, "keys"]], "values()": [[192, "values"]], "update(tensordict_or_dict)": [[192, "update-tensordict-or-dict"]], "del": [[192, "del"]], "TensorDict tensor features": [[192, "tensordict-tensor-features"]], "Batch size": [[192, "batch-size"]], "Devices": [[192, "devices"]], "Memory sharing via physical memory usage": [[192, "memory-sharing-via-physical-memory-usage"]], "Tensor operations": [[192, "tensor-operations"]], "TorchRL envs": [[193, "torchrl-envs"]], "Gym environments": [[193, "gym-environments"]], "Env Specs": [[193, "env-specs"]], "Seeding, resetting and steps": [[193, "seeding-resetting-and-steps"]], "Rollouts": [[193, "rollouts"]], "frame_skip": [[193, "frame-skip"]], "Rendering": [[193, "rendering"]], "DeepMind Control environments": [[193, "deepmind-control-environments"]], "Transforming envs": [[193, "transforming-envs"]], "Environment device": [[193, "environment-device"]], "Running environments in parallel": [[193, "running-environments-in-parallel"]], "Closing parallel environments": [[193, "closing-parallel-environments"]], "Seeding": [[193, "seeding"]], "Accessing environment attributes": [[193, "accessing-environment-attributes"]], "kwargs for parallel environments": [[193, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[193, "transforming-parallel-environments"]], "Introduction to TorchRL": [[194, "introduction-to-torchrl"]], "Data": [[194, "data"]], "Replay buffers": [[194, "replay-buffers"]], "Envs": [[194, "envs"]], "Changing environments config": [[194, "changing-environments-config"]], "Vectorized Environments": [[194, "vectorized-environments"]], "Modules": [[194, "modules"]], "TensorDictModules": [[194, "tensordictmodules"]], "Sequences of Modules": [[194, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[194, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[194, "specialized-classes"]], "Using Environments and Modules": [[194, "using-environments-and-modules"]], "Objectives": [[194, "objectives"]], "State of the Library": [[194, "state-of-the-library"]], "Installing the Library": [[194, "installing-the-library"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[9, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors)": [[10, "torchrl.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multisyncdatacollector method)": [[10, "torchrl.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multisyncdatacollector method)": [[10, "torchrl.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multisyncdatacollector method)": [[10, "torchrl.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multisyncdatacollector method)": [[10, "torchrl.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multisyncdatacollector method)": [[10, "torchrl.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multisyncdatacollector method)": [[10, "torchrl.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors)": [[11, "torchrl.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[11, "torchrl.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multiasyncdatacollector method)": [[11, "torchrl.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multiasyncdatacollector method)": [[11, "torchrl.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multiasyncdatacollector method)": [[11, "torchrl.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[11, "torchrl.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multiasyncdatacollector method)": [[11, "torchrl.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "syncdatacollector (class in torchrl.collectors)": [[12, "torchrl.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.syncdatacollector method)": [[12, "torchrl.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.syncdatacollector method)": [[12, "torchrl.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.syncdatacollector method)": [[12, "torchrl.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.syncdatacollector method)": [[12, "torchrl.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.syncdatacollector method)": [[12, "torchrl.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.syncdatacollector method)": [[12, "torchrl.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.syncdatacollector method)": [[12, "torchrl.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.syncdatacollector method)": [[12, "torchrl.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors)": [[13, "torchrl.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.asyncdatacollector method)": [[13, "torchrl.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.asyncdatacollector method)": [[13, "torchrl.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.asyncdatacollector method)": [[13, "torchrl.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.asyncdatacollector method)": [[13, "torchrl.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.asyncdatacollector method)": [[13, "torchrl.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.asyncdatacollector method)": [[13, "torchrl.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[14, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[15, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[16, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.encode"]], "index() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[17, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.encode"]], "index() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.is_in"]], "project() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[18, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.encode"]], "index() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.zero"]], "multonehotdiscretetensorspec (class in torchrl.data)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[20, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.zero_grad"]], "ndboundedtensorspec (class in torchrl.data)": [[21, "torchrl.data.NdBoundedTensorSpec"]], "assert_is_in() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.encode"]], "index() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.index"]], "is_in() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.is_in"]], "project() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.project"]], "rand() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.type_check"]], "zero() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.zero"]], "ndunboundedcontinuoustensorspec (class in torchrl.data)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.zero"]], "onehotdiscretetensorspec (class in torchrl.data)": [[23, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[24, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.add"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.update_priority"]], "replaybuffer (class in torchrl.data)": [[25, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.add"]], "extend() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.extend"]], "sample() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.update_priority"]], "tensordictreplaybuffer (class in torchrl.data)": [[27, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[28, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.encode"]], "index() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[29, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "remotetensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[30, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.add"]], "extend() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.extend"]], "sample() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.sample"]], "replaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[31, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.add"]], "extend() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.extend"]], "sample() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[32, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.sample"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[33, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[33, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[35, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[36, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[36, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[37, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[38, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[39, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[39, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[41, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[41, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[41, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[42, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[42, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[42, "id0"], [42, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[42, "id1"], [42, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[42, "id2"], [42, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[42, "id3"], [42, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[42, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[42, "id4"], [42, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.zero_grad"]], "gymlikeenv (class in torchrl.envs)": [[43, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[43, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[43, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[44, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[44, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[44, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[44, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[44, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[44, "torchrl.envs.step"]], "parallelenv (class in torchrl.envs)": [[45, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[45, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[45, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[46, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[46, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[46, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.zero_grad"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[47, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[48, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[49, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[50, "torchrl.envs.libs.gym.GymWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[51, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[52, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[52, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[53, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[53, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[53, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[54, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[54, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[55, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[55, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[56, "torchrl.envs.transforms.Compose"]], "reset() (torchrl.envs.transforms.compose method)": [[56, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[56, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[56, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[56, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[56, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[57, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[57, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[57, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[57, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[58, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[59, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[59, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "grayscale (class in torchrl.envs.transforms)": [[60, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[60, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[61, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[61, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[62, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[62, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.R3MTransform"]], "forward() (torchrl.envs.transforms.r3mtransform method)": [[65, "torchrl.envs.transforms.R3MTransform.forward"]], "reset() (torchrl.envs.transforms.r3mtransform method)": [[65, "torchrl.envs.transforms.R3MTransform.reset"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[65, "torchrl.envs.transforms.R3MTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.r3mtransform method)": [[65, "torchrl.envs.transforms.R3MTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.r3mtransform method)": [[65, "torchrl.envs.transforms.R3MTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.r3mtransform method)": [[65, "torchrl.envs.transforms.R3MTransform.transform_reward_spec"]], "resize (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[66, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[67, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[68, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[69, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[69, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[69, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[70, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[71, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[71, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[71, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[71, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[71, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[72, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[72, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[72, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[72, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[72, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[72, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[72, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[72, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[72, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[72, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[72, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[73, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[73, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[73, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[73, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viptransform (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.VIPTransform"]], "forward() (torchrl.envs.transforms.viptransform method)": [[74, "torchrl.envs.transforms.VIPTransform.forward"]], "reset() (torchrl.envs.transforms.viptransform method)": [[74, "torchrl.envs.transforms.VIPTransform.reset"]], "to() (torchrl.envs.transforms.viptransform method)": [[74, "torchrl.envs.transforms.VIPTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.viptransform method)": [[74, "torchrl.envs.transforms.VIPTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.viptransform method)": [[74, "torchrl.envs.transforms.VIPTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.viptransform method)": [[74, "torchrl.envs.transforms.VIPTransform.transform_reward_spec"]], "vecnorm (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[75, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[75, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[75, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[75, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[76, "torchrl.envs.transforms.gSDENoise.reset"]], "exploration_mode() (in module torchrl.envs.utils)": [[77, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[78, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[79, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[80, "torchrl.envs.utils.step_mdp"]], "actor (class in torchrl.modules)": [[81, "torchrl.modules.Actor"]], "actorcriticoperator (class in torchrl.modules)": [[82, "torchrl.modules.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.actorcriticoperator method)": [[82, "torchrl.modules.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.actorcriticoperator method)": [[82, "torchrl.modules.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules)": [[83, "torchrl.modules.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.actorcriticwrapper method)": [[83, "torchrl.modules.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorcriticwrapper method)": [[83, "torchrl.modules.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules)": [[84, "torchrl.modules.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.actorvalueoperator method)": [[84, "torchrl.modules.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorvalueoperator method)": [[84, "torchrl.modules.ActorValueOperator.get_value_operator"]], "cemplanner (class in torchrl.modules)": [[85, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[85, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[86, "torchrl.modules.ConvNet"]], "ddpgcnnactor (class in torchrl.modules)": [[87, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[87, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[88, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[88, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[89, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[89, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[90, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[90, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[91, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[91, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[91, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[91, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[91, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[91, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[92, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[92, "torchrl.modules.DistributionalDQNnet.forward"]], "distributionalqvalueactor (class in torchrl.modules)": [[93, "torchrl.modules.DistributionalQValueActor"]], "dreameractor (class in torchrl.modules)": [[94, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[94, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[95, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[95, "torchrl.modules.DuelingCnnDQNet.forward"]], "lstmnet (class in torchrl.modules)": [[96, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[96, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[97, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[97, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[98, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[98, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[98, "torchrl.modules.MPCPlannerBase.planning"]], "noisylazylinear (class in torchrl.modules)": [[99, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[99, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[100, "torchrl.modules.NoisyLinear"]], "obsdecoder (class in torchrl.modules)": [[101, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[101, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[102, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[102, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[103, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[103, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[103, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[103, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[103, "torchrl.modules.OneHotCategorical.sample"]], "probabilisticactor (class in torchrl.modules)": [[104, "torchrl.modules.ProbabilisticActor"]], "probabilistictensordictmodule (class in torchrl.modules)": [[105, "torchrl.modules.ProbabilisticTensorDictModule"]], "forward() (torchrl.modules.probabilistictensordictmodule method)": [[105, "torchrl.modules.ProbabilisticTensorDictModule.forward"]], "make_functional_with_buffers() (torchrl.modules.probabilistictensordictmodule method)": [[105, "torchrl.modules.ProbabilisticTensorDictModule.make_functional_with_buffers"]], "qvalueactor (class in torchrl.modules)": [[106, "torchrl.modules.QValueActor"]], "rssmposterior (class in torchrl.modules)": [[107, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[107, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[108, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[108, "torchrl.modules.RSSMPrior.forward"]], "tanhdelta (class in torchrl.modules)": [[109, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[109, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[109, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[110, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[110, "torchrl.modules.TanhNormal.mode"]], "tensordictmodule (class in torchrl.modules)": [[111, "torchrl.modules.TensorDictModule"]], "forward() (torchrl.modules.tensordictmodule method)": [[111, "torchrl.modules.TensorDictModule.forward"]], "make_functional_with_buffers() (torchrl.modules.tensordictmodule method)": [[111, "torchrl.modules.TensorDictModule.make_functional_with_buffers"]], "random() (torchrl.modules.tensordictmodule method)": [[111, "torchrl.modules.TensorDictModule.random"]], "random_sample() (torchrl.modules.tensordictmodule method)": [[111, "torchrl.modules.TensorDictModule.random_sample"]], "to() (torchrl.modules.tensordictmodule method)": [[111, "torchrl.modules.TensorDictModule.to"]], "tensordictmodulewrapper (class in torchrl.modules)": [[112, "torchrl.modules.TensorDictModuleWrapper"]], "forward() (torchrl.modules.tensordictmodulewrapper method)": [[112, "torchrl.modules.TensorDictModuleWrapper.forward"]], "tensordictsequential (class in torchrl.modules)": [[113, "torchrl.modules.TensorDictSequential"]], "forward() (torchrl.modules.tensordictsequential method)": [[113, "torchrl.modules.TensorDictSequential.forward"]], "make_functional_with_buffers() (torchrl.modules.tensordictsequential method)": [[113, "torchrl.modules.TensorDictSequential.make_functional_with_buffers"]], "select_subsequence() (torchrl.modules.tensordictsequential method)": [[113, "torchrl.modules.TensorDictSequential.select_subsequence"]], "truncatednormal (class in torchrl.modules)": [[114, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[114, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[114, "torchrl.modules.TruncatedNormal.mode"]], "valueoperator (class in torchrl.modules)": [[115, "torchrl.modules.ValueOperator"]], "reset_noise (class in torchrl.modules)": [[116, "torchrl.modules.reset_noise"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[117, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[118, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[119, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[120, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[121, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[121, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[122, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[123, "torchrl.modules.utils.mappings"]], "clipppoloss (class in torchrl.objectives)": [[124, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[124, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[125, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[125, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[126, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[126, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[127, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[127, "torchrl.objectives.DistributionalDQNLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[128, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[129, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[129, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[130, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[130, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[131, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[131, "torchrl.objectives.REDQLoss.forward"]], "sacloss (class in torchrl.objectives)": [[132, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[132, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[133, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[134, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[135, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[136, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[137, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[138, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[138, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[139, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[139, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[140, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[140, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[141, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[142, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[143, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[144, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[145, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[146, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[147, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "batchsubsampler (class in torchrl.trainers)": [[148, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[149, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[150, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[151, "torchrl.trainers.LogReward"]], "recorder (class in torchrl.trainers)": [[152, "torchrl.trainers.Recorder"]], "replaybuffer (class in torchrl.trainers)": [[153, "torchrl.trainers.ReplayBuffer"]], "add() (torchrl.trainers.replaybuffer method)": [[153, "torchrl.trainers.ReplayBuffer.add"]], "extend() (torchrl.trainers.replaybuffer method)": [[153, "torchrl.trainers.ReplayBuffer.extend"]], "sample() (torchrl.trainers.replaybuffer method)": [[153, "torchrl.trainers.ReplayBuffer.sample"]], "rewardnormalizer (class in torchrl.trainers)": [[154, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[155, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[156, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[157, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[158, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[159, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[160, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[161, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[162, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[163, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[164, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[165, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[166, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[167, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[168, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[169, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[170, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[171, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[172, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[173, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[174, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[175, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[176, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[177, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[178, "torchrl.trainers.helpers.transformed_env_constructor"]]}})