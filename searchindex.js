Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.CSVLogger", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.MLFlowLogger", "reference/generated/torchrl.record.loggers.TensorboardLogger", "reference/generated/torchrl.record.loggers.WandbLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/index", "tutorials/multi_task", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.CSVLogger.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.WandbLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "Resize", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "RSSMPosterior", "RSSMPrior", "TanhDelta", "TanhNormal", "TruncatedNormal", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DistributionalQValueActor", "EGreedyWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticSequential", "SafeSequential", "ValueOperator", "WorldModelWrapper", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "CSVLogger", "Logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "generate_exp_name", "get_logger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "Reinforcement Learning (PPO) with TorchRL Tutorial", "README Tutos", "Task-specific policy in multi-task environments", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"The": [0, 1, 2, 3, 4, 5, 7, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 42, 45, 47, 48, 49, 66, 69, 75, 78, 82, 84, 87, 91, 94, 101, 102, 104, 105, 106, 107, 113, 115, 116, 118, 119, 123, 124, 129, 130, 136, 137, 139, 140, 142, 143, 144, 149, 153, 154, 155, 157, 158, 159, 161, 165, 170, 171, 172, 173, 183, 185, 186, 187, 190, 194, 220, 222, 223, 230, 232, 233, 234, 237, 238, 240, 241], "tensordict": [0, 1, 3, 12, 13, 15, 16, 17, 20, 21, 22, 24, 27, 28, 29, 33, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 113, 115, 116, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 170, 171, 172, 173, 181, 190, 194, 196, 198, 199, 205, 208, 210, 213, 215, 218, 226, 230, 232, 233, 234, 236, 237, 238, 241], "class": [0, 1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 222, 223, 224, 230, 232, 233, 234, 241], "ha": [0, 3, 4, 5, 7, 8, 10, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 43, 45, 47, 48, 49, 63, 87, 91, 133, 135, 140, 161, 232, 233, 234, 236, 237, 238, 240, 241], "been": [0, 5, 7, 8, 12, 13, 16, 42, 45, 47, 48, 49, 90, 233, 234, 236, 237, 241], "move": [0, 4, 24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 95, 101, 114, 139, 197, 232, 233, 240, 241], "out": [0, 3, 4, 5, 24, 42, 45, 47, 48, 49, 87, 97, 117, 118, 136, 139, 140, 168, 169, 230, 232, 233, 234, 237, 240, 241], "dedic": [0, 130, 131, 132, 232, 236], "librari": [0, 5, 6, 7, 8, 9, 10, 47, 99, 226, 227, 231, 234, 237, 241], "take": [0, 1, 3, 8, 17, 42, 45, 47, 48, 49, 86, 88, 90, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 151, 174, 175, 176, 177, 178, 179, 180, 190, 201, 230, 232, 233, 234, 237, 241], "look": [0, 3, 5, 7, 8, 24, 42, 45, 47, 48, 49, 78, 79, 140, 141, 142, 233, 234, 237, 238, 240, 241], "find": [0, 4, 6, 133, 135, 193, 197], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 232, 233, 234, 235, 236, 237, 238, 240, 241], "code": [0, 3, 5, 7, 8, 78, 142, 234, 235, 236, 238, 239, 240, 241], "github": [0, 2, 5, 6, 7, 10, 238, 240], "i": [0, 1, 2, 3, 6, 7, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 52, 62, 63, 64, 65, 66, 67, 69, 71, 74, 75, 78, 79, 82, 83, 84, 86, 87, 89, 90, 91, 93, 94, 95, 97, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 124, 125, 126, 127, 129, 130, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 190, 192, 193, 194, 195, 196, 197, 199, 202, 203, 205, 208, 213, 215, 218, 220, 224, 227, 230, 232, 233, 234, 236, 237, 238, 240, 241], "an": [0, 1, 2, 3, 5, 8, 9, 10, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 52, 65, 67, 70, 74, 75, 78, 79, 80, 87, 89, 90, 91, 95, 97, 103, 104, 105, 106, 107, 113, 114, 115, 117, 121, 130, 131, 132, 136, 139, 140, 141, 144, 147, 148, 151, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 172, 173, 182, 188, 194, 195, 199, 200, 203, 208, 221, 222, 223, 224, 227, 232, 233, 236, 238, 240, 241], "open": [0, 5, 7, 11, 240], "reinforc": [0, 2, 3, 9, 63, 104, 105, 106, 107, 136, 145, 152, 156, 160, 164, 165, 166, 208, 226, 233, 235, 237, 239, 240], "learn": [0, 2, 3, 7, 8, 9, 24, 63, 104, 105, 106, 107, 116, 118, 136, 145, 152, 156, 160, 163, 164, 165, 166, 208, 232, 233, 235, 236, 237, 239, 240, 241], "rl": [0, 1, 2, 3, 5, 8, 10, 12, 13, 15, 16, 46, 118, 129, 137, 143, 152, 162, 190, 227, 230, 232, 233, 234, 238, 241], "pytorch": [0, 1, 2, 89, 199, 227, 230, 232, 233, 234, 237, 238, 240, 241], "It": [0, 2, 3, 4, 7, 24, 28, 42, 45, 46, 47, 48, 49, 56, 75, 79, 91, 97, 104, 106, 110, 123, 124, 136, 140, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 170, 171, 195, 215, 227, 232, 237, 238, 240, 241], "provid": [0, 2, 3, 5, 8, 9, 15, 18, 22, 23, 24, 25, 26, 27, 28, 42, 45, 46, 47, 48, 49, 64, 65, 71, 74, 75, 78, 79, 83, 87, 91, 94, 95, 103, 113, 114, 115, 129, 133, 135, 137, 145, 165, 170, 171, 172, 173, 182, 189, 190, 196, 203, 205, 213, 215, 218, 220, 227, 230, 232, 233, 234, 236, 237, 238, 240, 241], "python": [0, 3, 5, 6, 7, 10, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241], "first": [0, 1, 3, 4, 5, 7, 8, 11, 45, 64, 71, 75, 78, 79, 89, 91, 114, 117, 121, 139, 140, 158, 181, 198, 232, 233, 234, 236, 237, 238, 240, 241], "low": [0, 67, 233, 237, 240], "high": [0, 9, 67, 171, 174, 175, 178, 232, 233, 240], "level": [0, 4, 20, 161, 232, 233, 240], "abstract": [0, 8, 19, 20, 21, 22, 30, 31, 32, 41, 42, 76, 115, 200, 230, 234, 237, 240], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 12, 13, 15, 16, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 66, 67, 68, 70, 71, 78, 83, 87, 90, 91, 92, 94, 95, 102, 107, 108, 113, 115, 118, 122, 124, 136, 139, 140, 141, 142, 151, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 196, 220, 224, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241], "intend": [0, 7, 12, 13, 15, 16, 67, 240], "effici": [0, 2, 4, 8, 118, 232, 233, 234, 236, 238, 240], "modular": [0, 142, 240], "properli": [0, 234, 237, 240], "test": [0, 3, 5, 97, 113, 195, 220, 233, 234, 240], "aim": [0, 3, 7, 78, 94, 114, 202, 227, 232, 233, 240], "support": [0, 3, 20, 39, 47, 75, 90, 99, 134, 139, 142, 145, 156, 171, 172, 173, 185, 230, 234, 237, 240], "research": [0, 7, 9, 240], "most": [0, 3, 7, 8, 24, 67, 232, 234, 237, 240], "written": [0, 3, 36, 42, 45, 47, 48, 49, 63, 83, 86, 88, 136, 139, 140, 152, 153, 161, 162, 170, 181, 182, 230, 232, 236, 237, 240], "highli": [0, 2, 240, 241], "wai": [0, 3, 4, 78, 94, 162, 232, 233, 234, 236, 238, 240, 241], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 42, 43, 45, 47, 48, 49, 63, 66, 67, 74, 75, 78, 79, 83, 87, 90, 91, 94, 95, 102, 112, 115, 116, 118, 119, 126, 127, 133, 139, 140, 141, 142, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 170, 171, 172, 173, 195, 205, 213, 215, 218, 222, 223, 224, 227, 230, 232, 233, 234, 236, 237, 238, 240, 241], "easili": [0, 3, 7, 205, 213, 215, 218, 233, 234, 240, 241], "swap": [0, 3, 234, 238, 240], "compon": [0, 2, 3, 36, 37, 38, 39, 145, 146, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 194, 199, 232, 234, 236, 237, 238, 240], "transform": [0, 2, 4, 8, 24, 26, 27, 28, 29, 43, 45, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 104, 110, 145, 146, 149, 151, 182, 196, 205, 208, 210, 213, 215, 218, 224, 226, 233, 235, 238, 239], "them": [0, 7, 26, 27, 28, 29, 42, 43, 45, 47, 48, 49, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 161, 182, 232, 233, 236, 237, 238, 240, 241], "write": [0, 3, 8, 24, 45, 77, 139, 140, 142, 154, 155, 163, 165, 170, 182, 230, 232, 233, 234, 235, 236, 238, 239, 240], "new": [0, 3, 4, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 42, 45, 47, 48, 49, 83, 90, 95, 101, 136, 139, 140, 144, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 232, 233, 234, 237, 240, 241], "ones": [0, 20, 24, 42, 45, 47, 48, 49, 64, 66, 68, 75, 78, 87, 91, 94, 139, 232, 234, 237, 240, 241], "littl": [0, 3, 234, 240, 241], "effort": [0, 3, 237, 240], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 20, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 56, 63, 64, 66, 67, 70, 72, 75, 78, 79, 83, 84, 87, 88, 90, 91, 93, 94, 95, 97, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 144, 145, 146, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 172, 173, 181, 190, 192, 195, 196, 199, 201, 202, 203, 205, 213, 215, 218, 220, 224, 227, 230, 232, 233, 234, 236, 237, 238, 240, 241], "repo": [0, 6, 227, 240], "attempt": [0, 133, 135, 240], "align": [0, 240], "exist": [0, 4, 24, 42, 45, 47, 48, 49, 64, 91, 203, 224, 240, 241], "ecosystem": [0, 240], "dataset": [0, 26, 27, 28, 95, 233, 238, 240, 241], "pillar": [0, 240], "environ": [0, 1, 2, 3, 5, 8, 11, 12, 13, 15, 16, 24, 25, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 67, 68, 72, 74, 75, 78, 79, 90, 91, 95, 97, 102, 113, 115, 116, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 190, 192, 195, 202, 203, 205, 206, 207, 208, 210, 213, 215, 218, 220, 221, 222, 223, 224, 227, 235, 238, 239], "model": [0, 1, 3, 8, 9, 12, 13, 15, 16, 24, 42, 45, 46, 47, 48, 49, 78, 87, 94, 96, 103, 114, 115, 116, 130, 131, 132, 139, 144, 152, 157, 158, 159, 162, 163, 165, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 226, 227, 230, 234, 235, 237, 239, 241], "data": [0, 3, 8, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 75, 86, 97, 102, 113, 116, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 154, 163, 165, 171, 172, 173, 190, 196, 199, 201, 206, 220, 222, 223, 224, 226, 230, 237, 238, 241], "util": [0, 3, 12, 13, 15, 16, 17, 24, 42, 45, 47, 48, 49, 78, 94, 97, 98, 99, 100, 101, 103, 149, 150, 151, 220, 226, 231, 232, 233, 234, 237, 240, 241], "e": [0, 1, 3, 8, 10, 11, 12, 13, 15, 16, 20, 24, 25, 36, 37, 42, 43, 45, 47, 48, 49, 64, 66, 71, 75, 78, 83, 87, 90, 91, 94, 97, 112, 116, 119, 126, 127, 139, 140, 146, 170, 171, 172, 173, 190, 202, 223, 232, 233, 234, 237, 238, 240, 241], "g": [0, 1, 3, 8, 10, 11, 24, 25, 42, 43, 45, 47, 48, 49, 64, 66, 71, 75, 78, 83, 87, 90, 91, 94, 97, 112, 116, 126, 127, 139, 140, 170, 176, 177, 179, 180, 223, 232, 233, 234, 237, 238, 240, 241], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 86, 136, 196, 199, 201, 206, 207, 220, 222, 223, 226, 230, 241], "contain": [0, 3, 7, 12, 13, 15, 16, 20, 24, 26, 27, 28, 29, 30, 33, 39, 40, 41, 42, 45, 46, 47, 48, 49, 66, 68, 78, 87, 91, 94, 95, 101, 102, 103, 114, 116, 139, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 170, 171, 172, 173, 189, 190, 202, 205, 208, 210, 213, 215, 218, 220, 221, 222, 223, 224, 230, 232, 233, 234, 237, 238, 240, 241], "etc": [0, 3, 7, 8, 11, 24, 31, 32, 42, 45, 47, 48, 49, 91, 114, 232, 234, 240, 241], "have": [0, 3, 5, 6, 7, 8, 12, 13, 16, 20, 22, 24, 39, 42, 45, 47, 48, 49, 63, 74, 75, 87, 90, 91, 95, 97, 103, 113, 114, 141, 142, 153, 161, 162, 167, 190, 199, 230, 232, 233, 234, 236, 237, 238, 240, 241], "few": [0, 2, 8, 190, 233, 234, 240, 241], "depend": [0, 3, 4, 7, 8, 143, 162, 234, 237, 240, 241], "possibl": [0, 3, 4, 21, 24, 25, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139, 195, 199, 232, 234, 237, 240, 241], "standard": [0, 75, 82, 95, 102, 110, 116, 117, 118, 133, 171, 172, 173, 232, 233, 240], "numpi": [0, 11, 15, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 89, 199, 232, 233, 237, 240, 241], "common": [0, 3, 4, 45, 48, 49, 130, 131, 132, 147, 148, 220, 227, 230, 232, 234, 236, 238, 240, 241], "openai": [0, 7, 54, 55, 234, 237, 240, 241], "gym": [0, 3, 4, 8, 11, 12, 13, 15, 43, 45, 54, 55, 75, 87, 95, 205, 208, 210, 213, 215, 218, 220, 227, 232, 233, 234, 237, 238, 240], "onli": [0, 1, 3, 4, 7, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 42, 45, 47, 48, 49, 64, 66, 67, 71, 75, 78, 79, 87, 91, 94, 95, 113, 139, 140, 141, 142, 203, 230, 232, 233, 234, 236, 237, 240, 241], "option": [0, 4, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 42, 43, 45, 46, 47, 48, 49, 52, 63, 64, 65, 67, 68, 71, 72, 74, 75, 78, 79, 82, 86, 87, 88, 89, 91, 92, 94, 95, 97, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 133, 135, 136, 140, 141, 142, 145, 146, 154, 155, 157, 158, 159, 163, 165, 170, 171, 172, 173, 176, 177, 179, 180, 182, 190, 192, 193, 194, 195, 196, 197, 199, 203, 205, 208, 213, 215, 218, 220, 222, 223, 224, 237, 240], "On": [0, 3, 7, 233], "end": [0, 24, 26, 27, 28, 29, 42, 45, 47, 48, 49, 91, 103, 115, 174, 175, 176, 177, 178, 179, 180, 232, 233, 234, 236, 237, 238, 240, 241], "come": [0, 1, 3, 8, 48, 49, 129, 130, 131, 132, 137, 143, 232, 233, 234, 240, 241], "set": [0, 1, 2, 3, 7, 9, 12, 13, 15, 16, 24, 25, 26, 27, 28, 29, 39, 42, 44, 45, 46, 47, 48, 49, 64, 66, 78, 86, 87, 91, 94, 97, 100, 115, 133, 139, 190, 195, 196, 207, 224, 227, 231, 232, 233, 234, 236, 237, 238, 240, 241], "re": [0, 3, 8, 24, 42, 45, 47, 48, 49, 140, 230, 233, 234, 236, 237, 240, 241], "usabl": [0, 230, 240], "function": [0, 3, 8, 11, 17, 24, 36, 37, 38, 39, 42, 43, 45, 47, 48, 49, 68, 91, 95, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 119, 120, 121, 122, 123, 124, 127, 130, 131, 132, 133, 135, 136, 139, 140, 142, 143, 149, 150, 151, 152, 153, 154, 155, 161, 162, 163, 165, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 205, 208, 210, 213, 215, 218, 220, 226, 232, 236, 237, 241], "cost": [0, 2, 21, 233, 237], "return": [0, 3, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 43, 45, 46, 47, 48, 49, 52, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 98, 99, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 134, 138, 139, 140, 143, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 176, 177, 179, 180, 199, 202, 205, 206, 208, 210, 213, 215, 218, 220, 221, 222, 223, 224, 226, 230, 232, 233, 234, 236, 237, 238, 240, 241], "process": [0, 1, 2, 3, 4, 5, 8, 12, 13, 16, 24, 42, 43, 45, 47, 48, 49, 95, 136, 230, 232, 233, 237, 238, 240, 241], "good": [0, 1, 4, 9, 232, 234, 240, 241], "runtim": [0, 3, 24, 42, 45, 47, 48, 49, 237], "perform": [0, 3, 4, 8, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 74, 91, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 119, 120, 121, 123, 124, 133, 135, 136, 149, 158, 162, 195, 199, 232, 233, 234, 236, 237, 241], "ppo": [0, 4, 8, 140, 153, 161, 162, 205, 212, 213, 226, 232, 233, 235, 239], "pendulum": [0, 3, 12, 13, 15, 16, 43, 47, 54, 55, 66, 75, 87, 91, 95, 220, 233, 234, 235, 239, 240, 241], "your": [0, 2, 3, 7, 8, 10, 24, 42, 45, 47, 48, 49, 95, 224, 227, 233, 234, 235, 239, 240], "introduct": [0, 235, 239, 241], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 15, 16, 20, 21, 24, 26, 27, 28, 29, 33, 42, 43, 45, 46, 47, 48, 49, 52, 64, 65, 67, 75, 78, 79, 87, 89, 90, 91, 94, 95, 97, 100, 101, 102, 103, 104, 105, 110, 112, 114, 115, 116, 118, 119, 126, 127, 136, 139, 140, 144, 145, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 174, 175, 178, 188, 189, 195, 196, 197, 199, 201, 203, 206, 207, 208, 216, 220, 224, 227, 230, 231, 234, 235, 236, 237, 239, 241], "pretrain": [0, 235, 239], "task": [0, 9, 48, 49, 52, 78, 94, 232, 233, 234, 235, 237, 239, 240, 241], "specif": [0, 5, 8, 28, 29, 45, 199, 226, 230, 232, 234, 235, 239], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 42, 45, 46, 47, 48, 49, 67, 100, 118, 130, 131, 132, 133, 135, 136, 139, 140, 145, 146, 152, 153, 154, 161, 162, 163, 165, 195, 201, 205, 206, 207, 208, 210, 213, 220, 222, 223, 230, 233, 235, 238, 239, 240, 241], "multi": [0, 3, 7, 9, 24, 42, 45, 47, 48, 49, 113, 114, 232, 233, 235, 237, 239, 240], "ddpg": [0, 104, 105, 106, 107, 154, 160, 166, 208, 209, 226, 233, 235, 239, 240], "pixel": [0, 3, 7, 20, 63, 65, 71, 73, 75, 78, 80, 89, 94, 104, 120, 121, 182, 205, 210, 213, 215, 218, 232, 235, 238, 239, 240, 241], "dqn": [0, 134, 138, 145, 155, 156, 160, 166, 210, 211, 226, 235, 239], "api": [0, 3, 5, 78, 94, 230, 237, 240, 241], "packag": [0, 6, 7, 10, 226, 227, 232, 233, 240, 241], "helper": [0, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 232, 237], "replai": [0, 8, 15, 26, 27, 28, 29, 33, 34, 35, 39, 40, 67, 79, 87, 154, 155, 163, 165, 196, 199, 216, 220, 226, 230, 237, 238], "buffer": [0, 3, 4, 8, 15, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 66, 67, 78, 79, 87, 91, 94, 139, 142, 154, 155, 163, 165, 196, 199, 216, 220, 226, 230, 237, 238, 241], "compos": [0, 3, 24, 26, 27, 28, 34, 35, 40, 42, 45, 47, 48, 49, 90, 91, 95, 158, 205, 208, 210, 213, 215, 218, 226, 232, 233, 234, 236, 240, 241], "tensorspec": [0, 3, 14, 18, 19, 20, 21, 22, 23, 25, 31, 32, 42, 46, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 124, 129, 133, 135, 136, 137, 139, 140, 141, 226, 237], "env": [0, 1, 2, 5, 6, 7, 8, 12, 13, 15, 24, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 115, 116, 139, 181, 203, 205, 206, 207, 208, 210, 213, 215, 218, 220, 222, 223, 224, 226, 232, 233, 234, 235, 236, 238, 239], "envbas": [0, 3, 12, 13, 15, 16, 43, 45, 47, 48, 49, 74, 90, 91, 95, 97, 102, 115, 116, 195, 203, 205, 206, 207, 208, 210, 213, 215, 218, 220, 222, 223, 224, 226], "gymlikeenv": [0, 226], "envmetadata": [0, 226], "vector": [0, 8, 18, 25, 67, 104, 106, 114, 173, 179, 180, 226, 232, 233, 236, 237, 238, 241], "record": [0, 24, 42, 45, 47, 48, 49, 162, 181, 182, 183, 184, 185, 186, 187, 188, 189, 220, 226, 234], "domain": [0, 2, 8, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 67, 87, 139, 140, 141, 142, 226, 232, 234, 237, 240, 241], "modul": [0, 3, 4, 8, 11, 24, 42, 45, 46, 47, 48, 49, 66, 67, 78, 79, 87, 91, 94, 95, 96, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 160, 163, 164, 166, 168, 171, 172, 173, 199, 204, 209, 211, 212, 214, 217, 220, 226, 230, 232, 234, 236, 237, 238], "hook": [0, 24, 42, 45, 47, 48, 49, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 134, 135, 136, 138, 145, 146, 149, 192, 193, 195, 196, 197, 199, 200, 201, 226, 232], "explor": [0, 1, 96, 118, 133, 135, 136, 139, 140, 152, 195, 206, 207, 220, 226, 232, 234, 237], "planner": [0, 102, 116, 226], "distribut": [0, 2, 3, 4, 9, 10, 75, 102, 108, 109, 110, 112, 116, 119, 122, 123, 124, 125, 126, 127, 133, 134, 140, 141, 145, 153, 156, 161, 162, 226, 230, 232, 233, 234, 237, 240, 241], "object": [0, 3, 4, 6, 12, 13, 15, 16, 20, 24, 36, 37, 38, 39, 42, 45, 47, 48, 49, 68, 75, 78, 90, 91, 95, 116, 129, 130, 137, 139, 140, 141, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 203, 206, 207, 219, 220, 224, 226, 230, 233, 234, 237, 241], "sac": [0, 163, 165, 217, 218, 226], "redq": [0, 163, 214, 215, 226], "a2c": [0, 152, 204, 226], "dreamer": [0, 61, 110, 157, 158, 159, 226], "trainer": [0, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 232], "checkpoint": [0, 226, 238], "builder": [0, 226, 233, 241], "logger": [0, 182, 183, 185, 186, 187, 188, 189, 193, 195, 199, 220, 224, 226], "_util": [0, 11, 226], "implement_for": [0, 226], "index": [0, 3, 7, 8, 10, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 41, 67, 101, 232, 233, 236, 240], "search": [0, 233], "page": [0, 7], "somewhat": [1, 241], "equival": [1, 12, 13, 15, 16, 21, 22, 23, 24, 25, 42, 45, 47, 48, 49, 91, 196, 232, 240, 241], "dataload": [1, 233, 234], "except": [1, 3, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 42, 70, 122, 148, 232, 233, 240, 241], "1": [1, 2, 3, 4, 8, 10, 11, 12, 13, 15, 16, 21, 22, 23, 24, 25, 31, 32, 42, 43, 45, 46, 47, 48, 49, 51, 58, 59, 60, 62, 64, 66, 67, 68, 72, 74, 75, 78, 79, 87, 88, 89, 91, 94, 95, 101, 102, 103, 104, 105, 107, 111, 112, 114, 116, 117, 118, 119, 123, 124, 125, 126, 127, 130, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 145, 149, 152, 153, 158, 161, 162, 163, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 190, 195, 196, 197, 205, 208, 210, 213, 215, 218, 220, 224, 227, 230, 232, 233, 234, 236, 237, 238, 239, 240, 241], "thei": [1, 3, 4, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 68, 70, 78, 90, 91, 94, 113, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 196, 199, 230, 233, 234, 236, 237, 238, 240, 241], "collect": [1, 3, 4, 8, 12, 13, 15, 16, 24, 26, 27, 28, 29, 75, 78, 94, 97, 136, 154, 163, 165, 190, 196, 199, 201, 202, 203, 220, 230, 237, 238, 240, 241], "over": [1, 2, 3, 4, 8, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 67, 75, 88, 101, 142, 156, 158, 202, 230, 232, 234, 237, 241], "non": [1, 8, 24, 27, 42, 45, 47, 48, 49, 62, 66, 71, 78, 87, 91, 92, 94, 101, 139, 140, 158, 171, 172, 173, 232, 237, 241], "static": [1, 95, 237], "2": [1, 3, 8, 10, 11, 12, 13, 15, 22, 23, 24, 42, 43, 45, 47, 48, 49, 59, 60, 64, 66, 67, 75, 78, 87, 91, 94, 95, 103, 104, 105, 106, 111, 113, 114, 119, 134, 135, 136, 139, 143, 145, 153, 154, 161, 163, 165, 170, 171, 172, 173, 176, 177, 179, 180, 182, 190, 232, 233, 234, 236, 237, 238, 240, 241], "like": [1, 4, 7, 24, 42, 45, 47, 48, 49, 56, 89, 97, 163, 232, 234, 237, 238, 241], "version": [1, 6, 11, 24, 42, 45, 47, 48, 49, 165, 173, 227, 232, 233, 234, 237, 238, 241], "being": [1, 3, 8, 16, 24, 42, 45, 47, 48, 49, 67, 68, 91, 100, 136, 153, 161, 162, 182, 196, 201, 222, 223, 224, 232, 233, 234, 237, 238], "train": [1, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 72, 78, 91, 94, 97, 104, 106, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 199, 201, 220, 230, 238, 241], "": [1, 3, 6, 7, 8, 24, 26, 27, 28, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 95, 97, 103, 118, 133, 139, 140, 165, 171, 172, 173, 215, 218, 232, 233, 234, 236, 237, 238, 240, 241], "accept": [1, 12, 13, 15, 16, 24, 42, 45, 46, 47, 48, 49, 66, 71, 78, 83, 87, 91, 92, 94, 139, 140, 141, 230, 232, 234, 241], "two": [1, 4, 8, 10, 24, 42, 45, 47, 48, 49, 75, 78, 94, 107, 140, 161, 165, 167, 195, 199, 205, 213, 215, 218, 232, 233, 234, 236, 237, 240, 241], "main": [1, 2, 5, 43, 140, 199, 232, 236, 241], "argument": [1, 3, 12, 13, 15, 16, 20, 24, 42, 45, 47, 48, 49, 66, 78, 87, 90, 91, 94, 101, 103, 114, 117, 139, 140, 141, 143, 181, 192, 202, 205, 208, 210, 213, 215, 218, 220, 221, 224, 232, 233, 234, 237, 241], "list": [1, 6, 7, 8, 9, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 38, 39, 42, 45, 46, 47, 48, 49, 63, 68, 75, 78, 83, 91, 94, 114, 142, 143, 169, 171, 173, 181, 195, 196, 222, 223, 232, 233, 234, 236, 237, 238, 240, 241], "constructor": [1, 15, 90, 171, 172, 173, 205, 208, 210, 213, 215, 218, 221, 224, 232, 233, 234], "iter": [1, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 45, 47, 48, 49, 69, 75, 84, 95, 103, 114, 139, 140, 141, 142, 147, 169, 195, 198, 199, 205, 213, 215, 218, 230, 232, 234, 237], "execut": [1, 3, 6, 7, 8, 12, 13, 15, 24, 26, 27, 28, 29, 42, 43, 45, 46, 47, 48, 49, 87, 141, 142, 203, 224, 230, 233, 234, 239, 241], "step": [1, 3, 4, 8, 12, 13, 15, 16, 24, 42, 43, 45, 46, 47, 48, 49, 51, 58, 71, 74, 75, 86, 88, 91, 101, 102, 110, 113, 115, 116, 133, 135, 136, 140, 152, 157, 162, 170, 181, 190, 195, 199, 230, 232, 233, 236, 237, 238, 240], "queri": [1, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 78, 90, 95, 142, 237, 240], "defin": [1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 79, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 171, 172, 173, 181, 221, 233, 237, 241], "number": [1, 3, 8, 12, 13, 15, 16, 19, 21, 24, 25, 26, 27, 28, 33, 36, 37, 38, 42, 45, 46, 47, 48, 49, 63, 67, 72, 74, 75, 82, 86, 88, 95, 102, 103, 108, 109, 110, 111, 112, 114, 116, 119, 120, 121, 123, 124, 125, 126, 127, 133, 135, 136, 139, 140, 151, 157, 163, 165, 190, 192, 195, 199, 201, 202, 203, 222, 223, 224, 232, 233, 234, 237, 238, 241], "befor": [1, 3, 4, 6, 7, 10, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 80, 81, 82, 84, 86, 87, 88, 89, 90, 92, 114, 117, 118, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 172, 173, 196, 232, 234, 237, 241], "deliv": [1, 240], "stack": [1, 7, 8, 48, 49, 95, 141, 142, 181, 190, 233, 236, 237, 240], "user": [1, 2, 5, 8, 24, 42, 45, 47, 48, 49, 91, 113, 221, 230, 233, 237, 240, 241], "reset": [1, 3, 8, 12, 13, 15, 16, 24, 42, 43, 45, 46, 47, 48, 49, 51, 58, 63, 66, 69, 71, 74, 78, 83, 84, 86, 87, 88, 90, 93, 95, 97, 128, 136, 181, 205, 208, 210, 213, 215, 218, 232, 233, 234, 236, 240], "whenev": [1, 3, 24, 201], "reach": [1, 3, 12, 13, 15, 16, 42, 45, 47, 48, 49, 133, 135, 136, 234, 240, 241], "done": [1, 3, 4, 7, 8, 12, 13, 15, 20, 24, 42, 43, 45, 46, 47, 48, 49, 51, 58, 59, 60, 75, 82, 84, 86, 87, 90, 91, 95, 101, 102, 116, 154, 155, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 205, 208, 210, 213, 215, 218, 232, 233, 234, 236, 237, 238, 240, 241], "state": [1, 3, 4, 12, 13, 15, 16, 24, 42, 45, 46, 47, 48, 49, 51, 58, 63, 64, 66, 69, 75, 84, 86, 90, 91, 93, 95, 101, 102, 110, 113, 114, 116, 120, 123, 124, 130, 139, 144, 163, 170, 171, 172, 173, 224, 232, 233, 234, 237, 241], "after": [1, 8, 20, 24, 42, 45, 47, 48, 49, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 101, 117, 133, 135, 158, 232, 233, 234, 237, 238, 241], "predifin": 1, "becaus": [1, 3, 4, 7, 90, 107, 113, 139, 140, 232, 233, 236, 237, 241], "potenti": [1, 237], "comput": [1, 3, 4, 8, 12, 15, 21, 24, 42, 45, 47, 48, 49, 75, 91, 93, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 123, 124, 126, 127, 130, 133, 135, 136, 140, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 203, 232, 234, 236, 238], "heavi": [1, 8], "crucial": [1, 232, 233, 234, 237, 241], "configur": [1, 8, 12, 13, 15, 16, 162, 205, 213, 215, 218, 233, 234, 237], "hyperparamet": [1, 237], "appropri": [1, 4, 7, 12, 13, 15, 16, 40, 41, 87, 221, 224, 232, 233], "paramet": [1, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 52, 53, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 135, 136, 139, 140, 141, 142, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 210, 213, 215, 218, 220, 221, 222, 223, 224, 232, 237, 238, 240], "consider": [1, 3, 8, 232, 233], "whether": [1, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 45, 46, 47, 48, 49, 91, 103, 114, 143, 154, 155, 156, 163, 165, 173, 232, 233, 234, 237, 241], "should": [1, 3, 4, 5, 7, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 39, 42, 45, 46, 47, 48, 49, 63, 71, 75, 79, 83, 84, 86, 90, 91, 95, 97, 101, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 139, 140, 149, 160, 161, 162, 163, 166, 170, 171, 172, 173, 182, 194, 195, 196, 199, 220, 222, 223, 224, 230, 232, 233, 234, 236, 237, 238, 240, 241], "occur": [1, 8, 13, 64, 75, 79, 139, 140, 158, 241], "serial": [1, 3, 24, 42, 45, 47, 48, 49, 95], "optim": [1, 8, 24, 42, 45, 47, 48, 49, 102, 116, 117, 118, 162, 165, 194, 199, 205, 213, 220, 230, 234, 237], "parallel": [1, 3, 8, 12, 13, 16, 97, 152, 221, 222, 223, 224, 233, 234], "syncdatacollector": [1, 12, 13, 16, 220, 223, 226, 234], "worker": [1, 12, 13, 15, 16, 43, 47, 48, 49, 95, 222, 223, 224, 232, 234, 240, 241], "multisyncdatacollector": [1, 223, 226, 234, 240], "split": [1, 3, 12, 13, 15, 16, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 230, 234, 240], "workload": 1, "across": [1, 8, 95, 136, 201, 232, 237], "aggreg": [1, 103, 104, 105, 142], "result": [1, 3, 7, 12, 13, 15, 16, 24, 26, 27, 28, 29, 42, 43, 45, 47, 48, 49, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 95, 97, 101, 114, 146, 171, 174, 175, 176, 177, 178, 179, 180, 181, 201, 233, 237, 238, 240, 241], "final": [1, 3, 4, 133, 135, 136, 141, 171, 195, 232, 233, 234, 237, 241], "multiasyncdatacollector": [1, 16, 222, 226, 232, 233, 234, 240], "sever": [1, 8, 22, 24, 42, 45, 47, 48, 49, 64, 91, 162, 234, 241], "batch": [1, 3, 12, 13, 15, 16, 17, 21, 24, 25, 26, 27, 28, 29, 42, 45, 46, 47, 48, 49, 71, 75, 79, 87, 91, 92, 108, 109, 113, 117, 122, 125, 136, 139, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 190, 193, 196, 197, 198, 199, 201, 222, 223, 224, 230, 232, 233, 234, 236, 238, 240, 241], "gather": [1, 3, 79, 170, 203, 227, 232, 233, 234, 237, 241], "continu": [1, 9, 19, 31, 104, 105, 106, 107, 136, 140, 142, 166, 171, 174, 175, 178, 208, 232, 234, 237, 240, 241], "concomittantli": 1, "network": [1, 4, 8, 24, 42, 45, 47, 48, 49, 103, 104, 105, 106, 107, 109, 110, 111, 114, 118, 120, 121, 123, 124, 130, 131, 132, 139, 154, 155, 156, 160, 163, 165, 166, 168, 171, 172, 173, 205, 208, 213, 219, 220, 230, 236, 237, 241], "impli": [1, 241], "weight": [1, 4, 9, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 118, 139, 152, 153, 158, 201, 219, 230, 232, 233, 234, 236, 237, 240], "mai": [1, 2, 3, 4, 5, 7, 8, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 75, 84, 91, 92, 95, 97, 114, 230, 232, 233, 234, 237, 238, 240, 241], "slightli": [1, 232, 237, 238, 241], "lag": [1, 12, 13, 15, 16, 233, 234], "therefor": [1, 3, 7, 162, 241], "although": [1, 8, 42, 45, 47, 48, 49, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 230, 232, 233], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 4, 7, 8, 12, 13, 15, 16, 26, 27, 28, 29, 36, 37, 42, 45, 46, 47, 48, 49, 63, 78, 83, 86, 88, 90, 92, 94, 133, 135, 139, 140, 151, 152, 153, 154, 156, 160, 161, 162, 163, 165, 166, 170, 171, 172, 173, 181, 182, 193, 196, 197, 199, 201, 230, 232, 233, 234, 236, 237, 241], "asynchron": [1, 9, 13, 24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139, 152, 222, 233, 234], "off": [1, 2, 4, 112, 126, 127, 165, 195, 206, 230, 233, 234, 238, 241], "curriculum": [1, 4], "For": [1, 3, 4, 7, 8, 9, 10, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 71, 75, 117, 145, 152, 156, 162, 195, 208, 230, 232, 233, 234, 237, 238, 241], "remot": [1, 48, 49, 241], "rollout": [1, 3, 13, 15, 42, 45, 46, 47, 48, 49, 59, 60, 97, 102, 116, 136, 152, 203, 232, 233, 234, 238, 240], "necessari": [1, 4, 6, 8, 12, 13, 15, 16, 84, 163, 171, 172, 173, 232, 233, 234], "synchronis": [1, 43], "from": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 64, 67, 69, 75, 78, 79, 84, 86, 87, 89, 90, 91, 92, 94, 95, 101, 102, 104, 105, 106, 107, 112, 114, 115, 116, 117, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 153, 154, 155, 161, 162, 163, 165, 170, 171, 172, 173, 181, 182, 190, 196, 199, 202, 203, 205, 208, 210, 213, 215, 216, 218, 220, 221, 224, 227, 230, 232, 233, 234, 236, 237, 238, 240, 241], "either": [1, 5, 24, 42, 45, 47, 48, 49, 144, 189, 208, 230, 232, 233, 238, 240, 241], "update_policy_weights_": [1, 12, 13, 15, 16, 232, 233, 240], "update_at_each_batch": [1, 12, 13, 16, 232], "true": [1, 3, 4, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 64, 66, 67, 71, 74, 75, 78, 79, 82, 86, 87, 89, 91, 92, 94, 95, 97, 101, 102, 103, 104, 105, 106, 107, 111, 112, 114, 116, 117, 118, 126, 127, 130, 131, 132, 133, 136, 139, 140, 141, 142, 148, 152, 153, 157, 158, 159, 161, 162, 163, 165, 167, 171, 172, 173, 176, 177, 179, 180, 181, 182, 192, 193, 195, 196, 199, 210, 224, 230, 232, 233, 234, 236, 237, 238, 240, 241], "second": [1, 8, 165, 198, 232, 233, 234, 236, 237, 238, 240, 241], "consid": [1, 8, 24, 42, 45, 47, 48, 49, 67, 108, 125, 227, 232, 237], "devic": [1, 2, 3, 7, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 36, 37, 42, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 66, 77, 78, 87, 89, 91, 94, 101, 102, 103, 104, 105, 106, 107, 111, 113, 114, 116, 117, 118, 130, 131, 132, 134, 136, 137, 138, 139, 142, 143, 145, 146, 154, 196, 201, 205, 208, 210, 213, 215, 216, 218, 232, 233, 234, 236, 237, 238, 240], "oper": [1, 3, 4, 7, 8, 12, 13, 16, 24, 42, 45, 47, 48, 49, 71, 90, 119, 130, 131, 132, 139, 144, 145, 152, 153, 154, 155, 156, 161, 162, 170, 171, 172, 173, 199, 208, 210, 215, 218, 230, 232, 233, 234, 236, 237, 241], "instanc": [1, 3, 4, 7, 8, 12, 13, 15, 16, 24, 30, 42, 43, 45, 46, 47, 48, 49, 53, 63, 75, 87, 90, 95, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 119, 120, 121, 123, 124, 133, 135, 136, 140, 141, 142, 149, 182, 189, 195, 203, 205, 206, 207, 208, 210, 213, 215, 218, 220, 222, 223, 230, 232, 234, 237, 241], "cpu": [1, 3, 8, 10, 12, 13, 15, 18, 24, 30, 36, 37, 42, 45, 46, 47, 48, 49, 51, 58, 59, 60, 66, 78, 87, 91, 94, 101, 102, 116, 118, 137, 139, 142, 196, 205, 208, 210, 213, 215, 218, 232, 233, 234, 236, 237, 238, 240, 241], "slower": 1, "than": [1, 4, 8, 12, 13, 15, 16, 107, 114, 119, 133, 135, 139, 196, 201, 227, 232, 233, 234, 237, 240, 241], "one": [1, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 21, 22, 23, 25, 26, 27, 28, 29, 33, 39, 40, 41, 42, 43, 45, 47, 48, 49, 67, 74, 75, 78, 85, 91, 92, 94, 95, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 122, 123, 124, 133, 134, 135, 136, 138, 139, 140, 145, 146, 149, 151, 152, 153, 154, 155, 161, 162, 163, 192, 194, 195, 199, 203, 205, 213, 215, 218, 224, 227, 230, 232, 233, 234, 236, 237, 238, 241], "cuda": [1, 3, 7, 24, 42, 45, 47, 48, 49, 66, 77, 78, 87, 91, 94, 139, 191, 232, 233, 234, 238, 241], "when": [1, 2, 3, 5, 8, 12, 13, 15, 16, 24, 26, 27, 28, 29, 36, 37, 38, 39, 42, 43, 45, 47, 48, 49, 66, 67, 74, 75, 78, 79, 83, 87, 90, 91, 94, 95, 100, 102, 114, 115, 116, 117, 126, 139, 140, 142, 149, 153, 161, 162, 170, 181, 182, 196, 224, 227, 230, 232, 233, 234, 237, 238, 241], "multipl": [1, 3, 5, 8, 12, 13, 15, 16, 21, 48, 49, 64, 67, 83, 90, 95, 113, 117, 118, 139, 140, 163, 215, 224, 230, 232, 233, 234, 237, 240], "infer": [1, 48, 49, 95, 117, 165, 232, 234], "run": [1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 16, 24, 42, 45, 46, 47, 48, 49, 52, 53, 74, 75, 91, 95, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 141, 142, 149, 195, 222, 223, 224, 227, 230, 232, 233, 234, 236, 237, 238, 240], "dispatch": 1, "avail": [1, 4, 6, 140, 145, 146, 222, 223, 232, 233, 234, 241], "speed": [1, 2, 4, 8, 21, 232, 233, 234, 237], "up": [1, 2, 3, 8, 9, 21, 227, 232, 233, 234, 237, 241], "avoid": [1, 24, 42, 45, 47, 48, 49, 91, 95, 139, 202, 234], "oom": 1, "error": [1, 3, 7, 10, 11, 24, 42, 45, 47, 48, 49, 79, 97, 148, 227, 232, 233, 234, 241], "choic": [1, 2, 119], "size": [1, 2, 3, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 42, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 64, 71, 78, 85, 87, 89, 91, 92, 94, 101, 102, 103, 108, 113, 114, 116, 119, 122, 123, 124, 125, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 170, 171, 172, 173, 182, 190, 196, 205, 208, 210, 213, 215, 218, 232, 233, 234, 236, 237, 238, 240, 241], "pass": [1, 3, 4, 15, 20, 24, 28, 42, 43, 44, 45, 47, 48, 49, 68, 90, 92, 95, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 117, 119, 120, 121, 123, 124, 133, 135, 136, 139, 140, 142, 148, 149, 171, 172, 173, 196, 222, 223, 224, 232, 233, 234, 236, 237, 241], "ie": [1, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 71, 92, 233, 234], "store": [1, 2, 3, 8, 12, 13, 15, 16, 20, 24, 28, 29, 33, 36, 37, 38, 42, 45, 47, 48, 49, 95, 102, 113, 116, 205, 208, 210, 213, 215, 218, 230, 232, 234, 238, 241], "while": [1, 3, 7, 8, 24, 42, 45, 47, 48, 49, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 161, 162, 232, 234, 237, 238, 240], "wait": [1, 237], "also": [1, 2, 3, 8, 11, 24, 28, 42, 45, 47, 48, 49, 67, 75, 83, 84, 87, 91, 124, 141, 142, 152, 154, 155, 171, 230, 232, 233, 234, 236, 237, 241], "impact": [1, 233], "memori": [1, 3, 8, 21, 24, 36, 42, 43, 45, 47, 48, 49, 66, 78, 87, 91, 94, 95, 139, 224, 230, 232, 233, 234, 236, 237, 238, 240, 241], "manag": [1, 8, 168, 169, 195, 232], "kei": [1, 3, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 42, 45, 47, 48, 49, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 83, 84, 86, 87, 88, 90, 91, 93, 94, 95, 101, 102, 115, 116, 133, 135, 136, 139, 140, 141, 142, 143, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 170, 171, 172, 173, 182, 193, 194, 195, 197, 198, 199, 203, 205, 213, 215, 218, 230, 232, 233, 234, 236, 237, 240, 241], "control": [1, 3, 5, 8, 52, 53, 67, 101, 104, 105, 106, 107, 115, 116, 124, 136, 139, 140, 141, 153, 161, 162, 166, 171, 174, 175, 178, 208, 230, 232, 233, 234, 237], "which": [1, 3, 4, 7, 8, 11, 12, 13, 15, 16, 20, 21, 24, 25, 29, 42, 45, 47, 48, 49, 63, 64, 72, 74, 75, 78, 79, 86, 87, 88, 90, 91, 97, 112, 126, 127, 130, 131, 132, 139, 140, 142, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 171, 190, 194, 205, 208, 210, 213, 215, 218, 230, 232, 233, 234, 236, 237, 238, 241], "storing_devic": [1, 12, 13, 15, 16, 232, 233, 240], "dure": [1, 12, 13, 15, 16, 42, 45, 47, 48, 49, 72, 91, 195, 199, 232, 233, 234, 237, 241], "A": [1, 3, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 56, 67, 72, 78, 79, 87, 90, 91, 93, 95, 96, 97, 101, 102, 103, 114, 116, 118, 119, 133, 135, 140, 141, 142, 145, 149, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 183, 184, 185, 192, 199, 201, 205, 210, 213, 215, 218, 220, 233, 234, 237, 241], "heurist": [1, 4, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 136, 232, 241], "usual": [1, 3, 4, 6, 7, 8, 42, 45, 47, 48, 49, 118, 181, 205, 213, 215, 218, 227, 230, 232, 234, 241], "same": [1, 3, 4, 11, 15, 24, 42, 43, 45, 47, 48, 49, 67, 72, 74, 75, 90, 91, 95, 103, 114, 136, 232, 233, 234, 236, 237, 238, 241], "storag": [1, 2, 8, 24, 26, 27, 28, 29, 36, 37, 38, 42, 44, 45, 47, 48, 49, 68, 226, 230, 232, 233, 234, 238], "default": [1, 3, 10, 12, 13, 15, 16, 18, 20, 21, 24, 25, 26, 27, 28, 33, 36, 37, 42, 45, 47, 48, 49, 52, 63, 64, 67, 71, 74, 75, 78, 79, 82, 86, 87, 88, 89, 91, 92, 94, 95, 97, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 133, 135, 136, 137, 139, 140, 143, 149, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 190, 192, 193, 195, 196, 197, 199, 205, 208, 213, 215, 218, 220, 224, 230, 232, 233, 234, 238, 240, 241], "behaviour": [1, 3, 45, 64, 75, 79, 101, 112, 126, 127, 195, 233, 237], "besid": 1, "those": [1, 5, 7, 20, 48, 49, 75, 87, 140, 141, 142, 201, 222, 223, 232, 233, 237, 241], "choos": [1, 232, 233, 234], "follow": [1, 2, 3, 6, 7, 8, 24, 42, 45, 46, 47, 48, 49, 78, 103, 114, 151, 153, 161, 164, 199, 215, 218, 230, 232, 233, 234, 236, 237, 240, 241], "max_frames_per_traj": [1, 12, 13, 15, 16, 202, 232, 234, 240], "frame": [1, 2, 12, 13, 15, 16, 24, 45, 63, 72, 133, 135, 136, 181, 182, 192, 195, 199, 202, 203, 232, 233, 234, 240, 241], "call": [1, 3, 7, 8, 11, 12, 13, 15, 16, 24, 26, 27, 28, 29, 36, 37, 38, 39, 42, 45, 47, 48, 49, 63, 66, 67, 68, 71, 75, 77, 78, 83, 86, 87, 91, 94, 95, 97, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 116, 117, 119, 120, 121, 123, 124, 133, 135, 136, 139, 140, 142, 149, 170, 181, 195, 230, 232, 233, 234, 237, 240, 241], "frames_per_batch": [1, 12, 13, 15, 16, 202, 232, 233, 234, 240], "each": [1, 3, 4, 7, 8, 12, 13, 15, 16, 17, 22, 23, 24, 28, 42, 43, 45, 47, 48, 49, 78, 83, 86, 87, 88, 94, 95, 133, 142, 145, 146, 176, 177, 179, 180, 195, 196, 222, 223, 232, 233, 234, 237, 238, 240, 241], "init_random_fram": [1, 12, 13, 15, 16, 202, 232, 233], "random": [1, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 34, 42, 45, 46, 47, 48, 49, 67, 74, 75, 87, 97, 139, 140, 163, 195, 203, 232, 233, 234, 237, 238, 240, 241], "rand_step": [1, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 95, 237, 240, 241], "reset_at_each_it": [1, 12, 13, 15, 16, 232], "split_traj": [1, 12, 13, 15, 16, 232, 233, 234], "trajectori": [1, 12, 13, 15, 16, 17, 24, 28, 33, 42, 45, 47, 48, 49, 79, 90, 102, 116, 136, 162, 171, 173, 174, 175, 176, 177, 178, 179, 180, 190, 226, 233, 234, 237, 240, 241], "pad": [1, 17, 103, 104, 105, 113, 196, 232], "along": [1, 63, 64, 75, 79, 83, 89, 114, 118, 139, 140, 233, 237], "mask": [1, 4, 12, 13, 15, 79, 196, 232, 233, 241], "point": [1, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 40, 41, 42, 45, 47, 48, 49, 63, 66, 78, 87, 89, 91, 94, 115, 139, 151, 156, 199, 227, 233, 234, 236, 237, 241], "boolean": [1, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 45, 79, 133, 174, 175, 176, 177, 178, 179, 180, 230], "repres": [1, 3, 12, 13, 15, 16, 20, 28, 42, 45, 47, 48, 49, 72, 79, 140, 145, 146, 167, 171, 196, 232, 233, 234], "valid": [1, 79, 91, 103, 114, 133, 135, 161, 196, 230, 241], "valu": [1, 3, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 42, 45, 47, 48, 49, 62, 63, 64, 67, 74, 75, 78, 79, 81, 83, 87, 88, 89, 90, 91, 94, 95, 104, 105, 106, 107, 108, 110, 111, 112, 114, 116, 117, 118, 119, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 190, 192, 193, 194, 195, 196, 199, 205, 208, 213, 215, 218, 220, 230, 233, 236, 237, 240, 241], "exploration_mod": [1, 12, 15, 195, 226, 232, 233], "strategi": [1, 230, 232, 233], "reset_when_don": [1, 12, 15], "central": [2, 232, 233], "part": [2, 4, 8, 24, 42, 45, 47, 48, 49, 75, 83, 143, 190, 224, 232, 233, 234, 237, 241], "algorithm": [2, 8, 9, 12, 13, 46, 72, 152, 162, 163, 164, 165, 190, 205, 206, 213, 230, 232, 233, 234, 238, 240], "implement": [2, 3, 9, 11, 24, 39, 42, 45, 47, 48, 49, 90, 95, 112, 125, 126, 127, 152, 162, 165, 205, 213, 215, 218, 230, 232, 233, 234, 237, 240], "wide": [2, 3, 5, 232], "we": [2, 3, 5, 7, 9, 20, 24, 42, 43, 45, 47, 48, 49, 78, 87, 95, 102, 113, 227, 230, 232, 233, 234, 236, 237, 238, 240, 241], "give": [2, 7, 46, 227, 232, 233, 237, 238, 240], "abil": [2, 237], "veri": [2, 3, 233, 237, 240, 241], "influenti": 2, "sampl": [2, 4, 8, 9, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 42, 45, 46, 47, 48, 49, 79, 98, 100, 102, 108, 112, 116, 122, 123, 126, 127, 133, 135, 136, 139, 140, 153, 154, 155, 161, 162, 190, 196, 199, 202, 233, 234, 238, 240, 241], "latenc": 2, "especi": [2, 3, 7, 8, 64], "larger": [2, 4], "volum": 2, "lazymemmapstorag": [2, 226, 232, 233, 238], "advis": [2, 232, 241], "share": [2, 3, 6, 8, 36, 37, 38, 39, 43, 48, 49, 95, 130, 131, 132, 224, 234, 236, 240, 241], "due": [2, 3, 5, 238, 241], "lower": [2, 12, 13, 15, 16, 19, 95, 123, 124, 234, 237], "serialis": 2, "memmaptensor": [2, 238], "well": [2, 3, 8, 12, 13, 16, 24, 39, 42, 45, 47, 48, 49, 123, 124, 232, 233, 238, 240, 241], "specifi": [2, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 83, 85, 92, 102, 139, 140, 232, 234], "file": [2, 6, 7, 8, 181, 230, 232, 239, 240], "locat": [2, 7, 45, 75, 82, 112, 119, 126, 127, 233, 234], "improv": [2, 4, 72, 152], "node": [2, 205, 208, 210, 213, 215, 218], "failur": [2, 4], "recoveri": 2, "mean": [2, 3, 4, 7, 15, 28, 33, 75, 95, 102, 108, 110, 113, 116, 125, 133, 140, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 232, 233, 234, 237, 240, 241], "liststorag": [2, 26, 27, 28, 226], "were": [2, 7, 48, 49, 232, 234], "found": [2, 6, 7, 10, 20, 24, 28, 42, 45, 47, 48, 49, 95, 140, 154, 162, 232, 233, 240], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 26, 33, 47, 63, 78, 104, 105, 106, 107, 110, 111, 116, 118, 120, 121, 123, 124, 136, 145, 152, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 171, 174, 175, 178, 205, 208, 213, 215, 218, 232, 233, 238, 240], "com": [2, 5, 6, 7, 10, 238, 240], "tree": 2, "type": [2, 3, 24, 26, 28, 30, 42, 45, 46, 47, 48, 49, 66, 78, 87, 90, 91, 94, 95, 103, 114, 118, 133, 135, 139, 140, 147, 205, 208, 210, 213, 215, 218, 222, 233, 234, 237, 241], "1x": 2, "lazytensorstorag": [2, 226, 234], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 42, 45, 47, 48, 49, 66, 67, 75, 78, 87, 89, 91, 94, 102, 103, 104, 105, 111, 113, 114, 116, 119, 129, 130, 131, 132, 134, 137, 139, 142, 143, 145, 148, 158, 171, 172, 173, 176, 177, 179, 180, 182, 198, 210, 230, 232, 233, 234, 237, 238, 239, 240, 241], "44x": 2, "too": [2, 7, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 112, 126, 127, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 172, 173, 232, 233, 234, 237, 241], "difficult": [2, 4], "trajecotri": 2, "One": [2, 4, 8, 23, 25, 122, 133, 135, 139, 167, 189, 232, 233, 241], "element": [2, 22, 23, 25, 26, 27, 28, 29, 33, 36, 37, 38, 79, 103, 133, 139, 140, 190, 234, 241], "pai": [2, 8, 233], "attent": [2, 8, 233], "alwai": [2, 24, 42, 45, 47, 48, 49, 74, 233, 234, 237], "lead": [2, 3, 4, 8, 10, 11, 20, 24, 27, 87, 112, 126, 127, 237, 240], "dimens": [2, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 63, 64, 71, 75, 79, 85, 89, 92, 103, 114, 117, 118, 125, 126, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 172, 173, 224, 232, 233, 234, 237], "other": [2, 3, 4, 7, 8, 24, 27, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 67, 84, 95, 118, 119, 140, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 196, 205, 213, 215, 218, 222, 223, 230, 232, 233, 234, 237, 238, 240, 241], "word": [2, 237, 241], "creat": [2, 3, 4, 5, 6, 7, 10, 12, 13, 16, 24, 26, 27, 28, 42, 43, 45, 47, 48, 49, 78, 83, 90, 91, 95, 101, 103, 104, 105, 106, 107, 111, 114, 115, 140, 155, 156, 163, 182, 196, 203, 206, 207, 220, 222, 223, 232, 233, 234, 237, 238, 240, 241], "1m": [2, 202, 232, 234, 238], "multidimension": [2, 28, 33], "doe": [2, 3, 26, 28, 33, 39, 117, 141, 142, 153, 161, 162, 170, 199, 230, 232, 233, 234, 237, 241], "desir": [2, 3, 24, 42, 45, 47, 48, 49, 66, 75, 78, 79, 87, 91, 94, 100, 103, 114, 139, 140, 232, 237], "sub": [2, 3, 42, 45, 47, 48, 49, 79, 141, 142, 190, 199, 233, 234, 236, 240, 241], "diversifi": 2, "make": [2, 4, 7, 24, 39, 42, 45, 47, 48, 49, 55, 58, 75, 78, 79, 97, 117, 140, 162, 196, 207, 224, 232, 233, 234, 236, 237, 238, 240, 241], "more": [2, 3, 4, 6, 8, 11, 12, 13, 15, 16, 24, 26, 27, 28, 29, 42, 45, 47, 48, 49, 96, 114, 117, 119, 133, 135, 139, 145, 152, 156, 162, 171, 174, 175, 178, 194, 208, 227, 230, 232, 233, 234, 236, 237, 238, 241], "To": [2, 3, 4, 6, 7, 8, 24, 26, 27, 28, 42, 45, 47, 48, 49, 95, 130, 131, 132, 136, 199, 232, 233, 234, 237, 238, 240, 241], "do": [2, 3, 4, 7, 45, 74, 79, 101, 117, 131, 230, 232, 233, 234, 236, 237, 240, 241], "custom": [2, 3, 5, 24, 42, 45, 47, 48, 49, 224, 233, 234], "name": [2, 6, 7, 11, 24, 42, 45, 47, 48, 49, 52, 67, 69, 83, 84, 91, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 183, 185, 186, 187, 189, 193, 194, 205, 208, 210, 213, 215, 218, 230, 232, 233, 234, 237, 241], "randomcroptensordict": 2, "here": [2, 3, 4, 7, 8, 9, 10, 232, 233, 234, 237, 240, 241], "exampl": [2, 3, 4, 9, 10, 11, 12, 13, 15, 16, 18, 20, 21, 22, 23, 24, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 66, 67, 68, 75, 78, 87, 89, 91, 94, 95, 101, 102, 103, 113, 114, 116, 119, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 148, 171, 172, 173, 190, 191, 192, 193, 194, 196, 197, 198, 201, 205, 208, 210, 213, 215, 218, 220, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241], "how": [2, 3, 24, 26, 28, 33, 42, 45, 47, 48, 49, 153, 160, 161, 162, 199, 227, 232, 233, 234, 236, 237, 238, 240, 241], "parent": [2, 3, 30, 42, 64, 71, 72, 75, 78, 87, 90, 92, 130, 162, 237, 240, 241], "subclass": [2, 3, 42, 45, 47, 48, 49, 90, 97, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 134, 135, 136, 138, 139, 140, 141, 149, 162, 232, 237], "basic": [2, 46, 234, 241], "properti": [2, 3, 42, 45, 46, 47, 48, 49, 91, 108, 112, 117, 122, 125, 126, 127, 237], "observ": [2, 3, 8, 12, 13, 15, 24, 30, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 58, 59, 60, 63, 64, 65, 66, 68, 69, 71, 73, 75, 76, 80, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 101, 104, 105, 106, 107, 113, 120, 121, 123, 129, 130, 131, 132, 134, 135, 136, 137, 138, 143, 144, 145, 146, 155, 158, 171, 172, 173, 182, 205, 208, 210, 213, 215, 218, 220, 230, 233, 234, 236, 237, 240, 241], "action": [2, 3, 8, 9, 12, 13, 15, 21, 25, 30, 42, 45, 46, 47, 48, 49, 51, 58, 59, 60, 67, 68, 72, 74, 84, 91, 101, 102, 104, 105, 106, 107, 109, 110, 114, 115, 116, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 143, 145, 146, 155, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 205, 208, 210, 213, 215, 218, 220, 224, 230, 232, 233, 234, 236, 238, 240, 241], "shape": [2, 3, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 64, 75, 87, 89, 96, 97, 101, 108, 109, 114, 117, 119, 122, 125, 137, 139, 142, 167, 182, 190, 196, 199, 220, 232, 233, 234, 236, 238, 240, 241], "dtype": [2, 3, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 42, 45, 46, 47, 48, 49, 51, 58, 59, 60, 66, 67, 68, 75, 78, 87, 89, 91, 94, 97, 101, 102, 116, 117, 118, 130, 131, 132, 134, 136, 137, 138, 139, 142, 143, 145, 146, 171, 172, 173, 205, 208, 210, 213, 215, 218, 233, 234, 236, 237, 238, 240, 241], "import": [2, 3, 4, 6, 7, 10, 12, 13, 15, 26, 28, 33, 43, 45, 46, 75, 78, 87, 94, 95, 101, 102, 114, 116, 119, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 153, 171, 172, 173, 192, 195, 205, 208, 210, 213, 215, 218, 220, 233, 234, 236, 237, 238, 240, 241], "spec": [2, 3, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 42, 44, 45, 46, 47, 48, 49, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 97, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 146, 205, 208, 210, 213, 215, 218, 232, 233, 234, 236, 240], "match": [2, 3, 6, 8, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 43, 45, 47, 48, 49, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 103, 108, 114, 125, 139, 140, 161, 163, 165, 196, 201, 232, 233, 234, 236, 237, 240, 241], "input": [2, 3, 4, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 46, 47, 48, 49, 63, 64, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 97, 101, 103, 104, 105, 106, 107, 113, 114, 117, 118, 123, 124, 136, 139, 140, 141, 142, 151, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 193, 197, 202, 220, 230, 232, 233, 234, 237, 240, 241], "output": [2, 3, 4, 12, 13, 15, 16, 24, 26, 27, 28, 42, 45, 46, 47, 48, 49, 63, 75, 78, 88, 90, 94, 97, 103, 104, 105, 109, 110, 113, 114, 119, 130, 133, 135, 136, 139, 140, 141, 142, 145, 146, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 182, 190, 232, 233, 234, 236, 237, 238, 240, 241], "send": [2, 3, 8, 233, 240], "receiv": [2, 3, 24, 42, 45, 47, 48, 49, 90, 114, 233, 234, 236, 237], "parallelenv": [2, 3, 12, 13, 15, 16, 47, 49, 221, 226, 232, 233, 234, 236, 240, 241], "commun": [2, 3, 227, 234, 241], "spawn": [2, 3, 4, 47], "check": [2, 3, 4, 5, 6, 7, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 43, 45, 46, 47, 48, 49, 64, 70, 79, 97, 139, 140, 147, 232, 233, 234, 236, 237, 238, 241], "check_env_spec": [2, 3, 226, 234, 237], "method": [2, 3, 4, 12, 13, 15, 16, 24, 28, 33, 36, 37, 38, 39, 42, 45, 47, 48, 49, 63, 66, 71, 75, 78, 80, 87, 90, 91, 94, 102, 113, 130, 131, 132, 139, 140, 141, 147, 152, 181, 221, 230, 231, 232, 234, 237, 241], "saniti": [2, 3, 7, 97, 233, 234], "offer": [3, 7, 237, 241], "handl": [3, 24, 42, 45, 47, 48, 49, 95, 114, 199, 222, 223, 232, 234], "differ": [3, 4, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 63, 67, 75, 91, 92, 114, 116, 145, 146, 162, 167, 171, 172, 195, 199, 201, 222, 223, 230, 232, 233, 234, 236, 237, 238, 241], "backend": [3, 7, 11, 230, 232, 234, 237], "dm": [3, 232, 241], "lab": [3, 52, 53, 227], "base": [3, 4, 8, 9, 12, 13, 15, 16, 35, 41, 46, 47, 87, 93, 130, 157, 199, 205, 213, 215, 218, 230, 232, 235, 237, 239, 241], "goal": [3, 4, 232, 233, 234, 237], "abl": [3, 232, 234, 236, 237, 240], "experi": [3, 26, 33, 97, 183, 185, 186, 187, 188, 189, 227, 233, 234], "even": [3, 4, 8, 13, 36, 37, 38, 39, 43, 232, 234, 237, 241], "simul": [3, 5, 7, 8, 61, 102, 116, 232, 234], "some": [3, 4, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 78, 97, 104, 140, 141, 142, 190, 202, 230, 232, 233, 234, 237, 240, 241], "box": [3, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "wrapper": [3, 11, 16, 28, 29, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 119, 133, 135, 136, 140, 144, 171, 185, 186, 187, 224, 232, 234, 238, 241], "under": [3, 4, 24, 42, 45, 47, 48, 49, 139, 140, 232, 237, 241], "lib": [3, 5, 6, 7, 9, 10, 12, 13, 15, 43, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 75, 87, 95, 205, 208, 210, 213, 215, 218, 220, 232, 233, 234, 236, 238, 240, 241], "hope": 3, "imit": 3, "torch": [3, 8, 9, 10, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 36, 37, 42, 43, 45, 46, 47, 48, 49, 51, 58, 59, 60, 64, 66, 67, 68, 75, 78, 82, 87, 89, 91, 94, 95, 101, 102, 103, 108, 110, 112, 113, 114, 116, 117, 118, 119, 122, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 150, 154, 171, 172, 173, 190, 197, 198, 205, 208, 210, 213, 215, 218, 220, 230, 232, 233, 234, 236, 237, 238, 240, 241], "nn": [3, 12, 13, 15, 24, 42, 45, 46, 47, 48, 49, 66, 67, 78, 87, 91, 94, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 116, 119, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 152, 155, 156, 171, 172, 173, 215, 218, 220, 232, 233, 234, 236, 237, 238, 240], "typic": [3, 4, 8, 24, 42, 45, 47, 48, 49, 230, 234, 237], "organis": [3, 237], "allow": [3, 12, 13, 15, 16, 24, 25, 42, 45, 47, 48, 49, 87, 101, 114, 167, 230, 232, 234, 237, 241], "gener": [3, 7, 8, 15, 27, 35, 43, 46, 75, 83, 84, 90, 108, 122, 129, 137, 140, 143, 144, 163, 171, 174, 175, 178, 188, 199, 232, 233, 234, 235, 236, 237, 238, 240, 241], "arbitrari": [3, 25, 48, 49, 232, 233, 237], "nest": [3, 20, 24, 42, 45, 47, 48, 49, 171, 172, 173, 230, 233, 234, 237, 240], "structur": [3, 7, 27, 136, 171, 172, 173, 233, 234, 237, 238], "attribut": [3, 4, 24, 42, 45, 47, 48, 49, 78, 86, 140, 237], "batch_siz": [3, 8, 12, 13, 15, 20, 26, 27, 28, 29, 42, 44, 46, 51, 58, 59, 60, 63, 87, 101, 102, 116, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 190, 196, 205, 208, 210, 213, 215, 218, 232, 233, 234, 236, 237, 238, 240, 241], "togeth": [3, 12, 13, 15, 16, 79, 130, 131, 132, 144, 232, 234], "expect": [3, 4, 7, 20, 24, 30, 42, 45, 46, 47, 48, 49, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 78, 80, 81, 82, 84, 86, 87, 88, 89, 90, 92, 97, 136, 139, 142, 152, 153, 161, 162, 203, 227, 230, 232, 234, 237, 241], "live": [3, 12, 13, 15, 16, 24, 26, 27, 28, 29, 42, 45, 46, 47, 48, 49], "actual": [3, 4, 7, 12, 13, 16, 42, 45, 47, 48, 49, 202, 232, 233, 234, 237], "respons": [3, 8, 199, 241], "just": [3, 4, 190, 230, 232, 233, 234, 237, 240, 241], "retriev": [3, 26, 27, 28, 29, 42, 45, 47, 48, 49, 64, 75, 101, 102, 116, 140, 153, 161, 162, 171, 172, 173, 205, 208, 210, 213, 215, 218, 224, 230, 233, 234, 237, 241], "care": [3, 8, 42, 45, 47, 48, 49, 90, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 232, 234, 237], "map": [3, 8, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 36, 42, 45, 47, 48, 49, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 80, 81, 82, 84, 86, 87, 88, 89, 90, 92, 95, 119, 130, 131, 132, 139, 140, 142, 144, 145, 226, 232, 233, 234, 238], "see": [3, 6, 7, 8, 9, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 96, 103, 112, 114, 117, 126, 127, 139, 140, 196, 232, 233, 234, 237, 241], "below": [3, 7, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 103, 112, 114, 126, 127, 139, 196, 233, 234, 237], "parametr": [3, 118, 140, 165, 232, 234], "hardwar": 3, "input_spec": [3, 42, 46, 66, 67, 68, 75, 84, 86, 90, 91, 92, 102, 116, 232, 234, 237, 241], "compositespec": [3, 42, 44, 45, 46, 47, 48, 49, 67, 86, 87, 90, 102, 116, 129, 133, 135, 137, 142, 226, 232, 234, 237, 241], "all": [3, 4, 8, 12, 13, 15, 16, 24, 42, 43, 45, 46, 47, 48, 49, 66, 70, 75, 78, 83, 87, 88, 91, 94, 95, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 139, 140, 142, 149, 158, 194, 199, 202, 222, 223, 224, 227, 230, 232, 233, 234, 235, 236, 237, 240, 241], "output_spec": [3, 90, 91, 237], "reward": [3, 12, 13, 15, 24, 30, 42, 45, 46, 47, 48, 49, 51, 58, 59, 60, 62, 66, 68, 81, 82, 83, 84, 90, 91, 92, 93, 94, 95, 101, 102, 116, 144, 154, 155, 158, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 192, 193, 195, 197, 224, 230, 232, 233, 234, 236, 237, 238, 240, 241], "observation_spec": [3, 42, 46, 63, 64, 65, 66, 68, 69, 71, 73, 75, 78, 80, 83, 84, 86, 87, 88, 89, 90, 91, 92, 102, 116, 203, 220, 232, 234, 236, 237, 241], "pair": [3, 24, 42, 45, 47, 48, 49, 87, 130, 140, 232, 233, 234, 236, 237, 241], "pointer": [3, 6, 43], "action_spec": [3, 14, 42, 45, 46, 47, 48, 49, 51, 58, 91, 124, 129, 131, 134, 137, 138, 145, 146, 220, 233, 234, 236, 237, 238, 240, 241], "reward_spec": [3, 42, 46, 62, 66, 68, 81, 82, 83, 90, 91, 92, 102, 116, 234, 237, 241], "done_spec": [3, 90, 91, 237, 241], "flag": [3, 8, 26, 27, 28, 29, 174, 175, 176, 177, 178, 179, 180, 237, 238], "importantli": [3, 140], "4": [3, 7, 12, 13, 15, 18, 21, 25, 46, 52, 53, 54, 57, 95, 102, 103, 104, 105, 110, 111, 113, 114, 116, 119, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 148, 181, 232, 233, 234, 237, 238, 240, 241], "action_s": 3, "help": [3, 4, 24, 42, 45, 47, 48, 49, 227, 232, 233, 234], "prealloc": [3, 237], "tensor": [3, 8, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 58, 59, 60, 63, 64, 66, 67, 71, 75, 78, 79, 82, 87, 88, 89, 90, 91, 92, 94, 95, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 122, 125, 126, 127, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 149, 150, 154, 155, 158, 159, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 205, 208, 210, 213, 215, 218, 230, 232, 233, 234, 236, 237, 238, 240, 241], "consist": [3, 24, 42, 45, 47, 48, 49, 103, 114, 232, 233, 234, 237, 238, 241], "With": [3, 230, 232, 241], "necessarili": 3, "requir": [3, 4, 7, 8, 15, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 114, 139, 141, 142, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 230, 232, 233, 234, 237, 241], "stateless": [3, 90, 232, 237, 241], "set_se": [3, 12, 13, 15, 16, 42, 45, 46, 47, 48, 49, 51, 58, 75, 91, 232, 237, 240, 241], "seed": [3, 12, 13, 15, 16, 42, 45, 46, 47, 48, 49, 52, 59, 60, 91, 97, 199, 232], "next": [3, 4, 8, 12, 13, 15, 20, 24, 26, 27, 28, 42, 43, 45, 46, 47, 48, 49, 51, 58, 59, 60, 95, 101, 102, 116, 124, 144, 155, 163, 170, 171, 172, 173, 193, 197, 232, 233, 236, 237, 238, 240, 241], "determinist": [3, 24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 110, 120, 124, 129, 135, 139, 140, 232, 233, 237, 241], "preced": [3, 113, 233], "without": [3, 7, 9, 24, 42, 45, 47, 48, 49, 131, 163, 170, 220, 227, 232, 233, 234, 237, 241], "risk": [3, 79], "overlap": 3, "consecut": [3, 136, 233, 241], "still": [3, 9, 86, 133, 161, 232, 233, 236, 237, 241], "reproduc": [3, 97, 234], "maximum": [3, 4, 12, 13, 15, 16, 19, 24, 36, 37, 38, 42, 45, 47, 48, 49, 67, 81, 86, 88, 125, 126, 127, 137, 165, 196, 232, 233, 234, 237, 240, 241], "max_step": [3, 12, 42, 45, 46, 47, 48, 49, 59, 60, 86, 233, 240, 241], "n": [3, 6, 7, 18, 21, 24, 25, 42, 45, 47, 48, 49, 63, 67, 71, 92, 116, 140, 152, 170, 196, 230, 232, 233, 241], "tensordictmodul": [3, 12, 13, 15, 16, 116, 139, 141, 232, 233, 234, 236, 237, 238], "ani": [3, 5, 8, 20, 24, 26, 27, 28, 29, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 71, 78, 79, 91, 95, 97, 103, 114, 118, 139, 140, 141, 142, 162, 185, 199, 227, 232, 233, 234, 237, 240, 241], "compat": [3, 7, 11, 24, 39, 42, 45, 47, 48, 49, 56, 63, 95, 147, 167, 233, 240], "figur": [3, 232, 233, 234, 237, 241], "summar": [3, 237], "In": [3, 4, 5, 7, 8, 10, 11, 12, 13, 16, 24, 42, 45, 47, 48, 49, 66, 78, 84, 87, 90, 91, 94, 112, 114, 124, 126, 127, 139, 142, 151, 201, 222, 223, 224, 232, 233, 234, 236, 237, 238, 241], "brief": [3, 234, 241], "popul": [3, 87, 234, 237], "entri": [3, 24, 42, 45, 47, 48, 49, 65, 71, 75, 78, 86, 94, 101, 171, 172, 173, 232, 234, 237, 238], "deliveri": 3, "step_mdp": [3, 226, 232, 233, 237, 240, 241], "nasium": 3, "recent": [3, 7, 11, 232, 240, 241], "shift": [3, 24, 149, 234], "termin": [3, 24, 141, 232, 233, 234, 237, 240], "trust": 3, "truncat": [3, 86, 127, 232, 234, 241], "refer": [3, 7, 8, 24, 42, 45, 47, 48, 49, 91, 95, 102, 110, 116, 120, 121, 123, 124, 145, 152, 156, 157, 158, 159, 162, 171, 174, 175, 178, 208, 232, 234, 240], "achiev": [3, 4, 24, 42, 45, 47, 48, 49, 196, 230, 232, 234, 237, 241], "via": [3, 4, 7, 8, 48, 78, 90, 94, 154, 230, 233, 234, 241], "stepcount": [3, 12, 233, 234, 240], "chosen": [3, 87, 205, 213, 215, 218], "someth": [3, 24, 42, 45, 47, 48, 49, 227, 233, 234, 237, 241], "els": [3, 230, 232, 233, 234, 237, 238], "100": [3, 24, 42, 45, 47, 48, 49, 75, 191, 199, 220, 233, 234, 236, 237, 238, 240, 241], "truncated_kei": [3, 86], "assess": [3, 232], "our": [3, 7, 8, 232, 233, 234, 236, 238, 240], "tutori": [3, 232, 233, 235, 236, 237, 238, 239, 240, 241], "inform": [3, 4, 12, 13, 15, 16, 24, 42, 43, 45, 47, 48, 49, 103, 114, 230, 233, 234, 237], "design": [3, 24, 25, 42, 45, 47, 48, 49, 79, 91, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 232, 233, 234, 236, 237, 241], "scratch": [3, 8, 232, 233, 237], "better": [3, 8, 233, 234, 237], "featur": [3, 4, 12, 13, 15, 16, 25, 42, 45, 47, 48, 49, 63, 71, 87, 92, 103, 110, 111, 114, 117, 118, 140, 171, 172, 173, 224, 232, 233, 234, 237, 241], "intens": [3, 8], "gym3": 3, "envpool": [3, 47], "interfac": [3, 114, 117, 232, 234, 237], "simultan": [3, 48, 49, 237], "often": [3, 8, 160, 199, 233, 237, 241], "competit": 3, "advantag": [3, 8, 111, 152, 153, 161, 162, 164, 171, 172, 173, 174, 175, 176, 178, 179, 230, 232, 233, 234, 237, 241], "scale": [3, 4, 75, 82, 110, 112, 119, 123, 124, 126, 127, 130, 131, 132, 137, 140, 142, 197, 203, 205, 213, 215, 218, 224, 232, 233, 234, 240], "varieti": 3, "its": [3, 4, 5, 7, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 42, 45, 46, 47, 48, 49, 63, 90, 91, 95, 103, 133, 134, 135, 140, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 199, 220, 230, 232, 233, 234, 237, 238, 241], "own": [3, 12, 13, 16, 24, 42, 45, 47, 48, 49, 233, 234, 237], "As": [3, 4, 42, 45, 47, 48, 49, 140, 232, 233, 234, 237, 238, 240, 241], "inherit": [3, 115, 230, 234], "serialenv": [3, 87, 226, 241], "enjoi": 3, "exact": 3, "Of": [3, 7, 227, 237, 241], "cours": [3, 4, 227, 234, 237, 241], "correspond": [3, 4, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 42, 45, 46, 47, 48, 49, 78, 87, 91, 94, 95, 136, 140, 233, 234, 237, 238], "count": [3, 43, 86, 136, 195, 202, 232, 233, 234, 241], "def": [3, 11, 24, 42, 43, 45, 46, 47, 48, 49, 102, 116, 143, 145, 148, 230, 232, 233, 236, 237, 240, 241], "make_env": [3, 60, 95, 206, 207, 232, 233, 241], "gymenv": [3, 5, 12, 13, 15, 16, 43, 56, 66, 75, 87, 91, 95, 205, 208, 210, 213, 215, 218, 220, 226, 232, 233, 234, 238, 240, 241], "v1": [3, 12, 13, 15, 43, 47, 75, 87, 167, 176, 177, 179, 180, 233, 237, 240, 241], "from_pixel": [3, 52, 53, 205, 213, 215, 218, 232, 233, 238, 240, 241], "9": [3, 7, 24, 95, 233, 234, 237, 238, 239], "81": [3, 233, 237], "0": [3, 4, 5, 6, 7, 8, 10, 11, 22, 23, 24, 25, 26, 28, 33, 42, 45, 46, 47, 48, 49, 51, 58, 62, 64, 66, 67, 74, 75, 78, 87, 89, 91, 94, 95, 97, 102, 103, 104, 105, 107, 110, 112, 114, 116, 117, 118, 119, 123, 124, 125, 126, 127, 133, 135, 136, 139, 142, 149, 152, 153, 157, 158, 159, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 190, 197, 199, 220, 224, 230, 232, 233, 234, 236, 237, 238, 240, 241], "must": [3, 7, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 36, 37, 38, 39, 42, 43, 45, 47, 48, 49, 72, 75, 87, 91, 92, 103, 114, 139, 140, 145, 146, 174, 175, 176, 177, 178, 179, 180, 190, 195, 196, 199, 201, 205, 208, 210, 213, 215, 218, 232, 233, 234, 236, 237, 240], "work": [3, 4, 8, 11, 24, 42, 45, 47, 48, 49, 64, 78, 95, 103, 114, 199, 227, 232, 233, 234, 236, 237, 238, 240, 241], "print": [3, 6, 7, 12, 13, 15, 18, 20, 21, 24, 25, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 67, 68, 75, 87, 89, 95, 101, 103, 114, 119, 129, 130, 131, 132, 134, 135, 136, 138, 139, 142, 143, 145, 146, 148, 205, 208, 210, 213, 215, 218, 220, 230, 232, 233, 234, 236, 237, 238, 240, 241], "simpli": [3, 6, 69, 84, 232, 233, 234, 241], "b": [3, 7, 8, 17, 20, 117, 118, 171, 172, 173, 182, 232, 233, 238], "c": [3, 6, 7, 20, 75, 205, 208, 210, 213, 215, 218, 233], "d": [3, 26, 33, 140, 240], "get": [3, 4, 6, 7, 8, 39, 43, 48, 49, 64, 67, 68, 75, 79, 89, 95, 129, 135, 140, 174, 175, 178, 189, 232, 233, 234, 237, 240, 241], "forc": [3, 6, 7, 233, 237], "variou": [3, 12, 13, 15, 16, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 222, 223, 233, 234, 241], "reset_work": 3, "fals": [3, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 64, 66, 71, 74, 75, 78, 79, 82, 87, 89, 91, 92, 94, 95, 97, 101, 102, 103, 104, 114, 116, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 167, 171, 172, 173, 176, 177, 179, 180, 192, 193, 195, 196, 197, 199, 205, 208, 210, 213, 215, 218, 224, 230, 232, 233, 234, 236, 237, 238, 240, 241], "field": [3, 12, 13, 15, 16, 20, 24, 42, 45, 46, 47, 48, 49, 51, 58, 59, 60, 87, 91, 101, 102, 116, 130, 131, 132, 134, 136, 137, 138, 139, 142, 143, 145, 146, 203, 205, 208, 210, 213, 215, 218, 227, 233, 234, 236, 237, 238, 240, 241], "bool": [3, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 58, 59, 60, 64, 67, 71, 74, 75, 78, 82, 87, 89, 91, 92, 94, 95, 97, 101, 102, 103, 104, 105, 112, 114, 116, 117, 118, 126, 127, 133, 136, 139, 140, 141, 142, 147, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 171, 172, 173, 176, 177, 179, 180, 181, 182, 192, 193, 195, 196, 197, 199, 205, 208, 210, 213, 215, 218, 224, 233, 234, 236, 237, 238, 240, 241], "500": [3, 199, 232, 237, 240, 241], "uint8": [3, 32, 89, 233, 238, 240, 241], "none": [3, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 59, 60, 62, 63, 64, 65, 66, 68, 71, 73, 75, 76, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 122, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 158, 159, 164, 165, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 193, 194, 195, 196, 197, 199, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 230, 232, 233, 234, 237, 240, 241], "is_shar": [3, 12, 13, 15, 20, 46, 51, 58, 59, 60, 87, 95, 101, 102, 116, 130, 131, 132, 134, 136, 137, 138, 139, 142, 143, 145, 146, 205, 208, 210, 213, 215, 218, 233, 234, 236, 237, 238, 240, 241], "note": [3, 4, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 95, 136, 140, 232, 233, 236, 241], "launch": 3, "quit": [3, 232, 233, 234, 241], "time": [3, 4, 7, 8, 12, 13, 15, 16, 24, 42, 43, 45, 47, 48, 49, 64, 79, 87, 88, 95, 101, 110, 113, 136, 158, 163, 171, 172, 173, 199, 233, 234, 236, 237, 238, 240, 241], "mani": [3, 4, 153, 161, 162, 163, 233, 234, 237, 241], "start": [3, 4, 5, 12, 43, 101, 194, 233, 237, 241], "bottleneck": [3, 8], "why": [3, 232, 237, 241], "so": [3, 4, 6, 7, 10, 24, 42, 45, 47, 48, 49, 87, 95, 141, 142, 232, 234, 237, 241], "slow": [3, 4], "onc": [3, 7, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 91, 133, 135, 197, 230, 232, 233, 234, 237, 241], "great": [3, 7, 8, 240], "speedup": [3, 8, 241], "precis": [3, 89, 101, 232, 234], "anoth": [3, 8, 42, 45, 47, 48, 49, 90, 114, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 232, 234, 236, 237, 241], "thing": [3, 7, 8, 227, 232, 234, 241], "misspecifi": 3, "caus": [3, 7, 8, 79], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 42, 43, 45, 47, 48, 49, 78, 88, 94, 95, 101, 139, 148, 154, 171, 172, 173, 199, 201, 224, 227, 232, 233, 234, 236, 237, 238, 240, 241], "rais": [3, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 70, 91, 97, 148, 232, 234, 240], "assert": [3, 6, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 45, 95, 97, 119, 171, 172, 173, 190, 198, 232, 233, 236, 241], "mismatch": [3, 233], "mostli": [3, 16, 241], "purpos": [3, 7, 220, 232, 234, 238, 241], "want": [3, 6, 7, 8, 75, 232, 233, 234, 237, 238, 240, 241], "subprocess": [3, 43], "addit": [3, 4, 24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 133, 139, 151, 171], "multithread": [3, 26, 27, 28, 47], "multithreadedenv": [3, 226], "underneath": 3, "higher": [3, 4, 232, 233, 234, 241], "restrict": [3, 233, 238, 241], "flexibl": [3, 9, 47, 230, 232, 241], "cover": [3, 227, 232, 234, 237, 240], "popular": 3, "atari": [3, 4, 63, 241], "classic": [3, 46, 233], "benchmark_batched_env": 3, "py": [3, 230, 232, 233, 234, 236, 237, 238, 239, 240, 241], "compar": [3, 42, 195, 233, 234, 241], "case": [3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 20, 24, 26, 28, 33, 42, 45, 47, 48, 49, 87, 91, 97, 114, 139, 140, 142, 151, 190, 201, 222, 223, 224, 230, 232, 234, 237, 241], "raw": [3, 4, 112, 126, 127, 233, 237], "treat": 3, "logic": 3, "torchvis": [3, 78, 94, 240, 241], "build": [3, 7, 17, 20, 24, 42, 45, 47, 48, 49, 95, 102, 116, 140, 199, 204, 209, 211, 212, 214, 216, 217, 219, 230, 234, 237, 238, 240, 241], "transformedenv": [3, 12, 43, 66, 71, 74, 75, 87, 90, 95, 205, 208, 210, 213, 215, 218, 232, 233, 234, 236, 237, 238, 240, 241], "primit": [3, 4, 232, 233], "built": [3, 5, 7, 216, 220, 221, 224, 233, 234, 241], "base_env": [3, 67, 68, 87, 232, 233, 234, 238, 240, 241], "totensorimag": [3, 210, 233, 240, 241], "in_kei": [3, 12, 13, 15, 46, 62, 63, 64, 65, 67, 68, 71, 73, 75, 76, 78, 80, 81, 82, 83, 88, 89, 90, 94, 95, 102, 116, 129, 130, 131, 132, 137, 139, 140, 142, 143, 147, 148, 154, 155, 171, 172, 173, 181, 182, 215, 218, 220, 232, 233, 234, 236, 237, 238, 240, 241], "resiz": [3, 233, 241], "64": [3, 104, 105, 111, 232, 233, 234, 236, 237, 238, 240, 241], "By": [3, 25, 45, 140, 195, 224, 232, 233, 238, 241], "now": [3, 7, 232, 234, 236, 238, 241], "appar": [3, 192], "bring": [3, 234, 241], "signific": [3, 5, 8, 234, 241], "kind": [3, 30, 101], "consult": 3, "interest": [3, 140, 234, 237, 241], "abov": [3, 7, 24, 42, 45, 47, 48, 49, 112, 126, 127, 151, 230, 232, 233, 234, 237, 241], "resize_par": 3, "sinc": [3, 4, 5, 7, 24, 42, 45, 47, 48, 49, 101, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 232, 233, 234, 237, 238, 240, 241], "out_kei": [3, 12, 13, 15, 46, 62, 63, 64, 65, 71, 73, 75, 76, 78, 80, 81, 83, 88, 89, 90, 94, 102, 116, 129, 130, 131, 132, 137, 139, 140, 142, 143, 145, 146, 147, 148, 171, 172, 173, 195, 220, 232, 234, 236, 237, 238, 240, 241], "keyword": [3, 24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139, 140, 221, 233, 234, 241], "easi": [3, 5, 232, 233, 234, 238, 241], "root": [3, 20, 101, 112, 126, 127, 237, 241], "graph": [3, 4, 8, 168, 169, 237], "inv": [3, 67, 237], "appli": [3, 4, 24, 26, 27, 28, 29, 42, 45, 47, 48, 49, 63, 64, 66, 67, 69, 70, 71, 72, 77, 79, 84, 86, 87, 88, 90, 91, 93, 95, 126, 171, 194, 230, 232, 233, 234, 237, 240, 241], "revers": 3, "order": [3, 15, 24, 25, 26, 27, 28, 29, 42, 45, 47, 48, 49, 91, 139, 141, 142], "chain": [3, 26, 27, 28, 66, 67, 103, 142, 241], "taken": [3, 42, 45, 47, 48, 49, 232, 233, 234, 237], "includ": [3, 4, 7, 9, 24, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 91, 95, 202, 230, 232, 233, 234, 237, 241], "invers": [3, 4, 75, 150, 237], "through": [3, 4, 5, 8, 15, 48, 49, 79, 114, 140, 141, 142, 149, 232, 233, 234, 236, 237, 238, 241], "in_keys_inv": [3, 68, 75, 76, 90, 232, 236, 237, 241], "append_transform": [3, 26, 27, 28, 29, 78, 87, 232, 237, 240, 241], "doubletofloat": [3, 205, 208, 213, 215, 218, 232, 234, 236], "float32": [3, 12, 13, 15, 20, 26, 30, 33, 46, 51, 58, 59, 60, 68, 75, 87, 89, 101, 102, 116, 130, 131, 132, 134, 136, 137, 138, 139, 142, 143, 145, 146, 205, 208, 210, 213, 215, 218, 233, 234, 236, 237, 238, 240, 241], "float64": [3, 24, 42, 45, 47, 48, 49, 59, 60, 66, 78, 87, 91, 94, 139, 236, 241], "append": [3, 8, 26, 27, 28, 29, 43, 87, 232, 233, 234, 237, 238, 240], "regist": [3, 24, 25, 42, 45, 47, 48, 49, 91, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 230, 234], "manipul": [3, 4, 8, 78, 241], "keep": [3, 4, 7, 8, 13, 75, 78, 94, 95, 101, 136, 192, 199, 232, 233, 234, 237, 240, 241], "mind": 3, "go": [3, 7, 79, 232, 233, 234, 236, 237, 238, 240, 241], "what": [3, 8, 30, 42, 45, 47, 48, 49, 87, 101, 227, 233, 234, 237, 238, 240, 241], "singl": [3, 16, 24, 26, 27, 28, 29, 42, 45, 47, 48, 49, 63, 64, 78, 89, 94, 103, 113, 114, 142, 156, 163, 176, 177, 179, 180, 215, 224, 232, 233, 234, 236, 237, 238], "third_transform": 3, "prohibit": 3, "would": [3, 24, 42, 45, 47, 48, 49, 114, 230, 233, 234, 237, 241], "replac": [3, 6, 7, 24, 67, 101], "unexpect": [3, 24, 42, 45, 47, 48, 49, 91, 241], "behviour": 3, "fortun": 3, "eras": [3, 42, 45, 47, 48, 49], "ident": [3, 15, 24, 48, 49, 222, 223, 232, 233], "alreadi": [3, 8, 24, 42, 45, 47, 48, 49, 140, 232, 233, 234], "place": [3, 12, 13, 15, 16, 20, 24, 42, 43, 45, 47, 48, 49, 66, 78, 87, 91, 94, 95, 139, 196, 201, 202, 233, 234, 237], "chang": [3, 5, 7, 24, 36, 37, 38, 39, 42, 45, 47, 48, 49, 90, 91, 95, 232, 234, 237, 238, 241], "happen": [3, 133, 233, 238, 241], "catfram": [3, 233], "hold": [3, 168, 169, 237], "about": [3, 5, 7, 232, 233, 234, 237, 240, 241], "context": [3, 5, 8, 24, 42, 43, 45, 47, 48, 49, 87, 92, 117, 168, 169, 171, 174, 175, 178, 195, 232, 233, 234, 237, 238], "notic": [3, 234, 237], "loss": [3, 8, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 194, 199, 204, 209, 211, 212, 214, 215, 217, 220, 230, 232, 233, 237, 240], "parenthood": 3, "reason": [3, 4, 8, 24, 42, 45, 47, 48, 49, 78, 232, 233, 234], "henc": [3, 79, 232, 234, 237], "composit": [3, 20, 42, 45, 47, 48, 49, 234, 237], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 237], "log": [3, 4, 8, 108, 122, 127, 140, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 192, 193, 195, 199, 220, 230, 233, 234, 237, 240], "reveal": 4, "bug": [4, 240], "curv": 4, "won": [4, 24, 42, 43, 45, 47, 48, 49, 78, 94, 199, 224, 232, 233, 234], "tell": [4, 7], "exploit": 4, "video": [4, 182, 195, 224, 233], "game": [4, 5], "cannot": [4, 7, 20, 79, 233, 234, 237], "cv": 4, "need": [4, 7, 8, 10, 24, 39, 42, 45, 47, 48, 49, 71, 78, 91, 94, 95, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 117, 119, 120, 121, 123, 124, 133, 135, 136, 139, 149, 151, 163, 170, 182, 199, 224, 232, 233, 234, 237, 240, 241], "act": 4, "flip": 4, "imag": [4, 7, 52, 65, 78, 89, 94, 114, 232, 233, 238, 241], "correspondingli": 4, "relat": [4, 10, 71, 233, 237], "prescript": 4, "tune": [4, 238], "coeffici": 4, "bonu": [4, 153, 161, 162], "beta": [4, 26, 28, 33, 161, 232, 233, 240], "altern": [4, 21, 47, 151, 232, 233, 234], "reduc": [4, 6, 21, 233, 234], "downstream": [4, 232], "issu": [4, 5, 8, 79, 139, 140, 227, 240], "formul": 4, "ob": [4, 8, 20, 68, 75, 89, 101, 143, 171, 172, 173, 232, 233, 236, 237, 240, 241], "rate": [4, 95, 170, 232, 233, 234], "gradient": [4, 24, 42, 45, 47, 48, 49, 91, 112, 118, 126, 127, 152, 164, 170, 171, 172, 173, 199, 232, 234, 237], "norm": [4, 8, 199, 233, 234, 237], "easier": [4, 232], "behavior": [4, 24, 42, 45, 47, 48, 49, 91, 234], "local": [4, 7, 10, 15, 24, 42, 45, 47, 48, 49, 91, 185, 232, 240], "optima": 4, "sens": [4, 237], "product": [4, 9, 222, 223], "instead": [4, 7, 8, 11, 21, 24, 42, 45, 47, 48, 49, 71, 87, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 224, 232, 237, 241], "sum": [4, 23, 25, 45, 158, 170, 232, 233, 234, 237, 241], "track": [4, 12, 13, 15, 16, 83, 95, 136, 185, 192, 232, 233, 237], "stat": [4, 75, 203, 224, 234], "w": [4, 65, 80, 89, 136, 182, 233], "r": [4, 24, 75, 140, 151, 170, 233, 237, 241], "yield": [4, 15, 24, 42, 45, 47, 48, 49], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 154, 155, 234], "futur": [4, 24, 42, 45, 47, 48, 49, 78, 91, 94, 114, 227, 240], "past": [4, 233], "becom": [4, 232, 241], "between": [4, 5, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 67, 74, 81, 89, 91, 97, 103, 114, 140, 158, 159, 161, 167, 171, 195, 199, 232, 233, 241], "spars": 4, "ineffici": 4, "interact": [4, 5, 7, 8, 15, 140, 234, 237, 241], "ad": [4, 15, 24, 26, 27, 28, 29, 33, 42, 45, 47, 48, 49, 83, 91, 117, 118, 136, 153, 161, 162, 232, 241], "intermedi": [4, 238], "instrument": 4, "greatli": [4, 233], "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 232], "discov": 4, "score": 4, "undesir": 4, "though": [4, 114, 234], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 64, 67, 75, 101, 102, 113, 135, 136, 149, 171, 172, 173, 240], "subtask": 4, "hierarch": [4, 240], "framework": [4, 9, 46, 240, 241], "individu": [4, 24, 42, 45, 47, 48, 49, 232], "select": [4, 26, 27, 28, 29, 63, 64, 66, 69, 70, 71, 72, 74, 77, 79, 84, 86, 87, 88, 90, 93, 95, 102, 198, 232, 233], "fall": 4, "section": 4, "explicit": [4, 11, 113, 233], "mechan": [4, 24, 42, 45, 47, 48, 49, 91, 237], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 42, 45, 47, 48, 49, 234], "addition": 4, "per": [4, 12, 13, 15, 16, 48, 110, 199, 222, 223, 232, 233, 234, 240], "timestep": [4, 174, 175, 176, 177, 178, 179, 180, 233], "realli": 4, "larg": [4, 21, 234], "target": [4, 8, 24, 42, 43, 45, 47, 48, 49, 90, 139, 140, 154, 155, 156, 159, 160, 161, 163, 165, 166, 170, 171, 172, 173, 202, 219, 220, 230, 232, 237], "huge": 4, "practic": [4, 5, 8, 112, 126, 127, 151, 227, 232, 233, 234, 238, 241], "std": [4, 75, 95, 119, 133, 241], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 235, 236, 238, 239], "initi": [4, 7, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 75, 78, 87, 90, 91, 96, 102, 116, 117, 118, 133, 135, 136, 161, 163, 165, 205, 208, 210, 213, 215, 218, 224, 233, 237, 241], "estim": [4, 130, 131, 132, 152, 153, 161, 162, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 232, 233, 234, 236, 237, 238, 240, 241], "encount": [4, 48, 49, 227, 233, 237], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 232, 233, 234, 241], "bonus": 4, "denser": 4, "If": [4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 45, 46, 47, 48, 49, 64, 65, 67, 69, 71, 74, 75, 78, 79, 83, 84, 87, 90, 91, 94, 95, 101, 103, 113, 114, 133, 135, 136, 139, 140, 141, 142, 148, 149, 151, 158, 165, 170, 171, 172, 173, 179, 180, 194, 196, 199, 201, 203, 205, 213, 215, 218, 220, 224, 227, 232, 233, 234, 236, 237, 240, 241], "prior": [4, 124, 158], "freshli": 4, "proper": [4, 6, 7, 233, 234], "doesn": [4, 11, 47], "drop": [4, 101], "meant": [4, 46], "encourag": [4, 233], "measur": [4, 233, 234], "novelti": 4, "revisit": 4, "previous": [4, 234, 241], "diminish": 4, "decreas": 4, "ideal": [4, 75, 232, 237], "down": [4, 12, 13, 15, 16, 233], "gone": [4, 5], "anyth": 4, "try": [4, 7, 8, 148, 232, 233, 234, 237, 240, 241], "distil": 4, "add": [4, 6, 24, 26, 27, 28, 29, 40, 41, 42, 45, 47, 48, 49, 117, 152, 194, 232, 233, 234, 237, 240], "nois": [4, 96, 118, 128, 136, 163, 195, 224, 232], "exploratori": [4, 153, 161, 162], "could": [4, 6, 232, 233, 234, 238, 241], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 26, 28, 29, 33, 36, 37, 38, 39, 154, 155, 163, 165, 230, 232, 233], "schedul": [4, 7, 195, 234, 237], "separ": [4, 8, 12, 13, 16, 17, 78, 94, 154, 163, 165, 232, 233, 241], "divers": [4, 48, 49], "clone": [4, 8, 130, 131, 132, 139, 205, 213, 215, 218, 226, 232, 233, 237, 240], "bootstrap": [4, 233], "noisi": [4, 117, 118, 128], "unstabl": [4, 112, 126, 127], "inher": 4, "stochast": [4, 110, 118, 120, 124, 163, 165, 234], "enemi": 4, "miss": [4, 6, 7, 11, 20, 24, 42, 45, 47, 48, 49, 87, 91, 101, 141, 142, 227], "variabl": [4, 7, 8, 21, 25, 116, 130, 131, 132, 163, 230], "pomdp": 4, "previou": [4, 10, 24, 124, 232, 234, 237, 241], "loos": [4, 233, 234], "nonexist": 4, "sure": [4, 7, 39, 224, 232, 234, 237, 240, 241], "architectur": [4, 233], "sequenc": [4, 12, 13, 15, 16, 20, 22, 23, 26, 27, 40, 41, 62, 63, 64, 65, 67, 68, 71, 73, 75, 76, 79, 80, 81, 82, 83, 88, 89, 90, 95, 103, 108, 114, 122, 129, 137, 140, 141, 142, 143, 181, 182, 194, 196, 198, 199, 205, 213, 215, 218, 233, 234, 236, 241], "rather": [4, 232, 233, 234], "last": [4, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 71, 75, 79, 88, 103, 113, 114, 120, 133, 135, 232, 233, 234, 237, 238, 240, 241], "lstm": [4, 113, 119], "explicitli": [4, 232], "rel": [4, 87, 108, 125], "tend": 4, "stabl": [4, 9, 10, 232], "don": [4, 6, 7, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 42, 232, 233, 234, 240, 241], "compens": 4, "faster": [4, 47], "descent": [4, 118], "1000": [4, 95, 133, 135, 136, 140, 160, 232, 233, 234, 238, 240], "know": [4, 133, 135, 163, 195, 232, 233, 234], "minimum": [4, 19, 81, 110, 119, 125, 126, 127, 137, 149, 151, 165, 190, 232, 234, 237, 240, 241], "rang": [4, 8, 11, 21, 43, 95, 161, 230, 232, 233, 234, 237, 240], "manual": 4, "deviat": [4, 75, 95, 102, 110, 116, 117, 118, 133, 162, 232], "radic": 4, "begin": 4, "updat": [4, 8, 12, 13, 15, 16, 24, 33, 42, 45, 46, 47, 48, 49, 67, 91, 93, 95, 102, 116, 136, 139, 140, 152, 160, 162, 166, 171, 172, 173, 195, 199, 201, 206, 207, 219, 220, 230, 232, 233, 234, 237, 240, 241], "stabil": [4, 72], "stage": [4, 237], "never": 4, "prevent": [4, 112, 126, 127, 161, 162, 197, 232], "solv": [4, 10, 227, 232, 233, 234, 237], "entir": [4, 233, 234, 237], "submit": [4, 227, 240], "suffici": [4, 232, 233], "recommend": [4, 7], "system": [4, 5, 234, 237], "adequ": [4, 97, 234], "infeas": 4, "allevi": 4, "prune": 4, "develop": [4, 7, 232, 240], "filter": [4, 232], "fire": [4, 24, 42, 45, 47, 48, 49], "certain": [4, 24, 42, 45, 47, 48, 49, 72, 86, 91, 161, 232, 233, 234, 241], "illeg": 4, "chess": 4, "combin": [4, 90, 233], "grasp": 4, "releas": [4, 7, 10, 24, 42, 45, 47, 48, 49, 91, 240], "top": [4, 102, 116], "p": [4, 43], "wherein": 4, "cumul": [4, 83, 102, 234], "probabl": [4, 8, 108, 122, 127, 140, 233, 240], "q": [4, 104, 105, 106, 107, 109, 111, 145, 146, 154, 155, 156, 160, 163, 165, 215, 218], "flow": [4, 232, 234, 237], "directli": [4, 8, 46, 224, 234, 237], "reparameter": [4, 108, 122], "soft": [4, 160, 165, 166], "actor": [4, 102, 104, 106, 110, 116, 130, 131, 132, 134, 135, 136, 137, 138, 145, 146, 152, 153, 154, 157, 161, 162, 163, 165, 205, 208, 210, 213, 215, 218, 226, 232, 233, 234, 238, 240], "critic": [4, 8, 130, 152, 153, 161, 162, 164, 165, 234], "clip": [4, 81, 153, 199, 234, 237], "oppos": 4, "incorrect": 4, "thought": 4, "bound": [4, 12, 13, 15, 16, 19, 20, 24, 42, 45, 47, 48, 49, 95, 123, 124, 136, 139, 140, 233, 234, 241], "region": 4, "squash": [4, 240], "tanh": [4, 103, 112, 114, 125, 126, 127, 232, 234, 237, 238, 240], "correct": [4, 202, 233, 234], "prob": [4, 122, 234], "rememb": 4, "remap": 4, "origin": [4, 8, 12, 13, 15, 16, 67, 78, 91, 94, 139, 140, 160, 162, 215, 218, 236, 237, 241], "side": [4, 241], "tool": [5, 237, 241], "real": [5, 140, 237], "world": [5, 46, 144, 158, 237, 241], "robot": [5, 7, 78, 94], "adopt": [5, 232, 241], "histor": 5, "wa": [5, 7, 42, 45, 47, 48, 49, 91, 160, 166, 233, 234, 236, 240], "ceas": 5, "maintain": [5, 9, 237], "fork": 5, "gymnasium": [5, 11, 233, 234, 237, 240], "farama": [5, 234, 237], "foundat": [5, 234], "document": [5, 7, 24, 42, 45, 47, 48, 49, 91, 240], "further": [5, 234], "detail": [5, 6, 7, 24, 42, 45, 47, 48, 49, 91, 145, 152, 156, 162, 208, 227, 236], "instal": [5, 10, 199, 227, 234, 241], "usag": [5, 7, 165, 232, 233, 234, 236, 237, 238, 240, 241], "known": [5, 7, 8, 232, 233], "bc": [5, 240], "break": [5, 12, 13, 15, 24, 42, 45, 47, 48, 49, 95, 232, 233, 240], "face": [5, 8, 9, 241], "modif": [5, 20, 24, 42, 45, 47, 48, 49, 71, 232, 234, 237], "against": [5, 7, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 97, 139, 140, 234], "13": [5, 10, 11, 233, 234, 237, 238, 239], "howev": [5, 7, 24, 42, 45, 47, 48, 49, 83, 86, 91, 232, 233, 234, 241], "around": [5, 7, 16, 28, 29, 46, 140, 171, 241], "construct": [5, 24, 27, 42, 45, 47, 48, 49, 97, 124, 140, 199, 205, 213, 232, 234, 237, 241], "automat": [5, 42, 45, 47, 48, 49, 75, 129, 137, 232, 233, 234, 237, 240], "wrap": [5, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 97, 130, 131, 132, 144, 232, 233, 234, 241], "best": [5, 9, 233, 240], "gymwrapp": [5, 45, 226, 234, 240], "you": [5, 6, 7, 8, 10, 24, 42, 45, 47, 48, 49, 95, 227, 232, 233, 234, 236, 238, 240, 241], "feel": [5, 227, 240], "free": [5, 7, 152, 158, 162, 230, 234, 240], "gladli": 5, "instruct": [6, 7, 10, 67, 233, 234], "prepar": [6, 234], "conda": [6, 7, 227], "assum": [6, 20, 25, 29, 45, 48, 49, 65, 71, 78, 79, 83, 87, 94, 113, 165, 176, 177, 179, 180, 182, 232, 233, 234, 236, 237], "let": [6, 7, 24, 42, 45, 47, 48, 49, 195, 232, 233, 234, 236, 237, 238, 240, 241], "7": [6, 10, 21, 25, 102, 103, 113, 114, 116, 232, 233, 237, 238, 239, 240], "cmake": 6, "14": [6, 11, 75, 233, 234, 237], "activ": [6, 7, 9, 103, 110, 114, 162, 240], "sim": 6, "bullet": 6, "physic": [6, 7, 230, 232, 237], "headless": [6, 7], "mode": [6, 15, 24, 42, 45, 47, 48, 49, 91, 95, 98, 100, 108, 112, 122, 125, 126, 127, 140, 195, 232, 233, 240, 241], "cluster": [6, 7, 8, 227], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": 6, "y": [6, 7, 113, 148, 234], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": 6, "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 42, 45, 47, 48, 49, 85, 241], "command": [6, 7, 10, 232, 234, 237, 241], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 226], "_has_habitat": 6, "_env": [6, 241], "available_env": [6, 50, 51, 52, 53, 54, 55, 57, 58, 241], "startswith": 6, "oserror": 6, "load": [6, 12, 13, 15, 16, 26, 27, 28, 53, 224, 230], "libllvmlit": 6, "solut": [6, 7, 9, 227, 230, 240], "ionstal": 6, "path": [6, 7, 24, 36, 42, 45, 47, 48, 49, 78, 94, 116, 199, 230], "env_nam": [6, 47, 50, 52, 54, 57, 232, 234, 241], "llvmlite": 6, "config": [6, 7, 78, 94, 203, 205, 206, 207, 208, 210, 213, 215, 216, 218, 221], "var": [6, 7, 24, 42, 45, 47, 48, 49, 91], "ld_preload": [6, 7], "python3": [6, 7, 10, 232, 240], "8": [6, 7, 33, 51, 103, 104, 105, 111, 114, 130, 131, 132, 137, 139, 142, 232, 233, 234, 237, 238, 239, 240], "site": [6, 7], "bind": 6, "deactiv": [6, 7], "importerror": [6, 7, 10], "usr": [6, 7, 10, 232, 240], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 24, 42, 45, 47, 48, 49, 91], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco": [6, 8, 227, 234], "debug": [6, 8, 227, 241], "link": [6, 7], "right": [6, 7, 113, 232, 233, 234, 237, 241], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": 7, "repositori": 7, "stand": [7, 130, 131, 132, 236, 237, 241], "joint": [7, 233], "dynam": [7, 234, 237], "contact": 7, "engin": [7, 237], "facilit": [7, 77, 78, 94, 130, 131, 132, 232, 237], "biomechan": 7, "graphic": 7, "anim": 7, "machin": [7, 24], "area": 7, "demand": [7, 241], "fast": [7, 9, 51, 163, 232, 233, 234], "accur": [7, 232, 237], "articul": 7, "acquir": [7, 232, 234], "deepmind": [7, 8, 9, 52, 53, 234], "access": [7, 8, 24, 42, 45, 47, 48, 49, 78, 224, 227, 237], "whomev": 7, "licenc": 7, "incorpor": [7, 232, 237], "relianc": 7, "obsolet": 7, "seri": [7, 8, 25, 40, 41, 49, 74, 90, 182, 233, 234, 241], "legaci": 7, "pro": [7, 227], "tip": [7, 227], "capabl": [7, 230, 232, 236, 238, 241], "glfw": 7, "osmesa": 7, "egl": 7, "hand": [7, 232, 237], "gpu": [7, 8, 24, 42, 45, 47, 48, 49, 232, 234, 241], "advic": [7, 241], "sudo": [7, 227], "enabl": [7, 8, 136, 195, 234, 237], "apt": 7, "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 36, 37, 38, 39], "fact": [7, 8, 233, 234, 237, 238, 241], "indent": 7, "workflow": [7, 130, 131, 132], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "both": [7, 24, 42, 43, 45, 47, 48, 49, 91, 103, 114, 130, 131, 132, 195, 232, 234, 237, 238, 241], "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 24, 37, 42, 45, 47, 48, 49, 78, 94, 241], "binari": [7, 18, 25, 62, 145, 146], "These": [7, 24, 42, 45, 47, 48, 49, 78, 94, 232, 234, 237, 241], "setup": [7, 232], "mkdir": 7, "cd": 7, "tag": [7, 182, 185, 224], "earlier": [7, 232, 234], "roboti": 7, "u": [7, 10, 232, 234, 237, 238, 240, 241], "download": [7, 10, 78, 94, 232, 233, 234, 235, 236, 237, 238, 240, 241], "html": [7, 47, 233], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 45, 78, 94, 102, 196, 232, 233, 234], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 238], "bin": 7, "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "hard": [7, 160, 233, 241], "later": [7, 107, 140, 232, 234], "nativ": [7, 9, 42, 45, 47, 48, 49, 63], "modifi": [7, 8, 24, 42, 45, 47, 48, 49, 66, 71, 78, 87, 90, 91, 94, 136, 139, 202, 205, 213, 215, 218, 232, 233, 234], "nvidia": 7, "driver": 7, "older": [7, 11], "hack": 7, "line": [7, 24, 42, 45, 47, 48, 49, 232, 240], "adatp": 7, "script": [7, 97, 205, 208, 210, 213, 215, 218, 220, 224, 230, 232, 233, 234, 236, 237, 238, 240, 241], "unnot": [7, 79], "until": [7, 234], "complet": [7, 9, 45, 227, 233, 234, 236], "mujoco_pi": 7, "trigger": 7, "pipelin": [7, 234], "problem": [7, 8, 15, 233, 234, 237, 241], "troubleshoot": 7, "gl": 7, "h": [7, 65, 80, 89, 116, 182, 233], "eglshim": 7, "10": [7, 20, 43, 46, 59, 60, 89, 102, 113, 116, 135, 136, 163, 164, 165, 171, 172, 173, 190, 230, 232, 233, 234, 237, 240, 241], "fatal": 7, "No": 7, "directori": [7, 36, 185, 230], "glu": 7, "38": [7, 233, 234, 237], "disappear": [7, 233, 236], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "__init__": [7, 46, 102, 116, 143, 145, 148, 230, 237, 241], "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": 7, "runtimeerror": [7, 8, 24, 42, 45, 47, 48, 49, 91, 232, 241], "job": 7, "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 233, 234, 237], "114": [7, 237], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 237], "offscreenopenglcontext": 7, "fail": [7, 97], "opengl": 7, "global": [7, 24, 42, 45, 47, 48, 49, 140, 230, 232], "cuda_visible_devic": 7, "id": [7, 17, 136, 163, 188, 215], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "read": [7, 12, 13, 15, 16, 36, 37, 38, 39, 45, 63, 64, 66, 67, 69, 70, 71, 72, 77, 79, 84, 86, 87, 88, 90, 93, 95, 122, 130, 131, 132, 139, 140, 142, 144, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 172, 173, 182, 199, 205, 213, 215, 218, 232, 233, 234, 236, 237, 238, 241], "onscreen": 7, "101": [7, 237], "displai": [7, 199, 230, 233, 237], "correctli": [7, 24, 42, 45, 47, 48, 49], "loop": [8, 12, 13, 15, 16, 45, 101, 199, 230, 232, 236], "sketch": [8, 230], "_": [8, 43, 64, 67, 68, 75, 89, 95, 139, 151, 171, 172, 173, 232, 233, 234, 237, 240], "n_training_step": 8, "datapoint": 8, "onlin": [8, 12, 16, 152, 162, 190, 224, 234], "n_data_per_train": 8, "no_grad": [8, 24, 42, 45, 47, 48, 49, 232, 233, 234], "replay_buff": [8, 33, 34, 35, 36, 37, 38, 39, 40, 41, 196, 220, 232, 233, 234], "extend": [8, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 196, 230, 232, 233, 234, 238, 240], "offlin": [8, 12, 13, 15, 16, 97, 230, 238, 240], "loss_fn": [8, 240], "backward": [8, 24, 42, 45, 47, 48, 49, 95, 232, 233, 234, 237], "zero_grad": [8, 24, 42, 45, 47, 48, 49, 230, 232, 233, 234, 237], "backpropag": [8, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 237], "decor": [8, 11], "differenti": [8, 171, 172, 173, 232, 237], "understand": [8, 232, 233], "denomin": 8, "artifact": 8, "numer": [8, 95, 112, 126, 127, 139, 140, 197, 234, 241], "misconcept": 8, "save": [8, 24, 42, 45, 47, 48, 49, 181, 199, 230, 233], "freed": 8, "appear": [8, 25, 237], "compuat": 8, "twice": [8, 165], "fix": [8, 87, 165, 237, 241], "retain_graph": 8, "discuss": [8, 9], "inplac": [8, 24, 42, 45, 47, 48, 49, 232, 233], "accumul": 8, "onto": [8, 25, 133, 135, 139, 140, 233, 237], "exclud": [8, 69, 101, 232], "forward": [8, 24, 42, 45, 47, 48, 49, 63, 64, 66, 67, 69, 70, 71, 72, 75, 77, 78, 79, 84, 86, 87, 88, 90, 93, 95, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 117, 119, 120, 121, 123, 124, 133, 135, 136, 139, 140, 143, 145, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 172, 173, 232, 233, 237, 240], "submodul": [8, 24, 42, 45, 47, 48, 49], "param": [8, 24, 42, 45, 46, 47, 48, 49, 90, 108, 125, 137, 138, 139, 142, 143, 145, 146, 166, 169, 171, 172, 173, 208, 232, 233, 237, 238, 240], "grad": [8, 24, 42, 45, 47, 48, 49, 233, 234], "whose": [8, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 119, 139, 232], "strictli": [8, 24, 42, 45, 47, 48, 49, 91, 232, 234], "neg": [8, 12, 13, 15, 16, 26, 28, 33, 63, 71, 79, 92, 157, 232, 234, 237], "ask": [8, 232, 234, 238, 241], "core": [8, 205, 208, 210, 213, 215, 218, 230, 240], "much": [8, 26, 28, 33, 161, 162, 233, 234, 237, 241], "render": [8, 195, 232, 233, 234], "upon": [8, 237], "factor": [8, 24, 112, 118, 126, 127, 136, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 232, 233, 241], "fit": [8, 11, 75, 230], "everi": [8, 12, 13, 16, 20, 24, 25, 39, 42, 45, 47, 48, 49, 95, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 199, 230, 232, 233, 234, 237], "bottlneck": 8, "affect": [8, 24, 42, 45, 47, 48, 49, 90, 91, 97], "brax": [8, 50, 51, 241], "jax": [8, 11], "improperli": 8, "item": [8, 12, 70, 154, 155, 190, 230, 232, 233, 234, 237], "underli": [8, 237], "tedeiou": 8, "priorit": [8, 26, 28, 33, 154, 155, 163, 165, 232, 233], "amount": [8, 136, 233], "isn": [8, 139], "contigu": [8, 234, 237, 240, 241], "costli": [8, 237], "concaten": [8, 22, 23, 63, 64, 75, 90, 114, 142, 232, 233, 237, 241], "constitut": [8, 233, 237], "plain": 8, "profil": 8, "indic": [8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 45, 47, 48, 49, 64, 86, 87, 103, 114, 136, 149, 203, 224, 227, 230, 232, 234, 237, 241], "fulli": [8, 24, 42, 45, 47, 48, 49, 233, 237], "frequent": 8, "techniqu": [8, 233], "program": [8, 241], "functorch": [8, 10, 139, 142, 233, 240], "incl": 8, "suit": [8, 53, 234, 241], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "view": [8, 21, 24, 25, 42, 45, 47, 48, 49, 114, 145, 232, 233, 237, 240, 241], "expand": [8, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 139, 142, 232, 237, 240], "new_shap": 8, "content": [8, 15, 27, 47, 103, 114, 233, 234, 237, 240], "lost": 8, "permut": [8, 240, 241], "spin": [9, 241], "deep": [9, 63, 104, 105, 106, 107, 109, 136, 152, 160, 165, 166, 208, 232], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 75, 95, 232, 233, 234], "reddit": 9, "reagent": 9, "orient": [9, 241], "baselines3": 9, "tf": 9, "agent": [9, 118, 237], "bandit": 9, "tensorflow": 9, "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "simpl": [9, 24, 25, 42, 45, 47, 48, 49, 104, 140, 164, 171, 232, 233, 234, 241], "sequenti": [9, 24, 42, 45, 47, 48, 49, 141, 142, 234, 237, 238, 241], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 240], "grade": 9, "factori": 9, "throughput": [9, 232], "cherri": 9, "jaxrl": 9, "space": [9, 25, 30, 67, 121, 133, 135, 136, 139, 140, 142, 145, 146, 232, 233, 234, 237, 240, 241], "mbrl": [9, 46], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "dist": [10, 232, 240], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 234], "notebook": [10, 232, 233, 234, 235, 236, 237, 238, 240, 241], "24": [10, 233, 234, 237, 239], "11": [10, 21, 25, 43, 89, 102, 116, 233, 234, 237], "2022": [10, 240], "12": [10, 233, 234, 237], "pip": [10, 240, 241], "pip3": [10, 234], "extra": [10, 24, 42, 45, 47, 48, 49, 95, 101, 233, 234], "url": 10, "org": [10, 26, 33, 63, 78, 104, 105, 106, 107, 110, 111, 116, 118, 120, 121, 123, 124, 136, 145, 152, 156, 157, 158, 159, 160, 162, 164, 165, 166, 171, 174, 175, 178, 205, 208, 213, 218, 232, 233, 238], "whl": 10, "latest": [10, 47, 196, 234, 237, 240], "There": [10, 230, 233, 234, 237, 241], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": 11, "str": [11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 42, 44, 45, 47, 48, 49, 52, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 94, 95, 98, 100, 102, 103, 104, 105, 106, 107, 111, 113, 114, 115, 116, 117, 118, 119, 129, 133, 134, 135, 136, 137, 139, 140, 143, 145, 146, 147, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 203, 205, 208, 213, 215, 216, 218, 224, 234], "from_vers": 11, "to_vers": 11, "intersect": 11, "eg": [11, 36, 37, 38, 39, 67], "v": [11, 95, 113, 165, 233, 240], "longer": [11, 233], "fun": [11, 234], "self": [11, 24, 42, 45, 46, 47, 48, 49, 66, 78, 87, 91, 94, 102, 116, 133, 135, 139, 143, 145, 148, 230, 232, 237, 240], "x": [11, 17, 20, 24, 89, 103, 109, 111, 113, 114, 116, 145, 148, 149, 151, 174, 175, 176, 177, 178, 179, 180, 182, 199, 233, 234, 237, 240], "27": [11, 233, 234, 237, 238, 239], "create_env_fn": [12, 13, 15, 16, 43, 48, 49, 232, 240], "callabl": [12, 13, 15, 16, 24, 26, 27, 28, 42, 43, 45, 46, 47, 48, 49, 151, 206, 207, 222, 223, 224], "tensordictbas": [12, 13, 15, 16, 17, 20, 24, 28, 29, 42, 44, 45, 47, 48, 49, 63, 64, 66, 69, 70, 71, 74, 77, 79, 83, 84, 86, 87, 88, 90, 93, 95, 101, 102, 115, 116, 133, 135, 136, 139, 140, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 170, 171, 172, 173, 199, 237], "total_fram": [12, 13, 15, 16, 199, 202, 220, 230, 232, 233, 234, 240], "int": [12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 52, 63, 64, 65, 66, 67, 71, 72, 74, 75, 78, 79, 80, 85, 86, 88, 91, 92, 94, 97, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 123, 124, 125, 126, 133, 135, 136, 138, 139, 140, 145, 146, 152, 153, 154, 157, 158, 159, 161, 162, 163, 165, 181, 182, 190, 191, 192, 195, 196, 199, 201, 205, 208, 213, 215, 216, 218, 222, 223, 224, 237], "create_env_kwarg": [12, 13, 15, 16, 43, 47, 48, 49, 232], "dict": [12, 13, 15, 16, 20, 21, 22, 24, 42, 43, 45, 47, 48, 49, 87, 91, 95, 103, 104, 105, 106, 107, 111, 113, 114, 140, 185, 189, 195, 206, 207, 208, 215, 218, 222, 223, 224, 234, 241], "200": [12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 59, 60, 104, 105, 110, 123, 124, 237], "postproc": [12, 13, 15, 16, 232, 233], "pin_memori": [12, 15, 16, 26, 27, 28, 48, 49, 77, 232, 240], "given": [12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 46, 47, 48, 49, 66, 67, 75, 78, 87, 91, 94, 101, 102, 110, 116, 136, 139, 140, 141, 142, 145, 146, 151, 154, 155, 170, 171, 172, 173, 191, 195, 220, 230, 232, 233, 234, 237, 241], "datacollector": [12, 13, 15, 16, 140, 234], "synchron": [12, 47, 222, 223, 233, 234], "recept": 12, "safe": [12, 13, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 133, 136, 139, 140, 147, 232, 240], "env_mak": [12, 13, 15, 220, 241], "lambda": [12, 13, 15, 16, 43, 157, 159, 173, 176, 177, 179, 180, 220, 240, 241], "50": [12, 13, 15, 233, 234, 237, 238, 239], "linear": [12, 13, 15, 24, 42, 45, 46, 47, 48, 49, 66, 78, 87, 91, 94, 102, 103, 114, 116, 117, 118, 119, 123, 124, 129, 130, 131, 132, 135, 136, 137, 138, 139, 142, 143, 145, 146, 148, 171, 172, 173, 220, 232, 233, 236, 238, 240], "2000": [12, 13, 15, 233, 234], "enumer": [12, 13, 15, 24, 42, 45, 47, 48, 49, 232, 233, 234, 240], "step_count": [12, 13, 15, 86, 233, 234, 240], "int64": [12, 13, 15, 18, 21, 22, 23, 25, 134, 136, 138, 145, 146, 210, 233, 234, 237, 240, 241], "traj_id": [12, 13, 15, 17, 233, 240], "shutdown": [12, 13, 15, 16, 232, 233, 240], "del": [12, 13, 15, 232, 233, 234, 236, 240, 241], "total": [12, 13, 15, 16, 18, 22, 23, 25, 45, 153, 161, 162, 190, 192, 195, 199, 202, 203, 232, 233, 234, 236, 237, 238, 239, 240, 241], "greater": [12, 13, 16, 232, 233, 240], "close": [12, 13, 15, 16, 45, 47, 153, 161, 162, 232, 236, 237, 240], "signal": [12, 13, 16, 86, 232, 234], "sent": [12, 13, 16, 36, 37, 95], "server": [12, 13, 16], "dictionari": [12, 13, 15, 16, 20, 24, 42, 45, 47, 48, 49, 87, 91, 140, 222, 223, 224, 230, 232, 234, 237, 241], "span": [12, 13, 15, 16], "unless": [12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 234], "traje": [12, 13], "tori": [12, 13], "n_step": [12, 13, 15, 16, 24, 136, 232, 234], "independ": [12, 13, 15, 16, 90, 92, 165, 230, 232, 233, 240], "ignor": [12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 67, 69, 84, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 241], "length": [12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 48, 49, 79, 102, 103, 104, 106, 109, 114, 116, 139, 190, 196, 232, 233, 234, 237, 241], "mainli": [12, 13, 15, 16, 237], "postprocessor": [12, 13, 16], "format": [12, 13, 15, 16, 23, 24, 25, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139, 233, 241], "accord": [12, 13, 15, 16, 75, 82, 112, 117, 123, 126, 127, 237], "split_trajectori": [12, 13, 15, 16, 226], "accommod": [12, 13, 15, 16], "kept": [12, 13, 15, 16, 48, 49, 67, 90, 97, 101, 112, 126, 127], "long": [12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 67, 233], "load_state_dict": [12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 91, 95, 230, 232], "state_dict": [12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 91, 95, 224, 230, 232, 233, 241], "ordereddict": [12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 91, 95, 233], "form": [12, 13, 16, 24, 26, 27, 28, 42, 45, 47, 48, 49, 95, 151, 153, 161, 162, 199], "worker0": [12, 13, 16], "state_dict0": [12, 13, 16], "worker1": [12, 13, 16], "state_dict1": [12, 13, 16], "reset_idx": [12, 13, 16], "static_se": [12, 13, 15, 16, 42, 45, 47, 48, 49, 91], "integ": [12, 13, 15, 16, 22, 23, 24, 25, 32, 39, 42, 45, 47, 48, 49, 72, 75, 86, 103, 114], "increment": [12, 13, 15, 16, 42, 45, 47, 48, 49, 86, 161], "env_fn": [12, 13, 15, 16, 43, 222, 223], "v0": [12, 13, 16, 45, 54, 55, 57, 58, 66, 91, 95, 220], "env_fn_parallel": [12, 13, 15, 16], "6": [12, 13, 15, 16, 58, 75, 103, 108, 113, 114, 125, 143, 205, 208, 210, 213, 215, 218, 233, 234, 237, 238, 239, 240, 241], "out_se": [12, 13, 15, 16, 241], "shut": [12, 13, 15, 16, 233], "irrevers": [12, 13, 16], "arg": [13, 20, 24, 29, 36, 37, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 78, 85, 91, 92, 93, 94, 103, 114, 129, 130, 134, 138, 187, 192, 196, 199, 224, 232, 240], "kwarg": [13, 15, 16, 20, 24, 36, 37, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 78, 85, 87, 91, 92, 93, 94, 103, 104, 105, 106, 107, 111, 112, 114, 115, 122, 125, 127, 129, 130, 134, 137, 138, 140, 153, 161, 170, 182, 185, 187, 189, 192, 199, 205, 206, 207, 208, 213, 215, 218, 221, 222, 223, 232, 234, 240], "envcreat": [15, 220, 221, 224, 226, 232, 233, 240, 241], "return_same_td": 15, "stop": [15, 42, 45, 47, 48, 49, 234, 240, 241], "equat": [15, 136, 151, 153, 166, 234, 237], "exce": [15, 234], "batcher": 15, "cautious": [15, 162], "whole": [15, 20, 24, 42, 45, 47, 48, 49, 91, 190, 233, 234], "chunk": 15, "policy_state_dict": 15, "env_state_dict": 15, "paradigm": 16, "regular": [16, 139, 140, 146, 156, 201, 230, 232, 241], "prefer": [16, 79, 84, 234], "mere": 16, "rollout_tensordict": 17, "max": [17, 25, 28, 33, 67, 88, 125, 126, 127, 153, 163, 165, 232, 234], "durat": [17, 233], "discret": [18, 21, 22, 23, 25, 32, 67, 122, 145, 146, 156, 233, 241], "5": [18, 43, 47, 58, 59, 60, 102, 103, 110, 112, 113, 114, 116, 126, 127, 134, 138, 145, 146, 161, 232, 233, 237, 238, 240, 241], "assert_is_in": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "belong": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "otherwis": [18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 67, 75, 87, 91, 95, 112, 126, 127, 158, 165, 195, 196, 230, 232, 233, 234, 237, 241], "encod": [18, 19, 20, 21, 22, 23, 25, 27, 30, 31, 32, 67, 121, 122, 123, 134, 138, 145, 146, 151, 233, 234, 237], "val": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 233, 240], "ndarrai": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 45, 136], "np": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 45, 232, 237], "tupl": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 45, 47, 48, 49, 75, 104, 113, 114, 119, 154, 157, 171, 172, 173, 193, 197, 209, 211, 214, 217], "compli": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "current": [18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 56, 79, 91, 98, 101, 110, 113, 124, 136, 145, 146, 188, 205, 213, 230, 233, 234, 237, 240, 241], "least": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "complient": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "singleton": [18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 103, 114, 232], "slice": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "tensor_to_index": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "is_in": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 241], "project": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 67, 133, 135, 136, 139, 140, 233, 240, 241], "back": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 139, 140, 232, 234, 237], "rand": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 46, 51, 58, 102, 116, 237, 240, 241], "uniform": [18, 19, 20, 21, 22, 23, 25, 26, 28, 30, 31, 32, 33], "unbound": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 87, 237], "to_numpi": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "transformed_in": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 90, 91, 119, 125, 224], "type_check": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "fill": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 87, 237, 238], "float": [19, 21, 24, 25, 26, 28, 31, 33, 42, 45, 47, 48, 49, 66, 68, 75, 78, 81, 82, 87, 89, 91, 94, 95, 108, 110, 112, 116, 117, 118, 123, 124, 125, 127, 133, 135, 136, 139, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 197, 232, 233, 241], "upper": 19, "unnam": 20, "effect": [20, 24, 42, 45, 47, 48, 49, 83, 91, 199, 233, 241], "pixels_spec": 20, "boundedtensorspec": [20, 130, 131, 132, 135, 136, 137, 226, 234, 237, 240, 241], "32": [20, 59, 60, 103, 104, 105, 111, 114, 120, 121, 232, 233, 234, 237, 238, 240, 241], "observation_vector_spec": 20, "33": [20, 24, 42, 45, 47, 48, 49, 103, 114, 233, 234, 237], "composite_spec": 20, "observation_vector": [20, 64, 205, 208, 213, 215, 218, 232], "td": [20, 50, 51, 52, 53, 54, 55, 57, 58, 64, 67, 68, 75, 89, 91, 95, 101, 102, 115, 116, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 172, 173, 176, 177, 179, 180, 181, 190, 198, 205, 208, 210, 213, 215, 218, 237, 240, 241], "within": [20, 24, 29, 42, 45, 47, 48, 49, 95, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 237, 240], "randn": [20, 75, 113, 119, 129, 130, 131, 132, 134, 137, 138, 139, 142, 143, 145, 146, 171, 172, 173, 198, 240, 241], "td_project": 20, "include_nest": 20, "leaves_onli": 20, "keysview": 20, "reflect": [20, 101, 202, 234], "immedi": [20, 24, 42, 45, 47, 48, 49, 170], "children": [20, 24, 42, 45, 47, 48, 49], "selected_kei": [20, 84, 232], "onehottensorspec": 21, "categor": [21, 23, 25, 122, 145, 146], "action_valu": [21, 25, 134, 138, 145, 146, 210, 233], "arang": [21, 25, 134, 145, 190], "argmax": [21, 134, 138, 145, 146], "dim": [21, 63, 64, 87, 92, 113, 224, 233, 237], "chosen_action_valu": [21, 25, 138, 210, 233], "outcom": [21, 25, 108, 125], "to_one_hot": [21, 22], "hot": [21, 22, 23, 25, 67, 122, 134, 138, 145, 146, 233], "to_one_hot_spec": [21, 22], "onehotdiscretetensorspec": [21, 134, 138, 145, 146, 226], "convert": [21, 22, 23, 24, 25, 42, 45, 47, 48, 49, 66, 68, 78, 87, 91, 94, 95, 139, 151, 233, 234, 237], "nvec": [22, 23], "cardin": [22, 23, 145, 146, 234], "ax": [22, 117, 118], "multionehotdiscretetensorspec": [22, 226], "use_regist": [23, 25], "to_categor": [23, 25], "to_categorical_spec": [23, 25], "multidiscretetensorspec": [23, 226], "gamma": [24, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 220, 232, 233, 234, 240], "present": [24, 26, 33, 42, 45, 47, 48, 49, 69, 83, 84, 101, 104, 105, 106, 107, 111, 118, 136, 139, 140, 141, 142, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 224, 230, 232, 236, 240], "sutton": 24, "1988": 24, "predict": [24, 110, 115, 116, 144, 156, 158, 159, 165, 170, 233], "tempor": [24, 116, 172, 233], "44": [24, 233, 234, 237, 238], "discount": [24, 43, 152, 153, 154, 155, 156, 157, 159, 161, 162, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 232, 233, 234], "ahead": [24, 241], "add_modul": [24, 42, 45, 47, 48, 49], "child": [24, 42, 45, 47, 48, 49], "fn": [24, 42, 45, 47, 48, 49, 119, 222, 223], "recurs": [24, 42, 45, 47, 48, 49], "init": [24, 42, 45, 47, 48, 49, 232, 233, 234], "init_weight": [24, 42, 45, 47, 48, 49], "m": [24, 42, 45, 47, 48, 49, 67, 140, 237], "fill_": [24, 42, 45, 47, 48, 49, 233, 241], "net": [24, 42, 45, 47, 48, 49, 113, 163, 215, 220, 233, 237, 238, 240], "in_featur": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 103, 104, 105, 106, 107, 113, 114, 117, 118, 130, 139, 240], "out_featur": [24, 42, 45, 46, 47, 48, 49, 66, 78, 87, 91, 94, 102, 103, 104, 105, 106, 107, 110, 111, 113, 114, 116, 117, 118, 130, 134, 139, 232, 240], "bia": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 103, 110, 114, 117, 118, 119, 135, 136, 139, 149, 150, 151, 233, 234, 240], "requires_grad": [24, 42, 45, 47, 48, 49, 232], "bfloat16": [24, 42, 45, 47, 48, 49], "cast": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 95, 139, 205, 208, 210, 213, 215, 218, 241], "datatyp": [24, 42, 45, 47, 48, 49], "direct": [24, 42, 45, 47, 48, 49, 233], "member": [24, 42, 45, 47, 48, 49], "xdoctest": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "skip": [24, 42, 45, 47, 48, 49, 72, 91, 97, 140, 181, 182, 192, 195, 234, 237], "buf": [24, 42, 45, 47, 48, 49], "20l": [24, 42, 45, 47, 48, 49], "1l": [24, 42, 45, 47, 48, 49], "5l": [24, 42, 45, 47, 48, 49], "associ": [24, 42, 45, 47, 48, 49, 123, 224], "copi": [24, 42, 45, 47, 48, 49, 91, 101, 232, 233], "doubl": [24, 26, 28, 31, 42, 45, 47, 48, 49, 66, 68, 78, 87, 89, 91, 94, 139, 155, 156, 160, 163, 166, 232, 233, 234, 241], "eval": [24, 42, 45, 47, 48, 49, 91, 95, 232, 233, 234], "evalu": [24, 42, 45, 47, 48, 49, 91, 108, 122, 127, 163, 206, 207, 233, 234], "particular": [24, 42, 45, 47, 48, 49, 91, 230, 233, 236], "dropout": [24, 42, 45, 47, 48, 49, 91], "batchnorm": [24, 42, 45, 47, 48, 49, 91], "disabl": [24, 42, 45, 47, 48, 49, 91, 112, 126, 127, 232], "comparison": [24, 42, 45, 47, 48, 49, 91], "similar": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 93, 94, 95, 139, 140, 232, 233, 234, 237, 241], "confus": [24, 42, 45, 47, 48, 49, 91], "extra_repr": [24, 42, 45, 47, 48, 49], "represent": [24, 42, 45, 47, 48, 49, 78, 94, 232, 237, 238, 241], "string": [24, 42, 45, 47, 48, 49, 78, 94, 140, 151, 181, 198, 205, 213, 215, 218, 234], "nontermin": 24, "original_reward": 24, "newli": 24, "OR": 24, "latter": [24, 42, 45, 47, 48, 49, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 222, 223], "reshap": [24, 114, 234], "get_buff": [24, 42, 45, 47, 48, 49], "throw": [24, 42, 45, 47, 48, 49, 241], "docstr": [24, 42, 45, 47, 48, 49], "get_submodul": [24, 42, 45, 47, 48, 49], "explan": [24, 42, 45, 47, 48, 49], "qualifi": [24, 42, 45, 47, 48, 49], "referenc": [24, 42, 45, 47, 48, 49], "attributeerror": [24, 42, 45, 47, 48, 49], "invalid": [24, 42, 45, 47, 48, 49], "resolv": [24, 42, 45, 47, 48, 49], "get_extra_st": [24, 42, 45, 47, 48, 49, 95], "set_extra_st": [24, 42, 45, 47, 48, 49, 95], "picklabl": [24, 42, 45, 47, 48, 49, 95], "ensur": [24, 26, 28, 33, 42, 45, 47, 48, 49, 63, 78, 95, 147, 232, 233, 234, 237], "guarante": [24, 36, 37, 38, 39, 42, 45, 47, 48, 49, 95, 240], "pickl": [24, 42, 45, 47, 48, 49, 95], "get_paramet": [24, 42, 45, 47, 48, 49], "sai": [24, 42, 45, 47, 48, 49, 238, 241], "net_b": [24, 42, 45, 47, 48, 49], "net_c": [24, 42, 45, 47, 48, 49], "conv": [24, 42, 45, 47, 48, 49, 103, 233], "conv2d": [24, 42, 45, 47, 48, 49, 103, 240], "16": [24, 42, 45, 47, 48, 49, 233, 234, 237, 238], "kernel_s": [24, 42, 45, 47, 48, 49, 103, 104, 105, 233, 240], "stride": [24, 42, 45, 47, 48, 49, 103, 104, 105, 111, 233, 240], "diagram": [24, 42, 45, 47, 48, 49], "show": [24, 42, 45, 47, 48, 49, 232, 233, 234, 237, 240], "itself": [24, 42, 45, 47, 48, 49, 234], "degre": [24, 42, 45, 47, 48, 49], "named_modul": [24, 42, 45, 47, 48, 49], "o": [24, 42, 45, 47, 48, 49], "transit": [24, 42, 45, 47, 48, 49, 144, 232, 233, 237], "half": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139, 232], "ipu": [24, 42, 45, 47, 48, 49], "strict": [24, 42, 45, 47, 48, 49, 91], "descend": [24, 42, 45, 47, 48, 49, 91], "exactli": [24, 42, 45, 47, 48, 49, 56, 91, 232], "persist": [24, 42, 45, 47, 48, 49, 91, 101], "enforc": [24, 42, 45, 47, 48, 49, 91, 141, 237], "missing_kei": [24, 42, 45, 47, 48, 49, 91], "unexpected_kei": [24, 42, 45, 47, 48, 49, 91], "namedtupl": [24, 42, 45, 47, 48, 49, 91], "duplic": [24, 42, 45, 47, 48, 49, 155, 156], "l": [24, 42, 45, 47, 48, 49, 170, 234, 237], "idx": [24, 42, 45, 47, 48, 49], "named_buff": [24, 42, 45, 47, 48, 49, 233], "prefix": [24, 42, 45, 47, 48, 49, 91, 181, 241], "remove_dupl": [24, 42, 45, 47, 48, 49], "prepend": [24, 42, 45, 47, 48, 49], "running_var": [24, 42, 45, 47, 48, 49], "named_children": [24, 42, 45, 47, 48, 49], "conv4": [24, 42, 45, 47, 48, 49], "conv5": [24, 42, 45, 47, 48, 49], "memo": [24, 42, 45, 47, 48, 49], "named_paramet": [24, 42, 45, 47, 48, 49, 233], "register_backward_hook": [24, 42, 45, 47, 48, 49], "removablehandl": [24, 42, 45, 47, 48, 49], "deprec": [24, 42, 45, 47, 48, 49, 91, 241], "favor": [24, 42, 45, 47, 48, 49, 234], "register_full_backward_hook": [24, 42, 45, 47, 48, 49], "register_buff": [24, 42, 45, 47, 48, 49], "running_mean": [24, 42, 45, 47, 48, 49], "alongsid": [24, 42, 45, 47, 48, 49], "num_featur": [24, 42, 45, 47, 48, 49], "register_forward_hook": [24, 42, 45, 47, 48, 49, 145, 146], "with_kwarg": [24, 42, 45, 47, 48, 49], "posit": [24, 26, 27, 28, 29, 42, 45, 47, 48, 49, 71, 72, 85, 86, 88, 91, 92, 119, 234, 237], "signatur": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139, 148, 237], "possibli": [24, 42, 45, 47, 48, 49, 103, 139, 199, 234, 237, 241], "register_module_forward_hook": [24, 42, 45, 47, 48, 49], "register_forward_pre_hook": [24, 42, 45, 47, 48, 49], "invok": [24, 42, 45, 47, 48, 49], "And": [24, 42, 45, 47, 48, 49], "forward_pr": [24, 42, 45, 47, 48, 49], "register_module_forward_pre_hook": [24, 42, 45, 47, 48, 49], "respect": [24, 42, 45, 47, 48, 49, 62, 66, 78, 79, 87, 91, 94, 124, 139, 143, 194, 234], "grad_input": [24, 42, 45, 47, 48, 49], "grad_output": [24, 42, 45, 47, 48, 49], "subsequ": [24, 42, 45, 47, 48, 49], "technic": [24, 42, 45, 47, 48, 49, 233], "similarli": [24, 42, 45, 47, 48, 49, 141, 142, 232, 241], "caller": [24, 42, 45, 47, 48, 49], "register_module_full_backward_hook": [24, 42, 45, 47, 48, 49], "register_full_backward_pre_hook": [24, 42, 45, 47, 48, 49], "backward_pr": [24, 42, 45, 47, 48, 49], "register_module_full_backward_pre_hook": [24, 42, 45, 47, 48, 49], "register_load_state_dict_post_hook": [24, 42, 45, 47, 48, 49], "post": [24, 42, 45, 47, 48, 49, 232, 233], "incompatible_kei": [24, 42, 45, 47, 48, 49], "thrown": [24, 42, 45, 47, 48, 49], "clear": [24, 42, 45, 47, 48, 49, 191], "register_modul": [24, 42, 45, 47, 48, 49, 230], "alia": [24, 42, 45, 47, 48, 49], "register_paramet": [24, 42, 45, 47, 48, 49], "register_state_dict_pre_hook": [24, 42, 45, 47, 48, 49], "keep_var": [24, 42, 45, 47, 48, 49, 91], "made": [24, 36, 37, 38, 39, 42, 45, 47, 48, 49, 136, 232, 238], "requires_grad_": [24, 42, 45, 47, 48, 49, 232], "autograd": [24, 42, 45, 47, 48, 49, 91], "freez": [24, 42, 45, 47, 48, 49], "finetun": [24, 42, 45, 47, 48, 49], "gan": [24, 42, 45, 47, 48, 49], "share_memori": [24, 42, 43, 45, 47, 48, 49, 232], "share_memory_": [24, 42, 45, 47, 48, 49, 240], "destin": [24, 42, 45, 47, 48, 49, 91, 101], "averag": [24, 42, 45, 47, 48, 49, 91, 95, 136, 157, 158, 197, 232, 234], "shallow": [24, 42, 45, 47, 48, 49, 91], "pleas": [24, 42, 45, 47, 48, 49, 91, 227], "detach": [24, 42, 45, 47, 48, 49, 91, 232, 233], "non_block": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139, 233], "memory_format": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "channels_last": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "Its": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "complex": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139, 232, 233], "integr": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 107, 116, 139, 237, 238], "unchang": [24, 42, 45, 47, 48, 49, 66, 67, 78, 87, 91, 94, 139], "tri": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "host": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "pin": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "4d": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "ignore_w": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "1913": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "3420": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "5113": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "2325": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "torch_doctest_cuda1": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "gpu1": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "1914": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "5112": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "2324": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "float16": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "cdoubl": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "3741": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "j": [24, 26, 33, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139, 230, 233], "2382": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "5593": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "4443": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "complex128": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "6122": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "1150": [24, 42, 45, 47, 48, 49, 66, 78, 87, 91, 94, 139], "to_empti": [24, 42, 45, 47, 48, 49], "dst_type": [24, 42, 45, 47, 48, 49], "xpu": [24, 42, 45, 47, 48, 49], "set_to_non": [24, 42, 45, 47, 48, 49], "unidimension": 25, "keepdim": 25, "user_regist": 25, "experiment": [25, 140], "priori": 25, "definit": [25, 39], "uniqu": 25, "discretebox": [25, 241], "discretetensorspec": [25, 226, 241], "alpha": [26, 28, 33, 103, 163, 165, 232, 233, 240], "ep": [26, 28, 33, 95, 136, 153, 166, 197], "1e": [26, 28, 33, 95, 108, 110, 119, 125, 234], "08": [26, 28, 33, 233, 234, 237], "collate_fn": [26, 27, 28, 240], "prefetch": [26, 27, 28, 232, 233], "schaul": [26, 33], "quan": [26, 33], "antonogl": [26, 33], "silver": [26, 33], "2015": [26, 33], "arxiv": [26, 33, 63, 78, 104, 105, 106, 107, 110, 111, 116, 118, 120, 121, 123, 124, 136, 145, 152, 156, 157, 158, 159, 160, 162, 165, 166, 171, 174, 175, 178, 205, 208, 213, 218, 232, 238], "ab": [26, 33, 78, 95, 110, 111, 116, 118, 120, 121, 123, 124, 152, 157, 158, 159, 160, 162, 165, 205, 213, 232, 238], "1511": [26, 33, 111], "05952": [26, 33], "expon": [26, 28, 33], "\u03b1": [26, 28, 33], "determin": [26, 28, 33, 78, 94, 136, 233], "delta": [26, 28, 33, 125, 140, 226], "null": [26, 28, 33, 62, 232], "max_siz": [26, 27, 28, 36, 38, 39, 233], "1_000": [26, 27, 28], "merg": [26, 27, 28, 237], "mini": [26, 27, 28], "style": [26, 27, 28], "rb": [26, 27, 28, 233, 238, 240], "insert_transform": [26, 27, 28, 29], "insert": [26, 27, 28, 29, 40, 41, 92, 233], "return_info": [26, 27, 28, 29], "sampler": [26, 27, 28, 29, 33, 34, 36, 37, 38, 39, 79, 226, 232, 234], "info": [26, 27, 28, 29, 42, 45, 47, 48, 49, 59, 60, 96], "writer": [27, 40, 226, 234], "randomsampl": [27, 226, 232], "roundrobinwrit": [27, 226], "priority_kei": [28, 29, 155, 156, 165, 240], "td_error": [28, 29, 154, 155, 156, 163, 165, 232, 240], "reduct": [28, 33], "prioritizedreplaybuff": [28, 226, 240], "update_tensordict_prior": [28, 232, 240], "min": [28, 33, 125, 126, 127, 153, 163, 165, 232, 233, 234], "median": [28, 33, 140], "include_info": [28, 29], "kw": [29, 40], "replaybuff": [29, 41, 79, 216, 220, 226, 234, 238, 240], "meta": [30, 44, 230, 234], "describ": [30, 64, 90, 125, 126, 188, 205, 213, 234, 237, 241], "max_capac": [33, 232], "update_prior": [33, 196, 230, 240], "uniformli": [34, 241], "scratch_dir": [36, 232], "memmap": [36, 48, 49, 95, 196], "attach": [36, 37, 38, 39, 233], "entiti": [36, 37, 38, 39], "alloc": [37, 232], "__len__": 39, "roundrobin": 40, "piec": [40, 41, 234, 237], "_inplace_upd": [42, 47, 48, 49, 50, 51, 59, 60, 91], "_batch_lock": [42, 47, 48, 49, 50, 51, 59, 60, 91], "run_type_check": [42, 46], "batch_lock": [42, 44, 45, 47, 48, 49, 87, 91, 237], "environn": [42, 45, 46, 47, 48, 49, 91], "immut": [42, 45, 47, 48, 49, 91, 205, 213], "fake_tensordict": [42, 45, 47, 48, 49, 232, 233], "fake": [42, 45, 47, 48, 49, 232, 233], "overridden": [42, 45, 47, 48, 49, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149], "recip": [42, 45, 47, 48, 49, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149], "afterward": [42, 45, 47, 48, 49, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149, 241], "former": [42, 45, 47, 48, 49, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149], "silent": [42, 45, 47, 48, 49, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 133, 135, 136, 149], "rand_act": [42, 45, 47, 48, 49], "_step": [42, 45, 47, 48, 49, 71], "privat": [42, 45, 47, 48, 49, 237, 241], "_reset": [42, 45, 46, 47, 48, 49, 102, 116], "overwritten": [42, 45, 47, 48, 49, 71], "callback": [42, 45, 47, 48, 49], "auto_reset": [42, 45, 47, 48, 49, 233, 237], "auto_cast_to_devic": [42, 45, 47, 48, 49], "break_when_any_don": [42, 45, 47, 48, 49], "return_contigu": [42, 45, 47, 48, 49, 97, 236], "soon": [42, 45, 47, 48, 49], "lazystackedtensordict": [42, 45, 46, 47, 48, 49, 102, 116, 236, 240, 241], "concomitt": [42, 45, 47, 48, 49], "workspac": [42, 45, 47, 48, 49], "carri": [42, 45, 47, 48, 49, 233, 237], "creator": [43, 206, 207, 222, 223, 224], "substitut": [43, 95], "multiprocess": [43, 44, 95, 233, 234, 237, 241], "vecnorm": [43, 224], "mp": [43, 95], "env_creat": [43, 232], "test_env1": 43, "_td": 43, "observation_count": [43, 241], "test_env2": 43, "sleep": [43, 241], "__name__": [43, 233], "__main__": 43, "p1": 43, "p2": 43, "join": [43, 205, 213, 234], "9934": 43, "env_str": 44, "union": [45, 103, 163], "discard": [45, 101, 181, 241], "info_dict_read": 45, "set_info_dict_read": 45, "put": [45, 95, 224, 233, 234, 237], "f": [45, 151, 171, 172, 173, 232, 233, 234, 237, 241], "read_act": 45, "read_don": 45, "reader": [45, 232, 233], "frame_skip": [45, 52, 53, 54, 57, 72, 192, 195, 202, 230, 232, 234, 240], "broken": [45, 97], "read_ob": 45, "dictat": [45, 140, 237], "inner": [45, 67, 230, 232, 234, 241], "read_reward": 45, "total_reward": 45, "step_reward": 45, "far": [45, 112, 126, 127, 237, 241], "baseinfodictread": 45, "info_dict": 45, "hoc": 45, "manner": [45, 78, 232, 233, 234, 236, 237], "dict_read": 45, "default_info_dict_read": 45, "my_info_kei": 45, "some_env": 45, "limit": [46, 232, 237], "safeti": 46, "constraint": [46, 234], "behav": [46, 56, 122, 238], "unboundedcontinuoustensorspec": [46, 87, 102, 129, 130, 131, 132, 139, 142, 143, 226, 234, 237, 241], "mymbenv": [46, 102, 116], "world_model": [46, 102, 116, 158], "super": [46, 102, 116, 143, 145, 148, 237, 240], "hidden_observ": [46, 102, 116], "mlp": [46, 102, 103, 104, 105, 106, 107, 113, 116, 130, 134, 205, 213, 215, 218, 226, 232, 233, 236, 238, 240], "worldmodelwrapp": [46, 102, 116, 226], "safemodul": [46, 102, 115, 130, 131, 132, 133, 135, 136, 137, 140, 142, 144, 147, 148, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 165, 170, 171, 172, 173, 195, 206, 207, 220, 226, 240], "activation_class": [46, 102, 103, 104, 105, 106, 107, 110, 111, 114, 116, 232, 233, 240], "relu": [46, 102, 116, 119, 151], "activate_last_lay": [46, 102, 107, 114, 116], "depth": [46, 102, 103, 104, 105, 106, 107, 110, 111, 114, 116, 120, 121, 134, 233, 236], "less": [47, 222, 223, 232, 233, 234, 240], "equal": [47, 48, 49, 74, 75, 103, 109, 114, 167, 190, 222, 223, 234, 238], "readthedoc": 47, "io": 47, "en": 47, "python_interfac": 47, "num_work": [47, 48, 49, 232, 233], "thread": 47, "task_id": 47, "my_env_fun": [48, 49], "custom_attribute_list": [48, 49], "custom_attribut": [48, 49], "custom_method_list": [48, 49], "custom_method": [48, 49], "deploi": [48, 49], "creation": [48, 49, 241], "slight": [48, 49, 233], "overhead": [48, 49], "share_individual_td": [48, 49], "lazi": [48, 49, 78, 117, 141, 142, 232, 233, 236, 241], "shared_memori": [48, 49], "policy_proof": [48, 49], "ll": [48, 49, 232, 233, 234, 241], "hidden": [48, 49, 110, 113, 120, 121, 123, 124, 130, 131, 132, 139, 142, 205, 213, 236, 240], "instanti": [48, 49, 90, 232, 233, 237, 241], "allow_step_when_don": [48, 49], "update_kwarg": [48, 49], "googl": [50, 51, 234], "ant": [50, 51, 238], "get_environ": 51, "87": [51, 233, 237, 238], "acrobot": [51, 241], "fetch": [51, 238, 241], "dm_control": [52, 53, 232, 236, 241], "task_nam": 52, "cheetah": [52, 53, 232, 241], "habitat": [56, 227, 238], "serv": [56, 241], "placehold": [56, 91], "secur": 56, "jumanji": [57, 58], "snake": [57, 58], "6x6": [57, 58], "td1": 58, "int32": [58, 240], "12x12": 58, "tsp50": 58, "tsp100": 58, "vma": [59, 60], "scenario_nam": [59, 60], "flock": [59, 60], "num_env": [59, 60], "continuous_act": [59, 60], "scenario": [59, 60, 232, 237], "n_agent": [59, 60], "cohesion_rew": [59, 60], "collision_rew": [59, 60], "separation_rew": [59, 60], "velocity_rew": [59, 60], "18": [59, 60, 233, 234, 237, 241], "model_bas": [61, 102, 116], "transform_reward_spec": [62, 66, 68, 81, 82, 90, 92], "success": [63, 90, 233, 237, 240], "account": [63, 233], "movement": 63, "veloc": [63, 237, 241], "propos": [63, 115, 160, 166, 215, 218], "plai": [63, 233, 234, 241], "pdf": [63, 104, 105, 106, 107, 136, 145, 156, 163, 166, 171, 174, 175, 178, 208, 215, 218], "1312": [63, 233], "5602": 63, "_buffer": [63, 88], "transform_observation_spec": [63, 64, 65, 66, 68, 69, 71, 73, 75, 80, 83, 84, 86, 87, 88, 89, 90, 92, 237], "del_kei": [64, 233, 236, 237], "unsqueeze_if_oor": 64, "observation_posit": 64, "observation_veloc": 64, "delet": 64, "unsqueez": [64, 89, 92, 113, 237], "key1": [64, 190, 198], "key2": [64, 190, 198], "crop": [65, 79, 182], "center": [65, 182], "width": [65, 80], "height": [65, 80], "squar": [65, 112, 126, 127, 182], "rewardsc": [66, 91, 232, 233], "rewardclip": 66, "transformed_env": [66, 90, 91], "tranform": [66, 69, 84, 86, 90, 93, 233], "dest": [66, 78, 94, 139], "transform_input_spec": [66, 67, 68, 75, 86, 90, 92], "num_actions_effect": 67, "max_act": 67, "action_kei": [67, 102, 115, 116, 133, 135], "include_forward": 67, "dimension": [67, 171, 174, 175, 178], "num_act": [67, 233], "action_out": 67, "wherea": [67, 230, 232], "_call": [67, 71, 237], "inde": [67, 234, 237], "remain": [67, 118], "manual_se": [67, 75, 135, 136, 232, 237, 240, 241], "expos": [68, 141], "extern": [68, 241], "excluded_kei": 69, "finit": 70, "first_dim": 71, "last_dim": 71, "allow_positive_dim": [71, 92], "flatten": [71, 196, 232, 233], "adjac": 71, "th": [71, 92, 237], "permit": [71, 92], "exclus": [71, 224], "frameskip": 71, "repeatedli": [72, 234], "turn": [73, 92, 195, 232, 233, 237, 238], "noop": [74, 240], "30": [74, 123, 124, 233, 234, 237], "op": [74, 133, 135, 201], "randomli": [74, 75, 87, 140, 237], "noop_max": 74, "loc": [75, 82, 112, 119, 126, 127, 130, 131, 132, 137, 140, 142, 203, 205, 213, 215, 218, 224, 232, 233, 234, 240], "out_keys_inv": [75, 76, 90, 237], "standard_norm": [75, 82, 232, 233], "affin": [75, 82], "layer": [75, 95, 103, 104, 105, 110, 114, 117, 118, 120, 121, 128, 232, 233, 234, 238], "normal": [75, 95, 103, 112, 114, 119, 126, 127, 133, 140, 153, 161, 162, 195, 197, 224, 230, 241], "set_default_tensor_typ": 75, "doubletensor": 75, "isclos": 75, "next_ob": [75, 171, 172, 173, 232, 240], "rubric": [75, 142], "init_stat": [75, 232, 233, 234], "3752e": 75, "01": [75, 136, 149, 152, 153, 161, 162, 233, 234, 237, 238, 239], "5087e": 75, "03": [75, 233, 234, 237, 238, 239], "9294e": 75, "9636": 75, "5608": [75, 237], "6408": 75, "num_it": [75, 233, 234], "reduce_dim": [75, 232, 233, 234], "cat_dim": [75, 232, 233, 234], "keep_dim": [75, 233], "constant": [75, 230, 232, 234, 241], "statist": [75, 95, 164, 224, 232, 233, 234, 241], "approach": [75, 232, 234, 241], "gaussian": [75, 87, 102, 116, 117, 118, 133, 234], "empir": [75, 102, 116, 140, 234], "3d": 75, "third": 75, "r3m": [78, 238], "resnet": [78, 94], "visual": [78, 94, 234, 237], "embed": [78, 93, 94, 130, 131, 132, 139, 238], "ego4d": [78, 94], "paper": [78, 94, 160, 215, 218, 232, 234], "univers": [78, 94], "suraj": 78, "nair": 78, "aravind": 78, "rajeswaran": 78, "vikash": [78, 94], "kumar": [78, 94], "chelsea": 78, "finn": 78, "abhinav": 78, "gupta": 78, "2203": [78, 116, 238], "12601": [78, 238], "_init": 78, "snippet": [78, 232], "resnet50": [78, 94, 238], "model_nam": [78, 94, 188], "resnet34": 78, "resnet18": 78, "left": [78, 88, 90, 94, 232, 233, 234], "empti": [78, 88, 91, 94, 232, 237], "r3m_vec": [78, 238], "feed": [78, 94], "244": [78, 94, 234, 237], "stack_imag": [78, 94], "tread": [78, 94], "separet": [78, 94], "hub": [78, 94, 238], "cach": [78, 91, 94, 191, 238], "public": [78, 94], "resnet50_weight": [78, 94], "imagenet1k_v1": [78, 94], "download_path": [78, 94], "tensor_pixels_kei": [78, 94], "sub_seq_len": 79, "sample_dim": 79, "mask_kei": 79, "primarili": 79, "hesit": 79, "request": 79, "robust": 79, "vari": 79, "mix": 79, "NOT": 79, "improp": 79, "interpol": [80, 233], "bilinear": 80, "clamp_min": [81, 136], "clamp_max": 81, "clip_min": 81, "scalar": [81, 105, 107, 117, 118, 133, 135, 136, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 233, 237], "clip_max": 81, "episod": [83, 102, 174, 175, 176, 177, 178, 179, 180, 233], "episode_": 83, "reward1": 83, "reward2": 83, "ho": 83, "excludetransform": 84, "squeeze_dim": 85, "squeez": [85, 103, 233, 237, 240], "recognis": 86, "primer": 87, "default_valu": 87, "drawn": [87, 140, 234], "unit": [87, 102, 110, 120, 121, 123, 124, 234], "transfomedenv": 87, "lock": [87, 95, 237], "mykei": 87, "dtype_or_devic": 87, "pool": 88, "255": [89, 237], "ri": 89, "randint": [89, 232], "principl": 90, "cattransform": 90, "notabl": 90, "transform_done_spec": 90, "transform_output_spec": 90, "untouch": 90, "cache_spec": 91, "anymor": [91, 139, 232], "unsqueeze_dim": [92, 237], "danger": 92, "vip": [93, 94, 238], "toward": 94, "implicit": 94, "jason": 94, "ma": 94, "shagun": 94, "sodhani": 94, "dinesh": 94, "jayaraman": 94, "osbert": 94, "bastani": 94, "ami": 94, "zhang": 94, "vip_vec": 94, "shared_td": 95, "decai": [95, 133, 135, 163, 197, 232, 233, 241], "9999": [95, 237], "0001": [95, 110, 119, 234, 237], "fly": [95, 161, 234, 237, 241], "to_observation_norm": 95, "99": [95, 116, 152, 153, 157, 159, 161, 162, 163, 164, 165, 170, 220, 232, 233, 234, 237, 240], "underflow": [95, 197], "build_td_for_shared_vecnorm": 95, "memmori": 95, "memmap_": 95, "queue": 95, "td_share": 95, "observationnorm": [95, 224, 232, 233, 234, 240], "state_dim": [96, 123, 124], "action_dim": [96, 104, 106, 236], "gsde": [96, 163, 224], "func": [96, 240], "gsdemodul": 96, "check_dtyp": 97, "short": [97, 234], "discrep": [97, 152, 153, 154, 155, 161, 162], "imposs": 97, "heterogen": [97, 233], "caution": [97, 241], "probabilistictdmodul": [100, 114, 140, 165, 170, 195], "next_tensordict": [101, 232], "keep_oth": [101, 237], "exclude_reward": 101, "exclude_don": 101, "exclude_act": 101, "THe": 101, "renam": [101, 232], "next_": 101, "funtion": [101, 237], "planning_horizon": [102, 116], "optim_step": [102, 116], "num_candid": [102, 116], "top_k": [102, 116], "reward_kei": [102, 116, 193, 197], "cross": 102, "entropi": [102, 152, 153, 161, 162, 163, 165], "botev": 102, "et": 102, "al": [102, 210, 241], "2013": 102, "cem": 102, "plan": [102, 115, 116], "varianc": [102, 112, 119, 126, 127, 234], "rank": 102, "k": [102, 233], "repeat": [102, 234, 237], "maximis": [102, 104, 106, 116, 232, 234, 237], "horizon": [102, 116, 234], "modelbasedenv": [102, 116], "mpc": [102, 115, 116], "candid": [102, 116], "modelbasedenvbas": [102, 115, 116, 226], "next_hidden_observ": 102, "num_cel": [103, 104, 105, 106, 107, 110, 111, 114, 130, 232, 233, 234, 240], "elu": [103, 104, 105, 106, 107, 110, 111, 233, 240], "activation_kwarg": [103, 114], "norm_class": [103, 104, 105, 114], "norm_kwarg": [103, 114], "bias_last_lay": [103, 104, 105, 106, 107, 111, 114], "aggregator_class": [103, 104, 105, 233, 240], "squashdim": [103, 104, 240], "aggregator_kwarg": [103, 104, 105, 233], "squeeze_output": [103, 104, 105, 233], "convolut": [103, 104, 105], "neural": [103, 139, 233, 234, 237, 241], "produc": [103, 114, 122, 130, 132, 182, 234, 241], "len": [103, 114, 232, 233, 237, 238, 240], "cell": [103, 114, 234], "kernel": [103, 111, 113], "device_typ": [103, 104, 105, 106, 107, 111, 114, 117, 118], "cnet": 103, "34": [103, 114, 233, 234, 237, 239], "35": [103, 114, 233, 234, 237, 238], "rectangular": 103, "conv_net_kwarg": [104, 105], "mlp_net_kwarg": [104, 105, 106], "use_avg_pool": [104, 105], "WITH": [104, 105, 106, 107, 136, 166, 208], "1509": [104, 105, 106, 107, 116, 136, 160, 166, 208, 232], "02971": [104, 105, 106, 107, 136, 166, 208, 232], "convnet": [104, 226, 240], "ndims_in": 104, "avgpool": [104, 105], "128": [105, 232, 233, 237, 238], "adaptiveavgpool2d": [105, 233], "400": [106, 107, 237], "300": [106, 107, 205, 213, 237], "mlp_net_kwargs_net1": 107, "mlp_net_kwargs_net2": 107, "atol": [108, 125], "06": [108, 125, 233, 234, 237], "rtol": [108, 125], "batch_shap": [108, 125], "event_shap": [108, 125], "absolut": [108, 125], "toler": [108, 125], "log_prob": [108, 122, 127], "densiti": [108, 122, 127], "mass": [108, 122, 127, 237], "rsampl": [108, 122, 140], "sample_shap": [108, 122], "dqnet": 109, "atom": 109, "std_bia": 110, "std_min_val": 110, "belief": [110, 120, 123, 124], "1912": [110, 157, 158, 159], "01603": [110, 157, 158, 159], "softplu": [110, 119, 149, 150, 151], "out_features_valu": 111, "cnn_kwarg": [111, 233], "mlp_kwarg": [111, 113, 233], "duel": [111, 233], "cnn": [111, 233, 240], "06581": 111, "512": [111, 233, 237], "upscal": [112, 126, 127], "tanh_loc": [112, 126, 127], "event_dim": [112, 125, 126], "ultim": [112, 126, 127], "poor": [112, 126, 127], "explos": [112, 126, 127], "switch": [112, 126, 127], "sigma": [112, 126, 127, 133, 136, 234], "formula": [112, 126, 127, 153, 161, 162, 234], "lstm_kwarg": 113, "embedd": 113, "next_observ": [113, 236], "time_step": 113, "2d": 113, "hidden_s": 113, "input_s": 113, "hidden0_in": 113, "hidden1_in": 113, "hidden0_out": 113, "hidden1_out": 113, "single_bias_last_lay": 114, "layer_class": 114, "layer_kwarg": 114, "perceptron": 114, "seamless": 114, "lazylinear": [114, 234, 237, 238, 240], "42": [114, 199, 233, 234, 237], "noisylinear": [114, 117, 226, 233], "noisylazylinear": [114, 226], "At": [115, 234, 236, 237, 238], "mpcplanner": 115, "tensordict_out": [115, 241], "advantage_modul": [116, 152, 234], "temperatur": 116, "mppi": 116, "covari": 116, "william": [116, 164], "aldrich": 116, "theodor": 116, "01149": 116, "hansen": 116, "wang": 116, "su": 116, "04955": 116, "ndunboundedcontinuoustensorspec": [116, 142], "valueoper": [116, 130, 131, 132, 152, 153, 161, 162, 220, 226, 232, 234], "tdlambdaestim": [116, 226], "value_net": [116, 171, 172, 173, 234], "adv": 116, "95": [116, 157, 232, 233, 234, 237], "std_init": [117, 118], "term": [117, 118, 151, 152, 201, 233, 234], "matrix": [117, 118], "initialize_paramet": 117, "isol": [117, 233], "1706": 118, "10295v3": 118, "induc": 118, "aid": 118, "emploi": 118, "scale_map": 119, "biased_softplus_1": 119, "scale_lb": [119, 123, 124], "exp": [119, 151], "module_norm": 119, "decod": 120, "1803": [120, 121], "10122": [120, 121], "rnn_hidden": 120, "latent": 121, "logit": 122, "excacli": 122, "hidden_dim": [123, 124], "posterior": [123, 158], "rssm": [123, 124, 158], "1811": [123, 124, 237], "04551": [123, 124], "obs_embed": 123, "rnn_hidden_dim": 124, "dream": 124, "recurr": [124, 233], "tanhtransform": 126, "tensordict_modul": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "translat": [129, 137], "td_modul": [129, 130, 131, 132, 137, 139, 140, 142, 143, 240], "get_policy_oper": [130, 131, 132, 205, 213], "alon": [130, 131, 132], "tdmodul": [130, 131, 132, 220], "get_critic_oper": 130, "common_oper": [130, 132], "policy_oper": [130, 131, 132], "value_oper": [130, 131, 132], "probabilisticactor": [130, 131, 132, 165, 226, 232, 234], "tanhnorm": [130, 131, 132, 137, 142, 226, 234, 240], "normalparamwrapp": [130, 131, 132, 137, 142, 226, 240], "spec_hidden": [130, 132], "module_hidden": [130, 132], "td_module_hidden": [130, 132], "spec_act": [130, 132], "module_act": [130, 132], "td_module_act": [130, 131, 132], "dist_in_kei": [130, 131, 132, 137, 142], "sample_out_kei": [130, 132, 142], "distribution_class": [130, 131, 132, 137, 140, 142, 232, 234, 240], "return_log_prob": [130, 131, 132, 140, 142, 234, 240], "module_valu": [130, 131, 132], "td_module_valu": [130, 131, 132], "state_action_valu": [130, 143, 170, 208, 215, 218, 220, 232, 240], "td_clone": [130, 131, 132], "sample_log_prob": [130, 131, 132, 140, 142, 205, 213, 215, 234, 240], "tensordictmodulewrapp": [130, 206, 207, 220], "get_value_oper": [130, 131, 132, 205, 213], "action_modul": 131, "state_valu": [131, 132, 143, 171, 172, 173, 174, 175, 176, 178, 179, 205, 213, 218, 232, 234], "safesequenti": [131, 132, 144, 226], "sigma_init": 133, "sigma_end": 133, "annealing_num_step": [133, 135, 136, 232, 233], "po": [133, 135], "epsilon": [133, 135, 136, 166, 197, 233, 234], "recov": [133, 135, 141, 236], "action_spac": [134, 138, 145, 146], "one_hot": [134, 138, 145, 146], "nbin": [134, 145], "qvalue_actor": [134, 138, 145, 146], "eps_init": [135, 136, 233], "eps_end": [135, 136, 233], "greedi": [135, 146, 233], "explorative_polici": [135, 136], "0000": [135, 233, 234, 237, 240], "6986": 135, "9366": 135, "5837": 135, "8596": 135, "grad_fn": [135, 240], "addbackward0": [135, 240], "theta": [136, 234, 237], "15": [136, 157, 232, 233, 234, 237, 239], "mu": [136, 234], "dt": [136, 237], "x0": 136, "sigma_min": 136, "n_steps_ann": 136, "ornstein": [136, 232], "uhlenbeck": [136, 232], "ou": [136, 232], "introduc": 136, "auto": [136, 163, 165], "correl": 136, "sort": 136, "prev_nois": 136, "current_sigma": 136, "sqrt": 136, "ou_prev_nois": 136, "ou_step": 136, "increas": [136, 233], "anneal": 136, "_ou_prev_nois": 136, "_ou_step": 136, "probabilist": [137, 234, 240], "functional_modul": [137, 138, 139, 142, 143, 145, 146], "make_funct": [137, 138, 139, 142, 143, 145, 146, 147, 233, 240], "functionalmodul": [139, 147], "functionalmodulewithbuff": [139, 147], "obj": [139, 140, 141], "character": 139, "overflow": [139, 140], "grucel": 139, "td_fmodul": 139, "td_function": 139, "td_state": 139, "vmap": [139, 142, 233, 240], "ensembl": [139, 163], "params_repeat": 139, "td_vmap": [139, 142], "irrespect": [139, 140], "random_sampl": [139, 140], "tensor_spec": 140, "default_interaction_mod": 140, "distribution_kwarg": [140, 232, 234], "cache_dist": 140, "n_empirical_estim": 140, "probabilistictensordictmodul": [140, 141, 240], "rule": [140, 234], "interaction_mod": 140, "get_dist": [140, 141], "__call__": [140, 230], "suppli": 140, "fist": 140, "set_interaction_mod": 140, "diverg": [140, 158, 161], "partial_toler": [141, 142, 236], "probabilistictensordictsequenti": [141, 240], "tensordictsequenti": [141, 232, 236, 238, 240], "who": [141, 142], "AND": [141, 142], "scan": [141, 142], "tensordictsequenci": 142, "tensordictsequ": 142, "safeprobabilisticmodul": [142, 226], "spec1": 142, "net1": 142, "module1": 142, "td_module1": 142, "spec2": 142, "module2": 142, "td_module2": 142, "custommodul": [143, 148], "cat": [143, 240], "transition_model": 144, "reward_model": 144, "imaginari": 144, "imagin": 144, "get_reward_oper": 144, "get_transition_model_oper": 144, "var_num": [145, 146], "regard": [145, 152, 156, 162, 234, 237], "perspect": [145, 156, 234], "1707": [145, 156, 162, 205, 213], "06887": [145, 156], "mult_one_hot": [145, 146], "customdistributionalqv": 145, "log_softmax": 145, "_functorch": 147, "wrapper_typ": 147, "mislead": 148, "other_kei": 148, "typeerror": 148, "min_val": [149, 151], "bias": [149, 232, 233], "_bia": 149, "invert": [150, 234], "surject": 151, "expln": 151, "biased_softplu": [151, 226], "beggin": 151, "biased_softplus_": 151, "syntax": [151, 232], "condit": [151, 232, 237], "met": [151, 237], "safeprobabilisticsequenti": [152, 153, 161, 162, 164, 206, 207, 226], "advantage_kei": [152, 153, 161, 162, 164, 171, 172, 173, 234], "value_target_kei": [152, 162, 164, 171, 172, 173, 234], "value_target": [152, 162, 164, 171, 172, 173, 234], "entropy_bonu": [152, 153, 161, 162, 234], "samples_mc_entropi": [152, 153, 161, 162], "entropy_coef": [152, 153, 161, 162, 234], "critic_coef": [152, 153, 161, 162, 234], "loss_critic_typ": [152, 153, 161, 162, 164, 234], "smooth_l1": [152, 153, 154, 155, 161, 162, 163, 164, 165, 167, 234], "reli": [152, 232, 234, 237, 241], "1602": 152, "01783v2": 152, "advantage_diff_kei": 152, "advantage_diff": 152, "value_error": [152, 171, 172, 173], "loss_function_typ": 152, "l1": [152, 153, 154, 155, 161, 162, 163, 167, 233], "l2": [152, 153, 154, 155, 158, 159, 161, 162, 163, 167], "tha": 152, "throughout": [152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 234, 241], "essenti": [152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 237], "clip_epsilon": [153, 234], "normalize_advantag": [153, 161, 162], "threshold": [153, 234], "favour": [153, 161, 162], "mont": [153, 161, 162], "carlo": [153, 161, 162], "multipli": [153, 161, 162, 163, 165, 197, 232], "loss_funct": [153, 154, 155, 162, 163, 165, 167], "actor_network": [154, 163, 164, 165], "value_network": [154, 155, 156, 165, 171, 172, 173, 234], "delay_actor": [154, 165], "delay_valu": [154, 155, 156, 164, 165], "input_tensordict": [154, 155, 156], "qvalueactor": [155, 226, 233], "distributionalqvalueactor": [156, 226], "unlik": [156, 162, 233, 240], "disctount": 156, "actor_model": 157, "value_model": [157, 159], "model_based_env": 157, "dreamerenv": [157, 226], "imagination_horizon": 157, "lmbda": [157, 171, 173, 174, 176, 177, 178, 179, 180, 232, 233, 234], "discount_loss": [157, 159], "unrol": 157, "lambda_kl": 158, "lambda_reco": 158, "lambda_reward": 158, "reco_loss": 158, "reward_loss": 158, "free_nat": 158, "delayed_clamp": 158, "global_averag": 158, "kl": [158, 161], "reconstruct": [158, 241], "nat": 158, "clamp": [158, 199, 237], "value_loss": [159, 232], "fake_data": 159, "loss_modul": [160, 166, 199, 219, 220, 230, 234], "dqnloss": [160, 166, 211, 226], "ddpgloss": [160, 166, 209, 220, 226, 240], "sacloss": [160, 166, 217, 226], "td3loss": [160, 166], "value_network_update_interv": 160, "contrast": 160, "06461": 160, "dtarg": 161, "decrement": 161, "samples_mc_kl": 161, "penalti": 161, "old_polici": 161, "new_polici": 161, "adapt": [161, 232, 237], "old": [161, 241], "thu": 161, "distanc": [161, 167, 170, 171], "apart": 161, "proxim": [162, 205, 213, 234], "optimis": [162, 195, 234], "flavour": [162, 240], "constrain": 162, "clipppoloss": [162, 226, 234], "klpenppoloss": [162, 226], "regularis": 162, "06347": [162, 205, 213], "qvalue_network": [163, 165], "num_qvalue_net": [163, 165], "sub_sample_len": 163, "priotity_kei": [163, 165], "alpha_init": [163, 165], "min_alpha": [163, 165], "max_alpha": [163, 165], "fixed_alpha": [163, 165], "target_entropi": [163, 165], "delay_qvalu": [163, 165], "openreview": [163, 215], "ay8zfzm0tdd": [163, 215], "idea": [163, 230], "subsampl": [163, 190, 230], "connectionist": 164, "1992": 164, "doi": 164, "1007": 164, "bf00992696": 164, "1801": [165, 218], "01290": [165, 218], "applic": [165, 237], "1812": 165, "05905": 165, "qvalue_network_bi": 165, "prod": 165, "n_action": 165, "redqloss": [166, 226], "999": [166, 197, 233], "prev_param": 166, "new_param": 166, "v2": [167, 176, 177, 179, 180, 205, 208, 213, 215, 218], "strict_shap": 167, "view_a": 167, "next_val_kei": 170, "pred_next_v": 170, "usus": 170, "mse": [170, 233], "q_valu": 170, "target_valu": [170, 240], "n_steps_to_next": 170, "value_next_st": 170, "average_ga": [171, 234], "value_kei": [171, 172, 173], "1506": [171, 174, 175, 178], "02438": [171, 174, 175, 178], "exponenti": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 197], "propag": [171, 172, 173, 234], "throught": [171, 172, 173], "advang": 171, "gradient_mod": 171, "sign": 171, "unused_arg": 171, "target_param": [171, 172, 173], "relev": [171, 172, 173, 237], "98": [171, 172, 173, 233, 234, 237, 240], "94": [171, 173, 233, 234, 237, 238], "unpack": [171, 172, 173], "average_reward": [172, 173], "next_state_valu": [174, 175, 176, 177, 178, 179, 180, 226, 240], "old_stat": [174, 175, 176, 178, 179], "new_stat": [174, 175, 176, 177, 178, 179, 180], "rolling_gamma": [176, 177, 179, 180], "ti": [176, 177, 179, 180], "event": [176, 177, 179, 180], "g1": [176, 177, 179, 180], "g2": [176, 177, 179, 180], "g3": [176, 177, 179, 180], "g4": [176, 177, 179, 180], "v3": [176, 177, 179, 180], "v4": [176, 177, 179, 180, 232, 234, 238], "upcom": [176, 177, 179, 180, 232], "out_file_bas": 181, "skip_reset": 181, "dump": 181, "interv": [181, 182, 191, 201, 233, 237], "center_crop": 182, "make_grid": 182, "Will": 182, "grid": 182, "exp_nam": [183, 184, 185, 186, 187, 220, 232], "log_dir": [183, 184, 186, 189], "minim": 183, "dependeci": 183, "csv": [183, 189], "templat": 184, "tracking_uri": 185, "mlflow": [185, 189], "uri": 185, "datastor": 185, "tb_log": 186, "tensoarboard": 186, "tensorboard": [186, 189, 240], "wandb": [187, 189, 240], "experiment_nam": [188, 189], "uuid": [188, 241], "date": 188, "logger_typ": 189, "logger_nam": 189, "might": [189, 227, 232, 241], "wandb_kwarg": 189, "mlflow_kwarg": 189, "sub_traj_len": 190, "min_sub_traj_len": 190, "full": [190, 232, 233, 234, 236, 237, 238, 240, 241], "20": [190, 233, 234, 237, 238, 240, 241], "register_op": [190, 191, 192, 193, 194, 196, 197, 198, 201, 230], "process_optim_batch": [190, 196, 197, 230], "td_out": [190, 198], "_process_optim_batch_hook": [190, 230], "clear_cuda": 191, "pre_optim_step": [191, 230], "counter": [192, 230], "log_pbar": [192, 193, 195, 197, 230], "progress": [192, 193, 195, 199, 230, 241], "bar": [192, 193, 195, 199, 230], "count_fram": 192, "pre_steps_log": [192, 193, 230], "lognam": 193, "r_train": 193, "log_reward": 193, "loss_compon": 194, "appl": 194, "omit": [194, 232, 234, 237], "loss_": 194, "optimizer_hook": 194, "loss_actor": 194, "record_interv": [195, 232], "record_fram": [195, 202, 232], "policy_explor": [195, 220, 232], "log_kei": 195, "suffix": 195, "underestim": 195, "suppos": [195, 230, 241], "set_exploration_mod": [195, 226, 232, 233, 234, 240], "reward_evalu": 195, "tensordictreplaybuff": [196, 220, 226, 232, 233], "flatten_tensordict": 196, "max_dim": 196, "rb_trainer": 196, "batch_process": [196, 197, 198, 230], "post_loss": [196, 230], "jitter": 197, "finfo": 197, "default_dtyp": 197, "get_default_dtyp": 197, "reward_norm": 197, "update_reward_stat": 197, "normalize_reward": 197, "make_train": [198, 226], "_process_batch_hook": [198, 230], "versatil": 199, "lossmodul": [199, 219, 220], "optim_steps_per_batch": [199, 230], "epoch": [199, 234], "clip_grad_norm": 199, "partial": 199, "deriv": 199, "clip_norm": 199, "progress_bar": 199, "tqdm": [199, 232, 233, 234, 237], "save_trainer_interv": 199, "disk": [199, 230, 233], "10000": [199, 233, 234], "save_trainer_fil": [199, 230], "_datacollector": [201, 206, 207, 220], "update_weights_interv": 201, "sit": [201, 233], "sync": [201, 220, 230, 232, 240], "update_weight": 201, "post_step": [201, 230], "cfg": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224], "dictconfig": [202, 203, 205, 206, 207, 208, 210, 213, 215, 216, 218, 219, 220, 221, 224], "divid": [202, 232], "unknowingli": 202, "annealing_fram": [202, 232], "init_env_step": [202, 203, 232], "proof_environ": [203, 205, 208, 210, 213, 215, 218, 232], "sta": 203, "ot": 203, "a2closs": [204, 226], "in_keys_actor": [205, 213], "observation_kei": [205, 213, 215, 218], "actorvalueoper": [205, 213, 226], "dummi": [205, 208, 210, 213, 215, 218, 232, 241], "actorcriticoper": [205, 213, 226], "parser_env_arg": [205, 213, 215], "make_ppo_model": [205, 226], "parser_model_args_continu": [205, 213, 215, 218], "cattensor": [205, 208, 213, 215, 218, 232, 233, 236, 237, 241], "hydra": [205, 208, 210, 213, 215, 218], "config_stor": [205, 208, 210, 213, 215, 218], "configstor": [205, 208, 210, 213, 215, 218], "dataclass": [205, 208, 210, 213, 215, 218], "halfcheetah": [205, 208, 213, 215, 218, 232], "config_field": [205, 208, 210, 213, 215, 218], "config_cl": [205, 208, 210, 213, 215, 218], "ppomodelconfig": [205, 213], "envconfig": [205, 208, 210, 213, 215, 218], "make_dataclass": [205, 208, 210, 213, 215, 218], "cls_name": [205, 208, 210, 213, 215, 218], "config_path": [205, 208, 210, 213, 215, 218], "config_nam": [205, 208, 210, 213, 215, 218], "actor_valu": [205, 213], "17": [205, 208, 213, 215, 218, 233, 234, 237, 238], "actor_model_explor": [206, 207, 232], "make_env_kwarg": [206, 207], "actor_net_kwarg": [208, 215, 218], "value_net_kwarg": [208, 218], "modulelist": [208, 215, 218, 240], "ddpgcnnactor": [208, 226], "ddpgmlpactor": [208, 226], "ddpgcnnqnet": [208, 226], "ddpgmlpqnet": [208, 226], "ddpgmodelconfig": 208, "targetnetupdat": [209, 211, 214, 217, 219, 220], "discretemodelconfig": 210, "pong": [210, 241], "v5": [210, 241], "pixels_onli": [210, 232, 233, 240, 241], "210": [210, 237, 241], "160": [210, 233, 237, 241], "ppoloss": [212, 226], "redqloss_deprec": 214, "qvalue_net_kwarg": [215, 218], "qvalu": [215, 218, 233], "redqmodelconfig": 215, "replayargsconfig": 216, "sacmodelconfig": 218, "target_net_updat": 220, "constitu": 220, "learnt": [220, 233, 234], "tempfil": 220, "tensorboardlogg": [220, 226], "egreedywrapp": [220, 226, 233], "env_proof": 220, "obs_spec": [220, 237], "net_valu": 220, "dir": [220, 230], "gettempdir": 220, "argpars": [221, 224], "namespac": [221, 224], "parser": [221, 224], "transformed_env_constructor": [221, 226], "env_kwarg": [222, 223, 232], "num_env_per_collector": [222, 223], "num_collector": [222, 223, 233], "video_tag": 224, "norm_obs_onli": 224, "use_env_cr": 224, "custom_env_mak": 224, "custom_env": 224, "return_transformed_env": 224, "action_dim_gsd": 224, "state_dim_gsd": 224, "batch_dim": 224, "obs_norm_state_dict": 224, "wheter": 224, "maker": 224, "overrid": 224, "randompolici": 226, "asyncdatacollector": 226, "tensordictprioritizedreplaybuff": [226, 240], "prioritizedsampl": [226, 232], "sotr": 226, "binarydiscretetensorspec": 226, "unboundeddiscretetensorspec": [226, 234, 241], "multistep": [226, 232, 233], "tensordictrecord": 226, "videorecord": [226, 234], "get_available_librari": 226, "braxenv": 226, "braxwrapp": 226, "dmcontrolenv": [226, 232, 236, 241], "dmcontrolwrapp": 226, "jumanjienv": 226, "jumanjiwrapp": 226, "vmasenv": 226, "vmaswrapp": 226, "actorcriticwrapp": 226, "additivegaussianwrapp": 226, "ornsteinuhlenbeckprocesswrapp": [226, 232], "is_tensordict_compat": 226, "ensure_tensordict_compat": 226, "qvaluehook": 226, "distributionalqvaluehook": 226, "duelingcnndqnet": [226, 233], "distributionaldqnnet": 226, "lstmnet": 226, "dreameractor": 226, "obsencod": 226, "obsdecod": 226, "rssmprior": 226, "rssmposterior": 226, "reset_nois": 226, "cemplann": 226, "mpcplannerbas": 226, "mppiplann": 226, "independentnorm": 226, "truncatednorm": 226, "tanhdelta": [226, 232], "onehotcategor": 226, "inv_softplu": 226, "distributionaldqnloss": [226, 233], "reinforceloss": 226, "dreameractorloss": 226, "dreamermodelloss": 226, "dreamervalueloss": 226, "gae": [226, 234], "tdestim": 226, "generalized_advantage_estim": 226, "vec_generalized_advantage_estim": 226, "vec_td_lambda_return_estim": 226, "vec_td_lambda_advantage_estim": [226, 232, 233], "td_lambda_return_estim": 226, "td_lambda_advantage_estim": 226, "td_advantage_estim": 226, "distance_loss": 226, "hold_out_net": [226, 232], "hold_out_param": 226, "softupd": [226, 232], "hardupd": [226, 232], "batchsubsampl": [226, 230], "clearcudacach": 226, "countframeslog": 226, "logreward": [226, 230], "optimizerhook": 226, "replaybuffertrain": [226, 230], "rewardnorm": 226, "selectkei": [226, 230], "trainerhookbas": [226, 230], "updateweight": [226, 230], "make_a2c_loss": 226, "make_a2c_model": 226, "make_collector_offpolici": 226, "make_collector_onpolici": 226, "make_ddpg_actor": [226, 232], "make_ddpg_loss": 226, "make_dqn_actor": 226, "make_dqn_loss": 226, "make_ppo_loss": 226, "make_redq_loss": 226, "make_redq_model": 226, "make_replay_buff": [226, 232], "make_sac_loss": 226, "make_sac_model": 226, "make_target_updat": 226, "parallel_env_constructor": [226, 232], "sync_async_collector": 226, "sync_sync_collector": 226, "correct_for_frame_skip": 226, "get_stats_random_rollout": 226, "csvlogger": 226, "mlflowlogg": 226, "wandblogg": 226, "get_logg": 226, "generate_exp_nam": 226, "journei": 227, "guid": [227, 232, 233], "textbook": 227, "highlight": 227, "readi": [227, 234, 236], "ever": 227, "bump": 227, "think": [227, 234, 241], "benefit": 227, "pr": 227, "resourc": [227, 232, 234], "outer": [230, 232, 233, 241], "believ": 230, "scheme": [230, 241], "substenti": 230, "_pre_steps_log_hook": 230, "_pre_optim_hook": 230, "sub_batch": 230, "_post_loss_hook": 230, "_post_optim_hook": 230, "post_optim": 230, "_post_optim_log": 230, "post_optim_log": 230, "_post_steps_hook": 230, "_post_steps_log_hook": 230, "post_steps_log": 230, "comment": [230, 233, 240], "categori": 230, "extens": 230, "reserv": 230, "three": [230, 234, 237], "logginghook": 230, "logging_hook": 230, "save_dict": 230, "some_valu": 230, "torchsnapshot": 230, "ckpt_backend": 230, "pt": [230, 238], "filepath": 230, "select_kei": 230, "save_train": 230, "load_from_fil": 230, "perfectli": [230, 232, 237], "intern": 231, "author": [232, 233, 234, 237], "vincent": [232, 233, 234, 237], "moen": [232, 233, 234, 237], "topic": 232, "asid": 232, "strongli": 232, "familiar": [232, 233, 241], "transpar": [232, 233], "understood": [232, 233], "sota": [232, 233, 240], "illustr": [232, 233], "deepcopi": 232, "matplotlib": [232, 233, 234, 237, 241], "pyplot": [232, 233, 234, 237, 241], "plt": [232, 233, 234, 237, 241], "environmet": 232, "remaind": 232, "focu": [232, 234], "funciton": 232, "env_librari": 232, "env_task": 232, "env_arg": 232, "elif": [232, 233], "notimplementederror": 232, "friendli": 232, "special": [232, 241], "torchr": 232, "rescal": 232, "presum": 232, "leav": 232, "make_transformed_env": 232, "reward_sc": 232, "double_to_float_list": 232, "double_to_float_inv_list": 232, "dmcontrol": 232, "get_env_stat": 232, "proof_env": 232, "transform_state_dict": 232, "significantli": [232, 233], "leverag": [232, 241], "env_per_collector": 232, "make_t_env": 232, "copy_": 232, "parallel_env": [232, 240, 241], "maxim": [232, 237], "recal": [232, 233, 234], "materi": 232, "small": [232, 234, 241], "env_spec": 232, "actor_net": [232, 234], "num_lay": 232, "actor_modul": [232, 240], "q_net": 232, "qnet": 232, "frequenc": 232, "make_record": 232, "recorder_obj": 232, "flavor": 232, "circular": 232, "pick": [232, 233], "arrai": 232, "buffer_s": [232, 233], "prb": 232, "buffer_scratch_dir": 232, "adjust": [232, 237], "magnitud": 232, "1000000": 232, "device_count": [232, 233, 238, 241], "500k": 232, "meaning": 232, "5000": [232, 233, 234], "myopic": [232, 233], "n_steps_forward": 232, "lr": [232, 233, 234, 237], "5e": 232, "weight_decai": 232, "utd": 232, "update_to_data": 232, "tau": [232, 233], "005": [232, 233], "tmp": [232, 233, 238], "semin": 232, "qnet_target": 232, "tight": 232, "natur": 232, "async": [232, 240], "seamlessli": [232, 237], "3018685293": 232, "adam": [232, 233, 234, 237], "optimizer_actor": 232, "optimizer_qnet": 232, "total_collection_step": 232, "scheduler1": 232, "lr_schedul": [232, 234, 237], "cosineannealinglr": [232, 234, 237], "t_max": 232, "scheduler2": 232, "temporarili": 232, "explain": [232, 238], "Then": [232, 234, 236], "fed": 232, "hood": [232, 237], "metadata": [232, 234, 241], "coupl": [232, 237], "earli": [232, 240], "rewards_ev": 232, "norm_factor_train": 232, "collected_fram": 232, "pbar": [232, 233, 234, 237], "r0": 232, "numel": [232, 233, 234, 238], "current_fram": [232, 233], "sampled_tensordict": 232, "backprop": 232, "next_valu": [232, 233], "value_est": 232, "pow": [232, 233], "sampled_tensordict_actor": 232, "actor_loss": 232, "p_in": 232, "p_dest": 232, "zip": [232, 235], "b_in": 232, "b_dest": 232, "td_record": 232, "r_evalu": 232, "set_descript": [232, 233, 234, 237], "4f": [232, 233, 234, 237], "traceback": [232, 240], "__w": [232, 240], "doc": [232, 233, 240], "coding_ddpg": [232, 233, 239], "787": [232, 237], "1384": 232, "1501": [232, 240], "_call_impl": [232, 240], "forward_cal": [232, 240], "181": [232, 237], "plot": [232, 233, 234, 237], "mention": [232, 233, 241], "label": [232, 233], "legend": [232, 233], "xlabel": [232, 233, 237], "ylabel": [232, 233], "tight_layout": 232, "250": [232, 234, 237], "100000": [232, 233], "batch_size_traj": 232, "simplic": [232, 233, 234, 238], "td_lambda": 232, "roughli": [232, 240], "four": [232, 237], "big": [232, 233, 234, 241], "incompat": 232, "rand_idx": 232, "titl": [232, 233, 234, 237], "labmda": 232, "minut": [232, 233, 234, 236, 237, 238, 240, 241], "683": [232, 239], "3951": [232, 239], "mb": [232, 233, 234, 236, 237, 238, 239, 240, 241], "jupyt": [232, 233, 234, 235, 236, 237, 238, 240, 241], "ipynb": [232, 233, 234, 236, 237, 238, 240, 241], "galleri": [232, 233, 234, 235, 236, 237, 238, 240, 241], "sphinx": [232, 233, 234, 235, 236, 237, 238, 240, 241], "cartpol": [233, 241], "tabl": 233, "highest": 233, "lookup": 233, "amort": [233, 234], "seen": 233, "conjunct": 233, "cart": 233, "pole": 233, "un": 233, "actuat": 233, "frictionless": 233, "upright": [233, 241], "balanc": [233, 241], "prerequisit": 233, "flesh": 233, "grayscal": [233, 241], "did": [233, 234, 241], "get_funct": 233, "is_notebook": 233, "shell": 233, "get_ipython": 233, "__class__": 233, "zmqinteractiveshel": 233, "qtconsol": 233, "terminalinteractiveshel": 233, "ipython": [233, 237], "nameerror": 233, "interpret": 233, "hopefulli": 233, "sensit": 233, "variat": 233, "2e": [233, 237], "aka": 233, "upd": 233, "n_optim": 233, "smooth": 233, "harder": [233, 240], "500000": 233, "256": [233, 234, 237], "eps_greedy_v": 233, "eps_greedy_val_env": 233, "predefin": [233, 234], "mandatori": [233, 234, 237], "init_bia": 233, "observation_norm_state_dict": 233, "five": 233, "64x64": 233, "channel": 233, "motion": [233, 237], "simpler": 233, "test_env": 233, "9921": 233, "0786": 233, "trick": 233, "mathbb": 233, "rightarrow": 233, "concept": 233, "pessimist": [233, 234], "power": 233, "ubiquit": 233, "trainabl": [233, 238], "augment": 233, "make_model": 233, "dummy_env": 233, "output_s": 233, "unflatten_kei": 233, "fairli": 233, "params_target": 233, "actor_explor": 233, "flat": 233, "unflatten": 233, "params_flat": 233, "flatten_kei": 233, "role": [233, 241], "coding_ppo": [233, 234, 239], "themselv": 233, "data_collector": 233, "q_": 233, "v_": 233, "defaultdict": [233, 234, 237], "logs_exp1": 233, "prev_traj_count": 233, "traj_length": 233, "enough": 233, "sampled_data": 233, "sampled_data_out": 233, "tdstep": 233, "exp_valu": 233, "mse_loss": 233, "gv": 233, "clip_grad_norm_": [233, 234, 237], "p_target": 233, "p_orig": 233, "grad_val": 233, "traj_count": 233, "eval_rollout": [233, 234], "traj_lengths_ev": 233, "mavg": 233, "05": [233, 234, 237, 238, 239], "traj_count_ev": 233, "00": [233, 234, 237, 238, 239], "02": [233, 234, 237, 238], "40": [233, 234, 237, 238, 239], "67it": [233, 237], "memmapstorag": [233, 238], "tmpba_2wiba": 233, "0762939453125": 233, "tmpibgr_0ul": 233, "03814697265625": 233, "tmphmx_7jjc": 233, "019073486328125": 233, "tmp0x2xerfp": 233, "00476837158203125": 233, "tmpyi4jakh7": 233, "tmpgrf1ltlg": 233, "312": [233, 237], "tmp7khpttgo": 233, "tmpm8rect5r": 233, "tmp3r7sligd": 233, "tmpe7rvb1mu": 233, "tmpkfuddxv7": 233, "tmpxr4picbj": 233, "tmpzhu4ji7o": 233, "67": [233, 236, 237], "44it": [233, 237], "96": [233, 234, 237, 238], "28": [233, 234, 237, 238], "55": [233, 237], "53it": [233, 237], "41": [233, 234, 237], "47": [233, 237], "98it": 233, "49": [233, 234, 237, 238], "32it": [233, 237], "192": [233, 237], "36": [233, 234, 237], "08it": 233, "224": [233, 237], "04": [233, 234, 237, 238, 239], "51it": [233, 237], "70it": [233, 234, 237], "288": [233, 237], "51": [233, 237], "01it": [233, 234], "320": [233, 237, 241], "31": [233, 234, 237, 238], "352": [233, 237], "25it": [233, 237], "1829": 233, "5041": 233, "9000": [233, 234], "07": [233, 237, 238], "384": [233, 237], "48": [233, 234, 237, 238], "95it": [233, 237], "416": [233, 237], "96it": [233, 234, 237], "448": [233, 237], "61it": [233, 237], "480": [233, 237, 238], "09": [233, 234, 237], "80it": 233, "05it": 233, "544": [233, 237], "47it": [233, 237], "576": [233, 237], "97it": [233, 234, 237], "608": [233, 237], "64it": [233, 237], "640": 233, "45": [233, 234, 237], "28it": [233, 237], "672": 233, "37": [233, 234, 237, 238], "49it": [233, 234, 237], "0391": 233, "2497": 233, "704": 233, "736": [233, 237], "78it": 233, "768": 233, "800": 233, "29": [233, 234, 237], "18it": [233, 234], "832": 233, "25": [233, 234, 237], "56it": [233, 234, 237], "864": 233, "02it": [233, 237], "896": 233, "22": [233, 234, 237, 238], "63it": [233, 237], "19": [233, 234, 237], "928": 233, "31it": [233, 234], "960": 233, "22it": [233, 234, 237], "992": 233, "0890": 233, "1155": 233, "21": [233, 234, 236, 237], "1024": 233, "23": [233, 234, 237], "89it": 233, "1056": 233, "03it": [233, 234], "1088": 233, "76it": [233, 234], "1120": 233, "37it": [233, 237], "1152": 233, "68it": [233, 237], "1184": 233, "1216": 233, "46it": [233, 237], "1248": 233, "26": [233, 234, 237, 238], "1280": 233, "14it": [233, 237], "35it": 233, "0393": 233, "4179": 233, "1344": 233, "1376": 233, "1408": 233, "1440": 233, "1472": 233, "11it": [233, 234, 237], "1504": 233, "33it": [233, 234, 237], "1536": 233, "07it": [233, 234], "1568": 233, "1600": 233, "20it": 233, "1632": [233, 237], "91it": [233, 237], "2026": [233, 237], "2336": 233, "1664": 233, "52it": [233, 237], "1696": 233, "87it": [233, 234], "1728": 233, "55it": [233, 234, 237], "1760": 233, "1792": 233, "1824": 233, "1856": 233, "86it": 233, "1888": 233, "81it": 233, "1920": [233, 237], "39": [233, 234, 237, 239, 241], "69it": [233, 234], "1952": 233, "73it": [233, 234], "0680": 233, "1616": 233, "1984": 233, "04it": 233, "2016": 233, "54it": [233, 237], "2048": [233, 238], "58it": [233, 237], "2080": [233, 234, 237], "59": [233, 234, 237, 238], "2112": [233, 237], "43": [233, 237], "85it": 233, "2144": 233, "58": [233, 234, 237, 238], "2176": 233, "57": [233, 234, 237, 238], "74it": 233, "2208": [233, 237], "2240": 233, "2272": 233, "54": [233, 234, 237], "0653": 233, "9268": [233, 237], "2304": [233, 234], "56": [233, 234, 237], "71it": [233, 237], "40it": [233, 237], "2368": 233, "53": [233, 234, 237, 238], "16it": [233, 237], "2400": [233, 234, 237], "45it": [233, 237], "2432": [233, 237], "2464": 233, "26it": [233, 234, 237], "2496": 233, "17it": 233, "2528": 233, "52": [233, 234, 236, 237, 239], "2560": 233, "90it": [233, 234, 237], "2592": [233, 237], "0667": 233, "0932": [233, 237], "2624": 233, "2656": 233, "30it": [233, 234, 237], "2688": 233, "06it": 233, "2720": 233, "2752": 233, "2784": 233, "2816": 233, "21it": [233, 234, 237], "2848": [233, 237], "2880": 233, "59it": [233, 234, 237], "2912": [233, 237], "1377": 233, "1366": 233, "3000": [233, 234], "2944": 233, "38it": [233, 237], "60": [233, 234, 237, 238, 240], "2976": 233, "3008": 233, "61": [233, 237, 238], "3040": 233, "3072": 233, "84it": 233, "62": [233, 234, 237], "3104": 233, "63": [233, 237], "3136": 233, "3168": 233, "3200": 233, "65": [233, 237, 238], "3232": 233, "0659": [233, 237], "2314": [233, 237], "3264": [233, 237], "66": [233, 234, 237, 238], "3296": 233, "3328": 233, "3360": 233, "09it": 233, "68": [233, 234, 237], "3392": 233, "3424": [233, 237], "69": [233, 237], "3456": 233, "82it": [233, 234], "70": [233, 234, 237, 238], "3488": 233, "3520": 233, "66it": [233, 237], "71": [233, 237], "3552": 233, "0419": 233, "1313": 233, "72": [233, 234, 237, 238], "3584": 233, "79it": [233, 234], "3616": 233, "41it": [233, 234], "73": [233, 237, 238], "3648": 233, "74": [233, 234, 237, 238], "3680": 233, "3712": 233, "75": [233, 237, 238], "3744": 233, "50it": [233, 237], "76": [233, 234, 237, 238], "3776": 233, "3808": 233, "94it": [233, 234, 237], "77": [233, 237, 238], "3840": [233, 237], "3872": 233, "1337": 233, "9460": 233, "78": [233, 234, 237, 238], "3904": 233, "79": [233, 237], "3936": 233, "3968": 233, "80": [233, 234, 237, 238], "4000": [233, 234], "39it": [233, 234, 237], "4032": 233, "24it": [233, 234], "4064": 233, "82": [233, 234, 237, 238], "4096": 233, "00it": [233, 234], "83": [233, 237, 238], "4128": 233, "4160": 233, "77it": 233, "84": [233, 234, 237], "4192": 233, "83it": [233, 234], "0478": 233, "4318": 233, "4224": 233, "85": [233, 237, 238], "4256": 233, "86": [233, 234, 237, 238], "4288": 233, "12it": [233, 234, 237], "4320": 233, "4352": 233, "88": [233, 234, 236, 237, 238, 239], "4384": 233, "4416": 233, "89": [233, 237], "4448": 233, "27it": [233, 237], "90": [233, 234, 237, 238], "4480": 233, "4512": 233, "0672": 233, "1232": 233, "91": [233, 234, 237], "4544": [233, 241], "92": [233, 234, 237, 238], "4576": 233, "4608": 233, "93": [233, 237], "4640": 233, "4672": 233, "57it": [233, 237], "4704": 233, "4736": 233, "4768": 233, "4800": 233, "97": [233, 237, 238], "4832": [233, 237], "36it": [233, 234, 237], "0860": 233, "9812": 233, "8000": [233, 234], "4864": 233, "13it": [233, 237], "4896": 233, "4928": 233, "4960": 233, "4992": 233, "88it": 233, "5024it": 233, "figsiz": [233, 234, 237], "subplot": [233, 234, 237, 241], "traj": 233, "savefig": 233, "albeit": [233, 237], "slowli": 233, "dqn_td0": 233, "png": 233, "capac": [233, 234], "logs_exp2": 233, "15it": [233, 237], "_batch_siz": 233, "tmpano7bobd": 233, "00238800048828125": 233, "313": [233, 237], "tmpaf0we6mv": 233, "076416015625": 233, "tmpqydlyyk3": 233, "0382080078125": 233, "tmp72pbqe7": 233, "01910400390625": 233, "tmp181cn8h8": 233, "0047760009765625": 233, "tmpfnwbstdp": 233, "001194000244140625": 233, "tmp4x8q8akq": 233, "tmppbhabibu": 233, "tmpaapc1g5g": 233, "tmp8iibtsc1": 233, "tmp4cwr0rl8": 233, "tmplnw56jco": 233, "tmpz9djcbch": 233, "tmp3rjcwn79": 233, "75it": [233, 234], "4776": 233, "5087": 233, "93it": [233, 234, 237], "19it": [233, 234], "7332": 233, "3002": 233, "92it": [233, 237], "1604": [233, 241], "7102": 233, "99it": 233, "42it": [233, 234, 237], "4655": 233, "5281": 233, "43it": 233, "23it": 233, "2039": 233, "4469": 233, "48it": [233, 237], "3915": 233, "1559": [233, 237], "1492": 233, "0972": 233, "0666": 233, "3683": 233, "5050": 233, "10it": [233, 237], "6886": 233, "0447": 233, "7000": [233, 234], "2663": 233, "0915": [233, 237], "60it": [233, 234, 237], "4100": 233, "2484": [233, 237], "1032": 233, "1667": [233, 237], "3339": 233, "1911": 233, "72it": [233, 234, 237], "62it": [233, 234, 237], "5858": 233, "1763": 233, "dqn_tdlambda": 233, "fewer": 233, "plot_both": 233, "frames_td0": 233, "frames_tdlambda": 233, "evals_td0": 233, "evals_tdlambda": 233, "mavgs_td0": 233, "mavgs_tdlambda": 233, "traj_count_td0": 233, "traj_count_tdlambda": 233, "td0": 233, "pixels_sav": 233, "imageio": 233, "mimwrit": 233, "mp4": 233, "fp": 233, "qvaluenetwork": 233, "nth": 233, "noticebli": 233, "collectorclass": 233, "till": 233, "steps_to_next_ob": 233, "worst": 233, "accuraci": 233, "fanci": 233, "013": [233, 237, 239], "1688": 233, "coding_dqn": [233, 239], "demonstr": [234, 237, 241], "talk": 234, "repetit": 234, "six": 234, "consum": 234, "sophist": 234, "invent": 234, "wheel": 234, "overview": [234, 240], "theta_k": 234, "frac": 234, "pi_": 234, "ratio": 234, "exceed": 234, "discourag": [234, 237], "indispens": 234, "loader": 234, "analyz": 234, "lingua": 234, "franca": 234, "descript": 234, "normalparamextractor": 234, "samplerwithoutreplac": 234, "rest": [234, 240], "has_cuda": [234, 241], "3e": 234, "max_grad_norm": 234, "ourselv": [234, 241], "benefici": 234, "errat": 234, "hamper": 234, "reactiv": 234, "group": 234, "xy": 234, "budget": 234, "50_000": 234, "sub_batch_s": 234, "num_epoch": 234, "intro": 234, "entropy_ep": 234, "generalist": 234, "interchang": [234, 238], "panel": 234, "charact": 234, "inverteddoublependulum": 234, "transmit": 234, "stai": 234, "thumb": 234, "supplementari": [234, 241], "told": 234, "stringent": 234, "nevertheless": 234, "concret": 234, "everyth": 234, "continuousbox": [234, 237, 240, 241], "environemnt": 234, "confid": 234, "succeed": [234, 237], "pack": [234, 241], "ran": 234, "mutli": 234, "boundari": 234, "f_": 234, "text": 234, "mu_": 234, "difficulti": [234, 241], "brought": 234, "scrictli": 234, "d_ob": 234, "d_action": 234, "extract": 234, "carrier": 234, "policy_modul": 234, "That": 234, "said": 234, "value_modul": [234, 240], "briefli": 234, "simplest": [234, 241], "oblivi": 234, "refil": 234, "conveni": [234, 237], "easiest": 234, "hide": 234, "awai": 234, "mathemat": 234, "deal": 234, "tradeoff": 234, "eval_str": 234, "tensordict_data": 234, "data_view": 234, "subdata": 234, "loss_val": 234, "loss_valu": [234, 240], "loss_object": 234, "loss_crit": 234, "loss_entropi": 234, "cum_reward_str": 234, "stepcount_str": 234, "param_group": 234, "lr_str": 234, "nice": 234, "noth": 234, "50000": 234, "tensorstorag": 234, "245": [234, 237], "7952": 234, "0982": 234, "0003": [234, 237], "246": [234, 237], "1437": 234, "247": [234, 237], "1684": [234, 237], "242": [234, 237], "1975": 234, "1918": [234, 237], "6000": 234, "1917": 234, "1802": 234, "1937": 234, "1898": 234, "1749": 234, "11000": 234, "129": [234, 237], "6081": 234, "1969": 234, "12000": 234, "2351": [234, 237], "13000": 234, "248": [234, 237], "14000": 234, "241": [234, 237], "15000": 234, "2166": 234, "0002": [234, 237], "16000": 234, "2061": 234, "17000": 234, "2371": 234, "18000": 234, "2313": 234, "19000": 234, "20000": 234, "249": [234, 237], "2310": 234, "21000": 234, "9235": 234, "2377": 234, "22000": 234, "2150": [234, 237], "23000": 234, "24000": 234, "2268": 234, "25000": 234, "2198": 234, "26000": 234, "2306": 234, "27000": 234, "2445": 234, "28000": 234, "29it": [234, 237], "2458": 234, "29000": 234, "2449": [234, 237], "30000": 234, "2568": 234, "31000": 234, "5197": 234, "2506": 234, "32000": 234, "2501": 234, "33000": 234, "2442": [234, 237], "34000": 234, "243": [234, 237], "2478": 234, "35000": 234, "2416": 234, "36000": 234, "2363": [234, 237], "37000": 234, "2408": 234, "38000": 234, "2471": 234, "39000": 234, "40000": 234, "2426": 234, "41000": 234, "259": [234, 237], "1420": 234, "42000": 234, "2396": 234, "43000": 234, "2443": 234, "44000": 234, "2446": 234, "45000": 234, "2417": 234, "46000": 234, "47000": 234, "2455": 234, "48000": 234, "2413": 234, "49000": 234, "2467": 234, "cap": 234, "bit": 234, "184": [234, 237, 239], "tutorials_python": 235, "tutorials_jupyt": 235, "distinct": 236, "humanoid": [236, 241], "walk": [236, 241], "env1": 236, "env1_obs_kei": 236, "observation_stand": 236, "env2": 236, "env2_obs_kei": 236, "observation_walk": 236, "tdreset1": 236, "tdreset2": 236, "tdreset": 236, "backbon": [236, 240], "policy_common": 236, "policy_stand": 236, "policy_walk": 236, "seq": 236, "But": 236, "env1_mak": 236, "env2_mak": 236, "_single_task": 236, "td_rollout": 236, "shown": 236, "808": [236, 239], "multi_task": [236, 239], "ground": 237, "freeli": 237, "inspir": 237, "sep": 237, "touch": 237, "undertaken": 237, "broader": 237, "challeng": [237, 238], "wider": 237, "algebra": 237, "acquaint": 237, "avenu": 237, "unsqueezetransform": 237, "_apply_to_composit": 237, "default_x": 237, "pi": 237, "default_i": 237, "_set_se": 237, "torqu": 237, "upward": 237, "angular": 237, "convent": 237, "dot": 237, "_t": 237, "sin": 237, "theta_t": 237, "rad": 237, "sec": 237, "gravit": 237, "theta_": 237, "001": 237, "angl": 237, "deleg": 237, "new_th": 237, "plu": 237, "new_thdot": 237, "thdot": 237, "g_forc": 237, "max_torqu": 237, "angle_norm": 237, "max_spe": 237, "zeros_lik": 237, "is_empti": 237, "gen_param": 237, "high_th": 237, "high_thdot": 237, "low_th": 237, "low_thdot": 237, "rng": 237, "lazili": 237, "shortcut": [237, 241], "characterist": 237, "irrelev": 237, "_make_spec": 237, "td_param": 237, "make_composite_from_td": 237, "commong": 237, "pseudo": 237, "pendulumenv": 237, "homonym": 237, "render_mod": 237, "human": 237, "rgb_arrai": 237, "render_fp": 237, "random_": 237, "_make_step": 237, "staticmethod": 237, "hyperparam": 237, "complic": [237, 241], "showcas": 237, "skeleton": 237, "_apply_transform": [237, 241], "_inv_apply_transform": [237, 241], "eventu": 237, "subset": [237, 238], "unitari": 237, "sine": 237, "cosin": 237, "sintransform": 237, "costransform": 237, "co": 237, "t_sin": 237, "t_co": 237, "cat_transform": 237, "mdp": 237, "convin": 237, "simplifi": 237, "simple_rollout": 237, "_data": 237, "unexplor": 237, "assumpt": 237, "recreat": 237, "20_000": 237, "init_td": 237, "traj_return": 237, "gn": 237, "last_reward": 237, "is_ipython": 237, "inlin": 237, "get_backend": 237, "ion": 237, "gcf": 237, "clear_output": 237, "625": 237, "9981": 237, "3292": 237, "8997": 237, "7032": 237, "696": 237, "8466": 237, "0202": 237, "807": 237, "2897": 237, "6322": 237, "0338": 237, "4880": 237, "504": 237, "1698": 237, "9674": 237, "188": 237, "0643": 237, "9703": 237, "127": 237, "3363": 237, "0207": 237, "048": 237, "3501": 237, "5927": 237, "5956": 237, "7665": 237, "732": 237, "3527": 237, "0354": 237, "468": 237, "2219": 237, "2999": 237, "8446": 237, "7448": 237, "961": 237, "7403": 237, "5034": 237, "411": 237, "9381": 237, "7937": 237, "619": 237, "8760": 237, "1022": 237, "6977": 237, "0331": 237, "987": 237, "8657": 237, "4508": 237, "919": 237, "9990": 237, "8757": 237, "921": 237, "9021": 237, "9585": 237, "518": 237, "6612": 237, "6255": 237, "648": 237, "7181": 237, "7913": 237, "089": 237, "0750": 237, "5913": 237, "596": 237, "65it": 237, "8299": 237, "4152": 237, "9993": 237, "4527": 237, "2555": 237, "551": 237, "3655": 237, "3651": 237, "6557": 237, "3352": 237, "9137": 237, "7104": 237, "8728": [237, 240], "144": 237, "8547": 237, "6320": 237, "871": 237, "7414": 237, "4717": 237, "211": 237, "7268": 237, "1833": 237, "6634": 237, "3899": 237, "6083": 237, "3508": 237, "5830": 237, "6835": 237, "8209": 237, "3483": 237, "7688": 237, "599": 237, "8693": 237, "3066": 237, "008": 237, "5190": 237, "2003": 237, "5916": 237, "0074": 237, "053": 237, "3596": 237, "3337": 237, "3250": 237, "4695": 237, "556": 237, "4941": 237, "0976": 237, "436": 237, "5073": 237, "5455": 237, "6267": 237, "7900": 237, "7116": 237, "0649": 237, "206": 237, "9751": 237, "0522": 237, "328": 237, "0844": 237, "7387": 237, "845": 237, "2246": 237, "5251": 237, "3373": 237, "9479": 237, "2709": 237, "3046": 237, "3977": 237, "3212": 237, "642": 237, "3854": 237, "9375": 237, "837": 237, "6287": 237, "6260": 237, "7219": 237, "8860": 237, "6979": 237, "2648": 237, "4459": 237, "3500": 237, "3812": 237, "3433": 237, "222": 237, "4411": 237, "6690": 237, "3777": 237, "1538": 237, "322": 237, "8743": 237, "4807": 237, "22e": 237, "3545": 237, "0107": 237, "2255": 237, "3131": 237, "1588": 237, "4491": 237, "076": 237, "2076": 237, "831": 237, "7440": 237, "6878": 237, "102": 237, "2344": 237, "1025": 237, "902": 237, "9207": 237, "3350": 237, "2087": 237, "2254": 237, "9928": 237, "3105": 237, "6532": 237, "8399": 237, "5124": 237, "8030": 237, "6501": 237, "4525": 237, "8541": 237, "8998": 237, "796e": 237, "2027": 237, "1556": 237, "3472": 237, "3081": 237, "396": 237, "3959": 237, "7512": 237, "3240": 237, "8101": 237, "4188": 237, "295": 237, "9779": 237, "5535": 237, "5627": 237, "6739": 237, "8125": 237, "6816": 237, "755": 237, "6262": 237, "0773": 237, "8989": 237, "1044": 237, "4514": 237, "0407": 237, "0062": 237, "4916": 237, "4074": 237, "0404": 237, "3795": 237, "3577": 237, "122": [237, 241], "3650": 237, "4141": 237, "134": 237, "9704": 237, "9697": 237, "1513": 237, "4501": 237, "285": 237, "2994": 237, "4022": 237, "579": 237, "2008": 237, "9061": 237, "558": 237, "0307": 237, "9752": 237, "5623": 237, "5012": 237, "2079": 237, "5742": 237, "125": 237, "2724": 237, "3876": 237, "2708": 237, "7700": 237, "058": 237, "1960": 237, "1463": 237, "3716": 237, "0288": 237, "2872": 237, "0933": 237, "9320": 237, "1261": 237, "1747": 237, "4484": 237, "0453": 237, "3530": 237, "209": 237, "103": 237, "3564": 237, "3918": 237, "104": 237, "4985": 237, "105": 237, "5372": 237, "6419": 237, "238": 237, "106": 237, "4172": 237, "1033": 237, "107": 237, "5129": 237, "1738": 237, "982": 237, "108": 237, "2507": 237, "6379": 237, "109": 237, "2202": 237, "9865": 237, "110": 237, "6413": 237, "0470": 237, "111": 237, "7870": 237, "4711": 237, "386": 237, "112": 237, "8113": 237, "5438": 237, "113": 237, "7211": 237, "2379": 237, "054": 237, "4828": 237, "5023": 237, "115": [237, 240], "9169": 237, "8205": 237, "171": 237, "116": 237, "0791": 237, "4240": 237, "117": 237, "0138": 237, "3126": 237, "651": 237, "118": 237, "6676": 237, "3220": 237, "119": 237, "0057": 237, "120": 237, "4148": 237, "9243": 237, "121": [237, 241], "2873": 237, "2469": 237, "1979": 237, "1586": 237, "123": 237, "6911": 237, "8230": 237, "124": 237, "7729": 237, "9686": 237, "126": 237, "2032": 237, "0313": 237, "656": 237, "9053": 237, "4081": 237, "9441": 237, "3413": 237, "5864": 237, "006": 237, "0038": 237, "5304": 237, "7869": 237, "2975": 237, "131": 237, "7712": 237, "1618": 237, "132": 237, "7366": 237, "133": 237, "4165": 237, "0684": 237, "188e": 237, "8963": 237, "1896": 237, "135": 237, "7390": 237, "136": 237, "9629": 237, "9319": 237, "169": 237, "137": 237, "3621": 237, "138": 237, "7266": 237, "1210": 237, "139": 237, "8384": 237, "5619": 237, "140": 237, "0575": 237, "5144": 237, "141": 237, "8710": 237, "7681": 237, "142": 237, "8321": 237, "8516": 237, "945": 237, "143": 237, "773": 237, "0999": 237, "1744": 237, "145": 237, "2118": 237, "8154": 237, "146": 237, "7484": 237, "4035": 237, "147": 237, "5152": 237, "0088": 237, "148": 237, "5423": 237, "7286": 237, "149": 237, "7692": 237, "1465": 237, "150": 237, "0797": 237, "1392": 237, "151": 237, "9611": 237, "9006": 237, "152": 237, "7773": 237, "6767": 237, "153": 237, "4340": 237, "2778": 237, "154": [237, 239], "5407": 237, "8302": 237, "595": 237, "155": [237, 241], "4597": 237, "1627": 237, "156": 237, "7073": 237, "3922": 237, "157": 237, "7815": 237, "9858": 237, "158": 237, "6953": 237, "7051": 237, "159": 237, "6165": 237, "0605": 237, "3321": 237, "9367": 237, "161": 237, "3238": 237, "1825": 237, "162": 237, "6537": 237, "6867": 237, "163": [237, 238, 240], "8555": 237, "0956": 237, "164": 237, "3248": 237, "0159": 237, "165": 237, "2370": 237, "7480": 237, "166": 237, "8993": 237, "8285": 237, "167": 237, "5465": 237, "3198": 237, "168": 237, "9088": 237, "3417": 237, "2199": 237, "2993": 237, "170": 237, "7042": 237, "1570": 237, "6141": 237, "284": 237, "172": 237, "9925": 237, "2946": 237, "173": 237, "5968": 237, "174": 237, "1712": 237, "175": 237, "6813": 237, "9453": 237, "176": 237, "5664": 237, "177": 237, "3610": 237, "9569": 237, "178": 237, "0602": 237, "9931": 237, "179": 237, "7767": 237, "8155": 237, "180": 237, "0498": 237, "7331": 237, "568": 237, "0781": 237, "1768": 237, "182": 237, "9178": 237, "6354": 237, "183": 237, "1244": 237, "8991": 237, "336": 237, "8262": 237, "2116": 237, "185": 237, "2508": 237, "7676": 237, "186": 237, "0428": 237, "2621": 237, "187": 237, "0812": 237, "9802": 237, "199": 237, "9924": 237, "0870": 237, "189": 237, "3196": 237, "190": 237, "9864": 237, "0182": 237, "191": 237, "0345": 237, "9245": 237, "9191": 237, "1752": 237, "491": 237, "193": 237, "1470": 237, "8907": 237, "257": 237, "194": 237, "1925": 237, "676": 237, "195": 237, "1042": 237, "5107": 237, "842": 237, "196": 237, "0179": 237, "2845": 237, "197": 237, "9784": 237, "0536": 237, "198": 237, "8914": 237, "3151": 237, "2599": 237, "7948": 237, "4072": 237, "201": 237, "5997": 237, "8325": 237, "202": 237, "8960": 237, "4193": 237, "203": 237, "0600": 237, "8070": 237, "204": 237, "0523": 237, "0025": 237, "205": 237, "5027": 237, "0148": 237, "0363": 237, "3280": 237, "207": 237, "1871": 237, "1571": 237, "208": 237, "8204": 237, "6373": 237, "9863": 237, "2612": 237, "0748": 237, "9467": 237, "8050": 237, "6954": 237, "291": 237, "212": 237, "4752": 237, "1008": 237, "016": 237, "213": 237, "8463": 237, "1723": 237, "214": 237, "6868": 237, "215": 237, "5380": 237, "1126": 237, "891": 237, "216": 237, "2657": 237, "2562": 237, "217": 237, "5513": 237, "0549": 237, "566": 237, "218": 237, "0561": 237, "1288": 237, "607": 237, "219": 237, "3470": 237, "0052": 237, "220": 237, "4686": 237, "0242": 237, "941": 237, "221": 237, "8202": 237, "9284": 237, "1519": 237, "799": 237, "223": 237, "9705": 237, "0056": 237, "027": 237, "9204": 237, "2680": 237, "991": 237, "225": 237, "0383": 237, "226": 237, "1037": 237, "7906": 237, "227": 237, "3671": 237, "5151": 237, "228": 237, "9767": 237, "9817": 237, "229": 237, "6483": 237, "0955": 237, "230": 237, "6856": 237, "5156": 237, "231": 237, "7647": 237, "4922": 237, "232": 237, "3724": 237, "4932": 237, "233": 237, "3750": 237, "873": 237, "234": 237, "7854": 237, "2685": 237, "839": 237, "235": 237, "2902": 237, "1122": 237, "618": 237, "236": 237, "0771": 237, "428": 237, "237": 237, "0086": 237, "324": 237, "3233": 237, "239": 237, "4450": 237, "1583": 237, "240": [237, 240, 241], "3740": 237, "2403": 237, "0024": 237, "569": 237, "1011": 237, "0112": 237, "251": 237, "6538": 237, "0162": 237, "9349": 237, "7379": 237, "8236": 237, "0259": 237, "8227": 237, "4424": 237, "6078": 237, "1075": 237, "2630": 237, "0820": 237, "684": 237, "2719": 237, "7146": 237, "364": 237, "4423": 237, "9679": 237, "4463": 237, "5761": 237, "252": 237, "0347": 237, "0947": 237, "253": 237, "4200": 237, "0638": 237, "254": 237, "4313": 237, "0403": 237, "074": 237, "6630": 237, "0239": 237, "1293": 237, "0677": 237, "638": 237, "8976": 237, "0517": 237, "092": 237, "258": 237, "1411": 237, "0897": 237, "0417": 237, "260": 237, "9226": 237, "0016": 237, "4881": 237, "261": 237, "1743": 237, "0167": 237, "262": 237, "1668": 237, "0481": 237, "263": 237, "1277": 237, "0092": 237, "8715": 237, "264": 237, "0661": 237, "0067": 237, "7747": 237, "265": 237, "2779": 237, "0430": 237, "9998": 237, "266": 237, "9067": 237, "0251": 237, "015": 237, "267": 237, "4558": 237, "0186": 237, "268": 237, "1901": 237, "1413": 237, "269": 237, "1785": 237, "0324": 237, "562": 237, "270": 237, "2759": 237, "826": 237, "271": 237, "1844": 237, "0168": 237, "587": 237, "272": 237, "3009": 237, "0362": 237, "273": 237, "7069": 237, "274": 237, "0793": 237, "5345": 237, "275": 237, "0513": 237, "0211": 237, "088": 237, "276": 237, "4400": 237, "0433": 237, "866": 237, "277": 237, "2846": 237, "0157": 237, "427": 237, "278": 237, "2392": 237, "1046": 237, "408": 237, "279": 237, "1373": 237, "5125": 237, "280": 237, "1448": 237, "0560": 237, "678": 237, "281": 237, "5425": 237, "0506": 237, "282": 237, "5210": 237, "0940": 237, "334": 237, "283": 237, "0558": 237, "876": 237, "2645": 237, "0130": 237, "5357": 237, "7399": 237, "8931": 237, "286": 237, "2394": 237, "9803": 237, "287": 237, "6626": 237, "8780": 237, "2521": 237, "0027": 237, "289": 237, "1452": 237, "0534": 237, "877": 237, "290": 237, "2637": 237, "0477": 237, "519": 237, "2021": 237, "0382": 237, "742": 237, "292": 237, "1473": 237, "0208": 237, "293": [237, 238, 239], "3379": 237, "0450": 237, "294": 237, "2145": 237, "0270": 237, "3688": 237, "7527": 237, "296": 237, "8627": 237, "297": 237, "2180": 237, "0066": 237, "298": 237, "0373": 237, "0055": 237, "299": 237, "5879": 237, "9401": 237, "6223": 237, "8889": 237, "301": 237, "2797": 237, "1580": 237, "302": 237, "9936": 237, "4949": 237, "303": 237, "4579": 237, "9796": 237, "304": 237, "0070": 237, "9057": 237, "305": 237, "2540": 237, "746": 237, "306": 237, "5077": 237, "1406": 237, "307": 237, "7956": 237, "7657": 237, "308": 237, "9119": 237, "1691": 237, "309": 237, "2513": 237, "3036": 237, "310": 237, "0779": 237, "0079": 237, "8692": 237, "311": 237, "9439": 237, "0460": 237, "592": 237, "8099": 237, "0491": 237, "516": 237, "314": 237, "8046": 237, "0147": 237, "404": 237, "315": 237, "0122": 237, "0017": 237, "6365": 237, "316": 237, "1499": 237, "0109": 237, "717": 237, "317": 237, "0034": 237, "4328": 237, "318": 237, "0010": 237, "3445": 237, "319": 237, "9434": 237, "2862": 237, "9168": 237, "0020": 237, "7494": 237, "321": 237, "7114": 237, "004": 237, "2146": 237, "323": 237, "8207": 237, "0008": 237, "093": 237, "0291": 237, "0036": 237, "733": 237, "325": 237, "0031": 237, "0059": 237, "9693": 237, "326": 237, "4539": 237, "4015": 237, "327": 237, "2260": 237, "0032": 237, "8712": 237, "0100": 237, "7291": 237, "329": 237, "0009": 237, "5744": 237, "330": 237, "9889": 237, "0205": 237, "563": 237, "331": 237, "9478": 237, "0578": 237, "332": 237, "3117": 237, "3474": 237, "333": 237, "3562": 237, "2034": 237, "0292": 237, "335": [237, 240], "6824": 237, "2522": 237, "565": 237, "337": 237, "9085": 237, "0041": 237, "798": 237, "338": 237, "0409": 237, "0278": 237, "339": 237, "0081": 237, "077": 237, "340": 237, "1038": 237, "0184": 237, "341": 237, "5232": 237, "2485": 237, "948": 237, "342": 237, "3397": 237, "343": 237, "1390": 237, "1946": 237, "344": 237, "3108": 237, "9773": 237, "345": 237, "9628": 237, "8776": 237, "346": 237, "593": 237, "347": 237, "4281": 237, "3059": 237, "348": 237, "9241": 237, "0303": 237, "349": 237, "4747": 237, "3566": 237, "350": 237, "5687": 237, "1356": 237, "351": 237, "9195": 237, "2604": 237, "5555": 237, "353": 237, "4093": 237, "354": 237, "3465": 237, "0412": 237, "498": 237, "355": 237, "4612": 237, "888": 237, "356": 237, "6161": 237, "357": 237, "4199": 237, "6984": 237, "358": 237, "1434": 237, "5982": 237, "359": 237, "6443": 237, "8121": 237, "360": 237, "9721": 237, "559": 237, "361": 237, "5386": 237, "0893": 237, "362": 237, "1242": [237, 240], "0828": 237, "507": 237, "363": 237, "8708": 237, "548": 237, "9075": 237, "4399": 237, "365": 237, "6237": 237, "0761": 237, "929": 237, "366": 237, "1787": 237, "1726": 237, "367": 237, "4725": 237, "368": 237, "0309": 237, "502": 237, "369": 237, "6823": 237, "0098": 237, "370": 237, "2397": 237, "371": 237, "4634": 237, "0099": 237, "699": 237, "372": 237, "9857": 237, "9962": 237, "373": 237, "9991": 237, "374": 237, "8959": 237, "737": 237, "375": 237, "1581": 237, "376": 237, "8401": 237, "377": 237, "9562": 237, "0272": 237, "378": 237, "9824": 237, "4239": 237, "379": 237, "2841": 237, "380": 237, "9922": 237, "4334": 237, "381": 237, "9613": 237, "6321": 237, "382": 237, "0516": 237, "8370": 237, "383": 237, "9549": 237, "7350": 237, "1794": 237, "4433": 237, "385": 237, "5432": 237, "738": 237, "9084": 237, "387": 237, "8010": 237, "388": 237, "9532": 237, "6513": 237, "389": 237, "8265": 237, "0729": 237, "390": 237, "8901": 237, "3721": 237, "391": 237, "8347": 237, "7444": 237, "392": 237, "6952": 237, "7052": 237, "393": 237, "4568": 237, "1346": 237, "394": 237, "0438": 237, "943": 237, "395": 237, "2904": 237, "9225": 237, "3052": 237, "0075": 237, "8393": 237, "397": 237, "1268": 237, "398": 237, "4296": 237, "1481": 237, "399": 237, "5538": 237, "3458": 237, "2728": 237, "1060": 237, "401": 237, "7887": 237, "2564": 237, "402": 237, "9080": 237, "5411": 237, "403": 237, "1620": 237, "7441": 237, "7703": 237, "405": 237, "6127": 237, "3102": 237, "406": 237, "4175": 237, "5960": 237, "407": 237, "0043": 237, "8779": 237, "409": 237, "6928": 237, "410": 237, "2700": 237, "022": 237, "0357": 237, "0019": 237, "028": 237, "412": 237, "0935": 237, "0060": 237, "7993": 237, "413": 237, "9033": 237, "0065": 237, "6378": 237, "414": 237, "9597": 237, "415": 237, "0110": 237, "0005": 237, "4133": 237, "8585": 237, "0042": 237, "6746": 237, "417": 237, "7328": 237, "1174": 237, "4613": 237, "418": 237, "0233": 237, "419": 237, "3477": 237, "018": 237, "420": 237, "6869": 237, "0289": 237, "4806": 237, "421": 237, "1528": 237, "0134": 237, "422": 237, "2155": 237, "423": 237, "0116": 237, "5719": 237, "424": 237, "0214": 237, "2801": 237, "425": 237, "4760": 237, "0224": 237, "6168": 237, "426": 237, "2511": 237, "0045": 237, "1865": 237, "8317": 237, "1415": 237, "2207": 237, "0841": 237, "429": 237, "0849": 237, "985": 237, "430": 237, "9495": 237, "0372": 237, "9485": 237, "431": 237, "9242": 237, "0039": 237, "4826": 237, "432": 237, "1635": 237, "433": 237, "9218": 237, "1003": 237, "434": 237, "7468": 237, "1522": 237, "435": 237, "7471": 237, "5852": 237, "9354": 237, "0013": 237, "037": [237, 239], "437": 237, "3633": 237, "0187": 237, "061": 237, "438": 237, "7091": 237, "0212": 237, "439": 237, "0950": 237, "6344": 237, "440": 237, "1945": 237, "5790": 237, "441": 237, "6370": 237, "7047": 237, "442": 237, "9447": 237, "0551": 237, "443": 237, "0674": 237, "0146": 237, "046": 237, "444": 237, "0087": 237, "0247": 237, "445": 237, "2640": 237, "0129": 237, "8987": 237, "446": 237, "1670": 237, "5398": 237, "447": 237, "9180": 237, "7940": 237, "2948": 237, "0588": 237, "449": 237, "0486": 237, "0029": 237, "1134": 237, "450": 237, "3267": 237, "5681": 237, "451": 237, "0151": 237, "452": 237, "6647": 237, "0316": 237, "453": 237, "5449": 237, "0209": 237, "097": 237, "454": 237, "9321": 237, "3687": 237, "953": 237, "455": 237, "9511": 237, "2701": 237, "456": 237, "0406": 237, "8281": 237, "457": 237, "0379": 237, "458": 237, "2470": 237, "0437": 237, "459": 237, "5843": 237, "0072": 237, "460": 237, "6838": 237, "3447": 237, "461": 237, "7313": 237, "0355": 237, "462": 237, "0265": 237, "9834": 237, "463": 237, "8536": 237, "9786": 237, "464": 237, "0696": 237, "7232": 237, "465": 237, "9096": 237, "4422": 237, "466": 237, "3227": 237, "0026": 237, "467": 237, "9565": 237, "9563": 237, "9941": 237, "1284": 237, "469": 237, "1401": 237, "2850": 237, "470": 237, "1807": 237, "8859": 237, "471": 237, "0268": 237, "2992": 237, "472": 237, "7436": 237, "0048": 237, "034": 237, "473": 237, "7046": 237, "0352": 237, "474": 237, "2023": 237, "3258": 237, "515": 237, "475": 237, "0141": 237, "9798": 237, "476": 237, "4474": 237, "0912": 237, "477": 237, "9181": 237, "5476": 237, "478": 237, "1264": 237, "3269": 237, "479": 237, "0714": 237, "0030": 237, "5317": 237, "5477": 237, "0255": 237, "8628": 237, "481": 237, "1258": 237, "0015": 237, "482": 237, "9650": 237, "4266": 237, "483": 237, "8081": 237, "0004": 237, "4455": 237, "484": 237, "5812": 237, "1719": 237, "485": 237, "1741": 237, "486": 237, "1595": 237, "0089": 237, "936": 237, "487": 237, "3892": 237, "488": 237, "3824": 237, "0093": 237, "6528": 237, "489": 237, "1727": 237, "1435": 237, "059": 237, "490": 237, "0916": 237, "0018": 237, "4518": 237, "9310": 237, "0006": 237, "3553": 237, "492": 237, "9972": 237, "4515": 237, "493": 237, "9493": 237, "8759": 237, "494": 237, "3700": 237, "495": 237, "0269": 237, "4107": 237, "496": 237, "6094": 237, "497": 237, "9116": 237, "1518": 237, "6022": 237, "0047": 237, "499": 237, "8009": 237, "0007": 237, "1845": 237, "6948": 237, "501": 237, "0971": 237, "0387": 237, "951": 237, "2885": 237, "503": 237, "0894": 237, "2552": 237, "0191": 237, "505": 237, "8276": 237, "506": 237, "9520": 237, "0037": 237, "5835": 237, "0374": 237, "7556": 237, "508": 237, "0579": 237, "0399": 237, "9277": 237, "509": 237, "0094": 237, "7127": 237, "510": 237, "0119": 237, "0121": 237, "511": 237, "6013": 237, "0220": 237, "8064": 237, "2684": 237, "8179": 237, "513": 237, "4730": 237, "0046": 237, "5481": 237, "514": 237, "0234": 237, "4331": 237, "8143": 237, "2915": [237, 240], "9051": 237, "0353": 237, "9127": 237, "517": 237, "0527": 237, "6465": 237, "7579": 237, "2010": 237, "3927": 237, "5383": 237, "862": 237, "520": 237, "7386": 237, "1014": 237, "521": 237, "9163": 237, "4487": 237, "522": 237, "5626": 237, "523": 237, "2899": 237, "0113": 237, "524": 237, "6441": 237, "0044": 237, "3965": 237, "525": 237, "5001": 237, "2060": 237, "526": 237, "8905": 237, "4168": 237, "527": 237, "4458": 237, "0012": 237, "051": 237, "528": 237, "9446": 237, "3096": 237, "529": 237, "2399": 237, "1971": 237, "530": 237, "4471": 237, "531": 237, "1270": 237, "0023": 237, "532": 237, "533": 237, "6550": 237, "583": 237, "534": 237, "1092": 237, "0049": 237, "535": 237, "7641": 237, "6674": 237, "536": 237, "0083": 237, "6375": 237, "537": 237, "1713": 237, "4933": 237, "538": 237, "3557": 237, "3964": 237, "539": 237, "0040": 237, "4129": 237, "540": 237, "7999": 237, "3176": 237, "541": 237, "2613": 237, "4742": 237, "542": 237, "1826": 237, "934": 237, "543": 237, "3158": 237, "3686": 237, "4047": 237, "545": 237, "7943": 237, "0902": 237, "546": 237, "3889": 237, "547": 237, "4309": 237, "4762": 237, "1662": 237, "9526": 237, "549": 237, "2170": 237, "0520": 237, "4367": 237, "550": 237, "4584": 237, "6931": 237, "0306": 237, "752": 237, "552": 237, "9054": 237, "2062": 237, "553": 237, "9523": 237, "4382": 237, "554": 237, "3534": 237, "0136": 237, "663": 237, "555": 237, "0279": 237, "0171": 237, "5679": 237, "4345": 237, "0145": 237, "4652": 237, "557": 237, "1205": 237, "0091": 237, "4838": 237, "0630": 237, "1721": 237, "3604": 237, "560": 237, "1695": 237, "561": 237, "6994": 237, "3646": 237, "0192": 237, "4547": 237, "564": 237, "2580": 237, "2356": 237, "1397": 237, "8400": 237, "7309": 237, "567": 237, "0101": 237, "8539": 237, "1256": 237, "4851": 237, "0284": 237, "570": 237, "7214": 237, "2575": 237, "571": 237, "3996": 237, "572": 237, "2542": 237, "4089": 237, "573": 237, "5782": 237, "0071": 237, "7487": 237, "574": 237, "3665": 237, "0050": 237, "7797": 237, "575": 237, "5660": 237, "1355": 237, "932": 237, "8266": 237, "577": 237, "3782": 237, "743": [237, 240], "578": 237, "1228": 237, "2931": 237, "043": 237, "6242": 237, "580": 237, "7491": 237, "6910": 237, "581": 237, "2258": 237, "0262": 237, "582": 237, "2386": 237, "0249": 237, "816": 237, "2947": 237, "2122": 237, "584": 237, "0096": 237, "0124": 237, "585": 237, "2979": 237, "0156": 237, "4948": 237, "586": 237, "3268": 237, "0369": 237, "6409": 237, "4034": 237, "4395": 237, "588": 237, "8407": 237, "4432": 237, "589": 237, "0069": 237, "3628": 237, "590": [237, 239, 241], "3101": 237, "591": 237, "3404": 237, "2964": 237, "594": 237, "8374": 237, "4346": 237, "7782": 237, "3826": 237, "7098": 237, "597": 237, "8646": 237, "0526": 237, "598": 237, "7452": 237, "9579": 237, "0991": 237, "889": 237, "600": 237, "0332": 237, "0199": 237, "601": 237, "602": 237, "7237": 237, "3591": 237, "603": 237, "3797": 237, "0022": 237, "6776": 237, "604": 237, "9337": 237, "605": 237, "6301": 237, "606": 237, "5972": 237, "5044": 237, "2131": 237, "664": 237, "609": 237, "1180": 237, "6142": 237, "610": 237, "5289": 237, "6693": 237, "611": 237, "4947": 237, "612": 237, "2196": 237, "4060": 237, "613": 237, "7377": 237, "3732": 237, "614": 237, "4574": 237, "0997": 237, "3581": 237, "615": 237, "9247": 237, "3012": 237, "616": 237, "3761": 237, "5136": 237, "617": 237, "4771": 237, "894": 237, "0177": 237, "3644": 237, "620": 237, "5914": 237, "621": 237, "4353": 237, "7637": 237, "622": 237, "7577": 237, "1609": 237, "809": [237, 239, 240], "623": 237, "8873": 237, "624": 237, "6568": 237, "5234": 237, "subject": 237, "saw": 237, "657": [237, 239], "fine": 238, "semat": 238, "r3mtransform": 238, "sake": 238, "embodi": 238, "ai": 238, "env_transform": [238, 241], "s3": 238, "amazonaw": 238, "r3m_50": 238, "374m": 238, "85m": 238, "8mb": 238, "4m": 238, "6mb": 238, "8m": 238, "3mb": 238, "104mb": 238, "0m": 238, "102mb": 238, "7m": 238, "1mb": 238, "5m": 238, "6m": 238, "105m": 238, "2mb": 238, "116m": 238, "130m": 238, "139m": 238, "149m": 238, "164m": 238, "180m": 238, "7mb": 238, "197m": 238, "212m": 238, "9mb": 238, "221m": 238, "0mb": 238, "229m": 238, "246m": 238, "261m": 238, "270m": 238, "279m": 238, "293m": 238, "4mb": 238, "300m": 238, "310m": 238, "317m": 238, "328m": 238, "342m": 238, "351m": 238, "360m": 238, "373m": 238, "wiser": 238, "again": [238, 241], "conclud": 238, "tmpghgrguft": 238, "030517578125": 238, "tmpl5iqhdj": 238, "00095367431640625": 238, "tmpzzgxivi_": 238, "659": 238, "1796875": 238, "tmpkvqi3atw": 238, "003814697265625": 238, "tmpg4ollqq5": 238, "tmpgf6swx_n": 238, "tmpkfvettlt": 238, "haven": 238, "yet": 238, "_storag": 238, "4388": 238, "pretrained_model": [238, 239], "1687": 239, "torchrl_demo": [239, 240], "3614": 239, "torchrl_env": [239, 241], "4387": 239, "demo": 240, "icml": 240, "dai": 240, "vmoen": 240, "fb": 240, "question": 240, "team": 240, "decid": 240, "invest": 240, "platform": 240, "media": 240, "truli": 240, "predominantli": 240, "tensordict1": 240, "tensordict2": 240, "tensordict_sampl": 240, "_sampler": 240, "_sum_tre": 240, "modulenotfounderror": 240, "28791671991348267": 240, "gym_env": 240, "noopresetenv": [240, 241], "lazyconv2d": 240, "6400": 240, "backbone_modul": 240, "params_expand": 240, "tensordict_exp": 240, "base_modul": 240, "0137": 240, "1524": 240, "0641": 240, "copybackward": 240, "1335": 240, "9833": 240, "3497": 240, "6889": 240, "6433": 240, "clampbackward1": 240, "1131": 240, "1761": 240, "3425": 240, "2665": 240, "6207": 240, "1441": 240, "2375": 240, "1372": 240, "3810": 240, "meanbackward1": 240, "tensordicts_prealloc": 240, "tensordicts_stack": 240, "tensordict_rollout": [240, 241], "disclaim": 240, "concatmodul": 240, "loss_td": 240, "pred_val": 240, "_loss_valu": 240, "_contextlib": 240, "decorate_context": 240, "3211": 240, "_default_get": 240, "keyerror": 240, "year": 240, "roadmap": 240, "compris": 240, "contributor": 240, "curiou": 240, "feedback": 240, "nascent": 240, "pypi": 240, "3615": 240, "supervis": 241, "unsupervis": 241, "rom": 241, "licens": 241, "pygam": 241, "unifi": 241, "insid": 241, "_build_env": 241, "sphinx_gallery_start_ignor": 241, "warn": 241, "filterwarn": 241, "sphinx_gallery_end_ignor": 241, "adventur": 241, "ram": 241, "airraid": 241, "alien": 241, "amidar": 241, "assault": 241, "1575": 241, "exectut": 241, "reproduct": 241, "tensordict_tprim": 241, "quickli": 241, "imshow": 241, "axesimag": 241, "0x7fc705ca6460": 241, "inconsist": 241, "swingup": 241, "swingup_spars": 241, "ball_in_cup": 241, "catch": 241, "balance_spars": 241, "three_pol": 241, "two_pol": 241, "finger": 241, "turn_easi": 241, "turn_hard": 241, "fish": 241, "swim": 241, "hopper": 241, "hop": 241, "run_pure_st": 241, "bring_bal": 241, "bring_peg": 241, "insert_bal": 241, "insert_peg": 241, "point_mass": 241, "reacher": 241, "swimmer": 241, "swimmer6": 241, "swimmer15": 241, "walker": 241, "dog": 241, "trot": 241, "humanoid_cmu": 241, "lqr": 241, "lqr_2_1": 241, "lqr_6_2": 241, "quadrup": 241, "escap": 241, "stacker": 241, "stack_2": 241, "stack_4": 241, "wrapper1": 241, "wrapper2": 241, "obviou": 241, "truth": 241, "env0": 241, "env_transformed_bi": 241, "stanc": 241, "transformeddistribut": 241, "base_dist": 241, "concat": 241, "mofidi": 241, "transformedenviron": 241, "moderet": 241, "computation": 241, "legitim": 241, "incom": 241, "amongst": 241, "wor": 241, "convention": 241, "scope": 241, "markovian": 241, "3288080526": 241, "sometim": 241, "constain": 241, "uuid1": 241, "foo": 241, "bar_": 241, "get_someth": 241, "bar_e20b9300": 241, "bf25": 241, "11ed": 241, "b458": 241, "0242ac120002": 241, "aargh": 241, "foo_list": 241, "vec_env": 241, "_dispatch_caller_parallel": 241, "0x7fc7047b8bb0": 241, "bar_e95af3b2": 241, "9d05": 241, "bar_e95d77a": 241, "98aa": 241, "bar_e95d23b2": 241, "a626": 241, "parallen": 241, "carefulli": 241, "commonli": 241, "approxim": 241, "particularili": 241, "evolv": 241, "steadi": 241, "approx": 241, "2867": 241, "1399": 241, "8610": 241, "9804": 241, "9856": 241, "_extra_st": 241, "observation_ssq": 241, "observation_sum": 241, "0985": 241, "2194": 241, "1211": 241, "2358": 241, "1672": 241, "dispach": 241, "absor": 241}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "MultiSyncDataCollector"], [13, 0, 1, "", "MultiaSyncDataCollector"], [14, 0, 1, "", "RandomPolicy"], [15, 0, 1, "", "SyncDataCollector"], [16, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[15, 1, 1, "", "iterator"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rollout"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[17, 2, 1, "", "split_trajectories"]], "torchrl.data": [[18, 0, 1, "", "BinaryDiscreteTensorSpec"], [19, 0, 1, "", "BoundedTensorSpec"], [20, 0, 1, "", "CompositeSpec"], [21, 0, 1, "", "DiscreteTensorSpec"], [22, 0, 1, "", "MultiDiscreteTensorSpec"], [23, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [24, 0, 1, "", "MultiStep"], [25, 0, 1, "", "OneHotDiscreteTensorSpec"], [26, 0, 1, "", "PrioritizedReplayBuffer"], [27, 0, 1, "", "ReplayBuffer"], [28, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [29, 0, 1, "", "TensorDictReplayBuffer"], [30, 0, 1, "", "TensorSpec"], [31, 0, 1, "", "UnboundedContinuousTensorSpec"], [32, 0, 1, "", "UnboundedDiscreteTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "expand"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "expand"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "expand"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "keys"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[21, 1, 1, "", "assert_is_in"], [21, 1, 1, "", "encode"], [21, 1, 1, "", "expand"], [21, 1, 1, "", "index"], [21, 1, 1, "", "is_in"], [21, 1, 1, "", "project"], [21, 1, 1, "", "rand"], [21, 1, 1, "", "to_numpy"], [21, 1, 1, "", "to_one_hot"], [21, 1, 1, "", "to_one_hot_spec"], [21, 1, 1, "", "type_check"], [21, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "expand"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "to_one_hot"], [22, 1, 1, "", "to_one_hot_spec"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "expand"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "to_categorical"], [23, 1, 1, "", "to_categorical_spec"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[24, 1, 1, "", "add_module"], [24, 1, 1, "", "apply"], [24, 1, 1, "", "bfloat16"], [24, 1, 1, "", "buffers"], [24, 1, 1, "", "children"], [24, 1, 1, "", "cpu"], [24, 1, 1, "", "cuda"], [24, 1, 1, "", "double"], [24, 1, 1, "", "eval"], [24, 1, 1, "", "extra_repr"], [24, 1, 1, "", "float"], [24, 1, 1, "", "forward"], [24, 1, 1, "", "get_buffer"], [24, 1, 1, "", "get_extra_state"], [24, 1, 1, "", "get_parameter"], [24, 1, 1, "", "get_submodule"], [24, 1, 1, "", "half"], [24, 1, 1, "", "ipu"], [24, 1, 1, "", "load_state_dict"], [24, 1, 1, "", "modules"], [24, 1, 1, "", "named_buffers"], [24, 1, 1, "", "named_children"], [24, 1, 1, "", "named_modules"], [24, 1, 1, "", "named_parameters"], [24, 1, 1, "", "parameters"], [24, 1, 1, "", "register_backward_hook"], [24, 1, 1, "", "register_buffer"], [24, 1, 1, "", "register_forward_hook"], [24, 1, 1, "", "register_forward_pre_hook"], [24, 1, 1, "", "register_full_backward_hook"], [24, 1, 1, "", "register_full_backward_pre_hook"], [24, 1, 1, "", "register_load_state_dict_post_hook"], [24, 1, 1, "", "register_module"], [24, 1, 1, "", "register_parameter"], [24, 1, 1, "", "register_state_dict_pre_hook"], [24, 1, 1, "", "requires_grad_"], [24, 1, 1, "", "set_extra_state"], [24, 1, 1, "", "share_memory"], [24, 1, 1, "", "state_dict"], [24, 1, 1, "", "to"], [24, 1, 1, "", "to_empty"], [24, 1, 1, "", "train"], [24, 1, 1, "", "type"], [24, 1, 1, "", "xpu"], [24, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "append_transform"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "insert_transform"], [26, 1, 1, "", "sample"]], "torchrl.data.ReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "append_transform"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "insert_transform"], [27, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[28, 1, 1, "", "add"], [28, 1, 1, "", "append_transform"], [28, 1, 1, "", "extend"], [28, 1, 1, "", "insert_transform"], [28, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[29, 1, 1, "", "add"], [29, 1, 1, "", "append_transform"], [29, 1, 1, "", "extend"], [29, 1, 1, "", "insert_transform"], [29, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.samplers": [[33, 0, 1, "", "PrioritizedSampler"], [34, 0, 1, "", "RandomSampler"], [35, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[33, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[36, 0, 1, "", "LazyMemmapStorage"], [37, 0, 1, "", "LazyTensorStorage"], [38, 0, 1, "", "ListStorage"], [39, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[36, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[39, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[40, 0, 1, "", "RoundRobinWriter"], [41, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[40, 1, 1, "", "add"], [40, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "extend"]], "torchrl.envs": [[42, 0, 1, "", "EnvBase"], [43, 0, 1, "", "EnvCreator"], [44, 0, 1, "", "EnvMetaData"], [45, 0, 1, "", "GymLikeEnv"], [46, 2, 1, "", "ModelBasedEnvBase"], [47, 0, 1, "", "MultiThreadedEnv"], [48, 0, 1, "", "ParallelEnv"], [49, 0, 1, "", "SerialEnv"], [46, 1, 1, "", "rand_step"], [46, 1, 1, "", "reset"], [46, 1, 1, "", "rollout"], [46, 1, 1, "", "set_seed"], [46, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[42, 1, 1, "", "add_module"], [42, 1, 1, "", "apply"], [42, 3, 1, "", "batch_locked"], [42, 1, 1, "", "bfloat16"], [42, 1, 1, "", "buffers"], [42, 1, 1, "", "children"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 1, 1, "", "double"], [42, 1, 1, "", "eval"], [42, 1, 1, "", "extra_repr"], [42, 1, 1, "", "fake_tensordict"], [42, 1, 1, "", "float"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_buffer"], [42, 1, 1, "", "get_extra_state"], [42, 1, 1, "", "get_parameter"], [42, 1, 1, "", "get_submodule"], [42, 1, 1, "", "half"], [42, 1, 1, "", "ipu"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "modules"], [42, 1, 1, "", "named_buffers"], [42, 1, 1, "", "named_children"], [42, 1, 1, "", "named_modules"], [42, 1, 1, "", "named_parameters"], [42, 1, 1, "", "parameters"], [42, 1, 1, "", "rand_action"], [42, 1, 1, "id0", "rand_step"], [42, 1, 1, "", "register_backward_hook"], [42, 1, 1, "", "register_buffer"], [42, 1, 1, "", "register_forward_hook"], [42, 1, 1, "", "register_forward_pre_hook"], [42, 1, 1, "", "register_full_backward_hook"], [42, 1, 1, "", "register_full_backward_pre_hook"], [42, 1, 1, "", "register_load_state_dict_post_hook"], [42, 1, 1, "", "register_module"], [42, 1, 1, "", "register_parameter"], [42, 1, 1, "", "register_state_dict_pre_hook"], [42, 1, 1, "", "requires_grad_"], [42, 1, 1, "id1", "reset"], [42, 1, 1, "id2", "rollout"], [42, 1, 1, "", "set_extra_state"], [42, 1, 1, "id3", "set_seed"], [42, 1, 1, "", "share_memory"], [42, 3, 1, "", "specs"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "id4", "step"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_empty"], [42, 1, 1, "", "train"], [42, 1, 1, "", "type"], [42, 1, 1, "", "xpu"], [42, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 3, 1, "", "batch_locked"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "close"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "fake_tensordict"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "rand_action"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "read_action"], [45, 1, 1, "", "read_done"], [45, 1, 1, "", "read_obs"], [45, 1, 1, "", "read_reward"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_full_backward_pre_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "register_state_dict_pre_hook"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_info_dict_reader"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "share_memory"], [45, 3, 1, "", "specs"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "step"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[47, 1, 1, "", "add_module"], [47, 1, 1, "", "apply"], [47, 3, 1, "", "batch_locked"], [47, 1, 1, "", "bfloat16"], [47, 1, 1, "", "buffers"], [47, 1, 1, "", "children"], [47, 1, 1, "", "close"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 1, 1, "", "double"], [47, 1, 1, "", "eval"], [47, 1, 1, "", "extra_repr"], [47, 1, 1, "", "fake_tensordict"], [47, 1, 1, "", "float"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_buffer"], [47, 1, 1, "", "get_extra_state"], [47, 1, 1, "", "get_parameter"], [47, 1, 1, "", "get_submodule"], [47, 1, 1, "", "half"], [47, 1, 1, "", "ipu"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "modules"], [47, 1, 1, "", "named_buffers"], [47, 1, 1, "", "named_children"], [47, 1, 1, "", "named_modules"], [47, 1, 1, "", "named_parameters"], [47, 1, 1, "", "parameters"], [47, 1, 1, "", "rand_action"], [47, 1, 1, "", "rand_step"], [47, 1, 1, "", "register_backward_hook"], [47, 1, 1, "", "register_buffer"], [47, 1, 1, "", "register_forward_hook"], [47, 1, 1, "", "register_forward_pre_hook"], [47, 1, 1, "", "register_full_backward_hook"], [47, 1, 1, "", "register_full_backward_pre_hook"], [47, 1, 1, "", "register_load_state_dict_post_hook"], [47, 1, 1, "", "register_module"], [47, 1, 1, "", "register_parameter"], [47, 1, 1, "", "register_state_dict_pre_hook"], [47, 1, 1, "", "requires_grad_"], [47, 1, 1, "", "reset"], [47, 1, 1, "", "rollout"], [47, 1, 1, "", "set_extra_state"], [47, 1, 1, "", "set_seed"], [47, 1, 1, "", "share_memory"], [47, 3, 1, "", "specs"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "step"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_empty"], [47, 1, 1, "", "train"], [47, 1, 1, "", "type"], [47, 1, 1, "", "xpu"], [47, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[48, 1, 1, "", "add_module"], [48, 1, 1, "", "apply"], [48, 3, 1, "", "batch_locked"], [48, 1, 1, "", "bfloat16"], [48, 1, 1, "", "buffers"], [48, 1, 1, "", "children"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 1, 1, "", "double"], [48, 1, 1, "", "eval"], [48, 1, 1, "", "extra_repr"], [48, 1, 1, "", "fake_tensordict"], [48, 1, 1, "", "float"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_buffer"], [48, 1, 1, "", "get_extra_state"], [48, 1, 1, "", "get_parameter"], [48, 1, 1, "", "get_submodule"], [48, 1, 1, "", "half"], [48, 1, 1, "", "ipu"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "modules"], [48, 1, 1, "", "named_buffers"], [48, 1, 1, "", "named_children"], [48, 1, 1, "", "named_modules"], [48, 1, 1, "", "named_parameters"], [48, 1, 1, "", "parameters"], [48, 1, 1, "", "rand_action"], [48, 1, 1, "", "rand_step"], [48, 1, 1, "", "register_backward_hook"], [48, 1, 1, "", "register_buffer"], [48, 1, 1, "", "register_forward_hook"], [48, 1, 1, "", "register_forward_pre_hook"], [48, 1, 1, "", "register_full_backward_hook"], [48, 1, 1, "", "register_full_backward_pre_hook"], [48, 1, 1, "", "register_load_state_dict_post_hook"], [48, 1, 1, "", "register_module"], [48, 1, 1, "", "register_parameter"], [48, 1, 1, "", "register_state_dict_pre_hook"], [48, 1, 1, "", "requires_grad_"], [48, 1, 1, "", "reset"], [48, 1, 1, "", "rollout"], [48, 1, 1, "", "set_extra_state"], [48, 1, 1, "", "set_seed"], [48, 1, 1, "", "share_memory"], [48, 3, 1, "", "specs"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "step"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_empty"], [48, 1, 1, "", "train"], [48, 1, 1, "", "type"], [48, 1, 1, "", "update_kwargs"], [48, 1, 1, "", "xpu"], [48, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[49, 1, 1, "", "add_module"], [49, 1, 1, "", "apply"], [49, 3, 1, "", "batch_locked"], [49, 1, 1, "", "bfloat16"], [49, 1, 1, "", "buffers"], [49, 1, 1, "", "children"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 1, 1, "", "double"], [49, 1, 1, "", "eval"], [49, 1, 1, "", "extra_repr"], [49, 1, 1, "", "fake_tensordict"], [49, 1, 1, "", "float"], [49, 1, 1, "", "forward"], [49, 1, 1, "", "get_buffer"], [49, 1, 1, "", "get_extra_state"], [49, 1, 1, "", "get_parameter"], [49, 1, 1, "", "get_submodule"], [49, 1, 1, "", "half"], [49, 1, 1, "", "ipu"], [49, 1, 1, "", "load_state_dict"], [49, 1, 1, "", "modules"], [49, 1, 1, "", "named_buffers"], [49, 1, 1, "", "named_children"], [49, 1, 1, "", "named_modules"], [49, 1, 1, "", "named_parameters"], [49, 1, 1, "", "parameters"], [49, 1, 1, "", "rand_action"], [49, 1, 1, "", "rand_step"], [49, 1, 1, "", "register_backward_hook"], [49, 1, 1, "", "register_buffer"], [49, 1, 1, "", "register_forward_hook"], [49, 1, 1, "", "register_forward_pre_hook"], [49, 1, 1, "", "register_full_backward_hook"], [49, 1, 1, "", "register_full_backward_pre_hook"], [49, 1, 1, "", "register_load_state_dict_post_hook"], [49, 1, 1, "", "register_module"], [49, 1, 1, "", "register_parameter"], [49, 1, 1, "", "register_state_dict_pre_hook"], [49, 1, 1, "", "requires_grad_"], [49, 1, 1, "", "reset"], [49, 1, 1, "", "rollout"], [49, 1, 1, "", "set_extra_state"], [49, 1, 1, "", "set_seed"], [49, 1, 1, "", "share_memory"], [49, 3, 1, "", "specs"], [49, 1, 1, "", "state_dict"], [49, 1, 1, "", "step"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_empty"], [49, 1, 1, "", "train"], [49, 1, 1, "", "type"], [49, 1, 1, "", "update_kwargs"], [49, 1, 1, "", "xpu"], [49, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.brax": [[50, 2, 1, "", "BraxEnv"], [51, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[52, 2, 1, "", "DMControlEnv"], [53, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[54, 2, 1, "", "GymEnv"], [55, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[56, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[57, 2, 1, "", "JumanjiEnv"], [58, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.vmas": [[59, 2, 1, "", "VmasEnv"], [60, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[61, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[62, 0, 1, "", "BinarizeReward"], [63, 0, 1, "", "CatFrames"], [64, 0, 1, "", "CatTensors"], [65, 0, 1, "", "CenterCrop"], [66, 0, 1, "", "Compose"], [67, 0, 1, "", "DiscreteActionProjection"], [68, 0, 1, "", "DoubleToFloat"], [69, 0, 1, "", "ExcludeTransform"], [70, 0, 1, "", "FiniteTensorDictCheck"], [71, 0, 1, "", "FlattenObservation"], [72, 0, 1, "", "FrameSkipTransform"], [73, 0, 1, "", "GrayScale"], [74, 0, 1, "", "NoopResetEnv"], [75, 0, 1, "", "ObservationNorm"], [76, 0, 1, "", "ObservationTransform"], [77, 0, 1, "", "PinMemoryTransform"], [78, 0, 1, "", "R3MTransform"], [79, 0, 1, "", "RandomCropTensorDict"], [80, 0, 1, "", "Resize"], [81, 0, 1, "", "RewardClipping"], [82, 0, 1, "", "RewardScaling"], [83, 0, 1, "", "RewardSum"], [84, 0, 1, "", "SelectTransform"], [85, 0, 1, "", "SqueezeTransform"], [86, 0, 1, "", "StepCounter"], [87, 0, 1, "", "TensorDictPrimer"], [88, 0, 1, "", "TimeMaxPool"], [89, 0, 1, "", "ToTensorImage"], [90, 0, 1, "", "Transform"], [91, 0, 1, "", "TransformedEnv"], [92, 0, 1, "", "UnsqueezeTransform"], [93, 0, 1, "", "VIPRewardTransform"], [94, 0, 1, "", "VIPTransform"], [95, 0, 1, "", "VecNorm"], [96, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[62, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[63, 1, 1, "", "forward"], [63, 1, 1, "", "reset"], [63, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[64, 1, 1, "", "forward"], [64, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[65, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[66, 1, 1, "", "forward"], [66, 1, 1, "", "reset"], [66, 1, 1, "", "to"], [66, 1, 1, "", "transform_input_spec"], [66, 1, 1, "", "transform_observation_spec"], [66, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[67, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[68, 1, 1, "", "transform_input_spec"], [68, 1, 1, "", "transform_observation_spec"], [68, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[69, 1, 1, "", "forward"], [69, 1, 1, "", "reset"], [69, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[70, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[71, 1, 1, "", "forward"], [71, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[72, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[73, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[74, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[75, 1, 1, "", "init_stats"], [75, 1, 1, "", "transform_input_spec"], [75, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[77, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[78, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[79, 1, 1, "", "forward"]], "torchrl.envs.transforms.Resize": [[80, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[81, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[82, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[83, 1, 1, "", "reset"], [83, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[84, 1, 1, "", "forward"], [84, 1, 1, "", "reset"], [84, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[86, 1, 1, "", "forward"], [86, 1, 1, "", "reset"], [86, 1, 1, "", "transform_input_spec"], [86, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[87, 1, 1, "", "forward"], [87, 1, 1, "", "reset"], [87, 1, 1, "", "to"], [87, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[88, 1, 1, "", "forward"], [88, 1, 1, "", "reset"], [88, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[89, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[90, 1, 1, "", "forward"], [90, 1, 1, "", "reset"], [90, 1, 1, "", "transform_done_spec"], [90, 1, 1, "", "transform_input_spec"], [90, 1, 1, "", "transform_observation_spec"], [90, 1, 1, "", "transform_output_spec"], [90, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[91, 3, 1, "", "action_spec"], [91, 3, 1, "", "batch_locked"], [91, 3, 1, "", "done_spec"], [91, 1, 1, "", "eval"], [91, 3, 1, "", "input_spec"], [91, 1, 1, "", "load_state_dict"], [91, 3, 1, "", "observation_spec"], [91, 3, 1, "", "output_spec"], [91, 3, 1, "", "reward_spec"], [91, 1, 1, "", "set_seed"], [91, 1, 1, "", "state_dict"], [91, 1, 1, "", "to"], [91, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[92, 1, 1, "", "transform_input_spec"], [92, 1, 1, "", "transform_observation_spec"], [92, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[93, 1, 1, "", "forward"], [93, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[94, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[95, 1, 1, "", "build_td_for_shared_vecnorm"], [95, 1, 1, "", "forward"], [95, 1, 1, "", "get_extra_state"], [95, 1, 1, "", "set_extra_state"], [95, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[97, 2, 1, "", "check_env_specs"], [98, 2, 1, "", "exploration_mode"], [99, 2, 1, "", "get_available_libraries"], [100, 2, 1, "", "set_exploration_mode"], [101, 2, 1, "", "step_mdp"]], "torchrl.modules": [[102, 0, 1, "", "CEMPlanner"], [103, 0, 1, "", "ConvNet"], [104, 0, 1, "", "DdpgCnnActor"], [105, 0, 1, "", "DdpgCnnQNet"], [106, 0, 1, "", "DdpgMlpActor"], [107, 0, 1, "", "DdpgMlpQNet"], [108, 0, 1, "", "Delta"], [109, 0, 1, "", "DistributionalDQNnet"], [110, 0, 1, "", "DreamerActor"], [111, 0, 1, "", "DuelingCnnDQNet"], [112, 0, 1, "", "IndependentNormal"], [113, 0, 1, "", "LSTMNet"], [114, 0, 1, "", "MLP"], [115, 0, 1, "", "MPCPlannerBase"], [116, 0, 1, "", "MPPIPlanner"], [117, 0, 1, "", "NoisyLazyLinear"], [118, 0, 1, "", "NoisyLinear"], [119, 0, 1, "", "NormalParamWrapper"], [120, 0, 1, "", "ObsDecoder"], [121, 0, 1, "", "ObsEncoder"], [122, 0, 1, "", "OneHotCategorical"], [123, 0, 1, "", "RSSMPosterior"], [124, 0, 1, "", "RSSMPrior"], [125, 0, 1, "", "TanhDelta"], [126, 0, 1, "", "TanhNormal"], [127, 0, 1, "", "TruncatedNormal"], [128, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[102, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[103, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[104, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[105, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[106, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[107, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[108, 1, 1, "", "log_prob"], [108, 3, 1, "", "mean"], [108, 3, 1, "", "mode"], [108, 1, 1, "", "rsample"], [108, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[109, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[110, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[111, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[112, 3, 1, "", "mode"]], "torchrl.modules.LSTMNet": [[113, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[114, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[115, 1, 1, "", "forward"], [115, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[116, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[117, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[119, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[120, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[121, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[122, 1, 1, "", "log_prob"], [122, 3, 1, "", "mode"], [122, 1, 1, "", "rsample"], [122, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[123, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[124, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[125, 3, 1, "", "mean"], [125, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[126, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[127, 1, 1, "", "log_prob"], [127, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module": [[129, 0, 1, "", "Actor"], [130, 0, 1, "", "ActorCriticOperator"], [131, 0, 1, "", "ActorCriticWrapper"], [132, 0, 1, "", "ActorValueOperator"], [133, 0, 1, "", "AdditiveGaussianWrapper"], [134, 0, 1, "", "DistributionalQValueActor"], [135, 0, 1, "", "EGreedyWrapper"], [136, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [137, 0, 1, "", "ProbabilisticActor"], [138, 0, 1, "", "QValueActor"], [139, 0, 1, "", "SafeModule"], [140, 0, 1, "", "SafeProbabilisticModule"], [141, 0, 1, "", "SafeProbabilisticSequential"], [142, 0, 1, "", "SafeSequential"], [143, 0, 1, "", "ValueOperator"], [144, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[130, 1, 1, "", "get_critic_operator"], [130, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[131, 1, 1, "", "get_policy_operator"], [131, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[132, 1, 1, "", "get_policy_operator"], [132, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[136, 1, 1, "", "forward"], [136, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.SafeModule": [[139, 1, 1, "", "random"], [139, 1, 1, "", "random_sample"], [139, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[140, 1, 1, "", "random"], [140, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[144, 1, 1, "", "get_reward_operator"], [144, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.tensordict_module.actors": [[145, 0, 1, "", "DistributionalQValueHook"], [146, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[147, 0, 1, "", "ensure_tensordict_compatible"], [148, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[149, 0, 1, "", "biased_softplus"], [150, 0, 1, "", "inv_softplus"], [151, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[149, 1, 1, "", "forward"]], "torchrl.objectives": [[152, 0, 1, "", "A2CLoss"], [153, 0, 1, "", "ClipPPOLoss"], [154, 0, 1, "", "DDPGLoss"], [155, 0, 1, "", "DQNLoss"], [156, 0, 1, "", "DistributionalDQNLoss"], [157, 0, 1, "", "DreamerActorLoss"], [158, 0, 1, "", "DreamerModelLoss"], [159, 0, 1, "", "DreamerValueLoss"], [160, 0, 1, "", "HardUpdate"], [161, 0, 1, "", "KLPENPPOLoss"], [162, 0, 1, "", "PPOLoss"], [163, 0, 1, "", "REDQLoss"], [164, 0, 1, "", "ReinforceLoss"], [165, 0, 1, "", "SACLoss"], [166, 0, 1, "", "SoftUpdate"], [167, 0, 1, "", "distance_loss"], [168, 0, 1, "", "hold_out_net"], [169, 0, 1, "", "hold_out_params"], [170, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[152, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[153, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[154, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[155, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[156, 1, 1, "", "forward"]], "torchrl.objectives.DreamerActorLoss": [[157, 1, 1, "", "forward"]], "torchrl.objectives.DreamerModelLoss": [[158, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[159, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[161, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[162, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[163, 1, 1, "", "forward"]], "torchrl.objectives.ReinforceLoss": [[164, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[165, 1, 1, "", "forward"]], "torchrl.objectives.value": [[171, 0, 1, "", "GAE"], [172, 0, 1, "", "TDEstimate"], [173, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[171, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[172, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[173, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[174, 0, 1, "", "generalized_advantage_estimate"], [175, 0, 1, "", "td_advantage_estimate"], [176, 0, 1, "", "td_lambda_advantage_estimate"], [177, 0, 1, "", "td_lambda_return_estimate"], [178, 0, 1, "", "vec_generalized_advantage_estimate"], [179, 0, 1, "", "vec_td_lambda_advantage_estimate"], [180, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[181, 2, 1, "", "TensorDictRecorder"], [182, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[183, 2, 1, "", "CSVLogger"], [184, 2, 1, "", "Logger"], [185, 2, 1, "", "MLFlowLogger"], [186, 2, 1, "", "TensorboardLogger"], [187, 2, 1, "", "WandbLogger"], [188, 2, 1, "", "generate_exp_name"], [189, 2, 1, "", "get_logger"]], "torchrl.trainers": [[190, 0, 1, "", "BatchSubSampler"], [191, 0, 1, "", "ClearCudaCache"], [192, 0, 1, "", "CountFramesLog"], [193, 0, 1, "", "LogReward"], [194, 0, 1, "", "OptimizerHook"], [195, 0, 1, "", "Recorder"], [196, 0, 1, "", "ReplayBufferTrainer"], [197, 0, 1, "", "RewardNormalizer"], [198, 0, 1, "", "SelectKeys"], [199, 0, 1, "", "Trainer"], [200, 0, 1, "", "TrainerHookBase"], [201, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.helpers": [[202, 2, 1, "", "correct_for_frame_skip"], [203, 2, 1, "", "get_stats_random_rollout"], [204, 2, 1, "", "make_a2c_loss"], [205, 2, 1, "", "make_a2c_model"], [206, 2, 1, "", "make_collector_offpolicy"], [207, 2, 1, "", "make_collector_onpolicy"], [208, 2, 1, "", "make_ddpg_actor"], [209, 2, 1, "", "make_ddpg_loss"], [210, 2, 1, "", "make_dqn_actor"], [211, 2, 1, "", "make_dqn_loss"], [212, 2, 1, "", "make_ppo_loss"], [213, 2, 1, "", "make_ppo_model"], [214, 2, 1, "", "make_redq_loss"], [215, 2, 1, "", "make_redq_model"], [216, 2, 1, "", "make_replay_buffer"], [217, 2, 1, "", "make_sac_loss"], [218, 2, 1, "", "make_sac_model"], [219, 2, 1, "", "make_target_updater"], [220, 2, 1, "", "make_trainer"], [221, 2, 1, "", "parallel_env_constructor"], [222, 2, 1, "", "sync_async_collector"], [223, 2, 1, "", "sync_sync_collector"], [224, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 6, 228, 229, 230, 231, 232, 233, 234, 237, 240, 241], "document": [0, 9], "tutori": [0, 234], "basic": 0, "intermedi": [0, 8], "advanc": 0, "refer": [0, 226], "knowledg": [0, 227], "base": [0, 7, 227, 233], "indic": 0, "tabl": 0, "collector": [1, 232, 233, 234, 240], "packag": [1, 2, 3, 228, 229, 230, 231], "data": [1, 2, 4, 232, 233, 234, 240], "helper": [1, 3], "function": [1, 4, 233, 234, 240], "replai": [2, 232, 233, 234, 240], "buffer": [2, 232, 233, 234, 240], "compos": [2, 66], "sotr": 2, "trajectori": [2, 232], "tensorspec": [2, 30], "util": [2, 228, 229, 230], "env": [3, 237, 240, 241], "vector": [3, 240], "transform": [3, 90, 232, 234, 237, 240, 241], "clone": [3, 7], "record": [3, 195, 230, 232], "domain": 3, "specif": [3, 236], "librari": [3, 240], "thing": [4, 237], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 240], "gener": 4, "have": 4, "you": 4, "valid": 4, "your": [4, 6, 232, 237], "algorithm": 4, "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 232, 233], "return": [4, 229], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "agent": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 232, 234, 236, 237], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 240], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "i": [4, 5, 8], "favor": 4, "singl": 4, "compon": 4, "veloc": 4, "v": 4, "l2": 4, "action": [4, 237], "magnitud": 4, "task": [4, 236], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 232, 233, 234], "standard": 4, "explor": [4, 228, 233], "valu": [4, 232, 234], "loss": [4, 234], "earli": 4, "train": [4, 8, 232, 233, 234, 237], "roughli": 4, "uniformli": 4, "random": 4, "intrins": 4, "decai": 4, "learn": [4, 234], "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 233], "increas": 4, "an": [4, 234, 237], "environ": [4, 6, 7, 232, 233, 234, 236, 237, 240, 241], "dynam": 4, "can": 4, "low": 4, "forward": 4, "model": [4, 228, 232, 233, 238, 240], "also": 4, "us": [4, 6, 9, 232, 233, 238, 240], "offlin": 4, "observ": [4, 232], "space": 4, "effect": [4, 237], "dramat": 4, "dure": 4, "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 241], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 240], "from": [6, 7], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 241], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 237], "workaround": 10, "implement_for": 11, "multisyncdatacollector": 12, "multiasyncdatacollector": 13, "randompolici": 14, "syncdatacollector": 15, "asyncdatacollector": 16, "split_trajectori": 17, "binarydiscretetensorspec": 18, "boundedtensorspec": 19, "compositespec": 20, "discretetensorspec": 21, "multidiscretetensorspec": 22, "multionehotdiscretetensorspec": 23, "multistep": 24, "onehotdiscretetensorspec": 25, "prioritizedreplaybuff": 26, "replaybuff": 27, "tensordictprioritizedreplaybuff": 28, "tensordictreplaybuff": 29, "unboundedcontinuoustensorspec": 31, "unboundeddiscretetensorspec": 32, "prioritizedsampl": 33, "randomsampl": 34, "sampler": 35, "lazymemmapstorag": 36, "lazytensorstorag": 37, "liststorag": 38, "storag": 39, "roundrobinwrit": 40, "writer": 41, "envbas": [42, 237], "envcreat": 43, "envmetadata": 44, "gymlikeenv": 45, "modelbasedenvbas": 46, "multithreadedenv": 47, "parallelenv": 48, "serialenv": 49, "braxenv": 50, "braxwrapp": 51, "dmcontrolenv": 52, "dmcontrolwrapp": 53, "gymenv": 54, "gymwrapp": 55, "habitatenv": 56, "jumanjienv": 57, "jumanjiwrapp": 58, "vmasenv": 59, "vmaswrapp": 60, "dreamerenv": 61, "binarizereward": 62, "catfram": 63, "cattensor": 64, "centercrop": 65, "discreteactionproject": 67, "doubletofloat": 68, "excludetransform": 69, "finitetensordictcheck": 70, "flattenobserv": 71, "frameskiptransform": 72, "grayscal": 73, "noopresetenv": 74, "observationnorm": 75, "observationtransform": 76, "pinmemorytransform": 77, "r3mtransform": 78, "randomcroptensordict": 79, "resiz": 80, "rewardclip": 81, "rewardsc": 82, "rewardsum": 83, "selecttransform": 84, "squeezetransform": 85, "stepcount": 86, "tensordictprim": 87, "timemaxpool": 88, "totensorimag": 89, "transformedenv": 91, "unsqueezetransform": 92, "viprewardtransform": 93, "viptransform": 94, "vecnorm": [95, 241], "gsdenois": 96, "check_env_spec": 97, "exploration_mod": 98, "get_available_librari": 99, "set_exploration_mod": 100, "step_mdp": 101, "cemplann": 102, "convnet": 103, "ddpgcnnactor": 104, "ddpgcnnqnet": 105, "ddpgmlpactor": 106, "ddpgmlpqnet": 107, "delta": 108, "distributionaldqnnet": 109, "dreameractor": 110, "duelingcnndqnet": 111, "independentnorm": 112, "lstmnet": 113, "mlp": 114, "mpcplannerbas": 115, "mppiplann": 116, "noisylazylinear": 117, "noisylinear": 118, "normalparamwrapp": 119, "obsdecod": 120, "obsencod": 121, "onehotcategor": 122, "rssmposterior": 123, "rssmprior": 124, "tanhdelta": 125, "tanhnorm": 126, "truncatednorm": 127, "reset_nois": 128, "actor": 129, "actorcriticoper": 130, "actorcriticwrapp": 131, "actorvalueoper": 132, "additivegaussianwrapp": 133, "distributionalqvalueactor": 134, "egreedywrapp": 135, "ornsteinuhlenbeckprocesswrapp": 136, "probabilisticactor": 137, "qvalueactor": 138, "safemodul": 139, "safeprobabilisticmodul": 140, "safeprobabilisticsequenti": 141, "safesequenti": 142, "valueoper": 143, "worldmodelwrapp": 144, "distributionalqvaluehook": 145, "qvaluehook": 146, "ensure_tensordict_compat": 147, "is_tensordict_compat": 148, "biased_softplu": 149, "inv_softplu": 150, "map": 151, "a2closs": 152, "clipppoloss": 153, "ddpgloss": 154, "dqnloss": 155, "distributionaldqnloss": 156, "dreameractorloss": 157, "dreamermodelloss": 158, "dreamervalueloss": 159, "hardupd": 160, "klpenppoloss": 161, "ppoloss": 162, "redqloss": 163, "reinforceloss": 164, "sacloss": 165, "softupd": 166, "distance_loss": 167, "hold_out_net": 168, "hold_out_param": 169, "next_state_valu": 170, "gae": 171, "tdestim": 172, "tdlambdaestim": 173, "generalized_advantage_estim": 174, "td_advantage_estim": 175, "td_lambda_advantage_estim": 176, "td_lambda_return_estim": 177, "vec_generalized_advantage_estim": 178, "vec_td_lambda_advantage_estim": 179, "vec_td_lambda_return_estim": 180, "tensordictrecord": 181, "videorecord": 182, "csvlogger": 183, "logger": [184, 230], "mlflowlogg": 185, "tensorboardlogg": 186, "wandblogg": 187, "generate_exp_nam": 188, "get_logg": 189, "batchsubsampl": 190, "clearcudacach": 191, "countframeslog": 192, "logreward": 193, "optimizerhook": 194, "replaybuffertrain": 196, "rewardnorm": 197, "selectkei": 198, "trainer": [199, 230], "trainerhookbas": 200, "updateweight": 201, "correct_for_frame_skip": 202, "get_stats_random_rollout": 203, "make_a2c_loss": 204, "make_a2c_model": 205, "make_collector_offpolici": 206, "make_collector_onpolici": 207, "make_ddpg_actor": 208, "make_ddpg_loss": 209, "make_dqn_actor": 210, "make_dqn_loss": 211, "make_ppo_loss": 212, "make_ppo_model": 213, "make_redq_loss": 214, "make_redq_model": 215, "make_replay_buff": 216, "make_sac_loss": 217, "make_sac_model": 218, "make_target_updat": 219, "make_train": 220, "parallel_env_constructor": 221, "sync_async_collector": 222, "sync_sync_collector": 223, "transformed_env_constructor": 224, "readm": [225, 235], "tuto": [225, 235], "api": 226, "contribut": [227, 240], "content": 227, "modul": [228, 233, 240], "tensordict": [228, 240], "hook": [228, 230], "planner": 228, "distribut": 228, "object": [229, 232, 240], "dqn": [229, 233], "ddpg": [229, 232], "sac": 229, "redq": 229, "ppo": [229, 234], "a2c": 229, "reinforc": [229, 234], "dreamer": 229, "checkpoint": 230, "builder": 230, "_util": 231, "code": [232, 233, 237], "import": 232, "parallel": [232, 236, 241], "execut": [232, 236, 237], "build": [232, 233], "evalu": 232, "hyperparamet": [232, 233, 234], "collect": [232, 233, 234], "initi": 232, "stat": 232, "q": [232, 233], "network": [232, 233, 234], "creation": 232, "time": [232, 239], "experi": [232, 237], "result": [232, 234], "sampl": 232, "td": [232, 233], "lambda": [232, 233], "pixel": 233, "paramet": [233, 234], "comput": [233, 237, 239], "deep": 233, "target": 233, "store": 233, "loop": [233, 234, 237], "regular": 233, "conclus": [233, 234, 237], "possibl": 233, "improv": 233, "defin": 234, "next": 234, "step": [234, 241], "multi": 236, "divers": 236, "rollout": [236, 237, 241], "pendulum": 237, "write": 237, "_step": 237, "reset": [237, 241], "simul": 237, "_reset": 237, "metadata": 237, "_spec": 237, "spec": [237, 241], "shape": 237, "seed": [237, 241], "wrap": 237, "togeth": 237, "class": [237, 240], "test": 237, "our": 237, "custom": 237, "batch": 237, "simpl": 237, "pretrain": 238, "introduct": 240, "config": 240, "tensordictmodul": 240, "sequenc": 240, "program": 240, "ensembl": 240, "meta": 240, "special": 240, "state": 240, "frame_skip": 241, "deepmind": 241, "control": 241, "devic": 241, "run": 241, "close": 241, "access": 241, "attribut": 241, "kwarg": 241}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials": [[0, "tutorials"]], "Basics": [[0, "basics"]], "Intermediate": [[0, "intermediate"]], "Advanced": [[0, "advanced"]], "References": [[0, "references"]], "Knowledge Base": [[0, "knowledge-base"], [227, "knowledge-base"]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers": [[2, "composable-replay-buffers"]], "Sotring trajectories": [[2, "sotring-trajectories"]], "TensorSpec": [[2, "tensorspec"], [30, "tensorspec"]], "Utils": [[2, "utils"], [228, "utils"], [229, "utils"], [230, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [232, "transforms"], [234, "transforms"], [240, "transforms"]], "Cloning transforms": [[3, "cloning-transforms"]], "Recorders": [[3, "recorders"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Things to consider when debugging RL": [[4, "things-to-consider-when-debugging-rl"]], "General": [[4, "general"]], "Have you validated your algorithm implementation on a few small, toy problems with known optimal returns e.g. gridworlds, mountaincar?": [[4, "have-you-validated-your-algorithm-implementation-on-a-few-small-toy-problems-with-known-optimal-returns-e-g-gridworlds-mountaincar"]], "Have you visualized your agents?": [[4, "have-you-visualized-your-agents"]], "Be very careful with any data augmentation.": [[4, "be-very-careful-with-any-data-augmentation"]], "Policy": [[4, "policy"], [234, "policy"], [236, "policy"]], "Does the entropy of your policy converge too quickly, too slowly or change drastically?": [[4, "does-the-entropy-of-your-policy-converge-too-quickly-too-slowly-or-change-drastically"]], "Rewards (beyond \u201cgoing up\u201d)": [[4, "rewards-beyond-going-up"]], "Is the agent favoring a single component of the reward function (i.e. velocity vs L2 action magnitude)?": [[4, "is-the-agent-favoring-a-single-component-of-the-reward-function-i-e-velocity-vs-l2-action-magnitude"]], "Is the task horizon extremely long?": [[4, "is-the-task-horizon-extremely-long"]], "Are your rewards normalized/standardized?": [[4, "are-your-rewards-normalized-standardized"]], "Exploration": [[4, "exploration"], [228, "exploration"]], "Is value loss going up early in training?": [[4, "is-value-loss-going-up-early-in-training"]], "Are actions (roughly) uniformly/normally random early in training?": [[4, "are-actions-roughly-uniformly-normally-random-early-in-training"]], "Are intrinsic rewards decaying as learning progresses in a singleton task?": [[4, "are-intrinsic-rewards-decaying-as-learning-progresses-in-a-singleton-task"]], "Are episodic intrinsic rewards remaining constant or increasing as learning progresses in an episodic task?": [[4, "are-episodic-intrinsic-rewards-remaining-constant-or-increasing-as-learning-progresses-in-an-episodic-task"]], "Environment Dynamics": [[4, "environment-dynamics"]], "Can you train a low entropy forward dynamics and/or reward model (also useful for offline RL)?": [[4, "can-you-train-a-low-entropy-forward-dynamics-and-or-reward-model-also-useful-for-offline-rl"]], "Observation Space": [[4, "observation-space"]], "Are your observations normalized/standardized?": [[4, "are-your-observations-normalized-standardized"]], "Action Space": [[4, "action-space"]], "Is the effect of an action changing dramatically during an episode?": [[4, "is-the-effect-of-an-action-changing-dramatically-during-an-episode"]], "Is the action space too high dimensional?": [[4, "is-the-action-space-too-high-dimensional"]], "Are your actions normalized/standardized?": [[4, "are-your-actions-normalized-standardized"]], "Working with gym": [[5, "working-with-gym"]], "What is OpenAI Gym?": [[5, "what-is-openai-gym"]], "Versioning": [[5, "versioning"]], "Working with habitat-lab": [[6, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[6, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[6, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[6, "installing-torchrl"]], "Using Habitat": [[6, "using-habitat"]], "Common issues": [[6, "common-issues"]], "Working with MuJoCo-based environments": [[7, "working-with-mujoco-based-environments"]], "Installing MuJoCo": [[7, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[7, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[7, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[7, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[7, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[7, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[7, "common-issues-when-rendering-mujoco-environments"]], "Common PyTorch errors and solutions": [[8, "common-pytorch-errors-and-solutions"]], "Gradient-related errors [Newcomers]": [[8, "gradient-related-errors-newcomers"]], "My Training is too slow [Newcomers / intermediate]": [[8, "my-training-is-too-slow-newcomers-intermediate"]], "Common bugs": [[8, "common-bugs"]], "Useful resources": [[9, "useful-resources"]], "Pytorch documentation": [[9, "pytorch-documentation"]], "functorch documentation": [[9, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[9, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[9, "educational-resource"]], "Forums": [[9, "forums"]], "Repos": [[9, "repos"]], "Versioning Issues": [[10, "versioning-issues"]], "Pytorch version": [[10, "pytorch-version"]], "How to reproduce": [[10, "how-to-reproduce"]], "Workarounds": [[10, "workarounds"]], "implement_for": [[11, "implement-for"]], "MultiSyncDataCollector": [[12, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[13, "multiasyncdatacollector"]], "RandomPolicy": [[14, "randompolicy"]], "SyncDataCollector": [[15, "syncdatacollector"]], "aSyncDataCollector": [[16, "asyncdatacollector"]], "split_trajectories": [[17, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[18, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[19, "boundedtensorspec"]], "CompositeSpec": [[20, "compositespec"]], "DiscreteTensorSpec": [[21, "discretetensorspec"]], "MultiDiscreteTensorSpec": [[22, "multidiscretetensorspec"]], "MultiOneHotDiscreteTensorSpec": [[23, "multionehotdiscretetensorspec"]], "MultiStep": [[24, "multistep"]], "OneHotDiscreteTensorSpec": [[25, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[26, "prioritizedreplaybuffer"]], "ReplayBuffer": [[27, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[28, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[29, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[31, "unboundedcontinuoustensorspec"]], "UnboundedDiscreteTensorSpec": [[32, "unboundeddiscretetensorspec"]], "PrioritizedSampler": [[33, "prioritizedsampler"]], "RandomSampler": [[34, "randomsampler"]], "Sampler": [[35, "sampler"]], "LazyMemmapStorage": [[36, "lazymemmapstorage"]], "LazyTensorStorage": [[37, "lazytensorstorage"]], "ListStorage": [[38, "liststorage"]], "Storage": [[39, "storage"]], "RoundRobinWriter": [[40, "roundrobinwriter"]], "Writer": [[41, "writer"]], "EnvBase": [[42, "envbase"]], "EnvCreator": [[43, "envcreator"]], "EnvMetaData": [[44, "envmetadata"]], "GymLikeEnv": [[45, "gymlikeenv"]], "ModelBasedEnvBase": [[46, "modelbasedenvbase"]], "MultiThreadedEnv": [[47, "multithreadedenv"]], "ParallelEnv": [[48, "parallelenv"]], "SerialEnv": [[49, "serialenv"]], "BraxEnv": [[50, "braxenv"]], "BraxWrapper": [[51, "braxwrapper"]], "DMControlEnv": [[52, "dmcontrolenv"]], "DMControlWrapper": [[53, "dmcontrolwrapper"]], "GymEnv": [[54, "gymenv"]], "GymWrapper": [[55, "gymwrapper"]], "HabitatEnv": [[56, "habitatenv"]], "JumanjiEnv": [[57, "jumanjienv"]], "JumanjiWrapper": [[58, "jumanjiwrapper"]], "VmasEnv": [[59, "vmasenv"]], "VmasWrapper": [[60, "vmaswrapper"]], "DreamerEnv": [[61, "dreamerenv"]], "BinarizeReward": [[62, "binarizereward"]], "CatFrames": [[63, "catframes"]], "CatTensors": [[64, "cattensors"]], "CenterCrop": [[65, "centercrop"]], "Compose": [[66, "compose"]], "DiscreteActionProjection": [[67, "discreteactionprojection"]], "DoubleToFloat": [[68, "doubletofloat"]], "ExcludeTransform": [[69, "excludetransform"]], "FiniteTensorDictCheck": [[70, "finitetensordictcheck"]], "FlattenObservation": [[71, "flattenobservation"]], "FrameSkipTransform": [[72, "frameskiptransform"]], "GrayScale": [[73, "grayscale"]], "NoopResetEnv": [[74, "noopresetenv"]], "ObservationNorm": [[75, "observationnorm"]], "ObservationTransform": [[76, "observationtransform"]], "PinMemoryTransform": [[77, "pinmemorytransform"]], "R3MTransform": [[78, "r3mtransform"]], "RandomCropTensorDict": [[79, "randomcroptensordict"]], "Resize": [[80, "resize"]], "RewardClipping": [[81, "rewardclipping"]], "RewardScaling": [[82, "rewardscaling"]], "RewardSum": [[83, "rewardsum"]], "SelectTransform": [[84, "selecttransform"]], "SqueezeTransform": [[85, "squeezetransform"]], "StepCounter": [[86, "stepcounter"]], "TensorDictPrimer": [[87, "tensordictprimer"]], "TimeMaxPool": [[88, "timemaxpool"]], "ToTensorImage": [[89, "totensorimage"]], "Transform": [[90, "transform"]], "TransformedEnv": [[91, "transformedenv"]], "UnsqueezeTransform": [[92, "unsqueezetransform"]], "VIPRewardTransform": [[93, "viprewardtransform"]], "VIPTransform": [[94, "viptransform"]], "VecNorm": [[95, "vecnorm"], [241, "vecnorm"]], "gSDENoise": [[96, "gsdenoise"]], "check_env_specs": [[97, "check-env-specs"]], "exploration_mode": [[98, "exploration-mode"]], "get_available_libraries": [[99, "get-available-libraries"]], "set_exploration_mode": [[100, "set-exploration-mode"]], "step_mdp": [[101, "step-mdp"]], "CEMPlanner": [[102, "cemplanner"]], "ConvNet": [[103, "convnet"]], "DdpgCnnActor": [[104, "ddpgcnnactor"]], "DdpgCnnQNet": [[105, "ddpgcnnqnet"]], "DdpgMlpActor": [[106, "ddpgmlpactor"]], "DdpgMlpQNet": [[107, "ddpgmlpqnet"]], "Delta": [[108, "delta"]], "DistributionalDQNnet": [[109, "distributionaldqnnet"]], "DreamerActor": [[110, "dreameractor"]], "DuelingCnnDQNet": [[111, "duelingcnndqnet"]], "IndependentNormal": [[112, "independentnormal"]], "LSTMNet": [[113, "lstmnet"]], "MLP": [[114, "mlp"]], "MPCPlannerBase": [[115, "mpcplannerbase"]], "MPPIPlanner": [[116, "mppiplanner"]], "NoisyLazyLinear": [[117, "noisylazylinear"]], "NoisyLinear": [[118, "noisylinear"]], "NormalParamWrapper": [[119, "normalparamwrapper"]], "ObsDecoder": [[120, "obsdecoder"]], "ObsEncoder": [[121, "obsencoder"]], "OneHotCategorical": [[122, "onehotcategorical"]], "RSSMPosterior": [[123, "rssmposterior"]], "RSSMPrior": [[124, "rssmprior"]], "TanhDelta": [[125, "tanhdelta"]], "TanhNormal": [[126, "tanhnormal"]], "TruncatedNormal": [[127, "truncatednormal"]], "reset_noise": [[128, "reset-noise"]], "Actor": [[129, "actor"]], "ActorCriticOperator": [[130, "actorcriticoperator"]], "ActorCriticWrapper": [[131, "actorcriticwrapper"]], "ActorValueOperator": [[132, "actorvalueoperator"]], "AdditiveGaussianWrapper": [[133, "additivegaussianwrapper"]], "DistributionalQValueActor": [[134, "distributionalqvalueactor"]], "EGreedyWrapper": [[135, "egreedywrapper"]], "OrnsteinUhlenbeckProcessWrapper": [[136, "ornsteinuhlenbeckprocesswrapper"]], "ProbabilisticActor": [[137, "probabilisticactor"]], "QValueActor": [[138, "qvalueactor"]], "SafeModule": [[139, "safemodule"]], "SafeProbabilisticModule": [[140, "safeprobabilisticmodule"]], "SafeProbabilisticSequential": [[141, "safeprobabilisticsequential"]], "SafeSequential": [[142, "safesequential"]], "ValueOperator": [[143, "valueoperator"]], "WorldModelWrapper": [[144, "worldmodelwrapper"]], "DistributionalQValueHook": [[145, "distributionalqvaluehook"]], "QValueHook": [[146, "qvaluehook"]], "ensure_tensordict_compatible": [[147, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[148, "is-tensordict-compatible"]], "biased_softplus": [[149, "biased-softplus"]], "inv_softplus": [[150, "inv-softplus"]], "mappings": [[151, "mappings"]], "A2CLoss": [[152, "a2closs"]], "ClipPPOLoss": [[153, "clipppoloss"]], "DDPGLoss": [[154, "ddpgloss"]], "DQNLoss": [[155, "dqnloss"]], "DistributionalDQNLoss": [[156, "distributionaldqnloss"]], "DreamerActorLoss": [[157, "dreameractorloss"]], "DreamerModelLoss": [[158, "dreamermodelloss"]], "DreamerValueLoss": [[159, "dreamervalueloss"]], "HardUpdate": [[160, "hardupdate"]], "KLPENPPOLoss": [[161, "klpenppoloss"]], "PPOLoss": [[162, "ppoloss"]], "REDQLoss": [[163, "redqloss"]], "ReinforceLoss": [[164, "reinforceloss"]], "SACLoss": [[165, "sacloss"]], "SoftUpdate": [[166, "softupdate"]], "distance_loss": [[167, "distance-loss"]], "hold_out_net": [[168, "hold-out-net"]], "hold_out_params": [[169, "hold-out-params"]], "next_state_value": [[170, "next-state-value"]], "GAE": [[171, "gae"]], "TDEstimate": [[172, "tdestimate"]], "TDLambdaEstimate": [[173, "tdlambdaestimate"]], "generalized_advantage_estimate": [[174, "generalized-advantage-estimate"]], "td_advantage_estimate": [[175, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[176, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[177, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[178, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[179, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[180, "vec-td-lambda-return-estimate"]], "TensorDictRecorder": [[181, "tensordictrecorder"]], "VideoRecorder": [[182, "videorecorder"]], "CSVLogger": [[183, "csvlogger"]], "Logger": [[184, "logger"]], "MLFlowLogger": [[185, "mlflowlogger"]], "TensorboardLogger": [[186, "tensorboardlogger"]], "WandbLogger": [[187, "wandblogger"]], "generate_exp_name": [[188, "generate-exp-name"]], "get_logger": [[189, "get-logger"]], "BatchSubSampler": [[190, "batchsubsampler"]], "ClearCudaCache": [[191, "clearcudacache"]], "CountFramesLog": [[192, "countframeslog"]], "LogReward": [[193, "logreward"]], "OptimizerHook": [[194, "optimizerhook"]], "Recorder": [[195, "recorder"], [232, "recorder"]], "ReplayBufferTrainer": [[196, "replaybuffertrainer"]], "RewardNormalizer": [[197, "rewardnormalizer"]], "SelectKeys": [[198, "selectkeys"]], "Trainer": [[199, "trainer"]], "TrainerHookBase": [[200, "trainerhookbase"]], "UpdateWeights": [[201, "updateweights"]], "correct_for_frame_skip": [[202, "correct-for-frame-skip"]], "get_stats_random_rollout": [[203, "get-stats-random-rollout"]], "make_a2c_loss": [[204, "make-a2c-loss"]], "make_a2c_model": [[205, "make-a2c-model"]], "make_collector_offpolicy": [[206, "make-collector-offpolicy"]], "make_collector_onpolicy": [[207, "make-collector-onpolicy"]], "make_ddpg_actor": [[208, "make-ddpg-actor"]], "make_ddpg_loss": [[209, "make-ddpg-loss"]], "make_dqn_actor": [[210, "make-dqn-actor"]], "make_dqn_loss": [[211, "make-dqn-loss"]], "make_ppo_loss": [[212, "make-ppo-loss"]], "make_ppo_model": [[213, "make-ppo-model"]], "make_redq_loss": [[214, "make-redq-loss"]], "make_redq_model": [[215, "make-redq-model"]], "make_replay_buffer": [[216, "make-replay-buffer"]], "make_sac_loss": [[217, "make-sac-loss"]], "make_sac_model": [[218, "make-sac-model"]], "make_target_updater": [[219, "make-target-updater"]], "make_trainer": [[220, "make-trainer"]], "parallel_env_constructor": [[221, "parallel-env-constructor"]], "sync_async_collector": [[222, "sync-async-collector"]], "sync_sync_collector": [[223, "sync-sync-collector"]], "transformed_env_constructor": [[224, "transformed-env-constructor"]], "README Tutos": [[225, "readme-tutos"], [235, "readme-tutos"]], "API Reference": [[226, "api-reference"]], "Contributing": [[227, "contributing"], [240, "contributing"]], "Contents:": [[227, null]], "torchrl.modules package": [[228, "torchrl-modules-package"]], "TensorDict modules": [[228, "tensordict-modules"]], "Hooks": [[228, "hooks"]], "Models": [[228, "models"], [240, "models"]], "Planners": [[228, "planners"]], "Distributions": [[228, "distributions"]], "torchrl.objectives package": [[229, "torchrl-objectives-package"]], "DQN": [[229, "dqn"]], "DDPG": [[229, "ddpg"]], "SAC": [[229, "sac"]], "REDQ": [[229, "redq"]], "PPO": [[229, "ppo"]], "A2C": [[229, "a2c"]], "Reinforce": [[229, "reinforce"]], "Dreamer": [[229, "dreamer"]], "Returns": [[229, "returns"]], "torchrl.trainers package": [[230, "torchrl-trainers-package"]], "Checkpointing": [[230, "checkpointing"]], "Trainer and hooks": [[230, "trainer-and-hooks"]], "Builders": [[230, "builders"]], "Loggers": [[230, "loggers"]], "Recording utils": [[230, "recording-utils"]], "torchrl._utils package": [[231, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[232, "coding-ddpg-using-torchrl"]], "Imports": [[232, "imports"]], "Environment": [[232, "environment"], [232, "id1"]], "Normalization of the observations": [[232, "normalization-of-the-observations"]], "Parallel execution": [[232, "parallel-execution"]], "Building the model": [[232, "building-the-model"]], "Evaluator: building your recorder object": [[232, "evaluator-building-your-recorder-object"]], "Replay buffer": [[232, "replay-buffer"], [232, "id2"], [232, "id3"], [234, "replay-buffer"]], "Hyperparameters": [[232, "hyperparameters"], [233, "hyperparameters"]], "Collection": [[232, "collection"]], "Optimizer and optimization": [[232, "optimizer-and-optimization"]], "Model": [[232, "model"]], "Initialization": [[232, "initialization"]], "Normalization stats": [[232, "normalization-stats"]], "Models: policy and q-value network": [[232, "models-policy-and-q-value-network"]], "Parallel environment creation": [[232, "parallel-environment-creation"]], "Data collector": [[232, "data-collector"], [233, "data-collector"], [234, "data-collector"]], "Optimizer": [[232, "optimizer"], [233, "optimizer"]], "Time to train the policy": [[232, "time-to-train-the-policy"]], "Experiment results": [[232, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[232, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[233, "coding-a-pixel-based-dqn-using-torchrl"]], "DQN parameters": [[233, "dqn-parameters"]], "Data collection and replay buffer": [[233, "data-collection-and-replay-buffer"]], "Environment and exploration": [[233, "environment-and-exploration"]], "Building the environment": [[233, "building-the-environment"]], "Compute normalizing constants": [[233, "compute-normalizing-constants"]], "Building the model (Deep Q-network)": [[233, "building-the-model-deep-q-network"]], "Target parameters": [[233, "target-parameters"]], "Functionalizing modules": [[233, "functionalizing-modules"]], "Collecting and storing data": [[233, "collecting-and-storing-data"]], "Replay buffers": [[233, "replay-buffers"], [240, "replay-buffers"]], "Training loop of a regular DQN": [[233, "training-loop-of-a-regular-dqn"]], "DQN with TD(\\lambda)": [[233, "dqn-with-td-lambda"]], "Data: Replay buffer and collector": [[233, "data-replay-buffer-and-collector"]], "Training loop": [[233, "training-loop"], [234, "training-loop"], [237, "training-loop"]], "Conclusion and possible improvements": [[233, "conclusion-and-possible-improvements"]], "Reinforcement Learning (PPO) with TorchRL Tutorial": [[234, "reinforcement-learning-ppo-with-torchrl-tutorial"]], "Define Hyperparameters": [[234, "define-hyperparameters"]], "Data collection parameters": [[234, "data-collection-parameters"]], "PPO parameters": [[234, "ppo-parameters"]], "Define an environment": [[234, "define-an-environment"]], "Normalization": [[234, "normalization"]], "Value network": [[234, "value-network"]], "Loss function": [[234, "loss-function"]], "Results": [[234, "results"]], "Conclusion and next steps": [[234, "conclusion-and-next-steps"]], "Task-specific policy in multi-task environments": [[236, "task-specific-policy-in-multi-task-environments"]], "Executing diverse tasks in parallel": [[236, "executing-diverse-tasks-in-parallel"]], "Rollout": [[236, "rollout"]], "Pendulum: Writing your environment and transforms with TorchRL": [[237, "pendulum-writing-your-environment-and-transforms-with-torchrl"]], "Coding the effect of an action: torchrl.envs.EnvBase._step()": [[237, "coding-the-effect-of-an-action-torchrl-envs-envbase-step"]], "Resetting the simulator: torchrl.envs.EnvBase._reset()": [[237, "resetting-the-simulator-torchrl-envs-envbase-reset"]], "Environment metadata: env.*_spec": [[237, "environment-metadata-env-spec"]], "Specs shape": [[237, "specs-shape"]], "Reproducible experiments: seeding": [[237, "reproducible-experiments-seeding"]], "Wrapping things together: the torchrl.envs.EnvBase class": [[237, "wrapping-things-together-the-torchrl-envs-envbase-class"]], "Testing our environment": [[237, "testing-our-environment"]], "Transforming an environment": [[237, "transforming-an-environment"]], "Writing custom transforms": [[237, "writing-custom-transforms"]], "Executing a rollout": [[237, "executing-a-rollout"]], "Batching computations": [[237, "batching-computations"]], "Training a simple policy": [[237, "training-a-simple-policy"]], "Conclusion": [[237, "conclusion"]], "Using pretrained models": [[238, "using-pretrained-models"]], "Computation times": [[239, "computation-times"]], "Introduction to TorchRL": [[240, "introduction-to-torchrl"]], "Data": [[240, "data"]], "TensorDict": [[240, "tensordict"]], "Envs": [[240, "envs"]], "Changing environments config": [[240, "changing-environments-config"]], "Vectorized Environments": [[240, "vectorized-environments"]], "Modules": [[240, "modules"]], "TensorDictModules": [[240, "tensordictmodules"]], "Sequences of Modules": [[240, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[240, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[240, "specialized-classes"]], "Using Environments and Modules": [[240, "using-environments-and-modules"]], "Collectors": [[240, "collectors"]], "Objectives": [[240, "objectives"]], "State of the Library": [[240, "state-of-the-library"]], "Installing the Library": [[240, "installing-the-library"]], "TorchRL envs": [[241, "torchrl-envs"]], "Gym environments": [[241, "gym-environments"]], "Env Specs": [[241, "env-specs"]], "Seeding, resetting and steps": [[241, "seeding-resetting-and-steps"]], "Rollouts": [[241, "rollouts"]], "frame_skip": [[241, "frame-skip"]], "Rendering": [[241, "rendering"]], "DeepMind Control environments": [[241, "deepmind-control-environments"]], "Transforming envs": [[241, "transforming-envs"]], "Environment device": [[241, "environment-device"]], "Running environments in parallel": [[241, "running-environments-in-parallel"]], "Closing parallel environments": [[241, "closing-parallel-environments"]], "Seeding": [[241, "seeding"]], "Accessing environment attributes": [[241, "accessing-environment-attributes"]], "kwargs for parallel environments": [[241, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[241, "transforming-parallel-environments"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[11, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors.collectors)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors.collectors)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "randompolicy (class in torchrl.collectors.collectors)": [[14, "torchrl.collectors.collectors.RandomPolicy"]], "syncdatacollector (class in torchrl.collectors.collectors)": [[15, "torchrl.collectors.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors.collectors)": [[16, "torchrl.collectors.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[17, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[18, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "expand() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.expand"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[19, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.encode"]], "expand() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.expand"]], "index() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[20, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.encode"]], "expand() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.expand"]], "index() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[21, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.encode"]], "expand() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.expand"]], "index() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "to_one_hot() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.to_one_hot"]], "to_one_hot_spec() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.to_one_hot_spec"]], "type_check() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.zero"]], "multidiscretetensorspec (class in torchrl.data)": [[22, "torchrl.data.MultiDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.expand"]], "index() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.project"]], "rand() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.to_numpy"]], "to_one_hot() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.to_one_hot"]], "to_one_hot_spec() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.to_one_hot_spec"]], "type_check() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.zero"]], "multionehotdiscretetensorspec (class in torchrl.data)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.expand"]], "index() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.rand"]], "to_categorical() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_categorical"]], "to_categorical_spec() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_categorical_spec"]], "to_numpy() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[24, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_parameter"]], "register_state_dict_pre_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.zero_grad"]], "onehotdiscretetensorspec (class in torchrl.data)": [[25, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.expand"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_categorical() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.to_categorical"]], "to_categorical_spec() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.to_categorical_spec"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[26, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.sample"]], "replaybuffer (class in torchrl.data)": [[27, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.add"]], "append_transform() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data)": [[29, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[30, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.encode"]], "expand() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.expand"]], "index() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[31, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "expand() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.expand"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "unboundeddiscretetensorspec (class in torchrl.data)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.encode"]], "expand() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.expand"]], "index() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.index"]], "is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.is_in"]], "project() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.project"]], "rand() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.zero"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[33, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[33, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[35, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[36, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[36, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[37, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[38, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[39, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[39, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[41, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[41, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[41, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[42, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[42, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.parameters"]], "rand_action() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.rand_action"]], "rand_step() (torchrl.envs.envbase method)": [[42, "id0"], [42, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[42, "id1"], [42, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[42, "id2"], [42, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[42, "id3"], [42, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[42, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[42, "id4"], [42, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.zero_grad"]], "envcreator (class in torchrl.envs)": [[43, "torchrl.envs.EnvCreator"]], "envmetadata (class in torchrl.envs)": [[44, "torchrl.envs.EnvMetaData"]], "gymlikeenv (class in torchrl.envs)": [[45, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[45, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.parameters"]], "rand_action() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.rand_action"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[45, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[46, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[46, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[46, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[46, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[46, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[46, "torchrl.envs.step"]], "multithreadedenv (class in torchrl.envs)": [[47, "torchrl.envs.MultiThreadedEnv"]], "add_module() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.add_module"]], "apply() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.apply"]], "batch_locked (torchrl.envs.multithreadedenv property)": [[47, "torchrl.envs.MultiThreadedEnv.batch_locked"]], "bfloat16() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.bfloat16"]], "buffers() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.buffers"]], "children() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.children"]], "close() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.close"]], "cpu() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.cpu"]], "cuda() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.cuda"]], "double() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.double"]], "eval() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.eval"]], "extra_repr() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.fake_tensordict"]], "float() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.float"]], "forward() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.forward"]], "get_buffer() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.get_buffer"]], "get_extra_state() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.get_extra_state"]], "get_parameter() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.get_parameter"]], "get_submodule() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.get_submodule"]], "half() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.half"]], "ipu() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.ipu"]], "load_state_dict() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.load_state_dict"]], "modules() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.modules"]], "named_buffers() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.named_buffers"]], "named_children() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.named_children"]], "named_modules() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.named_modules"]], "named_parameters() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.named_parameters"]], "parameters() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.parameters"]], "rand_action() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.rand_action"]], "rand_step() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.rand_step"]], "register_backward_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_module"]], "register_parameter() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.requires_grad_"]], "reset() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.reset"]], "rollout() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.rollout"]], "set_extra_state() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.set_extra_state"]], "set_seed() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.set_seed"]], "share_memory() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.share_memory"]], "specs (torchrl.envs.multithreadedenv property)": [[47, "torchrl.envs.MultiThreadedEnv.specs"]], "state_dict() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.state_dict"]], "step() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.step"]], "to() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.to"]], "to_empty() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.to_empty"]], "train() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.train"]], "type() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.type"]], "xpu() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.xpu"]], "zero_grad() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.zero_grad"]], "parallelenv (class in torchrl.envs)": [[48, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[48, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.parameters"]], "rand_action() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.rand_action"]], "rand_step() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[48, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[49, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[49, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.parameters"]], "rand_action() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.rand_action"]], "rand_step() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[49, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.zero_grad"]], "braxenv() (in module torchrl.envs.libs.brax)": [[50, "torchrl.envs.libs.brax.BraxEnv"]], "braxwrapper() (in module torchrl.envs.libs.brax)": [[51, "torchrl.envs.libs.brax.BraxWrapper"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[52, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[53, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[54, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[55, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[56, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[57, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[58, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "vmasenv() (in module torchrl.envs.libs.vmas)": [[59, "torchrl.envs.libs.vmas.VmasEnv"]], "vmaswrapper() (in module torchrl.envs.libs.vmas)": [[60, "torchrl.envs.libs.vmas.VmasWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[61, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[62, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.CatFrames"]], "forward() (torchrl.envs.transforms.catframes method)": [[63, "torchrl.envs.transforms.CatFrames.forward"]], "reset() (torchrl.envs.transforms.catframes method)": [[63, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[63, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.CatTensors"]], "forward() (torchrl.envs.transforms.cattensors method)": [[64, "torchrl.envs.transforms.CatTensors.forward"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[64, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[65, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "discreteactionprojection (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.DiscreteActionProjection"]], "transform_input_spec() (torchrl.envs.transforms.discreteactionprojection method)": [[67, "torchrl.envs.transforms.DiscreteActionProjection.transform_input_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[68, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[68, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[68, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "excludetransform (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.ExcludeTransform"]], "forward() (torchrl.envs.transforms.excludetransform method)": [[69, "torchrl.envs.transforms.ExcludeTransform.forward"]], "reset() (torchrl.envs.transforms.excludetransform method)": [[69, "torchrl.envs.transforms.ExcludeTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.excludetransform method)": [[69, "torchrl.envs.transforms.ExcludeTransform.transform_observation_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "forward() (torchrl.envs.transforms.finitetensordictcheck method)": [[70, "torchrl.envs.transforms.FiniteTensorDictCheck.forward"]], "flattenobservation (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.FlattenObservation"]], "forward() (torchrl.envs.transforms.flattenobservation method)": [[71, "torchrl.envs.transforms.FlattenObservation.forward"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[71, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "frameskiptransform (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.FrameSkipTransform"]], "forward() (torchrl.envs.transforms.frameskiptransform method)": [[72, "torchrl.envs.transforms.FrameSkipTransform.forward"]], "grayscale (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[73, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[74, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[75, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_input_spec() (torchrl.envs.transforms.observationnorm method)": [[75, "torchrl.envs.transforms.ObservationNorm.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[75, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.PinMemoryTransform"]], "forward() (torchrl.envs.transforms.pinmemorytransform method)": [[77, "torchrl.envs.transforms.PinMemoryTransform.forward"]], "r3mtransform (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.R3MTransform"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[78, "torchrl.envs.transforms.R3MTransform.to"]], "randomcroptensordict (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.RandomCropTensorDict"]], "forward() (torchrl.envs.transforms.randomcroptensordict method)": [[79, "torchrl.envs.transforms.RandomCropTensorDict.forward"]], "resize (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[80, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[81, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[82, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[82, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "rewardsum (class in torchrl.envs.transforms)": [[83, "torchrl.envs.transforms.RewardSum"]], "reset() (torchrl.envs.transforms.rewardsum method)": [[83, "torchrl.envs.transforms.RewardSum.reset"]], "transform_observation_spec() (torchrl.envs.transforms.rewardsum method)": [[83, "torchrl.envs.transforms.RewardSum.transform_observation_spec"]], "selecttransform (class in torchrl.envs.transforms)": [[84, "torchrl.envs.transforms.SelectTransform"]], "forward() (torchrl.envs.transforms.selecttransform method)": [[84, "torchrl.envs.transforms.SelectTransform.forward"]], "reset() (torchrl.envs.transforms.selecttransform method)": [[84, "torchrl.envs.transforms.SelectTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.selecttransform method)": [[84, "torchrl.envs.transforms.SelectTransform.transform_observation_spec"]], "squeezetransform (class in torchrl.envs.transforms)": [[85, "torchrl.envs.transforms.SqueezeTransform"]], "stepcounter (class in torchrl.envs.transforms)": [[86, "torchrl.envs.transforms.StepCounter"]], "forward() (torchrl.envs.transforms.stepcounter method)": [[86, "torchrl.envs.transforms.StepCounter.forward"]], "reset() (torchrl.envs.transforms.stepcounter method)": [[86, "torchrl.envs.transforms.StepCounter.reset"]], "transform_input_spec() (torchrl.envs.transforms.stepcounter method)": [[86, "torchrl.envs.transforms.StepCounter.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.stepcounter method)": [[86, "torchrl.envs.transforms.StepCounter.transform_observation_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[87, "torchrl.envs.transforms.TensorDictPrimer"]], "forward() (torchrl.envs.transforms.tensordictprimer method)": [[87, "torchrl.envs.transforms.TensorDictPrimer.forward"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[87, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[87, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[87, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "timemaxpool (class in torchrl.envs.transforms)": [[88, "torchrl.envs.transforms.TimeMaxPool"]], "forward() (torchrl.envs.transforms.timemaxpool method)": [[88, "torchrl.envs.transforms.TimeMaxPool.forward"]], "reset() (torchrl.envs.transforms.timemaxpool method)": [[88, "torchrl.envs.transforms.TimeMaxPool.reset"]], "transform_observation_spec() (torchrl.envs.transforms.timemaxpool method)": [[88, "torchrl.envs.transforms.TimeMaxPool.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[89, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[89, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[90, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[90, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[90, "torchrl.envs.transforms.Transform.reset"]], "transform_done_spec() (torchrl.envs.transforms.transform method)": [[90, "torchrl.envs.transforms.Transform.transform_done_spec"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[90, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[90, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_output_spec() (torchrl.envs.transforms.transform method)": [[90, "torchrl.envs.transforms.Transform.transform_output_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[90, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[91, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[91, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[91, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "done_spec (torchrl.envs.transforms.transformedenv property)": [[91, "torchrl.envs.transforms.TransformedEnv.done_spec"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[91, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[91, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[91, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[91, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "output_spec (torchrl.envs.transforms.transformedenv property)": [[91, "torchrl.envs.transforms.TransformedEnv.output_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[91, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[91, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[91, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[91, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[91, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[92, "torchrl.envs.transforms.UnsqueezeTransform"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[92, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[92, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[92, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[93, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[93, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[93, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[94, "torchrl.envs.transforms.VIPTransform"]], "to() (torchrl.envs.transforms.viptransform method)": [[94, "torchrl.envs.transforms.VIPTransform.to"]], "vecnorm (class in torchrl.envs.transforms)": [[95, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[95, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "forward() (torchrl.envs.transforms.vecnorm method)": [[95, "torchrl.envs.transforms.VecNorm.forward"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[95, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[95, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[95, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[96, "torchrl.envs.transforms.gSDENoise"]], "check_env_specs() (in module torchrl.envs.utils)": [[97, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[98, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[99, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[100, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[101, "torchrl.envs.utils.step_mdp"]], "cemplanner (class in torchrl.modules)": [[102, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[102, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[103, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[103, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[104, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[104, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[105, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[105, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[106, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[106, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[107, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[107, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[108, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[108, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[108, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[108, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[108, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[108, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[109, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[109, "torchrl.modules.DistributionalDQNnet.forward"]], "dreameractor (class in torchrl.modules)": [[110, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[110, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[111, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[111, "torchrl.modules.DuelingCnnDQNet.forward"]], "independentnormal (class in torchrl.modules)": [[112, "torchrl.modules.IndependentNormal"]], "mode (torchrl.modules.independentnormal property)": [[112, "torchrl.modules.IndependentNormal.mode"]], "lstmnet (class in torchrl.modules)": [[113, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[113, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[114, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[114, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[115, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[115, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[115, "torchrl.modules.MPCPlannerBase.planning"]], "mppiplanner (class in torchrl.modules)": [[116, "torchrl.modules.MPPIPlanner"]], "planning() (torchrl.modules.mppiplanner method)": [[116, "torchrl.modules.MPPIPlanner.planning"]], "noisylazylinear (class in torchrl.modules)": [[117, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[117, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[118, "torchrl.modules.NoisyLinear"]], "normalparamwrapper (class in torchrl.modules)": [[119, "torchrl.modules.NormalParamWrapper"]], "forward() (torchrl.modules.normalparamwrapper method)": [[119, "torchrl.modules.NormalParamWrapper.forward"]], "obsdecoder (class in torchrl.modules)": [[120, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[120, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[121, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[121, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[122, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[122, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[122, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[122, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[122, "torchrl.modules.OneHotCategorical.sample"]], "rssmposterior (class in torchrl.modules)": [[123, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[123, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[124, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[124, "torchrl.modules.RSSMPrior.forward"]], "tanhdelta (class in torchrl.modules)": [[125, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[125, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[125, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[126, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[126, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[127, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[127, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[127, "torchrl.modules.TruncatedNormal.mode"]], "reset_noise (class in torchrl.modules)": [[128, "torchrl.modules.reset_noise"]], "actor (class in torchrl.modules.tensordict_module)": [[129, "torchrl.modules.tensordict_module.Actor"]], "actorcriticoperator (class in torchrl.modules.tensordict_module)": [[130, "torchrl.modules.tensordict_module.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[130, "torchrl.modules.tensordict_module.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[130, "torchrl.modules.tensordict_module.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules.tensordict_module)": [[131, "torchrl.modules.tensordict_module.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[131, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[131, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules.tensordict_module)": [[132, "torchrl.modules.tensordict_module.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[132, "torchrl.modules.tensordict_module.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[132, "torchrl.modules.tensordict_module.ActorValueOperator.get_value_operator"]], "additivegaussianwrapper (class in torchrl.modules.tensordict_module)": [[133, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper"]], "forward() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[133, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.forward"]], "step() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[133, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.step"]], "distributionalqvalueactor (class in torchrl.modules.tensordict_module)": [[134, "torchrl.modules.tensordict_module.DistributionalQValueActor"]], "egreedywrapper (class in torchrl.modules.tensordict_module)": [[135, "torchrl.modules.tensordict_module.EGreedyWrapper"]], "forward() (torchrl.modules.tensordict_module.egreedywrapper method)": [[135, "torchrl.modules.tensordict_module.EGreedyWrapper.forward"]], "step() (torchrl.modules.tensordict_module.egreedywrapper method)": [[135, "torchrl.modules.tensordict_module.EGreedyWrapper.step"]], "ornsteinuhlenbeckprocesswrapper (class in torchrl.modules.tensordict_module)": [[136, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper"]], "forward() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[136, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.forward"]], "step() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[136, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.step"]], "probabilisticactor (class in torchrl.modules.tensordict_module)": [[137, "torchrl.modules.tensordict_module.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules.tensordict_module)": [[138, "torchrl.modules.tensordict_module.QValueActor"]], "safemodule (class in torchrl.modules.tensordict_module)": [[139, "torchrl.modules.tensordict_module.SafeModule"]], "random() (torchrl.modules.tensordict_module.safemodule method)": [[139, "torchrl.modules.tensordict_module.SafeModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safemodule method)": [[139, "torchrl.modules.tensordict_module.SafeModule.random_sample"]], "to() (torchrl.modules.tensordict_module.safemodule method)": [[139, "torchrl.modules.tensordict_module.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules.tensordict_module)": [[140, "torchrl.modules.tensordict_module.SafeProbabilisticModule"]], "random() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[140, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[140, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random_sample"]], "safeprobabilisticsequential (class in torchrl.modules.tensordict_module)": [[141, "torchrl.modules.tensordict_module.SafeProbabilisticSequential"]], "safesequential (class in torchrl.modules.tensordict_module)": [[142, "torchrl.modules.tensordict_module.SafeSequential"]], "valueoperator (class in torchrl.modules.tensordict_module)": [[143, "torchrl.modules.tensordict_module.ValueOperator"]], "worldmodelwrapper (class in torchrl.modules.tensordict_module)": [[144, "torchrl.modules.tensordict_module.WorldModelWrapper"]], "get_reward_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[144, "torchrl.modules.tensordict_module.WorldModelWrapper.get_reward_operator"]], "get_transition_model_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[144, "torchrl.modules.tensordict_module.WorldModelWrapper.get_transition_model_operator"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[145, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[146, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[147, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[148, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[149, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[149, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[150, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[151, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[152, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[152, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[153, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[153, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[154, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[154, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[155, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[155, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[156, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[156, "torchrl.objectives.DistributionalDQNLoss.forward"]], "dreameractorloss (class in torchrl.objectives)": [[157, "torchrl.objectives.DreamerActorLoss"]], "forward() (torchrl.objectives.dreameractorloss method)": [[157, "torchrl.objectives.DreamerActorLoss.forward"]], "dreamermodelloss (class in torchrl.objectives)": [[158, "torchrl.objectives.DreamerModelLoss"]], "forward() (torchrl.objectives.dreamermodelloss method)": [[158, "torchrl.objectives.DreamerModelLoss.forward"]], "dreamervalueloss (class in torchrl.objectives)": [[159, "torchrl.objectives.DreamerValueLoss"]], "forward() (torchrl.objectives.dreamervalueloss method)": [[159, "torchrl.objectives.DreamerValueLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[160, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[161, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[161, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[162, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[162, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[163, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[163, "torchrl.objectives.REDQLoss.forward"]], "reinforceloss (class in torchrl.objectives)": [[164, "torchrl.objectives.ReinforceLoss"]], "forward() (torchrl.objectives.reinforceloss method)": [[164, "torchrl.objectives.ReinforceLoss.forward"]], "sacloss (class in torchrl.objectives)": [[165, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[165, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[166, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[167, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[168, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[169, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[170, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[171, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[171, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[172, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[172, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[173, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[173, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[174, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[175, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[176, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[177, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[178, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[179, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[180, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "tensordictrecorder() (in module torchrl.record)": [[181, "torchrl.record.TensorDictRecorder"]], "videorecorder() (in module torchrl.record)": [[182, "torchrl.record.VideoRecorder"]], "csvlogger() (in module torchrl.record.loggers)": [[183, "torchrl.record.loggers.CSVLogger"]], "logger() (in module torchrl.record.loggers)": [[184, "torchrl.record.loggers.Logger"]], "mlflowlogger() (in module torchrl.record.loggers)": [[185, "torchrl.record.loggers.MLFlowLogger"]], "tensorboardlogger() (in module torchrl.record.loggers)": [[186, "torchrl.record.loggers.TensorboardLogger"]], "wandblogger() (in module torchrl.record.loggers)": [[187, "torchrl.record.loggers.WandbLogger"]], "generate_exp_name() (in module torchrl.record.loggers)": [[188, "torchrl.record.loggers.generate_exp_name"]], "get_logger() (in module torchrl.record.loggers)": [[189, "torchrl.record.loggers.get_logger"]], "batchsubsampler (class in torchrl.trainers)": [[190, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[191, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[192, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[193, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[194, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[195, "torchrl.trainers.Recorder"]], "replaybuffertrainer (class in torchrl.trainers)": [[196, "torchrl.trainers.ReplayBufferTrainer"]], "rewardnormalizer (class in torchrl.trainers)": [[197, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[198, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[199, "torchrl.trainers.Trainer"]], "trainerhookbase (class in torchrl.trainers)": [[200, "torchrl.trainers.TrainerHookBase"]], "updateweights (class in torchrl.trainers)": [[201, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[202, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[203, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[204, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[205, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[206, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[207, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[208, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[209, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[210, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[211, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[212, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[213, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[214, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[215, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[216, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[217, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[218, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[219, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[220, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[221, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[222, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[223, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[224, "torchrl.trainers.helpers.transformed_env_constructor"]]}})