Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.Specs", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBuffer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/torchrl.trainers.loggers.CSVLogger", "reference/generated/torchrl.trainers.loggers.Logger", "reference/generated/torchrl.trainers.loggers.MLFlowLogger", "reference/generated/torchrl.trainers.loggers.TensorboardLogger", "reference/generated/torchrl.trainers.loggers.WandbLogger", "reference/generated/torchrl.trainers.loggers.generate_exp_name", "reference/generated/torchrl.trainers.loggers.get_logger", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/index", "tutorials/multi_task", "tutorials/sg_execution_times", "tutorials/tensordict_module", "tutorials/tensordict_tutorial", "tutorials/torch_envs", "tutorials/torchrl_demo"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.Specs.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBuffer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/torchrl.trainers.loggers.CSVLogger.rst", "reference/generated/torchrl.trainers.loggers.Logger.rst", "reference/generated/torchrl.trainers.loggers.MLFlowLogger.rst", "reference/generated/torchrl.trainers.loggers.TensorboardLogger.rst", "reference/generated/torchrl.trainers.loggers.WandbLogger.rst", "reference/generated/torchrl.trainers.loggers.generate_exp_name.rst", "reference/generated/torchrl.trainers.loggers.get_logger.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/sg_execution_times.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_tutorial.rst", "tutorials/torch_envs.rst", "tutorials/torchrl_demo.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips and Debugging", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "TensorDictReplayBuffer", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "ParallelEnv", "SerialEnv", "Specs", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DoubleToFloat", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "RewardSum", "SqueezeTransform", "StepCounter", "TensorDictPrimer", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "RSSMPosterior", "RSSMPrior", "TanhDelta", "TanhNormal", "TruncatedNormal", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DistributionalQValueActor", "EGreedyWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticSequential", "SafeSequential", "ValueOperator", "WorldModelWrapper", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBuffer", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "CSVLogger", "Logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "generate_exp_name", "get_logger", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "README Tutos", "Task-specific policy in multi-task environments", "Computation times", "TensorDictModule", "TensorDict", "TorchRL envs", "Introduction to TorchRL"], "terms": {"The": [0, 1, 2, 3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31, 32, 39, 42, 45, 47, 48, 64, 71, 74, 77, 81, 84, 87, 95, 97, 98, 99, 100, 106, 108, 109, 111, 112, 116, 117, 122, 123, 129, 130, 132, 133, 135, 136, 137, 142, 146, 147, 148, 150, 151, 152, 154, 158, 163, 164, 165, 166, 176, 180, 205, 207, 208, 210, 212, 213, 214, 222, 224, 229, 230, 231, 232], "tensordict": [0, 1, 3, 11, 12, 14, 15, 16, 19, 20, 22, 26, 27, 30, 32, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 51, 58, 61, 62, 64, 65, 66, 70, 71, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 106, 108, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 163, 164, 165, 166, 174, 176, 180, 184, 185, 190, 193, 195, 198, 200, 203, 218, 222, 224, 225, 226, 227, 228, 229, 231], "class": [0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 207, 208, 209, 222, 224, 225, 229, 230, 231], "ha": [0, 4, 6, 7, 9, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 47, 48, 81, 84, 126, 128, 133, 154, 224, 225, 227, 229, 230, 231, 232], "been": [0, 4, 6, 7, 11, 12, 15, 42, 45, 47, 48, 83, 225, 227, 231], "move": [0, 22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 88, 107, 132, 183, 225, 231, 232], "out": [0, 3, 4, 22, 42, 45, 47, 48, 110, 111, 129, 132, 133, 161, 162, 222, 229, 230, 231, 232], "dedic": [0, 123, 124, 125, 224, 227], "librari": [0, 4, 6, 7, 8, 9, 92, 218, 219, 223, 224, 231], "take": [0, 1, 3, 7, 16, 42, 45, 47, 48, 64, 74, 79, 80, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142, 144, 167, 168, 169, 170, 171, 172, 173, 176, 186, 222, 224, 225, 229, 231], "look": [0, 4, 6, 7, 22, 42, 45, 47, 48, 74, 133, 134, 135, 225, 229, 231, 232], "find": [0, 126, 128, 229], "sourc": [0, 1, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 224, 225, 226, 227, 229, 230, 231, 232], "code": [0, 3, 4, 6, 7, 74, 135, 226, 227, 228, 229, 231, 232], "github": [0, 2, 4, 5, 6, 9, 232], "i": [0, 1, 2, 3, 5, 6, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 52, 60, 61, 62, 63, 64, 67, 70, 71, 74, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 117, 118, 119, 120, 122, 123, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 187, 188, 190, 193, 198, 200, 203, 205, 209, 219, 222, 224, 225, 227, 229, 231, 232], "an": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 52, 63, 66, 70, 71, 74, 75, 82, 83, 84, 88, 90, 96, 97, 98, 99, 100, 106, 107, 108, 110, 114, 123, 124, 125, 129, 132, 133, 134, 137, 140, 141, 144, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 164, 165, 166, 175, 180, 181, 182, 185, 188, 193, 206, 207, 208, 209, 215, 219, 224, 225, 227, 229, 230, 231, 232], "open": [0, 4, 6, 10, 232], "reinforc": [0, 2, 3, 8, 61, 97, 98, 99, 100, 129, 138, 145, 149, 153, 157, 158, 159, 193, 218, 225, 232], "learn": [0, 2, 3, 6, 7, 8, 22, 61, 97, 98, 99, 100, 109, 111, 129, 138, 145, 149, 153, 156, 157, 158, 159, 193, 224, 225, 227, 231, 232], "rl": [0, 1, 2, 4, 7, 9, 11, 12, 14, 15, 46, 111, 122, 130, 136, 145, 155, 176, 219, 222, 224, 225, 229, 230, 231], "pytorch": [0, 1, 2, 7, 82, 185, 222, 224, 230, 231, 232], "It": [0, 2, 3, 6, 22, 26, 42, 45, 46, 47, 48, 56, 71, 84, 97, 99, 103, 116, 117, 129, 133, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 163, 164, 181, 200, 219, 224, 229, 230, 231, 232], "provid": [0, 2, 3, 4, 7, 8, 14, 22, 24, 25, 26, 31, 42, 45, 46, 47, 48, 62, 70, 71, 74, 78, 81, 84, 87, 88, 96, 106, 107, 108, 122, 126, 128, 130, 138, 163, 164, 165, 166, 175, 176, 182, 188, 190, 198, 200, 203, 205, 216, 219, 222, 224, 225, 227, 229, 231, 232], "python": [0, 3, 4, 5, 6, 9, 222, 224, 225, 226, 227, 229, 231, 232], "first": [0, 1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 45, 62, 67, 71, 74, 82, 84, 107, 110, 114, 132, 133, 151, 174, 184, 224, 225, 227, 229, 230, 231, 232], "low": [0, 224, 225, 232], "high": [0, 8, 164, 167, 168, 171, 224, 225, 232], "level": [0, 19, 154, 224, 225, 232], "abstract": [0, 7, 18, 19, 20, 28, 29, 41, 42, 72, 108, 222, 230, 232], "ar": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 14, 15, 22, 23, 30, 31, 32, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 64, 65, 66, 74, 78, 81, 83, 84, 87, 88, 94, 95, 100, 101, 106, 108, 111, 115, 117, 129, 132, 133, 134, 135, 144, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 205, 209, 222, 223, 224, 225, 227, 229, 230, 231, 232], "intend": [0, 6, 11, 12, 14, 15, 232], "effici": [0, 2, 7, 111, 224, 225, 227, 230, 232], "modular": [0, 135, 232], "properli": [0, 230, 232], "test": [0, 3, 4, 90, 106, 181, 205, 229, 232], "aim": [0, 3, 6, 74, 87, 107, 187, 219, 224, 225, 232], "support": [0, 3, 19, 39, 83, 92, 127, 132, 135, 138, 149, 164, 165, 166, 212, 222, 229, 230, 232], "research": [0, 6, 8, 232], "most": [0, 3, 6, 7, 22, 224, 225, 229, 232], "written": [0, 3, 26, 36, 42, 45, 47, 48, 78, 129, 132, 133, 145, 146, 154, 155, 163, 174, 175, 222, 224, 227, 229, 232], "highli": [0, 2, 231, 232], "wai": [0, 155, 225, 227, 231, 232], "can": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 20, 22, 26, 28, 30, 42, 43, 45, 47, 48, 61, 64, 70, 71, 74, 78, 81, 83, 84, 87, 88, 95, 105, 108, 109, 111, 112, 119, 120, 126, 132, 133, 134, 135, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 163, 164, 165, 166, 181, 190, 198, 200, 203, 207, 208, 209, 219, 222, 224, 225, 227, 229, 231, 232], "easili": [0, 3, 6, 47, 48, 190, 198, 200, 203, 225, 230, 231, 232], "swap": [0, 3, 232], "compon": [0, 3, 36, 37, 38, 39, 138, 139, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 180, 185, 227, 229, 232], "transform": [0, 7, 22, 30, 31, 32, 43, 45, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 97, 103, 138, 139, 142, 144, 175, 190, 193, 195, 198, 200, 203, 209, 218, 225], "them": [0, 6, 30, 31, 32, 42, 43, 45, 47, 48, 49, 64, 74, 79, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142, 154, 175, 224, 225, 227, 229, 230, 231, 232], "write": [0, 7, 22, 45, 73, 132, 133, 135, 147, 148, 156, 158, 163, 175, 222, 224, 225, 227, 229, 230, 232], "new": [0, 3, 7, 11, 12, 14, 15, 22, 24, 26, 33, 42, 45, 47, 48, 78, 83, 88, 94, 129, 132, 133, 137, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 224, 225, 229, 230, 231, 232], "ones": [0, 19, 22, 42, 45, 47, 48, 62, 64, 65, 71, 74, 81, 84, 87, 132, 224, 230, 231, 232], "littl": [0, 3, 231, 232], "effort": [0, 3, 232], "thi": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 22, 23, 26, 32, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 56, 61, 62, 64, 66, 68, 71, 74, 78, 79, 81, 83, 84, 85, 86, 87, 88, 90, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 137, 138, 139, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 174, 176, 178, 181, 185, 186, 187, 188, 190, 198, 200, 203, 205, 209, 219, 222, 224, 225, 227, 229, 231, 232], "repo": [0, 5, 219, 232], "attempt": [0, 126, 128, 232], "align": [0, 232], "exist": [0, 22, 42, 45, 47, 48, 62, 84, 188, 209, 229, 231, 232], "ecosystem": [0, 232], "dataset": [0, 24, 25, 26, 31, 88, 182, 230, 231, 232], "pillar": [0, 232], "environ": [0, 1, 2, 3, 4, 7, 10, 11, 12, 14, 15, 22, 23, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 65, 68, 70, 71, 74, 80, 83, 84, 88, 90, 95, 106, 108, 109, 150, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 181, 187, 188, 190, 191, 192, 193, 195, 198, 200, 203, 205, 206, 207, 208, 209, 219, 226, 228], "model": [0, 1, 3, 7, 8, 11, 12, 14, 15, 22, 42, 45, 46, 47, 48, 74, 87, 89, 96, 107, 108, 109, 123, 124, 125, 132, 137, 145, 150, 151, 152, 155, 156, 158, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 218, 219, 222, 229, 231], "data": [0, 3, 7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 71, 90, 95, 106, 109, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 147, 156, 158, 164, 165, 166, 176, 182, 185, 186, 191, 205, 207, 208, 209, 218, 222, 225, 229, 230, 231], "util": [0, 3, 11, 12, 14, 15, 16, 22, 42, 45, 47, 48, 74, 87, 90, 91, 92, 93, 94, 96, 142, 143, 144, 205, 218, 223, 224, 225, 229, 231, 232], "e": [0, 1, 3, 7, 9, 10, 11, 12, 14, 15, 19, 22, 23, 36, 37, 42, 43, 45, 47, 48, 62, 64, 74, 78, 81, 83, 84, 87, 105, 109, 112, 119, 120, 132, 133, 139, 163, 164, 165, 166, 176, 187, 208, 224, 225, 230, 231, 232], "g": [0, 1, 3, 7, 9, 10, 22, 23, 42, 43, 45, 47, 48, 62, 64, 74, 78, 81, 83, 84, 87, 105, 109, 119, 120, 132, 133, 163, 169, 170, 172, 173, 208, 224, 225, 231, 232], "collector": [0, 3, 11, 12, 13, 14, 15, 16, 129, 185, 186, 191, 192, 205, 207, 208, 218, 222, 225, 231, 232], "contain": [0, 3, 6, 11, 12, 14, 15, 19, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 39, 40, 41, 42, 45, 46, 47, 48, 49, 64, 74, 81, 84, 87, 88, 94, 95, 96, 107, 109, 132, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 163, 164, 165, 166, 176, 182, 187, 190, 193, 195, 198, 200, 203, 205, 206, 207, 208, 209, 216, 222, 225, 229, 231, 232], "etc": [0, 3, 6, 22, 29, 42, 45, 47, 48, 84, 107, 224, 230, 231, 232], "have": [0, 3, 4, 5, 6, 7, 11, 12, 15, 19, 22, 39, 42, 45, 47, 48, 49, 61, 70, 83, 84, 88, 96, 106, 107, 134, 135, 146, 154, 155, 160, 176, 185, 222, 224, 225, 227, 229, 230, 231, 232], "few": [0, 2, 7, 176, 225, 231, 232], "depend": [0, 3, 6, 7, 136, 155, 231, 232], "possibl": [0, 3, 20, 22, 23, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132, 181, 185, 224, 229, 230, 231, 232], "standard": [0, 71, 77, 88, 95, 103, 109, 110, 111, 164, 165, 166, 224, 225, 232], "numpi": [0, 14, 17, 18, 19, 20, 21, 23, 28, 29, 82, 185, 224, 225, 231, 232], "common": [0, 3, 7, 45, 47, 48, 123, 124, 125, 140, 141, 205, 219, 222, 224, 227, 229, 230, 231, 232], "openai": [0, 6, 54, 55, 231, 232], "gym": [0, 3, 7, 10, 11, 12, 14, 43, 45, 54, 55, 71, 81, 88, 190, 193, 195, 198, 200, 203, 205, 219, 224, 225, 232], "onli": [0, 1, 6, 11, 12, 15, 19, 22, 26, 42, 45, 47, 48, 49, 62, 64, 74, 81, 84, 87, 88, 106, 132, 133, 134, 135, 188, 222, 224, 225, 227, 229, 231, 232], "option": [0, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 36, 37, 42, 43, 45, 46, 47, 48, 49, 52, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 87, 88, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 126, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 147, 148, 150, 151, 152, 156, 157, 158, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 188, 190, 191, 192, 193, 194, 196, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 212, 224, 225, 232], "On": [0, 6, 225, 230], "end": [0, 22, 30, 31, 32, 42, 45, 47, 48, 84, 96, 108, 167, 168, 169, 170, 171, 172, 173, 224, 227, 231, 232], "come": [0, 1, 3, 7, 47, 48, 122, 123, 124, 125, 130, 136, 224, 229, 231, 232], "set": [0, 1, 2, 3, 6, 8, 11, 12, 14, 15, 22, 23, 39, 42, 44, 45, 46, 47, 48, 62, 64, 74, 80, 81, 84, 87, 93, 108, 126, 132, 176, 181, 192, 209, 219, 223, 224, 225, 227, 231, 232], "re": [0, 3, 7, 22, 42, 45, 47, 48, 133, 222, 225, 227, 231, 232], "usabl": [0, 222, 232], "function": [0, 3, 7, 10, 16, 22, 36, 37, 38, 39, 42, 43, 45, 47, 48, 64, 74, 79, 83, 84, 85, 86, 87, 88, 90, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 112, 113, 114, 115, 116, 117, 120, 123, 124, 125, 126, 128, 129, 132, 133, 135, 136, 142, 143, 144, 145, 146, 147, 148, 154, 155, 156, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 190, 193, 195, 198, 200, 203, 205, 218, 224, 225, 227, 229, 230, 231], "cost": [0, 2, 20, 225], "return": [0, 3, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 43, 45, 46, 47, 48, 49, 52, 60, 61, 62, 63, 64, 65, 67, 69, 71, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88, 91, 92, 94, 95, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 112, 115, 116, 117, 118, 119, 120, 123, 124, 125, 127, 131, 132, 133, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 169, 170, 172, 173, 182, 185, 187, 190, 191, 193, 195, 198, 200, 203, 205, 206, 207, 208, 209, 218, 222, 224, 225, 227, 229, 230, 231, 232], "process": [0, 1, 2, 3, 4, 11, 12, 15, 43, 47, 48, 88, 129, 222, 224, 225, 231, 232], "good": [0, 1, 8, 231, 232], "runtim": [0, 3, 22, 42, 45, 47, 48], "perform": [0, 3, 7, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 45, 47, 48, 64, 70, 74, 79, 83, 84, 85, 86, 87, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 116, 117, 126, 128, 129, 142, 151, 155, 181, 185, 224, 225, 227, 230, 231], "introduct": [0, 226, 228, 231], "env": [0, 1, 2, 4, 5, 6, 7, 11, 12, 14, 22, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 108, 109, 132, 174, 188, 190, 191, 192, 193, 195, 198, 200, 203, 205, 207, 208, 209, 218, 224, 225, 226, 227, 228], "modul": [0, 3, 7, 10, 22, 42, 45, 46, 47, 48, 64, 74, 79, 81, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 153, 156, 157, 159, 161, 164, 165, 166, 185, 189, 194, 196, 197, 199, 202, 205, 218, 222, 224, 225, 227, 229], "us": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 19, 20, 22, 24, 25, 26, 30, 31, 32, 33, 42, 43, 45, 46, 47, 48, 52, 62, 63, 71, 74, 81, 82, 83, 84, 87, 88, 90, 93, 94, 95, 96, 97, 98, 103, 105, 107, 108, 109, 111, 112, 119, 120, 129, 132, 133, 137, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 171, 181, 182, 185, 186, 188, 191, 192, 193, 201, 205, 209, 215, 216, 219, 222, 223, 226, 227, 228, 230, 231], "object": [0, 3, 11, 12, 14, 15, 19, 22, 36, 37, 38, 39, 42, 45, 47, 48, 74, 83, 84, 88, 109, 122, 123, 130, 132, 133, 134, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 188, 191, 192, 204, 205, 209, 218, 222, 225, 229, 231], "state": [0, 1, 3, 11, 12, 14, 15, 22, 42, 45, 46, 47, 48, 51, 58, 61, 62, 64, 74, 80, 81, 83, 84, 86, 87, 88, 89, 95, 103, 106, 107, 109, 113, 116, 117, 123, 132, 137, 156, 163, 164, 165, 166, 209, 224, 225, 231], "contribut": 0, "instal": [0, 4, 9, 185, 219, 231], "improv": [0, 2, 68, 145], "structur": [0, 3, 6, 129, 164, 165, 166], "dictionari": [0, 11, 12, 14, 15, 19, 22, 42, 45, 47, 48, 84, 133, 207, 208, 209, 222, 224, 231], "featur": [0, 3, 11, 12, 14, 15, 23, 42, 45, 47, 48, 61, 96, 103, 104, 107, 110, 111, 133, 164, 165, 166, 209, 224, 225, 229, 231, 232], "tensor": [0, 3, 7, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 58, 61, 62, 64, 67, 71, 74, 77, 81, 82, 83, 84, 87, 88, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 115, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 142, 143, 147, 148, 151, 152, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 182, 190, 193, 195, 198, 200, 203, 222, 224, 225, 227, 229, 231, 232], "tensordictmodul": [0, 11, 12, 14, 15, 109, 132, 134, 224, 225, 226, 227, 228], "exampl": [0, 3, 8, 9, 10, 11, 12, 14, 15, 19, 20, 21, 22, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 62, 64, 65, 71, 74, 81, 82, 84, 87, 88, 94, 95, 96, 106, 107, 109, 112, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 141, 164, 165, 166, 176, 177, 178, 179, 180, 183, 184, 186, 190, 193, 195, 198, 200, 203, 205, 222, 224, 225, 226, 227, 230, 231, 232], "do": [0, 3, 6, 11, 12, 14, 15, 45, 70, 94, 110, 124, 222, 224, 225, 227, 231, 232], "": [0, 1, 3, 5, 6, 7, 22, 24, 25, 26, 31, 42, 45, 47, 48, 64, 74, 81, 84, 87, 88, 90, 96, 111, 132, 133, 158, 164, 165, 166, 182, 200, 203, 224, 225, 227, 230, 231, 232], "don": [0, 5, 6, 17, 18, 19, 20, 21, 23, 28, 29, 42, 224, 230, 231, 232], "t": [0, 3, 5, 6, 7, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 33, 42, 43, 45, 47, 48, 74, 87, 88, 94, 132, 141, 147, 164, 165, 166, 185, 186, 209, 219, 224, 225, 227, 231, 232], "showcas": 0, "implement": [0, 2, 3, 8, 10, 22, 39, 42, 45, 47, 48, 88, 105, 118, 119, 120, 145, 155, 158, 190, 198, 200, 203, 222, 224, 225, 232], "deepmind": [0, 6, 8, 52, 53], "control": [0, 1, 3, 4, 47, 48, 52, 53, 97, 98, 99, 100, 108, 109, 117, 129, 132, 133, 134, 146, 154, 155, 159, 164, 167, 168, 171, 193, 222, 224], "devic": [0, 1, 2, 3, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 36, 37, 42, 44, 45, 46, 47, 48, 51, 58, 59, 64, 73, 74, 81, 82, 84, 87, 95, 96, 97, 98, 99, 100, 104, 106, 107, 109, 110, 111, 123, 124, 125, 127, 129, 130, 131, 132, 135, 136, 138, 139, 147, 186, 190, 193, 195, 198, 200, 201, 203, 224, 225, 227, 229, 232], "run": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 15, 22, 42, 45, 46, 47, 48, 52, 53, 64, 70, 71, 74, 79, 83, 84, 85, 86, 87, 88, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 134, 135, 142, 181, 207, 208, 209, 219, 222, 224, 225, 227, 229, 230, 232], "parallel": [0, 1, 3, 7, 11, 12, 15, 90, 145, 206, 207, 208, 209, 225], "vecnorm": [0, 43, 209, 218], "task": [0, 8, 47, 48, 52, 74, 87, 224, 225, 226, 228, 231, 232], "specif": [0, 4, 7, 26, 27, 32, 45, 185, 218, 222, 226, 228], "polici": [0, 1, 2, 3, 7, 11, 12, 13, 14, 15, 42, 45, 46, 47, 48, 93, 94, 111, 123, 124, 125, 126, 128, 129, 132, 133, 138, 139, 145, 146, 147, 154, 155, 156, 158, 181, 186, 190, 191, 192, 193, 195, 198, 205, 207, 208, 222, 225, 226, 228, 229, 231, 232], "multi": [0, 3, 6, 8, 22, 42, 45, 47, 48, 106, 107, 224, 225, 226, 228, 232], "execut": [0, 1, 3, 6, 7, 14, 30, 31, 32, 42, 43, 45, 46, 47, 48, 134, 135, 188, 209, 222, 225, 228, 229, 231], "divers": [0, 47, 48], "rollout": [0, 1, 3, 11, 12, 14, 15, 42, 45, 46, 47, 48, 90, 95, 109, 129, 145, 188, 224, 225, 232], "ddpg": [0, 97, 98, 99, 100, 147, 153, 159, 193, 194, 218, 226, 228], "normal": [0, 30, 71, 88, 96, 105, 107, 112, 119, 120, 133, 181, 183, 209, 222, 225, 231], "observ": [0, 2, 3, 7, 11, 12, 14, 28, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 58, 61, 62, 63, 64, 65, 67, 69, 71, 72, 74, 75, 78, 80, 81, 82, 83, 84, 85, 87, 88, 94, 97, 98, 99, 100, 106, 113, 114, 116, 122, 123, 124, 125, 127, 128, 129, 130, 131, 136, 137, 138, 139, 151, 164, 165, 166, 175, 190, 193, 195, 198, 200, 203, 205, 222, 225, 227, 229, 230, 231, 232], "build": [0, 3, 6, 16, 19, 22, 42, 45, 47, 48, 88, 95, 109, 133, 185, 189, 194, 196, 197, 199, 201, 202, 204, 222, 229, 230, 231, 232], "evalu": [0, 22, 42, 45, 47, 48, 84, 101, 115, 120, 156, 191, 192, 225], "your": [0, 2, 3, 6, 7, 9, 22, 42, 45, 47, 48, 88, 209, 219, 225, 230, 232], "record": [0, 22, 42, 45, 47, 48, 155, 174, 175, 205, 218, 222, 225], "replai": [0, 7, 14, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 39, 40, 47, 48, 147, 148, 156, 158, 182, 185, 201, 205, 218, 222, 225], "buffer": [0, 3, 7, 14, 22, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 64, 74, 81, 84, 87, 132, 135, 147, 148, 156, 158, 182, 185, 201, 205, 218, 222, 225, 229, 231], "hyperparamet": [0, 1], "initi": [0, 6, 11, 12, 14, 15, 22, 42, 45, 47, 48, 71, 74, 81, 83, 84, 89, 95, 109, 110, 111, 126, 128, 129, 154, 156, 158, 190, 193, 195, 198, 200, 203, 209, 225, 231], "time": [0, 3, 6, 7, 11, 12, 14, 15, 22, 42, 43, 45, 47, 48, 62, 81, 88, 94, 103, 106, 129, 151, 156, 164, 165, 166, 185, 225, 227, 229, 230, 231, 232], "train": [0, 1, 11, 12, 14, 15, 22, 42, 45, 47, 48, 68, 74, 84, 87, 97, 99, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 164, 185, 186, 205, 222, 230, 231], "experi": [0, 3, 24, 33, 210, 212, 213, 214, 215, 216, 219], "result": [0, 1, 3, 6, 11, 12, 14, 15, 22, 42, 43, 45, 47, 48, 60, 61, 62, 63, 64, 65, 67, 69, 71, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88, 90, 94, 107, 139, 164, 167, 168, 169, 170, 171, 172, 173, 174, 186, 225, 230, 231, 232], "sampl": [0, 2, 7, 8, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 42, 46, 91, 93, 95, 101, 105, 109, 115, 116, 119, 120, 126, 128, 129, 132, 133, 146, 147, 148, 154, 155, 176, 182, 185, 187, 225, 229, 231, 232], "trajectori": [0, 1, 11, 12, 14, 15, 16, 22, 42, 45, 47, 48, 83, 95, 109, 129, 155, 164, 166, 167, 168, 169, 170, 171, 172, 173, 176, 225, 231, 232], "td": [0, 19, 50, 51, 52, 53, 54, 55, 57, 58, 62, 65, 71, 82, 84, 88, 94, 95, 108, 109, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 165, 166, 169, 170, 172, 173, 174, 176, 184, 190, 193, 195, 198, 200, 203, 229, 230, 231, 232], "lambda": [0, 11, 12, 14, 15, 43, 150, 152, 166, 169, 170, 172, 173, 205, 229, 230, 231, 232], "pixel": [0, 3, 6, 19, 69, 74, 75, 82, 87, 97, 113, 114, 175, 190, 195, 198, 200, 203, 224, 226, 228, 231, 232], "base": [0, 3, 7, 8, 11, 12, 14, 15, 35, 41, 46, 86, 123, 150, 185, 190, 198, 200, 203, 222, 224, 226, 228, 231], "dqn": [0, 127, 131, 138, 148, 149, 153, 159, 195, 196, 218, 226, 228], "problem": [0, 6, 7, 14, 231], "deep": [0, 8, 61, 97, 98, 99, 100, 102, 129, 145, 153, 158, 159, 193, 224], "q": [0, 97, 98, 99, 100, 102, 104, 138, 139, 147, 148, 149, 153, 156, 158, 200, 203, 229], "network": [0, 1, 7, 22, 42, 45, 47, 48, 96, 97, 98, 99, 100, 102, 103, 104, 107, 111, 113, 114, 116, 117, 123, 124, 125, 132, 147, 148, 149, 153, 156, 158, 159, 161, 164, 165, 166, 190, 193, 198, 204, 205, 222, 224, 227, 229, 231], "regular": [0, 15, 132, 133, 139, 149, 186, 222, 224, 229, 230, 231], "conclus": 0, "api": [0, 3, 4, 74, 87, 222, 231, 232], "packag": [0, 5, 6, 9, 218, 219, 231], "helper": [0, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 224, 232], "compos": [0, 3, 22, 31, 34, 35, 40, 42, 45, 47, 48, 83, 84, 88, 151, 190, 193, 195, 198, 200, 203, 218, 225, 227, 231, 232], "prototyp": [0, 8, 218], "tensorspec": [0, 3, 13, 17, 18, 19, 20, 21, 23, 29, 42, 46, 60, 61, 62, 63, 64, 65, 67, 69, 71, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 117, 122, 126, 128, 129, 130, 132, 133, 134, 218], "envbas": [0, 3, 11, 12, 14, 15, 43, 45, 47, 48, 49, 70, 83, 84, 88, 90, 95, 108, 109, 181, 188, 190, 191, 192, 193, 195, 198, 200, 203, 205, 207, 208, 209, 218], "gymlikeenv": [0, 218], "envmetadata": [0, 218], "spec": [0, 2, 3, 17, 18, 19, 20, 21, 23, 28, 29, 42, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 67, 69, 71, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 90, 117, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 138, 139, 190, 193, 195, 198, 200, 203, 218, 224, 225, 227, 232], "vector": [0, 7, 17, 23, 47, 48, 97, 99, 107, 166, 172, 173, 218, 224, 225, 227, 229, 231], "domain": [0, 2, 7, 17, 18, 19, 20, 21, 23, 28, 29, 81, 132, 133, 134, 135, 218, 231, 232], "hook": [0, 22, 42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 127, 128, 129, 131, 138, 139, 142, 178, 179, 181, 183, 185, 186, 218], "explor": [0, 1, 89, 111, 126, 128, 129, 132, 133, 145, 181, 191, 192, 205, 218, 224, 225], "planner": [0, 95, 109, 218], "distribut": [0, 2, 3, 8, 9, 24, 26, 71, 95, 101, 102, 103, 105, 109, 112, 115, 116, 117, 118, 119, 120, 127, 133, 134, 138, 146, 149, 154, 155, 218, 222, 224, 225, 229, 231, 232], "sac": [0, 156, 158, 202, 203, 218], "redq": [0, 156, 199, 200, 218], "ppo": [0, 7, 133, 146, 154, 155, 190, 197, 198, 218], "a2c": [0, 145, 189, 218], "dreamer": [0, 59, 103, 150, 151, 152, 218], "trainer": [0, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 224], "checkpoint": [0, 218], "builder": [0, 218, 225, 231], "logger": [0, 175, 179, 181, 185, 205, 209, 210, 212, 213, 214, 215, 216, 218], "_util": [0, 10, 218], "implement_for": [0, 218], "knowledg": 0, "work": [0, 3, 6, 7, 22, 42, 45, 47, 48, 62, 74, 88, 96, 107, 185, 219, 225, 227, 229, 230, 231, 232], "what": [0, 7, 28, 42, 45, 47, 48, 81, 219, 225, 229, 231, 232], "version": [0, 1, 10, 22, 42, 45, 47, 48, 166, 219, 224, 225, 231], "habitat": [0, 56, 219], "lab": [0, 3, 52, 53, 219], "up": [0, 1, 2, 3, 7, 8, 20, 219, 224, 225, 229, 231], "issu": [0, 4, 7, 132, 133, 219, 232], "about": [0, 4, 219, 224, 225, 231, 232], "mujoco": [0, 5, 219], "prerequisit": 0, "render": [0, 7, 181, 219, 224, 225], "all": [0, 3, 7, 11, 12, 14, 15, 22, 42, 43, 45, 46, 47, 48, 49, 64, 66, 71, 74, 78, 79, 81, 83, 84, 85, 86, 87, 88, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 132, 133, 135, 142, 151, 180, 185, 187, 207, 208, 209, 219, 222, 224, 225, 226, 227, 229, 230, 231, 232], "bindindg": 0, "2": [0, 1, 7, 9, 11, 12, 14, 21, 22, 42, 43, 45, 47, 48, 62, 64, 71, 74, 81, 84, 87, 88, 96, 97, 98, 99, 104, 106, 107, 112, 127, 128, 129, 132, 136, 138, 146, 147, 154, 156, 158, 163, 164, 165, 166, 169, 170, 172, 173, 175, 176, 224, 225, 227, 230, 231, 232], "1": [0, 1, 2, 3, 7, 9, 11, 12, 14, 15, 20, 21, 22, 23, 29, 42, 43, 45, 46, 47, 48, 51, 58, 60, 62, 64, 65, 68, 70, 71, 74, 81, 82, 84, 87, 88, 94, 95, 96, 97, 98, 100, 104, 105, 107, 109, 110, 111, 112, 116, 117, 118, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 136, 138, 142, 145, 146, 151, 154, 155, 156, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 181, 183, 190, 193, 195, 198, 200, 203, 205, 209, 219, 222, 224, 225, 227, 230, 231, 232], "old": [0, 154, 231], "bind": 0, "py": [0, 222, 224, 225, 227, 228, 229, 230, 231, 232], "when": [0, 1, 3, 4, 7, 11, 12, 14, 15, 22, 24, 25, 26, 30, 31, 32, 36, 37, 38, 39, 42, 43, 45, 47, 48, 64, 70, 74, 78, 81, 83, 84, 87, 88, 93, 95, 107, 108, 109, 110, 119, 132, 133, 135, 142, 146, 154, 155, 163, 174, 175, 182, 209, 219, 222, 224, 225, 229, 230, 231], "pro": [0, 6, 219], "tip": [0, 6, 219], "debug": [0, 5, 219, 231], "gradient": [0, 22, 42, 45, 47, 48, 84, 105, 111, 119, 120, 145, 157, 163, 164, 165, 166, 185, 224, 225], "relat": [0, 9, 224], "error": [0, 1, 3, 6, 9, 10, 22, 42, 45, 47, 48, 90, 141, 224, 225, 230, 231], "newcom": 0, "my": 0, "too": [0, 6, 105, 119, 120, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 164, 165, 166, 224, 225, 231], "slow": [0, 3], "intermedi": 0, "resourc": [0, 219], "functorch": [0, 7, 9, 132, 135, 140, 225, 232], "blog": 0, "websit": 0, "index": [0, 6, 7, 9, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 41, 94, 182, 224, 227, 230, 232], "search": [0, 225], "page": [0, 6], "somewhat": [1, 231], "equival": [1, 11, 12, 14, 15, 22, 42, 45, 47, 48, 84, 231, 232], "dataload": [1, 230], "except": [1, 17, 18, 19, 20, 21, 23, 28, 29, 42, 66, 115, 141, 224, 225, 230, 231], "thei": [1, 3, 7, 8, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 45, 47, 48, 65, 66, 83, 84, 106, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 185, 222, 224, 225, 227, 229, 230, 231, 232], "collect": [1, 3, 7, 11, 12, 14, 15, 22, 24, 25, 26, 27, 30, 31, 32, 71, 74, 87, 90, 129, 147, 156, 158, 176, 182, 185, 186, 187, 188, 205, 222, 224, 225, 230, 231, 232], "over": [1, 2, 3, 7, 11, 12, 14, 15, 22, 42, 45, 47, 48, 71, 135, 149, 151, 187, 222, 224, 229, 230, 231, 232], "non": [1, 7, 22, 24, 26, 42, 45, 47, 48, 60, 64, 74, 81, 84, 87, 132, 133, 151, 164, 165, 166, 224, 229, 231], "static": [1, 88], "like": [1, 6, 22, 42, 45, 47, 48, 56, 82, 90, 156, 224, 230, 231, 232], "being": [1, 3, 7, 15, 22, 42, 45, 47, 48, 84, 93, 129, 175, 186, 207, 208, 209, 224, 225], "accept": [1, 11, 12, 14, 15, 22, 42, 45, 46, 47, 48, 64, 74, 78, 81, 84, 87, 132, 133, 134, 222, 229, 231], "two": [1, 7, 9, 22, 42, 45, 47, 48, 100, 133, 154, 158, 160, 181, 185, 190, 198, 200, 203, 224, 225, 227, 229, 230, 231, 232], "main": [1, 2, 4, 43, 133, 185, 224, 225, 227, 231], "argument": [1, 3, 11, 12, 14, 15, 19, 22, 42, 45, 47, 48, 64, 74, 81, 83, 84, 87, 96, 107, 110, 132, 133, 134, 136, 174, 178, 187, 190, 193, 195, 198, 200, 203, 205, 206, 209, 224, 225, 229, 231], "list": [1, 5, 6, 7, 8, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 38, 39, 42, 45, 46, 47, 48, 61, 74, 78, 84, 87, 107, 135, 136, 162, 164, 166, 174, 181, 182, 207, 208, 224, 225, 227, 229, 230, 231, 232], "constructor": [1, 14, 83, 164, 165, 166, 190, 193, 195, 198, 200, 203, 206, 209, 229], "iter": [1, 12, 14, 21, 22, 24, 25, 26, 27, 30, 31, 32, 42, 45, 47, 48, 71, 88, 96, 107, 132, 133, 134, 135, 140, 162, 181, 182, 184, 185, 190, 198, 200, 203, 222, 224], "step": [1, 3, 7, 11, 12, 14, 15, 22, 42, 43, 45, 46, 47, 48, 49, 51, 58, 70, 71, 80, 84, 94, 95, 103, 106, 108, 109, 126, 128, 129, 133, 145, 150, 155, 163, 174, 176, 181, 185, 222, 224, 225, 227, 230, 232], "queri": [1, 11, 12, 14, 15, 22, 42, 45, 47, 48, 74, 83, 88, 135, 229, 232], "defin": [1, 2, 17, 18, 19, 20, 21, 23, 28, 29, 42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142, 164, 165, 166, 174, 206, 225, 229, 230, 231], "number": [1, 3, 7, 11, 12, 14, 15, 18, 20, 22, 23, 24, 25, 26, 31, 33, 36, 37, 38, 42, 45, 46, 47, 48, 61, 68, 70, 71, 77, 80, 88, 95, 96, 101, 102, 103, 104, 105, 107, 109, 112, 113, 114, 116, 117, 118, 119, 120, 126, 128, 129, 132, 133, 144, 150, 156, 158, 176, 178, 181, 182, 185, 186, 187, 188, 207, 208, 209, 224, 225, 231], "befor": [1, 3, 6, 9, 11, 12, 14, 15, 22, 42, 45, 47, 48, 49, 60, 61, 62, 63, 64, 65, 67, 69, 71, 74, 75, 76, 77, 80, 81, 82, 83, 85, 87, 107, 110, 111, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 165, 166, 224, 225, 229, 230, 231], "deliv": [1, 225, 232], "stack": [1, 6, 7, 26, 47, 48, 88, 94, 134, 135, 174, 176, 225, 227, 229, 230, 232], "user": [1, 4, 7, 22, 42, 45, 47, 48, 80, 84, 106, 206, 222, 225, 229, 231, 232], "reset": [1, 3, 7, 11, 12, 14, 15, 42, 43, 45, 46, 47, 48, 51, 58, 61, 64, 70, 74, 78, 80, 81, 83, 86, 87, 88, 89, 94, 121, 129, 174, 190, 193, 195, 198, 200, 203, 224, 225, 227, 232], "whenev": [1, 3, 186], "reach": [1, 11, 12, 14, 15, 42, 45, 47, 48, 126, 128, 129, 231, 232], "done": [1, 3, 6, 7, 11, 12, 14, 19, 22, 42, 43, 45, 46, 47, 48, 51, 58, 71, 77, 80, 81, 88, 94, 95, 109, 147, 148, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 190, 193, 195, 198, 200, 203, 224, 225, 227, 230, 231, 232], "after": [1, 7, 19, 22, 42, 45, 47, 48, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 94, 110, 126, 128, 151, 224, 225, 229, 230, 231], "predifin": 1, "becaus": [1, 6, 83, 100, 106, 132, 133, 224, 225, 227, 230, 231], "potenti": 1, "comput": [1, 3, 7, 11, 14, 20, 22, 24, 26, 42, 45, 47, 48, 64, 71, 74, 79, 83, 84, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 119, 120, 123, 126, 128, 129, 133, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 188, 224, 225, 227, 229], "heavi": [1, 7], "crucial": [1, 224, 225, 231], "configur": [1, 7, 11, 12, 14, 15, 155, 190, 198, 200, 203], "appropri": [1, 6, 11, 12, 14, 15, 40, 41, 206, 209], "paramet": [1, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 52, 53, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 128, 129, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 198, 200, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 224, 225, 229, 232], "consider": [1, 3, 7, 224], "whether": [1, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 42, 45, 46, 47, 48, 84, 96, 107, 136, 147, 148, 149, 156, 158, 166, 182, 225, 231], "should": [1, 3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 39, 42, 45, 46, 47, 48, 64, 71, 74, 78, 79, 83, 84, 85, 86, 87, 88, 90, 94, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 132, 133, 142, 153, 154, 155, 156, 159, 163, 164, 165, 166, 175, 180, 181, 182, 185, 205, 207, 208, 209, 222, 224, 225, 227, 231, 232], "occur": [1, 7, 12, 62, 132, 133, 151, 231], "serial": [1, 3, 22, 42, 45, 47, 48, 88], "optim": [1, 7, 22, 42, 45, 47, 48, 95, 109, 110, 111, 155, 158, 180, 185, 190, 198, 205, 222, 224, 225, 230], "syncdatacollector": [1, 11, 12, 15, 205, 208, 218], "worker": [1, 11, 12, 14, 15, 43, 47, 48, 88, 207, 208, 209, 231, 232], "multisyncdatacollector": [1, 208, 218, 232], "split": [1, 11, 12, 14, 15, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 222, 232], "workload": 1, "across": [1, 88, 129, 186, 230], "aggreg": [1, 96, 97, 98, 135, 230], "final": [1, 126, 128, 129, 134, 164, 181, 224, 225, 231], "multiasyncdatacollector": [1, 15, 207, 218, 224, 225, 232], "sever": [1, 7, 22, 42, 45, 47, 48, 62, 84, 155, 231], "batch": [1, 3, 11, 12, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 42, 45, 46, 47, 48, 71, 84, 101, 102, 106, 110, 115, 118, 129, 132, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 182, 184, 185, 186, 207, 208, 209, 222, 224, 225, 227, 229, 231, 232], "gather": [1, 24, 26, 163, 188, 219, 229, 231], "continu": [1, 8, 18, 29, 97, 98, 99, 100, 129, 133, 135, 159, 164, 167, 168, 171, 193, 224, 231], "concomittantli": 1, "impli": [1, 231], "weight": [1, 8, 11, 12, 14, 15, 22, 24, 26, 42, 45, 47, 48, 64, 74, 81, 84, 87, 111, 132, 145, 146, 151, 186, 204, 222, 224, 225, 227, 232], "mai": [1, 3, 4, 6, 7, 11, 12, 14, 15, 22, 42, 45, 47, 48, 84, 88, 107, 222, 224, 231, 232], "slightli": [1, 224, 229, 231], "lag": [1, 11, 12, 14, 15], "therefor": [1, 3, 6, 155, 230, 231], "although": [1, 7, 42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142, 222, 224, 225], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 6, 7, 11, 12, 14, 15, 24, 25, 26, 27, 30, 31, 32, 36, 37, 42, 45, 46, 47, 48, 74, 78, 83, 87, 126, 128, 132, 133, 144, 145, 146, 147, 149, 153, 154, 155, 156, 158, 159, 163, 164, 165, 166, 174, 175, 182, 185, 186, 222, 224, 225, 227, 229, 231], "asynchron": [1, 8, 12, 22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132, 145, 207], "off": [1, 2, 105, 119, 120, 158, 181, 191, 222, 225, 231], "curriculum": 1, "For": [1, 3, 6, 7, 8, 9, 11, 12, 14, 15, 22, 42, 45, 47, 48, 110, 138, 145, 149, 155, 181, 193, 222, 224, 229, 231], "remot": [1, 30, 47, 48, 231], "necessari": [1, 5, 7, 11, 12, 14, 15, 156, 164, 165, 166, 224], "synchronis": [1, 43], "from": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 23, 24, 25, 26, 27, 30, 31, 32, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 62, 71, 74, 80, 81, 82, 83, 84, 87, 88, 94, 95, 97, 98, 99, 100, 105, 107, 108, 109, 110, 112, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 146, 147, 148, 154, 155, 156, 158, 163, 164, 165, 166, 174, 175, 176, 182, 185, 187, 188, 190, 193, 195, 198, 200, 201, 203, 205, 206, 209, 219, 222, 224, 225, 227, 229, 230, 231, 232], "either": [1, 4, 22, 42, 45, 47, 48, 137, 193, 216, 222, 230, 231, 232], "update_policy_weights_": [1, 11, 12, 14, 15, 224, 225, 232], "update_at_each_batch": [1, 11, 12, 15, 224], "true": [1, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 62, 64, 70, 71, 74, 77, 80, 81, 82, 84, 87, 88, 94, 95, 96, 97, 98, 99, 100, 104, 105, 107, 109, 110, 111, 119, 120, 123, 124, 125, 126, 129, 132, 133, 134, 135, 141, 145, 146, 150, 151, 152, 154, 155, 156, 158, 160, 164, 165, 166, 169, 170, 172, 173, 174, 175, 178, 179, 181, 185, 195, 209, 222, 224, 225, 227, 229, 230, 231, 232], "second": [1, 7, 184, 224, 225, 227, 229, 230, 231, 232], "consid": [1, 7, 22, 42, 45, 47, 48, 101, 118, 224, 230], "oper": [1, 3, 6, 7, 11, 12, 15, 22, 42, 45, 47, 48, 83, 112, 123, 124, 125, 132, 137, 138, 145, 146, 147, 148, 149, 154, 155, 163, 164, 165, 166, 185, 193, 195, 200, 203, 222, 224, 225, 227, 229, 231], "instanc": [1, 3, 6, 7, 11, 12, 14, 15, 22, 28, 42, 43, 45, 46, 47, 48, 53, 61, 64, 74, 79, 81, 83, 85, 86, 87, 88, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 112, 113, 114, 116, 117, 126, 128, 129, 133, 134, 135, 142, 175, 181, 188, 190, 191, 192, 193, 195, 198, 200, 203, 205, 207, 208, 216, 222, 225, 229, 230, 231, 232], "cpu": [1, 3, 7, 9, 11, 12, 14, 22, 28, 36, 37, 42, 45, 46, 47, 48, 51, 58, 59, 64, 74, 81, 84, 87, 95, 109, 111, 130, 132, 135, 190, 193, 195, 198, 200, 203, 224, 225, 227, 230, 231, 232], "slower": 1, "than": [1, 7, 11, 12, 14, 15, 100, 107, 112, 126, 128, 132, 186, 219, 224, 225, 229, 230, 231, 232], "one": [1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 21, 23, 24, 25, 26, 27, 30, 31, 32, 39, 40, 41, 42, 43, 45, 47, 48, 49, 64, 70, 74, 79, 83, 84, 85, 86, 87, 88, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 115, 116, 117, 126, 127, 128, 129, 131, 132, 133, 138, 139, 142, 144, 145, 146, 147, 148, 154, 155, 156, 178, 180, 181, 182, 185, 188, 190, 198, 200, 203, 209, 219, 222, 224, 225, 227, 229, 230, 231, 232], "cuda": [1, 3, 6, 22, 42, 45, 47, 48, 64, 73, 74, 81, 84, 87, 132, 177, 224, 225, 230, 231], "multipl": [1, 3, 4, 7, 11, 12, 14, 15, 20, 47, 48, 62, 78, 83, 88, 106, 110, 111, 132, 133, 156, 200, 209, 222, 225, 230, 232], "infer": [1, 47, 48, 88, 110, 158, 224, 229, 230], "dispatch": 1, "avail": [1, 5, 133, 138, 139, 207, 208, 224, 225, 231], "speed": [1, 2, 7, 20, 224, 225], "avoid": [1, 22, 42, 45, 47, 48, 84, 88, 132, 187, 229], "oom": 1, "choic": [1, 2, 112], "size": [1, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 42, 44, 45, 46, 47, 48, 51, 58, 59, 62, 74, 79, 81, 82, 84, 85, 87, 95, 96, 101, 106, 107, 109, 112, 115, 116, 117, 118, 123, 124, 125, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 163, 164, 165, 166, 175, 176, 182, 190, 193, 195, 198, 200, 203, 224, 225, 227, 229, 231, 232], "pass": [1, 3, 14, 19, 22, 26, 42, 43, 44, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 88, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 110, 112, 113, 114, 116, 117, 126, 128, 129, 132, 133, 135, 141, 142, 164, 165, 166, 207, 208, 209, 224, 225, 227, 231], "ie": 1, "store": [1, 7, 11, 12, 14, 15, 19, 22, 26, 32, 36, 37, 38, 42, 45, 47, 48, 88, 95, 106, 109, 190, 193, 195, 198, 200, 203, 222, 224, 225, 230, 231], "while": [1, 3, 6, 7, 22, 42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142, 154, 155, 224, 225, 232], "wait": [1, 225], "also": [1, 2, 3, 7, 22, 26, 42, 45, 47, 48, 78, 84, 117, 134, 135, 145, 147, 148, 164, 222, 224, 225, 227, 229, 230, 231], "impact": 1, "memori": [1, 7, 20, 22, 36, 42, 43, 45, 47, 48, 64, 74, 81, 84, 87, 88, 132, 209, 222, 224, 232], "manag": [1, 7, 161, 162, 181, 224, 229], "kei": [1, 3, 6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 32, 42, 45, 47, 48, 49, 61, 62, 71, 74, 78, 81, 83, 84, 87, 88, 94, 95, 108, 109, 126, 128, 129, 132, 133, 134, 135, 136, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 163, 164, 165, 166, 175, 180, 181, 184, 185, 188, 190, 198, 200, 203, 222, 224, 225, 227, 229, 231, 232], "which": [1, 3, 6, 7, 10, 11, 12, 14, 15, 19, 20, 22, 23, 32, 42, 45, 47, 48, 49, 61, 62, 68, 70, 71, 74, 83, 84, 105, 119, 120, 123, 124, 125, 132, 133, 135, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 164, 176, 180, 190, 193, 195, 198, 200, 203, 222, 224, 225, 227, 229, 230, 231], "passing_devic": [1, 11, 12, 14, 15, 224, 225, 232], "dure": [1, 11, 12, 14, 15, 42, 45, 47, 48, 68, 84, 181, 185, 224, 231], "A": [1, 3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 56, 68, 74, 81, 83, 84, 86, 88, 89, 90, 94, 95, 96, 107, 109, 111, 112, 126, 128, 133, 134, 135, 138, 142, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 178, 182, 185, 186, 190, 195, 198, 200, 203, 205, 210, 211, 212, 225, 230, 231], "heurist": [1, 17, 18, 19, 20, 21, 23, 28, 29, 129, 224, 231], "usual": [1, 3, 5, 6, 7, 42, 45, 47, 48, 111, 174, 190, 198, 200, 203, 219, 222, 231], "same": [1, 3, 14, 22, 42, 43, 45, 47, 48, 68, 70, 71, 83, 84, 88, 96, 107, 129, 224, 225, 227, 229, 230, 231], "storag": [1, 2, 7, 22, 24, 25, 26, 27, 30, 31, 32, 36, 37, 38, 42, 44, 45, 47, 48, 182, 218, 222, 224, 225], "default": [1, 3, 9, 11, 12, 14, 15, 19, 20, 22, 23, 26, 31, 36, 37, 42, 45, 47, 48, 49, 52, 61, 62, 67, 70, 71, 74, 77, 81, 82, 84, 87, 88, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 126, 128, 129, 130, 132, 133, 136, 142, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 183, 185, 190, 193, 198, 200, 203, 205, 209, 222, 224, 225, 229, 230, 231, 232], "behaviour": [1, 3, 45, 62, 105, 119, 120, 181, 225], "besid": 1, "those": [1, 4, 6, 47, 48, 71, 133, 134, 135, 186, 207, 208, 224, 225, 231], "choos": [1, 224], "follow": [1, 2, 3, 5, 6, 7, 22, 42, 45, 46, 47, 48, 74, 96, 107, 144, 146, 154, 157, 185, 200, 203, 222, 224, 225, 227, 229, 230, 231, 232], "max_frames_per_traj": [1, 11, 12, 14, 15, 187, 224, 232], "frame": [1, 11, 12, 14, 15, 22, 45, 61, 68, 126, 128, 129, 174, 175, 178, 181, 185, 187, 188, 224, 225, 231, 232], "call": [1, 3, 6, 7, 10, 11, 12, 14, 15, 22, 24, 25, 26, 30, 31, 32, 36, 37, 38, 39, 42, 45, 47, 48, 61, 64, 65, 73, 74, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 109, 110, 112, 113, 114, 116, 117, 126, 128, 129, 132, 133, 135, 142, 163, 174, 181, 182, 222, 224, 225, 229, 230, 231, 232], "frames_per_batch": [1, 11, 12, 14, 15, 187, 224, 225, 232], "each": [1, 3, 6, 7, 11, 12, 14, 15, 16, 21, 22, 24, 26, 42, 43, 45, 47, 48, 78, 80, 81, 88, 135, 138, 139, 169, 170, 172, 173, 181, 207, 208, 224, 225, 229, 231, 232], "init_random_fram": [1, 11, 12, 14, 15, 187, 224, 225], "random": [1, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 28, 29, 34, 42, 45, 46, 47, 48, 70, 71, 81, 132, 133, 156, 181, 188, 224, 225, 231, 232], "rand_step": [1, 42, 43, 45, 46, 47, 48, 50, 52, 53, 54, 55, 57, 88, 231, 232], "reset_at_each_it": [1, 11, 12, 14, 15, 224], "split_traj": [1, 11, 12, 14, 15, 224], "pad": [1, 16, 96, 97, 98, 106, 224, 225], "along": [1, 61, 62, 71, 78, 82, 107, 111, 132, 133, 225, 230], "mask": [1, 11, 12, 14, 224, 225, 230, 231], "point": [1, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 33, 40, 41, 42, 45, 47, 48, 61, 64, 74, 81, 82, 84, 87, 108, 132, 144, 149, 185, 219, 227, 231], "boolean": [1, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 45, 126, 167, 168, 169, 170, 171, 172, 173, 222], "repres": [1, 3, 11, 12, 14, 15, 26, 42, 45, 47, 48, 68, 133, 138, 139, 160, 164, 229, 230], "valid": [1, 84, 96, 107, 126, 128, 154, 222, 231], "valu": [1, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 42, 45, 47, 48, 49, 60, 62, 70, 71, 74, 76, 78, 81, 82, 83, 84, 87, 88, 97, 98, 99, 100, 101, 103, 104, 105, 107, 109, 110, 111, 112, 115, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 185, 190, 193, 198, 200, 203, 205, 222, 224, 225, 227, 229, 231, 232], "exploration_mod": [1, 11, 14, 181, 218, 224, 225, 229], "strategi": [1, 222, 224], "reset_when_don": [1, 11, 14], "central": 2, "part": [2, 7, 22, 42, 45, 47, 48, 71, 78, 136, 176, 209, 224, 225, 229, 231], "algorithm": [2, 7, 8, 11, 12, 46, 68, 145, 155, 156, 157, 176, 190, 191, 198, 222, 224, 225, 230, 232], "wide": [2, 3, 4], "we": [2, 3, 4, 6, 8, 19, 22, 42, 43, 45, 47, 48, 74, 88, 95, 106, 219, 222, 224, 225, 227, 229, 230, 231, 232], "veri": [2, 3, 224, 225, 231, 232], "influenti": 2, "latenc": 2, "especi": [2, 3, 6, 7, 62], "larger": 2, "volum": 2, "lazymemmapstorag": [2, 218, 224, 225], "advis": [2, 231], "share": [2, 7, 36, 37, 38, 39, 43, 47, 48, 88, 123, 124, 125, 209, 227, 229, 231, 232], "due": [2, 3, 4, 231], "lower": [2, 11, 12, 14, 15, 18, 88, 116, 117, 230], "serialis": 2, "memmaptensor": 2, "well": [2, 3, 7, 11, 12, 15, 22, 39, 42, 45, 47, 48, 116, 117, 224, 225, 229, 230, 231, 232], "abil": 2, "specifi": [2, 10, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 45, 47, 48, 78, 79, 85, 95, 132, 133, 224, 229], "file": [2, 5, 6, 174, 222, 225, 228, 229, 232], "locat": [2, 6, 45, 71, 77, 105, 112, 119, 120, 230], "node": [2, 190, 193, 195, 198, 200, 203], "failur": 2, "recoveri": 2, "mean": [2, 3, 6, 14, 71, 88, 95, 101, 103, 106, 109, 118, 133, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 224, 225, 231, 232], "liststorag": [2, 24, 25, 26, 31, 182, 218], "were": [2, 6, 47, 48, 224], "found": [2, 5, 6, 9, 19, 22, 26, 42, 45, 47, 48, 88, 133, 147, 155, 224, 225, 229], "rough": 2, "benchmark": [2, 8], "http": [2, 4, 5, 6, 9, 24, 33, 61, 74, 97, 98, 99, 100, 103, 104, 109, 111, 113, 114, 116, 117, 129, 138, 145, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 164, 167, 168, 171, 190, 193, 198, 200, 203, 232], "com": [2, 4, 5, 6, 9, 232], "tree": 2, "type": [2, 22, 28, 42, 45, 46, 47, 48, 64, 74, 81, 84, 87, 88, 96, 107, 111, 126, 128, 132, 133, 140, 190, 193, 195, 198, 200, 203, 207, 224, 225, 230, 231], "1x": 2, "lazytensorstorag": [2, 218], "83x": 2, "3": [2, 3, 5, 6, 9, 11, 12, 14, 19, 20, 21, 22, 23, 42, 45, 47, 48, 61, 64, 67, 71, 74, 81, 82, 84, 87, 95, 96, 97, 98, 104, 106, 107, 109, 112, 122, 123, 124, 125, 127, 130, 132, 135, 136, 138, 141, 151, 164, 165, 166, 169, 170, 172, 173, 175, 184, 195, 222, 224, 225, 227, 230, 231, 232], "44x": 2, "parent": [2, 3, 28, 42, 62, 68, 71, 74, 83, 123, 155, 225, 230, 231, 232], "subclass": [2, 3, 42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 90, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 127, 128, 129, 131, 132, 133, 134, 142, 155, 224], "basic": [2, 46, 231], "properti": [2, 42, 45, 46, 47, 48, 84, 101, 105, 110, 115, 118, 119, 120, 229, 230], "action": [2, 3, 7, 8, 11, 12, 14, 20, 23, 28, 42, 45, 46, 47, 48, 49, 51, 58, 65, 68, 70, 84, 94, 95, 97, 98, 99, 100, 102, 103, 107, 108, 109, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 136, 138, 139, 148, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 190, 193, 195, 198, 200, 203, 205, 209, 222, 224, 225, 227, 229, 230, 231, 232], "shape": [2, 3, 17, 18, 19, 20, 21, 23, 28, 29, 42, 45, 47, 48, 49, 62, 82, 101, 102, 107, 110, 112, 115, 118, 130, 132, 135, 160, 175, 176, 185, 205, 224, 225, 227, 229, 230, 231, 232], "dtype": [2, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 33, 42, 45, 46, 47, 48, 51, 58, 59, 64, 65, 71, 74, 81, 82, 84, 87, 95, 109, 110, 111, 123, 124, 125, 127, 129, 130, 131, 132, 135, 136, 138, 139, 164, 165, 166, 190, 193, 195, 198, 200, 203, 224, 225, 227, 229, 230, 231, 232], "import": [2, 3, 5, 6, 9, 11, 12, 14, 24, 26, 33, 43, 45, 46, 47, 48, 71, 81, 88, 95, 107, 109, 112, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 146, 164, 165, 166, 178, 181, 190, 193, 195, 198, 200, 203, 205, 224, 225, 227, 229, 230, 231, 232], "match": [2, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 47, 48, 60, 61, 62, 63, 64, 65, 67, 69, 71, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 96, 101, 107, 118, 132, 133, 154, 156, 158, 186, 225, 227, 229, 230, 231, 232], "input": [2, 3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 42, 45, 46, 47, 48, 62, 64, 65, 74, 78, 83, 85, 87, 94, 96, 97, 98, 99, 100, 106, 107, 110, 111, 116, 117, 129, 132, 133, 134, 135, 144, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 187, 205, 222, 225, 230, 231, 232], "output": [2, 3, 11, 12, 14, 15, 22, 24, 25, 26, 31, 42, 45, 46, 47, 48, 74, 83, 87, 96, 97, 98, 102, 103, 106, 107, 112, 123, 126, 128, 129, 132, 133, 134, 135, 138, 139, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 164, 175, 176, 182, 224, 227, 230, 231, 232], "send": [2, 3, 225, 230, 232], "receiv": [2, 3, 22, 42, 45, 47, 48, 83, 107, 225, 227], "parallelenv": [2, 3, 11, 12, 14, 15, 48, 206, 218, 224, 225, 227, 231, 232], "creat": [2, 3, 4, 5, 6, 9, 11, 12, 15, 22, 31, 42, 43, 45, 47, 48, 49, 74, 78, 83, 84, 88, 94, 96, 97, 98, 99, 100, 104, 107, 108, 133, 148, 149, 156, 175, 188, 191, 192, 205, 207, 208, 224, 225, 229, 230, 231, 232], "commun": [2, 3, 219, 231], "spawn": [2, 3], "check": [2, 3, 4, 5, 6, 10, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 47, 48, 62, 66, 90, 132, 133, 140, 224, 225, 227, 231], "check_env_spec": [2, 3, 218], "method": [2, 3, 11, 12, 14, 15, 22, 26, 30, 36, 37, 38, 39, 42, 45, 47, 48, 61, 64, 71, 74, 75, 81, 84, 87, 95, 106, 123, 124, 125, 132, 133, 134, 140, 145, 174, 206, 222, 223, 224, 229, 230, 231], "saniti": [2, 3, 6, 90], "offer": [3, 6, 231], "handl": [3, 22, 42, 45, 47, 48, 88, 107, 185, 207, 208], "differ": [3, 11, 12, 14, 15, 22, 42, 45, 47, 48, 84, 107, 109, 138, 139, 155, 160, 164, 165, 181, 185, 186, 207, 208, 222, 224, 225, 227, 230, 231], "backend": [3, 6, 222, 224], "dm": [3, 231], "custom": [3, 4, 22, 42, 45, 47, 48, 209], "goal": [3, 224, 225], "abl": [3, 227, 230, 232], "even": [3, 7, 12, 36, 37, 38, 39, 43, 224, 230, 231], "simul": [3, 4, 6, 7, 59, 95, 109, 224], "some": [3, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 45, 47, 48, 74, 97, 133, 134, 135, 176, 187, 222, 224, 225, 229, 231, 232], "box": [3, 17, 18, 19, 20, 21, 23, 28, 29], "wrapper": [3, 15, 26, 27, 32, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 112, 126, 128, 129, 133, 137, 164, 209, 212, 213, 214, 224, 231], "under": [3, 22, 42, 45, 47, 48, 132, 133, 224, 231], "lib": [3, 4, 5, 6, 8, 9, 11, 12, 14, 43, 50, 51, 52, 53, 54, 55, 56, 57, 58, 71, 81, 88, 190, 193, 195, 198, 200, 203, 205, 224, 225, 227, 231, 232], "hope": 3, "imit": 3, "other": [3, 6, 7, 22, 36, 37, 38, 39, 42, 45, 46, 47, 48, 88, 111, 112, 133, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 190, 198, 200, 203, 207, 208, 222, 224, 225, 229, 231, 232], "torch": [3, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 33, 36, 37, 42, 43, 45, 46, 47, 48, 51, 58, 62, 64, 65, 71, 74, 77, 81, 82, 84, 87, 88, 94, 95, 96, 101, 103, 105, 106, 107, 109, 110, 111, 112, 115, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 147, 164, 165, 166, 176, 184, 190, 193, 195, 198, 200, 203, 205, 222, 224, 225, 227, 229, 230, 231, 232], "nn": [3, 11, 12, 14, 22, 42, 45, 46, 47, 48, 64, 74, 81, 84, 87, 95, 96, 97, 98, 99, 100, 102, 103, 104, 107, 109, 112, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 145, 148, 149, 164, 165, 166, 200, 203, 205, 224, 225, 227, 229, 232], "typic": [3, 7, 22, 42, 45, 47, 48, 222], "organis": 3, "allow": [3, 11, 12, 14, 15, 22, 23, 42, 45, 47, 48, 49, 94, 107, 160, 222, 224, 229, 230, 231], "gener": [3, 6, 7, 14, 31, 35, 43, 46, 71, 78, 101, 115, 122, 130, 133, 136, 137, 156, 164, 167, 168, 171, 185, 215, 224, 225, 226, 227, 229, 230, 231, 232], "arbitrari": [3, 23, 47, 48, 224, 225], "nest": [3, 19, 22, 42, 45, 47, 48, 49, 164, 165, 166, 222, 225, 230, 232], "attribut": [3, 22, 42, 45, 47, 48, 74, 80, 133, 225, 229], "batch_siz": [3, 7, 11, 12, 14, 19, 24, 25, 27, 30, 31, 32, 42, 44, 46, 51, 58, 59, 81, 95, 109, 123, 124, 125, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 176, 182, 190, 193, 195, 198, 200, 203, 224, 225, 227, 229, 230, 231, 232], "togeth": [3, 11, 12, 14, 15, 123, 124, 125, 137, 229], "expect": [3, 6, 19, 22, 28, 42, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 67, 69, 71, 74, 75, 76, 77, 80, 81, 82, 83, 85, 87, 90, 129, 132, 135, 145, 146, 154, 155, 188, 219, 222, 224, 231], "live": [3, 11, 12, 14, 15, 22, 24, 25, 26, 27, 30, 31, 32, 42, 45, 46, 47, 48, 182], "doe": [3, 24, 26, 33, 39, 110, 134, 135, 146, 154, 155, 163, 185, 222, 224, 230, 231], "actual": [3, 6, 11, 12, 15, 42, 45, 47, 48, 187, 224, 225], "respons": [3, 7, 185, 229, 231], "just": [3, 176, 222, 225, 229, 230, 231, 232], "retriev": [3, 30, 31, 32, 42, 45, 47, 48, 49, 62, 71, 94, 95, 109, 133, 146, 154, 155, 164, 165, 166, 190, 193, 195, 198, 200, 203, 209, 222, 230, 231], "care": [3, 7, 42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142, 224, 225], "map": [3, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 36, 42, 45, 47, 48, 60, 61, 62, 63, 64, 65, 67, 69, 71, 74, 75, 76, 77, 80, 81, 82, 83, 85, 87, 88, 112, 123, 124, 125, 132, 133, 135, 137, 138, 182, 218, 224, 225, 229, 230], "desir": [3, 22, 42, 45, 47, 48, 49, 64, 74, 81, 84, 87, 93, 96, 107, 132, 133, 224, 225, 230], "see": [3, 5, 6, 7, 8, 11, 12, 14, 15, 22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 89, 96, 105, 107, 110, 119, 120, 132, 133, 224, 225, 229, 230, 231], "below": [3, 6, 11, 12, 14, 15, 22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 96, 105, 107, 119, 120, 132], "parametr": [3, 111, 133, 158, 224, 229], "hardwar": 3, "observation_spec": [3, 42, 46, 61, 62, 63, 64, 65, 67, 69, 71, 74, 75, 78, 80, 81, 82, 83, 84, 85, 87, 95, 109, 188, 205, 224, 227, 231], "compositespec": [3, 42, 44, 46, 80, 81, 95, 109, 122, 126, 128, 130, 135, 218, 224, 231], "pair": [3, 22, 26, 42, 45, 47, 48, 49, 123, 133, 224, 225, 227, 230, 231], "input_spec": [3, 42, 46, 47, 48, 64, 65, 74, 83, 84, 85, 87, 95, 109, 231], "action_spec": [3, 13, 42, 45, 46, 47, 48, 51, 58, 84, 117, 122, 124, 127, 130, 131, 138, 139, 205, 224, 225, 227, 231, 232], "reward_spec": [3, 42, 46, 60, 64, 65, 74, 76, 77, 78, 83, 84, 85, 87, 95, 109, 231], "reward": [3, 11, 12, 14, 22, 28, 42, 45, 46, 47, 48, 49, 51, 58, 60, 64, 65, 74, 76, 77, 78, 83, 84, 85, 86, 87, 88, 94, 95, 109, 137, 147, 148, 151, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 181, 183, 209, 222, 224, 225, 227, 230, 231, 232], "importantli": [3, 133], "4": [3, 6, 11, 12, 14, 20, 23, 46, 52, 53, 54, 57, 61, 88, 95, 96, 97, 98, 103, 104, 106, 107, 109, 112, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 141, 174, 224, 225, 230, 231, 232], "action_s": 3, "simpli": [3, 5, 224, 225, 231], "With": [3, 222, 230, 231], "necessarili": 3, "requir": [3, 6, 7, 14, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 42, 45, 47, 48, 64, 74, 81, 84, 87, 107, 132, 134, 135, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 222, 224, 225, 229, 231], "stateless": [3, 47, 48, 83, 231], "set_se": [3, 11, 12, 14, 15, 42, 45, 46, 47, 48, 51, 58, 71, 84, 224, 231, 232], "integ": [3, 11, 12, 14, 15, 21, 22, 23, 24, 25, 26, 39, 42, 45, 47, 48, 68, 71, 80, 96, 107, 182], "seed": [3, 11, 12, 14, 15, 42, 45, 46, 47, 48, 52, 84, 185, 224], "next": [3, 7, 11, 12, 14, 19, 22, 24, 25, 26, 31, 42, 43, 45, 46, 47, 48, 49, 51, 58, 88, 94, 95, 109, 117, 137, 156, 163, 164, 165, 166, 182, 224, 225, 227, 231, 232], "determinist": [3, 22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 103, 113, 117, 122, 128, 132, 133, 224, 225, 231], "preced": [3, 106, 229], "without": [3, 6, 8, 22, 42, 45, 47, 48, 124, 156, 163, 205, 219, 224, 225, 231], "risk": 3, "overlap": 3, "consecut": [3, 129, 225, 231], "still": [3, 8, 80, 126, 154, 224, 225, 227, 231], "reproduc": 3, "max_step": [3, 42, 45, 46, 47, 48, 80, 94, 224, 225, 231, 232], "maximum": [3, 11, 12, 14, 15, 18, 22, 24, 25, 26, 36, 37, 38, 42, 45, 47, 48, 76, 80, 118, 119, 120, 130, 158, 182, 224, 225, 231], "safemodul": [3, 46, 59, 95, 108, 123, 124, 125, 126, 128, 129, 130, 133, 135, 137, 140, 141, 145, 146, 147, 150, 151, 152, 154, 155, 156, 157, 158, 163, 164, 165, 166, 181, 191, 192, 205, 218, 232], "ani": [3, 4, 7, 19, 22, 24, 25, 26, 27, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 74, 84, 88, 90, 96, 107, 111, 132, 133, 134, 135, 155, 182, 185, 212, 219, 224, 225, 231], "compat": [3, 6, 10, 22, 39, 42, 45, 47, 48, 56, 88, 140, 160, 225, 232], "better": [3, 7, 225], "intens": [3, 7], "gym3": 3, "envpool": 3, "interfac": [3, 107, 110, 229], "simultan": [3, 47, 48], "often": [3, 7, 153, 185, 231], "competit": 3, "advantag": [3, 7, 104, 145, 146, 154, 155, 157, 164, 165, 166, 167, 168, 169, 171, 172, 222, 224, 225, 231], "scale": [3, 71, 77, 103, 105, 112, 116, 117, 119, 120, 123, 124, 125, 130, 133, 135, 183, 188, 190, 198, 200, 203, 209, 224, 225, 229, 232], "varieti": 3, "its": [3, 4, 6, 11, 12, 14, 15, 22, 26, 42, 45, 46, 47, 48, 61, 83, 84, 88, 96, 126, 127, 128, 133, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 185, 205, 222, 224, 225, 229, 231], "own": [3, 11, 12, 15, 22, 42, 45, 47, 48, 225, 229], "As": [3, 42, 45, 47, 48, 133, 224, 225, 231, 232], "inherit": [3, 108, 222, 229, 230], "enjoi": 3, "exact": 3, "Of": [3, 6, 219, 231], "cours": [3, 219, 231], "correspond": [3, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 33, 42, 45, 46, 47, 48, 81, 84, 88, 129, 133, 225], "count": [3, 43, 80, 129, 181, 187, 231], "def": [3, 10, 22, 42, 43, 45, 46, 47, 48, 95, 109, 136, 138, 141, 222, 224, 225, 227, 229, 230, 231, 232], "make_env": [3, 88, 94, 191, 192, 224, 225, 231], "gymenv": [3, 4, 11, 12, 14, 15, 43, 56, 64, 71, 81, 84, 88, 190, 193, 195, 198, 200, 203, 205, 218, 224, 225, 231, 232], "pendulum": [3, 11, 12, 14, 15, 43, 54, 55, 64, 71, 81, 84, 88, 205, 225, 231, 232], "v1": [3, 11, 12, 14, 43, 71, 81, 160, 169, 170, 172, 173, 225, 231, 232], "from_pixel": [3, 52, 53, 190, 198, 200, 203, 224, 225, 231, 232], "9": [3, 6, 22, 88, 224, 225, 230], "81": 3, "0": [3, 4, 5, 6, 7, 9, 10, 21, 22, 23, 24, 26, 33, 42, 45, 46, 47, 48, 51, 58, 60, 62, 64, 67, 70, 71, 74, 81, 82, 84, 87, 88, 94, 95, 96, 97, 98, 100, 103, 105, 107, 109, 110, 111, 112, 116, 117, 118, 119, 120, 126, 128, 129, 132, 135, 142, 145, 146, 150, 151, 152, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 176, 183, 185, 205, 209, 222, 224, 225, 227, 228, 229, 230, 231, 232], "must": [3, 6, 11, 12, 14, 15, 19, 22, 36, 37, 38, 39, 42, 43, 45, 47, 48, 68, 71, 81, 84, 96, 107, 132, 133, 138, 139, 167, 168, 169, 170, 171, 172, 173, 176, 181, 185, 186, 190, 193, 195, 198, 200, 203, 224, 225, 227, 229, 230, 232], "print": [3, 5, 6, 11, 12, 14, 19, 20, 22, 23, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 62, 65, 71, 81, 82, 88, 94, 96, 107, 112, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 138, 139, 141, 190, 193, 195, 198, 200, 203, 205, 222, 224, 225, 227, 229, 230, 231, 232], "b": [3, 6, 16, 19, 110, 111, 164, 165, 166, 175, 229, 230], "c": [3, 5, 6, 19, 190, 193, 195, 198, 200, 203, 230], "d": [3, 24, 33, 133, 230, 232], "get": [3, 5, 6, 7, 39, 43, 47, 48, 62, 65, 71, 82, 88, 122, 128, 133, 167, 168, 171, 216, 224, 225, 229, 231, 232], "forc": [3, 5, 6, 225], "variou": [3, 11, 12, 14, 15, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 207, 208, 224, 225, 231], "reset_work": 3, "fals": [3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 45, 46, 47, 48, 49, 51, 52, 55, 58, 62, 64, 70, 71, 74, 77, 81, 82, 84, 87, 88, 95, 96, 97, 107, 109, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 147, 148, 149, 150, 151, 152, 156, 157, 158, 160, 164, 165, 166, 169, 170, 172, 173, 178, 179, 181, 182, 183, 185, 190, 193, 195, 198, 200, 203, 209, 222, 224, 225, 227, 229, 230, 231, 232], "field": [3, 11, 12, 14, 15, 19, 22, 42, 45, 46, 47, 48, 51, 58, 81, 84, 95, 109, 123, 124, 125, 127, 129, 130, 131, 132, 135, 136, 138, 139, 188, 190, 193, 195, 198, 200, 203, 219, 225, 227, 229, 230, 231, 232], "bool": [3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 58, 62, 70, 71, 74, 77, 81, 82, 84, 87, 88, 94, 95, 96, 97, 98, 105, 107, 109, 110, 111, 119, 120, 126, 129, 132, 133, 134, 135, 140, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 164, 165, 166, 169, 170, 172, 173, 174, 175, 178, 179, 181, 182, 183, 185, 190, 193, 195, 198, 200, 203, 209, 225, 227, 231, 232], "500": [3, 185, 224, 225, 231, 232], "uint8": [3, 82, 225, 231, 232], "none": [3, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 51, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 104, 106, 107, 108, 109, 110, 111, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 151, 152, 157, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 180, 181, 182, 185, 188, 190, 191, 192, 193, 195, 198, 200, 203, 205, 207, 208, 209, 210, 211, 212, 213, 222, 224, 225, 229, 230, 231, 232], "is_shar": [3, 11, 12, 14, 19, 46, 51, 58, 81, 88, 95, 109, 123, 124, 125, 127, 129, 130, 131, 132, 135, 136, 138, 139, 190, 193, 195, 198, 200, 203, 225, 227, 229, 230, 231, 232], "note": [3, 11, 12, 14, 15, 22, 42, 45, 47, 48, 88, 129, 133, 224, 225, 227, 229, 230, 231], "launch": 3, "quit": [3, 224, 225, 231], "mani": [3, 146, 154, 155, 156, 225, 230, 231], "start": [3, 4, 11, 43, 94, 180, 224, 225, 231], "bottleneck": [3, 7], "why": [3, 224, 231], "so": [3, 5, 6, 9, 22, 42, 45, 47, 48, 88, 134, 135, 224, 231], "onc": [3, 6, 11, 12, 14, 15, 22, 42, 45, 47, 48, 84, 126, 128, 222, 224, 225, 231], "great": [3, 6, 7, 230, 232], "speedup": [3, 7, 231], "anoth": [3, 7, 42, 45, 47, 48, 83, 107, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 224, 227, 230, 231], "thing": [3, 6, 7, 225, 231], "misspecifi": 3, "caus": [3, 6, 7], "breakag": 3, "prealloc": 3, "In": [3, 4, 6, 7, 9, 10, 11, 12, 15, 22, 42, 45, 47, 48, 64, 74, 81, 83, 84, 87, 105, 107, 117, 119, 120, 132, 135, 144, 186, 207, 208, 209, 224, 225, 227, 230, 231, 232], "obj": [3, 132, 133, 134], "rais": [3, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 45, 47, 48, 66, 84, 90, 141, 224, 232], "assert": [3, 5, 17, 18, 19, 20, 21, 23, 28, 29, 45, 88, 90, 94, 112, 164, 165, 166, 176, 184, 224, 225, 227, 229, 230, 231], "mismatch": [3, 230], "serialenv": [3, 218, 231], "mostli": [3, 15, 231], "purpos": [3, 6, 205, 230, 231], "want": [3, 5, 6, 7, 224, 230, 231, 232], "assess": [3, 224], "subprocess": [3, 43], "case": [3, 4, 6, 7, 10, 11, 12, 14, 15, 19, 24, 26, 33, 42, 45, 47, 48, 84, 107, 132, 133, 135, 144, 176, 186, 207, 208, 209, 222, 224, 229, 230, 231, 232], "raw": [3, 105, 119, 120], "treat": 3, "To": [3, 5, 6, 22, 31, 42, 45, 47, 48, 88, 123, 124, 125, 129, 185, 224, 225, 229, 231, 232], "logic": 3, "torchvis": [3, 231, 232], "transformedenv": [3, 43, 64, 70, 71, 81, 83, 88, 190, 193, 195, 198, 200, 203, 218, 224, 225, 227, 231, 232], "primit": [3, 224, 225], "built": [3, 4, 6, 201, 205, 206, 209, 231], "base_env": [3, 81, 224, 225, 231, 232], "totensorimag": [3, 195, 218, 225, 231, 232], "in_kei": [3, 11, 12, 14, 46, 60, 61, 62, 63, 65, 67, 69, 71, 72, 74, 75, 76, 77, 78, 82, 83, 87, 88, 95, 109, 122, 123, 124, 125, 130, 132, 133, 135, 136, 140, 141, 147, 148, 164, 165, 166, 174, 175, 200, 203, 205, 224, 225, 227, 229, 231, 232], "resiz": [3, 218, 225, 231], "64": [3, 97, 98, 104, 224, 225, 227, 231, 232], "By": [3, 23, 45, 47, 48, 133, 181, 209, 230, 231], "now": [3, 6, 224, 227, 229, 230, 231], "appar": [3, 178], "bring": [3, 231], "signific": [3, 4, 7, 231], "kind": [3, 28, 94], "consult": 3, "achiev": [3, 22, 42, 45, 47, 48, 222, 229, 230, 231], "interest": [3, 47, 48, 133, 231], "abov": [3, 6, 22, 42, 45, 47, 48, 105, 119, 120, 144, 222, 224, 225, 231], "resize_par": 3, "sinc": [3, 4, 6, 22, 42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142, 224, 225, 231, 232], "out_kei": [3, 11, 12, 14, 46, 47, 48, 60, 62, 67, 72, 74, 75, 76, 78, 82, 83, 87, 95, 109, 122, 123, 124, 125, 130, 132, 133, 135, 136, 138, 139, 140, 141, 164, 165, 166, 181, 205, 224, 227, 229, 231, 232], "keyword": [3, 22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132, 133, 206, 224, 229, 231], "easi": [3, 4, 225, 230, 231], "root": [3, 105, 119, 120, 231], "graph": [3, 7, 161, 162], "inv": 3, "appli": [3, 22, 30, 31, 32, 42, 45, 47, 48, 68, 84, 119, 164, 180, 222, 224, 225, 229, 231, 232], "revers": 3, "order": [3, 14, 22, 23, 30, 31, 32, 42, 45, 47, 48, 84, 132, 134, 135, 229], "chain": [3, 31, 64, 96, 135, 231], "taken": [3, 42, 45, 47, 48, 225], "includ": [3, 6, 8, 22, 36, 37, 38, 39, 42, 45, 46, 47, 48, 84, 88, 187, 222, 224, 225, 230, 231], "invers": [3, 143], "through": [3, 4, 7, 14, 47, 48, 107, 133, 134, 135, 142, 224, 225, 227, 229, 231], "in_keys_inv": [3, 65, 83, 224, 227, 231], "append_transform": [3, 30, 31, 32, 74, 81, 224, 231, 232], "doubletofloat": [3, 190, 193, 198, 200, 203, 218, 224, 227], "float32": [3, 11, 12, 14, 19, 24, 28, 33, 46, 51, 58, 65, 71, 81, 82, 95, 109, 123, 124, 125, 127, 129, 130, 131, 132, 135, 136, 138, 139, 190, 193, 195, 198, 200, 203, 225, 227, 229, 230, 231, 232], "float64": [3, 22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132, 227, 231], "regist": [3, 22, 23, 42, 45, 47, 48, 64, 74, 79, 83, 84, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142, 222, 229], "log": [3, 7, 101, 115, 120, 133, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 178, 179, 181, 185, 205, 222, 225, 229, 232], "tool": [4, 231], "context": [4, 7, 22, 42, 43, 45, 47, 48, 110, 161, 162, 164, 167, 168, 171, 181, 224, 225, 229], "real": [4, 133], "world": [4, 46, 137, 151, 231], "system": 4, "robot": [4, 6, 74, 87], "game": 4, "adopt": [4, 224, 231], "interact": [4, 6, 7, 14, 133, 231], "histor": 4, "wa": [4, 6, 42, 45, 47, 48, 84, 153, 159, 224, 225, 227, 232], "ceas": 4, "maintain": [4, 8], "fork": 4, "gymnasium": 4, "farama": 4, "foundat": 4, "document": [4, 6, 22, 42, 45, 47, 48, 84, 232], "further": 4, "detail": [4, 5, 6, 22, 42, 45, 47, 48, 84, 138, 145, 149, 155, 193, 219, 227, 229, 230], "usag": [4, 6, 158], "known": [4, 6, 7, 224], "gone": 4, "bc": [4, 232], "break": [4, 11, 12, 14, 22, 42, 45, 47, 48, 88, 224, 225, 229, 232], "chang": [4, 6, 22, 36, 37, 38, 39, 42, 45, 47, 48, 84, 88, 224, 230, 231], "face": [4, 7, 8, 225, 231], "modif": [4, 19, 22, 42, 45, 47, 48, 224, 230], "practic": [4, 7, 105, 119, 120, 144, 219, 225, 231], "torchrl": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 226, 227, 228, 229, 230], "against": [4, 6, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 45, 47, 48, 90, 132, 133], "13": [4, 9, 10, 229], "between": [4, 11, 12, 14, 15, 22, 42, 45, 47, 48, 70, 76, 82, 84, 90, 96, 107, 133, 151, 152, 154, 160, 164, 181, 185, 224, 225, 229, 230, 231], "howev": [4, 6, 22, 42, 45, 47, 48, 78, 80, 84, 224, 225, 230, 231], "around": [4, 6, 15, 26, 27, 32, 46, 133, 164, 231], "construct": [4, 22, 42, 45, 47, 48, 117, 133, 185, 190, 198, 229, 231], "automat": [4, 42, 45, 47, 48, 71, 122, 130, 225, 232], "wrap": [4, 11, 12, 14, 15, 22, 42, 45, 47, 48, 90, 123, 124, 125, 137, 224, 225, 229, 231], "best": [4, 8, 225, 232], "gymwrapp": [4, 45, 218, 232], "If": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 42, 43, 45, 46, 47, 48, 49, 62, 63, 70, 74, 78, 80, 83, 84, 87, 88, 96, 106, 107, 126, 128, 129, 132, 133, 134, 135, 141, 142, 144, 151, 163, 164, 165, 166, 172, 173, 180, 182, 185, 186, 188, 190, 198, 200, 203, 205, 209, 219, 224, 225, 227, 229, 230, 231, 232], "you": [4, 5, 6, 7, 9, 22, 42, 45, 47, 48, 88, 219, 224, 225, 227, 230, 231, 232], "feel": [4, 219, 232], "free": [4, 6, 145, 151, 155, 222, 232], "gladli": 4, "instruct": [5, 9], "prepar": 5, "conda": [5, 6, 219], "assum": [5, 19, 23, 32, 45, 47, 48, 74, 78, 81, 87, 106, 169, 170, 172, 173, 175, 224, 225, 227], "let": [5, 6, 22, 42, 45, 47, 48, 181, 224, 225, 227, 229, 230, 231, 232], "n": [5, 6, 17, 20, 22, 23, 42, 45, 47, 48, 61, 109, 133, 145, 163, 222, 224, 225, 230, 231], "7": [5, 9, 20, 23, 95, 96, 106, 107, 109, 224, 225, 232], "cmake": 5, "14": [5, 10, 71, 224], "activ": [5, 6, 8, 96, 103, 107, 155, 232], "sim": 5, "bullet": 5, "physic": [5, 6, 222, 224], "headless": [5, 6], "mode": [5, 14, 22, 42, 45, 47, 48, 84, 88, 91, 93, 101, 105, 115, 118, 119, 120, 133, 181, 224, 225, 231, 232], "cluster": [5, 6, 7, 219], "withbullet": 5, "forg": [5, 6], "aihabitat": 5, "nightli": 5, "y": [5, 6, 106, 141], "git": [5, 6, 9], "facebookresearch": 5, "subdirectori": 5, "reduc": [5, 20], "verbos": 5, "export": 5, "magnum_log": 5, "quiet": 5, "habitat_sim_log": 5, "remov": [5, 22, 42, 45, 47, 48, 79, 224, 231], "command": [5, 6, 9, 231], "more": [5, 7, 11, 12, 14, 15, 22, 24, 25, 26, 27, 30, 31, 32, 42, 45, 47, 48, 89, 107, 110, 112, 126, 128, 132, 138, 145, 149, 155, 164, 167, 168, 171, 180, 182, 193, 219, 222, 224, 225, 227, 229, 230, 231, 232], "readm": [5, 6], "md": [5, 6], "habitatenv": [5, 218], "_has_habitat": 5, "_env": [5, 231], "available_env": [5, 50, 51, 52, 53, 54, 55, 57, 58, 231], "startswith": 5, "importerror": [5, 6, 9], "usr": [5, 6, 9], "x86_64": [5, 6], "linux": [5, 6], "gnu": [5, 6], "libopengl": [5, 6], "undefin": [5, 6, 9, 22, 42, 45, 47, 48, 84], "symbol": [5, 6, 9], "_glapi_tls_curr": [5, 6], "solut": [5, 6, 7, 8, 219, 222, 232], "link": [5, 6], "right": [5, 6, 106, 224, 225, 231], "replac": [5, 6, 22, 225], "path": [5, 6, 22, 36, 42, 45, 47, 48, 74, 87, 109, 185, 222], "mujoco_env": [5, 6], "proper": [5, 6], "name": [5, 6, 10, 22, 42, 45, 47, 48, 52, 78, 84, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 179, 180, 190, 193, 195, 198, 200, 203, 210, 212, 213, 214, 216, 222, 224, 225, 229, 231], "libglvnd": [5, 6], "glx": [5, 6], "cos7": [5, 6], "reinstal": [5, 6], "xvfbwrapper": [5, 6], "config": [5, 6, 188, 190, 191, 192, 193, 195, 198, 200, 201, 203, 206], "var": [5, 6, 22, 42, 45, 47, 48, 84], "ld_preload": [5, 6], "sysroot": [5, 6], "lib64": [5, 6], "libgldispatch": [5, 6], "offici": 6, "repositori": 6, "stand": [6, 123, 124, 125, 227, 231], "joint": [6, 225], "dynam": 6, "contact": 6, "engin": 6, "facilit": [6, 26, 73, 74, 87, 123, 124, 125, 224], "develop": [6, 232], "biomechan": 6, "graphic": 6, "anim": 6, "machin": [6, 22], "area": 6, "demand": [6, 231], "fast": [6, 8, 51, 156, 224, 225], "accur": [6, 224], "articul": 6, "recent": [6, 225, 229, 231, 232], "acquir": [6, 224], "access": [6, 7, 22, 42, 45, 47, 48, 49, 74, 209, 219, 230], "whomev": 6, "licenc": 6, "incorpor": [6, 224], "make": [6, 22, 39, 42, 45, 47, 48, 55, 58, 71, 74, 90, 94, 110, 133, 155, 192, 209, 224, 225, 227, 229, 230, 231, 232], "relianc": 6, "obsolet": 6, "seri": [6, 7, 23, 40, 41, 48, 70, 83, 175, 231], "keep": [6, 12, 74, 87, 88, 129, 178, 185, 225, 230, 231, 232], "legaci": 6, "capabl": [6, 222, 224, 227, 231], "glfw": 6, "osmesa": 6, "egl": 6, "hand": [6, 224], "gpu": [6, 7, 22, 42, 45, 47, 48, 231], "our": [6, 7, 224, 225, 227, 229, 230, 232], "advic": [6, 231], "sudo": [6, 219], "enabl": [6, 7, 129, 181], "apt": 6, "libglfw3": 6, "libglew2": 6, "libgl1": 6, "mesa": 6, "libosmesa6": 6, "via": [6, 7, 47, 83, 87, 147, 222, 224, 231], "awar": [6, 36, 37, 38, 39], "fact": [6, 7, 225, 231], "indent": 6, "workflow": [6, 123, 124, 125], "glew": 6, "mesalib": 6, "anaconda": 6, "libgl": 6, "cos6": 6, "menpo": 6, "glfw3": 6, "both": [6, 22, 42, 43, 45, 47, 48, 84, 96, 107, 123, 124, 125, 181, 224, 229, 231], "tell": 6, "variabl": [6, 7, 20, 23, 109, 123, 124, 125, 156, 222, 229], "mujoco_gl": 6, "pyopengl_platform": 6, "deactiv": 6, "pre": [6, 22, 37, 42, 45, 47, 48, 74, 87, 231], "binari": [6, 17, 23, 60, 138, 139], "releas": [6, 9, 22, 42, 45, 47, 48, 84, 232], "need": [6, 7, 9, 22, 39, 42, 45, 47, 48, 64, 74, 79, 83, 84, 85, 86, 87, 88, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 110, 112, 113, 114, 116, 117, 126, 128, 129, 132, 142, 144, 156, 163, 175, 185, 209, 224, 229, 230, 231, 232], "These": [6, 231], "instead": [6, 7, 20, 22, 42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142, 209, 224, 225, 229, 231], "refer": [6, 22, 42, 45, 47, 48, 84, 88, 95, 103, 109, 113, 114, 116, 117, 138, 145, 149, 150, 151, 152, 155, 164, 167, 168, 171, 193, 225, 229, 232], "setup": 6, "mkdir": 6, "cd": 6, "here": [6, 7, 8, 9, 224, 225, 227, 229, 230, 231, 232], "tag": [6, 175, 209, 212], "earlier": [6, 11, 12, 14, 15, 224], "roboti": 6, "u": [6, 9, 224, 229, 231, 232], "download": [6, 9, 74, 87, 224, 225, 226, 227, 229, 230, 231, 232], "html": 6, "wget": 6, "mujoco210": 6, "tar": 6, "gz": 6, "xf": 6, "charg": 6, "obtain": [6, 45, 95, 224, 225], "mjkei": 6, "txt": 6, "mjlib_path": 6, "home": 6, "bin": 6, "libmujoco210": 6, "ld_library_path": 6, "mujoco_py_mujoco_path": 6, "mujoco_py_mjkey_path": 6, "reload": 6, "recommend": [6, 230], "hard": [6, 153, 225, 231], "later": [6, 100, 133, 224, 225], "try": [6, 7, 141, 225, 230, 231, 232], "nativ": [6, 8, 42, 45, 47, 48, 61, 229], "local": [6, 9, 14, 22, 30, 42, 45, 47, 48, 84, 212], "modifi": [6, 7, 22, 42, 45, 47, 48, 64, 74, 81, 83, 84, 87, 129, 132, 187, 190, 198, 200, 203, 224, 229], "nvidia": 6, "driver": 6, "older": 6, "hack": 6, "line": [6, 22, 42, 45, 47, 48, 225, 229, 232], "adatp": 6, "script": [6, 190, 193, 195, 198, 200, 203, 205, 209, 222, 224, 225, 227, 229, 230, 231, 232], "go": [6, 229, 231], "unnot": 6, "until": 6, "complet": [6, 8, 45, 219, 225, 227], "mujoco_pi": 6, "trigger": 6, "pipelin": 6, "give": [6, 46, 219, 224, 225, 232], "troubleshoot": 6, "gl": 6, "h": [6, 63, 75, 82, 109, 175], "eglshim": 6, "10": [6, 19, 43, 46, 82, 95, 106, 109, 128, 129, 156, 157, 158, 164, 165, 166, 176, 222, 224, 225, 228, 229, 230, 231, 232], "fatal": 6, "No": [6, 229], "directori": [6, 36, 212, 222], "sure": [6, 39, 94, 209, 224, 229, 230, 231, 232], "glu": 6, "38": 6, "disappear": [6, 227], "filenotfounderror": 6, "errno": 6, "patchelf": 6, "fatalerror": 6, "gladloadgl": 6, "mj_env": 6, "python3": [6, 9], "8": [6, 51, 96, 97, 98, 104, 107, 123, 124, 125, 130, 132, 135, 229, 231, 232], "site": 6, "__init__": [6, 46, 95, 109, 136, 138, 141, 222, 229, 231], "912": 6, "glfwerror": 6, "65537": 6, "sovl": 6, "myscript": 6, "cymj": 6, "linuxgpuextensionbuild": 6, "filenam": 6, "runtimeerror": [6, 7, 22, 42, 45, 47, 48, 84, 224, 230, 231], "job": [6, 230], "schedul": [6, 181], "slurm": 6, "mjrendercontext": 6, "pyx": 6, "46": 6, "114": 6, "_setup_opengl_context": 6, "opengl_context": 6, "130": 6, "offscreenopenglcontext": 6, "fail": 6, "opengl": 6, "global": [6, 133, 222, 224, 229], "cuda_visible_devic": 6, "id": [6, 16, 129, 156, 200, 215], "slurm_step_gpu": 6, "enviro": [6, 9], "imag": [6, 52, 63, 74, 82, 87, 107, 225, 230, 231], "black": 6, "read": [6, 11, 12, 14, 15, 36, 37, 38, 39, 45, 47, 48, 49, 83, 115, 123, 124, 125, 132, 133, 135, 137, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 164, 165, 166, 175, 185, 190, 198, 200, 203, 224, 225, 227, 229, 231], "miss": [6, 10, 19, 22, 42, 45, 47, 48, 84, 134, 135, 219, 232], "onscreen": 6, "101": 6, "displai": [6, 185, 222, 225], "correctli": [6, 22, 42, 45, 47, 48], "scratch": [7, 224, 225], "loop": [7, 11, 12, 14, 15, 45, 94, 185, 222, 224, 227, 230], "sketch": [7, 222], "ob": [7, 19, 65, 71, 82, 136, 164, 165, 166, 224, 227, 231, 232], "_": [7, 43, 62, 65, 71, 82, 88, 132, 144, 164, 165, 166, 224, 225, 229, 232], "rang": [7, 10, 20, 43, 88, 94, 154, 222, 224, 225, 229, 230, 232], "n_training_step": 7, "datapoint": 7, "onlin": [7, 11, 15, 145, 155, 176, 209], "n_data_per_train": 7, "no_grad": [7, 22, 42, 45, 47, 48, 224, 225], "append": [7, 30, 31, 32, 43, 94, 224, 225, 230, 232], "replay_buff": [7, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 205, 224, 225], "extend": [7, 24, 25, 26, 27, 30, 31, 32, 40, 41, 182, 222, 224, 225, 232], "loss": [7, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 180, 185, 189, 194, 196, 197, 199, 200, 202, 205, 222, 224, 225, 230, 232], "offlin": [7, 11, 12, 14, 15, 222, 232], "loss_fn": [7, 232], "backward": [7, 22, 42, 45, 47, 48, 88, 224, 225, 230], "zero_grad": [7, 22, 42, 45, 47, 48, 222, 224, 225, 230], "backpropag": [7, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158], "decor": [7, 10], "differenti": [7, 164, 165, 166, 224], "pai": [7, 225], "attent": [7, 225, 229], "understand": [7, 224, 225], "denomin": 7, "probabl": [7, 101, 115, 120, 133, 225, 229, 232], "artifact": 7, "numer": [7, 88, 105, 119, 120, 132, 133, 230, 231], "misconcept": 7, "directli": [7, 46, 209, 225], "save": [7, 22, 42, 45, 47, 48, 174, 185, 222, 225], "alreadi": [7, 22, 42, 45, 47, 48, 133, 224, 225], "freed": 7, "appear": [7, 23], "compuat": 7, "twice": [7, 158], "fix": [7, 81, 158, 231], "retain_graph": 7, "lead": [7, 9, 10, 19, 105, 119, 120, 232], "discuss": [7, 8], "inplac": [7, 22, 42, 45, 47, 48, 224], "flag": [7, 167, 168, 169, 170, 171, 172, 173], "reason": [7, 22, 42, 45, 47, 48, 74, 224, 225], "updat": [7, 11, 12, 14, 15, 22, 24, 26, 33, 42, 45, 46, 47, 48, 84, 86, 88, 95, 109, 129, 132, 133, 145, 153, 155, 159, 164, 165, 166, 181, 185, 186, 191, 192, 204, 205, 222, 224, 225, 229, 231, 232], "critic": [7, 123, 145, 146, 154, 155, 157, 158, 229], "accumul": 7, "onto": [7, 23, 126, 128, 132, 133], "separ": [7, 11, 12, 15, 16, 147, 156, 158, 224, 231], "exclud": [7, 47, 48, 224], "forward": [7, 22, 42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 110, 112, 113, 114, 116, 117, 126, 128, 129, 132, 133, 136, 138, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 164, 165, 166, 224, 225, 229, 232], "submodul": [7, 22, 42, 45, 47, 48], "param": [7, 22, 42, 45, 46, 47, 48, 101, 118, 130, 131, 132, 135, 136, 138, 139, 159, 162, 164, 165, 166, 193, 224, 225, 229, 232], "grad": [7, 22, 42, 45, 47, 48, 225], "whose": [7, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 45, 47, 48, 64, 74, 81, 84, 87, 112, 132, 224], "norm": [7, 185, 225], "strictli": [7, 22, 42, 45, 47, 48, 84], "neg": [7, 11, 12, 14, 15, 24, 26, 33, 150, 224], "ask": [7, 231], "core": [7, 190, 193, 195, 198, 200, 203, 222, 232], "much": [7, 24, 26, 33, 154, 155, 230, 231], "upon": 7, "factor": [7, 22, 105, 111, 119, 120, 129, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 224, 225, 231], "fit": [7, 10, 71, 222], "everi": [7, 11, 12, 15, 19, 22, 23, 39, 42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 88, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142, 185, 222, 224, 225, 230], "bottlneck": 7, "affect": [7, 22, 42, 45, 47, 48, 83, 84], "brax": [7, 50, 51, 231], "jax": 7, "improperli": 7, "item": [7, 11, 26, 66, 147, 148, 176, 222, 224, 225, 230], "underli": 7, "manipul": [7, 74, 231], "tedeiou": 7, "priorit": [7, 24, 26, 33, 147, 148, 156, 158, 224, 225], "amount": [7, 47, 48, 129], "isn": [7, 132], "contigu": [7, 230, 232], "costli": 7, "concaten": [7, 21, 61, 62, 71, 83, 107, 135, 224, 225, 230, 231], "constitut": 7, "plain": 7, "profil": 7, "indic": [7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 45, 47, 48, 62, 80, 81, 96, 107, 129, 142, 182, 188, 209, 219, 222, 224, 225, 229, 230, 231], "fulli": [7, 22, 42, 45, 47, 48, 225], "frequent": 7, "techniqu": [7, 225], "target": [7, 22, 42, 43, 45, 47, 48, 83, 132, 133, 147, 148, 149, 152, 153, 154, 156, 158, 159, 163, 164, 165, 166, 187, 204, 205, 222, 224, 225], "program": [7, 231], "spin": [8, 231], "hug": 8, "syllabu": 8, "lectur": 8, "awesom": [8, 230], "curat": 8, "reddit": 8, "reagent": 8, "product": [8, 207, 208], "orient": [8, 231], "stabl": [8, 9, 224], "baselines3": 8, "tf": 8, "agent": [8, 30, 111], "bandit": 8, "tensorflow": 8, "kera": 8, "acm": 8, "framework": [8, 46, 231, 232], "dopamin": 8, "salina": 8, "flexibl": [8, 222, 229, 231], "simpl": [8, 22, 23, 42, 45, 47, 48, 97, 133, 157, 164, 224, 225, 230, 231], "sequenti": [8, 22, 42, 45, 47, 48, 134, 135, 229, 230, 231], "tianshou": 8, "eleg": 8, "rlpyt": 8, "rllib": 8, "industri": [8, 232], "grade": 8, "factori": 8, "throughput": 8, "cherri": 8, "jaxrl": 8, "space": [8, 23, 28, 114, 126, 128, 129, 132, 133, 135, 138, 139, 224, 231], "mbrl": [8, 46], "rlmeta": 8, "light": 8, "elegantrl": 8, "cloud": 8, "mtrl": 8, "baselin": [8, 225], "689": 9, "dist": 9, "_torchrl": 9, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 9, "colab": 9, "notebook": [9, 224, 225, 226, 227, 229, 230, 231, 232], "24": 9, "11": [9, 20, 23, 43, 82, 95, 109, 224], "2022": [9, 232], "12": [9, 224, 230], "pip": [9, 231, 232], "solv": [9, 219, 224, 225], "pip3": 9, "extra": [9, 22, 42, 45, 47, 48, 88], "url": 9, "org": [9, 24, 33, 61, 74, 97, 98, 99, 100, 103, 104, 109, 111, 113, 114, 116, 117, 129, 138, 145, 149, 150, 151, 152, 153, 155, 157, 158, 159, 164, 167, 168, 171, 190, 193, 198, 203], "whl": 9, "latest": [9, 232], "There": [9, 222, 225, 231], "upgrad": 9, "previou": [9, 22, 117, 224, 229, 231], "relas": 9, "lib_version_her": 9, "module_nam": 10, "str": [10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 32, 36, 42, 44, 45, 47, 48, 52, 59, 60, 61, 62, 63, 64, 65, 67, 69, 71, 72, 74, 75, 76, 77, 78, 82, 83, 84, 87, 88, 91, 93, 95, 96, 97, 98, 99, 100, 104, 106, 107, 108, 109, 110, 111, 112, 122, 126, 127, 128, 129, 130, 132, 133, 136, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 174, 175, 179, 180, 181, 184, 188, 190, 193, 198, 200, 201, 203, 209, 210, 211, 212, 213, 214, 215, 216, 224], "from_vers": 10, "to_vers": 10, "explicit": [10, 106, 224, 225], "intersect": 10, "longer": [10, 225], "fun": [10, 229, 230], "self": [10, 22, 26, 42, 45, 46, 47, 48, 64, 74, 81, 84, 87, 95, 109, 126, 128, 132, 136, 138, 141, 222, 229, 230, 232], "x": [10, 16, 19, 22, 82, 96, 102, 104, 106, 107, 109, 138, 141, 142, 144, 167, 168, 169, 170, 171, 172, 173, 175, 185, 225, 229, 232], "doesn": 10, "create_env_fn": [11, 12, 14, 15, 43, 47, 48, 224, 232], "sequenc": [11, 12, 14, 15, 19, 21, 24, 25, 27, 31, 40, 41, 60, 61, 62, 63, 65, 67, 69, 71, 72, 75, 76, 77, 78, 82, 83, 88, 96, 101, 107, 115, 122, 130, 133, 134, 135, 136, 174, 175, 180, 182, 184, 185, 190, 198, 200, 203, 225, 227, 229, 231], "callabl": [11, 12, 14, 15, 22, 24, 25, 26, 27, 31, 42, 43, 45, 46, 47, 48, 144, 182, 191, 192, 207, 208, 209], "union": [11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 32, 33, 42, 45, 47, 48, 59, 64, 71, 74, 77, 84, 87, 88, 96, 97, 98, 99, 100, 101, 104, 106, 107, 110, 111, 115, 118, 119, 120, 129, 130, 132, 133, 134, 140, 141, 143, 148, 149, 153, 156, 158, 159, 164, 165, 166, 190, 191, 192, 193, 198, 200, 201, 203, 205, 206, 207, 208, 209], "tensordictbas": [11, 12, 14, 15, 16, 19, 22, 26, 30, 32, 42, 44, 45, 47, 48, 49, 61, 64, 70, 78, 79, 80, 81, 83, 85, 86, 88, 89, 94, 95, 108, 109, 126, 128, 129, 132, 133, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 163, 164, 165, 166, 185], "total_fram": [11, 12, 14, 15, 185, 187, 205, 222, 224, 225, 232], "int": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 52, 59, 61, 62, 63, 64, 67, 68, 70, 71, 74, 75, 79, 80, 84, 85, 87, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 116, 117, 118, 119, 126, 128, 129, 131, 132, 133, 138, 139, 145, 146, 147, 150, 151, 152, 154, 155, 156, 158, 174, 175, 176, 177, 178, 181, 182, 185, 186, 190, 193, 198, 200, 201, 203, 207, 208, 209], "create_env_kwarg": [11, 12, 14, 15, 43, 47, 48, 224], "dict": [11, 12, 14, 15, 19, 20, 22, 31, 42, 43, 45, 47, 48, 84, 88, 96, 97, 98, 99, 100, 104, 106, 107, 133, 181, 191, 192, 193, 200, 203, 207, 208, 209, 212, 216, 231], "200": [11, 12, 14, 15, 22, 42, 45, 47, 48, 97, 98, 103, 116, 117, 224], "postproc": [11, 12, 14, 15, 224, 225], "pin_memori": [11, 14, 15, 24, 25, 26, 27, 31, 47, 48, 73, 182, 224, 232], "init_with_lag": [11, 12, 14, 15], "given": [11, 12, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 45, 46, 47, 48, 64, 71, 74, 81, 84, 87, 94, 95, 103, 109, 129, 132, 133, 134, 135, 138, 139, 144, 147, 148, 163, 164, 165, 166, 177, 181, 205, 222, 224, 225, 229, 231], "datacollector": [11, 12, 14, 15, 133], "synchron": [11, 207, 208], "recept": 11, "safe": [11, 12, 17, 18, 19, 20, 21, 23, 28, 29, 126, 129, 132, 133, 140, 224, 232], "env_mak": [11, 12, 14, 205, 231], "linear": [11, 12, 14, 22, 42, 45, 46, 47, 48, 64, 74, 81, 84, 87, 95, 96, 107, 109, 110, 111, 112, 116, 117, 122, 123, 124, 125, 128, 129, 130, 131, 132, 135, 136, 138, 139, 141, 164, 165, 166, 205, 227, 229, 232], "2000": [11, 12, 14, 224], "50": [11, 12, 14, 228], "enumer": [11, 12, 14, 22, 42, 45, 47, 48, 224, 225, 232], "step_count": [11, 12, 14, 80, 224, 225], "traj_id": [11, 12, 14, 16, 224], "shutdown": [11, 12, 14, 15, 224, 232], "del": [11, 12, 14, 224, 232], "bound": [11, 12, 14, 15, 18, 19, 22, 42, 45, 47, 48, 88, 116, 117, 129, 132, 133, 231], "total": [11, 12, 14, 15, 45, 146, 154, 155, 176, 178, 181, 185, 187, 188, 224, 225, 227, 228, 229, 230, 231, 232], "greater": [11, 12, 15, 224, 225, 232], "close": [11, 12, 14, 15, 45, 146, 154, 155, 224, 232], "signal": [11, 12, 15, 224], "sent": [11, 12, 15, 36, 37, 47, 48, 88, 225, 230], "server": [11, 12, 15], "per": [11, 12, 14, 15, 47, 103, 185, 207, 208, 224, 225, 232], "span": [11, 12, 14, 15], "unless": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 45, 47, 48, 229], "traje": [11, 12], "tori": [11, 12], "n_steps_max": [11, 12, 14, 15, 22, 224], "track": [11, 12, 14, 15, 78, 88, 129, 178, 212, 224, 225, 230], "independ": [11, 12, 14, 15, 83, 158, 222, 224, 232], "ignor": [11, 12, 14, 15, 22, 42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142, 229, 230, 231], "length": [11, 12, 14, 15, 17, 47, 48, 95, 96, 97, 99, 102, 107, 109, 132, 176, 224, 225, 230, 231], "mainli": [11, 12, 14, 15], "postprocessor": [11, 12, 15], "format": [11, 12, 14, 15, 22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132, 231], "accord": [11, 12, 14, 15, 24, 26, 49, 71, 77, 105, 110, 116, 119, 120, 229, 230], "split_trajectori": [11, 12, 14, 15, 218], "inform": [11, 12, 14, 15, 22, 42, 43, 45, 47, 48, 96, 107, 222, 225], "place": [11, 12, 14, 15, 19, 22, 42, 43, 45, 47, 48, 49, 64, 74, 81, 84, 87, 88, 132, 186, 187, 225, 229], "accommod": [11, 12, 14, 15], "kept": [11, 12, 14, 15, 47, 48, 83, 94, 105, 119, 120], "origin": [11, 12, 14, 15, 74, 84, 87, 132, 133, 153, 155, 200, 203, 227, 230, 231], "long": [11, 12, 14, 15, 20, 23, 225, 230], "truncat": [11, 12, 14, 15, 120, 231], "help": [11, 12, 14, 15, 22, 42, 45, 47, 48, 219, 224], "desynchron": [11, 12, 14, 15], "load_state_dict": [11, 12, 14, 15, 22, 42, 45, 47, 48, 84, 88, 222], "state_dict": [11, 12, 14, 15, 22, 42, 45, 47, 48, 84, 88, 209, 222, 231], "ordereddict": [11, 12, 14, 15, 22, 42, 45, 47, 48, 84, 88], "load": [11, 12, 14, 15, 24, 25, 26, 31, 53, 182, 209, 222, 225], "form": [11, 12, 15, 22, 24, 25, 26, 31, 42, 45, 47, 48, 88, 144, 146, 154, 155, 182, 185], "worker0": [11, 12, 15], "state_dict0": [11, 12, 15], "worker1": [11, 12, 15], "state_dict1": [11, 12, 15], "reset_idx": [11, 12, 15], "static_se": [11, 12, 14, 15, 42, 45, 47, 48, 84], "increment": [11, 12, 14, 15, 42, 45, 47, 48, 80, 154], "last": [11, 12, 14, 15, 22, 67, 96, 106, 107, 113, 126, 128, 225, 229, 231, 232], "env_fn": [11, 12, 14, 15, 43, 207, 208], "v0": [11, 12, 15, 45, 54, 55, 57, 58, 64, 84, 88, 205], "env_fn_parallel": [11, 12, 14, 15], "6": [11, 12, 14, 15, 58, 71, 96, 101, 106, 107, 118, 136, 190, 193, 195, 198, 200, 203, 224, 225, 229, 230, 231, 232], "out_se": [11, 12, 14, 15, 231], "shut": [11, 12, 14, 15], "down": [11, 12, 14, 15], "irrevers": [11, 12, 15], "arg": [12, 19, 22, 30, 36, 37, 42, 43, 45, 46, 47, 48, 56, 74, 79, 84, 85, 86, 87, 96, 107, 122, 123, 127, 131, 178, 185, 209, 214], "kwarg": [12, 14, 15, 19, 22, 30, 36, 37, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 74, 79, 81, 84, 85, 86, 87, 96, 97, 98, 99, 100, 104, 105, 107, 108, 115, 118, 120, 122, 123, 127, 130, 131, 133, 146, 154, 163, 175, 178, 185, 190, 191, 192, 193, 198, 200, 203, 206, 207, 208, 212, 214, 216, 232], "envcreat": [14, 205, 206, 209, 218, 224, 225, 231, 232], "return_same_td": 14, "stop": [14, 42, 45, 47, 48, 231, 232], "equat": [14, 129, 144, 146, 159], "exce": 14, "batcher": 14, "cautious": [14, 155], "ad": [14, 22, 24, 25, 26, 27, 30, 31, 32, 33, 42, 45, 47, 48, 49, 78, 84, 110, 111, 129, 146, 154, 155, 182, 224, 231], "whole": [14, 22, 42, 45, 47, 48, 84, 176, 225], "content": [14, 96, 107, 225, 230, 232], "ident": [14, 47, 48, 207, 208, 224, 229, 230], "yield": [14, 22, 42, 45, 47, 48], "chunk": 14, "policy_state_dict": 14, "env_state_dict": 14, "singl": [15, 22, 24, 25, 26, 27, 30, 31, 32, 42, 45, 47, 48, 49, 61, 62, 82, 96, 106, 107, 135, 149, 156, 169, 170, 172, 173, 182, 200, 209, 224, 225, 227, 229, 232], "paradigm": 15, "prefer": 15, "mere": 15, "rollout_tensordict": 16, "zero": [16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 45, 47, 48, 62, 71, 95, 106, 128, 129, 142, 164, 165, 166, 229, 230, 232], "max": [16, 23, 118, 119, 120, 146, 156, 158, 224], "durat": [16, 225], "int64": [17, 20, 21, 23, 127, 129, 131, 138, 139, 195, 225, 231], "discret": [17, 20, 21, 23, 115, 138, 139, 149], "assert_is_in": [17, 18, 19, 20, 21, 23, 28, 29], "belong": [17, 18, 19, 20, 21, 23, 28, 29], "otherwis": [17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 45, 47, 48, 71, 81, 84, 88, 105, 119, 120, 151, 158, 181, 222, 224, 231], "encod": [17, 18, 19, 20, 21, 23, 28, 29, 114, 115, 116, 127, 131, 138, 139, 144, 229], "val": [17, 18, 19, 20, 21, 23, 28, 29, 232], "ndarrai": [17, 18, 19, 20, 21, 23, 24, 28, 29, 45, 129], "np": [17, 18, 19, 20, 21, 23, 28, 29, 45, 224], "slice": [17, 18, 19, 20, 21, 23, 28, 29, 230], "tensor_to_index": [17, 18, 19, 20, 21, 23, 28, 29], "is_in": [17, 18, 19, 20, 21, 23, 28, 29, 231], "project": [17, 18, 19, 20, 21, 23, 28, 29, 126, 128, 129, 132, 133, 225, 231, 232], "back": [17, 18, 19, 20, 21, 23, 28, 29, 132, 133, 224], "rand": [17, 18, 19, 20, 21, 23, 28, 29, 46, 51, 58, 95, 109, 231, 232], "uniform": [17, 18, 19, 20, 21, 23, 24, 26, 28, 29, 33], "unbound": [17, 18, 19, 20, 21, 23, 28, 29, 230], "to_numpi": [17, 18, 19, 20, 21, 23, 28, 29], "transformed_in": [17, 18, 19, 20, 21, 23, 28, 29, 83, 84, 112, 118, 209], "type_check": [17, 18, 19, 20, 21, 23, 28, 29], "fill": [17, 18, 19, 20, 21, 23, 28, 29, 81, 230], "minimum": [18, 76, 103, 112, 118, 119, 120, 130, 142, 144, 158, 176, 224, 231], "float": [18, 20, 22, 23, 24, 25, 26, 27, 29, 33, 42, 45, 47, 48, 64, 65, 71, 74, 76, 77, 81, 82, 84, 87, 88, 101, 103, 105, 109, 110, 111, 116, 117, 118, 120, 126, 128, 129, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 182, 183, 224, 225, 231], "upper": 18, "composit": 19, "unnam": 19, "tupl": [19, 22, 24, 31, 42, 45, 47, 48, 59, 71, 97, 106, 107, 112, 147, 150, 164, 165, 166, 194, 196, 199, 202, 230], "effect": [19, 22, 42, 45, 47, 48, 78, 84, 185, 225, 231], "cannot": [19, 230], "pixels_spec": 19, "boundedtensorspec": [19, 123, 124, 125, 128, 129, 130, 218, 231, 232], "32": [19, 96, 97, 98, 104, 107, 113, 114, 224, 225, 231, 232], "observation_vector_spec": 19, "33": [19, 22, 42, 45, 47, 48, 96, 107], "composite_spec": 19, "observation_vector": [19, 62, 190, 193, 198, 200, 203, 224], "within": [19, 22, 32, 42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 88, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142, 232], "randn": [19, 71, 106, 112, 122, 123, 124, 125, 127, 130, 131, 132, 135, 136, 138, 139, 164, 165, 166, 184, 229, 230, 231, 232], "td_project": 19, "yield_nesting_kei": 19, "keysview": 19, "selected_kei": [19, 47, 48, 224], "altern": [20, 144, 225, 230], "onehottensorspec": 20, "categor": [20, 23, 115, 138, 139], "larg": 20, "action_valu": [20, 23, 127, 131, 138, 139, 195, 225], "arang": [20, 23, 127, 138, 176], "view": [20, 22, 23, 42, 45, 47, 48, 107, 138, 224, 230, 231, 232], "argmax": [20, 127, 131, 138, 139], "dim": [20, 62, 106, 209, 224, 230], "chosen_action_valu": [20, 23, 131, 195, 225], "outcom": [20, 23, 101, 118], "nvec": 21, "use_regist": [21, 23], "hot": [21, 23, 115, 127, 131, 138, 139], "cardin": [21, 138, 139], "element": [21, 23, 24, 25, 26, 27, 30, 31, 32, 33, 36, 37, 38, 96, 132, 133, 176, 182, 224, 231], "gamma": [22, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 205, 224, 225, 232], "present": [22, 24, 33, 42, 45, 47, 48, 49, 78, 97, 98, 99, 100, 104, 111, 129, 132, 133, 134, 135, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 209, 222, 224, 227, 232], "sutton": 22, "r": [22, 71, 133, 144, 163, 231], "1988": 22, "predict": [22, 103, 108, 109, 137, 149, 151, 152, 158, 163], "tempor": [22, 109, 165], "44": 22, "discount": [22, 43, 145, 146, 147, 148, 149, 150, 152, 154, 155, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 224, 225], "ahead": [22, 231], "add_modul": [22, 42, 45, 47, 48], "add": [22, 24, 25, 26, 27, 30, 31, 32, 40, 41, 42, 45, 47, 48, 110, 145, 180, 182, 224, 225, 230, 232], "child": [22, 42, 45, 47, 48, 230], "current": [22, 42, 45, 47, 48, 49, 56, 84, 91, 103, 106, 117, 129, 138, 139, 190, 198, 215, 222, 224, 231, 232], "fn": [22, 42, 45, 47, 48, 112, 207, 208], "recurs": [22, 42, 45, 47, 48], "children": [22, 42, 45, 47, 48], "init": [22, 42, 45, 47, 48, 224, 225], "init_weight": [22, 42, 45, 47, 48], "m": [22, 42, 45, 47, 48, 133, 224, 225], "fill_": [22, 42, 45, 47, 48, 225, 230, 231], "net": [22, 42, 45, 47, 48, 106, 156, 200, 205, 225, 229, 232], "in_featur": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 96, 97, 98, 99, 100, 106, 107, 110, 111, 123, 132, 229], "out_featur": [22, 42, 45, 46, 47, 48, 64, 74, 81, 84, 87, 95, 96, 97, 98, 99, 100, 103, 104, 106, 107, 109, 110, 111, 123, 127, 132, 224, 225, 229, 232], "bia": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 96, 103, 107, 110, 111, 112, 128, 129, 132, 142, 143, 144, 225], "requires_grad": [22, 42, 45, 47, 48, 224], "bfloat16": [22, 42, 45, 47, 48], "cast": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 88, 132, 190, 193, 195, 198, 200, 203, 230, 231], "datatyp": [22, 42, 45, 47, 48], "direct": [22, 42, 45, 47, 48, 225], "member": [22, 42, 45, 47, 48], "xdoctest": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "skip": [22, 42, 45, 47, 48, 68, 84, 133, 174, 175, 178, 181], "buf": [22, 42, 45, 47, 48], "20l": [22, 42, 45, 47, 48], "1l": [22, 42, 45, 47, 48], "5l": [22, 42, 45, 47, 48], "immedi": [22, 42, 45, 47, 48, 163], "associ": [22, 42, 45, 47, 48, 116, 209, 229], "copi": [22, 42, 45, 47, 48, 84, 224, 225, 230], "doubl": [22, 29, 42, 45, 47, 48, 64, 65, 74, 81, 82, 84, 87, 132, 148, 149, 153, 156, 159, 224, 231], "eval": [22, 42, 45, 47, 48, 84, 88, 224, 225], "certain": [22, 42, 45, 47, 48, 68, 80, 84, 154, 224, 225, 230, 231], "particular": [22, 42, 45, 47, 48, 84, 222, 225, 227], "behavior": [22, 42, 45, 47, 48, 84], "dropout": [22, 42, 45, 47, 48, 84], "batchnorm": [22, 42, 45, 47, 48, 84], "disabl": [22, 42, 45, 47, 48, 84, 105, 119, 120, 224], "comparison": [22, 42, 45, 47, 48, 84], "similar": [22, 42, 45, 47, 48, 64, 74, 81, 84, 86, 87, 88, 94, 132, 133, 224, 229, 231], "mechan": [22, 42, 45, 47, 48, 84], "confus": [22, 42, 45, 47, 48, 84], "extra_repr": [22, 42, 45, 47, 48], "represent": [22, 42, 45, 47, 48, 74, 87, 224, 225, 231], "string": [22, 42, 45, 47, 48, 133, 144, 174, 184, 190, 198, 200, 203], "tennsordict": 22, "dimens": [22, 61, 62, 67, 71, 79, 82, 85, 96, 107, 110, 111, 118, 119, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 164, 165, 166, 209, 224, 225, 230], "shift": [22, 142], "nontermin": [22, 224], "termin": [22, 134, 224, 225, 229, 232], "original_reward": [22, 224], "newli": 22, "get_buff": [22, 42, 45, 47, 48], "throw": [22, 42, 45, 47, 48, 231], "docstr": [22, 42, 45, 47, 48], "get_submodul": [22, 42, 45, 47, 48], "explan": [22, 42, 45, 47, 48], "how": [22, 24, 26, 33, 42, 45, 47, 48, 146, 153, 154, 155, 185, 219, 224, 225, 227, 231, 232], "qualifi": [22, 42, 45, 47, 48], "referenc": [22, 42, 45, 47, 48], "attributeerror": [22, 42, 45, 47, 48], "invalid": [22, 42, 45, 47, 48], "resolv": [22, 42, 45, 47, 48], "someth": [22, 42, 45, 47, 48, 219, 231], "get_extra_st": [22, 42, 45, 47, 48, 88], "set_extra_st": [22, 42, 45, 47, 48, 88], "pickleabl": [22, 42, 45, 47, 48, 88], "ensur": [22, 24, 26, 33, 42, 45, 47, 48, 74, 88, 140, 224], "guarante": [22, 36, 37, 38, 39, 42, 45, 47, 48, 88, 232], "pickl": [22, 42, 45, 47, 48, 88], "get_paramet": [22, 42, 45, 47, 48], "sai": [22, 42, 45, 47, 48, 231], "net_b": [22, 42, 45, 47, 48], "net_c": [22, 42, 45, 47, 48], "conv": [22, 42, 45, 47, 48, 96], "conv2d": [22, 42, 45, 47, 48, 96], "16": [22, 42, 45, 47, 48, 224], "kernel_s": [22, 42, 45, 47, 48, 96, 97, 98, 225, 232], "stride": [22, 42, 45, 47, 48, 96, 97, 98, 104, 225, 232], "100": [22, 42, 45, 47, 48, 71, 177, 185, 205, 224, 225, 227, 231, 232], "diagram": [22, 42, 45, 47, 48], "show": [22, 42, 45, 47, 48, 225, 229, 232], "itself": [22, 42, 45, 47, 48, 80], "would": [22, 42, 45, 47, 48, 107, 222, 225, 229, 230, 231], "degre": [22, 42, 45, 47, 48], "named_modul": [22, 42, 45, 47, 48], "o": [22, 42, 45, 47, 48], "transit": [22, 42, 45, 47, 48, 137, 224, 225], "alwai": [22, 42, 45, 47, 48, 70, 225], "half": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132, 224], "ipu": [22, 42, 45, 47, 48], "strict": [22, 42, 45, 47, 48, 84], "descend": [22, 42, 45, 47, 48, 84], "exactli": [22, 42, 45, 47, 48, 56, 84], "persist": [22, 42, 45, 47, 48, 84], "enforc": [22, 42, 45, 47, 48, 84, 134], "missing_kei": [22, 42, 45, 47, 48, 84], "unexpected_kei": [22, 42, 45, 47, 48, 84], "unexpect": [22, 42, 45, 47, 48, 84, 231], "namedtupl": [22, 42, 45, 47, 48, 84], "duplic": [22, 42, 45, 47, 48, 148, 149, 230], "l": [22, 42, 45, 47, 48, 163], "idx": [22, 42, 45, 47, 48, 230], "named_buff": [22, 42, 45, 47, 48, 225], "prefix": [22, 42, 45, 47, 48, 84, 174, 231], "prepend": [22, 42, 45, 47, 48], "running_var": [22, 42, 45, 47, 48], "named_children": [22, 42, 45, 47, 48], "conv4": [22, 42, 45, 47, 48], "conv5": [22, 42, 45, 47, 48], "memo": [22, 42, 45, 47, 48], "remove_dupl": [22, 42, 45, 47, 48], "named_paramet": [22, 42, 45, 47, 48, 225], "register_backward_hook": [22, 42, 45, 47, 48], "removablehandl": [22, 42, 45, 47, 48], "deprec": [22, 42, 45, 47, 48, 84, 231], "favor": [22, 42, 45, 47, 48], "register_full_backward_hook": [22, 42, 45, 47, 48], "futur": [22, 42, 45, 47, 48, 74, 84, 87, 107, 219, 232], "register_buff": [22, 42, 45, 47, 48], "running_mean": [22, 42, 45, 47, 48], "alongsid": [22, 42, 45, 47, 48], "latter": [22, 42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142, 207, 208], "num_featur": [22, 42, 45, 47, 48], "register_forward_hook": [22, 42, 45, 47, 48, 138, 139], "signatur": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132, 141], "posit": [22, 30, 31, 32, 42, 45, 47, 48, 68, 79, 80, 84, 85, 112, 229], "won": [22, 42, 43, 45, 47, 48, 74, 87, 185, 209, 224], "register_forward_pre_hook": [22, 42, 45, 47, 48], "invok": [22, 30, 42, 45, 47, 48], "respect": [22, 42, 45, 47, 48, 60, 64, 74, 81, 84, 87, 117, 132, 136, 180], "grad_input": [22, 42, 45, 47, 48], "grad_output": [22, 42, 45, 47, 48], "subsequ": [22, 42, 45, 47, 48], "entri": [22, 42, 45, 47, 48, 164, 165, 166, 229], "technic": [22, 42, 45, 47, 48], "similarli": [22, 42, 45, 47, 48, 134, 135, 224, 229, 231], "caller": [22, 42, 45, 47, 48], "register_load_state_dict_post_hook": [22, 42, 45, 47, 48], "post": [22, 42, 45, 47, 48, 225], "incompatible_kei": [22, 42, 45, 47, 48], "consist": [22, 42, 45, 47, 48, 96, 107, 224, 225, 231], "addit": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 126, 132, 144, 164, 225], "thrown": [22, 42, 45, 47, 48], "clearn": [22, 42, 45, 47, 48], "register_modul": [22, 42, 45, 47, 48, 222], "alia": [22, 42, 45, 47, 48], "register_paramet": [22, 42, 45, 47, 48], "requires_grad_": [22, 42, 45, 47, 48, 224], "autograd": [22, 42, 45, 47, 48, 84], "freez": [22, 42, 45, 47, 48], "finetun": [22, 42, 45, 47, 48], "individu": [22, 42, 45, 47, 48], "gan": [22, 42, 45, 47, 48], "share_memori": [22, 42, 43, 45, 47, 48, 224], "share_memory_": [22, 42, 45, 47, 48, 230, 232], "destin": [22, 42, 45, 47, 48, 84, 94], "keep_var": [22, 42, 45, 47, 48, 84], "averag": [22, 42, 45, 47, 48, 84, 88, 129, 150, 151, 183, 224, 229], "shallow": [22, 42, 45, 47, 48, 84], "pleas": [22, 42, 45, 47, 48, 84, 219], "design": [22, 23, 42, 45, 47, 48, 84, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 224, 225, 227, 230, 231, 232], "detach": [22, 42, 45, 47, 48, 84, 224, 225], "non_block": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132, 225], "memory_format": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "channels_last": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "Its": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "complex": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132, 229], "integr": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 100, 109, 132], "unchang": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "tri": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "convert": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 88, 132, 144, 230], "host": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "pin": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "4d": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "ignore_w": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "1913": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "3420": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "5113": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "2325": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "torch_doctest_cuda1": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "gpu1": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "1914": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "5112": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "2324": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "float16": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "cdoubl": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "3741": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "j": [22, 24, 33, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132, 222, 225], "2382": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "5593": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "4443": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "complex128": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "6122": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "1150": [22, 42, 45, 47, 48, 64, 74, 81, 84, 87, 132], "to_empti": [22, 42, 45, 47, 48], "dst_type": [22, 42, 45, 47, 48], "xpu": [22, 42, 45, 47, 48], "set_to_non": [22, 42, 45, 47, 48], "unidimension": [23, 230], "keepdim": 23, "sum": [23, 45, 151, 163, 224, 225, 231], "user_regist": 23, "experiment": [23, 133], "priori": 23, "definit": [23, 39], "uniqu": 23, "discretebox": 23, "alpha": [24, 26, 33, 96, 156, 158, 224, 225, 232], "beta": [24, 26, 33, 154, 224, 225, 232], "ep": [24, 26, 33, 88, 129, 146, 159, 183], "1e": [24, 26, 33, 88, 101, 103, 112, 118], "08": [24, 26, 33, 224], "collate_fn": [24, 25, 26, 27, 31, 182, 230, 232], "prefetch": [24, 25, 26, 27, 31, 182, 224, 225], "schaul": [24, 33], "quan": [24, 33], "antonogl": [24, 33], "silver": [24, 33], "2015": [24, 33], "arxiv": [24, 33, 61, 74, 97, 98, 99, 100, 103, 104, 109, 111, 113, 114, 116, 117, 129, 138, 145, 149, 150, 151, 152, 153, 155, 158, 159, 164, 167, 168, 171, 190, 193, 198, 203], "ab": [24, 33, 74, 88, 103, 104, 109, 111, 113, 114, 116, 117, 145, 150, 151, 152, 153, 155, 190, 198], "1511": [24, 33, 104], "05952": [24, 33], "expon": [24, 26, 33], "\u03b1": [24, 26, 33], "determin": [24, 26, 33, 74, 87, 129, 225], "delta": [24, 26, 33, 118, 133, 218], "prioriti": [24, 26, 32, 33, 36, 37, 38, 39, 147, 148, 156, 158, 222, 224, 225], "null": [24, 26, 33, 60, 224], "merg": [24, 25, 26, 31, 182], "mini": [24, 25, 26, 31, 182], "style": [24, 25, 26, 31, 182], "rb": [24, 25, 26, 31, 182, 225, 232], "multithread": [24, 25, 26, 31, 182], "instanti": [24, 25, 26, 47, 48, 83, 182, 224, 225, 230, 231], "multinomi": [24, 26], "update_prior": [24, 26, 33, 222, 224, 232], "circular": [25, 182, 224], "randomli": [25, 27, 70, 71, 81, 133, 182], "select": [25, 26, 27, 30, 31, 32, 47, 48, 70, 95, 182, 184, 224, 225], "priority_kei": [26, 32, 148, 149, 158, 232], "td_error": [26, 32, 147, 148, 149, 156, 158, 224, 232], "prioritizedreplaybuff": [26, 218, 232], "flaot": 26, "return_weight": 26, "_weight": 26, "replaybuff": [27, 30, 32, 41, 201, 205, 218, 232], "meta": [28, 44, 222], "describ": [28, 62, 83, 118, 119, 190, 198, 215, 231], "rb_prototyp": [30, 31, 32], "invoc": 30, "friendli": [30, 224], "public": 30, "rpc": 30, "insert_transform": [30, 31, 32], "insert": [30, 31, 32, 40, 41, 85, 225], "include_info": [30, 32], "sampler": [30, 31, 32, 33, 34, 36, 37, 38, 39, 218], "writer": [31, 40, 218], "max_siz": [31, 36, 38, 39, 225], "1_000": 31, "randomsampl": [31, 218], "roundrobinwrit": [31, 218], "kw": [32, 40], "max_capac": 33, "uniformli": [34, 231], "scratch_dir": [36, 224], "memmap": [36, 47, 48, 88], "attach": [36, 37, 38, 39, 225], "entiti": [36, 37, 38, 39], "made": [36, 37, 38, 39, 129, 224], "eg": [36, 37, 38, 39], "alloc": 37, "__len__": 39, "roundrobin": 40, "piec": [40, 41], "_inplace_upd": [42, 47, 48, 84], "_batch_lock": [42, 47, 48, 84], "run_type_check": [42, 46], "compar": [42, 181, 225, 231], "batch_lock": [42, 44, 45, 47, 48, 84], "environn": [42, 45, 46, 47, 48, 84], "immut": [42, 45, 47, 48, 84, 190, 198], "fake_tensordict": [42, 45, 47, 48], "fake": [42, 45, 47, 48], "overridden": [42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142], "recip": [42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142], "afterward": [42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142, 231], "former": [42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142], "silent": [42, 45, 47, 48, 64, 74, 79, 83, 85, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 116, 117, 126, 128, 129, 142], "info": [42, 45, 47, 48, 89, 229], "_step": [42, 45, 47, 48], "privat": [42, 45, 47, 48, 231], "_reset": [42, 45, 46, 47, 48, 95, 109, 232], "overwritten": [42, 45, 47, 48, 94, 224], "callback": [42, 45, 47, 48], "auto_reset": [42, 45, 47, 48, 225], "auto_cast_to_devic": [42, 45, 47, 48], "break_when_any_don": [42, 45, 47, 48], "return_contigu": [42, 45, 47, 48, 227], "soon": [42, 45, 47, 48], "smaller": [42, 45, 47, 48], "lazystackedtensordict": [42, 45, 46, 47, 48, 95, 109, 227, 230, 231, 232], "concomitt": [42, 45, 47, 48], "eras": [42, 45, 47, 48, 49], "workspac": [42, 45, 47, 48, 49], "carri": [42, 45, 47, 48], "creator": [43, 191, 192, 207, 208, 209], "substitut": [43, 88], "multiprocess": [43, 44, 88, 231], "pointer": [43, 230], "mp": [43, 88], "env_creat": [43, 224], "test_env1": 43, "_td": 43, "observation_count": [43, 231], "test_env2": 43, "sleep": [43, 231], "5": [43, 58, 95, 96, 103, 105, 106, 107, 109, 119, 120, 127, 131, 138, 139, 154, 224, 225, 230, 231, 232], "__name__": [43, 225], "__main__": 43, "p": [43, 225, 229], "p1": [43, 225], "p2": [43, 225], "join": [43, 190, 198], "9934": 43, "env_str": 44, "discard": [45, 94, 174, 231], "info_dict_read": 45, "set_info_dict_read": 45, "put": [45, 88, 209, 230], "f": [45, 144, 164, 165, 166, 224, 225, 229, 230, 231], "read_act": 45, "read_don": 45, "reader": [45, 224, 225], "frame_skip": [45, 52, 53, 54, 57, 68, 178, 181, 187, 222, 224, 232], "broken": [45, 90], "read_ob": 45, "dictat": [45, 133], "inner": [45, 222, 224, 231], "read_reward": 45, "total_reward": 45, "step_reward": 45, "far": [45, 105, 119, 120, 231], "baseinfodictread": 45, "info_dict": 45, "hoc": 45, "manner": [45, 74, 224, 227], "dict_read": 45, "default_info_dict_read": 45, "my_info_kei": 45, "some_env": 45, "meant": 46, "limit": [46, 47, 48, 230], "safeti": 46, "constraint": 46, "behav": [46, 56, 115], "classic": [46, 229, 230], "unboundedcontinuoustensorspec": [46, 81, 95, 122, 123, 124, 125, 132, 135, 136, 218, 231], "mymbenv": [46, 95, 109], "world_model": [46, 59, 95, 109, 151], "super": [46, 95, 109, 136, 138, 141, 229, 232], "hidden_observ": [46, 95, 109], "mlp": [46, 95, 96, 97, 98, 99, 100, 106, 109, 123, 127, 190, 198, 200, 203, 218, 224, 225, 227, 229, 232], "worldmodelwrapp": [46, 95, 109, 218], "activation_class": [46, 95, 96, 97, 98, 99, 100, 103, 104, 107, 109, 224, 225, 232], "relu": [46, 95, 109, 112, 144], "activate_last_lay": [46, 95, 100, 107, 109], "depth": [46, 95, 96, 97, 98, 99, 100, 103, 104, 107, 109, 113, 114, 127, 225, 227], "equal": [47, 48, 70, 71, 96, 102, 107, 160, 176, 207, 208, 230], "my_env_fun": [47, 48], "custom_attribute_list": [47, 48], "custom_attribut": [47, 48], "custom_method_list": [47, 48], "custom_method": [47, 48], "num_work": [47, 48, 224, 225], "deploi": [47, 48], "creation": [47, 48, 224, 231], "slight": [47, 48, 225], "overhead": [47, 48, 229], "env_input_kei": [47, 48], "permit": [47, 48], "drastic": [47, 48], "decreas": [47, 48], "io": [47, 48], "burden": [47, 48], "_batchedenv": [47, 48], "might": [47, 48, 216, 219, 224, 231], "next_pixel": [47, 48], "next_vector": [47, 48], "occupi": [47, 48], "excluded_kei": [47, 48], "share_individual_td": [47, 48], "lazi": [47, 48, 74, 110, 134, 135, 224, 227, 230, 231], "shared_memori": [47, 48], "policy_proof": [47, 48], "ll": [47, 48, 224, 225, 231], "hidden": [47, 48, 103, 106, 113, 114, 116, 117, 123, 124, 125, 132, 135, 190, 198, 227, 229, 232], "allow_step_when_don": [47, 48], "encount": [47, 48, 219], "update_kwarg": [47, 48], "build_tensordict": 49, "next_observ": [49, 94, 106, 227], "log_prob": [49, 101, 115, 120], "empti": [49, 74, 84, 87, 224], "popul": [49, 81], "env_nam": [50, 52, 54, 57, 224, 231], "googl": [50, 51], "ant": [50, 51], "categorical_action_encod": [51, 55], "get_environ": 51, "87": 51, "acrobot": [51, 231], "fetch": [51, 231], "dm_control": [52, 53, 224, 227, 231], "task_nam": 52, "cheetah": [52, 53, 224, 231], "suit": [53, 231], "disable_env_check": 54, "serv": [56, 231], "placehold": [56, 84], "secur": 56, "jumanji": [57, 58], "snake": [57, 58], "6x6": [57, 58], "td1": 58, "int32": [58, 230, 232], "12x12": 58, "tsp50": 58, "tsp100": 58, "model_bas": [59, 95, 109], "prior_shap": 59, "belief_shap": 59, "obs_decod": 59, "transform_reward_spec": [60, 64, 65, 74, 76, 77, 83, 85, 87], "cat_dim": [61, 71], "success": [61, 83, 232], "account": 61, "movement": 61, "veloc": [61, 231], "propos": [61, 108, 153, 159, 200, 203], "plai": [61, 231], "atari": [61, 231], "pdf": [61, 97, 98, 99, 100, 129, 138, 149, 156, 158, 159, 164, 167, 168, 171, 193, 200, 203], "1312": 61, "5602": 61, "tranform": [61, 64, 74, 80, 81, 83, 86, 87, 89], "transform_observation_spec": [61, 62, 63, 64, 65, 67, 69, 71, 74, 75, 78, 80, 81, 82, 83, 85, 87], "del_kei": [62, 225, 227], "unsqueeze_if_oor": 62, "observation_posit": 62, "observation_veloc": 62, "delet": [62, 230], "unsqueez": [62, 82, 85, 106, 230], "key1": [62, 176, 184], "key2": [62, 176, 184], "w": [63, 75, 82, 129, 175], "crop": [63, 175], "center": [63, 175], "width": [63, 75, 225], "height": [63, 75, 225], "squar": [63, 105, 119, 120, 175], "rewardsc": [64, 84, 218, 224], "rewardclip": [64, 218], "transformed_env": [64, 83, 84], "dest": [64, 74, 87, 132], "transform_input_spec": [64, 65, 74, 83, 85, 87], "finit": [66, 224], "first_dim": 67, "last_dim": 67, "flatten": [67, 224, 225], "adjac": 67, "repeatedli": 68, "stabil": 68, "turn": [69, 181, 225], "noop": [70, 232], "30": [70, 116, 117, 225], "op": [70, 126, 128, 186], "noop_max": 70, "loc": [71, 77, 105, 112, 119, 120, 123, 124, 125, 130, 133, 135, 188, 190, 198, 200, 203, 209, 224, 225, 229, 232], "standard_norm": [71, 77, 224, 225], "affin": [71, 77], "layer": [71, 88, 96, 97, 98, 103, 107, 110, 111, 113, 114, 121, 224, 225, 229], "set_default_tensor_typ": 71, "doubletensor": 71, "std": [71, 88, 112, 224, 225, 231], "isclos": 71, "next_ob": [71, 164, 165, 166, 224, 232], "normalis": 71, "stat": [71, 188, 209, 224], "rubric": [71, 135], "manual_se": [71, 128, 129, 224, 231, 232], "init_stat": 71, "3752e": 71, "01": [71, 129, 142, 145, 146, 154, 155, 224, 228], "5087e": 71, "03": [71, 224, 228], "9294e": 71, "9636": 71, "5608": 71, "6408": 71, "num_it": 71, "reduce_dim": 71, "constant": [71, 222, 224, 225, 231], "ideal": [71, 224], "statist": [71, 88, 157, 209, 224, 231], "approach": [71, 231], "gaussian": [71, 95, 109, 110, 111, 126], "empir": [71, 95, 109, 133], "deviat": [71, 88, 95, 103, 109, 110, 111, 155, 224, 225], "summari": [71, 88], "r3m": 74, "resnet": [74, 87], "visual": [74, 87], "embed": [74, 86, 87, 123, 124, 125, 132, 229], "ego4d": [74, 87], "paper": [74, 87, 153, 200, 203, 224], "univers": [74, 87], "suraj": 74, "nair": 74, "aravind": 74, "rajeswaran": 74, "vikash": [74, 87], "kumar": [74, 87], "chelsea": 74, "finn": 74, "abhinav": 74, "gupta": 74, "2203": [74, 109], "12601": 74, "_init": 74, "snippet": [74, 224], "resenet50": 74, "model_nam": [74, 87, 215], "resnet50": [74, 87], "resnet34": 74, "resnet18": 74, "left": [74, 87, 225], "r3m_vec": 74, "feed": [74, 87], "244": [74, 87], "hub": [74, 87], "cach": [74, 84, 87, 177], "download_path": [74, 87], "tensor_pixels_kei": [74, 87], "interpol": [75, 225], "bilinear": 75, "clamp_min": [76, 129], "clamp_max": 76, "clip": [76, 146, 185], "clip_min": 76, "scalar": [76, 98, 100, 110, 111, 126, 128, 129, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "clip_max": 76, "episod": [78, 95, 167, 168, 169, 170, 171, 172, 173, 225], "cumul": [78, 95], "episode_": 78, "reward1": 78, "reward2": 78, "ho": 78, "squeeze_dim": 79, "squeez": [79, 96, 225, 230], "manual": 80, "default_valu": 81, "primer": 81, "drawn": [81, 133], "rel": [81, 101, 118], "chosen": [81, 190, 198, 200, 203], "mykei": 81, "dtype_or_devic": 81, "255": [82, 231], "precis": [82, 224], "ri": 82, "randint": [82, 224], "out_keys_inv": 83, "principl": 83, "combin": [83, 230], "cattransform": 83, "notabl": 83, "cache_spec": 84, "anymor": [84, 132, 224], "unsqueeze_dim": 85, "vip": [86, 87], "toward": 87, "implicit": 87, "jason": 87, "ma": 87, "shagun": 87, "sodhani": 87, "dinesh": 87, "jayaraman": 87, "osbert": 87, "bastani": 87, "ami": 87, "zhang": 87, "vip_vec": 87, "shared_td": 88, "lock": 88, "decai": [88, 126, 128, 156, 183, 224, 225, 231], "9999": [88, 231], "0001": [88, 103, 112, 183], "fly": [88, 154, 231], "to_observation_norm": 88, "rate": [88, 163, 224, 225], "99": [88, 109, 145, 146, 150, 152, 154, 155, 156, 157, 158, 163, 205, 224, 225, 232], "underflow": 88, "1000": [88, 126, 128, 129, 133, 153, 205, 224, 225], "build_td_for_shared_vecnorm": 88, "memmori": 88, "memmap_": [88, 230], "queue": 88, "td_share": 88, "v": [88, 106, 158, 225, 229, 232], "observationnorm": [88, 209, 218, 224, 225, 232], "state_dim": [89, 116, 117], "action_dim": [89, 97, 99, 227], "gsde": [89, 156, 209], "nois": [89, 111, 121, 129, 156, 181, 209, 224], "func": [89, 229], "gsdemodul": 89, "short": 90, "discrep": [90, 145, 146, 147, 148, 154, 155], "imposs": 90, "probabilistictdmodul": [93, 107, 133, 158, 163, 181], "next_tensordict": [94, 224], "keep_oth": 94, "exclude_reward": 94, "exclude_don": 94, "exclude_act": 94, "_run_check": 94, "reflect": [94, 187], "renam": [94, 224], "next_": 94, "funtion": 94, "td_out": [94, 176, 184], "make_polici": 94, "next_td": 94, "planning_horizon": [95, 109], "optim_step": [95, 109, 230], "num_candid": [95, 109], "top_k": [95, 109], "reward_kei": [95, 109], "action_kei": [95, 108, 109, 126, 128], "cross": 95, "entropi": [95, 145, 146, 154, 155, 156, 158], "botev": 95, "et": [95, 229], "al": [95, 195, 229, 231], "2013": 95, "cem": 95, "plan": [95, 108, 109], "unit": [95, 103, 113, 114, 116, 117], "varianc": [95, 105, 112, 119, 120], "rank": 95, "top": [95, 109], "k": [95, 225, 229, 230], "repeat": 95, "maximis": [95, 97, 99, 109, 224], "horizon": [95, 109], "modelbasedenv": [95, 109], "mpc": [95, 108, 109], "candid": [95, 109], "modelbasedenvbas": [95, 108, 109, 218], "next_hidden_observ": 95, "actor": [95, 97, 99, 103, 109, 123, 124, 125, 127, 128, 129, 130, 131, 138, 139, 145, 146, 147, 150, 154, 155, 156, 158, 190, 193, 195, 198, 200, 203, 218, 224, 225, 232], "num_cel": [96, 97, 98, 99, 100, 103, 104, 107, 123, 224, 225, 229, 232], "elu": [96, 97, 98, 99, 100, 103, 104, 225, 232], "activation_kwarg": [96, 107], "norm_class": [96, 97, 98, 107], "norm_kwarg": [96, 107], "bias_last_lay": [96, 97, 98, 99, 100, 104, 107], "aggregator_class": [96, 97, 98, 225, 232], "squashdim": [96, 97, 232], "aggregator_kwarg": [96, 97, 98, 225], "squeeze_output": [96, 97, 98, 225], "convolut": [96, 97, 98], "neural": [96, 132, 225, 229, 231], "produc": [96, 107, 115, 123, 125, 175, 231], "len": [96, 107, 224, 225, 230, 232], "cell": [96, 107, 224], "kernel": [96, 104, 106], "tanh": [96, 105, 107, 118, 119, 120, 224], "singleton": [96, 107], "device_typ": [96, 97, 98, 99, 100, 104, 107, 110, 111], "cnet": 96, "34": [96, 107, 224], "35": [96, 107], "possibli": [96, 132, 185, 224, 231], "rectangular": 96, "conv_net_kwarg": [97, 98], "mlp_net_kwarg": [97, 98, 99], "use_avg_pool": [97, 98], "WITH": [97, 98, 99, 100, 129, 159, 193], "1509": [97, 98, 99, 100, 109, 129, 153, 159, 193], "02971": [97, 98, 99, 100, 129, 159, 193], "convnet": [97, 218, 232], "ndims_in": 97, "avgpool": [97, 98], "128": [98, 224], "adaptiveavgpool2d": [98, 225], "400": [99, 100, 225], "300": [99, 100, 190, 198], "mlp_net_kwargs_net1": 100, "mlp_net_kwargs_net2": 100, "atol": [101, 118], "06": [101, 118, 224], "rtol": [101, 118], "batch_shap": [101, 118], "event_shap": [101, 118], "absolut": [101, 118], "toler": [101, 118], "densiti": [101, 115, 120], "mass": [101, 115, 120], "rsampl": [101, 115, 133], "sample_shap": [101, 115], "reparameter": [101, 115], "dqnet": 102, "atom": 102, "std_bia": 103, "std_min_val": 103, "stochast": [103, 111, 113, 117, 156, 158], "belief": [103, 113, 116, 117], "1912": [103, 150, 151, 152], "016034": 103, "softplu": [103, 112, 142, 143, 144], "out_features_valu": 104, "cnn_kwarg": [104, 225], "mlp_kwarg": [104, 106, 225], "duel": [104, 225], "cnn": [104, 225, 232], "06581": 104, "512": 104, "upscal": [105, 119, 120], "tanh_loc": [105, 119, 120], "event_dim": [105, 118, 119], "prevent": [105, 119, 120, 154, 155, 224], "ultim": [105, 119, 120], "unstabl": [105, 119, 120], "poor": [105, 119, 120], "explos": [105, 119, 120], "switch": [105, 119, 120], "sigma": [105, 119, 120, 126, 129], "formula": [105, 119, 120, 146, 154, 155], "lstm_kwarg": 106, "embedd": 106, "lstm": [106, 112], "time_step": 106, "2d": 106, "hidden_s": 106, "input_s": 106, "hidden0_in": 106, "hidden1_in": 106, "hidden0_out": 106, "hidden1_out": 106, "single_bias_last_lay": 107, "layer_class": 107, "layer_kwarg": 107, "perceptron": 107, "seamless": 107, "though": 107, "reshap": [107, 230], "lazylinear": 107, "42": [107, 185], "noisylinear": [107, 110, 218, 225], "noisylazylinear": [107, 218], "At": [108, 227], "mpcplanner": 108, "tensordict_out": [108, 229, 231], "advantage_modul": [109, 145], "temperatur": 109, "mppi": 109, "covari": 109, "william": [109, 157], "aldrich": 109, "theodor": 109, "01149": 109, "hansen": 109, "wang": 109, "su": 109, "04955": 109, "ndunboundedcontinuoustensorspec": [109, 135], "valueoper": [109, 123, 124, 125, 145, 146, 154, 155, 205, 218, 224, 229], "tdlambdaestim": [109, 218], "value_net": [109, 164, 165, 166], "adv": 109, "95": [109, 150, 224, 225], "std_init": [110, 111], "noisi": [110, 111, 121], "term": [110, 111, 144, 145, 186, 225], "matrix": [110, 111], "ax": [110, 111], "initialize_paramet": 110, "isol": 110, "1706": 111, "10295v3": 111, "induc": 111, "aid": 111, "descent": 111, "remain": 111, "emploi": 111, "scale_map": 112, "biased_softplus_1": 112, "scale_lb": [112, 116, 117], "exp": [112, 144], "module_norm": 112, "decod": [113, 229], "1803": [113, 114], "10122": [113, 114], "rnn_hidden": 113, "latent": 114, "logit": 115, "prob": 115, "One": [115, 126, 128, 132, 160, 216, 224, 229, 230, 231], "excacli": 115, "hidden_dim": [116, 117], "posterior": [116, 151], "rssm": [116, 117, 151], "1811": [116, 117], "04551": [116, 117], "obs_embed": 116, "rnn_hidden_dim": 117, "prior": [117, 151], "dream": 117, "recurr": 117, "min": [118, 119, 120, 146, 156, 158, 224, 225], "tanhtransform": 119, "tensordict_modul": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 228, 229], "translat": [122, 130], "td_modul": [122, 123, 124, 125, 130, 132, 133, 135, 136, 229, 232], "get_policy_oper": [123, 124, 125, 190, 198, 229], "alon": [123, 124, 125], "tdmodul": [123, 124, 125, 205], "get_critic_oper": [123, 229], "common_oper": [123, 125], "policy_oper": [123, 124, 125], "value_oper": [123, 124, 125], "probabilisticactor": [123, 124, 125, 158, 218, 224], "tanhnorm": [123, 124, 125, 130, 135, 218, 229, 232], "normalparamwrapp": [123, 124, 125, 130, 135, 218, 229, 232], "spec_hidden": [123, 125], "module_hidden": [123, 125, 229], "td_module_hidden": [123, 125, 229], "spec_act": [123, 125], "module_act": [123, 125, 229], "td_module_act": [123, 124, 125, 229], "dist_in_kei": [123, 124, 125, 130, 135], "sample_out_kei": [123, 125, 135], "distribution_class": [123, 124, 125, 130, 133, 135, 224, 229, 232], "return_log_prob": [123, 124, 125, 133, 135, 229, 232], "module_valu": [123, 124, 125, 229], "td_module_valu": [123, 124, 125, 229], "state_action_valu": [123, 136, 163, 193, 200, 203, 205, 224, 229, 232], "td_clone": [123, 124, 125, 229], "clone": [123, 124, 125, 132, 190, 198, 200, 203, 224, 225, 229, 230, 232], "sample_log_prob": [123, 124, 125, 133, 135, 190, 198, 200, 229], "tensordictmodulewrapp": [123, 191, 192, 205], "estim": [123, 124, 125, 145, 146, 154, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 224, 225], "get_value_oper": [123, 124, 125, 190, 198], "action_modul": 124, "state_valu": [124, 125, 136, 164, 165, 166, 167, 168, 169, 171, 172, 190, 198, 203, 224], "safesequenti": [124, 125, 137, 218], "sigma_init": 126, "sigma_end": 126, "annealing_num_step": [126, 128, 129, 224, 225], "po": [126, 128], "epsilon": [126, 128, 129, 159, 225], "know": [126, 128, 156, 181, 224, 225, 232], "recov": [126, 128, 134, 227], "happen": [126, 231], "action_spac": [127, 131, 138, 139], "one_hot": [127, 131, 138, 139], "onehotdiscretetensorspec": [127, 131, 138, 139, 218], "nbin": [127, 138], "qvalue_actor": [127, 131, 138, 139], "eps_init": [128, 129, 225], "eps_end": [128, 129, 225], "greedi": [128, 139, 225], "explorative_polici": [128, 129], "0000": [128, 232], "6986": 128, "9366": 128, "5837": 128, "8596": 128, "grad_fn": 128, "addbackward0": 128, "theta": 129, "15": [129, 150, 225], "mu": 129, "dt": 129, "x0": 129, "sigma_min": 129, "n_steps_ann": 129, "ornstein": [129, 224], "uhlenbeck": [129, 224], "ou": [129, 224], "introduc": [129, 229, 230], "auto": [129, 156, 158], "correl": 129, "sort": 129, "prev_nois": 129, "current_sigma": 129, "sqrt": [129, 225], "n_step": 129, "ou_prev_nois": 129, "ou_step": 129, "increas": 129, "anneal": 129, "_ou_prev_nois": 129, "_ou_step": 129, "probabilist": [130, 229, 232], "functional_modul": [130, 131, 132, 135, 136, 138, 139], "make_funct": [130, 131, 132, 135, 136, 138, 139, 140, 225, 229, 232], "functionalmodul": [132, 140], "functionalmodulewithbuff": [132, 140], "character": 132, "overflow": [132, 133], "grucel": [132, 229], "td_fmodul": 132, "td_function": 132, "td_state": 132, "vmap": [132, 135, 225, 229, 232], "expand": [132, 135, 229, 232], "ensembl": [132, 156], "params_repeat": 132, "td_vmap": [132, 135], "irrespect": [132, 133], "random_sampl": [132, 133], "tensor_spec": 133, "default_interaction_mod": [133, 229], "distribution_kwarg": [133, 224], "cache_dist": 133, "n_empirical_estim": 133, "probabilistictensordictmodul": [133, 134, 232], "rule": [133, 229], "interaction_mod": 133, "get_dist": [133, 134, 229], "__call__": [133, 222, 229], "median": 133, "suppli": 133, "fist": 133, "set_interaction_mod": 133, "diverg": [133, 151, 154], "partial_toler": [134, 135, 227], "probabilistictensordictsequenti": [134, 229, 232], "tensordictsequenti": [134, 227, 232], "expos": [134, 229], "who": [134, 135], "AND": [134, 135], "scan": [134, 135], "sub": [134, 135, 176, 185, 227, 231, 232], "tensordictsequenci": 135, "tensordictsequ": 135, "safeprobabilisticmodul": [135, 218], "spec1": 135, "net1": 135, "module1": 135, "td_module1": 135, "spec2": 135, "module2": 135, "td_module2": 135, "custommodul": [136, 141], "cat": [136, 224, 230, 232], "transition_model": 137, "reward_model": 137, "imaginari": 137, "imagin": 137, "get_reward_oper": 137, "get_transition_model_oper": 137, "var_num": [138, 139], "regard": [138, 145, 149, 155, 230], "perspect": [138, 149], "1707": [138, 149, 155, 190, 198], "06887": [138, 149], "mult_one_hot": [138, 139], "customdistributionalqv": 138, "log_softmax": 138, "_src": 140, "wrapper_typ": 140, "mislead": 141, "other_kei": 141, "typeerror": 141, "min_val": [142, 144], "bias": [142, 224], "_bia": 142, "invert": 143, "surject": 144, "expln": 144, "biased_softplu": [144, 218], "beggin": 144, "biased_softplus_": 144, "syntax": [144, 224], "condit": 144, "met": 144, "safeprobabilisticsequenti": [145, 146, 154, 155, 157, 191, 192, 218], "advantage_kei": [145, 146, 154, 155, 157, 164, 165, 166], "value_target_kei": [145, 155, 157, 164, 165, 166], "value_target": [145, 155, 157, 164, 165, 166], "entropy_bonu": [145, 146, 154, 155], "samples_mc_entropi": [145, 146, 154, 155], "entropy_coef": [145, 146, 154, 155], "critic_coef": [145, 146, 154, 155], "loss_critic_typ": [145, 146, 154, 155, 157], "smooth_l1": [145, 146, 147, 148, 154, 155, 156, 157, 158, 160], "reli": [145, 224, 231], "1602": 145, "01783v2": 145, "advantage_diff_kei": 145, "advantage_diff": 145, "value_error": [145, 164, 165, 166], "loss_function_typ": 145, "l1": [145, 146, 147, 148, 154, 155, 156, 160, 225], "l2": [145, 146, 147, 148, 151, 152, 154, 155, 156, 160], "tha": 145, "throughout": [145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 231], "essenti": [145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 224, 230], "clip_epsilon": 146, "threshold": 146, "bonu": [146, 154, 155], "favour": [146, 154, 155], "exploratori": [146, 154, 155], "mont": [146, 154, 155], "carlo": [146, 154, 155], "multipli": [146, 154, 155, 156, 158, 224], "loss_funct": [146, 147, 148, 155, 156, 158, 160], "actor_network": [147, 156, 157, 158], "value_network": [147, 148, 149, 158, 164, 165, 166], "delay_actor": [147, 158], "delay_valu": [147, 148, 149, 157, 158], "input_tensordict": [147, 148, 149], "assign": [147, 148, 224, 229], "qvalueactor": [148, 218, 225], "distributionalqvalueactor": [149, 218], "unlik": [149, 155, 229, 230, 232], "disctount": 149, "actor_model": 150, "value_model": [150, 152], "model_based_env": 150, "dreamerenv": [150, 218], "imagination_horizon": 150, "lmbda": [150, 164, 166, 167, 169, 170, 171, 172, 173, 224, 225], "discount_loss": [150, 152], "01603": [150, 151, 152], "unrol": 150, "lambda_kl": 151, "lambda_reco": 151, "lambda_reward": 151, "reco_loss": 151, "reward_loss": 151, "free_nat": 151, "delayed_clamp": 151, "global_averag": 151, "kl": [151, 154], "reconstruct": [151, 231], "nat": 151, "clamp": [151, 185], "value_loss": [152, 224], "fake_data": 152, "loss_modul": [153, 159, 185, 204, 205, 222, 230], "dqnloss": [153, 159, 196, 218], "ddpgloss": [153, 159, 194, 205, 218, 232], "sacloss": [153, 159, 202, 218], "value_network_update_interv": 153, "contrast": 153, "soft": [153, 158, 159], "06461": 153, "dtarg": 154, "decrement": 154, "samples_mc_kl": 154, "penalti": 154, "old_polici": 154, "new_polici": 154, "adapt": 154, "thu": 154, "distanc": [154, 160, 163, 164], "apart": 154, "proxim": [155, 190, 198], "optimis": [155, 181], "flavour": [155, 224, 232], "constrain": 155, "clipppoloss": [155, 218], "klpenppoloss": [155, 218], "regularis": 155, "06347": [155, 190, 198], "qvalue_network": [156, 158], "num_qvalue_net": [156, 158], "sub_sample_len": 156, "priotity_kei": [156, 158], "alpha_init": [156, 158], "min_alpha": [156, 158], "max_alpha": [156, 158], "fixed_alpha": [156, 158], "target_entropi": [156, 158], "delay_qvalu": [156, 158], "openreview": [156, 200], "ay8zfzm0tdd": [156, 200], "idea": [156, 222, 225, 230], "subsampl": [156, 176, 222], "connectionist": 157, "1992": 157, "doi": 157, "1007": 157, "bf00992696": 157, "1801": [158, 203], "01290": [158, 203], "qvalue_network_bi": 158, "prod": 158, "n_action": 158, "redqloss": [159, 218], "999": [159, 183, 225], "prev_param": 159, "new_param": 159, "v2": [160, 169, 170, 172, 173, 190, 193, 198, 200, 203], "strict_shap": 160, "view_a": 160, "hold": [161, 162], "next_val_kei": 163, "pred_next_v": 163, "usus": 163, "mse": [163, 225], "q_valu": 163, "target_valu": 163, "n_steps_to_next": 163, "value_next_st": 163, "average_ga": 164, "value_kei": [164, 165, 166], "dimension": [164, 167, 168, 171], "1506": [164, 167, 168, 171], "02438": [164, 167, 168, 171], "exponenti": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183], "propag": [164, 165, 166], "throught": [164, 165, 166], "advang": 164, "gradient_mod": 164, "sign": 164, "unused_arg": 164, "target_param": [164, 165, 166], "relev": [164, 165, 166], "98": [164, 165, 166], "94": [164, 166], "unpack": [164, 165, 166], "average_reward": [165, 166], "next_state_valu": [167, 168, 169, 170, 171, 172, 173, 218], "old_stat": [167, 168, 169, 171, 172], "timestep": [167, 168, 169, 170, 171, 172, 173, 225], "new_stat": [167, 168, 169, 170, 171, 172, 173], "rolling_gamma": [169, 170, 172, 173], "ti": [169, 170, 172, 173], "event": [169, 170, 172, 173], "g1": [169, 170, 172, 173], "g2": [169, 170, 172, 173], "g3": [169, 170, 172, 173], "g4": [169, 170, 172, 173], "v3": [169, 170, 172, 173], "v4": [169, 170, 172, 173, 224], "upcom": [169, 170, 172, 173, 224], "out_file_bas": 174, "skip_reset": 174, "dump": 174, "interv": [174, 175, 177, 186, 225], "center_crop": 175, "make_grid": 175, "video": [175, 181, 209, 225], "Will": 175, "grid": 175, "sub_traj_len": 176, "min_sub_traj_len": 176, "full": [176, 224, 225, 227, 229, 230, 231, 232], "20": [176, 224, 225, 231], "register_op": [176, 177, 178, 179, 180, 183, 184, 186, 222], "process_optim_batch": [176, 183, 222], "_process_optim_batch_hook": [176, 222], "clear": 177, "clear_cuda": 177, "pre_optim_step": [177, 222], "counter": [178, 222], "log_pbar": [178, 179, 181, 183, 222], "progress": [178, 179, 181, 185, 222, 231], "bar": [178, 179, 181, 185, 222], "count_fram": 178, "pre_steps_log": [178, 179, 222], "lognam": 179, "r_train": 179, "log_reward": 179, "loss_compon": 180, "appl": 180, "omit": [180, 225], "loss_": 180, "optimizer_hook": 180, "loss_actor": 180, "record_interv": [181, 224], "record_fram": [181, 187, 224], "policy_explor": [181, 205, 224], "log_kei": 181, "suffix": 181, "underestim": 181, "suppos": [181, 222, 229, 230, 231], "set_exploration_mod": [181, 218, 224, 225, 232], "reward_evalu": 181, "reward_norm": 183, "batch_process": [183, 184, 222], "update_reward_stat": 183, "normalize_reward": 183, "make_train": [184, 218], "_process_batch_hook": [184, 222], "versatil": 185, "lossmodul": [185, 204, 205], "optim_steps_per_batch": [185, 222, 224], "epoch": 185, "clip_grad_norm": 185, "partial": [185, 232], "deriv": 185, "clip_norm": 185, "progress_bar": 185, "tqdm": [185, 224, 225], "save_trainer_interv": 185, "disk": [185, 222, 225], "10000": [185, 225], "save_trainer_fil": [185, 222], "_datacollector": [186, 191, 192, 205], "update_weights_interv": 186, "sit": [186, 225], "sync": [186, 205, 222, 224, 232], "update_weight": 186, "post_step": [186, 222], "cfg": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209], "dictconfig": [187, 188, 190, 191, 192, 193, 195, 198, 200, 201, 203, 204, 205, 206, 209], "correct": [187, 225], "divid": 187, "unknowingli": 187, "1m": 187, "annealing_fram": [187, 224], "init_env_step": [187, 188, 224], "proof_environ": [188, 190, 193, 195, 198, 200, 203, 224], "sta": 188, "ot": 188, "a2closs": [189, 218], "in_keys_actor": [190, 198], "observation_kei": [190, 198, 200, 203], "actorvalueoper": [190, 198, 218, 229], "dummi": [190, 193, 195, 198, 200, 203, 231], "actorcriticoper": [190, 198, 218], "parser_env_arg": [190, 198, 200], "make_ppo_model": [190, 218], "parser_model_args_continu": [190, 198, 200, 203], "cattensor": [190, 193, 198, 200, 203, 218, 224, 225, 227, 231], "hydra": [190, 193, 195, 198, 200, 203], "config_stor": [190, 193, 195, 198, 200, 203], "configstor": [190, 193, 195, 198, 200, 203], "dataclass": [190, 193, 195, 198, 200, 203], "halfcheetah": [190, 193, 198, 200, 203, 224], "config_field": [190, 193, 195, 198, 200, 203], "config_cl": [190, 193, 195, 198, 200, 203], "ppomodelconfig": [190, 198], "envconfig": [190, 193, 195, 198, 200, 203], "make_dataclass": [190, 193, 195, 198, 200, 203], "cls_name": [190, 193, 195, 198, 200, 203], "config_path": [190, 193, 195, 198, 200, 203], "config_nam": [190, 193, 195, 198, 200, 203], "actor_valu": [190, 198], "17": [190, 193, 198, 200, 203, 224], "actor_model_explor": [191, 192, 224], "make_env_kwarg": [191, 192], "actor_net_kwarg": [193, 200, 203], "value_net_kwarg": [193, 203], "modulelist": [193, 200, 203], "ddpgcnnactor": [193, 218], "ddpgmlpactor": [193, 218], "ddpgcnnqnet": [193, 218], "ddpgmlpqnet": [193, 218], "ddpgmodelconfig": 193, "targetnetupdat": [194, 196, 199, 202, 204, 205], "discretemodelconfig": 195, "pong": [195, 231], "v5": [195, 231], "pixels_onli": [195, 224, 225, 231, 232], "210": [195, 231], "160": [195, 231], "ppoloss": [197, 218], "redqloss_deprec": 199, "qvalue_net_kwarg": [200, 203], "qvalu": [200, 203, 224, 225], "redqmodelconfig": 200, "replayargsconfig": 201, "sacmodelconfig": 203, "target_net_updat": 205, "constitu": 205, "learnt": [205, 225], "tempfil": 205, "tensorboardlogg": [205, 218], "tensordictreplaybuff": [205, 218, 224, 225], "egreedywrapp": [205, 218, 225], "env_proof": 205, "obs_spec": 205, "net_valu": 205, "dir": [205, 222], "gettempdir": 205, "exp_nam": [205, 210, 211, 212, 213, 214, 224], "argpars": [206, 209], "namespac": [206, 209], "parser": [206, 209], "transformed_env_constructor": [206, 218], "env_kwarg": [207, 208, 224], "num_env_per_collector": [207, 208], "num_collector": [207, 208], "less": [207, 208, 224, 225, 232], "video_tag": 209, "norm_obs_onli": 209, "use_env_cr": 209, "custom_env_mak": 209, "custom_env": 209, "return_transformed_env": 209, "action_dim_gsd": 209, "state_dim_gsd": 209, "batch_dim": [209, 230], "obs_norm_state_dict": 209, "wheter": 209, "maker": [209, 224], "overrid": 209, "exclus": 209, "log_dir": [210, 211, 213, 216], "minim": [210, 229], "dependeci": 210, "csv": [210, 216], "templat": 211, "tracking_uri": 212, "mlflow": [212, 216], "uri": 212, "datastor": 212, "tb_log": 213, "tensoarboard": 213, "tensorboard": [213, 216, 232], "wandb": [214, 216, 232], "experiment_nam": [215, 216], "uuid": [215, 231], "date": 215, "logger_typ": 216, "logger_nam": 216, "wandb_kwarg": 216, "mlflow_kwarg": 216, "randompolici": 218, "asyncdatacollector": 218, "tensordictprioritizedreplaybuff": [218, 224, 232], "remotetensordictreplaybuff": 218, "prioritizedsampl": 218, "binarydiscretetensorspec": 218, "multonehotdiscretetensorspec": 218, "discretetensorspec": 218, "multistep": [218, 224, 225], "binarizereward": 218, "catfram": [218, 225], "centercrop": 218, "finitetensordictcheck": 218, "flattenobserv": 218, "frameskiptransform": 218, "grayscal": [218, 225, 231], "gsdenois": 218, "noopresetenv": [218, 231, 232], "observationtransform": 218, "pinmemorytransform": 218, "rewardsum": 218, "squeezetransform": 218, "stepcount": 218, "tensordictprim": 218, "unsqueezetransform": 218, "r3mtransform": 218, "viptransform": 218, "viprewardtransform": 218, "tensordictrecord": 218, "videorecord": 218, "step_mdp": [218, 224, 225, 231, 232], "get_available_librari": 218, "braxenv": 218, "braxwrapp": 218, "dmcontrolenv": [218, 224, 227, 231], "dmcontrolwrapp": 218, "jumanjienv": 218, "jumanjiwrapp": 218, "actorcriticwrapp": [218, 229], "additivegaussianwrapp": 218, "ornsteinuhlenbeckprocesswrapp": [218, 224], "is_tensordict_compat": 218, "ensure_tensordict_compat": 218, "qvaluehook": 218, "distributionalqvaluehook": 218, "duelingcnndqnet": [218, 225], "distributionaldqnnet": 218, "lstmnet": 218, "dreameractor": 218, "obsencod": 218, "obsdecod": 218, "rssmprior": 218, "rssmposterior": 218, "reset_nois": 218, "cemplann": 218, "mpcplannerbas": 218, "mppiplann": 218, "independentnorm": 218, "truncatednorm": 218, "tanhdelta": [218, 224], "onehotcategor": 218, "inv_softplu": 218, "distributionaldqnloss": [218, 225], "reinforceloss": 218, "dreameractorloss": 218, "dreamermodelloss": 218, "dreamervalueloss": 218, "gae": 218, "tdestim": 218, "generalized_advantage_estim": 218, "vec_generalized_advantage_estim": 218, "vec_td_lambda_return_estim": 218, "vec_td_lambda_advantage_estim": [218, 224, 225], "td_lambda_return_estim": 218, "td_lambda_advantage_estim": 218, "td_advantage_estim": 218, "distance_loss": 218, "hold_out_net": [218, 224], "hold_out_param": 218, "softupd": [218, 224], "hardupd": [218, 224], "batchsubsampl": [218, 222], "clearcudacach": 218, "countframeslog": 218, "logreward": [218, 222], "optimizerhook": 218, "rewardnorm": 218, "selectkei": [218, 222], "updateweight": [218, 222], "make_a2c_loss": 218, "make_a2c_model": 218, "make_collector_offpolici": 218, "make_collector_onpolici": 218, "make_ddpg_actor": [218, 224], "make_ddpg_loss": 218, "make_dqn_actor": 218, "make_dqn_loss": 218, "make_ppo_loss": 218, "make_redq_loss": 218, "make_redq_model": 218, "make_replay_buff": [218, 224], "make_sac_loss": 218, "make_sac_model": 218, "make_target_updat": 218, "parallel_env_constructor": [218, 224], "sync_async_collector": 218, "sync_sync_collector": 218, "correct_for_frame_skip": 218, "get_stats_random_rollout": [218, 224], "csvlogger": 218, "mlflowlogg": 218, "wandblogg": 218, "get_logg": 218, "generate_exp_nam": 218, "journei": 219, "guid": [219, 224, 225], "textbook": 219, "highlight": 219, "readi": [219, 227], "ever": 219, "cover": [219, 232], "bump": 219, "think": [219, 231], "benefit": 219, "submit": [219, 232], "pr": 219, "outer": [222, 224, 231], "believ": 222, "scheme": [222, 231], "substenti": 222, "_pre_steps_log_hook": 222, "_pre_optim_hook": 222, "sub_batch": 222, "_post_loss_hook": 222, "post_loss": 222, "_post_optim_hook": 222, "post_optim": 222, "_post_optim_log": 222, "post_optim_log": 222, "_post_steps_hook": 222, "_post_steps_log_hook": 222, "post_steps_log": 222, "comment": [222, 232], "categori": 222, "extens": 222, "replaybuffertrain": 222, "reserv": 222, "trainerhookbas": 222, "three": [222, 225], "logginghook": 222, "logging_hook": 222, "save_dict": 222, "some_valu": 222, "els": [222, 224, 225], "torchsnapshot": 222, "ckpt_backend": 222, "wherea": [222, 224, 229], "pt": [222, 225], "filepath": 222, "select_kei": 222, "save_train": 222, "load_from_fil": 222, "perfectli": 222, "intern": 223, "click": [224, 225, 227, 229, 230, 231, 232], "tutori": [224, 225, 227, 228, 229, 231, 232], "familiar": [224, 225, 231], "suffici": [224, 225], "transpar": [224, 225], "understood": [224, 225], "sota": [224, 225, 232], "rather": [224, 225], "illustr": [224, 225], "deepcopi": 224, "matplotlib": [224, 225, 231], "pyplot": [224, 225, 231], "plt": [224, 225, 231], "wish": 224, "env_librari": 224, "env_task": 224, "env_arg": 224, "elif": [224, 225], "notimplementederror": 224, "rescal": 224, "leav": 224, "make_transformed_env": 224, "reward_sc": 224, "double_to_float_list": 224, "double_to_float_inv_list": 224, "dmcontrol": 224, "downstream": 224, "_stat": 224, "leverag": [224, 231], "env_per_collector": 224, "parallel_env": [224, 231, 232], "td_stat": 224, "_td_stat": 224, "numel": 224, "_td_stats_select": 224, "to_tensordict": [224, 225, 230], "got": [224, 230], "isfinit": 224, "sd": 224, "get_env_stat": 224, "proof_env": 224, "env_spec": 224, "actor_net": 224, "num_lay": 224, "actor_modul": [224, 232], "q_net": 224, "qnet": 224, "frequenc": 224, "make_record": 224, "recorder_obj": 224, "higher": [224, 225, 231], "likelihood": 224, "special": [224, 229, 231], "arrai": 224, "prb": 224, "buffer_s": [224, 225], "buffer_scratch_dir": 224, "adjust": 224, "device_count": [224, 225, 231], "1000000": 224, "becom": [224, 231], "lr": [224, 225], "5e": 224, "weight_decai": 224, "5000": 224, "warm": 224, "tau": [224, 225], "005": [224, 225], "tmp": 224, "n_steps_forward": 224, "semin": 224, "qnet_target": 224, "9152e": 224, "3728e": 224, "00": [224, 228], "6790e": 224, "02": 224, "8100e": 224, "0432e": 224, "4661e": 224, "7335e": 224, "6330e": 224, "3439e": 224, "04": [224, 228], "3564e": 224, "1885e": 224, "4405e": 224, "1127e": 224, "9993e": 224, "7058e": 224, "7317e": 224, "3022e": 224, "2335": 224, "3836": 224, "3375": 224, "3587": 224, "3461": 224, "4445": 224, "3917": 224, "3489": 224, "5510": 224, "5761": 224, "1731": 224, "4106": 224, "3918": 224, "0521": 224, "4038": 224, "4419": 224, "9479": 224, "coupl": 224, "async": [224, 232], "transmiss": 224, "3018685293": 224, "adam": [224, 225], "optimizer_actor": 224, "optimizer_qnet": 224, "total_collection_step": 224, "scheduler1": 224, "lr_schedul": 224, "cosineannealinglr": 224, "t_max": 224, "scheduler2": 224, "temporarili": 224, "henc": 224, "word": [224, 231], "Then": [224, 227], "fed": 224, "hood": 224, "metadata": [224, 231], "ommit": 224, "earli": [224, 232], "rewards_ev": 224, "norm_factor_train": 224, "collected_fram": 224, "pbar": [224, 225], "r0": 224, "filter": 224, "current_fram": [224, 225], "sampled_tensordict": 224, "backprop": 224, "next_valu": [224, 225], "value_est": 224, "pow": [224, 225], "sampled_tensordict_actor": 224, "actor_loss": 224, "p_in": 224, "p_dest": 224, "zip": [224, 226], "copy_": 224, "b_in": 224, "b_dest": 224, "td_record": 224, "r_evalu": 224, "set_descript": [224, 225], "4f": [224, 225], "2500": 224, "289": 224, "63it": 224, "memmapstorag": 224, "n86lcbrk": 224, "057220458984375": 224, "mb": [224, 228], "j99zfkec": 224, "002384185791015625": 224, "d88hlaik": 224, "0095367431640625": 224, "8oviun_": 224, "7_uyugwj": 224, "xkqd0qcb": 224, "osng0rnr": 224, "1621246337890625": 224, "2k1zep9t": 224, "nq1j0d4w": 224, "wmy_pzrm": 224, "adv6hzog": 224, "019073486328125": 224, "steps_to_next_ob": [224, 225], "6s_kv2y": 224, "1402tkmf": 224, "tmphb37p4y_": 224, "2201": 224, "3075": 224, "7543": 224, "07": [224, 228], "40": 224, "126": 224, "27it": 224, "1951": 224, "60": [224, 232], "1500": 224, "122": [224, 231], "36it": 224, "3147": 224, "80": 224, "166": 224, "66it": 224, "7575": 224, "196": 224, "20it": 224, "9202": 224, "plot": [224, 225], "mention": [224, 225, 231], "figur": [224, 225, 229, 231], "label": [224, 225, 230], "legend": [224, 225], "xlabel": [224, 225], "ylabel": [224, 225], "tight_layout": [224, 225], "250": 224, "devid": 224, "100000": [224, 225], "batch_size_traj": 224, "simplic": [224, 229], "td_lambda": 224, "roughli": [224, 232], "four": 224, "big": [224, 225, 231], "inde": [224, 230], "revert": 224, "compli": [224, 230], "incompat": [224, 230], "bit": 224, "rand_idx": 224, "kjqzop8h": 224, "1444091796875": 224, "6ez6nypt": 224, "0476837158203125": 224, "y_stngqb": 224, "000762939453125": 224, "j56ag8k0": 224, "1jt4soqw": 224, "24249267578125": 224, "l1h04q8f": 224, "rjud34mx": 224, "19073486328125": 224, "vi3zhga2": 224, "3814697265625": 224, "74j74z1q": 224, "tmpraxse0pl": 224, "titl": [224, 225], "labmda": 224, "text": 224, "minut": [224, 225, 227, 229, 230, 231, 232], "092": [224, 228], "coding_ddpg": [224, 228], "jupyt": [224, 225, 226, 227, 229, 230, 231, 232], "ipynb": [224, 225, 227, 229, 230, 231, 232], "galleri": [224, 225, 226, 227, 229, 230, 231, 232], "sphinx": [224, 225, 226, 227, 229, 230, 231, 232], "cartpol": [225, 231], "tabl": 225, "pick": 225, "highest": 225, "discretiz": 225, "amort": 225, "seen": 225, "past": 225, "esitm": 225, "ipython": 225, "get_funct": [225, 229], "is_notebook": 225, "shell": 225, "get_ipython": 225, "__class__": 225, "zmqinteractiveshel": 225, "qtconsol": 225, "terminalinteractiveshel": 225, "nameerror": 225, "interpret": 225, "hyperparam": 225, "hopefulli": 225, "sentit": 225, "variat": 225, "2e": 225, "harder": [225, 232], "restrict": [225, 231], "n_optim": 225, "n_worker": 225, "smooth": 225, "loos": 225, "notic": 225, "eps_greedy_v": 225, "eps_greedy_val_env": 225, "05": 225, "predefin": 225, "init_bia": 225, "500000": 225, "techin": 225, "dummy_env": 225, "9906749725341797": 225, "08239758759737015": 225, "pole": 225, "un": 225, "actuat": 225, "cart": 225, "frictionless": 225, "upright": [225, 231], "balanc": [225, 231], "pixels_sav": 225, "eval_rollout": 225, "imageio": 225, "mimwrit": 225, "cartpole_random": 225, "mp4": 225, "fp": 225, "480": 225, "360": 225, "trick": 225, "num_ob": 225, "num_act": 225, "make_model": 225, "output_s": 225, "could": [225, 230, 231], "unflatten_kei": 225, "fairli": 225, "params_target": 225, "actor_explor": 225, "params_flat": 225, "flatten_kei": 225, "params_target_flat": 225, "600": 225, "bootstrap": 225, "value_next_step": 225, "not_termin": 225, "significantli": 225, "data_collector": 225, "traj_lengths_ev": 225, "grad_val": 225, "traj_length": 225, "mavg": 225, "traj_count": 225, "prev_traj_count": 225, "enough": 225, "sampled_data": 225, "sampled_data_out": 225, "tdstep": 225, "exp_valu": 225, "mse_loss": 225, "gv": 225, "clip_grad_value_": 225, "set_": 225, "clear_output": 225, "gcf": 225, "clf": 225, "figsiz": 225, "subplot": [225, 231], "traj": 225, "savefig": 225, "dqn_td0": 225, "png": 225, "traceback": [225, 229, 232], "__w": [225, 229, 232], "doc": [225, 229, 232], "coding_dqn": [225, 228], "382": 225, "indexerror": 225, "imshow": [225, 231], "imread": 225, "axi": 225, "traj_lengths_train": 225, "saved_results_td0": 225, "entir": 225, "capac": 225, "smooth_l1_loss": 225, "clip_grad_norm_": 225, "dqn_tdlambda": 225, "saved_results_tdlambda": 225, "fewer": 225, "load_td0": 225, "load_tdlambda": 225, "frames_td0": 225, "frames_tdlambda": 225, "evals_td0": 225, "evals_tdlambda": 225, "mavgs_td0": 225, "mavgs_tdlambda": 225, "losses_td0": 225, "losses_tdlambda": 225, "values_td0": 225, "values_tdlambda": 225, "grad_vals_td0": 225, "grad_vals_tdlambda": 225, "traj_lengths_td0": 225, "traj_lengths_tdlambda": 225, "traj_count_td0": 225, "traj_count_tdlambda": 225, "td0": 225, "goe": [225, 231], "greatli": 225, "nth": 225, "noticebli": 225, "myopic": 225, "collectorclass": 225, "till": 225, "worst": 225, "accuraci": 225, "fanci": 225, "365": [225, 228], "tutorials_python": 226, "tutorials_jupyt": 226, "distinct": 227, "humanoid": [227, 231], "walk": [227, 231], "env1": 227, "env1_obs_kei": 227, "observation_stand": 227, "env2": 227, "env2_obs_kei": 227, "observation_walk": 227, "tdreset1": 227, "tdreset2": 227, "tdreset": 227, "67": 227, "backbon": [227, 232], "policy_common": 227, "policy_stand": 227, "policy_walk": 227, "seq": 227, "21": 227, "But": 227, "env1_mak": 227, "env2_mak": 227, "_single_task": 227, "td_rollout": 227, "shown": 227, "392": [227, 228], "multi_task": [227, 228], "897": 228, "torch_env": [228, 231], "25": [228, 231], "505": [228, 231], "torchrl_demo": [228, 232], "503": [228, 232], "020": [228, 229, 230], "tensordict_tutori": [228, 230], "recommand": 229, "conveni": [229, 230], "a_out": 229, "mergelinear": 229, "in_1": 229, "in_2": 229, "linear_1": 229, "linear_2": 229, "x_1": 229, "x_2": 229, "multiheadlinear": 229, "out_1": 229, "out_2": 229, "splitlinear": 229, "output_1": 229, "output_2": 229, "split_and_merge_linear": 229, "make_functional_with_buff": 229, "replica": 229, "params_expand": [229, 232], "buffers_expand": 229, "num_model": 229, "group": 229, "zeros_lik": 229, "result_td": 229, "ok": 229, "conflict": 229, "wire": 229, "tensordictsequentialand": 229, "block": 229, "demonstr": [229, 231], "architectur": 229, "vaswani": 229, "2017": 229, "asid": 229, "src": 229, "ffn": 229, "skiplayernorm": 229, "splithead": 229, "tokenstoqkv": 229, "339": 229, "modulenotfounderror": 229, "attentionblocktensordict": 229, "connect": 229, "moreov": 229, "complic": [229, 230, 231], "to_nam": 229, "from_nam": 229, "to_dim": 229, "to_len": 229, "from_dim": 229, "latent_dim": 229, "num_head": 229, "x_out": 229, "attn": 229, "thank": 229, "transformerblockencodertensordict": 229, "transformerblockdecodertensordict": 229, "token": 229, "extract": 229, "x_from": 229, "x_to": 229, "transformerencodertensordict": 229, "num_block": 229, "transformerdecodertensordict": 229, "transformertensordict": 229, "from_len": 229, "x_encod": 229, "x_decod": 229, "ve": 229, "operar": 229, "td_token": 229, "tdtransform": 229, "t1": 229, "t2": 229, "t3": 229, "t4": 229, "margin": 229, "deal": 230, "furthermor": 230, "awai": 230, "organ": 230, "power": 230, "segment": 230, "get_data_a": 230, "get_data_b": 230, "reusabl": 230, "lot": 230, "rewriten": 230, "modal": 230, "get_data": 230, "reus": 230, "argu": 230, "dictdataset": 230, "__getitem__": 230, "collat": 230, "collate_dict_fn": 230, "dict_list": 230, "final_dict": 230, "single_dict": 230, "simpler": 230, "collate_tensordict_fn": 230, "furtherdown": 230, "_permutedtensordict": 230, "_unsqueezedtensordict": 230, "_viewedtensordict": 230, "datastructur": 230, "explicitli": 230, "caramba": 230, "algebra": 230, "foo": [230, 231], "multidimension": 230, "insid": [230, 231], "violat": 230, "err": 230, "resp": 230, "among": 230, "tensordict_clon": 230, "tensodict": 230, "tuple_index": 230, "new_tensordict": 230, "get_sub_tensordict": 230, "subtensordict": 230, "subtd": 230, "td2": 230, "booltensor": 230, "fashion": 230, "clonned_tensordict": 230, "staked_tensordict": 230, "isinst": 230, "unbind": 230, "list_tensordict": 230, "comeback": 230, "permut": [230, 231, 232], "unsqueezed_tensordict": 230, "role": 231, "supervis": 231, "unsupervis": 231, "rom": 231, "licens": 231, "pygam": 231, "unifi": 231, "_build_env": 231, "sphinx_gallery_start_ignor": 231, "warn": 231, "filterwarn": 231, "sphinx_gallery_end_ignor": 231, "adventur": 231, "ram": 231, "airraid": 231, "alien": 231, "amidar": 231, "assault": 231, "continuousbox": 231, "0998": 231, "pack": 231, "brief": 231, "exectut": 231, "reproduct": 231, "did": 231, "shortcut": 231, "tensordict_tprim": 231, "tensordict_rollout": [231, 232], "quickli": 231, "axesimag": 231, "0x7effaaf23d00": 231, "inconsist": 231, "supplementari": 231, "again": 231, "swingup": 231, "swingup_spars": 231, "ball_in_cup": 231, "catch": 231, "balance_spars": 231, "three_pol": 231, "two_pol": 231, "finger": 231, "turn_easi": 231, "turn_hard": 231, "fish": 231, "swim": 231, "hopper": 231, "hop": 231, "run_pure_st": 231, "bring_bal": 231, "bring_peg": 231, "insert_bal": 231, "insert_peg": 231, "point_mass": 231, "reacher": 231, "swimmer": 231, "swimmer6": 231, "swimmer15": 231, "walker": 231, "dog": 231, "trot": 231, "humanoid_cmu": 231, "lqr": 231, "lqr_2_1": 231, "lqr_6_2": 231, "quadrup": 231, "escap": 231, "stacker": 231, "stack_2": 231, "stack_4": 231, "240": [231, 232], "320": 231, "env_transform": 231, "wrapper1": 231, "wrapper2": 231, "obviou": 231, "truth": 231, "extern": 231, "env0": 231, "env_transformed_bi": 231, "stanc": 231, "transformeddistribut": 231, "base_dist": 231, "unboundeddiscretetensorspec": 231, "concat": 231, "mofidi": 231, "_inv_apply_transform": 231, "_apply_transform": 231, "transformedenviron": 231, "moderet": 231, "computation": 231, "legitim": 231, "side": 231, "incom": 231, "amongst": 231, "has_cuda": 231, "simplest": 231, "wor": 231, "convention": 231, "scope": 231, "difficulti": 231, "markovian": 231, "3288080526": 231, "sometim": 231, "constain": 231, "uuid1": 231, "bar_": 231, "get_someth": 231, "bar_907899f8": 231, "8d24": 231, "11ed": 231, "94b8": 231, "0242ac120002": 231, "aargh": 231, "ourselv": 231, "foo_list": 231, "vec_env": 231, "_dispatch_caller_parallel": 231, "0x7eff9c44e950": 231, "bar_938f4916": 231, "bff3": 231, "bar_93b36e0": 231, "b20b": 231, "bar_93b82516": 231, "8aef": 231, "121": 231, "parallen": 231, "carefulli": 231, "commonli": 231, "approxim": 231, "particularili": 231, "evolv": 231, "caution": 231, "previous": 231, "steadi": 231, "approx": 231, "4373": 231, "0815": 231, "2713": 231, "2644": 231, "2867": 231, "3620": 231, "_extra_st": 231, "observation_ssq": 231, "observation_sum": 231, "0791": 231, "1906": 231, "0669": 231, "0032": 231, "9889": 231, "8975": 231, "dispach": 231, "small": 231, "absor": 231, "18": 231, "demo": 232, "icml": 232, "dai": 232, "overview": 232, "vmoen": 232, "fb": 232, "question": 232, "team": 232, "decid": 232, "invest": 232, "platform": 232, "media": 232, "truli": 232, "rest": 232, "predominantli": 232, "tensordict1": 232, "tensordict2": 232, "tensordict_sampl": 232, "_sum_tre": 232, "28791671991348267": 232, "06984968483448029": 232, "gym_env": 232, "366": 232, "431": 232, "tensordict_reset": 232, "469": 232, "out_tensordict": 232, "681": 232, "2004": 232, "valueerror": 232, "myenv": 232, "othertransform": 232, "squash": 232, "backbone_modul": 232, "value_modul": 232, "tensordict_exp": 232, "base_modul": 232, "is_don": 232, "tensordicts_prealloc": 232, "tensordicts_stack": 232, "disclaim": 232, "concatmodul": 232, "loss_td": 232, "bug": 232, "year": 232, "roadmap": 232, "compris": 232, "hierarch": 232, "contributor": 232, "curiou": 232, "feedback": 232, "nascent": 232, "pypi": 232}, "objects": {"torchrl._utils": [[10, 0, 1, "", "implement_for"]], "torchrl.collectors.collectors": [[11, 0, 1, "", "MultiSyncDataCollector"], [12, 0, 1, "", "MultiaSyncDataCollector"], [13, 0, 1, "", "RandomPolicy"], [14, 0, 1, "", "SyncDataCollector"], [15, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[14, 1, 1, "", "iterator"], [14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "rollout"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[16, 2, 1, "", "split_trajectories"]], "torchrl.data": [[17, 0, 1, "", "BinaryDiscreteTensorSpec"], [18, 0, 1, "", "BoundedTensorSpec"], [19, 0, 1, "", "CompositeSpec"], [20, 0, 1, "", "DiscreteTensorSpec"], [21, 0, 1, "", "MultOneHotDiscreteTensorSpec"], [22, 0, 1, "", "MultiStep"], [23, 0, 1, "", "OneHotDiscreteTensorSpec"], [24, 0, 1, "", "PrioritizedReplayBuffer"], [25, 0, 1, "", "ReplayBuffer"], [26, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [27, 0, 1, "", "TensorDictReplayBuffer"], [28, 0, 1, "", "TensorSpec"], [29, 0, 1, "", "UnboundedContinuousTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "keys"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.MultOneHotDiscreteTensorSpec": [[21, 1, 1, "", "assert_is_in"], [21, 1, 1, "", "encode"], [21, 1, 1, "", "index"], [21, 1, 1, "", "is_in"], [21, 1, 1, "", "project"], [21, 1, 1, "", "rand"], [21, 1, 1, "", "to_numpy"], [21, 1, 1, "", "type_check"], [21, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[22, 1, 1, "", "add_module"], [22, 1, 1, "", "apply"], [22, 1, 1, "", "bfloat16"], [22, 1, 1, "", "buffers"], [22, 1, 1, "", "children"], [22, 1, 1, "", "cpu"], [22, 1, 1, "", "cuda"], [22, 1, 1, "", "double"], [22, 1, 1, "", "eval"], [22, 1, 1, "", "extra_repr"], [22, 1, 1, "", "float"], [22, 1, 1, "", "forward"], [22, 1, 1, "", "get_buffer"], [22, 1, 1, "", "get_extra_state"], [22, 1, 1, "", "get_parameter"], [22, 1, 1, "", "get_submodule"], [22, 1, 1, "", "half"], [22, 1, 1, "", "ipu"], [22, 1, 1, "", "load_state_dict"], [22, 1, 1, "", "modules"], [22, 1, 1, "", "named_buffers"], [22, 1, 1, "", "named_children"], [22, 1, 1, "", "named_modules"], [22, 1, 1, "", "named_parameters"], [22, 1, 1, "", "parameters"], [22, 1, 1, "", "register_backward_hook"], [22, 1, 1, "", "register_buffer"], [22, 1, 1, "", "register_forward_hook"], [22, 1, 1, "", "register_forward_pre_hook"], [22, 1, 1, "", "register_full_backward_hook"], [22, 1, 1, "", "register_load_state_dict_post_hook"], [22, 1, 1, "", "register_module"], [22, 1, 1, "", "register_parameter"], [22, 1, 1, "", "requires_grad_"], [22, 1, 1, "", "set_extra_state"], [22, 1, 1, "", "share_memory"], [22, 1, 1, "", "state_dict"], [22, 1, 1, "", "to"], [22, 1, 1, "", "to_empty"], [22, 1, 1, "", "train"], [22, 1, 1, "", "type"], [22, 1, 1, "", "xpu"], [22, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[24, 1, 1, "", "add"], [24, 1, 1, "", "extend"], [24, 1, 1, "", "sample"], [24, 1, 1, "", "update_priority"]], "torchrl.data.ReplayBuffer": [[25, 1, 1, "", "add"], [25, 1, 1, "", "extend"], [25, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "update_priority"]], "torchrl.data.TensorDictReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.rb_prototype": [[30, 0, 1, "", "RemoteTensorDictReplayBuffer"], [31, 0, 1, "", "ReplayBuffer"], [32, 0, 1, "", "TensorDictReplayBuffer"]], "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer": [[30, 1, 1, "", "add"], [30, 1, 1, "", "append_transform"], [30, 1, 1, "", "extend"], [30, 1, 1, "", "insert_transform"], [30, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer": [[31, 1, 1, "", "add"], [31, 1, 1, "", "append_transform"], [31, 1, 1, "", "extend"], [31, 1, 1, "", "insert_transform"], [31, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer": [[32, 1, 1, "", "add"], [32, 1, 1, "", "append_transform"], [32, 1, 1, "", "extend"], [32, 1, 1, "", "insert_transform"], [32, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.samplers": [[33, 0, 1, "", "PrioritizedSampler"], [34, 0, 1, "", "RandomSampler"], [35, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[33, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[36, 0, 1, "", "LazyMemmapStorage"], [37, 0, 1, "", "LazyTensorStorage"], [38, 0, 1, "", "ListStorage"], [39, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[36, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[39, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[40, 0, 1, "", "RoundRobinWriter"], [41, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[40, 1, 1, "", "add"], [40, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "extend"]], "torchrl.envs": [[42, 0, 1, "", "EnvBase"], [43, 0, 1, "", "EnvCreator"], [44, 0, 1, "", "EnvMetaData"], [45, 0, 1, "", "GymLikeEnv"], [46, 2, 1, "", "ModelBasedEnvBase"], [47, 0, 1, "", "ParallelEnv"], [48, 0, 1, "", "SerialEnv"], [49, 0, 1, "", "Specs"], [46, 1, 1, "", "rand_step"], [46, 1, 1, "", "reset"], [46, 1, 1, "", "rollout"], [46, 1, 1, "", "set_seed"], [46, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[42, 1, 1, "", "add_module"], [42, 1, 1, "", "apply"], [42, 3, 1, "", "batch_locked"], [42, 1, 1, "", "bfloat16"], [42, 1, 1, "", "buffers"], [42, 1, 1, "", "children"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 1, 1, "", "double"], [42, 1, 1, "", "eval"], [42, 1, 1, "", "extra_repr"], [42, 1, 1, "", "fake_tensordict"], [42, 1, 1, "", "float"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_buffer"], [42, 1, 1, "", "get_extra_state"], [42, 1, 1, "", "get_parameter"], [42, 1, 1, "", "get_submodule"], [42, 1, 1, "", "half"], [42, 1, 1, "", "ipu"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "modules"], [42, 1, 1, "", "named_buffers"], [42, 1, 1, "", "named_children"], [42, 1, 1, "", "named_modules"], [42, 1, 1, "", "named_parameters"], [42, 1, 1, "", "parameters"], [42, 1, 1, "id0", "rand_step"], [42, 1, 1, "", "register_backward_hook"], [42, 1, 1, "", "register_buffer"], [42, 1, 1, "", "register_forward_hook"], [42, 1, 1, "", "register_forward_pre_hook"], [42, 1, 1, "", "register_full_backward_hook"], [42, 1, 1, "", "register_load_state_dict_post_hook"], [42, 1, 1, "", "register_module"], [42, 1, 1, "", "register_parameter"], [42, 1, 1, "", "requires_grad_"], [42, 1, 1, "id1", "reset"], [42, 1, 1, "id2", "rollout"], [42, 1, 1, "", "set_extra_state"], [42, 1, 1, "id3", "set_seed"], [42, 1, 1, "", "share_memory"], [42, 3, 1, "", "specs"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "id4", "step"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_empty"], [42, 1, 1, "", "train"], [42, 1, 1, "", "type"], [42, 1, 1, "", "xpu"], [42, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 3, 1, "", "batch_locked"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "close"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "fake_tensordict"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "read_action"], [45, 1, 1, "", "read_done"], [45, 1, 1, "", "read_obs"], [45, 1, 1, "", "read_reward"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_info_dict_reader"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "share_memory"], [45, 3, 1, "", "specs"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "step"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[47, 1, 1, "", "add_module"], [47, 1, 1, "", "apply"], [47, 3, 1, "", "batch_locked"], [47, 1, 1, "", "bfloat16"], [47, 1, 1, "", "buffers"], [47, 1, 1, "", "children"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 1, 1, "", "double"], [47, 1, 1, "", "eval"], [47, 1, 1, "", "extra_repr"], [47, 1, 1, "", "fake_tensordict"], [47, 1, 1, "", "float"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_buffer"], [47, 1, 1, "", "get_extra_state"], [47, 1, 1, "", "get_parameter"], [47, 1, 1, "", "get_submodule"], [47, 1, 1, "", "half"], [47, 1, 1, "", "ipu"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "modules"], [47, 1, 1, "", "named_buffers"], [47, 1, 1, "", "named_children"], [47, 1, 1, "", "named_modules"], [47, 1, 1, "", "named_parameters"], [47, 1, 1, "", "parameters"], [47, 1, 1, "", "rand_step"], [47, 1, 1, "", "register_backward_hook"], [47, 1, 1, "", "register_buffer"], [47, 1, 1, "", "register_forward_hook"], [47, 1, 1, "", "register_forward_pre_hook"], [47, 1, 1, "", "register_full_backward_hook"], [47, 1, 1, "", "register_load_state_dict_post_hook"], [47, 1, 1, "", "register_module"], [47, 1, 1, "", "register_parameter"], [47, 1, 1, "", "requires_grad_"], [47, 1, 1, "", "reset"], [47, 1, 1, "", "rollout"], [47, 1, 1, "", "set_extra_state"], [47, 1, 1, "", "set_seed"], [47, 1, 1, "", "share_memory"], [47, 3, 1, "", "specs"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "step"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_empty"], [47, 1, 1, "", "train"], [47, 1, 1, "", "type"], [47, 1, 1, "", "update_kwargs"], [47, 1, 1, "", "xpu"], [47, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[48, 1, 1, "", "add_module"], [48, 1, 1, "", "apply"], [48, 3, 1, "", "batch_locked"], [48, 1, 1, "", "bfloat16"], [48, 1, 1, "", "buffers"], [48, 1, 1, "", "children"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 1, 1, "", "double"], [48, 1, 1, "", "eval"], [48, 1, 1, "", "extra_repr"], [48, 1, 1, "", "fake_tensordict"], [48, 1, 1, "", "float"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_buffer"], [48, 1, 1, "", "get_extra_state"], [48, 1, 1, "", "get_parameter"], [48, 1, 1, "", "get_submodule"], [48, 1, 1, "", "half"], [48, 1, 1, "", "ipu"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "modules"], [48, 1, 1, "", "named_buffers"], [48, 1, 1, "", "named_children"], [48, 1, 1, "", "named_modules"], [48, 1, 1, "", "named_parameters"], [48, 1, 1, "", "parameters"], [48, 1, 1, "", "rand_step"], [48, 1, 1, "", "register_backward_hook"], [48, 1, 1, "", "register_buffer"], [48, 1, 1, "", "register_forward_hook"], [48, 1, 1, "", "register_forward_pre_hook"], [48, 1, 1, "", "register_full_backward_hook"], [48, 1, 1, "", "register_load_state_dict_post_hook"], [48, 1, 1, "", "register_module"], [48, 1, 1, "", "register_parameter"], [48, 1, 1, "", "requires_grad_"], [48, 1, 1, "", "reset"], [48, 1, 1, "", "rollout"], [48, 1, 1, "", "set_extra_state"], [48, 1, 1, "", "set_seed"], [48, 1, 1, "", "share_memory"], [48, 3, 1, "", "specs"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "step"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_empty"], [48, 1, 1, "", "train"], [48, 1, 1, "", "type"], [48, 1, 1, "", "update_kwargs"], [48, 1, 1, "", "xpu"], [48, 1, 1, "", "zero_grad"]], "torchrl.envs.Specs": [[49, 1, 1, "", "build_tensordict"]], "torchrl.envs.libs.brax": [[50, 2, 1, "", "BraxEnv"], [51, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[52, 2, 1, "", "DMControlEnv"], [53, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[54, 2, 1, "", "GymEnv"], [55, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[56, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[57, 2, 1, "", "JumanjiEnv"], [58, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.model_based.dreamer": [[59, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[60, 0, 1, "", "BinarizeReward"], [61, 0, 1, "", "CatFrames"], [62, 0, 1, "", "CatTensors"], [63, 0, 1, "", "CenterCrop"], [64, 0, 1, "", "Compose"], [65, 0, 1, "", "DoubleToFloat"], [66, 0, 1, "", "FiniteTensorDictCheck"], [67, 0, 1, "", "FlattenObservation"], [68, 0, 1, "", "FrameSkipTransform"], [69, 0, 1, "", "GrayScale"], [70, 0, 1, "", "NoopResetEnv"], [71, 0, 1, "", "ObservationNorm"], [72, 0, 1, "", "ObservationTransform"], [73, 0, 1, "", "PinMemoryTransform"], [74, 0, 1, "", "R3MTransform"], [75, 0, 1, "", "Resize"], [76, 0, 1, "", "RewardClipping"], [77, 0, 1, "", "RewardScaling"], [78, 0, 1, "", "RewardSum"], [79, 0, 1, "", "SqueezeTransform"], [80, 0, 1, "", "StepCounter"], [81, 0, 1, "", "TensorDictPrimer"], [82, 0, 1, "", "ToTensorImage"], [83, 0, 1, "", "Transform"], [84, 0, 1, "", "TransformedEnv"], [85, 0, 1, "", "UnsqueezeTransform"], [86, 0, 1, "", "VIPRewardTransform"], [87, 0, 1, "", "VIPTransform"], [88, 0, 1, "", "VecNorm"], [89, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[60, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[61, 1, 1, "", "reset"], [61, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[62, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[63, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[64, 1, 1, "", "forward"], [64, 1, 1, "", "reset"], [64, 1, 1, "", "to"], [64, 1, 1, "", "transform_input_spec"], [64, 1, 1, "", "transform_observation_spec"], [64, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[65, 1, 1, "", "transform_input_spec"], [65, 1, 1, "", "transform_observation_spec"], [65, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.FlattenObservation": [[67, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[69, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[70, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[71, 1, 1, "", "init_stats"], [71, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[74, 1, 1, "", "forward"], [74, 1, 1, "", "reset"], [74, 1, 1, "", "to"], [74, 1, 1, "", "transform_input_spec"], [74, 1, 1, "", "transform_observation_spec"], [74, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Resize": [[75, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[76, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[77, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[78, 1, 1, "", "reset"], [78, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SqueezeTransform": [[79, 1, 1, "", "forward"]], "torchrl.envs.transforms.StepCounter": [[80, 1, 1, "", "reset"], [80, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[81, 1, 1, "", "reset"], [81, 1, 1, "", "to"], [81, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[82, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[83, 1, 1, "", "forward"], [83, 1, 1, "", "reset"], [83, 1, 1, "", "transform_input_spec"], [83, 1, 1, "", "transform_observation_spec"], [83, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[84, 3, 1, "", "action_spec"], [84, 3, 1, "", "batch_locked"], [84, 1, 1, "", "eval"], [84, 3, 1, "", "input_spec"], [84, 1, 1, "", "load_state_dict"], [84, 3, 1, "", "observation_spec"], [84, 3, 1, "", "reward_spec"], [84, 1, 1, "", "set_seed"], [84, 1, 1, "", "state_dict"], [84, 1, 1, "", "to"], [84, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[85, 1, 1, "", "forward"], [85, 1, 1, "", "transform_input_spec"], [85, 1, 1, "", "transform_observation_spec"], [85, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[86, 1, 1, "", "forward"], [86, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[87, 1, 1, "", "forward"], [87, 1, 1, "", "reset"], [87, 1, 1, "", "to"], [87, 1, 1, "", "transform_input_spec"], [87, 1, 1, "", "transform_observation_spec"], [87, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VecNorm": [[88, 1, 1, "", "build_td_for_shared_vecnorm"], [88, 1, 1, "", "get_extra_state"], [88, 1, 1, "", "set_extra_state"], [88, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[89, 1, 1, "", "reset"]], "torchrl.envs.utils": [[90, 2, 1, "", "check_env_specs"], [91, 2, 1, "", "exploration_mode"], [92, 2, 1, "", "get_available_libraries"], [93, 2, 1, "", "set_exploration_mode"], [94, 2, 1, "", "step_mdp"]], "torchrl.modules": [[95, 0, 1, "", "CEMPlanner"], [96, 0, 1, "", "ConvNet"], [97, 0, 1, "", "DdpgCnnActor"], [98, 0, 1, "", "DdpgCnnQNet"], [99, 0, 1, "", "DdpgMlpActor"], [100, 0, 1, "", "DdpgMlpQNet"], [101, 0, 1, "", "Delta"], [102, 0, 1, "", "DistributionalDQNnet"], [103, 0, 1, "", "DreamerActor"], [104, 0, 1, "", "DuelingCnnDQNet"], [105, 0, 1, "", "IndependentNormal"], [106, 0, 1, "", "LSTMNet"], [107, 0, 1, "", "MLP"], [108, 0, 1, "", "MPCPlannerBase"], [109, 0, 1, "", "MPPIPlanner"], [110, 0, 1, "", "NoisyLazyLinear"], [111, 0, 1, "", "NoisyLinear"], [112, 0, 1, "", "NormalParamWrapper"], [113, 0, 1, "", "ObsDecoder"], [114, 0, 1, "", "ObsEncoder"], [115, 0, 1, "", "OneHotCategorical"], [116, 0, 1, "", "RSSMPosterior"], [117, 0, 1, "", "RSSMPrior"], [118, 0, 1, "", "TanhDelta"], [119, 0, 1, "", "TanhNormal"], [120, 0, 1, "", "TruncatedNormal"], [121, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[95, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[96, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[97, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[98, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[99, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[100, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[101, 1, 1, "", "log_prob"], [101, 3, 1, "", "mean"], [101, 3, 1, "", "mode"], [101, 1, 1, "", "rsample"], [101, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[102, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[103, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[104, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[105, 3, 1, "", "mode"]], "torchrl.modules.LSTMNet": [[106, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[107, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[108, 1, 1, "", "forward"], [108, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[109, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[110, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[112, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[113, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[114, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[115, 1, 1, "", "log_prob"], [115, 3, 1, "", "mode"], [115, 1, 1, "", "rsample"], [115, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[116, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[117, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[118, 3, 1, "", "mean"], [118, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[119, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[120, 1, 1, "", "log_prob"], [120, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module": [[122, 0, 1, "", "Actor"], [123, 0, 1, "", "ActorCriticOperator"], [124, 0, 1, "", "ActorCriticWrapper"], [125, 0, 1, "", "ActorValueOperator"], [126, 0, 1, "", "AdditiveGaussianWrapper"], [127, 0, 1, "", "DistributionalQValueActor"], [128, 0, 1, "", "EGreedyWrapper"], [129, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [130, 0, 1, "", "ProbabilisticActor"], [131, 0, 1, "", "QValueActor"], [132, 0, 1, "", "SafeModule"], [133, 0, 1, "", "SafeProbabilisticModule"], [134, 0, 1, "", "SafeProbabilisticSequential"], [135, 0, 1, "", "SafeSequential"], [136, 0, 1, "", "ValueOperator"], [137, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[123, 1, 1, "", "get_critic_operator"], [123, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[124, 1, 1, "", "get_policy_operator"], [124, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[125, 1, 1, "", "get_policy_operator"], [125, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.SafeModule": [[132, 1, 1, "", "random"], [132, 1, 1, "", "random_sample"], [132, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[133, 1, 1, "", "random"], [133, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[137, 1, 1, "", "get_reward_operator"], [137, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.tensordict_module.actors": [[138, 0, 1, "", "DistributionalQValueHook"], [139, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[140, 0, 1, "", "ensure_tensordict_compatible"], [141, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[142, 0, 1, "", "biased_softplus"], [143, 0, 1, "", "inv_softplus"], [144, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[142, 1, 1, "", "forward"]], "torchrl.objectives": [[145, 0, 1, "", "A2CLoss"], [146, 0, 1, "", "ClipPPOLoss"], [147, 0, 1, "", "DDPGLoss"], [148, 0, 1, "", "DQNLoss"], [149, 0, 1, "", "DistributionalDQNLoss"], [150, 0, 1, "", "DreamerActorLoss"], [151, 0, 1, "", "DreamerModelLoss"], [152, 0, 1, "", "DreamerValueLoss"], [153, 0, 1, "", "HardUpdate"], [154, 0, 1, "", "KLPENPPOLoss"], [155, 0, 1, "", "PPOLoss"], [156, 0, 1, "", "REDQLoss"], [157, 0, 1, "", "ReinforceLoss"], [158, 0, 1, "", "SACLoss"], [159, 0, 1, "", "SoftUpdate"], [160, 0, 1, "", "distance_loss"], [161, 0, 1, "", "hold_out_net"], [162, 0, 1, "", "hold_out_params"], [163, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[145, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[146, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[147, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[148, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[149, 1, 1, "", "forward"]], "torchrl.objectives.DreamerActorLoss": [[150, 1, 1, "", "forward"]], "torchrl.objectives.DreamerModelLoss": [[151, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[152, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[154, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[155, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[156, 1, 1, "", "forward"]], "torchrl.objectives.ReinforceLoss": [[157, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[158, 1, 1, "", "forward"]], "torchrl.objectives.value": [[164, 0, 1, "", "GAE"], [165, 0, 1, "", "TDEstimate"], [166, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[164, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[165, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[166, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[167, 0, 1, "", "generalized_advantage_estimate"], [168, 0, 1, "", "td_advantage_estimate"], [169, 0, 1, "", "td_lambda_advantage_estimate"], [170, 0, 1, "", "td_lambda_return_estimate"], [171, 0, 1, "", "vec_generalized_advantage_estimate"], [172, 0, 1, "", "vec_td_lambda_advantage_estimate"], [173, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[174, 2, 1, "", "TensorDictRecorder"], [175, 2, 1, "", "VideoRecorder"]], "torchrl.trainers": [[176, 0, 1, "", "BatchSubSampler"], [177, 0, 1, "", "ClearCudaCache"], [178, 0, 1, "", "CountFramesLog"], [179, 0, 1, "", "LogReward"], [180, 0, 1, "", "OptimizerHook"], [181, 0, 1, "", "Recorder"], [182, 0, 1, "", "ReplayBuffer"], [183, 0, 1, "", "RewardNormalizer"], [184, 0, 1, "", "SelectKeys"], [185, 0, 1, "", "Trainer"], [186, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.ReplayBuffer": [[182, 1, 1, "", "add"], [182, 1, 1, "", "extend"], [182, 1, 1, "", "sample"]], "torchrl.trainers.helpers": [[187, 2, 1, "", "correct_for_frame_skip"], [188, 2, 1, "", "get_stats_random_rollout"], [189, 2, 1, "", "make_a2c_loss"], [190, 2, 1, "", "make_a2c_model"], [191, 2, 1, "", "make_collector_offpolicy"], [192, 2, 1, "", "make_collector_onpolicy"], [193, 2, 1, "", "make_ddpg_actor"], [194, 2, 1, "", "make_ddpg_loss"], [195, 2, 1, "", "make_dqn_actor"], [196, 2, 1, "", "make_dqn_loss"], [197, 2, 1, "", "make_ppo_loss"], [198, 2, 1, "", "make_ppo_model"], [199, 2, 1, "", "make_redq_loss"], [200, 2, 1, "", "make_redq_model"], [201, 2, 1, "", "make_replay_buffer"], [202, 2, 1, "", "make_sac_loss"], [203, 2, 1, "", "make_sac_model"], [204, 2, 1, "", "make_target_updater"], [205, 2, 1, "", "make_trainer"], [206, 2, 1, "", "parallel_env_constructor"], [207, 2, 1, "", "sync_async_collector"], [208, 2, 1, "", "sync_sync_collector"], [209, 2, 1, "", "transformed_env_constructor"]], "torchrl.trainers.loggers": [[210, 2, 1, "", "CSVLogger"], [211, 2, 1, "", "Logger"], [212, 2, 1, "", "MLFlowLogger"], [213, 2, 1, "", "TensorboardLogger"], [214, 2, 1, "", "WandbLogger"], [215, 2, 1, "", "generate_exp_name"], [216, 2, 1, "", "get_logger"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 5, 220, 221, 222, 223, 224, 225, 231, 232], "document": [0, 8], "tutori": 0, "refer": [0, 218], "indic": 0, "tabl": 0, "collector": [1, 224], "packag": [1, 2, 3, 220, 221, 222, 223], "data": [1, 2, 224, 232], "helper": [1, 3], "function": [1, 232], "replai": [2, 224, 232], "buffer": [2, 224, 232], "compos": [2, 64], "prototyp": 2, "tensorspec": [2, 28], "util": [2, 220, 221, 222], "env": [3, 231, 232], "vector": [3, 232], "transform": [3, 83, 224, 229, 231, 232], "record": [3, 181, 224], "domain": 3, "specif": [3, 227], "librari": [3, 232], "work": [4, 5], "gym": [4, 231], "what": 4, "i": [4, 7, 230], "openai": 4, "version": [4, 6, 9], "habitat": 5, "lab": 5, "set": [5, 230], "up": 5, "your": [5, 224], "environ": [5, 6, 224, 225, 227, 231, 232], "instal": [5, 6, 232], "from": [5, 6], "pip": [5, 6], "us": [5, 8, 224, 225, 229, 232], "common": [5, 6], "issu": [5, 6, 9], "about": 6, "mujoco": 6, "prerequisit": 6, "render": [6, 231], "all": 6, "new": 6, "bindindg": 6, "2": [6, 229], "1": [6, 229], "old": 6, "bind": 6, "py": 6, "option": 6, "clone": 6, "repo": [6, 8], "when": 6, "pro": 7, "tip": 7, "debug": 7, "gradient": 7, "relat": 7, "error": 7, "newcom": 7, "my": 7, "train": [7, 224, 225], "too": 7, "slow": 7, "intermedi": 7, "resourc": 8, "pytorch": [8, 9], "functorch": [8, 229], "rl": [8, 232], "blog": 8, "websit": 8, "educ": 8, "forum": 8, "how": 9, "reproduc": 9, "workaround": 9, "implement_for": 10, "multisyncdatacollector": 11, "multiasyncdatacollector": 12, "randompolici": 13, "syncdatacollector": 14, "asyncdatacollector": 15, "split_trajectori": 16, "binarydiscretetensorspec": 17, "boundedtensorspec": 18, "compositespec": 19, "discretetensorspec": 20, "multonehotdiscretetensorspec": 21, "multistep": 22, "onehotdiscretetensorspec": 23, "prioritizedreplaybuff": 24, "replaybuff": [25, 31, 182], "tensordictprioritizedreplaybuff": 26, "tensordictreplaybuff": [27, 32], "unboundedcontinuoustensorspec": 29, "remotetensordictreplaybuff": 30, "prioritizedsampl": 33, "randomsampl": 34, "sampler": 35, "lazymemmapstorag": 36, "lazytensorstorag": 37, "liststorag": 38, "storag": 39, "roundrobinwrit": 40, "writer": 41, "envbas": 42, "envcreat": 43, "envmetadata": 44, "gymlikeenv": 45, "modelbasedenvbas": 46, "parallelenv": 47, "serialenv": 48, "spec": [49, 231], "braxenv": 50, "braxwrapp": 51, "dmcontrolenv": 52, "dmcontrolwrapp": 53, "gymenv": 54, "gymwrapp": 55, "habitatenv": 56, "jumanjienv": 57, "jumanjiwrapp": 58, "dreamerenv": 59, "binarizereward": 60, "catfram": 61, "cattensor": 62, "centercrop": 63, "doubletofloat": 65, "finitetensordictcheck": 66, "flattenobserv": 67, "frameskiptransform": 68, "grayscal": 69, "noopresetenv": 70, "observationnorm": 71, "observationtransform": 72, "pinmemorytransform": 73, "r3mtransform": 74, "resiz": 75, "rewardclip": 76, "rewardsc": 77, "rewardsum": 78, "squeezetransform": 79, "stepcount": 80, "tensordictprim": 81, "totensorimag": 82, "transformedenv": 84, "unsqueezetransform": 85, "viprewardtransform": 86, "viptransform": 87, "vecnorm": [88, 231], "gsdenois": 89, "check_env_spec": 90, "exploration_mod": 91, "get_available_librari": 92, "set_exploration_mod": 93, "step_mdp": 94, "cemplann": 95, "convnet": 96, "ddpgcnnactor": 97, "ddpgcnnqnet": 98, "ddpgmlpactor": 99, "ddpgmlpqnet": 100, "delta": 101, "distributionaldqnnet": 102, "dreameractor": 103, "duelingcnndqnet": 104, "independentnorm": 105, "lstmnet": 106, "mlp": 107, "mpcplannerbas": 108, "mppiplann": 109, "noisylazylinear": 110, "noisylinear": 111, "normalparamwrapp": 112, "obsdecod": 113, "obsencod": 114, "onehotcategor": 115, "rssmposterior": 116, "rssmprior": 117, "tanhdelta": 118, "tanhnorm": 119, "truncatednorm": 120, "reset_nois": 121, "actor": [122, 229], "actorcriticoper": [123, 229], "actorcriticwrapp": 124, "actorvalueoper": 125, "additivegaussianwrapp": 126, "distributionalqvalueactor": 127, "egreedywrapp": 128, "ornsteinuhlenbeckprocesswrapp": 129, "probabilisticactor": [130, 229], "qvalueactor": 131, "safemodul": 132, "safeprobabilisticmodul": 133, "safeprobabilisticsequenti": 134, "safesequenti": 135, "valueoper": 136, "worldmodelwrapp": 137, "distributionalqvaluehook": 138, "qvaluehook": 139, "ensure_tensordict_compat": 140, "is_tensordict_compat": 141, "biased_softplu": 142, "inv_softplu": 143, "map": 144, "a2closs": 145, "clipppoloss": 146, "ddpgloss": 147, "dqnloss": 148, "distributionaldqnloss": 149, "dreameractorloss": 150, "dreamermodelloss": 151, "dreamervalueloss": 152, "hardupd": 153, "klpenppoloss": 154, "ppoloss": 155, "redqloss": 156, "reinforceloss": 157, "sacloss": 158, "softupd": 159, "distance_loss": 160, "hold_out_net": 161, "hold_out_param": 162, "next_state_valu": 163, "gae": 164, "tdestim": 165, "tdlambdaestim": 166, "generalized_advantage_estim": 167, "td_advantage_estim": 168, "td_lambda_advantage_estim": 169, "td_lambda_return_estim": 170, "vec_generalized_advantage_estim": 171, "vec_td_lambda_advantage_estim": 172, "vec_td_lambda_return_estim": 173, "tensordictrecord": 174, "videorecord": 175, "batchsubsampl": 176, "clearcudacach": 177, "countframeslog": 178, "logreward": 179, "optimizerhook": 180, "rewardnorm": 183, "selectkei": 184, "trainer": [185, 222], "updateweight": 186, "correct_for_frame_skip": 187, "get_stats_random_rollout": 188, "make_a2c_loss": 189, "make_a2c_model": 190, "make_collector_offpolici": 191, "make_collector_onpolici": 192, "make_ddpg_actor": 193, "make_ddpg_loss": 194, "make_dqn_actor": 195, "make_dqn_loss": 196, "make_ppo_loss": 197, "make_ppo_model": 198, "make_redq_loss": 199, "make_redq_model": 200, "make_replay_buff": 201, "make_sac_loss": 202, "make_sac_model": 203, "make_target_updat": 204, "make_train": 205, "parallel_env_constructor": 206, "sync_async_collector": 207, "sync_sync_collector": 208, "transformed_env_constructor": 209, "csvlogger": 210, "logger": [211, 222], "mlflowlogg": 212, "tensorboardlogg": 213, "wandblogg": 214, "generate_exp_nam": 215, "get_logg": 216, "readm": [217, 226], "tuto": [217, 226], "api": 218, "knowledg": 219, "base": [219, 225], "contribut": [219, 232], "content": 219, "modul": [220, 232], "tensordict": [220, 230, 232], "hook": [220, 222], "model": [220, 224, 225, 232], "explor": 220, "planner": 220, "distribut": 220, "object": [221, 224, 232], "dqn": [221, 225], "ddpg": [221, 224], "sac": 221, "redq": 221, "ppo": 221, "a2c": 221, "reinforc": 221, "dreamer": 221, "return": 221, "checkpoint": 222, "builder": 222, "_util": 223, "code": [224, 225, 230], "parallel": [224, 227, 231], "execut": [224, 227], "normal": 224, "observ": 224, "build": [224, 225], "evalu": 224, "hyperparamet": [224, 225], "initi": 224, "time": [224, 228], "polici": [224, 227], "experi": 224, "result": 224, "sampl": 224, "trajectori": 224, "td": [224, 225], "lambda": [224, 225], "pixel": 225, "The": 225, "problem": 225, "deep": 225, "q": 225, "network": 225, "regular": 225, "loop": 225, "conclus": 225, "possibl": 225, "improv": [225, 230], "task": 227, "multi": 227, "divers": 227, "rollout": [227, 231], "comput": 228, "tensordictmodul": [229, 232], "exampl": 229, "simpl": 229, "usag": [229, 230], "multipl": 229, "input": 229, "3": 229, "output": 229, "4": 229, "combin": 229, "tensordictsequenti": 229, "5": 229, "compat": 229, "do": [229, 230], "": 229, "don": 229, "t": [229, 230], "probabilistictensordictmodul": 229, "showcas": 229, "implement": 229, "benchmark": 229, "modular": 230, "can": 230, "thi": 230, "python": 230, "dict": 230, "structur": 230, "dictionari": 230, "featur": 230, "get": 230, "kei": 230, "valu": 230, "updat": 230, "tensordict_or_dict": 230, "del": 230, "tensor": 230, "batch": 230, "size": 230, "devic": [230, 231], "memori": 230, "share": 230, "via": 230, "physic": 230, "oper": 230, "seed": 231, "reset": 231, "step": 231, "frame_skip": 231, "deepmind": 231, "control": 231, "run": 231, "close": 231, "access": 231, "attribut": 231, "kwarg": 231, "introduct": 232, "chang": 232, "config": 232, "sequenc": 232, "program": 232, "ensembl": 232, "meta": 232, "special": 232, "class": 232, "state": 232}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials": [[0, "tutorials"]], "References": [[0, "references"]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers (Prototype)": [[2, "composable-replay-buffers-prototype"]], "TensorSpec": [[2, "tensorspec"], [28, "tensorspec"]], "Utils": [[2, "utils"], [220, "utils"], [221, "utils"], [222, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [224, "transforms"], [232, "transforms"]], "Recorders": [[3, "recorders"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Working with gym": [[4, "working-with-gym"]], "What is OpenAI Gym?": [[4, "what-is-openai-gym"]], "Versioning": [[4, "versioning"]], "Working with habitat-lab": [[5, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[5, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[5, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[5, "installing-torchrl"]], "Using Habitat": [[5, "using-habitat"]], "Common issues": [[5, "common-issues"]], "About MuJoCo": [[6, "about-mujoco"]], "Installing MuJoCo": [[6, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[6, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[6, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[6, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[6, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[6, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[6, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips and Debugging": [[7, "pro-tips-and-debugging"]], "Gradient-related errors [Newcomers]": [[7, "gradient-related-errors-newcomers"]], "My Training is too slow [Newcomers / intermediate]": [[7, "my-training-is-too-slow-newcomers-intermediate"]], "Useful resources": [[8, "useful-resources"]], "Pytorch documentation": [[8, "pytorch-documentation"]], "functorch documentation": [[8, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[8, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[8, "educational-resource"]], "Forums": [[8, "forums"]], "Repos": [[8, "repos"]], "Versioning Issues": [[9, "versioning-issues"]], "Pytorch version": [[9, "pytorch-version"]], "How to reproduce": [[9, "how-to-reproduce"]], "Workarounds": [[9, "workarounds"]], "implement_for": [[10, "implement-for"]], "MultiSyncDataCollector": [[11, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[12, "multiasyncdatacollector"]], "RandomPolicy": [[13, "randompolicy"]], "SyncDataCollector": [[14, "syncdatacollector"]], "aSyncDataCollector": [[15, "asyncdatacollector"]], "split_trajectories": [[16, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[17, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[18, "boundedtensorspec"]], "CompositeSpec": [[19, "compositespec"]], "DiscreteTensorSpec": [[20, "discretetensorspec"]], "MultOneHotDiscreteTensorSpec": [[21, "multonehotdiscretetensorspec"]], "MultiStep": [[22, "multistep"]], "OneHotDiscreteTensorSpec": [[23, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[24, "prioritizedreplaybuffer"]], "ReplayBuffer": [[25, "replaybuffer"], [31, "replaybuffer"], [182, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[26, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[27, "tensordictreplaybuffer"], [32, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[29, "unboundedcontinuoustensorspec"]], "RemoteTensorDictReplayBuffer": [[30, "remotetensordictreplaybuffer"]], "PrioritizedSampler": [[33, "prioritizedsampler"]], "RandomSampler": [[34, "randomsampler"]], "Sampler": [[35, "sampler"]], "LazyMemmapStorage": [[36, "lazymemmapstorage"]], "LazyTensorStorage": [[37, "lazytensorstorage"]], "ListStorage": [[38, "liststorage"]], "Storage": [[39, "storage"]], "RoundRobinWriter": [[40, "roundrobinwriter"]], "Writer": [[41, "writer"]], "EnvBase": [[42, "envbase"]], "EnvCreator": [[43, "envcreator"]], "EnvMetaData": [[44, "envmetadata"]], "GymLikeEnv": [[45, "gymlikeenv"]], "ModelBasedEnvBase": [[46, "modelbasedenvbase"]], "ParallelEnv": [[47, "parallelenv"]], "SerialEnv": [[48, "serialenv"]], "Specs": [[49, "specs"]], "BraxEnv": [[50, "braxenv"]], "BraxWrapper": [[51, "braxwrapper"]], "DMControlEnv": [[52, "dmcontrolenv"]], "DMControlWrapper": [[53, "dmcontrolwrapper"]], "GymEnv": [[54, "gymenv"]], "GymWrapper": [[55, "gymwrapper"]], "HabitatEnv": [[56, "habitatenv"]], "JumanjiEnv": [[57, "jumanjienv"]], "JumanjiWrapper": [[58, "jumanjiwrapper"]], "DreamerEnv": [[59, "dreamerenv"]], "BinarizeReward": [[60, "binarizereward"]], "CatFrames": [[61, "catframes"]], "CatTensors": [[62, "cattensors"]], "CenterCrop": [[63, "centercrop"]], "Compose": [[64, "compose"]], "DoubleToFloat": [[65, "doubletofloat"]], "FiniteTensorDictCheck": [[66, "finitetensordictcheck"]], "FlattenObservation": [[67, "flattenobservation"]], "FrameSkipTransform": [[68, "frameskiptransform"]], "GrayScale": [[69, "grayscale"]], "NoopResetEnv": [[70, "noopresetenv"]], "ObservationNorm": [[71, "observationnorm"]], "ObservationTransform": [[72, "observationtransform"]], "PinMemoryTransform": [[73, "pinmemorytransform"]], "R3MTransform": [[74, "r3mtransform"]], "Resize": [[75, "resize"]], "RewardClipping": [[76, "rewardclipping"]], "RewardScaling": [[77, "rewardscaling"]], "RewardSum": [[78, "rewardsum"]], "SqueezeTransform": [[79, "squeezetransform"]], "StepCounter": [[80, "stepcounter"]], "TensorDictPrimer": [[81, "tensordictprimer"]], "ToTensorImage": [[82, "totensorimage"]], "Transform": [[83, "transform"]], "TransformedEnv": [[84, "transformedenv"]], "UnsqueezeTransform": [[85, "unsqueezetransform"]], "VIPRewardTransform": [[86, "viprewardtransform"]], "VIPTransform": [[87, "viptransform"]], "VecNorm": [[88, "vecnorm"], [231, "vecnorm"]], "gSDENoise": [[89, "gsdenoise"]], "check_env_specs": [[90, "check-env-specs"]], "exploration_mode": [[91, "exploration-mode"]], "get_available_libraries": [[92, "get-available-libraries"]], "set_exploration_mode": [[93, "set-exploration-mode"]], "step_mdp": [[94, "step-mdp"]], "CEMPlanner": [[95, "cemplanner"]], "ConvNet": [[96, "convnet"]], "DdpgCnnActor": [[97, "ddpgcnnactor"]], "DdpgCnnQNet": [[98, "ddpgcnnqnet"]], "DdpgMlpActor": [[99, "ddpgmlpactor"]], "DdpgMlpQNet": [[100, "ddpgmlpqnet"]], "Delta": [[101, "delta"]], "DistributionalDQNnet": [[102, "distributionaldqnnet"]], "DreamerActor": [[103, "dreameractor"]], "DuelingCnnDQNet": [[104, "duelingcnndqnet"]], "IndependentNormal": [[105, "independentnormal"]], "LSTMNet": [[106, "lstmnet"]], "MLP": [[107, "mlp"]], "MPCPlannerBase": [[108, "mpcplannerbase"]], "MPPIPlanner": [[109, "mppiplanner"]], "NoisyLazyLinear": [[110, "noisylazylinear"]], "NoisyLinear": [[111, "noisylinear"]], "NormalParamWrapper": [[112, "normalparamwrapper"]], "ObsDecoder": [[113, "obsdecoder"]], "ObsEncoder": [[114, "obsencoder"]], "OneHotCategorical": [[115, "onehotcategorical"]], "RSSMPosterior": [[116, "rssmposterior"]], "RSSMPrior": [[117, "rssmprior"]], "TanhDelta": [[118, "tanhdelta"]], "TanhNormal": [[119, "tanhnormal"]], "TruncatedNormal": [[120, "truncatednormal"]], "reset_noise": [[121, "reset-noise"]], "Actor": [[122, "actor"], [229, "actor"]], "ActorCriticOperator": [[123, "actorcriticoperator"], [229, "actorcriticoperator"]], "ActorCriticWrapper": [[124, "actorcriticwrapper"]], "ActorValueOperator": [[125, "actorvalueoperator"]], "AdditiveGaussianWrapper": [[126, "additivegaussianwrapper"]], "DistributionalQValueActor": [[127, "distributionalqvalueactor"]], "EGreedyWrapper": [[128, "egreedywrapper"]], "OrnsteinUhlenbeckProcessWrapper": [[129, "ornsteinuhlenbeckprocesswrapper"]], "ProbabilisticActor": [[130, "probabilisticactor"], [229, "probabilisticactor"]], "QValueActor": [[131, "qvalueactor"]], "SafeModule": [[132, "safemodule"]], "SafeProbabilisticModule": [[133, "safeprobabilisticmodule"]], "SafeProbabilisticSequential": [[134, "safeprobabilisticsequential"]], "SafeSequential": [[135, "safesequential"]], "ValueOperator": [[136, "valueoperator"]], "WorldModelWrapper": [[137, "worldmodelwrapper"]], "DistributionalQValueHook": [[138, "distributionalqvaluehook"]], "QValueHook": [[139, "qvaluehook"]], "ensure_tensordict_compatible": [[140, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[141, "is-tensordict-compatible"]], "biased_softplus": [[142, "biased-softplus"]], "inv_softplus": [[143, "inv-softplus"]], "mappings": [[144, "mappings"]], "A2CLoss": [[145, "a2closs"]], "ClipPPOLoss": [[146, "clipppoloss"]], "DDPGLoss": [[147, "ddpgloss"]], "DQNLoss": [[148, "dqnloss"]], "DistributionalDQNLoss": [[149, "distributionaldqnloss"]], "DreamerActorLoss": [[150, "dreameractorloss"]], "DreamerModelLoss": [[151, "dreamermodelloss"]], "DreamerValueLoss": [[152, "dreamervalueloss"]], "HardUpdate": [[153, "hardupdate"]], "KLPENPPOLoss": [[154, "klpenppoloss"]], "PPOLoss": [[155, "ppoloss"]], "REDQLoss": [[156, "redqloss"]], "ReinforceLoss": [[157, "reinforceloss"]], "SACLoss": [[158, "sacloss"]], "SoftUpdate": [[159, "softupdate"]], "distance_loss": [[160, "distance-loss"]], "hold_out_net": [[161, "hold-out-net"]], "hold_out_params": [[162, "hold-out-params"]], "next_state_value": [[163, "next-state-value"]], "GAE": [[164, "gae"]], "TDEstimate": [[165, "tdestimate"]], "TDLambdaEstimate": [[166, "tdlambdaestimate"]], "generalized_advantage_estimate": [[167, "generalized-advantage-estimate"]], "td_advantage_estimate": [[168, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[169, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[170, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[171, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[172, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[173, "vec-td-lambda-return-estimate"]], "TensorDictRecorder": [[174, "tensordictrecorder"]], "VideoRecorder": [[175, "videorecorder"]], "BatchSubSampler": [[176, "batchsubsampler"]], "ClearCudaCache": [[177, "clearcudacache"]], "CountFramesLog": [[178, "countframeslog"]], "LogReward": [[179, "logreward"]], "OptimizerHook": [[180, "optimizerhook"]], "Recorder": [[181, "recorder"]], "RewardNormalizer": [[183, "rewardnormalizer"]], "SelectKeys": [[184, "selectkeys"]], "Trainer": [[185, "trainer"]], "UpdateWeights": [[186, "updateweights"]], "correct_for_frame_skip": [[187, "correct-for-frame-skip"]], "get_stats_random_rollout": [[188, "get-stats-random-rollout"]], "make_a2c_loss": [[189, "make-a2c-loss"]], "make_a2c_model": [[190, "make-a2c-model"]], "make_collector_offpolicy": [[191, "make-collector-offpolicy"]], "make_collector_onpolicy": [[192, "make-collector-onpolicy"]], "make_ddpg_actor": [[193, "make-ddpg-actor"]], "make_ddpg_loss": [[194, "make-ddpg-loss"]], "make_dqn_actor": [[195, "make-dqn-actor"]], "make_dqn_loss": [[196, "make-dqn-loss"]], "make_ppo_loss": [[197, "make-ppo-loss"]], "make_ppo_model": [[198, "make-ppo-model"]], "make_redq_loss": [[199, "make-redq-loss"]], "make_redq_model": [[200, "make-redq-model"]], "make_replay_buffer": [[201, "make-replay-buffer"]], "make_sac_loss": [[202, "make-sac-loss"]], "make_sac_model": [[203, "make-sac-model"]], "make_target_updater": [[204, "make-target-updater"]], "make_trainer": [[205, "make-trainer"]], "parallel_env_constructor": [[206, "parallel-env-constructor"]], "sync_async_collector": [[207, "sync-async-collector"]], "sync_sync_collector": [[208, "sync-sync-collector"]], "transformed_env_constructor": [[209, "transformed-env-constructor"]], "CSVLogger": [[210, "csvlogger"]], "Logger": [[211, "logger"]], "MLFlowLogger": [[212, "mlflowlogger"]], "TensorboardLogger": [[213, "tensorboardlogger"]], "WandbLogger": [[214, "wandblogger"]], "generate_exp_name": [[215, "generate-exp-name"]], "get_logger": [[216, "get-logger"]], "README Tutos": [[217, "readme-tutos"], [226, "readme-tutos"]], "API Reference": [[218, "api-reference"]], "Knowledge Base": [[219, "knowledge-base"]], "Contributing": [[219, "contributing"], [232, "contributing"]], "Contents:": [[219, null]], "torchrl.modules package": [[220, "torchrl-modules-package"]], "TensorDict modules": [[220, "tensordict-modules"]], "Hooks": [[220, "hooks"]], "Models": [[220, "models"], [232, "models"]], "Exploration": [[220, "exploration"]], "Planners": [[220, "planners"]], "Distributions": [[220, "distributions"]], "torchrl.objectives package": [[221, "torchrl-objectives-package"]], "DQN": [[221, "dqn"]], "DDPG": [[221, "ddpg"]], "SAC": [[221, "sac"]], "REDQ": [[221, "redq"]], "PPO": [[221, "ppo"]], "A2C": [[221, "a2c"]], "Reinforce": [[221, "reinforce"]], "Dreamer": [[221, "dreamer"]], "Returns": [[221, "returns"]], "torchrl.trainers package": [[222, "torchrl-trainers-package"]], "Checkpointing": [[222, "checkpointing"]], "Trainer and hooks": [[222, "trainer-and-hooks"]], "Builders": [[222, "builders"]], "Loggers": [[222, "loggers"]], "torchrl._utils package": [[223, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[224, "coding-ddpg-using-torchrl"]], "Environment": [[224, "environment"]], "Parallel execution": [[224, "parallel-execution"]], "Normalization of the observations": [[224, "normalization-of-the-observations"]], "Building the model": [[224, "building-the-model"]], "Evaluator: building your recorder object": [[224, "evaluator-building-your-recorder-object"]], "Replay buffer": [[224, "replay-buffer"]], "Hyperparameters": [[224, "hyperparameters"], [225, "hyperparameters"]], "Initialization": [[224, "initialization"]], "Data collector": [[224, "data-collector"]], "Time to train the policy!": [[224, "time-to-train-the-policy"]], "Experiment results": [[224, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[224, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[225, "coding-a-pixel-based-dqn-using-torchrl"]], "Building the environment": [[225, "building-the-environment"]], "The problem": [[225, "the-problem"]], "Building the model (Deep Q-network)": [[225, "building-the-model-deep-q-network"]], "Regular DQN": [[225, "regular-dqn"]], "Training loop": [[225, "training-loop"], [225, "id1"]], "TD-lambda": [[225, "td-lambda"]], "Conclusion and possible improvements": [[225, "conclusion-and-possible-improvements"]], "Task-specific policy in multi-task environments": [[227, "task-specific-policy-in-multi-task-environments"]], "Policy": [[227, "policy"]], "Executing diverse tasks in parallel": [[227, "executing-diverse-tasks-in-parallel"]], "Rollout": [[227, "rollout"]], "Computation times": [[228, "computation-times"]], "TensorDictModule": [[229, "tensordictmodule"]], "TensorDictModule by examples": [[229, "tensordictmodule-by-examples"]], "Example 1: Simple usage": [[229, "example-1-simple-usage"]], "Example 2: Multiple inputs": [[229, "example-2-multiple-inputs"]], "Example 3: Multiple outputs": [[229, "example-3-multiple-outputs"]], "Example 4: Combining multiple TensorDictModule with TensorDictSequential": [[229, "example-4-combining-multiple-tensordictmodule-with-tensordictsequential"]], "Example 5: Compatibility with functorch": [[229, "example-5-compatibility-with-functorch"]], "Do\u2019s and don\u2019t with TensorDictModule": [[229, "do-s-and-don-t-with-tensordictmodule"]], "ProbabilisticTensorDictModule": [[229, "probabilistictensordictmodule"]], "Showcase: Implementing a transformer using TensorDictModule": [[229, "showcase-implementing-a-transformer-using-tensordictmodule"]], "Benchmarking": [[229, "benchmarking"]], "TensorDict": [[230, "tensordict"], [232, "tensordict"]], "Improving the modularity of codes": [[230, "improving-the-modularity-of-codes"]], "Can\u2019t I do this with a python dict?": [[230, "can-t-i-do-this-with-a-python-dict"]], "TensorDict structure": [[230, "tensordict-structure"]], "TensorDict Dictionary Features": [[230, "tensordict-dictionary-features"]], "get(key)": [[230, "get-key"]], "set(key, value)": [[230, "set-key-value"]], "keys()": [[230, "keys"]], "values()": [[230, "values"]], "update(tensordict_or_dict)": [[230, "update-tensordict-or-dict"]], "del": [[230, "del"]], "TensorDict tensor features": [[230, "tensordict-tensor-features"]], "Batch size": [[230, "batch-size"]], "Devices": [[230, "devices"]], "Memory sharing via physical memory usage": [[230, "memory-sharing-via-physical-memory-usage"]], "Tensor operations": [[230, "tensor-operations"]], "TorchRL envs": [[231, "torchrl-envs"]], "Gym environments": [[231, "gym-environments"]], "Env Specs": [[231, "env-specs"]], "Seeding, resetting and steps": [[231, "seeding-resetting-and-steps"]], "Rollouts": [[231, "rollouts"]], "frame_skip": [[231, "frame-skip"]], "Rendering": [[231, "rendering"]], "DeepMind Control environments": [[231, "deepmind-control-environments"]], "Transforming envs": [[231, "transforming-envs"]], "Environment device": [[231, "environment-device"]], "Running environments in parallel": [[231, "running-environments-in-parallel"]], "Closing parallel environments": [[231, "closing-parallel-environments"]], "Seeding": [[231, "seeding"]], "Accessing environment attributes": [[231, "accessing-environment-attributes"]], "kwargs for parallel environments": [[231, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[231, "transforming-parallel-environments"]], "Introduction to TorchRL": [[232, "introduction-to-torchrl"]], "Data": [[232, "data"]], "Replay buffers": [[232, "replay-buffers"]], "Envs": [[232, "envs"]], "Changing environments config": [[232, "changing-environments-config"]], "Vectorized Environments": [[232, "vectorized-environments"]], "Modules": [[232, "modules"]], "TensorDictModules": [[232, "tensordictmodules"]], "Sequences of Modules": [[232, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[232, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[232, "specialized-classes"]], "Using Environments and Modules": [[232, "using-environments-and-modules"]], "Objectives": [[232, "objectives"]], "State of the Library": [[232, "state-of-the-library"]], "Installing the Library": [[232, "installing-the-library"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[10, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors.collectors)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors.collectors)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "randompolicy (class in torchrl.collectors.collectors)": [[13, "torchrl.collectors.collectors.RandomPolicy"]], "syncdatacollector (class in torchrl.collectors.collectors)": [[14, "torchrl.collectors.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors.collectors)": [[15, "torchrl.collectors.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[16, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[17, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[18, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.encode"]], "index() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[19, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.encode"]], "index() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[20, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.encode"]], "index() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.zero"]], "multonehotdiscretetensorspec (class in torchrl.data)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[22, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.zero_grad"]], "onehotdiscretetensorspec (class in torchrl.data)": [[23, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[24, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.add"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.update_priority"]], "replaybuffer (class in torchrl.data)": [[25, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.add"]], "extend() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.extend"]], "sample() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.update_priority"]], "tensordictreplaybuffer (class in torchrl.data)": [[27, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[28, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.encode"]], "index() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[29, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "remotetensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[30, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.sample"]], "replaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[31, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[32, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.sample"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[33, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[33, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[35, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[36, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[36, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[37, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[38, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[39, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[39, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[41, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[41, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[41, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[42, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[42, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[42, "id0"], [42, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[42, "id1"], [42, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[42, "id2"], [42, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[42, "id3"], [42, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[42, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[42, "id4"], [42, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.zero_grad"]], "envcreator (class in torchrl.envs)": [[43, "torchrl.envs.EnvCreator"]], "envmetadata (class in torchrl.envs)": [[44, "torchrl.envs.EnvMetaData"]], "gymlikeenv (class in torchrl.envs)": [[45, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[45, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[45, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[46, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[46, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[46, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[46, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[46, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[46, "torchrl.envs.step"]], "parallelenv (class in torchrl.envs)": [[47, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[47, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[47, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[48, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[48, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[48, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.zero_grad"]], "specs (class in torchrl.envs)": [[49, "torchrl.envs.Specs"]], "build_tensordict() (torchrl.envs.specs method)": [[49, "torchrl.envs.Specs.build_tensordict"]], "braxenv() (in module torchrl.envs.libs.brax)": [[50, "torchrl.envs.libs.brax.BraxEnv"]], "braxwrapper() (in module torchrl.envs.libs.brax)": [[51, "torchrl.envs.libs.brax.BraxWrapper"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[52, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[53, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[54, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[55, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[56, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[57, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[58, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[59, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[60, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[60, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[61, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[61, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[61, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[62, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[63, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[64, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[64, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[64, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[64, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[64, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[64, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[65, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[65, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[65, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[67, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "frameskiptransform (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.FrameSkipTransform"]], "grayscale (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[69, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[70, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[71, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[71, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.R3MTransform"]], "forward() (torchrl.envs.transforms.r3mtransform method)": [[74, "torchrl.envs.transforms.R3MTransform.forward"]], "reset() (torchrl.envs.transforms.r3mtransform method)": [[74, "torchrl.envs.transforms.R3MTransform.reset"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[74, "torchrl.envs.transforms.R3MTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.r3mtransform method)": [[74, "torchrl.envs.transforms.R3MTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.r3mtransform method)": [[74, "torchrl.envs.transforms.R3MTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.r3mtransform method)": [[74, "torchrl.envs.transforms.R3MTransform.transform_reward_spec"]], "resize (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[75, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[76, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[77, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "rewardsum (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.RewardSum"]], "reset() (torchrl.envs.transforms.rewardsum method)": [[78, "torchrl.envs.transforms.RewardSum.reset"]], "transform_observation_spec() (torchrl.envs.transforms.rewardsum method)": [[78, "torchrl.envs.transforms.RewardSum.transform_observation_spec"]], "squeezetransform (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.SqueezeTransform"]], "forward() (torchrl.envs.transforms.squeezetransform method)": [[79, "torchrl.envs.transforms.SqueezeTransform.forward"]], "stepcounter (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.StepCounter"]], "reset() (torchrl.envs.transforms.stepcounter method)": [[80, "torchrl.envs.transforms.StepCounter.reset"]], "transform_observation_spec() (torchrl.envs.transforms.stepcounter method)": [[80, "torchrl.envs.transforms.StepCounter.transform_observation_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[81, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[81, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[81, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[82, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[82, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[83, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[83, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[83, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[83, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[83, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[83, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[84, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[84, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[84, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[84, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[84, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[84, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[84, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[84, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[84, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[84, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[84, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[84, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[85, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[85, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[85, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[85, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[85, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[86, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[86, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[86, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[87, "torchrl.envs.transforms.VIPTransform"]], "forward() (torchrl.envs.transforms.viptransform method)": [[87, "torchrl.envs.transforms.VIPTransform.forward"]], "reset() (torchrl.envs.transforms.viptransform method)": [[87, "torchrl.envs.transforms.VIPTransform.reset"]], "to() (torchrl.envs.transforms.viptransform method)": [[87, "torchrl.envs.transforms.VIPTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.viptransform method)": [[87, "torchrl.envs.transforms.VIPTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.viptransform method)": [[87, "torchrl.envs.transforms.VIPTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.viptransform method)": [[87, "torchrl.envs.transforms.VIPTransform.transform_reward_spec"]], "vecnorm (class in torchrl.envs.transforms)": [[88, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[88, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[88, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[88, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[88, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[89, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[89, "torchrl.envs.transforms.gSDENoise.reset"]], "check_env_specs() (in module torchrl.envs.utils)": [[90, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[91, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[92, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[93, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[94, "torchrl.envs.utils.step_mdp"]], "cemplanner (class in torchrl.modules)": [[95, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[95, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[96, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[96, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[97, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[97, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[98, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[98, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[99, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[99, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[100, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[100, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[101, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[101, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[101, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[101, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[101, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[101, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[102, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[102, "torchrl.modules.DistributionalDQNnet.forward"]], "dreameractor (class in torchrl.modules)": [[103, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[103, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[104, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[104, "torchrl.modules.DuelingCnnDQNet.forward"]], "independentnormal (class in torchrl.modules)": [[105, "torchrl.modules.IndependentNormal"]], "mode (torchrl.modules.independentnormal property)": [[105, "torchrl.modules.IndependentNormal.mode"]], "lstmnet (class in torchrl.modules)": [[106, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[106, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[107, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[107, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[108, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[108, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[108, "torchrl.modules.MPCPlannerBase.planning"]], "mppiplanner (class in torchrl.modules)": [[109, "torchrl.modules.MPPIPlanner"]], "planning() (torchrl.modules.mppiplanner method)": [[109, "torchrl.modules.MPPIPlanner.planning"]], "noisylazylinear (class in torchrl.modules)": [[110, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[110, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[111, "torchrl.modules.NoisyLinear"]], "normalparamwrapper (class in torchrl.modules)": [[112, "torchrl.modules.NormalParamWrapper"]], "forward() (torchrl.modules.normalparamwrapper method)": [[112, "torchrl.modules.NormalParamWrapper.forward"]], "obsdecoder (class in torchrl.modules)": [[113, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[113, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[114, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[114, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[115, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[115, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[115, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[115, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[115, "torchrl.modules.OneHotCategorical.sample"]], "rssmposterior (class in torchrl.modules)": [[116, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[116, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[117, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[117, "torchrl.modules.RSSMPrior.forward"]], "tanhdelta (class in torchrl.modules)": [[118, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[118, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[118, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[119, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[119, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[120, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[120, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[120, "torchrl.modules.TruncatedNormal.mode"]], "reset_noise (class in torchrl.modules)": [[121, "torchrl.modules.reset_noise"]], "actor (class in torchrl.modules.tensordict_module)": [[122, "torchrl.modules.tensordict_module.Actor"]], "actorcriticoperator (class in torchrl.modules.tensordict_module)": [[123, "torchrl.modules.tensordict_module.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[123, "torchrl.modules.tensordict_module.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[123, "torchrl.modules.tensordict_module.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules.tensordict_module)": [[124, "torchrl.modules.tensordict_module.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[124, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[124, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules.tensordict_module)": [[125, "torchrl.modules.tensordict_module.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[125, "torchrl.modules.tensordict_module.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[125, "torchrl.modules.tensordict_module.ActorValueOperator.get_value_operator"]], "additivegaussianwrapper (class in torchrl.modules.tensordict_module)": [[126, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper"]], "forward() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[126, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.forward"]], "step() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[126, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.step"]], "distributionalqvalueactor (class in torchrl.modules.tensordict_module)": [[127, "torchrl.modules.tensordict_module.DistributionalQValueActor"]], "egreedywrapper (class in torchrl.modules.tensordict_module)": [[128, "torchrl.modules.tensordict_module.EGreedyWrapper"]], "forward() (torchrl.modules.tensordict_module.egreedywrapper method)": [[128, "torchrl.modules.tensordict_module.EGreedyWrapper.forward"]], "step() (torchrl.modules.tensordict_module.egreedywrapper method)": [[128, "torchrl.modules.tensordict_module.EGreedyWrapper.step"]], "ornsteinuhlenbeckprocesswrapper (class in torchrl.modules.tensordict_module)": [[129, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper"]], "forward() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[129, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.forward"]], "step() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[129, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.step"]], "probabilisticactor (class in torchrl.modules.tensordict_module)": [[130, "torchrl.modules.tensordict_module.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules.tensordict_module)": [[131, "torchrl.modules.tensordict_module.QValueActor"]], "safemodule (class in torchrl.modules.tensordict_module)": [[132, "torchrl.modules.tensordict_module.SafeModule"]], "random() (torchrl.modules.tensordict_module.safemodule method)": [[132, "torchrl.modules.tensordict_module.SafeModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safemodule method)": [[132, "torchrl.modules.tensordict_module.SafeModule.random_sample"]], "to() (torchrl.modules.tensordict_module.safemodule method)": [[132, "torchrl.modules.tensordict_module.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules.tensordict_module)": [[133, "torchrl.modules.tensordict_module.SafeProbabilisticModule"]], "random() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[133, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[133, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random_sample"]], "safeprobabilisticsequential (class in torchrl.modules.tensordict_module)": [[134, "torchrl.modules.tensordict_module.SafeProbabilisticSequential"]], "safesequential (class in torchrl.modules.tensordict_module)": [[135, "torchrl.modules.tensordict_module.SafeSequential"]], "valueoperator (class in torchrl.modules.tensordict_module)": [[136, "torchrl.modules.tensordict_module.ValueOperator"]], "worldmodelwrapper (class in torchrl.modules.tensordict_module)": [[137, "torchrl.modules.tensordict_module.WorldModelWrapper"]], "get_reward_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[137, "torchrl.modules.tensordict_module.WorldModelWrapper.get_reward_operator"]], "get_transition_model_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[137, "torchrl.modules.tensordict_module.WorldModelWrapper.get_transition_model_operator"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[138, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[139, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[140, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[141, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[142, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[142, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[143, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[144, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[145, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[145, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[146, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[146, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[147, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[147, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[148, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[148, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[149, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[149, "torchrl.objectives.DistributionalDQNLoss.forward"]], "dreameractorloss (class in torchrl.objectives)": [[150, "torchrl.objectives.DreamerActorLoss"]], "forward() (torchrl.objectives.dreameractorloss method)": [[150, "torchrl.objectives.DreamerActorLoss.forward"]], "dreamermodelloss (class in torchrl.objectives)": [[151, "torchrl.objectives.DreamerModelLoss"]], "forward() (torchrl.objectives.dreamermodelloss method)": [[151, "torchrl.objectives.DreamerModelLoss.forward"]], "dreamervalueloss (class in torchrl.objectives)": [[152, "torchrl.objectives.DreamerValueLoss"]], "forward() (torchrl.objectives.dreamervalueloss method)": [[152, "torchrl.objectives.DreamerValueLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[153, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[154, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[154, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[155, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[155, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[156, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[156, "torchrl.objectives.REDQLoss.forward"]], "reinforceloss (class in torchrl.objectives)": [[157, "torchrl.objectives.ReinforceLoss"]], "forward() (torchrl.objectives.reinforceloss method)": [[157, "torchrl.objectives.ReinforceLoss.forward"]], "sacloss (class in torchrl.objectives)": [[158, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[158, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[159, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[160, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[161, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[162, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[163, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[164, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[164, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[165, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[165, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[166, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[166, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[167, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[168, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[169, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[170, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[171, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[172, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[173, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "tensordictrecorder() (in module torchrl.record)": [[174, "torchrl.record.TensorDictRecorder"]], "videorecorder() (in module torchrl.record)": [[175, "torchrl.record.VideoRecorder"]], "batchsubsampler (class in torchrl.trainers)": [[176, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[177, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[178, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[179, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[180, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[181, "torchrl.trainers.Recorder"]], "replaybuffer (class in torchrl.trainers)": [[182, "torchrl.trainers.ReplayBuffer"]], "add() (torchrl.trainers.replaybuffer method)": [[182, "torchrl.trainers.ReplayBuffer.add"]], "extend() (torchrl.trainers.replaybuffer method)": [[182, "torchrl.trainers.ReplayBuffer.extend"]], "sample() (torchrl.trainers.replaybuffer method)": [[182, "torchrl.trainers.ReplayBuffer.sample"]], "rewardnormalizer (class in torchrl.trainers)": [[183, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[184, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[185, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[186, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[187, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[188, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[189, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[190, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[191, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[192, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[193, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[194, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[195, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[196, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[197, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[198, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[199, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[200, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[201, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[202, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[203, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[204, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[205, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[206, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[207, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[208, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[209, "torchrl.trainers.helpers.transformed_env_constructor"]], "csvlogger() (in module torchrl.trainers.loggers)": [[210, "torchrl.trainers.loggers.CSVLogger"]], "logger() (in module torchrl.trainers.loggers)": [[211, "torchrl.trainers.loggers.Logger"]], "mlflowlogger() (in module torchrl.trainers.loggers)": [[212, "torchrl.trainers.loggers.MLFlowLogger"]], "tensorboardlogger() (in module torchrl.trainers.loggers)": [[213, "torchrl.trainers.loggers.TensorboardLogger"]], "wandblogger() (in module torchrl.trainers.loggers)": [[214, "torchrl.trainers.loggers.WandbLogger"]], "generate_exp_name() (in module torchrl.trainers.loggers)": [[215, "torchrl.trainers.loggers.generate_exp_name"]], "get_logger() (in module torchrl.trainers.loggers)": [[216, "torchrl.trainers.loggers.get_logger"]]}})