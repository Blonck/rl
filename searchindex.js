Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/index", "tutorials/multi_task", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "D4RLExperienceReplay", "OpenMLExperienceReplay", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "OpenMLEnv", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "QValueHook", "RSSMPosterior", "RSSMPrior", "TanhDelta", "TanhNormal", "TruncatedNormal", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DistributionalQValueActor", "EGreedyWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "ValueOperator", "WorldModelWrapper", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "README Tutos", "Task-specific policy in multi-task environments", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 51, 54, 56, 57, 58, 76, 79, 86, 89, 94, 96, 99, 103, 106, 113, 114, 116, 117, 118, 119, 126, 128, 129, 131, 132, 137, 138, 143, 144, 148, 150, 151, 152, 153, 154, 156, 157, 158, 161, 165, 166, 167, 169, 170, 171, 172, 175, 176, 188, 189, 190, 191, 192, 193, 209, 212, 213, 214, 215, 219, 245, 247, 248, 254, 255, 258, 259, 262, 263, 265, 266], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 32, 33, 34, 35, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 60, 67, 68, 69, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 113, 114, 122, 126, 128, 129, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 188, 189, 190, 191, 192, 193, 206, 215, 219, 220, 221, 223, 224, 230, 233, 235, 238, 240, 243, 251, 254, 255, 257, 258, 259, 261, 262, 263, 266], "class": [0, 1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 247, 248, 249, 254, 255, 257, 258, 259, 266], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 51, 52, 54, 56, 57, 58, 73, 99, 103, 147, 149, 154, 175, 257, 258, 259, 261, 262, 263, 265, 266], "been": [0, 5, 7, 8, 17, 18, 20, 21, 48, 51, 54, 56, 57, 58, 102, 257, 258, 259, 261, 262, 266], "move": [0, 4, 21, 30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 107, 113, 127, 153, 176, 222, 257, 258, 265, 266], "out": [0, 3, 4, 5, 21, 30, 39, 51, 54, 56, 57, 58, 99, 109, 130, 131, 143, 148, 150, 151, 152, 153, 154, 186, 187, 255, 257, 258, 259, 262, 265, 266], "dedic": [0, 1, 18, 19, 20, 21, 144, 145, 146, 257, 261], "librari": [0, 5, 6, 7, 8, 9, 10, 18, 19, 20, 39, 56, 111, 251, 252, 256, 257, 258, 259, 262, 266], "take": [0, 1, 3, 8, 23, 51, 54, 56, 57, 58, 98, 100, 102, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161, 163, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215, 226, 255, 257, 258, 259, 262, 266], "look": [0, 3, 5, 7, 8, 30, 51, 54, 56, 57, 58, 89, 90, 151, 154, 155, 156, 254, 259, 262, 263, 265, 266], "find": [0, 1, 4, 6, 18, 19, 20, 32, 147, 149, 218, 222, 257, 258], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 257, 258, 259, 260, 261, 262, 263, 265, 266], "code": [0, 3, 5, 7, 8, 89, 156, 258, 259, 260, 261, 263, 264, 265, 266], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 263, 265], "i": [0, 1, 2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 51, 52, 54, 55, 56, 57, 58, 61, 68, 72, 73, 74, 75, 76, 77, 79, 81, 84, 85, 86, 89, 90, 91, 94, 95, 96, 98, 99, 101, 102, 103, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 138, 139, 140, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 185, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 217, 218, 219, 220, 221, 222, 224, 227, 228, 230, 233, 238, 240, 243, 245, 249, 252, 254, 255, 257, 258, 259, 261, 262, 263, 265, 266], "an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 49, 50, 51, 52, 54, 55, 56, 57, 58, 61, 68, 75, 77, 80, 85, 86, 89, 90, 91, 92, 99, 101, 102, 103, 107, 109, 115, 116, 117, 118, 119, 126, 127, 128, 130, 134, 144, 145, 146, 150, 151, 154, 155, 158, 159, 160, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 189, 190, 191, 192, 193, 207, 210, 219, 220, 224, 225, 228, 233, 246, 247, 248, 249, 252, 254, 257, 258, 261, 263, 265, 266], "open": [0, 5, 7, 11, 258, 265], "reinforc": [0, 2, 3, 9, 73, 116, 117, 118, 119, 122, 150, 164, 169, 173, 174, 179, 180, 181, 233, 251, 258, 260, 262, 264, 265], "learn": [0, 2, 3, 7, 8, 9, 18, 30, 40, 73, 116, 117, 118, 119, 122, 129, 131, 150, 164, 169, 173, 174, 178, 179, 180, 181, 233, 254, 257, 258, 260, 261, 262, 264, 265, 266], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 55, 131, 143, 151, 157, 164, 176, 177, 215, 252, 254, 255, 257, 258, 259, 263, 266], "pytorch": [0, 1, 2, 101, 224, 252, 255, 257, 259, 262, 263, 265, 266], "It": [0, 2, 3, 4, 7, 30, 34, 39, 51, 54, 55, 56, 57, 58, 65, 86, 90, 103, 109, 116, 118, 123, 137, 138, 150, 154, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 188, 189, 220, 240, 252, 254, 257, 258, 262, 263, 265, 266], "provid": [0, 1, 2, 3, 5, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 45, 51, 54, 55, 56, 57, 58, 74, 75, 81, 85, 86, 89, 90, 95, 99, 103, 106, 107, 115, 122, 126, 127, 128, 143, 147, 149, 150, 151, 164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 188, 189, 190, 191, 192, 193, 207, 211, 215, 221, 228, 230, 238, 240, 243, 245, 252, 254, 255, 257, 258, 259, 261, 262, 263, 265, 266], "python": [0, 3, 5, 6, 7, 10, 21, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266], "first": [0, 1, 3, 4, 5, 7, 8, 11, 18, 20, 21, 39, 54, 74, 81, 86, 89, 90, 101, 103, 127, 130, 134, 143, 148, 151, 152, 153, 154, 171, 206, 223, 257, 258, 259, 261, 262, 263, 265, 266], "low": [0, 77, 257, 258, 262, 265], "high": [0, 9, 34, 77, 189, 194, 201, 257, 258, 265], "level": [0, 4, 22, 26, 175, 257, 258, 265], "abstract": [0, 8, 24, 25, 26, 27, 28, 36, 37, 38, 50, 51, 87, 128, 193, 216, 225, 255, 259, 262, 265], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 49, 51, 52, 54, 55, 56, 57, 58, 68, 76, 77, 78, 80, 81, 89, 95, 99, 102, 103, 104, 106, 107, 114, 119, 120, 126, 128, 131, 135, 138, 150, 151, 153, 154, 155, 156, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 185, 188, 189, 190, 191, 192, 193, 221, 245, 249, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 77, 265], "effici": [0, 1, 2, 4, 8, 131, 257, 258, 259, 261, 263, 265], "modular": [0, 156, 265], "properli": [0, 259, 262, 265], "test": [0, 3, 5, 109, 126, 220, 245, 259, 265], "aim": [0, 3, 7, 89, 106, 127, 227, 252, 254, 257, 258, 265], "support": [0, 1, 3, 18, 20, 26, 39, 40, 49, 56, 68, 86, 102, 111, 122, 148, 153, 156, 169, 189, 190, 191, 192, 212, 255, 259, 262, 265], "research": [0, 7, 9, 265], "most": [0, 3, 7, 8, 30, 77, 257, 259, 262, 265], "written": [0, 3, 39, 41, 51, 54, 56, 57, 58, 73, 95, 98, 100, 143, 148, 150, 151, 152, 153, 154, 157, 164, 165, 175, 177, 179, 188, 206, 207, 254, 255, 257, 261, 262, 265], "highli": [0, 2, 265, 266], "wai": [0, 3, 4, 89, 91, 106, 177, 189, 190, 191, 192, 257, 258, 259, 261, 263, 265, 266], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44, 48, 51, 52, 54, 56, 57, 58, 73, 76, 77, 85, 86, 89, 90, 95, 99, 102, 103, 106, 107, 114, 125, 128, 129, 131, 132, 140, 141, 143, 147, 148, 151, 152, 153, 154, 155, 156, 157, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 188, 189, 190, 191, 192, 193, 220, 230, 238, 240, 243, 247, 248, 249, 252, 254, 255, 257, 258, 259, 261, 262, 263, 265, 266], "easili": [0, 3, 7, 230, 238, 240, 243, 254, 257, 258, 259, 265, 266], "swap": [0, 3, 259, 263, 265], "compon": [0, 2, 3, 41, 42, 43, 49, 122, 136, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 219, 224, 257, 258, 259, 261, 262, 263, 265], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 30, 32, 33, 34, 35, 39, 40, 52, 54, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 116, 122, 123, 136, 161, 163, 207, 221, 230, 233, 235, 238, 240, 243, 249, 251, 258, 260, 263, 264], "them": [0, 2, 7, 21, 32, 33, 34, 35, 39, 40, 51, 52, 54, 56, 57, 58, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161, 175, 207, 257, 258, 261, 262, 263, 265, 266], "write": [0, 3, 8, 23, 30, 54, 88, 143, 148, 152, 153, 154, 156, 157, 166, 167, 168, 174, 178, 180, 182, 188, 193, 207, 255, 257, 258, 259, 260, 261, 263, 264, 265], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 44, 48, 51, 54, 56, 57, 58, 95, 102, 107, 113, 150, 153, 154, 158, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 257, 259, 262, 265, 266], "ones": [0, 15, 26, 30, 32, 34, 35, 51, 54, 56, 57, 58, 74, 76, 78, 86, 89, 99, 103, 106, 153, 176, 257, 259, 262, 265, 266], "littl": [0, 3, 259, 265, 266], "effort": [0, 3, 262, 265], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 48, 49, 51, 54, 55, 56, 57, 58, 65, 73, 74, 76, 77, 80, 82, 84, 86, 89, 90, 91, 95, 96, 99, 100, 102, 103, 105, 106, 107, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 190, 191, 192, 193, 206, 215, 217, 220, 221, 224, 226, 227, 228, 230, 238, 240, 243, 245, 249, 252, 254, 255, 257, 258, 259, 261, 262, 263, 265, 266], "repo": [0, 6, 39, 252, 265], "attempt": [0, 147, 149, 150, 174, 265], "align": [0, 265], "exist": [0, 4, 18, 21, 30, 51, 54, 56, 57, 58, 74, 103, 228, 249, 265, 266], "ecosystem": [0, 265], "dataset": [0, 32, 33, 34, 35, 39, 40, 68, 107, 251, 257, 258, 263, 265, 266], "pillar": [0, 265], "environ": [0, 1, 2, 3, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 30, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 77, 78, 82, 85, 86, 89, 90, 102, 103, 107, 109, 114, 126, 128, 129, 170, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 215, 217, 220, 227, 228, 230, 231, 232, 233, 235, 238, 240, 243, 245, 246, 247, 248, 249, 252, 260, 263, 264], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 30, 51, 54, 55, 56, 57, 58, 89, 99, 106, 108, 115, 127, 128, 129, 144, 145, 146, 153, 158, 164, 170, 171, 172, 174, 176, 177, 178, 180, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 251, 252, 255, 259, 260, 262, 264, 266], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 68, 86, 98, 109, 114, 122, 126, 129, 136, 143, 148, 149, 150, 151, 152, 153, 154, 156, 157, 166, 168, 178, 180, 182, 189, 190, 191, 192, 193, 215, 221, 224, 226, 231, 245, 247, 248, 249, 251, 254, 255, 262, 263, 266], "util": [0, 3, 17, 23, 30, 51, 54, 56, 57, 58, 89, 106, 109, 110, 111, 112, 113, 115, 161, 162, 163, 245, 251, 256, 257, 259, 262, 265, 266], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 30, 31, 41, 42, 51, 52, 54, 56, 57, 58, 74, 76, 81, 86, 89, 95, 99, 102, 103, 106, 109, 125, 129, 132, 136, 140, 141, 151, 153, 154, 176, 188, 189, 190, 191, 192, 215, 227, 248, 257, 258, 259, 262, 263, 265, 266], "g": [0, 1, 3, 7, 8, 10, 11, 30, 31, 51, 52, 54, 56, 57, 58, 74, 76, 81, 86, 89, 95, 99, 102, 103, 106, 109, 125, 129, 140, 141, 151, 153, 154, 176, 188, 197, 198, 199, 200, 202, 203, 204, 205, 248, 257, 258, 259, 262, 263, 265, 266], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 98, 150, 221, 224, 226, 231, 232, 245, 247, 248, 251, 255, 266], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 30, 32, 33, 34, 35, 36, 39, 40, 44, 46, 49, 50, 51, 54, 55, 56, 57, 58, 76, 78, 89, 99, 103, 106, 107, 113, 114, 115, 127, 129, 143, 148, 151, 152, 153, 157, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 188, 189, 190, 191, 192, 193, 211, 215, 227, 230, 233, 235, 238, 240, 243, 245, 246, 247, 248, 249, 254, 255, 257, 258, 259, 262, 263, 265, 266], "etc": [0, 3, 7, 8, 11, 30, 37, 38, 51, 54, 56, 57, 58, 103, 127, 257, 258, 259, 265, 266], "have": [0, 1, 3, 5, 6, 7, 8, 13, 14, 17, 18, 20, 21, 26, 28, 30, 32, 33, 34, 35, 39, 48, 49, 51, 54, 56, 57, 58, 73, 85, 86, 99, 102, 103, 107, 109, 115, 126, 127, 155, 156, 164, 165, 175, 177, 185, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215, 224, 254, 255, 257, 258, 259, 261, 262, 263, 265, 266], "few": [0, 2, 8, 215, 259, 265, 266], "depend": [0, 1, 2, 3, 4, 7, 8, 157, 177, 257, 259, 262, 265, 266], "possibl": [0, 3, 4, 27, 30, 31, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176, 220, 224, 257, 259, 262, 265, 266], "standard": [0, 86, 94, 107, 114, 123, 129, 130, 131, 147, 182, 189, 190, 191, 192, 257, 258, 265], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 101, 224, 262, 265, 266], "common": [0, 3, 4, 21, 54, 57, 58, 144, 145, 146, 159, 160, 245, 252, 255, 257, 259, 261, 263, 265, 266], "openai": [0, 7, 63, 64, 259, 262, 265, 266], "gym": [0, 3, 4, 8, 11, 13, 14, 16, 21, 22, 52, 54, 63, 64, 84, 86, 91, 99, 107, 230, 233, 235, 238, 240, 243, 245, 252, 257, 258, 259, 262, 263, 265], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 51, 54, 56, 57, 58, 74, 76, 77, 81, 86, 89, 90, 99, 103, 106, 107, 126, 143, 148, 151, 152, 153, 154, 155, 156, 176, 180, 193, 228, 255, 257, 258, 259, 261, 262, 265, 266], "option": [0, 4, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 48, 51, 52, 54, 55, 56, 57, 58, 61, 68, 73, 74, 75, 77, 78, 81, 82, 84, 85, 86, 89, 90, 91, 94, 98, 99, 100, 101, 103, 104, 106, 107, 109, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 166, 167, 168, 170, 171, 172, 174, 175, 176, 178, 179, 180, 182, 188, 189, 190, 191, 192, 193, 197, 198, 199, 200, 202, 203, 204, 205, 207, 215, 217, 218, 219, 220, 221, 222, 224, 228, 230, 233, 238, 240, 243, 245, 247, 248, 249, 262, 265], "On": [0, 3, 7, 18, 19, 20, 21, 258], "end": [0, 13, 14, 30, 32, 33, 34, 35, 39, 40, 48, 51, 54, 56, 57, 58, 103, 115, 128, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 257, 258, 259, 261, 262, 263, 265, 266], "come": [0, 1, 3, 8, 57, 58, 143, 144, 145, 146, 151, 157, 257, 258, 259, 265, 266], "set": [0, 1, 2, 3, 7, 9, 13, 14, 16, 17, 18, 19, 20, 21, 30, 31, 32, 33, 34, 35, 39, 40, 48, 49, 51, 53, 54, 55, 56, 57, 58, 74, 76, 84, 89, 98, 99, 103, 106, 109, 112, 128, 147, 153, 176, 215, 220, 221, 232, 249, 252, 254, 256, 257, 258, 259, 261, 262, 263, 265, 266], "re": [0, 3, 8, 30, 48, 51, 54, 56, 57, 58, 151, 154, 255, 257, 259, 261, 262, 265, 266], "usabl": [0, 255, 265], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 41, 42, 43, 49, 51, 52, 54, 56, 57, 58, 78, 103, 107, 109, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 132, 133, 134, 135, 137, 138, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 230, 233, 235, 238, 240, 243, 245, 251, 257, 261, 262, 266], "cost": [0, 2, 27, 257, 258, 262], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 54, 55, 56, 57, 58, 61, 68, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 86, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 110, 111, 113, 114, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 151, 152, 153, 154, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 185, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 224, 227, 230, 231, 233, 235, 238, 240, 243, 245, 246, 247, 248, 249, 251, 255, 257, 258, 259, 261, 262, 263, 265, 266], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 30, 32, 51, 52, 54, 56, 57, 58, 107, 150, 255, 257, 258, 262, 263, 265, 266], "good": [0, 1, 4, 9, 257, 259, 265, 266], "runtim": [0, 3, 30, 51, 54, 56, 57, 58, 262], "perform": [0, 3, 4, 8, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 51, 54, 56, 57, 58, 85, 103, 114, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 128, 129, 132, 133, 134, 137, 138, 147, 149, 150, 161, 171, 177, 220, 224, 254, 257, 258, 259, 261, 262, 266], "ppo": [0, 4, 8, 151, 154, 165, 175, 177, 230, 237, 238, 251, 257, 258, 260, 264], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 52, 56, 63, 64, 76, 84, 86, 91, 99, 103, 107, 245, 258, 259, 260, 264, 265, 266], "your": [0, 2, 3, 7, 8, 10, 18, 30, 51, 54, 56, 57, 58, 107, 249, 252, 254, 258, 259, 260, 264, 265], "introduct": [0, 254, 260, 264, 266], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 30, 32, 33, 34, 35, 39, 40, 44, 45, 51, 52, 54, 55, 56, 57, 58, 61, 68, 74, 75, 77, 84, 86, 89, 90, 91, 99, 101, 102, 103, 106, 107, 109, 112, 113, 114, 115, 116, 117, 122, 123, 125, 127, 128, 129, 131, 132, 140, 141, 143, 148, 150, 151, 152, 153, 154, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 185, 188, 189, 190, 191, 192, 193, 194, 201, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 241, 245, 249, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266], "pretrain": [0, 260, 264], "task": [0, 9, 57, 58, 61, 89, 106, 174, 257, 258, 259, 260, 262, 264, 265, 266], "specif": [0, 5, 8, 34, 35, 54, 224, 251, 255, 259, 260, 264], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 51, 54, 55, 56, 57, 58, 77, 112, 122, 131, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 164, 165, 166, 168, 175, 177, 178, 179, 180, 182, 220, 226, 230, 231, 232, 233, 235, 238, 245, 247, 248, 254, 255, 258, 260, 263, 264, 265, 266], "multi": [0, 3, 7, 9, 30, 51, 54, 56, 57, 58, 126, 127, 257, 258, 260, 262, 264, 265], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 30, 41, 42, 43, 49, 51, 54, 56, 57, 58, 78, 86, 89, 102, 103, 107, 129, 143, 144, 151, 153, 154, 155, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 228, 231, 232, 244, 245, 249, 251, 255, 258, 259, 260, 262, 264, 266], "ddpg": [0, 116, 117, 118, 119, 166, 173, 181, 233, 234, 251, 258, 260, 264, 265], "loss": [0, 3, 8, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 219, 224, 229, 234, 236, 237, 239, 240, 242, 245, 254, 255, 260, 262, 264, 265], "trainer": [0, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 257, 260, 264], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 65, 77, 82, 89, 90, 91, 99, 102, 103, 105, 107, 108, 109, 113, 114, 115, 122, 127, 129, 131, 132, 147, 149, 151, 154, 156, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 192, 193, 208, 209, 212, 217, 224, 226, 230, 235, 238, 240, 243, 245, 254, 257, 259, 260, 262, 264, 266], "dqn": [0, 122, 148, 152, 164, 166, 167, 168, 169, 170, 173, 174, 176, 177, 178, 179, 180, 181, 182, 235, 236, 251, 260, 264], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 74, 76, 77, 78, 84, 86, 89, 91, 99, 101, 103, 106, 107, 113, 114, 115, 122, 126, 127, 129, 132, 136, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 160, 164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 183, 184, 189, 190, 191, 192, 215, 216, 217, 218, 219, 221, 222, 223, 226, 230, 233, 235, 238, 240, 243, 245, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266], "api": [0, 3, 5, 89, 106, 254, 255, 262, 265, 266], "packag": [0, 6, 7, 10, 251, 252, 257, 265, 266], "singl": [0, 3, 17, 18, 19, 20, 21, 30, 32, 33, 34, 35, 39, 40, 51, 54, 56, 57, 58, 73, 74, 89, 101, 106, 115, 126, 127, 156, 168, 169, 178, 182, 197, 198, 199, 200, 202, 203, 204, 205, 240, 249, 251, 257, 258, 259, 261, 262, 263], "node": [0, 2, 18, 19, 20, 21, 22, 230, 233, 235, 238, 240, 243, 251], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 86, 114, 120, 121, 122, 123, 125, 129, 132, 135, 137, 138, 139, 140, 141, 147, 148, 151, 154, 155, 164, 165, 169, 175, 177, 251, 255, 258, 259, 262, 265, 266], "helper": [0, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 257, 258, 262], "replai": [0, 8, 13, 14, 16, 32, 33, 34, 35, 39, 40, 44, 45, 46, 47, 49, 77, 90, 99, 166, 167, 168, 174, 178, 180, 182, 221, 224, 241, 245, 251, 255, 262, 263], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 30, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 54, 55, 56, 57, 58, 76, 77, 89, 90, 99, 103, 106, 143, 148, 151, 152, 153, 156, 157, 166, 167, 168, 174, 176, 178, 180, 182, 221, 224, 241, 245, 251, 255, 262, 263, 266], "compos": [0, 3, 30, 32, 33, 34, 35, 39, 40, 45, 46, 47, 51, 54, 56, 57, 58, 102, 103, 107, 171, 230, 233, 235, 238, 240, 243, 251, 257, 258, 259, 261, 265, 266], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 31, 37, 38, 51, 55, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 86, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 138, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 251, 262], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 30, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 128, 129, 153, 176, 206, 228, 230, 231, 232, 233, 235, 238, 240, 243, 245, 247, 248, 249, 251, 257, 258, 259, 260, 261, 263, 264], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 52, 54, 56, 57, 58, 85, 91, 102, 103, 107, 109, 114, 128, 129, 220, 228, 230, 231, 232, 233, 235, 238, 240, 243, 245, 247, 248, 249, 251], "gymlikeenv": [0, 251], "envmetadata": [0, 251], "vector": [0, 1, 8, 24, 31, 77, 116, 118, 127, 192, 201, 202, 203, 204, 205, 251, 257, 258, 261, 262, 263, 266], "record": [0, 30, 51, 54, 56, 57, 58, 177, 206, 207, 208, 209, 210, 211, 212, 213, 214, 245, 251, 258, 259], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 77, 99, 143, 148, 151, 152, 153, 154, 155, 156, 251, 259, 262, 265, 266], "modul": [0, 3, 4, 8, 11, 30, 51, 54, 55, 56, 57, 58, 76, 77, 89, 90, 99, 103, 106, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 173, 176, 178, 179, 180, 181, 182, 183, 186, 189, 190, 191, 192, 193, 224, 229, 234, 236, 237, 239, 242, 245, 251, 254, 255, 258, 259, 261, 262, 263], "hook": [0, 30, 51, 54, 56, 57, 58, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 132, 133, 134, 136, 137, 138, 147, 148, 149, 150, 152, 161, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 251], "explor": [0, 1, 108, 131, 143, 147, 148, 149, 150, 151, 152, 153, 154, 164, 220, 231, 232, 245, 251, 259, 262], "planner": [0, 114, 129, 251], "train": [0, 1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 30, 51, 54, 56, 57, 58, 82, 89, 103, 106, 109, 116, 118, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 189, 224, 226, 245, 251, 255, 258, 263, 266], "valu": [0, 1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 51, 54, 56, 57, 58, 72, 73, 74, 77, 85, 86, 89, 90, 93, 95, 99, 100, 101, 102, 103, 106, 107, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 129, 130, 131, 132, 135, 136, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 215, 217, 218, 219, 220, 221, 224, 230, 233, 238, 240, 243, 245, 251, 255, 258, 261, 262, 265, 266], "sac": [0, 168, 178, 180, 242, 243, 251], "redq": [0, 178, 239, 240, 251], "iql": [0, 174, 251], "td3": [0, 182, 251], "a2c": [0, 164, 229, 251], "dreamer": [0, 71, 123, 170, 171, 172, 251], "checkpoint": [0, 251, 263], "builder": [0, 251, 258, 266], "logger": [0, 207, 209, 210, 211, 212, 213, 214, 218, 224, 245, 249, 251, 258], "_util": [0, 11, 251], "implement_for": [0, 251], "contribut": 0, "thing": [0, 3, 7, 8, 252, 259, 266], "consid": [0, 1, 8, 20, 30, 51, 54, 56, 57, 58, 77, 107, 120, 139, 148, 152, 176, 252, 257, 262], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 51, 52, 54, 56, 57, 58, 68, 76, 77, 85, 86, 89, 90, 95, 99, 102, 103, 106, 107, 112, 114, 127, 128, 129, 130, 140, 151, 153, 154, 156, 161, 165, 175, 176, 177, 183, 188, 206, 207, 221, 249, 252, 255, 257, 258, 259, 262, 263, 266], "debug": [0, 6, 8, 252, 266], "work": [0, 3, 4, 8, 11, 30, 51, 54, 56, 57, 58, 74, 89, 107, 115, 127, 224, 252, 257, 258, 259, 261, 262, 263, 265, 266], "habitat": [0, 65, 252, 263], "lab": [0, 3, 61, 62, 252], "mujoco": [0, 6, 8, 252, 259], "error": [0, 1, 3, 7, 10, 11, 30, 51, 54, 56, 57, 58, 90, 109, 160, 252, 257, 259, 266], "solut": [0, 6, 7, 9, 21, 252, 255, 265], "resourc": [0, 1, 21, 252, 257, 259], "version": [0, 1, 6, 11, 30, 51, 54, 56, 57, 58, 146, 180, 192, 252, 257, 259, 262, 263, 266], "issu": [0, 4, 5, 8, 90, 143, 148, 151, 152, 153, 154, 252, 265], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 46, 50, 77, 113, 261, 265], "search": [0, 258], "page": [0, 7], "somewhat": [1, 254, 266], "equival": [1, 17, 24, 27, 28, 29, 30, 31, 39, 51, 54, 56, 57, 58, 103, 221, 265, 266], "dataload": [1, 48, 258, 259], "except": [1, 3, 13, 14, 16, 18, 19, 20, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 51, 80, 135, 160, 258, 265, 266], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 51, 52, 54, 55, 56, 57, 58, 60, 67, 68, 69, 70, 72, 74, 76, 77, 78, 82, 85, 86, 89, 90, 91, 99, 100, 101, 103, 106, 107, 113, 114, 115, 116, 117, 119, 122, 124, 125, 127, 129, 130, 131, 132, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 161, 164, 165, 168, 171, 174, 175, 176, 177, 178, 180, 181, 188, 189, 190, 191, 192, 196, 197, 198, 202, 203, 205, 215, 220, 221, 222, 230, 233, 235, 238, 240, 243, 245, 249, 252, 254, 255, 257, 258, 259, 261, 262, 263, 265, 266], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 51, 54, 56, 57, 58, 78, 80, 89, 102, 103, 106, 126, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 221, 224, 254, 255, 257, 258, 259, 261, 262, 263, 265, 266], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 30, 32, 33, 34, 35, 39, 40, 86, 89, 106, 109, 150, 166, 168, 178, 180, 182, 215, 221, 224, 226, 227, 228, 245, 255, 257, 262, 263, 265, 266], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 30, 33, 35, 51, 54, 56, 57, 58, 77, 86, 100, 113, 156, 169, 171, 176, 227, 255, 257, 258, 259, 262, 266], "non": [1, 8, 21, 30, 32, 33, 34, 35, 51, 54, 56, 57, 58, 72, 76, 81, 89, 99, 103, 104, 106, 113, 153, 154, 164, 166, 167, 168, 169, 170, 171, 174, 176, 177, 178, 179, 180, 182, 189, 190, 191, 192, 257, 262, 266], "static": [1, 107, 174, 262], "2": [1, 3, 8, 10, 11, 13, 14, 16, 21, 22, 28, 29, 30, 32, 33, 34, 35, 51, 52, 54, 56, 57, 58, 68, 69, 70, 74, 76, 77, 86, 89, 99, 103, 106, 107, 115, 116, 117, 118, 122, 124, 126, 127, 132, 148, 149, 150, 153, 157, 165, 166, 168, 174, 175, 176, 178, 180, 182, 188, 189, 190, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 215, 254, 257, 258, 259, 261, 262, 263, 265, 266], "like": [1, 4, 7, 21, 30, 32, 33, 34, 35, 51, 54, 56, 57, 58, 65, 101, 109, 178, 254, 257, 259, 262, 263, 266], "being": [1, 3, 7, 8, 17, 18, 20, 21, 30, 51, 54, 56, 57, 58, 77, 78, 91, 103, 112, 150, 165, 175, 176, 177, 207, 221, 226, 247, 248, 249, 257, 258, 259, 262], "": [1, 2, 3, 6, 7, 8, 30, 32, 33, 34, 35, 39, 40, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 107, 109, 115, 131, 144, 146, 147, 151, 153, 154, 174, 176, 180, 189, 190, 191, 192, 193, 240, 243, 257, 258, 259, 261, 262, 263, 265, 266], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 30, 51, 54, 55, 56, 57, 58, 76, 81, 89, 95, 99, 103, 104, 106, 153, 154, 155, 176, 255, 259, 266], "two": [1, 4, 8, 10, 30, 48, 51, 54, 56, 57, 58, 86, 89, 106, 119, 154, 175, 185, 220, 224, 230, 238, 240, 243, 254, 257, 258, 259, 261, 262, 265, 266], "main": [1, 2, 5, 20, 22, 52, 154, 224, 254, 257, 258, 261, 266], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 30, 32, 33, 34, 35, 48, 51, 54, 56, 57, 58, 76, 89, 99, 102, 103, 106, 113, 115, 127, 130, 143, 148, 151, 152, 153, 154, 155, 157, 176, 184, 189, 190, 191, 192, 193, 206, 217, 227, 230, 233, 235, 238, 240, 243, 245, 246, 249, 257, 258, 259, 262, 266], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 48, 49, 51, 54, 55, 56, 57, 58, 73, 78, 86, 89, 91, 95, 103, 106, 107, 127, 156, 157, 176, 187, 189, 192, 206, 220, 221, 247, 248, 257, 259, 261, 262, 263, 265, 266], "constructor": [1, 16, 18, 19, 20, 21, 33, 102, 164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 189, 190, 191, 192, 193, 230, 233, 235, 238, 240, 243, 246, 249, 257, 258, 259], "iter": [1, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 54, 56, 57, 58, 79, 86, 96, 107, 115, 127, 143, 148, 151, 152, 153, 154, 155, 156, 157, 159, 176, 187, 220, 223, 224, 230, 238, 240, 243, 254, 255, 257, 259, 262], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 30, 32, 33, 34, 35, 39, 40, 51, 52, 54, 55, 56, 57, 58, 99, 155, 156, 228, 249, 255, 258, 259, 264, 266], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 30, 51, 52, 54, 55, 56, 57, 58, 60, 67, 81, 84, 85, 86, 98, 100, 103, 113, 114, 123, 126, 128, 129, 147, 149, 150, 151, 154, 164, 170, 177, 188, 190, 195, 196, 206, 215, 220, 224, 255, 257, 258, 261, 262, 263, 265], "queri": [1, 13, 14, 16, 17, 30, 51, 54, 56, 57, 58, 89, 102, 107, 156, 257, 262, 265], "defin": [1, 2, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 51, 54, 56, 57, 58, 90, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161, 189, 190, 191, 192, 193, 206, 246, 257, 258, 262, 266], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 51, 54, 55, 56, 57, 58, 68, 73, 77, 82, 85, 86, 94, 98, 100, 107, 114, 115, 120, 121, 123, 124, 125, 127, 129, 132, 133, 134, 137, 138, 139, 140, 141, 143, 147, 148, 149, 150, 151, 152, 153, 154, 157, 163, 168, 170, 174, 175, 178, 180, 182, 215, 217, 220, 224, 226, 227, 228, 247, 248, 249, 257, 258, 259, 262, 263, 266], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 30, 40, 48, 51, 54, 56, 57, 58, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 86, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 104, 127, 130, 131, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 190, 191, 192, 221, 257, 259, 262, 266], "deliv": [1, 18, 19, 20, 257, 258, 265], "stack": [1, 7, 8, 18, 20, 21, 57, 58, 107, 155, 156, 206, 215, 258, 261, 262, 265], "user": [1, 2, 5, 8, 21, 30, 39, 51, 54, 56, 57, 58, 103, 126, 246, 254, 255, 257, 258, 262, 265, 266], "reset": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 30, 51, 52, 54, 55, 56, 57, 58, 60, 67, 68, 73, 76, 79, 81, 84, 85, 89, 95, 96, 98, 99, 100, 102, 105, 107, 109, 142, 150, 206, 230, 233, 235, 238, 240, 243, 257, 258, 259, 261, 265], "whenev": [1, 3, 30, 32, 33, 34, 35, 84, 226], "reach": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 48, 51, 54, 56, 57, 58, 147, 149, 150, 257, 259, 265, 266], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 51, 52, 54, 55, 56, 57, 58, 60, 67, 68, 69, 70, 86, 91, 94, 96, 98, 99, 102, 103, 107, 113, 114, 129, 166, 167, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 230, 233, 235, 238, 240, 243, 254, 257, 259, 261, 262, 263, 265, 266], "state": [1, 3, 4, 13, 14, 16, 17, 30, 39, 51, 54, 55, 56, 57, 58, 60, 67, 73, 74, 76, 79, 84, 86, 91, 96, 98, 102, 103, 105, 107, 113, 114, 123, 126, 127, 129, 133, 137, 138, 144, 153, 158, 164, 165, 175, 176, 177, 178, 179, 188, 189, 190, 191, 192, 193, 249, 254, 257, 258, 259, 262, 266], "after": [1, 8, 13, 14, 18, 20, 21, 26, 30, 51, 54, 56, 57, 58, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 113, 130, 147, 149, 171, 258, 259, 262, 263, 266], "predefin": [1, 258, 259], "becaus": [1, 3, 4, 7, 102, 119, 126, 143, 148, 151, 152, 153, 154, 257, 258, 261, 262, 266], "potenti": [1, 262], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 30, 51, 54, 56, 57, 58, 86, 103, 105, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 132, 133, 134, 137, 138, 140, 141, 144, 147, 149, 150, 151, 154, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 228, 254, 257, 259, 261, 263], "heavi": [1, 8], "crucial": [1, 174, 257, 258, 259, 262, 266], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 177, 230, 238, 240, 243, 257, 258, 259, 262], "hyperparamet": [1, 164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 257, 262], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 46, 50, 99, 246, 249, 257], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 52, 54, 55, 56, 57, 58, 61, 62, 68, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 238, 240, 243, 245, 246, 247, 248, 249, 254, 257, 262, 263, 265], "consider": [1, 3, 8, 258], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 54, 55, 56, 57, 58, 103, 115, 127, 157, 166, 167, 168, 169, 176, 178, 180, 182, 192, 257, 258, 259, 262, 266], "should": [1, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 51, 54, 55, 56, 57, 58, 73, 81, 86, 90, 91, 95, 96, 98, 102, 103, 107, 109, 113, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 151, 153, 154, 161, 168, 173, 175, 176, 177, 178, 181, 188, 189, 190, 191, 192, 193, 207, 219, 220, 221, 224, 245, 247, 248, 249, 255, 257, 258, 259, 261, 262, 263, 265, 266], "occur": [1, 8, 14, 74, 86, 90, 143, 148, 151, 152, 153, 154, 171, 266], "serial": [1, 3, 30, 51, 54, 56, 57, 58, 107], "optim": [1, 8, 30, 51, 54, 56, 57, 58, 114, 129, 130, 131, 176, 177, 180, 219, 224, 230, 238, 245, 254, 255, 259, 262], "parallel": [1, 3, 8, 17, 109, 164, 246, 247, 248, 249, 258, 259], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 245, 248, 251, 259], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 52, 56, 57, 58, 107, 247, 248, 249, 257, 259, 265, 266], "multisyncdatacollector": [1, 18, 19, 20, 21, 248, 251, 259, 265], "split": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 39, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 255, 259, 265], "workload": 1, "across": [1, 8, 18, 19, 20, 21, 32, 33, 34, 35, 107, 150, 226, 257, 262], "aggreg": [1, 115, 116, 117, 156], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 30, 32, 33, 34, 35, 39, 40, 48, 51, 52, 54, 56, 57, 58, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 86, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 107, 109, 113, 127, 136, 176, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 226, 258, 262, 263, 265, 266], "final": [1, 3, 4, 21, 147, 149, 150, 155, 189, 220, 257, 258, 259, 262, 266], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 247, 251, 257, 258, 259, 265], "sever": [1, 8, 28, 30, 51, 54, 56, 57, 58, 74, 103, 177, 257, 259, 266], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 30, 31, 32, 33, 34, 35, 39, 40, 45, 48, 51, 54, 55, 56, 57, 58, 68, 81, 86, 90, 99, 103, 104, 107, 120, 121, 126, 130, 135, 139, 150, 153, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 215, 218, 221, 222, 223, 224, 226, 247, 248, 249, 255, 257, 258, 259, 261, 263, 265, 266], "gather": [1, 3, 18, 20, 21, 90, 188, 228, 252, 257, 258, 259, 262, 266], "continu": [1, 9, 25, 37, 116, 117, 118, 119, 150, 154, 156, 181, 189, 194, 201, 233, 257, 259, 262, 265, 266], "concomitantli": 1, "network": [1, 4, 8, 30, 51, 54, 56, 57, 58, 115, 116, 117, 118, 119, 121, 123, 124, 127, 131, 133, 134, 137, 138, 144, 145, 146, 153, 166, 167, 168, 169, 173, 174, 176, 178, 179, 180, 181, 182, 186, 189, 190, 191, 192, 193, 230, 233, 238, 244, 245, 254, 255, 257, 261, 262, 266], "impli": [1, 266], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 30, 32, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 131, 153, 164, 165, 168, 171, 176, 226, 244, 255, 257, 258, 259, 261, 262, 265], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 30, 39, 51, 54, 56, 57, 58, 86, 96, 103, 104, 107, 109, 127, 254, 255, 257, 258, 259, 262, 263, 265, 266], "slightli": [1, 254, 262, 263, 266], "lag": [1, 13, 14, 16, 17, 257, 258, 259], "therefor": [1, 3, 7, 177, 266], "although": [1, 8, 51, 54, 56, 57, 58, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161, 255, 257, 258], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 33, 34, 35, 39, 40, 41, 42, 51, 54, 55, 56, 57, 58, 68, 73, 89, 95, 98, 100, 102, 104, 106, 147, 149, 151, 153, 154, 163, 164, 165, 168, 169, 173, 174, 175, 177, 178, 179, 180, 181, 182, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 254, 255, 257, 258, 259, 261, 262, 266], "asynchron": [1, 9, 14, 21, 30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 164, 176, 247, 258, 259], "off": [1, 2, 4, 125, 140, 141, 180, 220, 231, 255, 257, 258, 259, 263, 266], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 30, 39, 51, 54, 56, 57, 58, 81, 86, 122, 130, 144, 146, 164, 169, 174, 176, 177, 220, 233, 255, 257, 258, 259, 262, 263, 266], "remot": [1, 18, 19, 20, 21, 57, 58, 266], "rollout": [1, 3, 13, 14, 16, 21, 23, 51, 54, 55, 56, 57, 58, 69, 70, 91, 109, 114, 129, 150, 164, 228, 257, 259, 263, 265], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 96, 178, 189, 190, 191, 192, 193, 254, 257, 259], "synchronis": [1, 52], "from": [1, 2, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 51, 52, 54, 55, 56, 57, 58, 74, 77, 79, 84, 86, 89, 90, 91, 96, 98, 99, 101, 102, 103, 104, 106, 107, 113, 114, 116, 117, 118, 119, 122, 125, 127, 128, 129, 130, 132, 136, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 164, 165, 166, 167, 168, 175, 176, 177, 178, 180, 182, 184, 188, 189, 190, 191, 192, 206, 207, 215, 221, 224, 227, 228, 230, 233, 235, 238, 240, 241, 243, 245, 246, 249, 252, 254, 255, 257, 258, 259, 261, 262, 263, 265, 266], "either": [1, 5, 22, 30, 51, 54, 56, 57, 58, 158, 211, 233, 255, 257, 258, 263, 265, 266], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 257, 265], "update_at_each_batch": [1, 13, 14, 17, 257], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 74, 76, 77, 81, 84, 85, 86, 89, 90, 91, 94, 98, 99, 101, 103, 104, 106, 107, 109, 113, 114, 115, 116, 117, 118, 119, 124, 125, 127, 129, 130, 131, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 160, 164, 165, 168, 170, 171, 172, 175, 176, 177, 178, 179, 180, 185, 189, 190, 191, 192, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 217, 218, 220, 221, 224, 235, 249, 254, 255, 257, 258, 259, 261, 262, 263, 265, 266], "second": [1, 8, 180, 223, 257, 258, 259, 261, 262, 263, 265, 266], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 41, 42, 51, 53, 54, 55, 56, 57, 58, 60, 67, 68, 69, 70, 76, 88, 89, 91, 99, 101, 103, 106, 113, 114, 115, 116, 117, 118, 119, 122, 124, 126, 127, 129, 130, 131, 136, 143, 144, 145, 146, 148, 150, 151, 152, 153, 156, 157, 176, 221, 226, 230, 233, 235, 238, 240, 241, 243, 257, 258, 259, 261, 262, 263, 265], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 51, 54, 56, 57, 58, 81, 102, 122, 132, 144, 145, 146, 153, 158, 164, 165, 166, 167, 169, 175, 176, 177, 179, 188, 189, 190, 191, 192, 224, 233, 235, 240, 243, 255, 257, 258, 259, 261, 262, 266], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 30, 36, 39, 51, 52, 54, 55, 56, 57, 58, 62, 73, 86, 99, 102, 107, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 128, 132, 133, 134, 137, 138, 147, 149, 150, 151, 154, 155, 156, 161, 207, 211, 220, 228, 230, 231, 232, 233, 235, 238, 240, 243, 245, 247, 248, 254, 255, 257, 259, 262, 266], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 30, 34, 35, 36, 41, 42, 51, 54, 55, 56, 57, 58, 60, 67, 68, 69, 70, 76, 89, 91, 99, 103, 106, 113, 114, 129, 131, 143, 144, 145, 146, 148, 151, 153, 156, 157, 176, 221, 230, 233, 235, 238, 240, 243, 257, 258, 259, 261, 262, 263, 265, 266], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 39, 91, 119, 127, 132, 143, 147, 148, 149, 152, 153, 157, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 252, 254, 257, 258, 259, 262, 265, 266], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 27, 28, 29, 31, 32, 33, 34, 35, 39, 40, 44, 46, 49, 50, 51, 52, 54, 56, 57, 58, 68, 77, 85, 86, 89, 97, 103, 104, 106, 107, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 132, 133, 134, 135, 136, 137, 138, 143, 147, 148, 149, 150, 151, 152, 153, 154, 157, 161, 163, 164, 165, 166, 167, 168, 175, 177, 178, 179, 182, 195, 196, 217, 219, 220, 224, 228, 230, 238, 240, 243, 249, 252, 254, 255, 257, 258, 259, 261, 262, 263, 266], "cuda": [1, 3, 7, 30, 51, 54, 56, 57, 58, 76, 88, 89, 99, 103, 106, 153, 176, 216, 257, 258, 259, 263, 266], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 57, 58, 74, 77, 95, 102, 107, 126, 130, 131, 143, 148, 151, 152, 153, 154, 168, 178, 182, 240, 249, 255, 257, 258, 259, 262, 265], "infer": [1, 57, 58, 107, 130, 257, 259], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 30, 51, 54, 55, 56, 57, 58, 61, 62, 85, 86, 103, 107, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 155, 156, 161, 176, 220, 247, 248, 249, 252, 255, 257, 258, 259, 261, 262, 263, 265], "dispatch": [1, 18, 19, 20, 21], "avail": [1, 4, 6, 21, 48, 122, 136, 151, 154, 247, 248, 257, 258, 259, 266], "speed": [1, 2, 4, 8, 27, 254, 257, 258, 259, 262], "up": [1, 2, 3, 8, 9, 27, 39, 252, 254, 257, 258, 259, 262, 266], "avoid": [1, 30, 51, 54, 56, 57, 58, 103, 107, 143, 148, 152, 153, 157, 227, 259], "oom": 1, "choic": [1, 2, 39, 132, 254, 257, 258], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 49, 51, 53, 54, 55, 56, 57, 58, 60, 67, 68, 69, 70, 74, 81, 89, 91, 97, 99, 101, 103, 104, 106, 107, 113, 114, 115, 120, 122, 126, 127, 129, 132, 135, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 176, 188, 189, 190, 191, 192, 193, 207, 215, 221, 230, 233, 235, 238, 240, 243, 257, 258, 259, 261, 262, 263, 265, 266], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 30, 32, 33, 34, 35, 51, 52, 53, 54, 56, 57, 58, 78, 91, 102, 104, 107, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 130, 132, 133, 134, 137, 138, 143, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 160, 161, 176, 189, 190, 191, 192, 193, 221, 247, 248, 249, 257, 258, 259, 261, 262, 266], "ie": [1, 18, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 44, 68, 81, 104, 107, 254, 258, 259], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 30, 34, 35, 41, 42, 43, 44, 51, 54, 56, 57, 58, 107, 114, 126, 129, 230, 233, 235, 238, 240, 243, 251, 255, 257, 259, 263, 266], "while": [1, 3, 7, 8, 30, 51, 54, 56, 57, 58, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161, 174, 175, 176, 177, 257, 259, 262, 263, 265], "wait": [1, 20, 21, 22, 262], "also": [1, 2, 3, 8, 11, 30, 34, 51, 54, 56, 57, 58, 77, 86, 91, 95, 96, 99, 103, 138, 155, 156, 164, 166, 167, 176, 189, 195, 196, 255, 257, 258, 259, 261, 262, 266], "impact": [1, 258], "memori": [1, 2, 3, 8, 21, 27, 30, 41, 51, 52, 54, 56, 57, 58, 76, 89, 99, 103, 106, 107, 153, 176, 249, 255, 257, 258, 259, 261, 262, 263, 265, 266], "manag": [1, 8, 186, 187, 189, 190, 191, 192, 220], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 51, 54, 56, 57, 58, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 88, 89, 90, 91, 95, 96, 98, 99, 100, 102, 103, 105, 106, 107, 113, 114, 128, 129, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 188, 189, 190, 191, 192, 193, 207, 218, 219, 220, 222, 223, 224, 228, 230, 238, 240, 243, 254, 255, 257, 259, 261, 262, 265, 266], "control": [1, 3, 5, 8, 16, 61, 62, 77, 113, 116, 117, 118, 119, 128, 129, 138, 150, 153, 154, 155, 164, 165, 175, 177, 181, 189, 194, 201, 233, 255, 257, 258, 259, 262], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 27, 30, 31, 34, 35, 39, 48, 51, 54, 56, 57, 58, 73, 74, 82, 85, 86, 89, 90, 98, 99, 100, 102, 103, 109, 125, 140, 141, 143, 144, 145, 146, 148, 151, 152, 153, 154, 156, 157, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 185, 189, 215, 219, 230, 233, 235, 238, 240, 243, 254, 255, 257, 258, 259, 261, 262, 263, 266], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 257, 258, 265], "dure": [1, 7, 13, 14, 16, 17, 18, 19, 20, 39, 40, 51, 54, 56, 57, 58, 82, 103, 220, 224, 254, 257, 258, 259, 262, 266], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 150, 257, 266], "usual": [1, 3, 4, 6, 7, 8, 39, 51, 54, 56, 57, 58, 131, 189, 190, 191, 192, 193, 206, 230, 238, 240, 243, 252, 255, 257, 258, 259, 266], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 30, 39, 48, 51, 52, 54, 56, 57, 58, 77, 82, 85, 86, 102, 103, 107, 115, 127, 150, 257, 258, 259, 261, 262, 263, 266], "storag": [1, 2, 8, 30, 32, 33, 34, 35, 39, 40, 41, 42, 43, 48, 51, 53, 54, 56, 57, 58, 78, 251, 255, 257, 258, 259, 263], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 44, 51, 54, 56, 57, 58, 61, 68, 73, 74, 77, 81, 85, 86, 89, 90, 94, 98, 99, 100, 101, 103, 104, 106, 107, 109, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 143, 147, 148, 149, 150, 151, 152, 153, 154, 157, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 188, 189, 190, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 233, 238, 240, 243, 245, 249, 255, 257, 258, 259, 263, 265, 266], "behaviour": [1, 3, 21, 54, 74, 86, 90, 113, 125, 140, 141, 220, 258, 262], "besid": 1, "those": [1, 5, 7, 26, 57, 58, 86, 99, 151, 154, 155, 156, 226, 247, 248, 257, 258, 262, 266], "choos": [1, 254, 257, 258, 259], "follow": [1, 2, 3, 6, 7, 8, 30, 39, 40, 51, 54, 55, 56, 57, 58, 68, 89, 115, 127, 163, 165, 175, 179, 224, 240, 243, 254, 255, 257, 258, 259, 261, 262, 265, 266], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 227, 257, 259, 265], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 30, 54, 73, 82, 147, 149, 150, 206, 207, 217, 220, 224, 227, 228, 257, 258, 259, 265, 266], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 30, 32, 33, 34, 35, 39, 40, 41, 42, 43, 45, 48, 49, 51, 54, 56, 57, 58, 68, 73, 76, 77, 78, 81, 84, 86, 88, 89, 95, 98, 99, 103, 106, 107, 109, 112, 114, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 129, 130, 132, 133, 134, 137, 138, 147, 149, 150, 153, 154, 156, 161, 176, 188, 189, 190, 191, 192, 206, 220, 255, 258, 259, 262, 265, 266], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 227, 257, 258, 259, 265], "each": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 30, 34, 51, 52, 54, 56, 57, 58, 89, 95, 98, 99, 100, 106, 107, 122, 136, 147, 156, 197, 198, 199, 200, 202, 203, 204, 205, 220, 221, 247, 248, 257, 258, 259, 262, 263, 265, 266], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 227, 257, 258], "random": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 45, 51, 54, 55, 56, 57, 58, 77, 85, 86, 99, 109, 151, 153, 154, 178, 220, 228, 257, 258, 259, 262, 263, 265, 266], "rand_step": [1, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 84, 107, 262, 265, 266], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 257], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 39, 257, 258, 259], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 34, 39, 44, 51, 54, 56, 57, 58, 90, 102, 114, 129, 150, 177, 189, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215, 251, 254, 257, 258, 259, 262, 265, 266], "pad": [1, 23, 39, 115, 116, 117, 126, 221], "along": [1, 23, 39, 73, 74, 86, 90, 95, 101, 127, 131, 151, 153, 154, 257, 258, 262], "mask": [1, 4, 13, 14, 16, 23, 90, 221, 258, 266], "point": [1, 22, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 40, 44, 46, 50, 51, 54, 56, 57, 58, 73, 76, 89, 99, 101, 103, 106, 128, 153, 163, 169, 176, 224, 252, 258, 259, 261, 262, 266], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 54, 90, 147, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 255], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 34, 51, 54, 56, 57, 58, 82, 90, 107, 122, 136, 154, 185, 189, 221, 257, 259], "valid": [1, 23, 90, 103, 115, 127, 147, 149, 150, 175, 221, 255, 266], "exploration_mod": [1, 13, 14, 16, 18, 19, 20, 21, 220, 251, 257, 258], "strategi": [1, 16, 255, 257, 258], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 30, 51, 54, 56, 57, 58, 89, 106, 254, 257, 259, 262, 266], "tool": [1, 5, 262, 266], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 255, 257, 259, 262], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 251], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 251], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 48, 51, 52, 54, 55, 56, 57, 58, 60, 67, 68, 69, 70, 74, 76, 77, 78, 86, 89, 91, 94, 99, 101, 103, 106, 107, 113, 114, 115, 120, 122, 123, 125, 126, 127, 129, 130, 131, 132, 135, 136, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 162, 176, 189, 190, 191, 192, 215, 222, 223, 230, 233, 235, 238, 240, 243, 245, 254, 255, 257, 258, 259, 261, 262, 263, 265, 266], "multiprocess": [1, 18, 19, 20, 52, 53, 107, 258, 259, 262, 266], "synchron": [1, 13, 19, 21, 56, 247, 248, 258, 259], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 30, 51, 54, 56, 57, 58, 103, 107, 110, 112, 120, 125, 135, 139, 140, 141, 151, 154, 220, 257, 258, 265, 266], "folder": [1, 258], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 51, 54, 56, 57, 58, 90, 155, 156, 215, 224, 257, 258, 259, 261, 265, 266], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 51, 52, 54, 55, 56, 57, 58, 76, 80, 86, 89, 95, 99, 100, 103, 106, 107, 111, 112, 113, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 153, 154, 156, 161, 171, 176, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 219, 224, 227, 247, 248, 249, 252, 254, 255, 257, 258, 259, 260, 261, 262, 265, 266], "variou": [1, 3, 13, 14, 16, 17, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 247, 248, 257, 258, 259, 266], "machin": [1, 7, 18, 19, 20, 30, 40], "One": [1, 2, 4, 8, 29, 31, 135, 147, 149, 153, 185, 211, 257, 258, 266], "wonder": 1, "why": [1, 3, 262, 266], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 56, 58, 246, 251, 257, 258, 259, 261, 265, 266], "instead": [1, 4, 7, 8, 11, 27, 30, 51, 54, 56, 57, 58, 81, 99, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161, 193, 249, 262, 266], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 30, 39, 51, 54, 56, 57, 58, 76, 89, 96, 99, 102, 103, 106, 125, 127, 138, 140, 141, 153, 156, 163, 176, 226, 247, 248, 249, 254, 257, 258, 259, 261, 262, 263, 266], "gener": [1, 3, 7, 8, 16, 32, 33, 47, 48, 52, 55, 86, 91, 95, 96, 102, 120, 135, 143, 151, 154, 157, 158, 178, 184, 189, 194, 201, 210, 224, 257, 258, 259, 260, 261, 262, 263, 265, 266], "lower": [1, 2, 17, 21, 25, 107, 137, 138, 259, 262], "io": [1, 56], "footprint": [1, 2], "need": [1, 2, 4, 7, 8, 10, 18, 19, 20, 21, 30, 49, 51, 54, 56, 57, 58, 81, 89, 91, 103, 106, 107, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 130, 132, 133, 134, 137, 138, 147, 149, 150, 153, 161, 163, 168, 178, 179, 180, 182, 188, 193, 207, 224, 249, 254, 257, 258, 259, 262, 265, 266], "commun": [1, 2, 3, 252, 259, 266], "yet": [1, 263], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 39, 51, 53, 54, 55, 56, 57, 58, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 86, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 109, 122, 136, 138, 143, 147, 148, 149, 150, 151, 152, 153, 154, 156, 230, 233, 235, 238, 240, 243, 257, 258, 259, 261, 265], "plai": [1, 73, 258, 259, 266], "role": [1, 258, 266], "opposit": 1, "direct": [1, 30, 51, 54, 56, 57, 58, 176, 258], "sinc": [1, 3, 4, 5, 7, 30, 32, 33, 34, 35, 51, 54, 56, 57, 58, 113, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161, 257, 258, 259, 262, 263, 265, 266], "faster": [1, 4, 56], "share": [1, 2, 3, 6, 8, 41, 42, 43, 49, 52, 57, 58, 107, 144, 145, 146, 249, 259, 261, 265, 266], "among": 1, "achiev": [1, 3, 4, 30, 51, 54, 56, 57, 58, 221, 255, 257, 258, 259, 262, 266], "via": [1, 3, 4, 7, 8, 32, 33, 34, 35, 39, 40, 57, 89, 102, 106, 254, 255, 257, 258, 259, 266], "capabl": [1, 7, 255, 257, 261, 263, 266], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 51, 220, 254, 257, 259, 266], "gpu": [1, 7, 8, 30, 51, 54, 56, 57, 58, 176, 257, 259, 266], "nativ": [1, 7, 9, 51, 54, 56, 57, 58, 73], "driver": [1, 7], "practic": [1, 4, 5, 8, 125, 140, 141, 163, 252, 257, 258, 259, 263, 266], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 34, 44, 86, 107, 114, 120, 123, 126, 129, 139, 147, 151, 154, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 254, 257, 258, 259, 262, 265, 266], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 30, 32, 33, 34, 35, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 143, 148, 151, 152, 153, 154, 157, 176, 184, 189, 190, 191, 192, 193, 246, 257, 258, 259, 266], "build": [1, 3, 7, 23, 26, 30, 51, 54, 56, 57, 58, 107, 114, 129, 151, 154, 224, 229, 234, 236, 237, 239, 241, 242, 244, 255, 259, 262, 263, 265, 266], "central": [2, 257, 258], "part": [2, 4, 8, 30, 51, 54, 56, 57, 58, 86, 95, 157, 176, 215, 249, 257, 259, 262, 266], "algorithm": [2, 8, 9, 13, 14, 55, 82, 164, 177, 178, 179, 180, 215, 230, 231, 238, 254, 255, 257, 258, 259, 263, 265], "implement": [2, 3, 9, 11, 16, 30, 49, 51, 54, 56, 57, 58, 91, 102, 107, 125, 139, 140, 141, 164, 174, 177, 180, 230, 238, 240, 243, 255, 257, 258, 259, 262, 265], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 26, 30, 35, 39, 48, 51, 52, 54, 56, 57, 58, 89, 91, 99, 107, 114, 126, 252, 254, 255, 257, 258, 259, 261, 262, 263, 265, 266], "give": [2, 7, 34, 55, 252, 254, 257, 258, 262, 263, 265], "abil": [2, 262], "veri": [2, 3, 258, 262, 265, 266], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 48, 51, 54, 55, 56, 57, 58, 68, 90, 110, 112, 114, 120, 125, 129, 135, 137, 140, 141, 143, 147, 148, 149, 150, 151, 152, 153, 154, 164, 165, 166, 167, 175, 177, 182, 215, 221, 224, 227, 257, 258, 259, 263, 265, 266], "latenc": 2, "especi": [2, 3, 7, 8, 74], "larger": [2, 4, 174], "volum": 2, "lazymemmapstorag": [2, 251, 257, 258, 263], "advis": [2, 266], "due": [2, 3, 5, 263, 266], "serialis": 2, "memmaptensor": [2, 263], "well": [2, 3, 8, 17, 21, 30, 32, 33, 34, 35, 49, 51, 54, 56, 57, 58, 137, 138, 176, 193, 257, 258, 263, 265, 266], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 51, 54, 56, 57, 58, 95, 97, 104, 114, 153, 154, 176, 257, 259], "file": [2, 6, 7, 8, 206, 255, 257, 258, 264, 265], "locat": [2, 7, 54, 86, 94, 125, 132, 140, 141, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 257, 258, 259], "improv": [2, 4, 82, 164, 254], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 32, 33, 34, 35, 251], "were": [2, 7, 57, 58, 259], "found": [2, 6, 7, 10, 21, 26, 30, 51, 54, 56, 57, 58, 107, 151, 154, 175, 177, 257, 258, 265], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 32, 40, 44, 56, 73, 89, 116, 117, 118, 119, 122, 123, 124, 129, 131, 133, 134, 137, 138, 150, 164, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 189, 194, 201, 230, 233, 238, 240, 243, 257, 263, 265], "com": [2, 5, 6, 7, 10, 18, 19, 20, 263, 265], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 21, 30, 32, 33, 34, 35, 36, 51, 54, 55, 56, 57, 58, 76, 89, 91, 99, 102, 103, 106, 107, 115, 127, 131, 147, 149, 151, 153, 154, 159, 164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 184, 230, 233, 235, 238, 240, 243, 247, 257, 258, 259, 262, 266], "1x": 2, "lazytensorstorag": [2, 34, 35, 251, 259], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 51, 54, 56, 57, 58, 68, 76, 77, 86, 89, 91, 99, 101, 103, 106, 114, 115, 116, 117, 122, 124, 126, 127, 129, 132, 143, 144, 145, 146, 148, 151, 153, 156, 157, 160, 171, 176, 189, 190, 191, 192, 197, 198, 199, 200, 202, 203, 204, 205, 207, 223, 235, 255, 257, 258, 259, 262, 263, 264, 265, 266], "44x": 2, "too": [2, 7, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 125, 140, 141, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 189, 190, 191, 192, 258, 259, 262, 266], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 28, 29, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 68, 90, 115, 143, 147, 148, 152, 153, 154, 157, 215, 257, 259, 266], "pai": [2, 8, 257], "attent": [2, 8, 257], "alwai": [2, 20, 30, 51, 54, 56, 57, 58, 85, 169, 254, 258, 259, 262], "lead": [2, 3, 4, 8, 10, 11, 26, 30, 32, 33, 34, 35, 39, 48, 99, 125, 140, 141, 257, 262, 265], "dimens": [2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 73, 74, 81, 86, 90, 97, 101, 104, 107, 115, 127, 130, 131, 139, 140, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 249, 257, 258, 259, 262], "other": [2, 3, 4, 7, 8, 21, 22, 30, 32, 33, 34, 35, 39, 41, 42, 43, 48, 49, 51, 54, 55, 56, 57, 58, 77, 96, 107, 131, 132, 154, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 221, 230, 238, 240, 243, 247, 248, 255, 257, 258, 259, 262, 263, 265, 266], "word": [2, 39, 257, 262, 266], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 30, 32, 33, 34, 35, 51, 52, 54, 56, 57, 58, 89, 95, 102, 103, 107, 113, 115, 116, 117, 118, 119, 124, 127, 128, 154, 167, 169, 178, 207, 221, 228, 231, 232, 245, 247, 248, 257, 258, 259, 262, 263, 265, 266], "1m": [2, 227, 257, 259], "multidimension": [2, 34, 44], "doe": [2, 3, 18, 32, 34, 39, 44, 49, 130, 155, 156, 164, 165, 169, 175, 177, 188, 224, 255, 257, 258, 259, 262, 266], "desir": [2, 3, 30, 51, 54, 56, 57, 58, 76, 86, 89, 90, 99, 103, 106, 112, 115, 127, 143, 148, 151, 152, 153, 154, 176, 257, 262], "diversifi": 2, "make": [2, 4, 7, 30, 39, 40, 49, 51, 54, 56, 57, 58, 64, 67, 86, 89, 90, 109, 130, 154, 176, 177, 189, 190, 191, 192, 221, 232, 249, 254, 257, 258, 259, 261, 262, 263, 265, 266], "more": [2, 3, 4, 6, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 30, 32, 33, 34, 35, 39, 40, 51, 54, 56, 57, 58, 108, 122, 127, 130, 132, 143, 147, 148, 149, 152, 153, 157, 164, 169, 177, 189, 194, 201, 219, 233, 252, 254, 255, 257, 258, 259, 261, 262, 263, 266], "To": [2, 3, 4, 6, 7, 8, 18, 19, 20, 30, 32, 33, 34, 35, 39, 40, 51, 54, 56, 57, 58, 107, 144, 145, 146, 150, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 254, 257, 258, 259, 262, 263, 265, 266], "do": [2, 3, 4, 7, 54, 85, 90, 107, 113, 130, 145, 255, 257, 258, 259, 261, 262, 265, 266], "custom": [2, 3, 5, 30, 51, 54, 56, 57, 58, 169, 183, 249, 257, 258, 259], "name": [2, 6, 7, 11, 30, 39, 40, 51, 54, 56, 57, 58, 61, 77, 79, 91, 95, 96, 103, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 230, 233, 235, 238, 240, 243, 255, 257, 258, 259, 262, 266], "randomcroptensordict": [2, 257], "here": [2, 3, 4, 7, 8, 9, 10, 254, 257, 258, 259, 262, 265, 266], "how": [2, 3, 18, 19, 20, 30, 32, 34, 44, 51, 54, 56, 57, 58, 164, 165, 173, 175, 177, 224, 252, 257, 258, 259, 261, 262, 263, 265, 266], "wrapper": [2, 3, 11, 15, 17, 34, 35, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 132, 147, 149, 150, 154, 158, 189, 212, 213, 214, 249, 259, 263, 266], "around": [2, 5, 7, 15, 17, 34, 35, 55, 154, 189, 257, 258, 266], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 109, 174, 255, 263, 265], "present": [2, 3, 30, 32, 39, 44, 48, 51, 54, 56, 57, 58, 79, 95, 96, 113, 116, 117, 118, 119, 124, 131, 150, 153, 154, 155, 156, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 189, 190, 191, 192, 193, 249, 255, 257, 261, 265], "replaybuff": [2, 34, 35, 50, 90, 241, 245, 251, 259, 263, 265], "sampler": [2, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 90, 251, 257, 259], "By": [2, 3, 31, 54, 154, 220, 249, 257, 263, 266], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 54, 56, 57, 58, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 86, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 104, 107, 122, 132, 143, 144, 145, 146, 148, 151, 152, 153, 154, 156, 157, 158, 220, 251, 254, 257, 258, 259, 263], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 50, 51, 52, 54, 55, 56, 57, 58, 60, 67, 68, 69, 70, 73, 74, 76, 77, 81, 84, 86, 89, 90, 91, 94, 99, 100, 101, 102, 103, 104, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 135, 136, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 161, 162, 166, 167, 171, 172, 176, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 230, 233, 235, 238, 240, 243, 255, 257, 258, 259, 261, 262, 263, 265, 266], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 30, 31, 51, 54, 56, 57, 58, 91, 99, 113, 127, 183, 185, 255, 257, 259, 262, 266], "promptli": 2, "virtual": 2, "instal": [2, 5, 10, 18, 19, 20, 39, 40, 224, 252, 259, 266], "respons": [2, 3, 8, 224, 266], "d4rl": [2, 39], "clone": [2, 4, 8, 144, 145, 146, 153, 174, 230, 238, 240, 243, 251, 257, 262, 265], "repositori": [2, 7, 40], "latest": [2, 10, 56, 221, 259, 262, 265], "wheel": [2, 259], "publish": 2, "pypi": [2, 265], "openml": [2, 40, 68], "scikit": [2, 40], "panda": [2, 40], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 127, 153, 155, 156, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 255, 257, 258, 259, 262, 266], "parent": [2, 3, 21, 36, 51, 74, 81, 82, 86, 89, 99, 102, 104, 144, 176, 177, 193, 257, 262, 265, 266], "subclass": [2, 3, 51, 54, 56, 57, 58, 102, 109, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 148, 149, 150, 152, 153, 154, 155, 161, 177, 258, 262], "basic": [2, 55, 259, 266], "properti": [2, 3, 51, 54, 55, 56, 57, 58, 103, 120, 125, 130, 135, 139, 140, 141, 176, 262], "observ": [2, 3, 8, 13, 14, 16, 21, 30, 36, 39, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 81, 83, 84, 86, 87, 91, 92, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 113, 116, 117, 118, 119, 122, 126, 133, 134, 136, 137, 143, 144, 145, 146, 148, 149, 150, 151, 152, 157, 158, 167, 171, 189, 190, 191, 192, 193, 207, 230, 233, 235, 238, 240, 243, 245, 255, 258, 259, 261, 262, 265, 266], "action": [2, 3, 8, 9, 13, 14, 15, 16, 21, 27, 31, 36, 51, 54, 55, 56, 57, 58, 60, 67, 69, 70, 77, 78, 82, 85, 91, 96, 103, 113, 114, 116, 117, 118, 119, 121, 122, 123, 127, 128, 129, 136, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 167, 168, 176, 182, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 230, 233, 235, 238, 240, 243, 245, 249, 254, 255, 257, 258, 259, 261, 263, 265, 266], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 51, 54, 56, 57, 58, 68, 70, 74, 86, 91, 99, 101, 107, 108, 109, 113, 120, 121, 127, 130, 132, 135, 139, 143, 144, 145, 146, 148, 151, 153, 156, 157, 185, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 215, 221, 224, 245, 257, 258, 259, 261, 263, 265, 266], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 44, 51, 54, 55, 56, 57, 58, 60, 67, 68, 69, 70, 76, 77, 78, 86, 89, 91, 99, 101, 103, 106, 109, 113, 114, 122, 129, 130, 131, 136, 143, 144, 145, 146, 148, 150, 151, 152, 153, 156, 157, 176, 189, 190, 191, 192, 230, 233, 235, 238, 240, 243, 259, 261, 262, 263, 265, 266], "import": [2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 21, 22, 32, 33, 34, 35, 39, 44, 52, 54, 55, 84, 86, 89, 91, 99, 106, 107, 113, 114, 122, 127, 129, 132, 136, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 165, 189, 190, 191, 192, 217, 220, 230, 233, 235, 238, 240, 243, 245, 254, 258, 259, 261, 262, 263, 265, 266], "match": [2, 3, 6, 8, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 51, 52, 54, 56, 57, 58, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 86, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 107, 115, 120, 127, 139, 143, 148, 151, 152, 153, 154, 157, 168, 175, 178, 180, 221, 226, 257, 259, 261, 262, 265, 266], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 51, 54, 55, 56, 57, 58, 68, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 86, 88, 89, 90, 91, 95, 96, 98, 99, 100, 102, 104, 105, 106, 107, 109, 113, 115, 116, 117, 118, 119, 126, 127, 130, 131, 137, 138, 143, 148, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 218, 222, 227, 245, 254, 255, 257, 258, 259, 262, 265, 266], "output": [2, 3, 4, 13, 14, 16, 17, 30, 32, 33, 34, 35, 39, 40, 51, 54, 55, 56, 57, 58, 68, 73, 86, 89, 91, 100, 102, 106, 109, 115, 116, 117, 121, 122, 123, 126, 127, 132, 136, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 189, 193, 207, 215, 254, 257, 258, 259, 261, 262, 263, 265, 266], "send": [2, 3, 8, 265], "receiv": [2, 3, 30, 51, 54, 56, 57, 58, 102, 127, 254, 257, 259, 261, 262], "spawn": [2, 3, 4, 18, 22, 56], "check": [2, 3, 4, 5, 6, 7, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 51, 52, 54, 55, 56, 57, 58, 74, 80, 90, 109, 143, 148, 151, 152, 153, 154, 159, 254, 258, 259, 261, 262, 263, 266], "check_env_spec": [2, 3, 251, 259, 262], "method": [2, 3, 4, 13, 14, 15, 16, 17, 21, 30, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 49, 51, 54, 56, 57, 58, 73, 76, 81, 86, 89, 91, 92, 99, 102, 103, 106, 114, 126, 143, 144, 145, 146, 148, 151, 152, 153, 154, 155, 157, 159, 164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 193, 206, 246, 254, 255, 256, 258, 259, 262, 266], "saniti": [2, 3, 7, 109, 259], "offer": [3, 7, 258, 262, 266], "handl": [3, 21, 30, 51, 54, 56, 57, 58, 107, 127, 224, 247, 248, 257, 258, 259], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 51, 54, 56, 57, 58, 73, 77, 86, 91, 103, 104, 122, 127, 129, 136, 174, 176, 177, 185, 189, 190, 191, 195, 196, 220, 224, 226, 247, 248, 254, 255, 257, 258, 259, 261, 262, 263, 266], "dm": [3, 257, 266], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 33, 34, 35, 47, 50, 55, 56, 99, 105, 144, 170, 224, 230, 238, 240, 243, 254, 255, 257, 258, 262, 266], "goal": [3, 4, 257, 258, 259, 262], "abl": [3, 257, 259, 261, 262, 265], "experi": [3, 32, 33, 34, 35, 39, 40, 44, 109, 209, 210, 211, 212, 213, 214, 252, 258, 259], "even": [3, 4, 8, 14, 18, 20, 21, 41, 42, 43, 49, 52, 257, 259, 262, 266], "simul": [3, 5, 7, 8, 71, 114, 129, 257, 259], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 51, 54, 56, 57, 58, 89, 109, 116, 154, 155, 156, 215, 227, 255, 257, 258, 259, 262, 265, 266], "box": [3, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38], "under": [3, 4, 21, 30, 39, 51, 54, 56, 57, 58, 143, 148, 151, 152, 153, 154, 189, 190, 191, 192, 193, 254, 257, 258, 262, 266], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 21, 22, 52, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 84, 86, 91, 99, 107, 230, 233, 235, 238, 240, 243, 245, 257, 258, 259, 261, 263, 265, 266], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 21, 30, 51, 54, 55, 56, 57, 58, 76, 77, 89, 99, 103, 106, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 129, 132, 136, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 167, 169, 176, 189, 190, 191, 192, 240, 243, 245, 254, 257, 258, 259, 261, 262, 263, 265], "typic": [3, 4, 8, 30, 51, 54, 56, 57, 58, 176, 180, 254, 255, 259, 262], "organis": [3, 258, 262], "arbitrari": [3, 31, 57, 58, 257, 258, 262], "nest": [3, 26, 30, 51, 54, 56, 57, 58, 189, 190, 191, 192, 193, 255, 258, 259, 262, 265], "structur": [3, 7, 32, 33, 34, 35, 150, 189, 190, 191, 192, 193, 254, 257, 259, 262, 263], "attribut": [3, 4, 30, 51, 54, 56, 57, 58, 89, 98, 154, 176, 257, 262], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 32, 33, 34, 35, 39, 40, 45, 51, 53, 55, 60, 67, 68, 69, 70, 73, 91, 99, 113, 114, 122, 129, 136, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 215, 221, 230, 233, 235, 238, 240, 243, 257, 258, 259, 261, 262, 263, 265, 266], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 90, 144, 145, 146, 158, 258, 259], "expect": [3, 4, 7, 26, 30, 36, 48, 51, 54, 55, 56, 57, 58, 68, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 86, 89, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 104, 109, 143, 148, 150, 151, 152, 153, 156, 157, 164, 165, 175, 177, 179, 228, 252, 254, 255, 257, 259, 262, 266], "live": [3, 12, 13, 14, 16, 17, 19, 20, 30, 32, 33, 34, 35, 39, 40, 51, 54, 55, 56, 57, 58, 176], "actual": [3, 4, 7, 17, 51, 54, 56, 57, 58, 227, 254, 257, 259, 262], "just": [3, 4, 215, 255, 257, 258, 259, 262, 265, 266], "retriev": [3, 32, 33, 34, 35, 39, 40, 51, 54, 56, 57, 58, 74, 86, 113, 114, 129, 151, 154, 164, 165, 175, 177, 189, 190, 191, 192, 230, 233, 235, 238, 240, 243, 249, 255, 258, 259, 262, 266], "care": [3, 8, 51, 54, 56, 57, 58, 102, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161, 257, 259, 262], "see": [3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 30, 40, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 108, 115, 125, 127, 130, 140, 141, 144, 146, 153, 154, 176, 221, 257, 258, 259, 262, 266], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 115, 125, 127, 140, 141, 153, 176, 221, 257, 258, 259, 262], "parametr": [3, 131, 154, 174, 180, 257, 259], "hardwar": 3, "input_spec": [3, 51, 55, 76, 77, 78, 86, 91, 96, 98, 102, 103, 104, 114, 129, 257, 259, 262, 266], "compositespec": [3, 51, 53, 54, 55, 56, 57, 58, 77, 91, 98, 99, 102, 114, 129, 143, 147, 149, 151, 156, 251, 257, 259, 262, 266], "output_spec": [3, 91, 102, 103, 262], "reward": [3, 13, 14, 16, 30, 36, 51, 54, 55, 56, 57, 58, 60, 67, 68, 69, 70, 72, 76, 78, 91, 93, 94, 95, 96, 102, 103, 104, 105, 106, 107, 113, 114, 129, 158, 166, 167, 171, 176, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 217, 218, 220, 222, 249, 254, 255, 257, 258, 259, 261, 262, 263, 265, 266], "observation_spec": [3, 51, 55, 73, 74, 75, 76, 78, 79, 81, 83, 84, 86, 89, 92, 95, 96, 98, 99, 100, 101, 102, 103, 104, 114, 129, 228, 245, 257, 259, 261, 262, 266], "pair": [3, 30, 39, 51, 54, 56, 57, 58, 99, 144, 151, 154, 176, 254, 257, 258, 259, 261, 262, 266], "pointer": [3, 6, 52, 176, 257], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 51, 54, 55, 56, 57, 58, 60, 67, 103, 122, 136, 138, 143, 148, 151, 152, 245, 258, 259, 261, 262, 263, 265, 266], "reward_spec": [3, 51, 55, 72, 76, 78, 93, 94, 95, 102, 103, 104, 114, 129, 259, 262, 266], "done_spec": [3, 102, 103, 262, 266], "flag": [3, 8, 32, 33, 34, 35, 39, 40, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 262, 263], "importantli": [3, 151, 154], "4": [3, 7, 13, 14, 16, 24, 27, 31, 32, 33, 55, 61, 62, 63, 66, 107, 114, 115, 116, 117, 122, 123, 124, 126, 127, 129, 132, 136, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 160, 206, 257, 258, 259, 262, 263, 265, 266], "action_s": 3, "help": [3, 4, 30, 51, 54, 56, 57, 58, 252, 254, 257, 258, 259], "prealloc": [3, 262], "consist": [3, 30, 32, 33, 34, 35, 51, 54, 56, 57, 58, 115, 127, 257, 258, 259, 262, 263, 266], "With": [3, 255, 257, 258, 266], "necessarili": 3, "If": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 51, 52, 54, 55, 56, 57, 58, 74, 75, 77, 79, 81, 85, 86, 89, 90, 95, 96, 99, 102, 103, 106, 107, 113, 115, 126, 127, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 174, 176, 177, 178, 179, 180, 182, 188, 189, 190, 191, 192, 193, 202, 203, 204, 205, 219, 221, 224, 226, 228, 230, 238, 240, 243, 245, 249, 252, 257, 258, 259, 261, 262, 265, 266], "instanti": [3, 21, 57, 58, 102, 257, 258, 262, 266], "0": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 39, 44, 51, 54, 55, 56, 57, 58, 60, 67, 72, 74, 76, 77, 85, 86, 89, 99, 101, 103, 106, 107, 109, 114, 115, 116, 117, 119, 123, 125, 127, 129, 130, 131, 132, 137, 138, 139, 140, 141, 143, 147, 149, 150, 153, 156, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 192, 195, 196, 215, 222, 245, 249, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266], "stateless": [3, 102, 257, 262, 266], "set_se": [3, 13, 14, 16, 17, 21, 51, 54, 55, 56, 57, 58, 60, 67, 86, 91, 103, 262, 265, 266], "seed": [3, 13, 14, 16, 17, 21, 51, 54, 55, 56, 57, 58, 61, 69, 70, 103, 109, 224], "next": [3, 4, 8, 13, 14, 16, 26, 30, 32, 33, 34, 35, 39, 40, 51, 52, 54, 55, 56, 57, 58, 60, 67, 69, 70, 84, 91, 107, 113, 114, 129, 138, 158, 167, 169, 178, 188, 189, 190, 191, 192, 193, 218, 220, 222, 257, 258, 261, 262, 263, 265, 266], "determinist": [3, 30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 123, 133, 138, 143, 149, 153, 154, 176, 257, 258, 262, 266], "preced": [3, 126], "without": [3, 7, 9, 30, 51, 54, 56, 57, 58, 145, 146, 178, 188, 189, 190, 191, 192, 193, 245, 252, 257, 258, 259, 262, 266], "risk": [3, 90], "overlap": [3, 34], "consecut": [3, 48, 150, 266], "still": [3, 9, 98, 147, 175, 257, 258, 261, 262, 266], "reproduc": [3, 109, 257, 259], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 25, 30, 41, 42, 43, 51, 54, 56, 57, 58, 77, 93, 98, 100, 139, 140, 141, 151, 174, 180, 221, 257, 258, 259, 262, 265, 266], "max_step": [3, 13, 51, 54, 55, 56, 57, 58, 69, 70, 98, 265, 266], "n": [3, 6, 7, 24, 27, 30, 31, 51, 54, 56, 57, 58, 73, 77, 81, 104, 129, 154, 164, 188, 221, 255, 258, 266], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 55, 129, 144, 145, 146, 147, 149, 150, 151, 153, 155, 156, 158, 159, 160, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 188, 189, 190, 191, 192, 220, 245, 257, 259, 261, 262, 263], "ani": [3, 5, 8, 26, 30, 32, 33, 34, 35, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 54, 56, 57, 58, 81, 89, 90, 103, 107, 109, 115, 127, 131, 153, 154, 155, 156, 177, 212, 224, 252, 257, 258, 259, 262, 265, 266], "compat": [3, 7, 11, 18, 19, 30, 49, 51, 54, 56, 57, 58, 65, 68, 73, 107, 159, 185, 257, 265], "figur": [3, 257, 259, 262, 266], "summar": [3, 262], "brief": [3, 259, 266], "popul": [3, 33, 84, 99, 257, 259, 262], "entri": [3, 13, 14, 16, 18, 19, 20, 21, 23, 30, 39, 40, 51, 54, 56, 57, 58, 75, 81, 84, 86, 89, 91, 98, 106, 107, 113, 180, 189, 190, 191, 192, 257, 259, 262, 263], "deliveri": 3, "step_mdp": [3, 251, 262, 265, 266], "nasium": 3, "recent": [3, 7, 11, 257, 265, 266], "shift": [3, 30, 161, 259], "termin": [3, 30, 39, 155, 257, 258, 259, 262, 265], "trust": 3, "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 98, 141, 257, 259, 266], "refer": [3, 7, 8, 21, 30, 51, 54, 56, 57, 58, 103, 107, 114, 122, 123, 129, 133, 134, 137, 138, 164, 169, 170, 171, 172, 177, 189, 194, 201, 233, 257, 259, 265], "stepcount": [3, 13, 257, 258, 259, 265], "chosen": [3, 99, 230, 238, 240, 243], "someth": [3, 30, 51, 54, 56, 57, 58, 252, 258, 259, 262, 266], "els": [3, 255, 257, 258, 259, 262, 263], "100": [3, 30, 34, 51, 54, 56, 57, 58, 86, 216, 245, 258, 259, 261, 262, 263, 264, 265, 266], "truncated_kei": [3, 98], "assess": [3, 257], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 251], "slice": [3, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 39], "adjac": [3, 23, 81], "reli": [3, 164, 254, 257, 259, 262, 266], "traj_id": [3, 13, 14, 16, 23, 265], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 30, 51, 54, 56, 57, 58, 99, 103, 113, 155, 156, 252, 257], "context": [3, 5, 8, 30, 51, 52, 54, 56, 57, 58, 68, 99, 104, 130, 186, 187, 189, 190, 191, 192, 194, 201, 220, 254, 257, 258, 259, 262, 263], "mark": 3, "through": [3, 4, 5, 8, 16, 18, 20, 21, 57, 58, 90, 127, 154, 155, 156, 161, 189, 190, 191, 192, 257, 258, 259, 261, 262, 263, 266], "inittrack": 3, "our": [3, 7, 8, 18, 257, 258, 259, 261, 263, 265], "tutori": [3, 257, 258, 260, 261, 262, 263, 264, 265, 266], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 30, 51, 52, 54, 56, 57, 58, 115, 127, 254, 255, 257, 258, 259, 262], "design": [3, 13, 14, 30, 31, 51, 54, 56, 57, 58, 90, 103, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 257, 258, 259, 261, 262, 266], "scratch": [3, 8, 258, 262], "better": [3, 8, 254, 259, 262], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 31, 51, 54, 56, 57, 58, 73, 81, 99, 104, 107, 115, 123, 124, 127, 130, 131, 154, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 249, 257, 258, 259, 262, 266], "intens": [3, 8], "gym3": 3, "envpool": [3, 56], "interfac": [3, 68, 127, 130, 257, 259, 262], "simultan": [3, 20, 57, 58, 262], "often": [3, 8, 173, 224, 257, 258, 262, 266], "competit": 3, "advantag": [3, 8, 124, 164, 165, 175, 177, 179, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 202, 204, 254, 255, 257, 258, 259, 262, 265, 266], "scale": [3, 4, 39, 86, 94, 123, 125, 132, 137, 138, 140, 141, 144, 145, 146, 151, 154, 156, 222, 228, 230, 238, 240, 243, 249, 257, 258, 259, 265], "varieti": 3, "its": [3, 4, 5, 7, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 34, 36, 37, 38, 51, 54, 55, 56, 57, 58, 73, 102, 103, 107, 115, 147, 148, 149, 151, 154, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 224, 245, 255, 257, 258, 259, 262, 263, 266], "own": [3, 13, 14, 17, 22, 30, 51, 54, 56, 57, 58, 258, 259, 262], "As": [3, 4, 51, 54, 56, 57, 58, 154, 257, 258, 259, 262, 263, 265, 266], "inherit": [3, 128, 176, 255, 259], "serialenv": [3, 99, 251, 266], "enjoi": 3, "exact": 3, "Of": [3, 7, 252, 262, 266], "cours": [3, 4, 252, 259, 262, 266], "correspond": [3, 4, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 44, 51, 54, 55, 56, 57, 58, 89, 99, 103, 106, 107, 150, 151, 154, 189, 190, 191, 192, 193, 257, 258, 259, 262, 263], "count": [3, 52, 98, 150, 220, 224, 227, 257, 258, 259, 266], "def": [3, 11, 22, 30, 51, 52, 54, 55, 56, 57, 58, 114, 122, 129, 157, 160, 255, 257, 258, 261, 262, 265, 266], "make_env": [3, 70, 107, 231, 232, 257, 258, 266], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 52, 65, 76, 84, 86, 91, 99, 103, 107, 230, 233, 235, 238, 240, 243, 245, 251, 257, 258, 259, 263, 265, 266], "v1": [3, 13, 14, 16, 21, 22, 39, 52, 56, 84, 86, 91, 99, 185, 197, 198, 199, 200, 202, 203, 204, 205, 258, 262, 265, 266], "from_pixel": [3, 61, 62, 230, 238, 240, 243, 257, 258, 263, 265, 266], "9": [3, 7, 30, 32, 33, 34, 107, 164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 183, 254, 257, 258, 259, 262, 263], "81": [3, 258, 259, 262, 263], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 41, 42, 43, 49, 51, 52, 54, 56, 57, 58, 82, 86, 99, 103, 104, 107, 115, 122, 127, 136, 143, 148, 151, 152, 153, 154, 157, 164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 233, 235, 238, 240, 243, 257, 258, 259, 261, 262, 265], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 30, 31, 32, 33, 34, 35, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 74, 77, 78, 84, 86, 91, 99, 101, 107, 113, 115, 122, 127, 132, 136, 143, 144, 145, 146, 148, 149, 150, 152, 153, 156, 157, 160, 176, 230, 233, 235, 238, 240, 243, 245, 255, 258, 259, 261, 262, 263, 265, 266], "simpli": [3, 6, 79, 96, 254, 257, 259, 266], "b": [3, 7, 8, 23, 26, 34, 35, 130, 131, 189, 190, 191, 192, 193, 207, 258, 263], "c": [3, 6, 7, 26, 34, 35, 40, 86, 230, 233, 235, 238, 240, 243, 258], "d": [3, 32, 40, 44, 154, 265], "get": [3, 4, 6, 7, 8, 32, 39, 49, 52, 57, 58, 74, 77, 78, 86, 90, 101, 107, 143, 149, 151, 154, 189, 190, 191, 192, 193, 211, 257, 258, 259, 262, 265, 266], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 258, 262], "reset_work": 3, "fals": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 74, 76, 81, 84, 85, 86, 89, 90, 91, 94, 99, 101, 103, 104, 106, 107, 109, 113, 114, 115, 116, 122, 127, 129, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 182, 185, 189, 190, 191, 192, 197, 198, 199, 200, 202, 203, 204, 205, 217, 218, 220, 221, 222, 224, 230, 233, 235, 238, 240, 243, 249, 255, 257, 258, 259, 261, 262, 263, 265, 266], "field": [3, 13, 14, 16, 17, 26, 30, 34, 35, 51, 54, 55, 56, 57, 58, 60, 67, 68, 69, 70, 91, 99, 103, 113, 114, 122, 129, 136, 143, 144, 145, 146, 148, 150, 151, 152, 153, 156, 157, 228, 230, 233, 235, 238, 240, 243, 252, 258, 259, 261, 262, 263, 265, 266], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 67, 68, 69, 70, 74, 77, 81, 84, 85, 86, 89, 91, 94, 99, 101, 103, 104, 106, 107, 109, 113, 114, 115, 116, 117, 125, 127, 129, 130, 131, 140, 141, 143, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 182, 185, 189, 190, 191, 192, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 217, 218, 220, 221, 222, 224, 230, 233, 235, 238, 240, 243, 249, 258, 259, 261, 262, 263, 265, 266], "pixel": [3, 7, 26, 73, 75, 81, 83, 86, 89, 92, 101, 106, 116, 133, 134, 207, 230, 235, 238, 240, 243, 257, 258, 263, 265, 266], "500": [3, 257, 258, 262, 265, 266], "uint8": [3, 38, 101, 258, 263, 265, 266], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 51, 52, 54, 55, 56, 57, 58, 69, 70, 72, 73, 74, 75, 76, 78, 81, 83, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 126, 127, 128, 129, 130, 131, 135, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 164, 165, 166, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 188, 189, 190, 191, 192, 193, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 218, 219, 220, 221, 222, 223, 224, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 247, 248, 249, 255, 257, 258, 259, 262, 265, 266], "is_shar": [3, 13, 14, 16, 26, 34, 35, 55, 60, 67, 68, 69, 70, 91, 99, 107, 113, 114, 122, 129, 136, 143, 144, 145, 146, 148, 150, 151, 152, 153, 156, 157, 230, 233, 235, 238, 240, 243, 259, 261, 262, 263, 265, 266], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 30, 32, 33, 34, 35, 51, 54, 56, 57, 58, 107, 150, 151, 154, 254, 257, 258, 261, 266], "launch": [3, 18, 19, 20, 22], "quit": [3, 257, 258, 259, 266], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 30, 32, 33, 34, 35, 51, 52, 54, 56, 57, 58, 68, 74, 90, 99, 100, 107, 113, 123, 126, 150, 168, 171, 178, 182, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 224, 254, 258, 259, 261, 262, 263, 265, 266], "mani": [3, 4, 33, 164, 165, 168, 175, 177, 178, 182, 257, 258, 259, 262, 266], "start": [3, 4, 5, 13, 21, 52, 113, 219, 257, 258, 262, 266], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 30, 51, 54, 56, 57, 58, 99, 107, 155, 156, 176, 259, 262, 266], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 30, 51, 54, 56, 57, 58, 103, 147, 149, 150, 222, 255, 258, 259, 262, 266], "great": [3, 7, 8, 265], "speedup": [3, 8, 266], "precis": [3, 101, 113, 257, 259], "anoth": [3, 8, 51, 54, 56, 57, 58, 102, 127, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 254, 257, 259, 261, 262, 266], "misspecifi": 3, "caus": [3, 7, 8, 90], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 44, 48, 51, 52, 54, 56, 57, 58, 89, 100, 106, 107, 113, 153, 160, 181, 189, 190, 191, 192, 193, 224, 226, 249, 252, 257, 258, 259, 261, 262, 263, 265, 266], "rais": [3, 13, 14, 16, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 51, 54, 56, 57, 58, 80, 103, 109, 160, 257, 259, 265], "assert": [3, 6, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 54, 91, 107, 109, 132, 189, 190, 191, 192, 215, 223, 261, 266], "mismatch": [3, 258], "mostli": [3, 17, 254, 266], "purpos": [3, 7, 245, 257, 259, 263, 266], "want": [3, 6, 7, 8, 86, 164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 257, 258, 259, 262, 263, 265, 266], "subprocess": [3, 52], "addit": [3, 4, 30, 39, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 147, 153, 163, 176, 189, 254, 257, 258], "multithread": [3, 32, 33, 34, 35, 39, 40, 56], "multithreadedenv": [3, 251], "underneath": 3, "higher": [3, 4, 257, 258, 259, 266], "restrict": [3, 258, 263, 266], "flexibl": [3, 9, 56, 183, 255, 266], "cover": [3, 252, 259, 262, 265], "popular": 3, "atari": [3, 4, 73, 266], "classic": [3, 55, 258], "benchmark_batched_env": 3, "py": [3, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 30, 32, 34, 44, 51, 54, 56, 57, 58, 99, 103, 109, 127, 143, 148, 151, 152, 153, 154, 156, 157, 163, 215, 226, 247, 248, 249, 255, 257, 258, 259, 262, 266], "raw": [3, 4, 125, 140, 141, 258, 262], "treat": 3, "logic": 3, "torchvis": [3, 89, 106, 265, 266], "transformedenv": [3, 13, 52, 76, 81, 84, 85, 86, 91, 99, 102, 107, 230, 233, 235, 238, 240, 243, 257, 258, 259, 261, 262, 263, 265, 266], "primit": [3, 4], "built": [3, 5, 7, 164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 183, 241, 245, 246, 249, 257, 258, 259, 266], "base_env": [3, 77, 78, 99, 257, 258, 259, 263, 265, 266], "totensorimag": [3, 235, 258, 265, 266], "in_kei": [3, 13, 14, 16, 21, 55, 72, 73, 74, 75, 77, 78, 81, 83, 86, 87, 89, 91, 92, 93, 94, 95, 100, 101, 102, 106, 107, 114, 129, 143, 144, 145, 146, 148, 151, 152, 153, 154, 156, 157, 159, 160, 166, 167, 189, 190, 191, 192, 206, 207, 240, 243, 245, 257, 258, 259, 261, 262, 263, 265, 266], "resiz": [3, 258, 266], "64": [3, 116, 117, 124, 257, 258, 259, 261, 262, 263, 265, 266], "now": [3, 7, 32, 257, 258, 259, 261, 263, 266], "appar": [3, 217], "bring": [3, 259, 266], "signific": [3, 5, 8, 259, 266], "kind": [3, 36, 113], "consult": 3, "interest": [3, 151, 154, 258, 259, 262, 266], "abov": [3, 7, 30, 51, 54, 56, 57, 58, 125, 140, 141, 163, 254, 255, 257, 259, 262, 266], "resize_par": 3, "out_kei": [3, 13, 14, 16, 21, 55, 72, 73, 74, 75, 81, 83, 86, 87, 89, 91, 92, 93, 95, 100, 101, 102, 106, 114, 122, 129, 136, 143, 144, 145, 146, 148, 151, 152, 153, 154, 156, 157, 159, 160, 189, 190, 191, 192, 220, 245, 257, 258, 259, 261, 262, 263, 265, 266], "easi": [3, 5, 40, 254, 257, 258, 259, 263, 266], "root": [3, 26, 113, 125, 140, 141, 262, 266], "graph": [3, 4, 8, 186, 187, 257, 262], "inv": [3, 77, 262], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 54, 56, 57, 58, 73, 74, 76, 77, 79, 80, 81, 82, 84, 88, 90, 91, 95, 96, 98, 99, 100, 102, 103, 105, 107, 140, 189, 219, 255, 257, 258, 259, 262, 265, 266], "revers": 3, "order": [3, 16, 30, 31, 32, 33, 34, 35, 39, 40, 48, 51, 54, 56, 57, 58, 103, 143, 148, 152, 153, 155, 156, 157, 258], "chain": [3, 32, 33, 34, 35, 39, 40, 76, 77, 115, 156, 266], "taken": [3, 51, 54, 56, 57, 58, 254, 257, 259, 262], "includ": [3, 4, 7, 9, 21, 30, 41, 42, 43, 49, 51, 54, 55, 56, 57, 58, 103, 107, 176, 227, 255, 257, 258, 259, 262, 266], "invers": [3, 4, 86, 162, 174, 262], "in_keys_inv": [3, 78, 86, 87, 91, 102, 257, 261, 262, 266], "append_transform": [3, 32, 33, 34, 35, 39, 40, 89, 99, 257, 262, 265, 266], "doubletofloat": [3, 230, 233, 238, 240, 243, 257, 259, 261], "float32": [3, 13, 14, 16, 26, 32, 34, 35, 36, 44, 55, 60, 67, 68, 69, 70, 78, 86, 91, 99, 101, 113, 114, 122, 129, 136, 143, 144, 145, 146, 148, 150, 151, 152, 153, 156, 157, 230, 233, 235, 238, 240, 243, 259, 261, 262, 263, 265, 266], "float64": [3, 30, 51, 54, 56, 57, 58, 69, 76, 89, 99, 103, 106, 153, 176, 261, 266], "append": [3, 8, 32, 33, 34, 35, 39, 40, 52, 99, 257, 258, 259, 262, 263, 265], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 51, 54, 56, 57, 58, 103, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161, 176, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 255, 257, 259], "manipul": [3, 4, 8, 89, 266], "keep": [3, 4, 7, 8, 14, 35, 48, 86, 89, 106, 107, 113, 150, 217, 224, 257, 258, 259, 262, 265, 266], "mind": 3, "go": [3, 7, 90, 257, 258, 259, 261, 262, 263, 265, 266], "what": [3, 8, 32, 36, 51, 54, 56, 57, 58, 99, 113, 252, 254, 258, 259, 262, 263, 265, 266], "third_transform": 3, "would": [3, 30, 51, 54, 56, 57, 58, 127, 255, 258, 259, 262, 266], "replac": [3, 6, 7, 30, 77, 113], "unexpect": [3, 30, 51, 54, 56, 57, 58, 103, 266], "behviour": 3, "fortun": 3, "eras": [3, 51, 54, 56, 57, 58], "ident": [3, 13, 14, 16, 30, 57, 58, 247, 248, 258], "alreadi": [3, 8, 30, 51, 54, 56, 57, 58, 154, 257, 259], "place": [3, 13, 14, 16, 17, 26, 30, 51, 52, 54, 56, 57, 58, 76, 89, 99, 103, 106, 107, 153, 176, 221, 226, 227, 258, 259, 262], "chang": [3, 5, 7, 30, 32, 33, 34, 35, 41, 42, 43, 48, 49, 51, 54, 56, 57, 58, 91, 102, 103, 107, 176, 254, 257, 259, 262, 263, 266], "happen": [3, 147, 258, 263, 266], "catfram": [3, 258], "hold": [3, 186, 187, 262], "about": [3, 5, 7, 18, 19, 20, 254, 257, 258, 259, 262, 265, 266], "notic": [3, 259, 262], "parenthood": 3, "reason": [3, 4, 8, 30, 51, 54, 56, 57, 58, 89, 254, 257, 258, 259], "henc": [3, 32, 90, 257, 259, 262], "composit": [3, 26, 51, 54, 56, 57, 58, 259, 262], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 262], "log": [3, 4, 8, 120, 135, 141, 151, 154, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 217, 218, 220, 224, 245, 254, 255, 257, 258, 259, 262, 265], "reveal": 4, "bug": [4, 265], "curv": 4, "won": [4, 30, 51, 52, 54, 56, 57, 58, 89, 106, 224, 249, 258, 259], "tell": [4, 7, 257], "exploit": 4, "video": [4, 207, 220, 249], "game": [4, 5], "cannot": [4, 7, 22, 26, 90, 258, 259, 262], "cv": 4, "act": 4, "flip": 4, "imag": [4, 7, 61, 75, 89, 101, 106, 127, 257, 258, 263, 266], "correspondingli": 4, "relat": [4, 10, 32, 81, 258, 262], "prescript": 4, "tune": [4, 263], "coeffici": 4, "bonu": [4, 164, 165, 175, 177], "beta": [4, 32, 34, 44, 174, 175, 257, 258, 265], "altern": [4, 27, 56, 163, 257, 259], "reduc": [4, 6, 27, 258, 259], "downstream": [4, 257], "formul": 4, "ob": [4, 8, 26, 78, 86, 101, 113, 157, 189, 190, 191, 192, 258, 261, 262, 265, 266], "rate": [4, 107, 188, 258, 259], "gradient": [4, 30, 51, 54, 56, 57, 58, 103, 125, 131, 140, 141, 164, 179, 188, 189, 190, 191, 192, 224, 257, 259, 262], "norm": [4, 8, 224, 257, 258, 259, 262], "easier": [4, 257], "behavior": [4, 30, 51, 54, 56, 57, 58, 103, 174, 176, 259], "local": [4, 7, 10, 16, 21, 30, 51, 54, 56, 57, 58, 103, 212, 257, 265], "optima": 4, "sens": [4, 262], "product": [4, 9, 247, 248], "sum": [4, 21, 29, 31, 54, 171, 188, 254, 257, 258, 259, 262, 266], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 35, 48, 95, 107, 150, 212, 217, 258, 262], "stat": [4, 86, 228, 249, 258, 259], "w": [4, 75, 92, 101, 150, 207, 258], "r": [4, 30, 86, 154, 163, 188, 257, 258, 262, 266], "yield": [4, 16, 21, 30, 51, 54, 56, 57, 58, 176, 257], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 166, 167, 259], "futur": [4, 30, 51, 54, 56, 57, 58, 89, 103, 106, 127, 252, 265], "past": [4, 258], "becom": [4, 21, 266], "between": [4, 5, 13, 14, 16, 17, 21, 30, 48, 51, 54, 56, 57, 58, 77, 85, 93, 101, 103, 109, 115, 127, 151, 154, 171, 172, 175, 176, 185, 189, 220, 224, 254, 257, 258, 266], "spars": 4, "ineffici": 4, "interact": [4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 151, 154, 257, 259, 262, 266], "ad": [4, 13, 14, 16, 30, 32, 33, 34, 35, 39, 40, 44, 51, 54, 56, 57, 58, 95, 103, 130, 131, 150, 164, 165, 175, 177, 258, 266], "intermedi": [4, 257, 263], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 257], "discov": 4, "score": 4, "undesir": 4, "though": [4, 127, 259], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 51, 54, 56, 57, 58, 74, 77, 86, 113, 114, 126, 149, 150, 161, 176, 189, 190, 191, 192, 265], "subtask": 4, "hierarch": [4, 265], "framework": [4, 9, 22, 55, 265, 266], "individu": [4, 18, 19, 20, 21, 30, 51, 54, 56, 57, 58, 257], "select": [4, 15, 32, 33, 34, 35, 39, 40, 73, 74, 76, 79, 80, 81, 82, 84, 85, 88, 90, 91, 95, 96, 98, 99, 100, 102, 105, 107, 114, 223, 257], "fall": 4, "section": [4, 258], "explicit": [4, 11, 126], "mechan": [4, 30, 51, 54, 56, 57, 58, 103, 258, 262], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 51, 54, 56, 57, 58, 174, 259], "addition": 4, "per": [4, 13, 14, 16, 17, 18, 19, 20, 21, 57, 123, 224, 247, 248, 257, 258, 259, 265], "timestep": [4, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "realli": 4, "larg": [4, 27, 258, 259], "target": [4, 8, 21, 30, 51, 52, 54, 56, 57, 58, 102, 153, 154, 164, 165, 166, 167, 168, 169, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 188, 189, 190, 191, 192, 193, 227, 244, 245, 254, 255, 257, 262], "huge": 4, "std": [4, 86, 107, 132, 147, 257, 266], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 260, 261, 263, 264], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 30, 51, 54, 56, 57, 58, 86, 89, 99, 102, 103, 108, 114, 129, 130, 131, 147, 149, 150, 164, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 182, 230, 233, 235, 238, 240, 243, 249, 258, 262, 266], "estim": [4, 144, 145, 146, 164, 165, 169, 175, 176, 177, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 254, 258, 259, 261, 262, 263, 265, 266], "encount": [4, 57, 58, 252, 258, 262], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 257, 259, 266], "bonus": 4, "denser": 4, "prior": [4, 138, 171], "freshli": 4, "proper": [4, 6, 7, 189, 190, 191, 192, 258, 259], "doesn": [4, 11, 56], "drop": [4, 48, 113], "meant": [4, 55], "encourag": [4, 257, 258], "measur": [4, 259], "novelti": 4, "revisit": 4, "previous": [4, 259, 266], "diminish": 4, "decreas": 4, "ideal": [4, 86, 262], "down": [4, 13, 14, 16, 17], "gone": [4, 5], "anyth": 4, "try": [4, 7, 8, 160, 258, 259, 262, 265, 266], "distil": 4, "add": [4, 6, 21, 30, 32, 33, 34, 35, 39, 40, 46, 50, 51, 54, 56, 57, 58, 130, 164, 176, 219, 259, 262, 265], "nois": [4, 108, 131, 142, 150, 178, 182, 220, 249, 257], "exploratori": [4, 164, 165, 175, 177], "could": [4, 6, 258, 259, 263, 266], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 32, 34, 35, 41, 42, 43, 44, 49, 166, 167, 168, 174, 178, 180, 182, 255, 257, 258], "schedul": [4, 7, 220, 259, 262], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 89, 106, 166, 168, 178, 180, 182, 257, 258, 266], "divers": [4, 57, 58], "bootstrap": [4, 169, 190, 195, 196, 257], "noisi": [4, 130, 131, 142], "unstabl": [4, 125, 140, 141], "inher": 4, "stochast": [4, 123, 131, 133, 138, 168, 174, 178, 180, 259], "enemi": 4, "variabl": [4, 7, 8, 27, 31, 129, 144, 145, 146, 176, 178, 255, 258], "pomdp": 4, "previou": [4, 10, 30, 34, 138, 259, 262, 266], "loos": [4, 258, 259], "nonexist": 4, "sure": [4, 7, 40, 49, 249, 257, 259, 262, 265, 266], "architectur": 4, "sequenc": [4, 13, 14, 16, 17, 26, 28, 29, 32, 33, 46, 50, 72, 73, 74, 75, 77, 78, 81, 83, 86, 87, 90, 92, 93, 94, 95, 100, 101, 102, 107, 115, 120, 127, 135, 143, 151, 154, 155, 156, 157, 206, 207, 219, 220, 221, 223, 224, 230, 238, 240, 243, 257, 259, 261, 266], "rather": [4, 91, 257, 258, 259], "last": [4, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 48, 81, 86, 90, 100, 115, 126, 127, 133, 147, 149, 257, 258, 259, 262, 263, 265, 266], "lstm": [4, 126, 132], "explicitli": [4, 258], "rel": [4, 99, 120, 139, 257, 258], "tend": 4, "stabl": [4, 9, 10], "don": [4, 6, 7, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 51, 258, 259, 265, 266], "compens": 4, "descent": [4, 131], "1000": [4, 33, 107, 147, 149, 150, 151, 154, 173, 257, 258, 259, 263], "know": [4, 32, 33, 34, 35, 147, 149, 178, 220, 257, 258, 259], "minimum": [4, 25, 93, 123, 132, 139, 140, 141, 151, 161, 163, 215, 257, 259, 262, 265, 266], "rang": [4, 8, 11, 27, 32, 33, 52, 107, 175, 182, 254, 255, 257, 259, 262, 265], "manual": [4, 18, 20, 21, 257], "deviat": [4, 86, 107, 114, 123, 129, 130, 131, 147, 177, 182, 257], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "updat": [4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 30, 32, 34, 44, 51, 54, 55, 56, 57, 58, 77, 103, 105, 107, 114, 129, 150, 151, 153, 154, 164, 173, 177, 181, 189, 190, 191, 192, 193, 220, 224, 226, 231, 232, 244, 245, 255, 257, 258, 259, 262, 265, 266], "stabil": [4, 82], "stage": [4, 257, 262], "never": 4, "prevent": [4, 125, 140, 141, 175, 177, 222], "solv": [4, 10, 252, 257, 258, 259, 262], "entir": [4, 259, 262], "submit": [4, 252, 265], "suffici": [4, 257], "recommend": [4, 7], "system": [4, 5, 259, 262], "adequ": [4, 109, 259], "infeas": 4, "allevi": 4, "prune": 4, "develop": [4, 7, 257, 265], "filter": 4, "fire": [4, 30, 51, 54, 56, 57, 58], "certain": [4, 18, 20, 21, 30, 51, 54, 56, 57, 58, 82, 98, 103, 175, 257, 258, 259, 266], "illeg": 4, "chess": 4, "combin": [4, 102, 258], "grasp": 4, "releas": [4, 7, 10, 30, 51, 54, 56, 57, 58, 103, 265], "top": [4, 114, 129], "p": [4, 52], "wherein": 4, "cumul": [4, 95, 114, 259], "probabl": [4, 8, 120, 127, 135, 141, 151, 154, 258, 265], "q": [4, 116, 117, 118, 119, 121, 122, 124, 136, 146, 166, 167, 168, 169, 173, 174, 178, 180, 182, 240, 243, 257], "flow": [4, 257, 259, 262], "directli": [4, 8, 55, 249, 259, 262], "reparameter": [4, 120, 135], "soft": [4, 173, 180, 181], "actor": [4, 15, 21, 114, 116, 118, 122, 123, 129, 136, 144, 145, 146, 148, 149, 150, 151, 152, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 182, 183, 230, 233, 235, 238, 240, 243, 251, 254, 258, 259, 263, 265], "critic": [4, 8, 144, 164, 165, 175, 177, 179, 180, 257, 259], "clip": [4, 93, 165, 182, 224, 259, 262], "oppos": 4, "incorrect": 4, "thought": 4, "bound": [4, 17, 21, 25, 26, 30, 51, 54, 56, 57, 58, 107, 137, 138, 143, 148, 150, 151, 152, 153, 154, 257, 258, 259, 266], "region": 4, "squash": [4, 265], "tanh": [4, 115, 125, 127, 139, 140, 141, 259, 262, 263, 265], "correct": [4, 227, 259], "prob": [4, 135, 259], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 77, 89, 103, 106, 151, 153, 154, 173, 177, 240, 243, 257, 261, 262, 266], "side": [4, 266], "real": [5, 154, 254, 262], "world": [5, 55, 158, 171, 262, 266], "robot": [5, 7, 89, 106], "adopt": [5, 257, 266], "histor": 5, "wa": [5, 7, 51, 54, 56, 57, 58, 103, 173, 181, 254, 258, 259, 261, 265], "ceas": 5, "maintain": [5, 9, 262], "fork": 5, "gymnasium": [5, 11, 258, 259, 262, 265], "farama": [5, 259, 262], "foundat": [5, 259], "document": [5, 7, 18, 19, 21, 30, 51, 54, 56, 57, 58, 103, 258, 265], "further": [5, 259], "detail": [5, 6, 7, 30, 51, 54, 56, 57, 58, 103, 122, 164, 169, 177, 233, 252, 258, 261], "usag": [5, 7, 39, 174, 180, 183, 257, 258, 259, 261, 262, 263, 265, 266], "known": [5, 7, 8, 195, 196, 257, 258], "bc": [5, 265], "break": [5, 13, 14, 16, 21, 30, 33, 35, 51, 54, 56, 57, 58, 107, 258, 265], "face": [5, 8, 9, 266], "modif": [5, 26, 30, 51, 54, 56, 57, 58, 81, 259, 262], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 51, 54, 56, 57, 58, 109, 143, 148, 151, 152, 153, 154, 259], "13": [5, 10, 11, 258, 259, 262], "howev": [5, 7, 30, 51, 54, 56, 57, 58, 95, 98, 103, 257, 258, 259, 266], "construct": [5, 30, 32, 33, 34, 35, 51, 54, 56, 57, 58, 109, 138, 154, 176, 224, 230, 238, 258, 259, 262, 266], "automat": [5, 51, 54, 56, 57, 58, 86, 143, 151, 257, 259, 262, 265], "wrap": [5, 13, 14, 16, 17, 18, 19, 20, 21, 30, 51, 54, 56, 57, 58, 109, 144, 145, 146, 158, 257, 258, 259, 266], "best": [5, 9, 265], "gymwrapp": [5, 54, 251, 259, 265], "you": [5, 6, 7, 8, 10, 30, 51, 54, 56, 57, 58, 107, 252, 257, 258, 259, 261, 263, 265, 266], "feel": [5, 252, 265], "free": [5, 7, 164, 171, 177, 255, 259, 265], "gladli": 5, "instruct": [6, 7, 10, 22, 39, 77, 257, 258, 259], "prepar": [6, 259], "conda": [6, 7, 252], "assum": [6, 26, 31, 34, 35, 39, 54, 57, 58, 75, 81, 89, 90, 95, 99, 106, 126, 180, 197, 198, 199, 200, 202, 203, 204, 205, 207, 257, 259, 261, 262], "let": [6, 7, 30, 51, 54, 56, 57, 58, 220, 254, 257, 258, 259, 261, 262, 263, 265, 266], "7": [6, 10, 27, 31, 32, 33, 34, 114, 115, 126, 127, 129, 257, 258, 262, 263, 264, 265], "cmake": 6, "14": [6, 11, 86, 258, 259, 262, 263, 264], "activ": [6, 7, 9, 115, 123, 127, 177, 265], "sim": 6, "bullet": 6, "physic": [6, 7, 255, 257, 262], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 252], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": 6, "y": [6, 7, 68, 126, 160, 257, 259], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 51, 54, 56, 57, 58, 97, 176, 266], "command": [6, 7, 10, 259, 262, 266], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 251], "_has_habitat": 6, "_env": [6, 266], "available_env": [6, 59, 60, 61, 62, 63, 64, 66, 67, 266], "startswith": [6, 254, 257], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 32, 33, 34, 35, 39, 40, 62, 249, 255, 257], "libllvmlit": 6, "ionstal": 6, "path": [6, 7, 30, 41, 51, 54, 56, 57, 58, 89, 106, 129, 224, 255, 258], "env_nam": [6, 56, 59, 61, 63, 66, 257, 259, 266], "llvmlite": 6, "config": [6, 7, 89, 106, 228, 230, 231, 232, 233, 235, 238, 240, 241, 243, 246], "var": [6, 7, 30, 51, 54, 56, 57, 58, 103, 176], "ld_preload": [6, 7], "python3": [6, 7, 10, 257, 265], "8": [6, 7, 33, 44, 60, 115, 116, 117, 124, 127, 144, 145, 146, 151, 153, 156, 174, 257, 258, 259, 262, 263, 264, 265], "site": [6, 7], "bind": 6, "deactiv": [6, 7], "importerror": [6, 7, 10], "usr": [6, 7, 10, 257, 265], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 30, 51, 54, 56, 57, 58, 103, 176], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 258], "right": [6, 7, 126, 258, 259, 262, 266], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 39], "stand": [7, 144, 145, 146, 261, 262, 266], "joint": [7, 258], "dynam": [7, 174, 259, 262], "contact": 7, "engin": [7, 262], "facilit": [7, 88, 89, 106, 144, 145, 146, 257, 262], "biomechan": 7, "graphic": 7, "anim": 7, "area": 7, "demand": [7, 266], "fast": [7, 9, 60, 91, 178, 257, 258, 259], "accur": [7, 39, 258, 262], "articul": 7, "acquir": [7, 259], "deepmind": [7, 8, 9, 61, 62, 259], "access": [7, 8, 30, 32, 40, 51, 54, 56, 57, 58, 89, 176, 249, 252, 257, 262], "whomev": 7, "licenc": 7, "incorpor": [7, 262], "relianc": 7, "obsolet": 7, "seri": [7, 8, 31, 46, 50, 58, 85, 102, 207, 254, 257, 258, 259, 266], "legaci": 7, "pro": [7, 252], "tip": [7, 252], "glfw": 7, "osmesa": 7, "egl": 7, "hand": [7, 21, 262], "advic": [7, 266], "sudo": [7, 252], "enabl": [7, 8, 39, 150, 220, 259, 262], "apt": 7, "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 41, 42, 43, 49, 258], "fact": [7, 8, 257, 259, 262, 263, 266], "indent": 7, "workflow": [7, 144, 145, 146], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "both": [7, 30, 51, 52, 54, 56, 57, 58, 91, 103, 115, 127, 144, 145, 146, 176, 220, 257, 259, 262, 263, 266], "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 30, 42, 51, 54, 56, 57, 58, 89, 106, 266], "binari": [7, 24, 31, 72, 122, 136, 148, 152], "setup": 7, "mkdir": 7, "cd": 7, "tag": [7, 207, 212, 249], "earlier": [7, 257, 259], "roboti": 7, "u": [7, 10, 40, 257, 259, 262, 263, 265, 266], "download": [7, 10, 89, 106, 257, 258, 259, 260, 261, 262, 263, 265, 266], "html": [7, 56], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 54, 89, 106, 114, 221, 257, 259], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 263], "bin": 7, "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "hard": [7, 173, 258, 266], "later": [7, 119, 151, 154, 257, 259], "modifi": [7, 8, 30, 51, 54, 56, 57, 58, 76, 81, 89, 99, 102, 103, 106, 150, 153, 176, 227, 230, 238, 240, 243, 257, 258, 259], "nvidia": 7, "older": [7, 11], "hack": [7, 257], "line": [7, 30, 51, 54, 56, 57, 58, 257, 258, 265], "adatp": 7, "script": [7, 109, 230, 233, 235, 238, 240, 243, 245, 249, 254, 255, 257, 258, 259, 261, 262, 263, 265, 266], "unnot": [7, 90], "until": [7, 21, 259], "complet": [7, 9, 48, 54, 252, 254, 257, 259, 261], "mujoco_pi": 7, "trigger": 7, "pipelin": [7, 259], "problem": [7, 8, 16, 258, 259, 262, 266], "troubleshoot": 7, "gl": 7, "h": [7, 75, 92, 101, 129, 207, 258], "eglshim": 7, "10": [7, 22, 26, 32, 33, 34, 35, 52, 55, 69, 70, 101, 114, 126, 129, 149, 150, 168, 178, 179, 180, 182, 189, 190, 191, 192, 215, 255, 257, 258, 259, 262, 264, 265, 266], "fatal": 7, "No": 7, "directori": [7, 41, 212, 255], "glu": 7, "38": [7, 258, 259, 262], "disappear": [7, 258, 261], "libstdc": 7, "6": [7, 13, 14, 16, 17, 33, 67, 86, 115, 120, 126, 127, 139, 157, 230, 233, 235, 238, 240, 243, 258, 259, 262, 263, 264, 265, 266], "glibcxx_3": 7, "29": [7, 258, 259, 262, 263], "compil": 7, "libosmesa": 7, "libgcc": 7, "Then": [7, 259, 261], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "__init__": [7, 55, 114, 122, 129, 157, 160, 255, 262, 266], "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 258], "runtimeerror": [7, 8, 30, 51, 54, 56, 57, 58, 103, 266], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 258, 259, 262, 263], "114": [7, 262], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 262], "offscreenopenglcontext": 7, "fail": [7, 109], "opengl": 7, "global": [7, 30, 51, 54, 56, 57, 58, 151, 154, 255, 257], "cuda_visible_devic": 7, "id": [7, 23, 150, 178, 210, 240], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "read": [7, 17, 23, 41, 42, 43, 49, 54, 73, 74, 76, 77, 79, 80, 81, 82, 84, 88, 90, 91, 95, 96, 98, 99, 100, 102, 105, 107, 135, 143, 144, 145, 146, 148, 151, 152, 153, 154, 156, 157, 158, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 189, 190, 191, 192, 193, 207, 220, 224, 230, 238, 240, 243, 257, 258, 259, 261, 262, 263, 266], "onscreen": 7, "101": [7, 259, 262], "displai": [7, 224, 255, 257, 258, 262], "correctli": [7, 30, 51, 54, 56, 57, 58], "loop": [8, 13, 14, 16, 17, 54, 113, 224, 255, 257, 258, 261], "sketch": [8, 255], "_": [8, 52, 74, 77, 78, 86, 91, 101, 107, 143, 148, 152, 153, 157, 163, 189, 190, 191, 192, 257, 258, 259, 262, 265], "n_training_step": 8, "datapoint": 8, "onlin": [8, 13, 17, 164, 177, 215, 249, 259], "n_data_per_train": 8, "no_grad": [8, 30, 51, 54, 56, 57, 58, 189, 190, 191, 192, 259], "replay_buff": [8, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 221, 245, 257, 258, 259], "extend": [8, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 50, 221, 255, 257, 258, 259, 263, 265], "loss_fn": [8, 265], "backward": [8, 30, 51, 54, 56, 57, 58, 107, 257, 259, 262], "zero_grad": [8, 30, 51, 54, 56, 57, 58, 255, 257, 259, 262], "backpropag": [8, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 262], "decor": [8, 11, 189, 190, 191, 192], "differenti": [8, 189, 190, 191, 192, 262], "understand": [8, 257, 258], "denomin": 8, "artifact": 8, "numer": [8, 107, 125, 140, 141, 143, 148, 151, 152, 153, 154, 222, 259, 266], "misconcept": 8, "save": [8, 30, 51, 54, 56, 57, 58, 176, 206, 224, 255], "freed": 8, "appear": [8, 31, 262], "compuat": 8, "twice": 8, "fix": [8, 99, 180, 258, 262, 266], "retain_graph": 8, "discuss": [8, 9], "inplac": [8, 30, 51, 54, 56, 57, 58, 257], "accumul": 8, "onto": [8, 31, 143, 147, 148, 149, 150, 151, 152, 153, 154, 262], "exclud": [8, 39, 79, 113], "forward": [8, 30, 51, 54, 56, 57, 58, 73, 74, 76, 77, 79, 80, 81, 82, 84, 86, 88, 89, 90, 91, 95, 96, 98, 99, 100, 102, 105, 107, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 130, 132, 133, 134, 137, 138, 143, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 189, 190, 191, 192, 193, 254, 262, 265], "submodul": [8, 30, 51, 54, 56, 57, 58, 176], "param": [8, 30, 51, 54, 55, 56, 57, 58, 91, 102, 120, 122, 136, 139, 143, 148, 151, 152, 153, 156, 157, 176, 184, 187, 189, 190, 191, 192, 193, 233, 257, 262, 263, 265], "grad": [8, 30, 51, 54, 56, 57, 58, 257, 259], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 132, 153, 176], "strictli": [8, 30, 51, 54, 56, 57, 58, 103, 257, 259], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 44, 73, 81, 90, 104, 170, 254, 259, 262], "ask": [8, 257, 259, 263, 266], "core": [8, 230, 233, 235, 238, 240, 243, 255, 265], "much": [8, 32, 34, 44, 175, 177, 259, 262, 266], "render": [8, 220, 257, 258, 259], "upon": [8, 262], "factor": [8, 30, 125, 131, 140, 141, 150, 169, 170, 172, 257, 258, 266], "fit": [8, 11, 86, 254, 255, 257], "everi": [8, 17, 26, 30, 31, 49, 51, 54, 56, 57, 58, 107, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161, 224, 255, 257, 258, 259, 262], "bottlneck": 8, "affect": [8, 30, 51, 54, 56, 57, 58, 102, 103, 109], "brax": [8, 59, 60, 91, 266], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 80, 166, 167, 215, 254, 255, 257, 259, 262], "underli": [8, 262], "tedeiou": 8, "priorit": [8, 32, 34, 44, 166, 167, 168, 174, 178, 180, 182, 257, 258], "amount": [8, 150, 258], "isn": [8, 153], "contigu": [8, 259, 262, 265, 266], "costli": [8, 262], "concaten": [8, 21, 28, 29, 73, 74, 86, 102, 127, 156, 257, 258, 262, 266], "constitut": [8, 258, 262], "plain": 8, "profil": 8, "indic": [8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 48, 50, 51, 54, 56, 57, 58, 74, 98, 99, 115, 127, 150, 161, 164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 228, 249, 252, 255, 259, 262, 266], "fulli": [8, 30, 51, 54, 56, 57, 58, 258, 262], "frequent": 8, "techniqu": [8, 258], "program": [8, 174, 266], "functorch": [8, 10, 153, 156, 265], "incl": 8, "suit": [8, 62, 259, 266], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "view": [8, 27, 30, 31, 51, 54, 56, 57, 58, 122, 127, 262, 265, 266], "expand": [8, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 153, 156, 262, 265], "new_shap": 8, "content": [8, 13, 14, 16, 32, 33, 34, 35, 48, 56, 115, 127, 259, 262, 265], "lost": 8, "permut": [8, 48, 265, 266], "spin": [9, 266], "deep": [9, 73, 116, 117, 118, 119, 121, 150, 164, 173, 180, 181, 233, 257], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 86, 107, 257, 258, 259], "reddit": 9, "reagent": 9, "orient": [9, 266], "baselines3": 9, "tf": 9, "agent": [9, 131, 262], "bandit": [9, 68], "tensorflow": 9, "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "simpl": [9, 30, 31, 51, 54, 56, 57, 58, 116, 154, 179, 189, 254, 257, 258, 259, 266], "sequenti": [9, 30, 51, 54, 56, 57, 58, 155, 156, 259, 262, 263, 266], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 265], "grade": 9, "factori": 9, "throughput": [9, 257], "cherri": 9, "jaxrl": 9, "space": [9, 31, 36, 77, 122, 134, 136, 143, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 168, 258, 259, 262, 265, 266], "mbrl": [9, 55], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "dist": [10, 257, 265], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 259], "notebook": [10, 257, 258, 259, 260, 261, 262, 263, 265, 266], "24": [10, 258, 259, 262, 264], "11": [10, 27, 31, 52, 101, 114, 129, 258, 259, 261, 262, 263, 264], "2022": [10, 265], "12": [10, 258, 259, 262], "pip": [10, 40, 265, 266], "pip3": [10, 259], "extra": [10, 30, 51, 54, 56, 57, 58, 107, 113, 259], "url": 10, "org": [10, 32, 44, 73, 89, 116, 117, 118, 119, 122, 123, 124, 129, 131, 133, 134, 137, 138, 150, 164, 169, 170, 171, 172, 173, 174, 177, 179, 180, 181, 189, 194, 201, 230, 233, 238, 243, 257, 263], "whl": 10, "There": [10, 255, 259, 262, 266], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 176], "str": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 44, 51, 53, 54, 56, 57, 58, 61, 68, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 106, 107, 110, 112, 114, 115, 116, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 136, 143, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 185, 188, 189, 190, 191, 192, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 230, 233, 238, 240, 241, 243, 249, 258, 259], "from_vers": 11, "to_vers": 11, "intersect": 11, "eg": [11, 41, 42, 43, 49, 77], "v": [11, 107, 126, 144, 174, 180, 257, 258, 265], "longer": [11, 258], "fun": [11, 259], "self": [11, 30, 51, 54, 55, 56, 57, 58, 76, 89, 99, 103, 106, 114, 122, 129, 147, 149, 153, 157, 160, 176, 189, 190, 191, 192, 193, 255, 257, 258, 262, 265], "x": [11, 23, 26, 30, 101, 115, 121, 122, 124, 126, 127, 129, 160, 161, 163, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 224, 257, 259, 262, 265], "27": [11, 258, 259, 262], "arg": [12, 14, 26, 30, 41, 42, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 89, 97, 103, 104, 105, 106, 115, 127, 148, 152, 176, 193, 214, 217, 221, 224, 249, 257, 258, 265], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 30, 34, 35, 39, 40, 51, 53, 54, 56, 57, 58, 73, 74, 76, 79, 80, 81, 84, 85, 88, 90, 91, 95, 96, 98, 99, 100, 102, 105, 107, 113, 114, 128, 129, 147, 149, 150, 153, 154, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 182, 188, 189, 190, 191, 192, 193, 224, 257, 262], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 52, 57, 58, 257, 265], "callabl": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 54, 55, 56, 57, 58, 163, 231, 232, 247, 248, 249, 258], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 54, 55, 56, 57, 58, 61, 73, 74, 75, 76, 77, 81, 82, 85, 86, 89, 90, 92, 97, 98, 100, 103, 104, 106, 109, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 147, 149, 150, 151, 153, 154, 164, 165, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 182, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 216, 217, 220, 221, 224, 226, 230, 233, 238, 240, 241, 243, 247, 248, 249, 262], "200": [13, 14, 16, 17, 21, 30, 51, 54, 56, 57, 58, 69, 70, 116, 117, 123, 137, 138, 257, 262], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 224, 227, 245, 255, 257, 258, 259, 265], "create_env_kwarg": [13, 14, 16, 17, 52, 56, 57, 58, 257], "dict": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 30, 51, 52, 54, 56, 57, 58, 99, 103, 107, 115, 116, 117, 118, 119, 124, 126, 127, 151, 154, 211, 212, 220, 231, 232, 233, 240, 243, 247, 248, 249, 257, 258, 259, 266], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 258], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 30, 31, 32, 34, 37, 44, 51, 54, 56, 57, 58, 76, 78, 86, 89, 93, 94, 99, 101, 103, 106, 107, 120, 123, 125, 127, 129, 130, 131, 137, 138, 139, 141, 147, 149, 150, 153, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 222, 257, 258, 266], "given": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 51, 54, 55, 56, 57, 58, 76, 77, 86, 89, 99, 103, 106, 113, 114, 122, 123, 129, 136, 143, 148, 150, 152, 153, 154, 155, 156, 157, 163, 166, 167, 176, 188, 189, 190, 191, 192, 193, 216, 220, 245, 255, 257, 258, 259, 262, 266], "datacollector": [13, 14, 16, 17, 151, 154, 259], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 143, 147, 148, 150, 151, 152, 153, 154, 156, 159, 265], "env_mak": [13, 14, 16, 21, 245, 266], "lambda": [13, 14, 16, 17, 21, 22, 52, 170, 172, 192, 199, 200, 204, 205, 245, 254, 257, 258, 265, 266], "50": [13, 14, 16, 21, 258, 259, 262], "linear": [13, 14, 16, 21, 30, 51, 54, 55, 56, 57, 58, 76, 89, 99, 103, 106, 114, 115, 122, 127, 129, 130, 131, 132, 136, 137, 138, 143, 144, 145, 146, 149, 150, 151, 152, 153, 156, 157, 160, 176, 189, 190, 191, 192, 245, 258, 261, 263, 265], "2000": [13, 14, 16, 259], "enumer": [13, 14, 16, 21, 30, 33, 35, 51, 54, 56, 57, 58, 183, 254, 257, 258, 259, 265], "step_count": [13, 14, 16, 98, 259, 265], "int64": [13, 14, 16, 24, 27, 28, 29, 31, 34, 68, 122, 136, 148, 150, 152, 235, 259, 262, 265, 266], "shutdown": [13, 14, 16, 17, 21, 257, 265], "del": [13, 14, 16, 257, 259, 261, 265, 266], "randompolici": [13, 14, 16, 18, 19, 20, 22, 251], "total": [13, 14, 16, 17, 18, 19, 20, 21, 24, 28, 29, 31, 54, 165, 175, 177, 215, 217, 220, 224, 227, 228, 257, 258, 259, 261, 262, 263, 264, 265, 266], "lifespan": [13, 14, 16, 18, 19, 20, 258], "divis": [13, 14, 16, 18, 19, 20], "endless": [13, 14, 16, 18, 19, 20], "accommod": [13, 14, 16, 17], "kept": [13, 14, 16, 17, 48, 57, 58, 77, 102, 109, 113, 125, 140, 141], "long": [13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 77], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 30, 51, 54, 56, 57, 58, 99, 103, 151, 154, 220, 247, 248, 249, 255, 258, 259, 262, 266], "span": [13, 14, 16, 17, 18, 19, 20, 21], "unless": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 48, 51, 54, 56, 57, 58, 259], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 30, 150, 258, 259], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 102, 104, 254, 255, 257, 258, 265], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 30, 51, 54, 56, 57, 58, 77, 79, 96, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161, 176, 266], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 262], "post": [13, 14, 16, 18, 19, 20, 21, 30, 51, 54, 56, 57, 58], "multistep": [13, 14, 16, 18, 19, 20, 21, 251, 258], "accord": [13, 14, 16, 17, 18, 19, 20, 21, 86, 94, 125, 130, 137, 140, 141, 262], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 177], "whole": [13, 14, 16, 26, 30, 51, 54, 56, 57, 58, 103, 215, 257, 259], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 226, 245, 255, 257, 265], "async": [13, 14, 18, 19, 20, 21, 257, 265], "ratio": [13, 14, 257, 259], "finish": [13, 14, 21], "rest": [13, 14, 259, 265], "earli": [13, 14, 265], "load_state_dict": [13, 14, 16, 17, 21, 30, 51, 54, 56, 57, 58, 103, 107, 255, 257], "state_dict": [13, 14, 16, 17, 21, 30, 51, 54, 56, 57, 58, 103, 107, 176, 249, 255, 257, 258, 266], "ordereddict": [13, 14, 16, 17, 21, 30, 51, 54, 56, 57, 58, 103, 107, 258], "form": [13, 14, 17, 30, 32, 33, 34, 35, 39, 40, 51, 54, 56, 57, 58, 107, 163, 164, 165, 175, 177, 224], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 51, 54, 56, 57, 58, 103], "integ": [13, 14, 16, 17, 23, 28, 29, 30, 31, 38, 49, 51, 54, 56, 57, 58, 82, 86, 98, 115, 127, 174, 180], "increment": [13, 14, 16, 17, 51, 54, 56, 57, 58, 98, 175], "env_fn": [13, 14, 16, 17, 52, 247, 248], "v0": [13, 14, 17, 54, 63, 64, 66, 67, 76, 103, 107, 245], "env_fn_parallel": [13, 14, 16, 17], "out_se": [13, 14, 16, 17, 266], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 26, 30, 39, 41, 42, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 89, 97, 99, 103, 104, 105, 106, 115, 116, 117, 118, 119, 124, 125, 127, 128, 135, 139, 141, 143, 148, 151, 152, 154, 165, 175, 176, 184, 188, 189, 190, 191, 192, 193, 207, 211, 212, 214, 217, 224, 230, 231, 232, 233, 238, 240, 243, 246, 247, 248, 254, 257, 259, 265], "rand": [15, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 55, 60, 67, 114, 129, 262, 265, 266], "describ": [15, 36, 74, 102, 139, 140, 210, 230, 238, 254, 257, 259, 262, 266], "tensor_spec": [15, 154], "boundedtensorspec": [15, 22, 26, 149, 150, 151, 251, 259, 262, 265, 266], "td": [15, 26, 59, 60, 61, 62, 63, 64, 66, 67, 74, 77, 78, 84, 86, 101, 103, 107, 113, 114, 122, 128, 129, 136, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 190, 191, 192, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 215, 223, 230, 233, 235, 238, 240, 243, 254, 257, 262, 265, 266], "cube": 15, "envcreat": [16, 22, 245, 246, 249, 251, 257, 258, 265, 266], "interruptor": 16, "_interruptor": 16, "outsid": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 21, 51, 54, 56, 57, 58, 259, 265, 266], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 54, 56, 164, 165, 175, 177, 257, 261, 262, 265], "pin_memori": [17, 32, 33, 34, 35, 39, 40, 57, 58, 88, 257, 265], "paradigm": 17, "regular": [17, 136, 153, 154, 169, 226, 255, 257, 258, 266], "prefer": [17, 20, 32, 33, 34, 35, 90, 96, 221, 259], "mere": 17, "greater": [17, 257, 258, 265], "signal": [17, 39, 98, 254, 257, 259], "sent": [17, 41, 42, 107], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 57, 58, 90, 107, 114, 115, 116, 118, 121, 127, 129, 143, 148, 152, 153, 157, 215, 221, 257, 259, 262, 266], "postprocessor": 17, "format": [17, 29, 30, 31, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176, 257, 258, 266], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 224], "string": [18, 19, 20, 30, 51, 54, 56, 57, 58, 89, 106, 151, 154, 163, 206, 223, 230, 238, 240, 243, 254, 257, 259], "respect": [18, 19, 20, 30, 51, 54, 56, 57, 58, 72, 76, 89, 90, 99, 103, 106, 138, 153, 157, 176, 219, 259], "copi": [18, 19, 20, 21, 30, 51, 54, 56, 57, 58, 91, 103, 113, 176, 254, 257, 258], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 252, 258, 259, 261], "serv": [18, 20, 21, 65, 266], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 51, 54, 56, 57, 58, 81], "seen": [18, 20, 21, 254, 257, 258], "turn": [18, 20, 21, 83, 104, 220, 254, 257, 258, 262, 263], "mp": [18, 19, 20, 52, 107], "submitit_delai": [18, 22], "former": [18, 19, 20, 32, 33, 34, 35, 39, 51, 54, 56, 57, 58, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161, 257], "whilst": [18, 19, 20], "latter": [18, 19, 20, 30, 39, 51, 54, 56, 57, 58, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161, 176, 247, 248], "homonym": [18, 19, 20, 262], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 257], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 31, 151, 154], "union": [20, 54, 115, 168, 178], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 247, 248, 257, 258], "coordin": 21, "hood": [21, 262], "init": [21, 30, 51, 54, 56, 57, 58, 257, 258, 259], "autodetect": 21, "advanc": [21, 32, 33, 34, 35], "similarli": [21, 30, 48, 51, 54, 56, 57, 58, 155, 156, 174, 266], "num_cpu": 21, "num_gpu": 21, "1024": [21, 258], "carri": [21, 51, 54, 56, 57, 58, 258, 262], "equat": [21, 150, 163, 165, 181, 259, 262], "exce": [21, 259], "indefinit": 21, "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 224, 259], "add_collector": 21, "num_env": [21, 69, 70], "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 69, 70, 115, 116, 117, 124, 127, 133, 134, 258, 259, 262, 263, 265, 266], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "wherea": [22, 77, 255], "default_config": 22, "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 52, 258], "__main__": [22, 52], "rollout_tensordict": 23, "prefix": [23, 30, 51, 54, 56, 57, 58, 103, 176, 206, 266], "max": [23, 31, 34, 44, 77, 100, 139, 140, 141, 165, 168, 178, 180, 257, 259], "durat": 23, "tupl": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 54, 56, 57, 58, 86, 91, 116, 126, 127, 132, 166, 170, 176, 189, 190, 191, 192, 218, 220, 222, 234, 236, 239, 242, 257], "meta": [23, 36, 39, 53, 255, 259], "aren": 23, "discret": [24, 27, 28, 29, 31, 38, 77, 122, 135, 136, 168, 169, 258, 266], "5": [24, 32, 33, 34, 35, 52, 56, 67, 69, 70, 114, 115, 122, 123, 125, 126, 127, 129, 136, 140, 141, 148, 152, 174, 175, 182, 257, 258, 262, 263, 265, 266], "assert_is_in": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38], "belong": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 107, 257], "otherwis": [24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 51, 54, 56, 57, 58, 77, 86, 99, 103, 107, 125, 140, 141, 171, 176, 180, 220, 221, 255, 257, 258, 259, 262, 266], "encod": [24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 77, 122, 134, 135, 136, 137, 148, 152, 163, 258, 259, 262], "val": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 265], "ndarrai": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 54, 150], "np": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 54, 262], "compli": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38], "current": [24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 51, 54, 56, 57, 58, 65, 90, 103, 110, 113, 122, 123, 126, 136, 138, 150, 169, 210, 230, 238, 255, 257, 258, 259, 262, 265, 266], "least": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38], "complient": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 115, 127], "classmethod": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38], "implements_for_spec": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38], "torch_funct": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38], "overrid": [24, 25, 26, 27, 28, 29, 31, 33, 36, 37, 38, 249], "tensor_to_index": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38], "is_in": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 266], "project": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 77, 143, 147, 148, 149, 150, 151, 152, 153, 154, 265, 266], "back": [24, 25, 26, 27, 28, 29, 31, 32, 36, 37, 38, 143, 148, 151, 152, 153, 154, 259, 262], "uniform": [24, 25, 26, 27, 28, 29, 31, 32, 34, 36, 37, 38, 44], "unbound": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 99, 262], "squeez": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 97, 115, 257, 262], "dim": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 73, 74, 99, 104, 107, 126, 249, 258, 262], "to_numpi": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38], "transformed_in": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 102, 103, 132, 139, 249], "to_one_hot": [24, 27, 28], "hot": [24, 27, 28, 29, 31, 77, 122, 135, 136, 148, 152], "to_one_hot_spec": [24, 27, 28], "onehotdiscretetensorspec": [24, 27, 122, 136, 148, 152, 251], "convert": [24, 27, 28, 29, 30, 31, 51, 54, 56, 57, 58, 76, 78, 89, 99, 103, 106, 107, 153, 163, 176, 257, 258, 259, 262], "type_check": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38], "fill": [24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 99, 262, 263], "upper": 25, "unnam": 26, "effect": [26, 30, 51, 54, 56, 57, 58, 95, 103, 224, 257, 266], "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 30, 51, 54, 56, 57, 58, 115, 127, 258, 259, 262, 264, 265], "composite_spec": 26, "observation_vector": [26, 74, 230, 233, 238, 240, 243, 257], "within": [26, 30, 34, 35, 51, 54, 56, 57, 58, 107, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161, 262, 265], "randn": [26, 86, 122, 126, 132, 136, 143, 144, 145, 146, 148, 151, 152, 153, 156, 157, 189, 190, 191, 192, 223, 265, 266], "td_project": 26, "include_nest": 26, "leaves_onli": 26, "itemsview": 26, "immedi": [26, 30, 51, 54, 56, 57, 58, 188], "children": [26, 30, 51, 54, 56, 57, 58], "keysview": 26, "reflect": [26, 113, 227, 258, 259], "selected_kei": [26, 96, 257], "valuesview": 26, "onehottensorspec": 27, "categor": [27, 29, 31, 122, 135, 136, 148, 152], "action_valu": [27, 31, 122, 136, 148, 152, 235], "arang": [27, 31, 122, 148, 215], "argmax": [27, 122, 136, 148, 152], "chosen_action_valu": [27, 31, 152, 235], "outcom": [27, 31, 120, 139], "nvec": [28, 29], "cardin": [28, 29, 122, 136, 259], "ax": [28, 130, 131], "multionehotdiscretetensorspec": [28, 251], "use_regist": [29, 31], "to_categor": [29, 31], "to_categorical_spec": [29, 31], "multidiscretetensorspec": [29, 251], "gamma": [30, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 245, 254, 257, 258, 259, 265], "sutton": [30, 254], "1988": 30, "predict": [30, 123, 128, 129, 158, 169, 171, 172, 188, 257, 258], "tempor": [30, 129, 190, 191, 195, 196], "44": [30, 258, 259, 262], "discount": [30, 52, 169, 170, 172, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 254, 258, 259], "ahead": [30, 266], "add_modul": [30, 51, 54, 56, 57, 58], "child": [30, 51, 54, 56, 57, 58], "fn": [30, 51, 54, 56, 57, 58, 132, 247, 248], "recurs": [30, 51, 54, 56, 57, 58, 176], "init_weight": [30, 51, 54, 56, 57, 58], "m": [30, 51, 54, 56, 57, 58, 77, 154, 258, 262], "fill_": [30, 51, 54, 56, 57, 58, 258, 266], "net": [30, 51, 54, 56, 57, 58, 126, 178, 240, 245, 258, 262, 263, 265], "in_featur": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 115, 116, 117, 118, 119, 126, 127, 130, 131, 144, 153, 176, 265], "out_featur": [30, 51, 54, 55, 56, 57, 58, 76, 89, 99, 103, 106, 114, 115, 116, 117, 118, 119, 123, 124, 126, 127, 129, 130, 131, 144, 148, 153, 176, 257, 265], "bia": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 115, 123, 127, 130, 131, 132, 149, 150, 153, 161, 162, 163, 176, 254, 257, 258, 259, 265], "requires_grad": [30, 51, 54, 56, 57, 58], "bfloat16": [30, 51, 54, 56, 57, 58], "cast": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 107, 153, 176, 230, 233, 235, 238, 240, 243, 266], "datatyp": [30, 51, 54, 56, 57, 58, 176], "member": [30, 51, 54, 56, 57, 58, 176], "xdoctest": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "skip": [30, 51, 54, 56, 57, 58, 82, 103, 109, 151, 154, 176, 206, 207, 217, 220, 257, 258, 259, 262], "buf": [30, 51, 54, 56, 57, 58], "20l": [30, 51, 54, 56, 57, 58, 176], "1l": [30, 51, 54, 56, 57, 58, 176], "5l": [30, 51, 54, 56, 57, 58, 176], "associ": [30, 51, 54, 56, 57, 58, 137, 176, 249, 257], "doubl": [30, 37, 51, 54, 56, 57, 58, 76, 78, 89, 99, 101, 103, 106, 153, 167, 169, 173, 176, 178, 181, 257, 258, 259, 266], "eval": [30, 51, 54, 56, 57, 58, 103, 107, 257, 258, 259], "evalu": [30, 51, 54, 56, 57, 58, 103, 120, 135, 141, 178, 231, 232, 258, 259], "particular": [30, 39, 51, 54, 56, 57, 58, 103, 254, 255, 258, 261], "dropout": [30, 51, 54, 56, 57, 58, 103, 127], "batchnorm": [30, 51, 54, 56, 57, 58, 103, 176], "disabl": [30, 51, 54, 56, 57, 58, 103, 125, 140, 141, 257], "comparison": [30, 51, 54, 56, 57, 58, 103, 257, 258], "similar": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 105, 106, 107, 144, 146, 151, 153, 154, 176, 254, 257, 258, 259, 262, 266], "confus": [30, 51, 54, 56, 57, 58, 103], "extra_repr": [30, 51, 54, 56, 57, 58], "represent": [30, 51, 54, 56, 57, 58, 89, 106, 257, 262, 263, 266], "nontermin": 30, "original_reward": 30, "newli": 30, "OR": 30, "reshap": [30, 127, 259], "get_buff": [30, 51, 54, 56, 57, 58], "throw": [30, 51, 54, 56, 57, 58, 266], "docstr": [30, 51, 54, 56, 57, 58], "get_submodul": [30, 51, 54, 56, 57, 58], "explan": [30, 51, 54, 56, 57, 58], "qualifi": [30, 51, 54, 56, 57, 58], "referenc": [30, 51, 54, 56, 57, 58], "attributeerror": [30, 51, 54, 56, 57, 58, 257], "invalid": [30, 51, 54, 56, 57, 58], "resolv": [30, 51, 54, 56, 57, 58], "get_extra_st": [30, 51, 54, 56, 57, 58, 107], "set_extra_st": [30, 51, 54, 56, 57, 58, 107], "picklabl": [30, 51, 54, 56, 57, 58, 107], "ensur": [30, 32, 34, 44, 48, 51, 54, 56, 57, 58, 73, 89, 107, 159, 258, 259, 262], "guarante": [30, 41, 42, 43, 49, 51, 54, 56, 57, 58, 107, 265], "pickl": [30, 51, 54, 56, 57, 58, 107], "get_paramet": [30, 51, 54, 56, 57, 58], "sai": [30, 51, 54, 56, 57, 58, 263, 266], "net_b": [30, 51, 54, 56, 57, 58], "net_c": [30, 51, 54, 56, 57, 58], "conv": [30, 51, 54, 56, 57, 58, 115, 258], "conv2d": [30, 51, 54, 56, 57, 58, 115, 265], "16": [30, 51, 54, 56, 57, 58, 258, 259, 262], "kernel_s": [30, 51, 54, 56, 57, 58, 115, 116, 117, 258, 265], "stride": [30, 51, 54, 56, 57, 58, 115, 116, 117, 124, 258, 265], "diagram": [30, 51, 54, 56, 57, 58], "show": [30, 51, 54, 56, 57, 58, 257, 259, 262, 265], "itself": [30, 51, 54, 56, 57, 58, 176, 259], "degre": [30, 51, 54, 56, 57, 58], "named_modul": [30, 51, 54, 56, 57, 58], "o": [30, 51, 54, 56, 57, 58, 258], "transit": [30, 39, 51, 54, 56, 57, 58, 158, 257, 262], "half": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176, 257], "ipu": [30, 51, 54, 56, 57, 58], "strict": [30, 51, 54, 56, 57, 58, 103], "descend": [30, 51, 54, 56, 57, 58, 103], "exactli": [30, 51, 54, 56, 57, 58, 65, 103, 257], "persist": [30, 51, 54, 56, 57, 58, 103, 113, 176], "enforc": [30, 48, 51, 54, 56, 57, 58, 103, 155, 262], "missing_kei": [30, 51, 54, 56, 57, 58, 103], "unexpected_kei": [30, 51, 54, 56, 57, 58, 103], "namedtupl": [30, 51, 54, 56, 57, 58, 103], "duplic": [30, 48, 51, 54, 56, 57, 58, 167, 169, 176], "l": [30, 51, 54, 56, 57, 58, 188, 259, 262], "idx": [30, 51, 54, 56, 57, 58], "named_buff": [30, 51, 54, 56, 57, 58], "remove_dupl": [30, 51, 54, 56, 57, 58, 176], "prepend": [30, 51, 54, 56, 57, 58, 176], "running_var": [30, 51, 54, 56, 57, 58], "named_children": [30, 51, 54, 56, 57, 58], "conv4": [30, 51, 54, 56, 57, 58], "conv5": [30, 51, 54, 56, 57, 58], "memo": [30, 51, 54, 56, 57, 58], "named_paramet": [30, 51, 54, 56, 57, 58, 176], "register_backward_hook": [30, 51, 54, 56, 57, 58], "removablehandl": [30, 51, 54, 56, 57, 58], "deprec": [30, 51, 54, 56, 57, 58, 103, 266], "favor": [30, 51, 54, 56, 57, 58, 259], "register_full_backward_hook": [30, 51, 54, 56, 57, 58], "register_buff": [30, 51, 54, 56, 57, 58, 176], "running_mean": [30, 51, 54, 56, 57, 58, 176], "alongsid": [30, 51, 54, 56, 57, 58, 176], "num_featur": [30, 51, 54, 56, 57, 58, 176], "register_forward_hook": [30, 51, 54, 56, 57, 58, 122, 136], "with_kwarg": [30, 51, 54, 56, 57, 58], "posit": [30, 32, 33, 34, 35, 39, 40, 51, 54, 56, 57, 58, 81, 82, 97, 98, 100, 103, 104, 132, 254, 259, 262], "signatur": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 160, 176, 254, 257, 262], "possibli": [30, 51, 54, 56, 57, 58, 115, 143, 148, 151, 152, 153, 157, 224, 259, 262, 266], "register_module_forward_hook": [30, 51, 54, 56, 57, 58], "register_forward_pre_hook": [30, 51, 54, 56, 57, 58], "invok": [30, 51, 54, 56, 57, 58], "And": [30, 51, 54, 56, 57, 58], "forward_pr": [30, 51, 54, 56, 57, 58], "register_module_forward_pre_hook": [30, 51, 54, 56, 57, 58], "grad_input": [30, 51, 54, 56, 57, 58], "grad_output": [30, 51, 54, 56, 57, 58], "subsequ": [30, 51, 54, 56, 57, 58], "technic": [30, 51, 54, 56, 57, 58, 258], "caller": [30, 51, 54, 56, 57, 58], "register_module_full_backward_hook": [30, 51, 54, 56, 57, 58], "register_full_backward_pre_hook": [30, 51, 54, 56, 57, 58], "backward_pr": [30, 51, 54, 56, 57, 58], "register_module_full_backward_pre_hook": [30, 51, 54, 56, 57, 58], "register_load_state_dict_post_hook": [30, 51, 54, 56, 57, 58], "incompatible_kei": [30, 51, 54, 56, 57, 58], "thrown": [30, 51, 54, 56, 57, 58], "clear": [30, 51, 54, 56, 57, 58, 216], "register_modul": [30, 51, 54, 56, 57, 58, 255], "alia": [30, 51, 54, 56, 57, 58], "register_paramet": [30, 51, 54, 56, 57, 58], "register_state_dict_pre_hook": [30, 51, 54, 56, 57, 58], "keep_var": [30, 51, 54, 56, 57, 58, 103], "made": [30, 41, 42, 43, 49, 51, 54, 56, 57, 58, 150, 257, 258, 263], "requires_grad_": [30, 51, 54, 56, 57, 58], "autograd": [30, 51, 54, 56, 57, 58, 103], "freez": [30, 51, 54, 56, 57, 58], "finetun": [30, 51, 54, 56, 57, 58], "gan": [30, 51, 54, 56, 57, 58], "share_memori": [30, 51, 52, 54, 56, 57, 58, 257], "share_memory_": [30, 51, 54, 56, 57, 58, 265], "destin": [30, 51, 54, 56, 57, 58, 103, 113], "averag": [30, 51, 54, 56, 57, 58, 103, 107, 150, 170, 171, 222, 257, 259], "shallow": [30, 51, 54, 56, 57, 58, 103], "pleas": [30, 51, 54, 56, 57, 58, 103, 252], "detach": [30, 51, 54, 56, 57, 58, 103, 189, 190, 191, 192, 257], "non_block": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "memory_format": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "channels_last": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "Its": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 107, 153, 176, 193], "complex": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176, 257, 258], "integr": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 119, 129, 153, 176, 262, 263], "unchang": [30, 51, 54, 56, 57, 58, 76, 77, 89, 99, 103, 106, 153, 176, 221, 257], "tri": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "pin": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "4d": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "ignore_w": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "1913": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "3420": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "5113": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "2325": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "torch_doctest_cuda1": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "gpu1": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "1914": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "5112": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "2324": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "float16": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "cdoubl": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "3741": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176, 258], "j": [30, 32, 44, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176, 255], "2382": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "5593": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "4443": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "complex128": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "6122": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "1150": [30, 51, 54, 56, 57, 58, 76, 89, 99, 103, 106, 153, 176], "to_empti": [30, 51, 54, 56, 57, 58], "dst_type": [30, 51, 54, 56, 57, 58], "xpu": [30, 51, 54, 56, 57, 58], "set_to_non": [30, 51, 54, 56, 57, 58], "unidimension": 31, "keepdim": 31, "user_regist": 31, "priori": 31, "definit": [31, 49], "uniqu": 31, "discretebox": [31, 266], "discretetensorspec": [31, 251, 266], "alpha": [32, 34, 44, 115, 168, 178, 180, 257, 265], "ep": [32, 34, 44, 107, 150, 165, 181, 222, 257], "1e": [32, 34, 44, 107, 120, 123, 132, 139, 257, 258, 259], "08": [32, 34, 44, 258, 259, 262], "collate_fn": [32, 33, 34, 35, 39, 40, 265], "prefetch": [32, 33, 34, 35, 39, 40, 257, 258], "schaul": [32, 44], "quan": [32, 44], "antonogl": [32, 44], "silver": [32, 44], "2015": [32, 44], "arxiv": [32, 44, 73, 89, 116, 117, 118, 119, 122, 123, 124, 129, 131, 133, 134, 137, 138, 150, 164, 169, 170, 171, 172, 173, 174, 177, 180, 181, 189, 194, 201, 230, 233, 238, 243, 257, 263], "ab": [32, 44, 89, 107, 123, 124, 129, 131, 133, 134, 137, 138, 164, 170, 171, 172, 173, 174, 177, 180, 230, 238, 257, 263], "1511": [32, 44, 124], "05952": [32, 44], "expon": [32, 34, 44], "\u03b1": [32, 34, 44], "determin": [32, 34, 39, 44, 89, 106, 150, 258], "delta": [32, 34, 44, 139, 151, 154, 251, 254], "null": [32, 34, 44, 72], "max_siz": [32, 33, 34, 35, 41, 43, 49], "1_000": [32, 33, 34, 35], "merg": [32, 33, 34, 35, 39, 40, 262], "mini": [32, 33, 34, 35, 39, 40], "style": [32, 33, 34, 35, 39, 40], "decid": [32, 33, 34, 35, 265], "rb": [32, 33, 34, 35, 39, 40, 258, 263, 265], "meth": [32, 33, 34, 35], "incompat": [32, 33, 34, 35], "drop_last": [32, 33, 34, 35, 48], "return_info": [32, 33, 34, 35, 39, 40], "tensordictprioritizedreplaybuff": [32, 251, 265], "simplifi": [32, 262], "manual_se": [32, 33, 34, 35, 77, 86, 143, 149, 150, 262, 265, 266], "info": [32, 33, 34, 35, 39, 40, 51, 54, 56, 57, 58, 69, 70, 108], "_weight": [32, 34, 265], "arrai": [32, 257], "update_prior": [32, 44, 221, 255, 258, 265], "36278465": 32, "insert_transform": [32, 33, 34, 35, 39, 40], "insert": [32, 33, 34, 35, 39, 40, 46, 50, 104], "writer": [33, 35, 39, 40, 46, 251, 259], "randomsampl": [33, 35, 39, 40, 251, 257], "roundrobinwrit": [33, 35, 39, 40, 251], "priority_kei": [34, 35, 167, 168, 169, 174, 178, 180, 182, 265], "td_error": [34, 35, 166, 167, 168, 169, 174, 178, 180, 182, 257, 265], "reduct": [34, 44], "prioritizedreplaybuff": [34, 251, 265], "update_tensordict_prior": [34, 257, 265], "prioritizedsampl": [34, 35, 251, 257], "min": [34, 44, 139, 140, 141, 165, 168, 178, 180, 258, 259], "median": [34, 44, 151, 154], "len": [34, 115, 127, 257, 262, 263, 265], "include_info": [34, 35, 39, 40], "kw": [35, 46], "int32": [35, 67], "from_env": 39, "use_timeout_as_don": 39, "env_kwarg": [39, 247, 248, 257], "metadata": [39, 259, 266], "reconstruct": [39, 171, 257, 266], "timeout": 39, "recov": [39, 147, 149, 150, 155, 174, 261], "regard": [39, 122, 164, 169, 177, 257, 259, 262], "get_dataset": 39, "qlearning_dataset": 39, "less": [39, 56, 247, 248, 254, 259, 265], "left": [39, 89, 91, 100, 102, 106, 258, 259], "terminate_on_end": 39, "possess": 39, "unexpectedli": 39, "episod": [39, 95, 114, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 258], "absent": 39, "traj_split": 39, "observationnorm": [39, 107, 249, 257, 258, 259, 265], "maze2d": 39, "umaz": 39, "loc": [39, 86, 94, 125, 132, 140, 141, 144, 145, 146, 151, 154, 156, 228, 230, 238, 240, 243, 249, 257, 258, 259, 265], "128": [39, 117, 258, 259, 262, 263], "public": [40, 89, 106], "dua": 40, "graff": 40, "2017": 40, "uci": 40, "archiv": 40, "ic": 40, "edu": 40, "ml": 40, "sklearn": 40, "adult_num": [40, 68], "adult_onehot": [40, 68], "mushroom_num": [40, 68], "mushroom_onehot": [40, 68], "covertyp": [40, 68], "shuttl": [40, 68], "magic": [40, 68], "scratch_dir": [41, 257], "memmap": [41, 57, 58, 107, 221], "attach": [41, 42, 43, 49, 258], "entiti": [41, 42, 43, 49], "alloc": [42, 257], "max_capac": [44, 257], "uniformli": [45, 266], "roundrobin": 46, "piec": [46, 50, 257, 258, 259, 262], "consum": [48, 258, 259], "incomplet": 48, "unlik": [48, 169, 177, 258, 265], "fresh": 48, "caution": [48, 109, 266], "shuffl": 48, "haven": [48, 263], "remain": [48, 77, 131], "draw": 48, "__len__": 49, "_inplace_upd": [51, 56, 57, 58, 59, 60, 68, 69, 70, 103], "_batch_lock": [51, 56, 57, 58, 59, 60, 68, 69, 70, 103], "run_type_check": [51, 55], "batch_lock": [51, 53, 54, 56, 57, 58, 99, 103, 262], "environn": [51, 54, 55, 56, 57, 58, 103], "immut": [51, 54, 56, 57, 58, 91, 103, 230, 238], "fake_tensordict": [51, 54, 56, 57, 58, 258], "fake": [51, 54, 56, 57, 58, 257, 258], "overridden": [51, 54, 56, 57, 58, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161], "recip": [51, 54, 56, 57, 58, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161], "afterward": [51, 54, 56, 57, 58, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161, 266], "silent": [51, 54, 56, 57, 58, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 134, 137, 138, 147, 149, 150, 161], "rand_act": [51, 54, 56, 57, 58], "_step": [51, 54, 56, 57, 58, 81, 91], "privat": [51, 54, 56, 57, 58, 262, 266], "_reset": [51, 54, 55, 56, 57, 58, 114, 129], "callback": [51, 54, 56, 57, 58], "auto_reset": [51, 54, 56, 57, 58, 262], "auto_cast_to_devic": [51, 54, 56, 57, 58], "break_when_any_don": [51, 54, 56, 57, 58], "return_contigu": [51, 54, 56, 57, 58, 109, 261], "soon": [51, 54, 56, 57, 58], "lazystackedtensordict": [51, 54, 55, 56, 57, 58, 114, 129, 261, 265, 266], "concomitt": [51, 54, 56, 57, 58], "workspac": [51, 54, 56, 57, 58], "creator": [52, 231, 232, 247, 248, 249], "substitut": [52, 107], "vecnorm": [52, 249], "env_creat": [52, 257], "test_env1": 52, "_td": 52, "observation_count": [52, 266], "test_env2": 52, "sleep": [52, 266], "p1": 52, "p2": 52, "join": [52, 230, 238, 258, 259], "9934": 52, "env_str": 53, "discard": [54, 113, 206, 266], "info_dict_read": 54, "set_info_dict_read": 54, "put": [54, 107, 249, 258, 259, 262], "f": [54, 163, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 257, 258, 259, 262, 266], "read_act": 54, "read_don": 54, "reader": [54, 258], "frame_skip": [54, 61, 62, 63, 66, 82, 217, 220, 227, 255, 257, 258, 259, 265], "broken": [54, 109], "read_ob": 54, "dictat": [54, 151, 154, 257, 262], "inner": [54, 77, 255, 258, 259, 266], "read_reward": 54, "total_reward": [54, 258], "step_reward": 54, "far": [54, 125, 140, 141, 262, 266], "baseinfodictread": 54, "info_dict": 54, "hoc": 54, "manner": [54, 89, 257, 258, 259, 261, 262], "dict_read": 54, "default_info_dict_read": 54, "my_info_kei": 54, "some_env": 54, "limit": [55, 257, 258, 262], "safeti": 55, "constraint": [55, 259], "behav": [55, 65, 135, 174, 263], "unboundedcontinuoustensorspec": [55, 99, 114, 143, 153, 156, 157, 251, 259, 262, 266], "mymbenv": [55, 114, 129], "world_model": [55, 114, 129, 171], "super": [55, 114, 122, 129, 157, 160, 257, 262, 265], "hidden_observ": [55, 114, 129], "mlp": [55, 114, 115, 116, 117, 118, 119, 126, 129, 144, 148, 230, 238, 240, 243, 251, 258, 261, 263, 265], "worldmodelwrapp": [55, 114, 129, 251], "activation_class": [55, 114, 115, 116, 117, 118, 119, 123, 124, 127, 129, 258, 265], "relu": [55, 114, 129, 132, 163], "activate_last_lay": [55, 114, 119, 127, 129], "depth": [55, 114, 115, 116, 117, 118, 119, 123, 124, 127, 129, 133, 134, 148, 258, 261], "equal": [56, 57, 58, 85, 86, 115, 121, 127, 185, 215, 247, 248, 257, 259, 263], "readthedoc": 56, "en": 56, "python_interfac": 56, "num_work": [56, 57, 58, 257, 258], "thread": 56, "task_id": 56, "my_env_fun": [57, 58], "custom_attribute_list": [57, 58], "custom_attribut": [57, 58], "custom_method_list": [57, 58], "custom_method": [57, 58], "deploi": [57, 58], "creation": [57, 58, 257, 266], "slight": [57, 58, 258], "overhead": [57, 58], "share_individual_td": [57, 58], "lazi": [57, 58, 89, 130, 155, 156, 257, 258, 261, 266], "shared_memori": [57, 58], "policy_proof": [57, 58], "ll": [57, 58, 257, 258, 259, 266], "hidden": [57, 58, 123, 126, 133, 134, 137, 138, 144, 145, 146, 153, 156, 230, 238, 261, 265], "allow_step_when_don": [57, 58], "update_kwarg": [57, 58], "googl": [59, 60, 259], "ant": [59, 60, 263], "get_environ": 60, "87": [60, 258, 262, 263], "acrobot": [60, 266], "fetch": [60, 263, 266], "dm_control": [61, 62, 257, 261, 266], "task_nam": 61, "cheetah": [61, 62, 257, 266], "placehold": [65, 103], "secur": 65, "jumanji": [66, 67], "snake": [66, 67], "6x6": [66, 67], "td1": [67, 164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 257], "12x12": 67, "tsp50": 67, "tsp100": 67, "dataset_nam": 68, "empti": [68, 89, 100, 103, 106, 257, 262], "106": [68, 262], "vma": [69, 70], "scenario": [69, 70, 257, 262], "flock": [69, 70], "continuous_act": [69, 70], "n_agent": [69, 70], "cohesion_rew": 69, "collision_rew": 69, "separation_rew": 69, "velocity_rew": 69, "18": [69, 70, 258, 259, 262, 266], "agent_collision_rew": 70, "agent_distance_rew": 70, "model_bas": [71, 114, 129], "transform_reward_spec": [72, 76, 78, 91, 93, 94, 102, 104], "success": [73, 102, 258, 262, 265], "account": [73, 258], "movement": 73, "veloc": [73, 262, 266], "propos": [73, 128, 173, 181, 240, 243], "pdf": [73, 116, 117, 118, 119, 122, 150, 169, 178, 181, 189, 194, 201, 233, 240, 243], "1312": [73, 258], "5602": 73, "_buffer": [73, 100], "transform_observation_spec": [73, 74, 75, 76, 78, 79, 81, 83, 84, 86, 91, 92, 95, 96, 98, 99, 100, 101, 102, 104, 262], "del_kei": [74, 261, 262], "unsqueeze_if_oor": 74, "observation_posit": 74, "observation_veloc": 74, "delet": 74, "unsqueez": [74, 101, 104, 126, 257, 262], "key1": [74, 215, 223], "key2": [74, 215, 223], "crop": [75, 90, 207], "center": [75, 207], "width": [75, 92], "height": [75, 92], "squar": [75, 125, 140, 141, 207], "rewardsc": [76, 103, 257, 258], "rewardclip": 76, "transformed_env": [76, 102, 103], "tranform": [76, 79, 84, 96, 98, 102, 105], "dest": [76, 89, 106, 153], "transform_input_spec": [76, 77, 78, 86, 91, 98, 102, 104], "num_actions_effect": 77, "max_act": 77, "action_kei": [77, 114, 128, 129, 147, 149, 150], "include_forward": 77, "dimension": [77, 189, 194, 201], "num_act": [77, 168], "action_out": 77, "_call": [77, 81, 262], "inde": [77, 259, 262], "expos": [78, 155, 258], "extern": [78, 266], "excluded_kei": 79, "finit": 80, "first_dim": 81, "last_dim": 81, "allow_positive_dim": [81, 104], "flatten": [81, 221], "th": [81, 104, 262], "permit": [81, 104], "exclus": [81, 249], "frameskip": 81, "repeatedli": [82, 259], "init_kei": 84, "is_init": 84, "tracker": 84, "noop": [85, 265], "30": [85, 137, 138, 258, 259, 262], "op": [85, 147, 149, 226], "randomli": [85, 86, 99, 151, 154, 262], "noop_max": 85, "out_keys_inv": [86, 87, 91, 102, 262], "standard_norm": [86, 94, 257, 258], "affin": [86, 94], "layer": [86, 107, 115, 116, 117, 123, 127, 130, 131, 133, 134, 142, 258, 259, 263], "normal": [86, 107, 115, 125, 127, 132, 140, 141, 147, 151, 154, 165, 175, 177, 220, 222, 249, 255, 266], "set_default_tensor_typ": 86, "doubletensor": 86, "isclos": 86, "next_ob": [86, 189, 190, 191, 192, 265], "rubric": [86, 156], "init_stat": [86, 257, 258, 259], "3752e": 86, "01": [86, 150, 161, 164, 165, 175, 177, 258, 259, 262, 263, 264], "5087e": 86, "03": [86, 258, 259, 262, 263, 264], "9294e": 86, "9636": 86, "5608": [86, 262], "6408": 86, "num_it": [86, 258, 259], "reduce_dim": [86, 257, 258, 259], "cat_dim": [86, 257, 258, 259], "keep_dim": [86, 258], "constant": [86, 255, 257, 259, 266], "statist": [86, 107, 179, 249, 257, 258, 259, 266], "approach": [86, 257, 259, 266], "gaussian": [86, 99, 114, 129, 130, 131, 147, 259], "empir": [86, 114, 129, 151, 154, 257, 259], "3d": 86, "third": 86, "r3m": [89, 263], "resnet": [89, 106], "visual": [89, 106, 259, 262], "embed": [89, 105, 106, 143, 144, 145, 146, 148, 152, 153, 157, 263], "ego4d": [89, 106], "paper": [89, 106, 173, 240, 243, 257, 259], "univers": [89, 106], "suraj": 89, "nair": 89, "aravind": 89, "rajeswaran": 89, "vikash": [89, 106], "kumar": [89, 106], "chelsea": 89, "finn": 89, "abhinav": 89, "gupta": 89, "2203": [89, 129, 263], "12601": [89, 263], "_init": [89, 257], "snippet": [89, 257], "resnet50": [89, 106, 263], "model_nam": [89, 106, 210], "resnet34": 89, "resnet18": 89, "r3m_vec": [89, 263], "feed": [89, 106, 257], "244": [89, 106, 262], "stack_imag": [89, 106], "tread": [89, 106], "separet": [89, 106], "hub": [89, 106, 263], "cach": [89, 103, 106, 216, 263], "resnet50_weight": [89, 106], "imagenet1k_v1": [89, 106], "download_path": [89, 106], "tensor_pixels_kei": [89, 106], "sub_seq_len": 90, "sample_dim": [90, 257], "mask_kei": 90, "primarili": 90, "hesit": 90, "request": 90, "robust": 90, "vari": 90, "mix": [90, 257], "NOT": 90, "improp": 90, "create_copi": 91, "renam": [91, 113, 257], "stuff": 91, "braxenv": [91, 251], "newnam": 91, "transform_output_spec": [91, 102], "untouch": [91, 102], "transform_done_spec": [91, 102], "interpol": [92, 258], "bilinear": 92, "clamp_min": [93, 150], "clamp_max": 93, "clip_min": 93, "scalar": [93, 117, 119, 130, 131, 147, 149, 150, 161, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 258, 262], "clip_max": 93, "episode_": 95, "reward1": 95, "reward2": 95, "ho": 95, "excludetransform": 96, "squeeze_dim": 97, "recognis": 98, "primer": 99, "default_valu": 99, "drawn": [99, 151, 154, 259], "unit": [99, 114, 123, 133, 134, 137, 138, 259], "transfomedenv": 99, "lock": [99, 107, 262], "mykei": 99, "dtype_or_devic": 99, "pool": 100, "255": [101, 262], "ri": 101, "randint": 101, "principl": 102, "cattransform": 102, "notabl": 102, "cache_spec": 103, "anymor": [103, 153], "unsqueeze_dim": [104, 262], "danger": 104, "vip": [105, 106, 263], "toward": 106, "implicit": [106, 174], "jason": 106, "ma": 106, "shagun": 106, "sodhani": 106, "dinesh": 106, "jayaraman": 106, "osbert": 106, "bastani": 106, "ami": 106, "zhang": 106, "vip_vec": 106, "shared_td": 107, "decai": [107, 147, 149, 222, 257, 258, 266], "9999": [107, 262], "0001": [107, 123, 132, 259, 262], "fly": [107, 175, 254, 259, 262, 266], "to_observation_norm": 107, "99": [107, 129, 172, 184, 188, 245, 257, 258, 259, 262, 263, 265], "underflow": [107, 222], "trail": 107, "build_td_for_shared_vecnorm": 107, "memmori": 107, "memmap_": 107, "queue": 107, "td_share": 107, "state_dim": [108, 137, 138], "action_dim": [108, 116, 118, 257, 261], "gsde": [108, 178, 249], "func": 108, "gsdemodul": 108, "check_dtyp": 109, "short": [109, 258, 259], "discrep": [109, 164, 165, 166, 167, 175, 177, 179], "imposs": 109, "heterogen": [109, 257, 258], "probabilistictdmodul": [112, 127, 151, 154, 188, 220], "next_tensordict": 113, "keep_oth": [113, 262], "exclude_reward": 113, "exclude_don": 113, "exclude_act": 113, "THe": 113, "next_": 113, "funtion": [113, 262], "planning_horizon": [114, 129], "optim_step": [114, 129, 258], "num_candid": [114, 129], "top_k": [114, 129], "reward_kei": [114, 129, 218, 222], "cross": 114, "entropi": [114, 164, 165, 168, 175, 177, 178, 180], "botev": 114, "et": 114, "al": [114, 235, 266], "2013": 114, "cem": 114, "plan": [114, 128, 129], "varianc": [114, 125, 132, 140, 141, 254, 257, 259], "rank": 114, "k": 114, "repeat": [114, 259, 262], "maximis": [114, 116, 118, 129, 257, 258, 259, 262], "horizon": [114, 129, 259], "modelbasedenv": [114, 129], "mpc": [114, 128, 129], "candid": [114, 129], "modelbasedenvbas": [114, 128, 129, 251], "safemodul": [114, 128, 144, 146, 154, 231, 232, 245, 251, 265], "next_hidden_observ": 114, "num_cel": [115, 116, 117, 118, 119, 123, 124, 127, 144, 258, 259, 265], "elu": [115, 116, 117, 118, 119, 123, 124, 258, 265], "activation_kwarg": [115, 127], "norm_class": [115, 116, 117, 127], "norm_kwarg": [115, 127], "bias_last_lay": [115, 116, 117, 118, 119, 124, 127], "aggregator_class": [115, 116, 117, 258, 265], "squashdim": [115, 116, 265], "aggregator_kwarg": [115, 116, 117, 258], "squeeze_output": [115, 116, 117, 258], "convolut": [115, 116, 117], "neural": [115, 153, 258, 259, 262, 266], "produc": [115, 127, 135, 144, 146, 207, 259, 266], "cell": [115, 127, 259], "kernel": [115, 124, 126], "device_typ": [115, 116, 117, 118, 119, 124, 127, 130, 131], "cnet": 115, "34": [115, 127, 258, 259, 262], "35": [115, 127, 258, 259, 262, 263], "rectangular": 115, "conv_net_kwarg": [116, 117], "mlp_net_kwarg": [116, 117, 118], "use_avg_pool": [116, 117], "WITH": [116, 117, 118, 119, 150, 181, 233], "1509": [116, 117, 118, 119, 129, 150, 173, 181, 233, 257], "02971": [116, 117, 118, 119, 150, 181, 233, 257], "convnet": [116, 251, 265], "ndims_in": 116, "avgpool": [116, 117], "adaptiveavgpool2d": [117, 258], "400": [118, 119, 262], "300": [118, 119, 230, 238, 262], "mlp_net_kwargs_net1": 119, "mlp_net_kwargs_net2": 119, "atol": [120, 139], "06": [120, 139, 258, 259, 262], "rtol": [120, 139], "batch_shap": [120, 139], "event_shap": [120, 139], "absolut": [120, 139, 257], "toler": [120, 139], "log_prob": [120, 135, 141], "densiti": [120, 135, 141], "mass": [120, 135, 141, 262], "rsampl": [120, 135, 154], "sample_shap": [120, 135], "dqnet": 121, "atom": 121, "action_spac": [122, 136, 148, 152], "var_num": [122, 136], "perspect": [122, 169, 259], "1707": [122, 169, 177, 230, 238], "06887": [122, 169], "mult_one_hot": [122, 136, 148, 152], "functional_modul": [122, 136, 152, 153, 156, 257], "make_funct": [122, 136, 151, 152, 153, 156, 157, 159, 265], "tensordict_modul": [122, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "nbin": [122, 148], "customdistributionalqv": 122, "log_softmax": 122, "one_hot": [122, 136, 148, 152], "qvalue_actor": [122, 136, 148, 152], "std_bia": 123, "std_min_val": 123, "belief": [123, 133, 137, 138], "1912": [123, 170, 171, 172], "01603": [123, 170, 171, 172], "softplu": [123, 132, 161, 162, 163], "out_features_valu": 124, "cnn_kwarg": [124, 258], "mlp_kwarg": [124, 126, 258], "duel": 124, "cnn": [124, 258, 265], "06581": 124, "512": [124, 258, 262], "upscal": [125, 140, 141], "tanh_loc": [125, 140, 141], "event_dim": [125, 139, 140], "ultim": [125, 140, 141], "poor": [125, 140, 141], "explos": [125, 140, 141], "switch": [125, 140, 141], "sigma": [125, 140, 141, 147, 150, 259], "formula": [125, 140, 141, 164, 165, 175, 177, 254, 259], "lstm_kwarg": 126, "embedd": 126, "next_observ": [126, 261], "time_step": 126, "2d": 126, "hidden_s": 126, "input_s": 126, "hidden0_in": 126, "hidden1_in": 126, "hidden0_out": 126, "hidden1_out": 126, "single_bias_last_lay": 127, "layer_class": 127, "layer_kwarg": 127, "perceptron": 127, "seamless": 127, "lazylinear": [127, 259, 262, 263, 265], "42": [127, 258, 259, 262], "noisylinear": [127, 130, 251, 258], "noisylazylinear": [127, 251], "At": [128, 258, 259, 261, 262, 263], "mpcplanner": 128, "tensordict_out": [128, 266], "advantage_modul": [129, 259], "temperatur": [129, 174], "mppi": 129, "covari": 129, "william": [129, 179], "aldrich": 129, "theodor": 129, "01149": 129, "hansen": 129, "wang": 129, "su": 129, "04955": 129, "ndunboundedcontinuoustensorspec": [129, 156], "valueoper": [129, 144, 145, 146, 164, 165, 175, 177, 179, 245, 251, 257, 259], "tdlambdaestim": [129, 251, 257], "value_net": [129, 189, 190, 191, 192, 259], "adv": 129, "95": [129, 184, 258, 259, 262, 263], "std_init": [130, 131], "term": [130, 131, 163, 164, 168, 226, 258, 259], "matrix": [130, 131], "initialize_paramet": 130, "isol": 130, "1706": 131, "10295v3": 131, "induc": 131, "aid": 131, "emploi": 131, "scale_map": 132, "biased_softplus_1": 132, "scale_lb": [132, 137, 138], "exp": [132, 163], "module_norm": 132, "decod": 133, "1803": [133, 134], "10122": [133, 134], "rnn_hidden": 133, "latent": 134, "logit": 135, "excacli": 135, "greedi": [136, 149, 258], "hidden_dim": [137, 138], "posterior": [137, 171], "rssm": [137, 138, 171], "1811": [137, 138, 262], "04551": [137, 138], "obs_embed": 137, "rnn_hidden_dim": 138, "dream": 138, "recurr": [138, 258], "tanhtransform": 140, "translat": [143, 151], "character": [143, 148, 151, 152, 153], "overflow": [143, 148, 151, 152, 153, 154], "td_modul": [143, 144, 145, 146, 151, 153, 154, 156, 157, 265], "3635": 143, "0340": 143, "1476": 143, "3911": 143, "1664": [143, 258], "5455": [143, 262], "2247": 143, "4583": 143, "2916": 143, "2160": 143, "5337": 143, "5193": 143, "grad_fn": [143, 149, 265], "addmmbackward0": 143, "common_oper": [144, 146], "policy_oper": [144, 145, 146], "value_oper": [144, 145, 146], "actorvalueoper": [144, 230, 238, 251], "get_policy_oper": [144, 145, 146, 230, 238], "alon": [144, 145, 146], "tdmodul": [144, 145, 146, 245], "get_critic_oper": 144, "probabilisticactor": [144, 145, 146, 168, 174, 180, 251, 257, 259], "tanhnorm": [144, 145, 146, 151, 156, 251, 259, 265], "normalparamwrapp": [144, 145, 146, 151, 156, 251, 265], "module_hidden": [144, 146], "td_module_hidden": [144, 146], "module_act": [144, 146], "td_module_act": [144, 145, 146], "distribution_class": [144, 145, 146, 151, 154, 156, 257, 259, 265], "return_log_prob": [144, 145, 146, 151, 154, 156, 259, 265], "module_valu": [144, 145, 146], "td_module_valu": [144, 145, 146], "state_action_valu": [144, 157, 180, 188, 233, 240, 243, 245, 257, 265], "td_clone": [144, 145, 146], "sample_log_prob": [144, 145, 146, 151, 154, 156, 230, 238, 240, 259, 265], "tensordictmodulewrapp": [144, 231, 232, 245], "get_value_oper": [144, 145, 146, 230, 238], "action_modul": 145, "state_valu": [145, 146, 157, 180, 189, 190, 191, 192, 194, 195, 197, 199, 201, 202, 204, 230, 238, 243, 257, 259], "safesequenti": [145, 146, 251], "qualiti": 146, "actorcriticoper": [146, 230, 238, 251], "embeddig": 146, "refet": 146, "actorcriticwrapp": [146, 251, 257], "sigma_init": 147, "sigma_end": 147, "annealing_num_step": [147, 149, 150, 257, 258], "po": [147, 149], "epsilon": [147, 149, 150, 181, 222, 258, 259], "eps_init": [149, 150, 258], "eps_end": [149, 150, 258], "explorative_polici": [149, 150], "0000": [149, 259, 262, 265], "9055": 149, "9277": [149, 262], "6295": 149, "2532": 149, "addbackward0": [149, 265], "theta": [150, 259, 262], "15": [150, 170, 258, 259, 262], "mu": [150, 259], "dt": [150, 262], "x0": 150, "sigma_min": 150, "n_steps_ann": 150, "ornstein": 150, "uhlenbeck": 150, "ou": [150, 257], "introduc": [150, 257], "auto": [150, 168, 178, 180, 254], "correl": 150, "sort": 150, "prev_nois": 150, "current_sigma": 150, "sqrt": 150, "ou_prev_nois": 150, "ou_step": 150, "increas": 150, "anneal": 150, "_ou_prev_nois": 150, "_ou_step": 150, "probabilist": [151, 259, 265], "default_interaction_mod": [151, 154], "interaction_mod": [151, 154], "set_interaction_mod": [151, 154], "distribution_kwarg": [151, 154, 259], "cache_dist": [151, 154], "diverg": [151, 154, 171, 175], "n_empirical_estim": [151, 154], "functionalmodul": [153, 159], "functionalmodulewithbuff": [153, 159], "grucel": 153, "td_fmodul": 153, "td_function": 153, "td_state": 153, "vmap": [153, 156, 265], "ensembl": [153, 178], "params_repeat": 153, "td_vmap": [153, 156], "irrespect": [153, 154], "random_sampl": [153, 154], "probabilistictensordictmodul": [154, 155, 265], "rule": [154, 259], "get_dist": [154, 155], "__call__": [154, 255], "suppli": 154, "fist": 154, "partial_toler": [155, 156, 261], "probabilistictensordictsequenti": [155, 164, 165, 175, 177, 179, 231, 232, 265], "tensordictsequenti": [155, 257, 261, 263, 265], "who": [155, 156], "AND": [155, 156], "scan": [155, 156], "tensordictsequenci": 156, "tensordictsequ": 156, "safeprobabilisticmodul": [156, 251], "spec1": 156, "net1": 156, "module1": 156, "td_module1": 156, "spec2": 156, "module2": 156, "td_module2": 156, "custommodul": [157, 160], "cat": [157, 265], "transition_model": 158, "reward_model": 158, "imaginari": 158, "imagin": 158, "get_reward_oper": 158, "get_transition_model_oper": 158, "_functorch": 159, "wrapper_typ": 159, "mislead": 160, "other_kei": 160, "typeerror": 160, "min_val": [161, 163], "bias": [161, 254, 257], "_bia": 161, "invert": [162, 259], "surject": 163, "expln": 163, "biased_softplu": [163, 251], "beggin": 163, "biased_softplus_": 163, "syntax": [163, 257], "condit": [163, 257, 262], "met": [163, 262], "advantage_kei": [164, 165, 175, 177, 179, 189, 190, 191, 192, 259], "value_target_kei": [164, 165, 175, 177, 179, 189, 190, 191, 192, 259], "value_target": [164, 165, 175, 177, 179, 189, 190, 191, 192, 259], "entropy_bonu": [164, 165, 175, 177, 259], "samples_mc_entropi": [164, 165, 175, 177], "entropy_coef": [164, 165, 175, 177, 259], "critic_coef": [164, 165, 175, 177, 259], "loss_critic_typ": [164, 165, 175, 177, 179, 259], "smooth_l1": [164, 165, 166, 167, 168, 174, 175, 177, 178, 179, 180, 182, 185, 259], "1602": 164, "01783v2": 164, "favour": [164, 165, 175, 177], "mont": [164, 165, 175, 177, 257], "carlo": [164, 165, 175, 177, 257], "l1": [164, 165, 166, 167, 168, 175, 177, 178, 179, 182, 185, 257], "l2": [164, 165, 166, 167, 168, 171, 172, 175, 177, 178, 179, 182, 185, 257], "throughout": [164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 259, 266], "essenti": [164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 258, 262], "make_value_estim": [164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 183, 254, 257], "value_typ": [164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 184, 257], "valueestim": [164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 184, 251, 254, 257], "hyperparam": [164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 257, 262], "enum": [164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 184, 257], "default_value_kwarg": [164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 251, 257], "dqn_loss": [164, 166, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 182, 183], "dqnloss": [164, 166, 168, 169, 170, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 236, 251, 254, 258], "clip_epsilon": [165, 259], "normalize_advantag": [165, 175, 177], "threshold": [165, 259], "multipli": [165, 168, 175, 177, 178, 180, 222, 257], "actor_network": [166, 168, 174, 178, 180, 182, 257], "value_network": [166, 167, 169, 174, 180, 189, 190, 191, 192, 254, 257, 259], "loss_funct": [166, 167, 168, 174, 178, 180, 182, 185, 257], "delay_actor": [166, 180, 182], "delay_valu": [166, 167, 169, 179, 180, 258], "input_tensordict": [166, 167, 169, 257], "qvalueactor": [167, 251, 258], "qvalue_network": [168, 174, 178, 180, 182], "num_qvalue_net": [168, 174, 178, 180, 182], "alpha_init": [168, 178, 180], "min_alpha": [168, 178, 180], "max_alpha": [168, 178, 180], "fixed_alpha": [168, 178, 180], "target_entropy_weight": 168, "98": [168, 189, 190, 191, 192, 258, 259, 262, 263], "target_entropi": [168, 178, 180], "delay_qvalu": [168, 178, 180, 182], "distributionalqvalueactor": [169, 251], "disctount": 169, "actor_model": 170, "value_model": [170, 172], "model_based_env": 170, "dreamerenv": [170, 251], "imagination_horizon": 170, "discount_loss": [170, 172], "lmbda": [170, 184, 189, 192, 194, 199, 200, 201, 204, 205, 254, 257, 259], "unrol": [170, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205], "lambda_kl": 171, "lambda_reco": 171, "lambda_reward": 171, "reco_loss": 171, "reward_loss": 171, "free_nat": 171, "delayed_clamp": 171, "global_averag": 171, "kl": [171, 175], "nat": 171, "clamp": [171, 224, 262], "value_loss": 172, "fake_data": 172, "loss_modul": [173, 181, 224, 244, 245, 254, 255, 257, 258, 259], "ddpgloss": [173, 181, 234, 245, 251, 257, 265], "sacloss": [173, 181, 242, 251], "td3loss": [173, 181, 251], "value_network_update_interv": 173, "contrast": 173, "06461": 173, "expectil": 174, "2110": 174, "06169": 174, "tau": [174, 257, 258], "antmaz": 174, "sticht": 174, "loss_value_diff": 174, "diff": 174, "dtarg": 175, "decrement": 175, "samples_mc_kl": 175, "penalti": 175, "old_polici": 175, "new_polici": 175, "adapt": [175, 257, 262], "old": [175, 266], "thu": 175, "distanc": [175, 185, 188, 189], "apart": 175, "analyt": 175, "loss_": [176, 219, 254, 257], "defaylt_value_typ": 176, "equip": 176, "convert_to_funct": [176, 257], "expand_dim": 176, "create_target_param": [176, 257], "compare_against": [176, 257], "funs_to_decor": 176, "value_estim": [176, 189, 190, 191, 192, 193, 254, 257, 265], "valueestimatorbas": [176, 251], "blend": 176, "upcom": [176, 197, 198, 199, 200, 202, 203, 204, 205, 257], "proxim": [177, 230, 238, 259], "optimis": [177, 220, 259], "flavour": [177, 265], "constrain": 177, "clipppoloss": [177, 251, 259], "klpenppoloss": [177, 251], "regularis": 177, "06347": [177, 230, 238], "sub_sample_len": 178, "openreview": [178, 240], "ay8zfzm0tdd": [178, 240], "idea": [178, 255], "subsampl": [178, 215, 255], "connectionist": 179, "1992": 179, "doi": 179, "1007": 179, "bf00992696": 179, "1801": [180, 243], "01290": [180, 243], "applic": [180, 262], "1812": 180, "05905": 180, "prod": 180, "n_action": 180, "redqloss": [181, 251], "999": [181, 222, 258], "math": 181, "theta_t": [181, 262], "theta_": [181, 262], "policy_nois": 182, "noise_clip": 182, "td0": [183, 257], "tdlambda": [184, 254, 257], "v2": [185, 197, 198, 199, 200, 202, 203, 204, 205, 230, 233, 238, 240, 243], "strict_shap": 185, "view_a": 185, "next_val_kei": 188, "pred_next_v": 188, "usus": 188, "mse": 188, "q_valu": 188, "target_valu": [188, 254, 257, 265], "n_steps_to_next": 188, "value_next_st": 188, "average_ga": [189, 259], "value_kei": [189, 190, 191, 192, 193, 257], "1506": [189, 194, 201, 266], "02438": [189, 194, 201], "exponenti": [189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 222], "propag": [189, 190, 191, 192, 259], "advang": 189, "gradient_mod": 189, "value_error": [189, 190, 191, 192, 193], "sign": 189, "unused_arg": 189, "target_param": [189, 190, 191, 192, 193, 257], "relev": [189, 190, 191, 192, 193, 262], "94": [189, 192, 258, 259, 262], "unpack": [189, 190, 191, 192], "recur": [189, 190, 191, 192, 193], "average_reward": [190, 191, 192], "aka": [190, 258], "tdestim": [190, 191, 193], "infti": 191, "valuefunctionbas": 193, "next_state_valu": [194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 251], "time_dim": [194, 197, 198, 199, 200, 201, 202, 203, 204, 205], "old_stat": [194, 195, 197, 199, 201, 202, 204], "new_stat": [194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "rolling_gamma": [197, 198, 199, 200, 202, 203, 204, 205], "ti": [197, 198, 199, 200, 202, 203, 204, 205, 258], "event": [197, 198, 199, 200, 202, 203, 204, 205], "g1": [197, 198, 199, 200, 202, 203, 204, 205], "g2": [197, 198, 199, 200, 202, 203, 204, 205], "g3": [197, 198, 199, 200, 202, 203, 204, 205], "g4": [197, 198, 199, 200, 202, 203, 204, 205], "v3": [197, 198, 199, 200, 202, 203, 204, 205], "v4": [197, 198, 199, 200, 202, 203, 204, 205, 257, 259, 263], "out_file_bas": 206, "skip_reset": 206, "dump": 206, "interv": [206, 207, 216, 226, 258, 262], "center_crop": 207, "make_grid": 207, "Will": 207, "grid": 207, "exp_nam": [208, 209, 212, 213, 214, 245, 258], "log_dir": [208, 209, 211, 213, 258], "templat": 208, "csv": [209, 211, 258], "minim": 209, "dependeci": 209, "experiment_nam": [210, 211], "uuid": [210, 258, 266], "date": 210, "logger_typ": 211, "logger_nam": 211, "tensorboard": [211, 213, 265], "wandb": [211, 214, 265], "mlflow": [211, 212], "might": [211, 252, 257, 266], "wandb_kwarg": 211, "mlflow_kwarg": 211, "tracking_uri": 212, "uri": 212, "datastor": 212, "tb_log": 213, "tensoarboard": 213, "sub_traj_len": 215, "min_sub_traj_len": 215, "full": [215, 257, 258, 259, 261, 262, 263, 265, 266], "20": [215, 258, 259, 262, 263, 265, 266], "register_op": [215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 255, 258], "process_optim_batch": [215, 221, 222, 255], "td_out": [215, 223], "_process_optim_batch_hook": [215, 255], "batch_subsampl": 215, "clear_cuda": 216, "pre_optim_step": [216, 255], "counter": [217, 255], "log_pbar": [217, 218, 220, 222, 255, 258], "progress": [217, 218, 220, 224, 255, 258, 266], "bar": [217, 218, 220, 224, 255, 258], "count_fram": 217, "pre_steps_log": [217, 218, 255], "count_frames_log": 217, "lognam": 218, "r_train": [218, 258], "log_reward": [218, 258], "loss_compon": 219, "appl": 219, "omit": [219, 259, 262], "optimizer_hook": 219, "loss_actor": [219, 257], "record_interv": [220, 257, 258], "record_fram": [220, 227, 257, 258], "policy_explor": [220, 245, 257, 258], "log_kei": [220, 258], "suffix": 220, "underestim": 220, "suppos": [220, 255, 266], "set_exploration_mod": [220, 251, 259, 265], "r_evalu": [220, 257], "tensordictreplaybuff": [221, 245, 251, 257, 258], "flatten_tensordict": [221, 258], "max_dim": 221, "rb_trainer": 221, "batch_process": [221, 222, 223, 255], "post_loss": [221, 255], "jitter": 222, "finfo": 222, "default_dtyp": 222, "get_default_dtyp": 222, "reward_norm": 222, "update_reward_stat": 222, "normalize_reward": 222, "make_train": [223, 251], "_process_batch_hook": [223, 255], "select_kei": [223, 255], "versatil": 224, "lossmodul": [224, 244, 245, 251], "optim_steps_per_batch": [224, 255, 258], "epoch": [224, 259], "clip_grad_norm": 224, "partial": 224, "clip_norm": 224, "progress_bar": 224, "tqdm": [224, 257, 259, 262], "save_trainer_interv": 224, "disk": [224, 255, 257, 258], "log_interv": [224, 258], "save_trainer_fil": [224, 255], "datacollectorbas": [226, 231, 232, 245, 251], "update_weights_interv": [226, 258], "sit": [226, 258], "update_weight": 226, "post_step": [226, 255], "cfg": [227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249], "dictconfig": [227, 228, 230, 231, 232, 233, 235, 238, 240, 241, 243, 244, 245, 246, 249], "divid": [227, 257], "unknowingli": 227, "annealing_fram": [227, 257], "init_env_step": [227, 228, 257], "proof_environ": [228, 230, 233, 235, 238, 240, 243, 257], "sta": 228, "ot": 228, "a2closs": [229, 251], "in_keys_actor": [230, 238], "observation_kei": [230, 238, 240, 243], "dummi": [230, 233, 235, 238, 240, 243, 257, 266], "parser_env_arg": [230, 238, 240], "make_ppo_model": [230, 251], "parser_model_args_continu": [230, 238, 240, 243], "cattensor": [230, 233, 238, 240, 243, 257, 261, 262, 266], "hydra": [230, 233, 235, 238, 240, 243], "config_stor": [230, 233, 235, 238, 240, 243], "configstor": [230, 233, 235, 238, 240, 243], "dataclass": [230, 233, 235, 238, 240, 243], "halfcheetah": [230, 233, 238, 240, 243, 257], "config_field": [230, 233, 235, 238, 240, 243], "config_cl": [230, 233, 235, 238, 240, 243], "ppomodelconfig": [230, 238], "envconfig": [230, 233, 235, 238, 240, 243], "make_dataclass": [230, 233, 235, 238, 240, 243], "cls_name": [230, 233, 235, 238, 240, 243], "config_path": [230, 233, 235, 238, 240, 243], "config_nam": [230, 233, 235, 238, 240, 243], "actor_valu": [230, 238], "17": [230, 233, 238, 240, 243, 258, 259, 262, 263], "actor_model_explor": [231, 232, 257], "make_env_kwarg": [231, 232], "actor_net_kwarg": [233, 240, 243], "value_net_kwarg": [233, 243], "modulelist": [233, 240, 243, 257, 265], "ddpgcnnactor": [233, 251], "ddpgmlpactor": [233, 251, 257], "ddpgcnnqnet": [233, 251], "ddpgmlpqnet": [233, 251, 257], "ddpgmodelconfig": 233, "targetnetupdat": [234, 236, 239, 242, 244, 245], "discretemodelconfig": 235, "pong": [235, 266], "v5": [235, 266], "pixels_onli": [235, 257, 258, 265, 266], "210": [235, 262, 266], "160": [235, 258, 262, 266], "ppoloss": [237, 251], "redqloss_deprec": 239, "qvalue_net_kwarg": [240, 243], "qvalu": [240, 243], "redqmodelconfig": 240, "replayargsconfig": 241, "sacmodelconfig": 243, "target_net_updat": [245, 257, 258], "constitu": 245, "learnt": [245, 257, 259], "tempfil": [245, 257, 258], "tensorboardlogg": [245, 251], "egreedywrapp": [245, 251, 258], "env_proof": 245, "obs_spec": [245, 262], "net_valu": 245, "dir": [245, 255, 258], "gettempdir": 245, "argpars": [246, 249], "namespac": [246, 249], "parser": [246, 249], "transformed_env_constructor": [246, 251], "num_env_per_collector": [247, 248], "video_tag": 249, "norm_obs_onli": 249, "use_env_cr": 249, "custom_env_mak": 249, "custom_env": 249, "return_transformed_env": 249, "action_dim_gsd": 249, "state_dim_gsd": 249, "batch_dim": 249, "obs_norm_state_dict": 249, "wheter": 249, "maker": 249, "asyncdatacollector": 251, "distributedsyncdatacollector": 251, "submitit_delayed_launch": 251, "raycollector": 251, "samplerwithoutreplac": [251, 259], "d4rlexperiencereplai": 251, "openmlexperiencereplai": 251, "binarydiscretetensorspec": 251, "unboundeddiscretetensorspec": [251, 259, 266], "tensordictrecord": 251, "videorecord": [251, 259], "get_available_librari": 251, "braxwrapp": 251, "dmcontrolenv": [251, 257, 261, 266], "dmcontrolwrapp": 251, "jumanjienv": 251, "jumanjiwrapp": 251, "openmlenv": 251, "vmasenv": 251, "vmaswrapp": 251, "additivegaussianwrapp": 251, "ornsteinuhlenbeckprocesswrapp": [251, 257], "safeprobabilistictensordictsequenti": 251, "is_tensordict_compat": 251, "ensure_tensordict_compat": 251, "qvaluehook": 251, "distributionalqvaluehook": 251, "duelingcnndqnet": [251, 258], "distributionaldqnnet": 251, "lstmnet": 251, "dreameractor": 251, "obsencod": 251, "obsdecod": 251, "rssmprior": 251, "rssmposterior": 251, "reset_nois": 251, "cemplann": 251, "mpcplannerbas": 251, "mppiplann": 251, "independentnorm": 251, "truncatednorm": 251, "tanhdelta": [251, 257], "onehotcategor": 251, "inv_softplu": 251, "distributionaldqnloss": [251, 258], "discretesacloss": 251, "iqlloss": 251, "reinforceloss": 251, "dreameractorloss": 251, "dreamermodelloss": 251, "dreamervalueloss": 251, "td0estim": [251, 257], "td1estim": [251, 257], "gae": [251, 254, 257, 259], "td0_return_estim": 251, "td0_advantage_estim": 251, "td1_return_estim": 251, "vec_td1_return_estim": 251, "td1_advantage_estim": 251, "vec_td1_advantage_estim": 251, "td_lambda_return_estim": 251, "vec_td_lambda_return_estim": 251, "td_lambda_advantage_estim": 251, "vec_td_lambda_advantage_estim": 251, "generalized_advantage_estim": 251, "vec_generalized_advantage_estim": 251, "distance_loss": [251, 257], "hold_out_net": 251, "hold_out_param": [251, 257], "softupd": [251, 257, 258], "hardupd": [251, 257], "batchsubsampl": [251, 255], "clearcudacach": 251, "countframeslog": 251, "logreward": [251, 255, 258], "optimizerhook": [251, 258], "replaybuffertrain": [251, 255, 258], "rewardnorm": 251, "selectkei": [251, 255], "trainerhookbas": [251, 255, 258], "updateweight": [251, 255, 258], "make_a2c_loss": 251, "make_a2c_model": 251, "make_collector_offpolici": 251, "make_collector_onpolici": 251, "make_ddpg_actor": [251, 257], "make_ddpg_loss": 251, "make_dqn_actor": 251, "make_dqn_loss": 251, "make_ppo_loss": 251, "make_redq_loss": 251, "make_redq_model": 251, "make_replay_buff": [251, 257], "make_sac_loss": 251, "make_sac_model": 251, "make_target_updat": 251, "parallel_env_constructor": [251, 257], "sync_async_collector": 251, "sync_sync_collector": 251, "correct_for_frame_skip": 251, "get_stats_random_rollout": 251, "csvlogger": [251, 258], "mlflowlogg": 251, "wandblogg": 251, "get_logg": 251, "generate_exp_nam": 251, "journei": 252, "guid": [252, 257], "textbook": 252, "highlight": 252, "ever": 252, "bump": 252, "think": [252, 259, 266], "benefit": 252, "pr": 252, "reusabl": [254, 257], "swappabl": [254, 257], "characterist": [254, 257, 262], "trainabl": [254, 257, 263], "whatev": [254, 257], "convent": [254, 257, 262], "smth": [254, 257], "metric": [254, 257], "loss_val": [254, 257, 259], "nutshel": [254, 257], "barto": 254, "chapter": 254, "proxi": 254, "significantli": [254, 257, 258], "next_stat": 254, "value_net_loss": 254, "pow": [254, 257], "therebi": 254, "room": 254, "convers": 254, "signifi": 254, "underperform": 254, "thin": 254, "intric": 254, "flexibli": 254, "outer": [255, 257, 258, 266], "believ": 255, "scheme": [255, 266], "substenti": 255, "_pre_steps_log_hook": 255, "_pre_optim_hook": 255, "sub_batch": 255, "_post_loss_hook": 255, "_post_optim_hook": 255, "post_optim": [255, 258], "_post_optim_log": 255, "post_optim_log": 255, "_post_steps_hook": 255, "_post_steps_log_hook": 255, "post_steps_log": 255, "comment": [255, 258, 265], "categori": 255, "extens": 255, "reserv": 255, "three": [255, 259, 262], "logginghook": 255, "logging_hook": 255, "save_dict": 255, "some_valu": 255, "torchsnapshot": 255, "ckpt_backend": 255, "pt": [255, 263], "filepath": 255, "save_train": 255, "load_from_fil": 255, "perfectli": [255, 257, 262], "intern": 256, "author": [257, 258, 259, 262], "vincent": [257, 258, 259, 262], "moen": [257, 258, 259, 262], "assembl": 257, "ground": [257, 262], "focus": 257, "straightforward": [257, 258], "overview": [257, 259, 265], "transpar": 257, "understood": 257, "sota": [257, 258, 265], "illustr": [257, 258], "device_count": [257, 258, 263, 266], "loss_dict": 257, "modal": 257, "oblivi": [257, 259], "elementari": 257, "didact": 257, "extract": [257, 259], "speak": 257, "dilut": 257, "pessimist": [257, 258, 259], "target_actor_network_param": 257, "actor_in_kei": 257, "actor_crit": 257, "loss_funt": 257, "noth": [257, 259], "compromis": 257, "simplest": [257, 259, 266], "default_value_estim": 257, "hp": 257, "hasattr": 257, "_value_estim": 257, "elif": [257, 258], "notimplementederror": 257, "unknown": 257, "_loss_actor": 257, "td_copi": 257, "value_network_param": 257, "_loss_valu": [257, 265], "pred_val": [257, 265], "target_value_network_param": 257, "smooth": [257, 258], "loss_valu": [257, 259, 265], "glue": 257, "_forward": 257, "ndimens": 257, "pred_valu": 257, "pred_value_max": 257, "target_value_max": 257, "remaind": 257, "focu": [257, 258, 259], "env_librari": 257, "env_task": 257, "env_arg": 257, "friendli": 257, "special": [257, 266], "torchr": 257, "rescal": 257, "presum": 257, "leav": 257, "make_transformed_env": 257, "reward_sc": 257, "double_to_float_list": 257, "double_to_float_inv_list": 257, "dmcontrol": 257, "leverag": [257, 266], "env_per_collector": 257, "transform_state_dict": 257, "make_t_env": 257, "copy_": 257, "parallel_env": [257, 265, 266], "adjust": [257, 262], "seem": 257, "cheat": 257, "10m": 257, "cautiou": 257, "deal": [257, 259], "magnitud": 257, "thousand": 257, "get_env_stat": 257, "proof_env": 257, "5000": [257, 258, 259], "maxim": [257, 262], "recal": [257, 259], "materi": 257, "small": [257, 259, 266], "env_spec": 257, "actor_net": [257, 259], "q_net": 257, "qnet": 257, "moduless": 257, "sugges": 257, "1_000_000": 257, "tight": 257, "natur": 257, "10_000": 257, "traj_len": 257, "make_record": 257, "recorder_obj": 257, "flavor": 257, "circular": 257, "pick": [257, 258], "buffer_s": [257, 258], "random_crop_len": 257, "prb": 257, "buffer_scratch_dir": 257, "temporari": 257, "dirrectori": 257, "tmpdir": [257, 258], "temporarydirectori": [257, 258], "trajecotri": 257, "25": [257, 258, 259, 262], "balanc": [257, 258, 266], "sampel": 257, "dataflow": 257, "ceil_div": 257, "utd": 257, "update_to_data": 257, "realiz": 257, "ve": 257, "_must_": 257, "001": [257, 262], "outdat": 257, "trick": [257, 258], "despit": 257, "thank": 257, "init_": [257, 258], "adam": [257, 258, 259, 262], "optimizer_actor": 257, "actor_network_param": 257, "lr": [257, 258, 259, 262], "weight_decai": [257, 258], "optimizer_valu": 257, "total_collection_step": 257, "pretti": 257, "rewards_ev": 257, "collected_fram": 257, "pbar": [257, 259, 262], "r0": 257, "numel": [257, 259, 263], "current_fram": 257, "sampled_tensordict": 257, "gn1": 257, "clip_grad_norm_": [257, 259, 262], "gn2": 257, "gn": [257, 262], "td_record": 257, "rn": 257, "set_descript": [257, 259, 262], "2f": 257, "traceback": [257, 265], "__w": [257, 265], "doc": [257, 258, 265], "coding_ddpg": [257, 264], "1119": 257, "1501": [257, 265], "_call_impl": [257, 265], "forward_cal": [257, 265], "351": [257, 262], "272": [257, 262], "391": [257, 262], "new_fun": 257, "old_param": 257, "_assign_param": 257, "468": [257, 262], "_swap_stat": 257, "make_stateless": 257, "return_old_tensordict": 257, "307": [257, 262], "old_attr": 257, "getattr": 257, "461": [257, 262], "__getattr__": 257, "err2": 257, "err1": 257, "459": [257, 262], "1614": 257, "plot": [257, 259, 262], "mention": [257, 266], "matplotlib": [257, 259, 262, 266], "pyplot": [257, 259, 262, 266], "plt": [257, 259, 262, 266], "zip": [257, 260], "label": 257, "legend": 257, "xlabel": [257, 262], "ylabel": 257, "tight_layout": 257, "concret": [257, 259], "takeawai": [257, 258], "minut": [257, 258, 259, 261, 262, 263, 265, 266], "648": [257, 262, 264], "5834": 257, "mb": [257, 258, 259, 261, 262, 263, 264, 265, 266], "jupyt": [257, 258, 259, 260, 261, 262, 263, 265, 266], "ipynb": [257, 258, 259, 261, 262, 263, 265, 266], "galleri": [257, 258, 259, 260, 261, 262, 263, 265, 266], "sphinx": [257, 258, 259, 260, 261, 262, 263, 265, 266], "cartpol": [258, 266], "customis": 258, "road": 258, "aspect": 258, "grayscal": [258, 266], "did": [258, 259, 266], "highest": 258, "preprocess": 258, "prerequisit": 258, "familiar": [258, 266], "tabl": 258, "lookup": 258, "amort": [258, 259], "conjunct": 258, "cart": 258, "pole": 258, "un": 258, "actuat": 258, "frictionless": 258, "upright": [258, 266], "is_notebook": 258, "shell": 258, "get_ipython": 258, "__class__": 258, "zmqinteractiveshel": 258, "qtconsol": 258, "terminalinteractiveshel": 258, "ipython": [258, 262], "nameerror": 258, "interpret": 258, "group": [258, 259], "umbrella": 258, "misplac": 258, "misus": 258, "orchestr": 258, "everyth": [258, 259], "five": 258, "64x64": 258, "channel": 258, "motion": [258, 262], "obs_norm_sd": 258, "simpler": 258, "get_norm_stat": 258, "test_env": 258, "mathbb": 258, "rightarrow": 258, "make_model": 258, "dummy_env": 258, "output_s": 258, "init_bia": 258, "actor_explor": 258, "eps_greedy_v": 258, "eps_greedy_val_env": 258, "get_replay_buff": 258, "n_optim": 258, "themselv": 258, "simplic": [258, 259, 263], "get_collector": 258, "data_collector": 258, "bunch": 258, "concept": 258, "power": 258, "ubiquit": 258, "get_loss_modul": 258, "target_updat": 258, "hopefulli": 258, "sensit": 258, "variat": 258, "2e": [258, 262], "wd": 258, "upd": 258, "02": [258, 259, 262, 263, 264], "harder": [258, 265], "5_000": 258, "500000": 258, "256": [258, 259, 262], "100000": 258, "005": 258, "mandatori": [258, 259, 262], "fairer": 258, "budget": [258, 259], "dqn_exp_": 258, "uuid1": [258, 266], "warn": [258, 266], "9921": 258, "9920": 258, "0788": 258, "tmp": 258, "tmpnm_5q02p": 258, "dqn_exp_b80bd9c6": 258, "d86a": 258, "11ed": [258, 266], "b568": [258, 266], "0242ac120002": [258, 266], "registr": 258, "cumbersom": 258, "buffer_hook": 258, "weight_updat": 258, "descript": [258, 259], "aliv": 258, "00": [258, 259, 262, 263, 264], "31": [258, 262], "65it": [258, 259, 262], "4045": 258, "9259": 258, "71it": 258, "96": [258, 259, 262, 263], "59it": [258, 262], "3893": 258, "05": [258, 259, 262], "13it": [258, 262], "3712": 258, "04": [258, 259, 262, 264], "19": [258, 262], "05it": [258, 259, 262], "192": [258, 262], "30it": [258, 259, 262], "4497": 258, "224": [258, 262], "47": [258, 259, 262], "28": [258, 259, 262, 263], "52it": [258, 259, 262], "3983": 258, "26": [258, 259, 262, 263], "46it": [258, 259, 262], "4524": 258, "288": [258, 262], "53it": [258, 262], "4434": 258, "320": [258, 262, 266], "09": [258, 259, 262], "36": [258, 259, 262], "24it": [258, 259, 262], "4254": 258, "352": [258, 262], "45it": [258, 259, 262], "3832": 258, "384": [258, 262], "59": [258, 259, 261, 262, 263, 264, 266], "75it": [258, 262], "416": [258, 262], "54": [258, 259, 262], "40": [258, 259, 262], "08it": [258, 262], "4948": [258, 262], "448": [258, 262], "21": [258, 259, 261, 262], "22it": [258, 262], "480": [258, 262, 263], "22": [258, 259, 262, 264], "11it": [258, 259, 262], "55it": [258, 262], "3410": 258, "544": [258, 262], "23": [258, 259, 262, 263, 266], "84it": [258, 259, 262], "3650": [258, 262], "576": [258, 262], "48": [258, 259, 262, 264], "608": [258, 262], "49": [258, 259, 262, 263, 264], "640": 258, "29it": [258, 262], "3742": 258, "672": 258, "704": 258, "56it": [258, 259, 262], "736": [258, 262], "45": [258, 259, 262], "73it": [258, 259], "768": 258, "27it": 258, "3952": 258, "800": 258, "832": 258, "35it": [258, 262], "864": 258, "896": 258, "72it": 258, "4375": 258, "928": 258, "77it": 258, "4224": 258, "960": 258, "92it": [258, 262], "992": 258, "3772": 258, "25it": [258, 259, 262], "4134": 258, "1056": 258, "3923": 258, "1088": 258, "91it": [258, 259], "3861": 258, "1120": 258, "28it": [258, 262], "1152": 258, "09it": [258, 262], "1184": 258, "70it": 258, "1216": 258, "37": [258, 262], "96it": [258, 262], "4345": [258, 262], "1248": 258, "20it": [258, 259, 262], "4074": [258, 262], "1280": 258, "39": [258, 259, 262, 263], "33it": [258, 262], "1344": 258, "1376": 258, "99it": [258, 259, 262], "1408": 258, "41": [258, 259, 262, 263], "58it": [258, 262], "3559": 258, "1440": 258, "83it": 258, "1472": 258, "4526": 258, "1504": 258, "43": [258, 262, 263, 264], "31it": [258, 262], "1536": 258, "1568": 258, "06it": [258, 259, 262], "1600": 258, "3862": 258, "1632": [258, 262], "07": [258, 259, 262], "16it": [258, 262], "3619": 258, "07it": [258, 259, 262], "1696": 258, "4314": 258, "1728": 258, "1760": 258, "1792": 258, "82it": [258, 259], "1824": 258, "12it": [258, 259, 262], "1856": 258, "85it": [258, 259, 262], "1888": 258, "49it": [258, 259, 262], "1920": [258, 262], "51": [258, 262, 264], "50it": [258, 262], "1952": 258, "52": [258, 259, 262, 263], "1984": 258, "3682": 258, "2016": 258, "53": [258, 259, 262, 263], "2048": [258, 263], "76it": [258, 259], "2080": [258, 262], "58": [258, 259, 262], "2112": [258, 262], "55": [258, 259, 262], "56": [258, 259, 262, 263], "90it": 258, "2144": 258, "79it": [258, 262], "2176": 258, "57": [258, 262], "37it": [258, 262], "2208": [258, 262], "2240": 258, "4164": 258, "2272": 258, "2304": [258, 259], "36it": [258, 262], "2336": 258, "01it": [258, 259, 262], "2368": 258, "2400": [258, 262], "4073": 258, "2432": [258, 262], "47it": [258, 262], "2464": 258, "00it": [258, 259], "2496": 258, "86it": [258, 262], "3620": 258, "2528": 258, "63it": [258, 262], "2560": 258, "95it": [258, 259], "2592": [258, 262], "2624": 258, "15it": [258, 262], "4676": 258, "2656": 258, "2688": 258, "4797": 258, "2720": [258, 259], "2752": 258, "2784": 258, "2816": 258, "78it": 258, "2848": [258, 262], "41it": [258, 262], "2880": 258, "51it": [258, 262], "2912": [258, 259, 262], "04it": [258, 259, 262], "2944": [258, 259], "19it": [258, 259, 262], "60": [258, 259, 262, 265], "2976": [258, 259], "94it": [258, 262], "3560": 258, "3008": [258, 259], "81it": [258, 259], "61": [258, 262, 263], "3040": 258, "42it": [258, 259, 262], "3072": 258, "93it": 258, "4193": [258, 262], "62": [258, 259, 262], "3104": [258, 259], "69it": 258, "63": [258, 259, 262], "3136": 258, "3168": 258, "34it": [258, 259, 262], "3200": 258, "65": [258, 262, 263], "3232": 258, "3802": 258, "5641": 258, "3264": [258, 262], "66": [258, 259, 262], "3296": 258, "67": [258, 261, 262, 263], "3328": 258, "39it": [258, 262], "3360": 258, "68": [258, 259, 262], "3392": 258, "3424": [258, 262], "68it": [258, 259, 262], "69": [258, 259, 262], "3456": 258, "70": [258, 259, 262, 263], "3488": 258, "3520": 258, "71": [258, 262], "3552": 258, "3801": 258, "72": [258, 259, 262, 263], "3584": 258, "62it": [258, 262], "3616": 258, "73": [258, 262], "3648": 258, "74": [258, 259, 262], "3680": 258, "3800": 258, "75": [258, 262, 263], "3744": 258, "4586": 258, "76": [258, 259, 262, 263], "3776": 258, "64it": [258, 262], "3808": 258, "77": [258, 262], "3840": [258, 262], "40it": [258, 262], "4102": 258, "3872": 258, "78": [258, 259, 262, 263], "3904": 258, "79": [258, 262], "3936": 258, "3968": 258, "4104": 258, "80": [258, 259, 262], "4000": [258, 259], "4032": 258, "4064": 258, "82": [258, 259, 262, 263], "4096": 258, "83": [258, 262], "4128": 258, "3740": [258, 262], "4160": 258, "84": [258, 259, 262], "4192": 258, "60it": [258, 262], "85": [258, 262, 263], "4256": 258, "3530": [258, 262], "86": [258, 259, 262, 263], "4288": 258, "4320": 258, "38it": [258, 259, 262], "4352": 258, "87it": 258, "88": [258, 259, 262, 263], "4384": 258, "4416": 258, "89": [258, 262, 263], "4448": 258, "90": [258, 259, 262], "4480": 258, "4512": 258, "74it": [258, 262], "91": [258, 259, 262], "4544": 258, "92": [258, 259, 262, 263], "4576": 258, "4608": 258, "93": [258, 259, 262, 263], "4640": 258, "4672": 258, "4704": 258, "4736": 258, "4768": 258, "4800": 258, "97": [258, 259, 262, 263], "4832": [258, 262], "4864": 258, "4041": 258, "4896": [258, 263], "4928": 258, "4960": 258, "4992": 258, "5024it": 258, "quickli": [258, 266], "print_csv_files_in_fold": 258, "folder_path": 258, "csv_file": 258, "output_str": 258, "dirpath": 258, "walk": [258, 261, 266], "endswith": 258, "strip": 258, "34096986055374146": 258, "4134136736392975": 258, "3772369623184204": 258, "44965073466300964": 258, "4193257987499237": 258, "4134136438369751": 258, "4074399471282959": 258, "4379754066467285": 258, "3631935119628906": 258, "6099836826324463": 258, "454406261444092": 258, "5660417079925537": 258, "114683151245117": 258, "475757360458374": 258, "513824462890625": 258, "130885124206543": 258, "grad_norm_0": 258, "58512878417969": 258, "005020141601562": 258, "031475067138672": 258, "50325584411621": 258, "092226028442383": 258, "26208782196045": 258, "678482055664062": 258, "595335006713867": 258, "917424201965332": 258, "10000000894069672": 258, "5641026496887207": 258, "qvaluenetwork": 258, "worst": 258, "accuraci": 258, "fanci": 258, "381": [258, 262, 264], "1122": [258, 262, 264], "coding_dqn": [258, 264], "demonstr": [259, 262, 266], "talk": 259, "repetit": 259, "six": 259, "sophist": 259, "invent": 259, "theta_k": 259, "frac": 259, "pi_": 259, "exceed": 259, "discourag": [259, 262], "indispens": 259, "loader": 259, "analyz": 259, "lingua": 259, "franca": 259, "defaultdict": [259, 262], "normalparamextractor": 259, "has_cuda": [259, 266], "3e": 259, "max_grad_norm": 259, "big": [259, 266], "ourselv": [259, 266], "benefici": 259, "errat": 259, "hamper": 259, "reactiv": 259, "xy": 259, "50_000": 259, "sub_batch_s": 259, "num_epoch": 259, "intro": 259, "entropy_ep": 259, "generalist": 259, "interchang": [259, 263], "panel": 259, "charact": 259, "inverteddoublependulum": 259, "transmit": 259, "stai": 259, "thumb": 259, "supplementari": [259, 266], "told": 259, "stringent": 259, "nevertheless": 259, "continuousbox": [259, 262, 265, 266], "environemnt": 259, "confid": 259, "succeed": [259, 262], "pack": [259, 266], "ran": 259, "mutli": 259, "boundari": 259, "f_": 259, "text": 259, "mu_": 259, "difficulti": [259, 266], "brought": 259, "scrictli": 259, "d_ob": 259, "d_action": 259, "carrier": 259, "policy_modul": 259, "That": 259, "said": 259, "value_modul": [259, 265], "briefli": 259, "refil": 259, "capac": 259, "conveni": [259, 262], "easiest": 259, "hide": 259, "awai": 259, "mathemat": 259, "tradeoff": 259, "lr_schedul": [259, 262], "cosineannealinglr": [259, 262], "eval_str": 259, "tensordict_data": 259, "data_view": 259, "subdata": 259, "loss_object": 259, "loss_crit": 259, "loss_entropi": 259, "cum_reward_str": 259, "4f": [259, 262], "stepcount_str": 259, "param_group": 259, "lr_str": 259, "eval_rollout": 259, "nice": 259, "50000": 259, "313": [259, 262], "9390": 259, "0917": 259, "0003": [259, 262], "318": [259, 262], "66it": [259, 262], "1221": 259, "3000": 259, "1663": 259, "321": [259, 262], "1865": [259, 262], "325": [259, 262], "1969": 259, "6000": 259, "329": [259, 262], "7000": 259, "332": [259, 262], "2399": [259, 262], "8000": 259, "2483": 259, "9000": 259, "335": [259, 262], "2515": 259, "337": [259, 262], "2636": 259, "11000": 259, "338": [259, 262], "250": [259, 262], "5329": 259, "12000": 259, "2746": 259, "13000": 259, "340": [259, 262], "2771": 259, "14000": 259, "341": [259, 262], "2875": 259, "15000": 259, "2783": 259, "0002": [259, 262], "16000": 259, "17000": 259, "2836": 259, "18000": 259, "14it": [259, 262], "2923": 259, "19000": 259, "2926": 259, "20000": 259, "314": [259, 262], "2934": 259, "21000": 259, "97it": [259, 262], "306": [259, 262], "2030": 259, "2876": 259, "22000": 259, "326": [259, 262], "26it": [259, 262], "2910": 259, "23000": 259, "331": [259, 262], "24000": 259, "2901": 259, "25000": 259, "334": [259, 262], "2903": 259, "26000": 259, "336": [259, 262], "27000": 259, "3083": 259, "110": [259, 262], "28000": 259, "339": [259, 262], "2986": 259, "29000": 259, "2991": 259, "30000": 259, "98it": [259, 262], "2927": 259, "31000": 259, "17it": [259, 262], "792": 259, "9888": 259, "3027": 259, "32000": 259, "3044": 259, "33000": 259, "34000": 259, "3015": 259, "35000": 259, "125": [259, 262], "36000": 259, "3022": 259, "37000": 259, "3143": 259, "118": [259, 262], "38000": 259, "3016": 259, "39000": 259, "3084": 259, "103": [259, 262], "40000": 259, "324": [259, 262], "48it": [259, 262], "3133": 259, "41000": 259, "43it": [259, 262], "419": [259, 262], "1789": 259, "3087": 259, "124": [259, 262], "42000": 259, "327": [259, 262], "3129": 259, "43000": 259, "3099": 259, "44000": 259, "3121": 259, "45000": 259, "3140": 259, "107": [259, 262], "46000": 259, "3119": 259, "47000": 259, "3150": 259, "104": [259, 262], "48000": 259, "3162": 259, "190": [259, 262], "49000": 259, "3130": 259, "102": [259, 262, 265], "3186": 259, "cap": 259, "figsiz": [259, 262], "subplot": [259, 262, 266], "titl": [259, 262], "bit": 259, "422": [259, 262, 264], "coding_ppo": [259, 264], "tutorials_python": 260, "tutorials_jupyt": 260, "distinct": 261, "humanoid": [261, 266], "env1": 261, "env1_obs_kei": 261, "observation_stand": 261, "env2": 261, "env2_obs_kei": 261, "observation_walk": 261, "tdreset1": 261, "tdreset2": 261, "tdreset": 261, "backbon": [261, 265], "policy_common": 261, "policy_stand": 261, "policy_walk": 261, "seq": 261, "But": 261, "env1_mak": 261, "env2_mak": 261, "_single_task": 261, "td_rollout": 261, "shown": 261, "277": [261, 262, 264], "multi_task": [261, 264], "freeli": 262, "inspir": 262, "sep": 262, "touch": 262, "undertaken": 262, "broader": 262, "challeng": [262, 263], "wider": 262, "algebra": 262, "seamlessli": 262, "acquaint": 262, "avenu": 262, "unsqueezetransform": 262, "_apply_to_composit": 262, "default_x": 262, "pi": 262, "default_i": 262, "four": 262, "_set_se": 262, "torqu": 262, "upward": 262, "angular": 262, "dot": 262, "_t": 262, "sin": 262, "rad": 262, "sec": 262, "gravit": 262, "angl": 262, "deleg": 262, "new_th": 262, "plu": 262, "new_thdot": 262, "thdot": 262, "g_forc": 262, "max_torqu": 262, "angle_norm": 262, "max_spe": 262, "zeros_lik": 262, "albeit": 262, "is_empti": 262, "gen_param": 262, "high_th": 262, "high_thdot": 262, "low_th": 262, "low_thdot": 262, "rng": 262, "lazili": 262, "shortcut": [262, 266], "irrelev": 262, "_make_spec": 262, "td_param": 262, "make_composite_from_td": 262, "commong": 262, "pseudo": 262, "pendulumenv": 262, "render_mod": 262, "human": 262, "rgb_arrai": 262, "render_fp": 262, "random_": 262, "_make_step": 262, "staticmethod": 262, "coupl": 262, "complic": [262, 266], "showcas": 262, "skeleton": 262, "_apply_transform": [262, 266], "_inv_apply_transform": [262, 266], "eventu": 262, "subset": [262, 263], "unitari": 262, "sine": 262, "cosin": 262, "sintransform": 262, "costransform": 262, "co": 262, "t_sin": 262, "t_co": 262, "cat_transform": 262, "mdp": 262, "convin": 262, "simple_rollout": 262, "_data": 262, "unexplor": 262, "assumpt": 262, "recreat": 262, "20_000": 262, "init_td": 262, "traj_return": 262, "last_reward": 262, "is_ipython": 262, "inlin": 262, "get_backend": 262, "ion": 262, "gcf": 262, "clear_output": 262, "625": 262, "9981": 262, "3292": 262, "67it": 262, "8997": 262, "7032": 262, "696": 262, "8466": 262, "0202": 262, "807": 262, "57it": 262, "2897": 262, "6322": 262, "61it": 262, "0338": 262, "4880": 262, "504": 262, "1698": 262, "9674": 262, "188": 262, "0643": 262, "9703": 262, "127": 262, "3363": 262, "0207": 262, "048": 262, "3501": 262, "5927": 262, "5956": 262, "7665": 262, "732": 262, "3527": 262, "0354": 262, "2219": 262, "2999": 262, "8446": 262, "7448": 262, "961": 262, "7403": 262, "5034": 262, "411": 262, "9381": 262, "7937": 262, "619": 262, "8760": 262, "1022": 262, "6977": 262, "0331": 262, "987": 262, "8657": 262, "4508": 262, "919": 262, "9990": 262, "8757": 262, "921": 262, "9021": 262, "9585": 262, "518": 262, "6612": 262, "6255": 262, "7181": 262, "7913": 262, "089": 262, "0750": 262, "5913": 262, "596": 262, "8299": 262, "4152": 262, "9993": 262, "4527": 262, "2555": 262, "551": 262, "3655": 262, "3651": 262, "6557": 262, "3352": 262, "9137": 262, "7104": 262, "8728": [262, 265], "144": 262, "8547": 262, "6320": 262, "871": 262, "7414": 262, "4717": 262, "211": 262, "7268": 262, "1833": 262, "6634": 262, "3899": 262, "6083": 262, "3508": 262, "5830": 262, "6835": 262, "8209": 262, "3483": 262, "02it": 262, "7688": 262, "599": 262, "8693": 262, "3066": 262, "008": 262, "5190": 262, "2003": 262, "5916": 262, "0074": 262, "053": 262, "18it": 262, "3596": 262, "3337": 262, "32it": 262, "3250": 262, "4695": 262, "556": 262, "4941": 262, "0976": 262, "436": 262, "5073": 262, "6267": 262, "7900": 262, "7116": 262, "0649": 262, "206": 262, "9751": 262, "0522": 262, "328": 262, "54it": 262, "0844": 262, "7387": 262, "845": 262, "2246": 262, "5251": 262, "3373": 262, "9479": 262, "2709": 262, "3046": 262, "3977": 262, "3212": 262, "642": 262, "3854": 262, "9375": 262, "837": 262, "6287": 262, "6260": 262, "7219": 262, "8860": 262, "6979": 262, "2648": 262, "4459": 262, "3500": 262, "3812": 262, "3433": 262, "222": 262, "4411": 262, "6690": 262, "3777": 262, "1538": 262, "322": 262, "8743": 262, "4807": 262, "22e": 262, "3545": 262, "0107": 262, "2255": 262, "3131": 262, "1588": 262, "4491": 262, "076": 262, "2076": 262, "831": 262, "7440": 262, "6878": 262, "2344": 262, "1025": 262, "902": 262, "9207": 262, "3350": 262, "2087": 262, "2254": 262, "9928": 262, "3105": 262, "6532": 262, "8399": 262, "5124": 262, "8030": 262, "6501": 262, "4525": 262, "8541": 262, "8998": 262, "796e": 262, "2027": 262, "1556": 262, "3472": 262, "3081": 262, "396": 262, "3959": 262, "7512": 262, "3240": 262, "8101": 262, "2314": 262, "4188": 262, "295": 262, "9779": 262, "5535": 262, "5627": 262, "6739": 262, "21it": 262, "8125": 262, "6816": 262, "755": 262, "6262": 262, "0773": 262, "8989": 262, "1044": 262, "4514": 262, "0407": 262, "0062": 262, "4916": 262, "0404": 262, "3795": 262, "3577": 262, "122": [262, 266], "4141": 262, "134": 262, "9704": 262, "9697": 262, "1513": 262, "4501": 262, "285": 262, "2994": 262, "4022": 262, "579": 262, "2008": 262, "9061": 262, "558": 262, "0307": 262, "9752": 262, "5623": 262, "5012": 262, "2079": 262, "5742": 262, "2724": 262, "3876": 262, "2708": 262, "7700": 262, "058": 262, "1960": 262, "1463": 262, "3716": 262, "0288": 262, "2872": 262, "0933": 262, "9320": 262, "1261": 262, "1747": 262, "4484": 262, "0453": 262, "209": 262, "3564": 262, "3918": 262, "4985": 262, "105": 262, "5372": 262, "6419": 262, "238": 262, "4172": 262, "1033": 262, "5129": 262, "1738": 262, "982": 262, "108": 262, "2507": 262, "6379": 262, "109": 262, "2202": 262, "9865": 262, "6413": 262, "0470": 262, "111": 262, "7870": 262, "4711": 262, "386": 262, "112": 262, "8113": 262, "5438": 262, "113": 262, "7211": 262, "2379": 262, "054": 262, "4828": 262, "5023": 262, "115": 262, "9169": 262, "8205": 262, "171": 262, "116": 262, "0791": 262, "4240": 262, "117": 262, "0138": 262, "3126": 262, "651": 262, "6676": 262, "3220": 262, "119": 262, "0057": 262, "120": 262, "4148": 262, "9243": 262, "121": [262, 266], "2873": 262, "2469": 262, "1979": 262, "1586": 262, "123": 262, "6911": 262, "8230": 262, "7729": 262, "9686": 262, "126": 262, "2032": 262, "0313": 262, "656": 262, "9053": 262, "4081": 262, "9441": 262, "3413": 262, "5864": 262, "006": 262, "129": 262, "0038": 262, "5304": 262, "7869": 262, "2975": 262, "131": 262, "7712": 262, "1618": 262, "132": 262, "7366": 262, "133": 262, "4165": 262, "0684": 262, "188e": 262, "8963": 262, "1896": 262, "135": 262, "7390": 262, "136": 262, "9629": 262, "9319": 262, "169": 262, "137": 262, "3621": 262, "138": 262, "7266": 262, "1210": 262, "139": 262, "8384": 262, "5619": 262, "140": 262, "0575": 262, "5144": 262, "141": 262, "8710": 262, "7681": 262, "142": 262, "8321": 262, "8516": 262, "945": 262, "143": 262, "0932": 262, "2351": 262, "773": 262, "0999": 262, "1744": 262, "145": 262, "2118": 262, "8154": 262, "146": 262, "7484": 262, "4035": 262, "147": 262, "5152": 262, "0088": 262, "148": 262, "5423": 262, "7286": 262, "149": 262, "7692": 262, "1465": 262, "150": 262, "0797": 262, "1392": 262, "151": 262, "9611": 262, "9006": 262, "152": 262, "7773": 262, "6767": 262, "153": 262, "4340": 262, "2778": 262, "154": 262, "5407": 262, "8302": 262, "595": 262, "155": 262, "4597": 262, "1627": 262, "156": 262, "7073": 262, "3922": 262, "157": 262, "7815": 262, "9858": 262, "158": 262, "6953": 262, "7051": 262, "159": 262, "6165": 262, "0605": 262, "3321": 262, "9367": 262, "161": 262, "3238": 262, "1825": 262, "162": 262, "6537": 262, "6867": 262, "163": [262, 263], "8555": 262, "0956": 262, "164": 262, "3248": 262, "0159": 262, "165": 262, "2370": 262, "7480": 262, "166": [262, 265], "8993": 262, "8285": 262, "167": 262, "5465": 262, "3198": 262, "168": 262, "9088": 262, "3417": 262, "2199": 262, "2993": 262, "170": 262, "7042": 262, "1570": 262, "6141": 262, "284": 262, "172": 262, "9925": 262, "2946": 262, "173": 262, "5968": 262, "174": 262, "1712": 262, "175": 262, "6813": 262, "9453": 262, "176": 262, "5664": 262, "177": 262, "3610": 262, "9569": 262, "178": 262, "0602": 262, "9931": 262, "179": 262, "7767": 262, "8155": 262, "180": 262, "0498": 262, "7331": 262, "568": 262, "181": 262, "0781": 262, "1768": 262, "182": 262, "9178": 262, "6354": 262, "183": 262, "1244": 262, "8991": 262, "184": 262, "8262": 262, "2116": 262, "185": 262, "2508": 262, "7676": 262, "186": 262, "0428": 262, "2621": 262, "187": 262, "0812": 262, "9802": 262, "199": 262, "9924": 262, "0870": 262, "189": 262, "88it": 262, "3196": 262, "2363": 262, "9864": 262, "0182": 262, "191": 262, "23it": 262, "0345": 262, "9245": 262, "9191": 262, "1752": 262, "491": 262, "193": 262, "1470": 262, "8907": 262, "257": 262, "194": 262, "1925": 262, "676": 262, "195": 262, "1042": 262, "5107": 262, "842": 262, "196": 262, "0179": 262, "2845": 262, "197": 262, "9784": 262, "0536": 262, "198": 262, "8914": 262, "3151": 262, "2599": 262, "7948": 262, "4072": 262, "201": 262, "5997": 262, "8325": 262, "202": 262, "8960": 262, "203": 262, "0600": 262, "8070": 262, "204": 262, "0523": 262, "0025": 262, "205": 262, "5027": 262, "0148": 262, "0363": 262, "3280": 262, "207": 262, "1871": 262, "1571": 262, "208": 262, "8204": 262, "6373": 262, "9863": 262, "2612": 262, "0748": 262, "9467": 262, "8050": 262, "6954": 262, "291": 262, "212": 262, "4752": 262, "1008": 262, "016": 262, "213": 262, "8463": 262, "1723": 262, "214": 262, "6868": 262, "215": 262, "5380": 262, "1126": 262, "891": 262, "216": 262, "2657": 262, "2562": 262, "217": 262, "5513": 262, "0549": 262, "566": 262, "218": 262, "0561": 262, "1288": 262, "607": 262, "219": 262, "3470": 262, "0052": 262, "220": 262, "4686": 262, "0242": 262, "941": 262, "221": 262, "8202": 262, "9284": 262, "10it": 262, "1519": 262, "799": 262, "223": 262, "9705": 262, "0056": 262, "027": 262, "9204": 262, "2680": 262, "991": 262, "225": 262, "0383": 262, "226": 262, "1037": 262, "7906": 262, "227": 262, "3671": 262, "5151": 262, "228": 262, "9767": 262, "9817": 262, "229": 262, "6483": 262, "0955": 262, "230": 262, "6856": 262, "5156": 262, "231": 262, "7647": 262, "4922": 262, "232": 262, "3724": 262, "4932": 262, "233": 262, "3750": 262, "873": 262, "234": 262, "7854": 262, "2685": 262, "839": 262, "235": 262, "2902": 262, "618": 262, "236": 262, "0771": 262, "428": 262, "237": 262, "0086": 262, "3233": 262, "239": 262, "4450": 262, "1583": 262, "240": [262, 265, 266], "241": 262, "2403": 262, "0024": 262, "569": 262, "242": 262, "1011": 262, "0112": 262, "251": 262, "243": 262, "6538": 262, "0162": 262, "9349": 262, "7379": 262, "245": 262, "8236": 262, "0259": 262, "8227": 262, "246": 262, "4424": 262, "6078": 262, "247": 262, "1075": 262, "2630": 262, "248": 262, "0820": 262, "684": 262, "249": 262, "2719": 262, "7146": 262, "364": 262, "4423": 262, "9679": 262, "4463": 262, "5761": 262, "252": 262, "0347": 262, "0947": 262, "253": 262, "4200": 262, "0638": 262, "254": 262, "4313": 262, "0403": 262, "074": 262, "6630": 262, "0239": 262, "1293": 262, "0677": 262, "638": 262, "8976": 262, "0517": 262, "092": 262, "258": 262, "1411": 262, "259": 262, "0897": 262, "0417": 262, "013": 262, "260": 262, "9226": 262, "0016": 262, "4881": 262, "261": 262, "1743": 262, "0167": 262, "262": 262, "1668": 262, "0481": 262, "263": 262, "1277": 262, "0092": 262, "8715": 262, "264": 262, "0661": 262, "0067": 262, "7747": 262, "265": 262, "2779": 262, "0430": 262, "9998": 262, "266": 262, "9067": 262, "0251": 262, "015": 262, "267": 262, "4558": 262, "0186": 262, "268": 262, "1901": 262, "1413": 262, "269": 262, "1785": 262, "0324": 262, "562": 262, "270": 262, "2759": 262, "826": 262, "271": 262, "1844": 262, "0168": 262, "587": [262, 264, 265], "3009": 262, "0362": 262, "273": 262, "7069": 262, "274": 262, "0793": 262, "5345": 262, "275": 262, "0513": 262, "0211": 262, "088": 262, "276": 262, "4400": 262, "0433": 262, "866": 262, "2846": 262, "0157": 262, "427": 262, "278": 262, "2392": 262, "1046": 262, "408": 262, "279": 262, "1373": 262, "5125": 262, "280": 262, "1448": 262, "0560": 262, "678": 262, "281": 262, "5425": 262, "0506": 262, "282": 262, "5210": 262, "0940": 262, "283": 262, "0558": 262, "876": 262, "2645": 262, "0130": 262, "5357": 262, "7399": 262, "8931": 262, "286": [262, 265], "2394": 262, "9803": 262, "287": 262, "6626": 262, "8780": 262, "2521": 262, "0027": 262, "289": 262, "1452": 262, "0534": 262, "877": 262, "290": 262, "2637": 262, "0477": 262, "519": 262, "2021": [262, 266], "0382": 262, "742": 262, "292": 262, "1473": 262, "0208": 262, "293": 262, "3379": 262, "0450": 262, "294": 262, "2145": 262, "0270": 262, "3688": 262, "7527": 262, "296": 262, "8627": 262, "297": 262, "2180": 262, "0066": 262, "298": 262, "0373": 262, "0055": 262, "299": 262, "5879": 262, "9401": 262, "6223": 262, "8889": 262, "301": 262, "2797": 262, "1580": 262, "302": 262, "9936": 262, "4949": 262, "303": 262, "4579": 262, "9796": 262, "304": 262, "0070": 262, "9057": 262, "305": 262, "2540": 262, "746": 262, "5077": 262, "1406": 262, "7956": 262, "7657": 262, "308": 262, "9119": 262, "1691": 262, "309": 262, "2513": 262, "3036": 262, "310": 262, "0779": 262, "0079": 262, "8692": 262, "311": 262, "9439": 262, "0460": 262, "592": 262, "312": 262, "8099": 262, "0491": 262, "516": 262, "8046": 262, "0147": 262, "404": 262, "315": 262, "44it": 262, "0122": 262, "0017": 262, "6365": 262, "316": 262, "1499": 262, "0109": 262, "717": 262, "317": 262, "0034": 262, "4328": 262, "1559": 262, "0010": 262, "3445": 262, "319": 262, "9434": 262, "2862": 262, "9168": 262, "0020": 262, "7494": 262, "7114": 262, "004": 262, "2146": [262, 266], "323": 262, "8207": 262, "0008": 262, "093": 262, "0291": 262, "0036": 262, "733": 262, "0031": 262, "0059": 262, "9693": 262, "4539": 262, "4015": 262, "2260": 262, "0032": 262, "8712": 262, "2449": 262, "0100": 262, "7291": 262, "0009": 262, "5744": 262, "330": 262, "9889": 262, "0205": 262, "563": 262, "9478": 262, "0578": 262, "3117": 262, "3474": 262, "333": 262, "3562": 262, "2034": 262, "0292": 262, "6824": 262, "2522": 262, "565": 262, "9085": 262, "0041": 262, "798": 262, "0409": 262, "0278": 262, "0081": 262, "077": 262, "1038": 262, "0184": 262, "5232": 262, "2485": 262, "948": 262, "342": 262, "3397": 262, "343": 262, "1390": 262, "1946": 262, "344": 262, "3108": 262, "9773": 262, "345": 262, "9628": 262, "8776": 262, "346": 262, "593": 262, "347": 262, "4281": 262, "3059": 262, "348": 262, "9241": 262, "0303": 262, "349": 262, "4747": 262, "3566": 262, "350": 262, "5687": 262, "1356": 262, "9195": 262, "2604": 262, "5555": 262, "353": 262, "4093": 262, "354": 262, "3465": 262, "0412": 262, "498": 262, "355": 262, "4612": 262, "0659": 262, "888": 262, "356": 262, "0915": 262, "6161": 262, "357": 262, "4199": 262, "6984": 262, "358": 262, "1434": [262, 266], "5982": 262, "359": 262, "6443": 262, "8121": 262, "360": 262, "9721": 262, "559": 262, "361": 262, "5386": 262, "0893": 262, "362": 262, "1242": [262, 265], "0828": 262, "507": 262, "363": 262, "8708": 262, "548": 262, "9075": 262, "4399": 262, "365": 262, "6237": 262, "0761": 262, "929": 262, "366": 262, "1787": 262, "1726": 262, "367": 262, "4725": 262, "368": 262, "0309": 262, "502": 262, "369": 262, "6823": 262, "0098": 262, "370": [262, 264], "2397": 262, "371": 262, "4634": 262, "0099": 262, "699": 262, "372": 262, "9857": 262, "9962": 262, "373": 262, "9991": 262, "2484": 262, "374": 262, "8959": 262, "737": 262, "375": 262, "1581": 262, "376": 262, "8401": 262, "377": 262, "9562": 262, "0272": 262, "378": 262, "9824": 262, "4239": 262, "379": 262, "2841": 262, "380": 262, "9922": 262, "4334": 262, "9613": 262, "6321": 262, "382": 262, "0516": 262, "8370": 262, "383": 262, "9549": 262, "7350": 262, "1794": 262, "4433": 262, "385": 262, "5432": 262, "738": 262, "9084": 262, "387": 262, "8010": 262, "388": 262, "9532": 262, "6513": 262, "389": 262, "8265": 262, "0729": 262, "390": 262, "8901": 262, "3721": 262, "8347": 262, "7444": 262, "392": 262, "6952": 262, "7052": 262, "393": 262, "4568": 262, "1346": 262, "394": 262, "2150": 262, "0438": 262, "943": 262, "395": 262, "2904": 262, "9225": 262, "3052": 262, "0075": 262, "8393": 262, "397": 262, "1268": 262, "398": 262, "4296": 262, "1481": 262, "399": 262, "5538": 262, "3458": 262, "2728": 262, "1060": 262, "401": 262, "7887": 262, "2564": 262, "402": 262, "9080": 262, "5411": 262, "403": 262, "1620": 262, "7441": 262, "7703": 262, "405": 262, "6127": 262, "3102": 262, "406": 262, "4175": 262, "5960": 262, "407": 262, "0043": 262, "8779": 262, "409": 262, "6928": 262, "410": 262, "2700": 262, "022": 262, "0357": 262, "0019": 262, "028": 262, "412": 262, "03it": 262, "0935": 262, "0060": 262, "7993": 262, "413": 262, "9033": 262, "0065": 262, "6378": 262, "414": 262, "9597": 262, "415": 262, "0110": 262, "0005": 262, "4133": 262, "8585": 262, "0042": 262, "6746": 262, "417": 262, "7328": 262, "1174": 262, "4613": 262, "418": 262, "2442": 262, "0233": 262, "3477": 262, "018": 262, "420": 262, "6869": 262, "0289": 262, "4806": 262, "421": 262, "1528": 262, "0134": 262, "1684": 262, "2155": 262, "423": 262, "0116": 262, "5719": 262, "424": 262, "0214": 262, "2801": 262, "425": 262, "4760": 262, "0224": 262, "6168": 262, "426": 262, "2511": 262, "0045": 262, "8317": 262, "1415": 262, "2207": 262, "0841": 262, "429": 262, "0849": 262, "985": 262, "430": 262, "9495": 262, "0372": 262, "9485": 262, "431": 262, "9242": 262, "0039": 262, "4826": 262, "432": 262, "1635": 262, "433": 262, "9218": 262, "1003": 262, "434": 262, "7468": 262, "1522": 262, "435": 262, "7471": 262, "5852": 262, "9354": 262, "0013": 262, "037": 262, "437": 262, "3633": 262, "0187": 262, "061": 262, "438": 262, "7091": 262, "0212": 262, "439": 262, "0950": 262, "6344": 262, "440": 262, "1945": 262, "5790": 262, "441": 262, "6370": 262, "7047": 262, "442": 262, "9447": 262, "0551": 262, "443": 262, "0674": 262, "0146": 262, "046": 262, "444": 262, "0087": 262, "0247": 262, "445": 262, "2640": 262, "0129": 262, "8987": 262, "446": 262, "1670": 262, "5398": 262, "447": 262, "9180": 262, "7940": 262, "2948": 262, "0588": 262, "449": 262, "0486": 262, "0029": 262, "1134": 262, "450": 262, "3267": 262, "5681": 262, "451": 262, "0151": 262, "452": 262, "6647": 262, "0316": 262, "453": 262, "5449": 262, "0209": 262, "097": 262, "454": 262, "9321": 262, "3687": 262, "953": 262, "455": 262, "9511": 262, "2701": 262, "456": 262, "0406": 262, "8281": 262, "457": 262, "0379": 262, "458": 262, "2470": 262, "0437": 262, "5843": 262, "0072": 262, "460": 262, "6838": 262, "3447": 262, "7313": 262, "0355": 262, "462": 262, "9268": 262, "0265": 262, "9834": 262, "463": 262, "8536": 262, "9786": 262, "464": 262, "0696": 262, "7232": 262, "465": 262, "89it": 262, "9096": 262, "4422": 262, "466": 262, "3227": 262, "0026": 262, "467": 262, "9565": 262, "9563": 262, "9941": 262, "1284": 262, "469": 262, "1401": 262, "2850": 262, "470": 262, "1807": 262, "8859": 262, "471": 262, "0268": 262, "2992": 262, "472": 262, "7436": 262, "0048": 262, "034": 262, "473": 262, "7046": 262, "0352": 262, "474": 262, "2023": 262, "3258": 262, "515": 262, "475": 262, "0141": 262, "9798": 262, "476": 262, "4474": 262, "0912": 262, "477": 262, "9181": 262, "5476": 262, "478": 262, "1264": 262, "3269": 262, "479": 262, "0714": 262, "0030": 262, "5317": 262, "5477": 262, "0255": 262, "8628": 262, "481": 262, "1258": 262, "0015": 262, "482": 262, "9650": 262, "4266": 262, "483": 262, "8081": 262, "0004": 262, "4455": 262, "484": 262, "5812": 262, "1719": 262, "485": 262, "1741": 262, "486": 262, "1595": 262, "0089": 262, "936": 262, "487": 262, "1667": 262, "3892": 262, "488": 262, "3824": 262, "0093": 262, "6528": 262, "489": 262, "1727": 262, "1435": 262, "059": 262, "490": 262, "0916": 262, "0018": 262, "4518": 262, "9310": 262, "0006": 262, "3553": 262, "492": 262, "9972": 262, "4515": 262, "493": 262, "9493": 262, "8759": 262, "494": 262, "3700": 262, "495": 262, "0269": 262, "4107": 262, "496": 262, "6094": 262, "497": 262, "9116": 262, "1518": 262, "6022": 262, "0047": 262, "2026": 262, "499": 262, "8009": 262, "0007": 262, "1845": 262, "6948": 262, "501": 262, "0971": 262, "0387": 262, "951": 262, "2885": 262, "503": 262, "0894": 262, "2552": 262, "0191": 262, "505": 262, "8276": 262, "506": 262, "9520": 262, "0037": 262, "5835": 262, "0374": 262, "7556": 262, "508": 262, "0579": 262, "0399": 262, "509": 262, "0094": 262, "7127": 262, "510": 262, "0119": 262, "0121": 262, "511": 262, "6013": 262, "0220": 262, "8064": 262, "2684": 262, "8179": 262, "513": 262, "4730": 262, "0046": 262, "5481": 262, "514": 262, "0234": 262, "4331": 262, "8143": 262, "2915": [262, 265], "9051": 262, "0353": 262, "9127": 262, "517": 262, "0527": 262, "6465": 262, "7579": 262, "2010": 262, "3927": 262, "5383": 262, "862": 262, "520": 262, "7386": 262, "1014": 262, "521": 262, "9163": 262, "4487": 262, "522": 262, "5626": 262, "523": 262, "2899": 262, "0113": 262, "524": 262, "6441": 262, "0044": 262, "3965": 262, "525": 262, "5001": 262, "2060": 262, "526": 262, "8905": 262, "4168": 262, "527": 262, "4458": 262, "0012": 262, "051": 262, "528": 262, "9446": 262, "3096": 262, "529": 262, "1971": 262, "530": 262, "4471": 262, "531": 262, "1270": 262, "0023": 262, "532": 262, "533": 262, "6550": 262, "583": 262, "534": 262, "1092": 262, "0049": 262, "787": 262, "535": 262, "7641": 262, "6674": 262, "536": 262, "0083": 262, "6375": 262, "537": 262, "1713": 262, "4933": 262, "538": 262, "3557": 262, "3964": 262, "539": 262, "0040": 262, "4129": 262, "540": 262, "7999": 262, "3176": 262, "541": 262, "2613": 262, "4742": 262, "542": 262, "1826": 262, "934": 262, "543": 262, "3158": 262, "3686": 262, "4047": 262, "545": 262, "7943": 262, "0902": 262, "546": 262, "3889": 262, "547": 262, "4309": 262, "4762": 262, "1662": 262, "9526": 262, "549": 262, "2170": 262, "0520": 262, "4367": 262, "550": 262, "4584": 262, "6931": 262, "0306": 262, "752": 262, "552": 262, "9054": 262, "2062": 262, "553": 262, "9523": 262, "4382": 262, "554": 262, "3534": 262, "0136": 262, "663": 262, "555": 262, "0279": 262, "0171": 262, "5679": 262, "0145": 262, "4652": 262, "557": 262, "1205": 262, "0091": 262, "4838": 262, "0630": 262, "1721": 262, "3604": 262, "560": 262, "1695": 262, "561": 262, "6994": 262, "3646": 262, "0192": 262, "4547": 262, "564": 262, "2580": 262, "2356": 262, "1397": 262, "8400": 262, "7309": 262, "567": 262, "0101": 262, "8539": 262, "1256": 262, "4851": 262, "0284": 262, "570": 262, "7214": 262, "2575": 262, "571": 262, "3996": 262, "572": 262, "2542": 262, "4089": 262, "573": 262, "5782": 262, "0071": 262, "7487": 262, "574": 262, "3665": 262, "0050": 262, "7797": 262, "575": 262, "5660": 262, "1355": 262, "932": 262, "8266": 262, "577": 262, "3782": 262, "743": [262, 265], "578": 262, "1228": 262, "2931": 262, "043": 262, "6242": 262, "580": 262, "7491": 262, "6910": 262, "581": 262, "2258": 262, "0262": 262, "582": 262, "2386": 262, "0249": 262, "816": 262, "2947": 262, "2122": 262, "584": 262, "0096": 262, "0124": 262, "585": 262, "2979": 262, "0156": 262, "586": 262, "3268": 262, "0369": 262, "6409": 262, "4034": 262, "4395": 262, "588": 262, "8407": 262, "4432": 262, "589": 262, "0069": 262, "3628": 262, "590": 262, "3101": 262, "591": 262, "3404": 262, "2964": 262, "594": 262, "8374": 262, "4346": 262, "7782": 262, "3826": 262, "7098": 262, "597": 262, "8646": 262, "0526": 262, "598": 262, "7452": 262, "9579": 262, "0991": 262, "889": 262, "600": 262, "0332": 262, "0199": 262, "601": 262, "602": 262, "7237": 262, "3591": 262, "603": 262, "3797": 262, "0022": 262, "6776": 262, "604": 262, "9337": 262, "1918": 262, "605": 262, "6301": 262, "606": 262, "5972": 262, "5044": 262, "2131": 262, "664": 262, "609": 262, "1180": 262, "6142": 262, "610": 262, "5289": 262, "6693": 262, "611": 262, "4947": 262, "612": 262, "2196": 262, "4060": 262, "613": 262, "7377": 262, "3732": 262, "614": 262, "4574": 262, "0997": 262, "3581": 262, "615": 262, "9247": 262, "3012": 262, "616": 262, "3761": 262, "5136": 262, "617": 262, "4771": 262, "894": 262, "0177": 262, "3644": 262, "620": 262, "5914": 262, "621": 262, "4353": 262, "7637": 262, "622": [262, 264, 266], "7577": 262, "1609": 262, "809": 262, "623": 262, "8873": 262, "624": 262, "6568": 262, "5234": 262, "subject": 262, "saw": 262, "explain": 263, "fine": 263, "semat": 263, "r3mtransform": 263, "sake": 263, "embodi": 263, "ai": 263, "env_transform": [263, 266], "s3": 263, "amazonaw": 263, "r3m_50": 263, "374m": 263, "4m": 263, "151mb": 263, "8m": 263, "130mb": 263, "115mb": 263, "6m": 263, "9mb": 263, "3m": 263, "109mb": 263, "0m": 263, "106mb": 263, "2mb": 263, "1mb": 263, "107m": 263, "8mb": 263, "121m": 263, "131m": 263, "3mb": 263, "147m": 263, "108mb": 263, "160m": 263, "114mb": 263, "171m": 263, "110mb": 263, "182m": 263, "4mb": 263, "197m": 263, "105mb": 263, "208m": 263, "219m": 263, "230m": 263, "100mb": 263, "241m": 263, "251m": 263, "103mb": 263, "261m": 263, "102mb": 263, "271m": 263, "281m": 263, "5mb": 263, "292m": 263, "308m": 263, "320m": 263, "330m": 263, "0mb": 263, "344m": 263, "359m": 263, "111mb": 263, "371m": 263, "wiser": 263, "again": [263, 266], "conclud": 263, "_storag": 263, "793": [263, 264], "pretrained_model": [263, 264], "torchrl_demo": [264, 265], "5836": 264, "torchrl_env": [264, 266], "5833": 264, "4895": 264, "demo": 265, "icml": 265, "dai": 265, "vmoen": 265, "fb": 265, "question": 265, "team": 265, "invest": 265, "platform": 265, "media": 265, "truli": 265, "predominantli": 265, "tensordict1": 265, "tensordict2": 265, "tensordict_sampl": 265, "_sampler": 265, "_sum_tre": 265, "modulenotfounderror": 265, "28791671991348267": 265, "gym_env": 265, "noopresetenv": [265, 266], "lazyconv2d": 265, "6400": 265, "backbone_modul": 265, "actor_modul": 265, "params_expand": 265, "tensordict_exp": 265, "base_modul": 265, "0137": 265, "1524": 265, "0641": 265, "copybackward": 265, "1335": 265, "9833": 265, "3497": 265, "6889": 265, "6433": 265, "clampbackward1": 265, "1131": 265, "1761": 265, "3425": 265, "2665": 265, "6207": 265, "1441": 265, "2375": 265, "1372": 265, "3810": 265, "meanbackward1": 265, "roughli": 265, "tensordicts_prealloc": 265, "tensordicts_stack": 265, "tensordict_rollout": [265, 266], "disclaim": 265, "concatmodul": 265, "loss_td": 265, "3389": 265, "_default_get": 265, "1012": 265, "keyerror": 265, "year": 265, "roadmap": 265, "compris": 265, "contributor": 265, "curiou": 265, "feedback": 265, "nascent": 265, "5837": 265, "supervis": 266, "unsupervis": 266, "rom": 266, "licens": 266, "pygam": 266, "unifi": 266, "insid": 266, "_build_env": 266, "sphinx_gallery_start_ignor": 266, "filterwarn": 266, "sphinx_gallery_end_ignor": 266, "adventur": 266, "ram": 266, "airraid": 266, "alien": 266, "amidar": 266, "assault": 266, "1884": 266, "exectut": 266, "reproduct": 266, "tensordict_tprim": 266, "imshow": 266, "axesimag": 266, "0x7f050b25bf10": 266, "inconsist": 266, "swingup": 266, "swingup_spars": 266, "ball_in_cup": 266, "catch": 266, "balance_spars": 266, "three_pol": 266, "two_pol": 266, "finger": 266, "turn_easi": 266, "turn_hard": 266, "fish": 266, "swim": 266, "hopper": 266, "hop": 266, "run_pure_st": 266, "bring_bal": 266, "bring_peg": 266, "insert_bal": 266, "insert_peg": 266, "point_mass": 266, "reacher": 266, "swimmer": 266, "swimmer6": 266, "swimmer15": 266, "walker": 266, "dog": 266, "trot": 266, "humanoid_cmu": 266, "lqr": 266, "lqr_2_1": 266, "lqr_6_2": 266, "quadrup": 266, "escap": 266, "stacker": 266, "stack_2": 266, "stack_4": 266, "wrapper1": 266, "wrapper2": 266, "obviou": 266, "truth": 266, "env0": 266, "env_transformed_bi": 266, "stanc": 266, "transformeddistribut": 266, "base_dist": 266, "concat": 266, "mofidi": 266, "transformedenviron": 266, "moderet": 266, "computation": 266, "legitim": 266, "incom": 266, "amongst": 266, "wor": 266, "convention": 266, "scope": 266, "markovian": 266, "3288080526": 266, "sometim": 266, "constain": 266, "foo": 266, "bar_": 266, "get_someth": 266, "bar_e5f4f2c": 266, "d869": 266, "aargh": 266, "foo_list": 266, "vec_env": 266, "_dispatch_caller_parallel": 266, "0x7f050a1cde50": 266, "bar_edc99da6": 266, "b3cb": 266, "bar_edc7f7b2": 266, "b9c9": 266, "bar_edc8020c": 266, "9c0a": 266, "parallen": 266, "carefulli": 266, "commonli": 266, "approxim": 266, "particularili": 266, "evolv": 266, "steadi": 266, "approx": 266, "0878": 266, "2577": 266, "0850": 266, "1393": 266, "1333": 266, "_extra_st": 266, "observation_ssq": 266, "observation_sum": 266, "0483": 266, "1400": 266, "0942": 266, "dispach": 266, "absor": 266}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "MultiDiscreteTensorSpec"], [29, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [30, 0, 1, "", "MultiStep"], [31, 0, 1, "", "OneHotDiscreteTensorSpec"], [32, 0, 1, "", "PrioritizedReplayBuffer"], [33, 0, 1, "", "ReplayBuffer"], [34, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [35, 0, 1, "", "TensorDictReplayBuffer"], [36, 0, 1, "", "TensorSpec"], [37, 0, 1, "", "UnboundedContinuousTensorSpec"], [38, 0, 1, "", "UnboundedDiscreteTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "to_one_hot"], [28, 1, 1, "", "to_one_hot_spec"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_categorical"], [29, 1, 1, "", "to_categorical_spec"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[30, 1, 1, "", "add_module"], [30, 1, 1, "", "apply"], [30, 1, 1, "", "bfloat16"], [30, 1, 1, "", "buffers"], [30, 1, 1, "", "children"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 1, 1, "", "double"], [30, 1, 1, "", "eval"], [30, 1, 1, "", "extra_repr"], [30, 1, 1, "", "float"], [30, 1, 1, "", "forward"], [30, 1, 1, "", "get_buffer"], [30, 1, 1, "", "get_extra_state"], [30, 1, 1, "", "get_parameter"], [30, 1, 1, "", "get_submodule"], [30, 1, 1, "", "half"], [30, 1, 1, "", "ipu"], [30, 1, 1, "", "load_state_dict"], [30, 1, 1, "", "modules"], [30, 1, 1, "", "named_buffers"], [30, 1, 1, "", "named_children"], [30, 1, 1, "", "named_modules"], [30, 1, 1, "", "named_parameters"], [30, 1, 1, "", "parameters"], [30, 1, 1, "", "register_backward_hook"], [30, 1, 1, "", "register_buffer"], [30, 1, 1, "", "register_forward_hook"], [30, 1, 1, "", "register_forward_pre_hook"], [30, 1, 1, "", "register_full_backward_hook"], [30, 1, 1, "", "register_full_backward_pre_hook"], [30, 1, 1, "", "register_load_state_dict_post_hook"], [30, 1, 1, "", "register_module"], [30, 1, 1, "", "register_parameter"], [30, 1, 1, "", "register_state_dict_pre_hook"], [30, 1, 1, "", "requires_grad_"], [30, 1, 1, "", "set_extra_state"], [30, 1, 1, "", "share_memory"], [30, 1, 1, "", "state_dict"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_empty"], [30, 1, 1, "", "train"], [30, 1, 1, "", "type"], [30, 1, 1, "", "xpu"], [30, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[32, 1, 1, "", "add"], [32, 1, 1, "", "append_transform"], [32, 1, 1, "", "extend"], [32, 1, 1, "", "insert_transform"], [32, 1, 1, "", "sample"]], "torchrl.data.ReplayBuffer": [[33, 1, 1, "", "add"], [33, 1, 1, "", "append_transform"], [33, 1, 1, "", "extend"], [33, 1, 1, "", "insert_transform"], [33, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[34, 1, 1, "", "add"], [34, 1, 1, "", "append_transform"], [34, 1, 1, "", "extend"], [34, 1, 1, "", "insert_transform"], [34, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "implements_for_spec"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "squeeze"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[38, 1, 1, "", "assert_is_in"], [38, 1, 1, "", "encode"], [38, 1, 1, "", "expand"], [38, 1, 1, "", "implements_for_spec"], [38, 1, 1, "", "index"], [38, 1, 1, "", "is_in"], [38, 1, 1, "", "project"], [38, 1, 1, "", "rand"], [38, 1, 1, "", "squeeze"], [38, 1, 1, "", "to_numpy"], [38, 1, 1, "", "type_check"], [38, 1, 1, "", "zero"]], "torchrl.data.datasets": [[39, 0, 1, "", "D4RLExperienceReplay"], [40, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[39, 1, 1, "", "add"], [39, 1, 1, "", "append_transform"], [39, 1, 1, "", "extend"], [39, 1, 1, "", "insert_transform"], [39, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[40, 1, 1, "", "add"], [40, 1, 1, "", "append_transform"], [40, 1, 1, "", "extend"], [40, 1, 1, "", "insert_transform"], [40, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[41, 0, 1, "", "LazyMemmapStorage"], [42, 0, 1, "", "LazyTensorStorage"], [43, 0, 1, "", "ListStorage"], [44, 0, 1, "", "PrioritizedSampler"], [45, 0, 1, "", "RandomSampler"], [46, 0, 1, "", "RoundRobinWriter"], [47, 0, 1, "", "Sampler"], [48, 0, 1, "", "SamplerWithoutReplacement"], [49, 0, 1, "", "Storage"], [50, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[41, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[42, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[43, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[44, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[46, 1, 1, "", "add"], [46, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[49, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[50, 1, 1, "", "add"], [50, 1, 1, "", "extend"]], "torchrl.envs": [[51, 0, 1, "", "EnvBase"], [52, 0, 1, "", "EnvCreator"], [53, 0, 1, "", "EnvMetaData"], [54, 0, 1, "", "GymLikeEnv"], [55, 2, 1, "", "ModelBasedEnvBase"], [56, 0, 1, "", "MultiThreadedEnv"], [57, 0, 1, "", "ParallelEnv"], [58, 0, 1, "", "SerialEnv"], [55, 1, 1, "", "rand_step"], [55, 1, 1, "", "reset"], [55, 1, 1, "", "rollout"], [55, 1, 1, "", "set_seed"], [55, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[51, 1, 1, "", "add_module"], [51, 1, 1, "", "apply"], [51, 3, 1, "", "batch_locked"], [51, 1, 1, "", "bfloat16"], [51, 1, 1, "", "buffers"], [51, 1, 1, "", "children"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 1, 1, "", "double"], [51, 1, 1, "", "eval"], [51, 1, 1, "", "extra_repr"], [51, 1, 1, "", "fake_tensordict"], [51, 1, 1, "", "float"], [51, 1, 1, "", "forward"], [51, 1, 1, "", "get_buffer"], [51, 1, 1, "", "get_extra_state"], [51, 1, 1, "", "get_parameter"], [51, 1, 1, "", "get_submodule"], [51, 1, 1, "", "half"], [51, 1, 1, "", "ipu"], [51, 1, 1, "", "load_state_dict"], [51, 1, 1, "", "modules"], [51, 1, 1, "", "named_buffers"], [51, 1, 1, "", "named_children"], [51, 1, 1, "", "named_modules"], [51, 1, 1, "", "named_parameters"], [51, 1, 1, "", "parameters"], [51, 1, 1, "", "rand_action"], [51, 1, 1, "id0", "rand_step"], [51, 1, 1, "", "register_backward_hook"], [51, 1, 1, "", "register_buffer"], [51, 1, 1, "", "register_forward_hook"], [51, 1, 1, "", "register_forward_pre_hook"], [51, 1, 1, "", "register_full_backward_hook"], [51, 1, 1, "", "register_full_backward_pre_hook"], [51, 1, 1, "", "register_load_state_dict_post_hook"], [51, 1, 1, "", "register_module"], [51, 1, 1, "", "register_parameter"], [51, 1, 1, "", "register_state_dict_pre_hook"], [51, 1, 1, "", "requires_grad_"], [51, 1, 1, "id1", "reset"], [51, 1, 1, "id2", "rollout"], [51, 1, 1, "", "set_extra_state"], [51, 1, 1, "id3", "set_seed"], [51, 1, 1, "", "share_memory"], [51, 3, 1, "", "specs"], [51, 1, 1, "", "state_dict"], [51, 1, 1, "id4", "step"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_empty"], [51, 1, 1, "", "train"], [51, 1, 1, "", "type"], [51, 1, 1, "", "xpu"], [51, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[54, 1, 1, "", "add_module"], [54, 1, 1, "", "apply"], [54, 3, 1, "", "batch_locked"], [54, 1, 1, "", "bfloat16"], [54, 1, 1, "", "buffers"], [54, 1, 1, "", "children"], [54, 1, 1, "", "close"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 1, 1, "", "double"], [54, 1, 1, "", "eval"], [54, 1, 1, "", "extra_repr"], [54, 1, 1, "", "fake_tensordict"], [54, 1, 1, "", "float"], [54, 1, 1, "", "forward"], [54, 1, 1, "", "get_buffer"], [54, 1, 1, "", "get_extra_state"], [54, 1, 1, "", "get_parameter"], [54, 1, 1, "", "get_submodule"], [54, 1, 1, "", "half"], [54, 1, 1, "", "ipu"], [54, 1, 1, "", "load_state_dict"], [54, 1, 1, "", "modules"], [54, 1, 1, "", "named_buffers"], [54, 1, 1, "", "named_children"], [54, 1, 1, "", "named_modules"], [54, 1, 1, "", "named_parameters"], [54, 1, 1, "", "parameters"], [54, 1, 1, "", "rand_action"], [54, 1, 1, "", "rand_step"], [54, 1, 1, "", "read_action"], [54, 1, 1, "", "read_done"], [54, 1, 1, "", "read_obs"], [54, 1, 1, "", "read_reward"], [54, 1, 1, "", "register_backward_hook"], [54, 1, 1, "", "register_buffer"], [54, 1, 1, "", "register_forward_hook"], [54, 1, 1, "", "register_forward_pre_hook"], [54, 1, 1, "", "register_full_backward_hook"], [54, 1, 1, "", "register_full_backward_pre_hook"], [54, 1, 1, "", "register_load_state_dict_post_hook"], [54, 1, 1, "", "register_module"], [54, 1, 1, "", "register_parameter"], [54, 1, 1, "", "register_state_dict_pre_hook"], [54, 1, 1, "", "requires_grad_"], [54, 1, 1, "", "reset"], [54, 1, 1, "", "rollout"], [54, 1, 1, "", "set_extra_state"], [54, 1, 1, "", "set_info_dict_reader"], [54, 1, 1, "", "set_seed"], [54, 1, 1, "", "share_memory"], [54, 3, 1, "", "specs"], [54, 1, 1, "", "state_dict"], [54, 1, 1, "", "step"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_empty"], [54, 1, 1, "", "train"], [54, 1, 1, "", "type"], [54, 1, 1, "", "xpu"], [54, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[56, 1, 1, "", "add_module"], [56, 1, 1, "", "apply"], [56, 3, 1, "", "batch_locked"], [56, 1, 1, "", "bfloat16"], [56, 1, 1, "", "buffers"], [56, 1, 1, "", "children"], [56, 1, 1, "", "close"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 1, 1, "", "double"], [56, 1, 1, "", "eval"], [56, 1, 1, "", "extra_repr"], [56, 1, 1, "", "fake_tensordict"], [56, 1, 1, "", "float"], [56, 1, 1, "", "forward"], [56, 1, 1, "", "get_buffer"], [56, 1, 1, "", "get_extra_state"], [56, 1, 1, "", "get_parameter"], [56, 1, 1, "", "get_submodule"], [56, 1, 1, "", "half"], [56, 1, 1, "", "ipu"], [56, 1, 1, "", "load_state_dict"], [56, 1, 1, "", "modules"], [56, 1, 1, "", "named_buffers"], [56, 1, 1, "", "named_children"], [56, 1, 1, "", "named_modules"], [56, 1, 1, "", "named_parameters"], [56, 1, 1, "", "parameters"], [56, 1, 1, "", "rand_action"], [56, 1, 1, "", "rand_step"], [56, 1, 1, "", "register_backward_hook"], [56, 1, 1, "", "register_buffer"], [56, 1, 1, "", "register_forward_hook"], [56, 1, 1, "", "register_forward_pre_hook"], [56, 1, 1, "", "register_full_backward_hook"], [56, 1, 1, "", "register_full_backward_pre_hook"], [56, 1, 1, "", "register_load_state_dict_post_hook"], [56, 1, 1, "", "register_module"], [56, 1, 1, "", "register_parameter"], [56, 1, 1, "", "register_state_dict_pre_hook"], [56, 1, 1, "", "requires_grad_"], [56, 1, 1, "", "reset"], [56, 1, 1, "", "rollout"], [56, 1, 1, "", "set_extra_state"], [56, 1, 1, "", "set_seed"], [56, 1, 1, "", "share_memory"], [56, 3, 1, "", "specs"], [56, 1, 1, "", "state_dict"], [56, 1, 1, "", "step"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_empty"], [56, 1, 1, "", "train"], [56, 1, 1, "", "type"], [56, 1, 1, "", "xpu"], [56, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[57, 1, 1, "", "add_module"], [57, 1, 1, "", "apply"], [57, 3, 1, "", "batch_locked"], [57, 1, 1, "", "bfloat16"], [57, 1, 1, "", "buffers"], [57, 1, 1, "", "children"], [57, 1, 1, "", "cpu"], [57, 1, 1, "", "cuda"], [57, 1, 1, "", "double"], [57, 1, 1, "", "eval"], [57, 1, 1, "", "extra_repr"], [57, 1, 1, "", "fake_tensordict"], [57, 1, 1, "", "float"], [57, 1, 1, "", "forward"], [57, 1, 1, "", "get_buffer"], [57, 1, 1, "", "get_extra_state"], [57, 1, 1, "", "get_parameter"], [57, 1, 1, "", "get_submodule"], [57, 1, 1, "", "half"], [57, 1, 1, "", "ipu"], [57, 1, 1, "", "load_state_dict"], [57, 1, 1, "", "modules"], [57, 1, 1, "", "named_buffers"], [57, 1, 1, "", "named_children"], [57, 1, 1, "", "named_modules"], [57, 1, 1, "", "named_parameters"], [57, 1, 1, "", "parameters"], [57, 1, 1, "", "rand_action"], [57, 1, 1, "", "rand_step"], [57, 1, 1, "", "register_backward_hook"], [57, 1, 1, "", "register_buffer"], [57, 1, 1, "", "register_forward_hook"], [57, 1, 1, "", "register_forward_pre_hook"], [57, 1, 1, "", "register_full_backward_hook"], [57, 1, 1, "", "register_full_backward_pre_hook"], [57, 1, 1, "", "register_load_state_dict_post_hook"], [57, 1, 1, "", "register_module"], [57, 1, 1, "", "register_parameter"], [57, 1, 1, "", "register_state_dict_pre_hook"], [57, 1, 1, "", "requires_grad_"], [57, 1, 1, "", "reset"], [57, 1, 1, "", "rollout"], [57, 1, 1, "", "set_extra_state"], [57, 1, 1, "", "set_seed"], [57, 1, 1, "", "share_memory"], [57, 3, 1, "", "specs"], [57, 1, 1, "", "state_dict"], [57, 1, 1, "", "step"], [57, 1, 1, "", "to"], [57, 1, 1, "", "to_empty"], [57, 1, 1, "", "train"], [57, 1, 1, "", "type"], [57, 1, 1, "", "update_kwargs"], [57, 1, 1, "", "xpu"], [57, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[58, 1, 1, "", "add_module"], [58, 1, 1, "", "apply"], [58, 3, 1, "", "batch_locked"], [58, 1, 1, "", "bfloat16"], [58, 1, 1, "", "buffers"], [58, 1, 1, "", "children"], [58, 1, 1, "", "cpu"], [58, 1, 1, "", "cuda"], [58, 1, 1, "", "double"], [58, 1, 1, "", "eval"], [58, 1, 1, "", "extra_repr"], [58, 1, 1, "", "fake_tensordict"], [58, 1, 1, "", "float"], [58, 1, 1, "", "forward"], [58, 1, 1, "", "get_buffer"], [58, 1, 1, "", "get_extra_state"], [58, 1, 1, "", "get_parameter"], [58, 1, 1, "", "get_submodule"], [58, 1, 1, "", "half"], [58, 1, 1, "", "ipu"], [58, 1, 1, "", "load_state_dict"], [58, 1, 1, "", "modules"], [58, 1, 1, "", "named_buffers"], [58, 1, 1, "", "named_children"], [58, 1, 1, "", "named_modules"], [58, 1, 1, "", "named_parameters"], [58, 1, 1, "", "parameters"], [58, 1, 1, "", "rand_action"], [58, 1, 1, "", "rand_step"], [58, 1, 1, "", "register_backward_hook"], [58, 1, 1, "", "register_buffer"], [58, 1, 1, "", "register_forward_hook"], [58, 1, 1, "", "register_forward_pre_hook"], [58, 1, 1, "", "register_full_backward_hook"], [58, 1, 1, "", "register_full_backward_pre_hook"], [58, 1, 1, "", "register_load_state_dict_post_hook"], [58, 1, 1, "", "register_module"], [58, 1, 1, "", "register_parameter"], [58, 1, 1, "", "register_state_dict_pre_hook"], [58, 1, 1, "", "requires_grad_"], [58, 1, 1, "", "reset"], [58, 1, 1, "", "rollout"], [58, 1, 1, "", "set_extra_state"], [58, 1, 1, "", "set_seed"], [58, 1, 1, "", "share_memory"], [58, 3, 1, "", "specs"], [58, 1, 1, "", "state_dict"], [58, 1, 1, "", "step"], [58, 1, 1, "", "to"], [58, 1, 1, "", "to_empty"], [58, 1, 1, "", "train"], [58, 1, 1, "", "type"], [58, 1, 1, "", "update_kwargs"], [58, 1, 1, "", "xpu"], [58, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.brax": [[59, 2, 1, "", "BraxEnv"], [60, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[61, 2, 1, "", "DMControlEnv"], [62, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[63, 2, 1, "", "GymEnv"], [64, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[65, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[66, 2, 1, "", "JumanjiEnv"], [67, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.openml": [[68, 2, 1, "", "OpenMLEnv"]], "torchrl.envs.libs.vmas": [[69, 2, 1, "", "VmasEnv"], [70, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[71, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[72, 0, 1, "", "BinarizeReward"], [73, 0, 1, "", "CatFrames"], [74, 0, 1, "", "CatTensors"], [75, 0, 1, "", "CenterCrop"], [76, 0, 1, "", "Compose"], [77, 0, 1, "", "DiscreteActionProjection"], [78, 0, 1, "", "DoubleToFloat"], [79, 0, 1, "", "ExcludeTransform"], [80, 0, 1, "", "FiniteTensorDictCheck"], [81, 0, 1, "", "FlattenObservation"], [82, 0, 1, "", "FrameSkipTransform"], [83, 0, 1, "", "GrayScale"], [84, 0, 1, "", "InitTracker"], [85, 0, 1, "", "NoopResetEnv"], [86, 0, 1, "", "ObservationNorm"], [87, 0, 1, "", "ObservationTransform"], [88, 0, 1, "", "PinMemoryTransform"], [89, 0, 1, "", "R3MTransform"], [90, 0, 1, "", "RandomCropTensorDict"], [91, 0, 1, "", "RenameTransform"], [92, 0, 1, "", "Resize"], [93, 0, 1, "", "RewardClipping"], [94, 0, 1, "", "RewardScaling"], [95, 0, 1, "", "RewardSum"], [96, 0, 1, "", "SelectTransform"], [97, 0, 1, "", "SqueezeTransform"], [98, 0, 1, "", "StepCounter"], [99, 0, 1, "", "TensorDictPrimer"], [100, 0, 1, "", "TimeMaxPool"], [101, 0, 1, "", "ToTensorImage"], [102, 0, 1, "", "Transform"], [103, 0, 1, "", "TransformedEnv"], [104, 0, 1, "", "UnsqueezeTransform"], [105, 0, 1, "", "VIPRewardTransform"], [106, 0, 1, "", "VIPTransform"], [107, 0, 1, "", "VecNorm"], [108, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[72, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[73, 1, 1, "", "forward"], [73, 1, 1, "", "reset"], [73, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[74, 1, 1, "", "forward"], [74, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[75, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[76, 1, 1, "", "forward"], [76, 1, 1, "", "reset"], [76, 1, 1, "", "to"], [76, 1, 1, "", "transform_input_spec"], [76, 1, 1, "", "transform_observation_spec"], [76, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[77, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[78, 1, 1, "", "transform_input_spec"], [78, 1, 1, "", "transform_observation_spec"], [78, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[79, 1, 1, "", "forward"], [79, 1, 1, "", "reset"], [79, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[80, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[81, 1, 1, "", "forward"], [81, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[82, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[83, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[84, 1, 1, "", "forward"], [84, 1, 1, "", "reset"], [84, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[85, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[86, 1, 1, "", "init_stats"], [86, 1, 1, "", "transform_input_spec"], [86, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[88, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[89, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[90, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[91, 1, 1, "", "forward"], [91, 1, 1, "", "transform_input_spec"], [91, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[92, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[93, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[94, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[95, 1, 1, "", "forward"], [95, 1, 1, "", "reset"], [95, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[96, 1, 1, "", "forward"], [96, 1, 1, "", "reset"], [96, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[98, 1, 1, "", "forward"], [98, 1, 1, "", "reset"], [98, 1, 1, "", "transform_input_spec"], [98, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[99, 1, 1, "", "forward"], [99, 1, 1, "", "reset"], [99, 1, 1, "", "to"], [99, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[100, 1, 1, "", "forward"], [100, 1, 1, "", "reset"], [100, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[101, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[102, 1, 1, "", "forward"], [102, 1, 1, "", "reset"], [102, 1, 1, "", "transform_done_spec"], [102, 1, 1, "", "transform_input_spec"], [102, 1, 1, "", "transform_observation_spec"], [102, 1, 1, "", "transform_output_spec"], [102, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[103, 3, 1, "", "action_spec"], [103, 3, 1, "", "batch_locked"], [103, 3, 1, "", "done_spec"], [103, 1, 1, "", "eval"], [103, 3, 1, "", "input_spec"], [103, 1, 1, "", "load_state_dict"], [103, 3, 1, "", "observation_spec"], [103, 3, 1, "", "output_spec"], [103, 3, 1, "", "reward_spec"], [103, 1, 1, "", "set_seed"], [103, 1, 1, "", "state_dict"], [103, 1, 1, "", "to"], [103, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[104, 1, 1, "", "transform_input_spec"], [104, 1, 1, "", "transform_observation_spec"], [104, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[105, 1, 1, "", "forward"], [105, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[106, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[107, 1, 1, "", "build_td_for_shared_vecnorm"], [107, 1, 1, "", "forward"], [107, 1, 1, "", "get_extra_state"], [107, 1, 1, "", "set_extra_state"], [107, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[109, 2, 1, "", "check_env_specs"], [110, 2, 1, "", "exploration_mode"], [111, 2, 1, "", "get_available_libraries"], [112, 2, 1, "", "set_exploration_mode"], [113, 2, 1, "", "step_mdp"]], "torchrl.modules": [[114, 0, 1, "", "CEMPlanner"], [115, 0, 1, "", "ConvNet"], [116, 0, 1, "", "DdpgCnnActor"], [117, 0, 1, "", "DdpgCnnQNet"], [118, 0, 1, "", "DdpgMlpActor"], [119, 0, 1, "", "DdpgMlpQNet"], [120, 0, 1, "", "Delta"], [121, 0, 1, "", "DistributionalDQNnet"], [122, 0, 1, "", "DistributionalQValueHook"], [123, 0, 1, "", "DreamerActor"], [124, 0, 1, "", "DuelingCnnDQNet"], [125, 0, 1, "", "IndependentNormal"], [126, 0, 1, "", "LSTMNet"], [127, 0, 1, "", "MLP"], [128, 0, 1, "", "MPCPlannerBase"], [129, 0, 1, "", "MPPIPlanner"], [130, 0, 1, "", "NoisyLazyLinear"], [131, 0, 1, "", "NoisyLinear"], [132, 0, 1, "", "NormalParamWrapper"], [133, 0, 1, "", "ObsDecoder"], [134, 0, 1, "", "ObsEncoder"], [135, 0, 1, "", "OneHotCategorical"], [136, 0, 1, "", "QValueHook"], [137, 0, 1, "", "RSSMPosterior"], [138, 0, 1, "", "RSSMPrior"], [139, 0, 1, "", "TanhDelta"], [140, 0, 1, "", "TanhNormal"], [141, 0, 1, "", "TruncatedNormal"], [142, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[114, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[115, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[116, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[117, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[118, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[119, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[120, 1, 1, "", "log_prob"], [120, 3, 1, "", "mean"], [120, 3, 1, "", "mode"], [120, 1, 1, "", "rsample"], [120, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[121, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[123, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[124, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[125, 3, 1, "", "mode"]], "torchrl.modules.LSTMNet": [[126, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[127, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[129, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[130, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[132, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[133, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[134, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[135, 1, 1, "", "log_prob"], [135, 3, 1, "", "mode"], [135, 1, 1, "", "rsample"], [135, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[137, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[138, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[139, 3, 1, "", "mean"], [139, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[140, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[141, 1, 1, "", "log_prob"], [141, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module": [[143, 0, 1, "", "Actor"], [144, 0, 1, "", "ActorCriticOperator"], [145, 0, 1, "", "ActorCriticWrapper"], [146, 0, 1, "", "ActorValueOperator"], [147, 0, 1, "", "AdditiveGaussianWrapper"], [148, 0, 1, "", "DistributionalQValueActor"], [149, 0, 1, "", "EGreedyWrapper"], [150, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [151, 0, 1, "", "ProbabilisticActor"], [152, 0, 1, "", "QValueActor"], [153, 0, 1, "", "SafeModule"], [154, 0, 1, "", "SafeProbabilisticModule"], [155, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [156, 0, 1, "", "SafeSequential"], [157, 0, 1, "", "ValueOperator"], [158, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[144, 1, 1, "", "get_critic_operator"], [144, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[145, 1, 1, "", "get_policy_operator"], [145, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[146, 1, 1, "", "get_policy_operator"], [146, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[147, 1, 1, "", "forward"], [147, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[149, 1, 1, "", "forward"], [149, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[150, 1, 1, "", "forward"], [150, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.SafeModule": [[153, 1, 1, "", "random"], [153, 1, 1, "", "random_sample"], [153, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[154, 1, 1, "", "random"], [154, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[158, 1, 1, "", "get_reward_operator"], [158, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.tensordict_module.common": [[159, 0, 1, "", "ensure_tensordict_compatible"], [160, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[161, 0, 1, "", "biased_softplus"], [162, 0, 1, "", "inv_softplus"], [163, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[161, 1, 1, "", "forward"]], "torchrl.objectives": [[164, 0, 1, "", "A2CLoss"], [165, 0, 1, "", "ClipPPOLoss"], [166, 0, 1, "", "DDPGLoss"], [167, 0, 1, "", "DQNLoss"], [168, 0, 1, "", "DiscreteSACLoss"], [169, 0, 1, "", "DistributionalDQNLoss"], [170, 0, 1, "", "DreamerActorLoss"], [171, 0, 1, "", "DreamerModelLoss"], [172, 0, 1, "", "DreamerValueLoss"], [173, 0, 1, "", "HardUpdate"], [174, 0, 1, "", "IQLLoss"], [175, 0, 1, "", "KLPENPPOLoss"], [176, 0, 1, "", "LossModule"], [177, 0, 1, "", "PPOLoss"], [178, 0, 1, "", "REDQLoss"], [179, 0, 1, "", "ReinforceLoss"], [180, 0, 1, "", "SACLoss"], [181, 0, 1, "", "SoftUpdate"], [182, 0, 1, "", "TD3Loss"], [183, 0, 1, "", "ValueEstimators"], [184, 0, 1, "", "default_value_kwargs"], [185, 0, 1, "", "distance_loss"], [186, 0, 1, "", "hold_out_net"], [187, 0, 1, "", "hold_out_params"], [188, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[164, 1, 1, "", "forward"], [164, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[165, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[166, 1, 1, "", "forward"], [166, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[167, 1, 1, "", "forward"], [167, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteSACLoss": [[168, 1, 1, "", "forward"], [168, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[169, 1, 1, "", "forward"], [169, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[170, 1, 1, "", "forward"], [170, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[171, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[172, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[174, 1, 1, "", "forward"], [174, 1, 1, "", "loss_value_diff"], [174, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[175, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[176, 1, 1, "", "convert_to_functional"], [176, 1, 1, "", "cpu"], [176, 1, 1, "", "cuda"], [176, 1, 1, "", "double"], [176, 1, 1, "", "float"], [176, 1, 1, "", "forward"], [176, 1, 1, "", "half"], [176, 1, 1, "", "make_value_estimator"], [176, 1, 1, "", "named_parameters"], [176, 1, 1, "", "parameters"], [176, 1, 1, "", "register_buffer"], [176, 1, 1, "", "to"], [176, 3, 1, "", "value_estimator"]], "torchrl.objectives.PPOLoss": [[177, 1, 1, "", "forward"], [177, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[178, 1, 1, "", "forward"], [178, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[179, 1, 1, "", "forward"], [179, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[180, 1, 1, "", "forward"], [180, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.TD3Loss": [[182, 1, 1, "", "forward"], [182, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[189, 0, 1, "", "GAE"], [190, 0, 1, "", "TD0Estimator"], [191, 0, 1, "", "TD1Estimator"], [192, 0, 1, "", "TDLambdaEstimator"], [193, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[190, 1, 1, "", "forward"], [190, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[192, 1, 1, "", "forward"], [192, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[193, 1, 1, "", "forward"], [193, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[194, 0, 1, "", "generalized_advantage_estimate"], [195, 0, 1, "", "td0_advantage_estimate"], [196, 0, 1, "", "td0_return_estimate"], [197, 0, 1, "", "td1_advantage_estimate"], [198, 0, 1, "", "td1_return_estimate"], [199, 0, 1, "", "td_lambda_advantage_estimate"], [200, 0, 1, "", "td_lambda_return_estimate"], [201, 0, 1, "", "vec_generalized_advantage_estimate"], [202, 0, 1, "", "vec_td1_advantage_estimate"], [203, 0, 1, "", "vec_td1_return_estimate"], [204, 0, 1, "", "vec_td_lambda_advantage_estimate"], [205, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[206, 2, 1, "", "TensorDictRecorder"], [207, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[208, 2, 1, "", "Logger"], [210, 2, 1, "", "generate_exp_name"], [211, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[209, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[212, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[213, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[214, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[215, 0, 1, "", "BatchSubSampler"], [216, 0, 1, "", "ClearCudaCache"], [217, 0, 1, "", "CountFramesLog"], [218, 0, 1, "", "LogReward"], [219, 0, 1, "", "OptimizerHook"], [220, 0, 1, "", "Recorder"], [221, 0, 1, "", "ReplayBufferTrainer"], [222, 0, 1, "", "RewardNormalizer"], [223, 0, 1, "", "SelectKeys"], [224, 0, 1, "", "Trainer"], [225, 0, 1, "", "TrainerHookBase"], [226, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[215, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[216, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[217, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[218, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[219, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[220, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[221, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[222, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[223, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[225, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[226, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[227, 2, 1, "", "correct_for_frame_skip"], [228, 2, 1, "", "get_stats_random_rollout"], [229, 2, 1, "", "make_a2c_loss"], [230, 2, 1, "", "make_a2c_model"], [231, 2, 1, "", "make_collector_offpolicy"], [232, 2, 1, "", "make_collector_onpolicy"], [233, 2, 1, "", "make_ddpg_actor"], [234, 2, 1, "", "make_ddpg_loss"], [235, 2, 1, "", "make_dqn_actor"], [236, 2, 1, "", "make_dqn_loss"], [237, 2, 1, "", "make_ppo_loss"], [238, 2, 1, "", "make_ppo_model"], [239, 2, 1, "", "make_redq_loss"], [240, 2, 1, "", "make_redq_model"], [241, 2, 1, "", "make_replay_buffer"], [242, 2, 1, "", "make_sac_loss"], [243, 2, 1, "", "make_sac_model"], [244, 2, 1, "", "make_target_updater"], [245, 2, 1, "", "make_trainer"], [246, 2, 1, "", "parallel_env_constructor"], [247, 2, 1, "", "sync_async_collector"], [248, 2, 1, "", "sync_sync_collector"], [249, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 6, 253, 254, 255, 256, 257, 258, 259, 262, 265, 266], "document": [0, 9], "tutori": [0, 259], "basic": 0, "intermedi": [0, 8], "advanc": 0, "refer": [0, 251], "knowledg": [0, 252], "base": [0, 7, 252], "indic": 0, "tabl": 0, "collector": [1, 257, 258, 259, 265], "packag": [1, 2, 3, 253, 254, 255, 256], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 257, 258, 259, 265], "distribut": [1, 253], "helper": [1, 3], "function": [1, 4, 254, 258, 259, 265], "replai": [2, 257, 258, 259, 265], "buffer": [2, 257, 258, 259, 265], "compos": [2, 76], "store": [2, 258], "trajectori": 2, "dataset": 2, "tensorspec": [2, 36], "util": [2, 253, 254, 255], "env": [3, 262, 265, 266], "vector": [3, 265], "transform": [3, 102, 257, 259, 262, 265, 266], "clone": [3, 7], "record": [3, 220, 255, 257], "domain": 3, "specif": [3, 261], "librari": [3, 265], "thing": [4, 257, 262], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 265], "gener": 4, "have": 4, "you": 4, "valid": 4, "your": [4, 6, 257, 262], "algorithm": 4, "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 257, 258], "return": [4, 254], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "agent": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 257, 259, 261, 262], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 265], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "i": [4, 5, 8], "favor": 4, "compon": 4, "veloc": 4, "v": 4, "l2": 4, "action": [4, 262], "magnitud": 4, "task": [4, 261], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 257, 258, 259], "standard": 4, "explor": [4, 253, 257, 258], "valu": [4, 254, 257, 259], "loss": [4, 257, 258, 259], "earli": 4, "train": [4, 8, 254, 257, 259, 262], "roughli": 4, "uniformli": 4, "random": 4, "intrins": 4, "decai": 4, "learn": [4, 259], "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 258], "increas": 4, "an": [4, 259, 262], "environ": [4, 6, 7, 257, 258, 259, 261, 262, 265, 266], "dynam": 4, "can": 4, "low": 4, "forward": [4, 257], "model": [4, 253, 257, 258, 263, 265], "also": 4, "us": [4, 6, 9, 263, 265], "offlin": 4, "observ": [4, 257], "space": 4, "effect": [4, 262], "dramat": 4, "dure": 4, "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 266], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 265], "from": [6, 7], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 266], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 262], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "multidiscretetensorspec": 28, "multionehotdiscretetensorspec": 29, "multistep": 30, "onehotdiscretetensorspec": 31, "prioritizedreplaybuff": 32, "replaybuff": 33, "tensordictprioritizedreplaybuff": 34, "tensordictreplaybuff": 35, "unboundedcontinuoustensorspec": 37, "unboundeddiscretetensorspec": 38, "d4rlexperiencereplai": 39, "openmlexperiencereplai": 40, "lazymemmapstorag": 41, "lazytensorstorag": 42, "liststorag": 43, "prioritizedsampl": 44, "randomsampl": 45, "roundrobinwrit": 46, "sampler": 47, "samplerwithoutreplac": 48, "storag": 49, "writer": 50, "envbas": [51, 262], "envcreat": 52, "envmetadata": 53, "gymlikeenv": 54, "modelbasedenvbas": 55, "multithreadedenv": 56, "parallelenv": 57, "serialenv": 58, "braxenv": 59, "braxwrapp": 60, "dmcontrolenv": 61, "dmcontrolwrapp": 62, "gymenv": 63, "gymwrapp": 64, "habitatenv": 65, "jumanjienv": 66, "jumanjiwrapp": 67, "openmlenv": 68, "vmasenv": 69, "vmaswrapp": 70, "dreamerenv": 71, "binarizereward": 72, "catfram": 73, "cattensor": 74, "centercrop": 75, "discreteactionproject": 77, "doubletofloat": 78, "excludetransform": 79, "finitetensordictcheck": 80, "flattenobserv": 81, "frameskiptransform": 82, "grayscal": 83, "inittrack": 84, "noopresetenv": 85, "observationnorm": 86, "observationtransform": 87, "pinmemorytransform": 88, "r3mtransform": 89, "randomcroptensordict": 90, "renametransform": 91, "resiz": 92, "rewardclip": 93, "rewardsc": 94, "rewardsum": 95, "selecttransform": 96, "squeezetransform": 97, "stepcount": 98, "tensordictprim": 99, "timemaxpool": 100, "totensorimag": 101, "transformedenv": 103, "unsqueezetransform": 104, "viprewardtransform": 105, "viptransform": 106, "vecnorm": [107, 266], "gsdenois": 108, "check_env_spec": 109, "exploration_mod": 110, "get_available_librari": 111, "set_exploration_mod": 112, "step_mdp": 113, "cemplann": 114, "convnet": 115, "ddpgcnnactor": 116, "ddpgcnnqnet": 117, "ddpgmlpactor": 118, "ddpgmlpqnet": 119, "delta": 120, "distributionaldqnnet": 121, "distributionalqvaluehook": 122, "dreameractor": 123, "duelingcnndqnet": 124, "independentnorm": 125, "lstmnet": 126, "mlp": 127, "mpcplannerbas": 128, "mppiplann": 129, "noisylazylinear": 130, "noisylinear": 131, "normalparamwrapp": 132, "obsdecod": 133, "obsencod": 134, "onehotcategor": 135, "qvaluehook": 136, "rssmposterior": 137, "rssmprior": 138, "tanhdelta": 139, "tanhnorm": 140, "truncatednorm": 141, "reset_nois": 142, "actor": [143, 257], "actorcriticoper": 144, "actorcriticwrapp": 145, "actorvalueoper": 146, "additivegaussianwrapp": 147, "distributionalqvalueactor": 148, "egreedywrapp": 149, "ornsteinuhlenbeckprocesswrapp": 150, "probabilisticactor": 151, "qvalueactor": 152, "safemodul": 153, "safeprobabilisticmodul": 154, "safeprobabilistictensordictsequenti": 155, "safesequenti": 156, "valueoper": 157, "worldmodelwrapp": 158, "ensure_tensordict_compat": 159, "is_tensordict_compat": 160, "biased_softplu": 161, "inv_softplu": 162, "map": 163, "a2closs": 164, "clipppoloss": 165, "ddpgloss": 166, "dqnloss": 167, "discretesacloss": 168, "distributionaldqnloss": 169, "dreameractorloss": 170, "dreamermodelloss": 171, "dreamervalueloss": 172, "hardupd": 173, "iqlloss": 174, "klpenppoloss": 175, "lossmodul": [176, 257], "ppoloss": 177, "redqloss": 178, "reinforceloss": 179, "sacloss": 180, "softupd": 181, "td3loss": 182, "valueestim": 183, "default_value_kwarg": 184, "distance_loss": 185, "hold_out_net": 186, "hold_out_param": 187, "next_state_valu": 188, "gae": 189, "td0estim": 190, "td1estim": 191, "tdlambdaestim": 192, "valueestimatorbas": 193, "generalized_advantage_estim": 194, "td0_advantage_estim": 195, "td0_return_estim": 196, "td1_advantage_estim": 197, "td1_return_estim": 198, "td_lambda_advantage_estim": 199, "td_lambda_return_estim": 200, "vec_generalized_advantage_estim": 201, "vec_td1_advantage_estim": 202, "vec_td1_return_estim": 203, "vec_td_lambda_advantage_estim": 204, "vec_td_lambda_return_estim": 205, "tensordictrecord": 206, "videorecord": 207, "logger": [208, 255], "csvlogger": 209, "generate_exp_nam": 210, "get_logg": 211, "mlflowlogg": 212, "tensorboardlogg": 213, "wandblogg": 214, "batchsubsampl": 215, "clearcudacach": 216, "countframeslog": 217, "logreward": 218, "optimizerhook": 219, "replaybuffertrain": 221, "rewardnorm": 222, "selectkei": 223, "trainer": [224, 255, 258], "trainerhookbas": 225, "updateweight": 226, "correct_for_frame_skip": 227, "get_stats_random_rollout": 228, "make_a2c_loss": 229, "make_a2c_model": 230, "make_collector_offpolici": 231, "make_collector_onpolici": 232, "make_ddpg_actor": 233, "make_ddpg_loss": 234, "make_dqn_actor": 235, "make_dqn_loss": 236, "make_ppo_loss": 237, "make_ppo_model": 238, "make_redq_loss": 239, "make_redq_model": 240, "make_replay_buff": 241, "make_sac_loss": 242, "make_sac_model": 243, "make_target_updat": 244, "make_train": 245, "parallel_env_constructor": 246, "sync_async_collector": 247, "sync_sync_collector": 248, "transformed_env_constructor": 249, "readm": [250, 260], "tuto": [250, 260], "api": 251, "contribut": [252, 265], "content": 252, "modul": [253, 257, 265], "tensordict": [253, 265], "hook": [253, 255, 258], "planner": 253, "object": [254, 257, 265], "dqn": [254, 258], "ddpg": [254, 257], "sac": 254, "redq": 254, "iql": 254, "td3": 254, "ppo": [254, 259], "a2c": 254, "reinforc": [254, 259], "dreamer": 254, "checkpoint": 255, "builder": 255, "_util": 256, "code": [257, 262], "import": 257, "setup": 257, "The": 257, "__init__": 257, "method": 257, "estim": 257, "put": 257, "togeth": [257, 262], "call": 257, "parallel": [257, 261, 266], "execut": [257, 261, 262], "stat": 257, "build": [257, 258], "evalu": 257, "construct": 257, "time": [257, 264], "experi": [257, 262], "result": [257, 259], "conclus": [257, 258, 259, 262], "A": 258, "exampl": 258, "comput": [258, 262, 264], "deep": 258, "q": 258, "network": [258, 259], "collect": [258, 259], "target": 258, "paramet": [258, 259], "hyperparamet": [258, 259], "regist": 258, "possibl": 258, "improv": 258, "defin": 259, "loop": [259, 262], "next": 259, "step": [259, 266], "multi": 261, "divers": 261, "rollout": [261, 262, 266], "pendulum": 262, "write": 262, "_step": 262, "reset": [262, 266], "simul": 262, "_reset": 262, "metadata": 262, "_spec": 262, "spec": [262, 266], "shape": 262, "seed": [262, 266], "wrap": 262, "class": [262, 265], "test": 262, "our": 262, "custom": 262, "batch": 262, "simpl": 262, "pretrain": 263, "introduct": 265, "config": 265, "tensordictmodul": 265, "sequenc": 265, "program": 265, "ensembl": 265, "meta": 265, "special": 265, "state": 265, "frame_skip": 266, "deepmind": 266, "control": 266, "devic": 266, "run": 266, "close": 266, "access": 266, "attribut": 266, "kwarg": 266}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials": [[0, "tutorials"]], "Basics": [[0, "basics"]], "Intermediate": [[0, "intermediate"]], "Advanced": [[0, "advanced"]], "References": [[0, "references"]], "Knowledge Base": [[0, "knowledge-base"], [252, "knowledge-base"]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Single node data collectors": [[1, "single-node-data-collectors"]], "Distributed data collectors": [[1, "distributed-data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers": [[2, "composable-replay-buffers"]], "Storing trajectories": [[2, "storing-trajectories"]], "Datasets": [[2, "datasets"]], "TensorSpec": [[2, "tensorspec"], [36, "tensorspec"]], "Utils": [[2, "utils"], [253, "utils"], [254, "utils"], [255, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [257, "transforms"], [259, "transforms"], [265, "transforms"]], "Cloning transforms": [[3, "cloning-transforms"]], "Recorders": [[3, "recorders"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Things to consider when debugging RL": [[4, "things-to-consider-when-debugging-rl"]], "General": [[4, "general"]], "Have you validated your algorithm implementation on a few small, toy problems with known optimal returns e.g. gridworlds, mountaincar?": [[4, "have-you-validated-your-algorithm-implementation-on-a-few-small-toy-problems-with-known-optimal-returns-e-g-gridworlds-mountaincar"]], "Have you visualized your agents?": [[4, "have-you-visualized-your-agents"]], "Be very careful with any data augmentation.": [[4, "be-very-careful-with-any-data-augmentation"]], "Policy": [[4, "policy"], [259, "policy"], [261, "policy"]], "Does the entropy of your policy converge too quickly, too slowly or change drastically?": [[4, "does-the-entropy-of-your-policy-converge-too-quickly-too-slowly-or-change-drastically"]], "Rewards (beyond \u201cgoing up\u201d)": [[4, "rewards-beyond-going-up"]], "Is the agent favoring a single component of the reward function (i.e. velocity vs L2 action magnitude)?": [[4, "is-the-agent-favoring-a-single-component-of-the-reward-function-i-e-velocity-vs-l2-action-magnitude"]], "Is the task horizon extremely long?": [[4, "is-the-task-horizon-extremely-long"]], "Are your rewards normalized/standardized?": [[4, "are-your-rewards-normalized-standardized"]], "Exploration": [[4, "exploration"], [253, "exploration"], [257, "exploration"]], "Is value loss going up early in training?": [[4, "is-value-loss-going-up-early-in-training"]], "Are actions (roughly) uniformly/normally random early in training?": [[4, "are-actions-roughly-uniformly-normally-random-early-in-training"]], "Are intrinsic rewards decaying as learning progresses in a singleton task?": [[4, "are-intrinsic-rewards-decaying-as-learning-progresses-in-a-singleton-task"]], "Are episodic intrinsic rewards remaining constant or increasing as learning progresses in an episodic task?": [[4, "are-episodic-intrinsic-rewards-remaining-constant-or-increasing-as-learning-progresses-in-an-episodic-task"]], "Environment Dynamics": [[4, "environment-dynamics"]], "Can you train a low entropy forward dynamics and/or reward model (also useful for offline RL)?": [[4, "can-you-train-a-low-entropy-forward-dynamics-and-or-reward-model-also-useful-for-offline-rl"]], "Observation Space": [[4, "observation-space"]], "Are your observations normalized/standardized?": [[4, "are-your-observations-normalized-standardized"]], "Action Space": [[4, "action-space"]], "Is the effect of an action changing dramatically during an episode?": [[4, "is-the-effect-of-an-action-changing-dramatically-during-an-episode"]], "Is the action space too high dimensional?": [[4, "is-the-action-space-too-high-dimensional"]], "Are your actions normalized/standardized?": [[4, "are-your-actions-normalized-standardized"]], "Working with gym": [[5, "working-with-gym"]], "What is OpenAI Gym?": [[5, "what-is-openai-gym"]], "Versioning": [[5, "versioning"]], "Working with habitat-lab": [[6, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[6, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[6, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[6, "installing-torchrl"]], "Using Habitat": [[6, "using-habitat"]], "Common issues": [[6, "common-issues"]], "Working with MuJoCo-based environments": [[7, "working-with-mujoco-based-environments"]], "Installing MuJoCo": [[7, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[7, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[7, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[7, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[7, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[7, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[7, "common-issues-when-rendering-mujoco-environments"]], "Common PyTorch errors and solutions": [[8, "common-pytorch-errors-and-solutions"]], "Gradient-related errors [Newcomers]": [[8, "gradient-related-errors-newcomers"]], "My Training is too slow [Newcomers / intermediate]": [[8, "my-training-is-too-slow-newcomers-intermediate"]], "Common bugs": [[8, "common-bugs"]], "Useful resources": [[9, "useful-resources"]], "Pytorch documentation": [[9, "pytorch-documentation"]], "functorch documentation": [[9, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[9, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[9, "educational-resource"]], "Forums": [[9, "forums"]], "Repos": [[9, "repos"]], "Versioning Issues": [[10, "versioning-issues"]], "Pytorch version": [[10, "pytorch-version"]], "How to reproduce": [[10, "how-to-reproduce"]], "Workarounds": [[10, "workarounds"]], "implement_for": [[11, "implement-for"]], "DataCollectorBase": [[12, "datacollectorbase"]], "MultiSyncDataCollector": [[13, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[14, "multiasyncdatacollector"]], "RandomPolicy": [[15, "randompolicy"]], "SyncDataCollector": [[16, "syncdatacollector"]], "aSyncDataCollector": [[17, "asyncdatacollector"]], "DistributedDataCollector": [[18, "distributeddatacollector"]], "DistributedSyncDataCollector": [[19, "distributedsyncdatacollector"]], "RPCDataCollector": [[20, "rpcdatacollector"]], "RayCollector": [[21, "raycollector"]], "submitit_delayed_launcher": [[22, "submitit-delayed-launcher"]], "split_trajectories": [[23, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[24, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[25, "boundedtensorspec"]], "CompositeSpec": [[26, "compositespec"]], "DiscreteTensorSpec": [[27, "discretetensorspec"]], "MultiDiscreteTensorSpec": [[28, "multidiscretetensorspec"]], "MultiOneHotDiscreteTensorSpec": [[29, "multionehotdiscretetensorspec"]], "MultiStep": [[30, "multistep"]], "OneHotDiscreteTensorSpec": [[31, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[32, "prioritizedreplaybuffer"]], "ReplayBuffer": [[33, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[34, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[35, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[37, "unboundedcontinuoustensorspec"]], "UnboundedDiscreteTensorSpec": [[38, "unboundeddiscretetensorspec"]], "D4RLExperienceReplay": [[39, "d4rlexperiencereplay"]], "OpenMLExperienceReplay": [[40, "openmlexperiencereplay"]], "LazyMemmapStorage": [[41, "lazymemmapstorage"]], "LazyTensorStorage": [[42, "lazytensorstorage"]], "ListStorage": [[43, "liststorage"]], "PrioritizedSampler": [[44, "prioritizedsampler"]], "RandomSampler": [[45, "randomsampler"]], "RoundRobinWriter": [[46, "roundrobinwriter"]], "Sampler": [[47, "sampler"]], "SamplerWithoutReplacement": [[48, "samplerwithoutreplacement"]], "Storage": [[49, "storage"]], "Writer": [[50, "writer"]], "EnvBase": [[51, "envbase"]], "EnvCreator": [[52, "envcreator"]], "EnvMetaData": [[53, "envmetadata"]], "GymLikeEnv": [[54, "gymlikeenv"]], "ModelBasedEnvBase": [[55, "modelbasedenvbase"]], "MultiThreadedEnv": [[56, "multithreadedenv"]], "ParallelEnv": [[57, "parallelenv"]], "SerialEnv": [[58, "serialenv"]], "BraxEnv": [[59, "braxenv"]], "BraxWrapper": [[60, "braxwrapper"]], "DMControlEnv": [[61, "dmcontrolenv"]], "DMControlWrapper": [[62, "dmcontrolwrapper"]], "GymEnv": [[63, "gymenv"]], "GymWrapper": [[64, "gymwrapper"]], "HabitatEnv": [[65, "habitatenv"]], "JumanjiEnv": [[66, "jumanjienv"]], "JumanjiWrapper": [[67, "jumanjiwrapper"]], "OpenMLEnv": [[68, "openmlenv"]], "VmasEnv": [[69, "vmasenv"]], "VmasWrapper": [[70, "vmaswrapper"]], "DreamerEnv": [[71, "dreamerenv"]], "BinarizeReward": [[72, "binarizereward"]], "CatFrames": [[73, "catframes"]], "CatTensors": [[74, "cattensors"]], "CenterCrop": [[75, "centercrop"]], "Compose": [[76, "compose"]], "DiscreteActionProjection": [[77, "discreteactionprojection"]], "DoubleToFloat": [[78, "doubletofloat"]], "ExcludeTransform": [[79, "excludetransform"]], "FiniteTensorDictCheck": [[80, "finitetensordictcheck"]], "FlattenObservation": [[81, "flattenobservation"]], "FrameSkipTransform": [[82, "frameskiptransform"]], "GrayScale": [[83, "grayscale"]], "InitTracker": [[84, "inittracker"]], "NoopResetEnv": [[85, "noopresetenv"]], "ObservationNorm": [[86, "observationnorm"]], "ObservationTransform": [[87, "observationtransform"]], "PinMemoryTransform": [[88, "pinmemorytransform"]], "R3MTransform": [[89, "r3mtransform"]], "RandomCropTensorDict": [[90, "randomcroptensordict"]], "RenameTransform": [[91, "renametransform"]], "Resize": [[92, "resize"]], "RewardClipping": [[93, "rewardclipping"]], "RewardScaling": [[94, "rewardscaling"]], "RewardSum": [[95, "rewardsum"]], "SelectTransform": [[96, "selecttransform"]], "SqueezeTransform": [[97, "squeezetransform"]], "StepCounter": [[98, "stepcounter"]], "TensorDictPrimer": [[99, "tensordictprimer"]], "TimeMaxPool": [[100, "timemaxpool"]], "ToTensorImage": [[101, "totensorimage"]], "Transform": [[102, "transform"]], "TransformedEnv": [[103, "transformedenv"]], "UnsqueezeTransform": [[104, "unsqueezetransform"]], "VIPRewardTransform": [[105, "viprewardtransform"]], "VIPTransform": [[106, "viptransform"]], "VecNorm": [[107, "vecnorm"], [266, "vecnorm"]], "gSDENoise": [[108, "gsdenoise"]], "check_env_specs": [[109, "check-env-specs"]], "exploration_mode": [[110, "exploration-mode"]], "get_available_libraries": [[111, "get-available-libraries"]], "set_exploration_mode": [[112, "set-exploration-mode"]], "step_mdp": [[113, "step-mdp"]], "CEMPlanner": [[114, "cemplanner"]], "ConvNet": [[115, "convnet"]], "DdpgCnnActor": [[116, "ddpgcnnactor"]], "DdpgCnnQNet": [[117, "ddpgcnnqnet"]], "DdpgMlpActor": [[118, "ddpgmlpactor"]], "DdpgMlpQNet": [[119, "ddpgmlpqnet"]], "Delta": [[120, "delta"]], "DistributionalDQNnet": [[121, "distributionaldqnnet"]], "DistributionalQValueHook": [[122, "distributionalqvaluehook"]], "DreamerActor": [[123, "dreameractor"]], "DuelingCnnDQNet": [[124, "duelingcnndqnet"]], "IndependentNormal": [[125, "independentnormal"]], "LSTMNet": [[126, "lstmnet"]], "MLP": [[127, "mlp"]], "MPCPlannerBase": [[128, "mpcplannerbase"]], "MPPIPlanner": [[129, "mppiplanner"]], "NoisyLazyLinear": [[130, "noisylazylinear"]], "NoisyLinear": [[131, "noisylinear"]], "NormalParamWrapper": [[132, "normalparamwrapper"]], "ObsDecoder": [[133, "obsdecoder"]], "ObsEncoder": [[134, "obsencoder"]], "OneHotCategorical": [[135, "onehotcategorical"]], "QValueHook": [[136, "qvaluehook"]], "RSSMPosterior": [[137, "rssmposterior"]], "RSSMPrior": [[138, "rssmprior"]], "TanhDelta": [[139, "tanhdelta"]], "TanhNormal": [[140, "tanhnormal"]], "TruncatedNormal": [[141, "truncatednormal"]], "reset_noise": [[142, "reset-noise"]], "Actor": [[143, "actor"]], "ActorCriticOperator": [[144, "actorcriticoperator"]], "ActorCriticWrapper": [[145, "actorcriticwrapper"]], "ActorValueOperator": [[146, "actorvalueoperator"]], "AdditiveGaussianWrapper": [[147, "additivegaussianwrapper"]], "DistributionalQValueActor": [[148, "distributionalqvalueactor"]], "EGreedyWrapper": [[149, "egreedywrapper"]], "OrnsteinUhlenbeckProcessWrapper": [[150, "ornsteinuhlenbeckprocesswrapper"]], "ProbabilisticActor": [[151, "probabilisticactor"]], "QValueActor": [[152, "qvalueactor"]], "SafeModule": [[153, "safemodule"]], "SafeProbabilisticModule": [[154, "safeprobabilisticmodule"]], "SafeProbabilisticTensorDictSequential": [[155, "safeprobabilistictensordictsequential"]], "SafeSequential": [[156, "safesequential"]], "ValueOperator": [[157, "valueoperator"]], "WorldModelWrapper": [[158, "worldmodelwrapper"]], "ensure_tensordict_compatible": [[159, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[160, "is-tensordict-compatible"]], "biased_softplus": [[161, "biased-softplus"]], "inv_softplus": [[162, "inv-softplus"]], "mappings": [[163, "mappings"]], "A2CLoss": [[164, "a2closs"]], "ClipPPOLoss": [[165, "clipppoloss"]], "DDPGLoss": [[166, "ddpgloss"]], "DQNLoss": [[167, "dqnloss"]], "DiscreteSACLoss": [[168, "discretesacloss"]], "DistributionalDQNLoss": [[169, "distributionaldqnloss"]], "DreamerActorLoss": [[170, "dreameractorloss"]], "DreamerModelLoss": [[171, "dreamermodelloss"]], "DreamerValueLoss": [[172, "dreamervalueloss"]], "HardUpdate": [[173, "hardupdate"]], "IQLLoss": [[174, "iqlloss"]], "KLPENPPOLoss": [[175, "klpenppoloss"]], "LossModule": [[176, "lossmodule"]], "PPOLoss": [[177, "ppoloss"]], "REDQLoss": [[178, "redqloss"]], "ReinforceLoss": [[179, "reinforceloss"]], "SACLoss": [[180, "sacloss"]], "SoftUpdate": [[181, "softupdate"]], "TD3Loss": [[182, "td3loss"]], "ValueEstimators": [[183, "valueestimators"]], "default_value_kwargs": [[184, "default-value-kwargs"]], "distance_loss": [[185, "distance-loss"]], "hold_out_net": [[186, "hold-out-net"]], "hold_out_params": [[187, "hold-out-params"]], "next_state_value": [[188, "next-state-value"]], "GAE": [[189, "gae"]], "TD0Estimator": [[190, "td0estimator"]], "TD1Estimator": [[191, "td1estimator"]], "TDLambdaEstimator": [[192, "tdlambdaestimator"]], "ValueEstimatorBase": [[193, "valueestimatorbase"]], "generalized_advantage_estimate": [[194, "generalized-advantage-estimate"]], "td0_advantage_estimate": [[195, "td0-advantage-estimate"]], "td0_return_estimate": [[196, "td0-return-estimate"]], "td1_advantage_estimate": [[197, "td1-advantage-estimate"]], "td1_return_estimate": [[198, "td1-return-estimate"]], "td_lambda_advantage_estimate": [[199, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[200, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[201, "vec-generalized-advantage-estimate"]], "vec_td1_advantage_estimate": [[202, "vec-td1-advantage-estimate"]], "vec_td1_return_estimate": [[203, "vec-td1-return-estimate"]], "vec_td_lambda_advantage_estimate": [[204, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[205, "vec-td-lambda-return-estimate"]], "TensorDictRecorder": [[206, "tensordictrecorder"]], "VideoRecorder": [[207, "videorecorder"]], "Logger": [[208, "logger"]], "CSVLogger": [[209, "csvlogger"]], "generate_exp_name": [[210, "generate-exp-name"]], "get_logger": [[211, "get-logger"]], "MLFlowLogger": [[212, "mlflowlogger"]], "TensorboardLogger": [[213, "tensorboardlogger"]], "WandbLogger": [[214, "wandblogger"]], "BatchSubSampler": [[215, "batchsubsampler"]], "ClearCudaCache": [[216, "clearcudacache"]], "CountFramesLog": [[217, "countframeslog"]], "LogReward": [[218, "logreward"]], "OptimizerHook": [[219, "optimizerhook"]], "Recorder": [[220, "recorder"]], "ReplayBufferTrainer": [[221, "replaybuffertrainer"]], "RewardNormalizer": [[222, "rewardnormalizer"]], "SelectKeys": [[223, "selectkeys"]], "Trainer": [[224, "trainer"]], "TrainerHookBase": [[225, "trainerhookbase"]], "UpdateWeights": [[226, "updateweights"]], "correct_for_frame_skip": [[227, "correct-for-frame-skip"]], "get_stats_random_rollout": [[228, "get-stats-random-rollout"]], "make_a2c_loss": [[229, "make-a2c-loss"]], "make_a2c_model": [[230, "make-a2c-model"]], "make_collector_offpolicy": [[231, "make-collector-offpolicy"]], "make_collector_onpolicy": [[232, "make-collector-onpolicy"]], "make_ddpg_actor": [[233, "make-ddpg-actor"]], "make_ddpg_loss": [[234, "make-ddpg-loss"]], "make_dqn_actor": [[235, "make-dqn-actor"]], "make_dqn_loss": [[236, "make-dqn-loss"]], "make_ppo_loss": [[237, "make-ppo-loss"]], "make_ppo_model": [[238, "make-ppo-model"]], "make_redq_loss": [[239, "make-redq-loss"]], "make_redq_model": [[240, "make-redq-model"]], "make_replay_buffer": [[241, "make-replay-buffer"]], "make_sac_loss": [[242, "make-sac-loss"]], "make_sac_model": [[243, "make-sac-model"]], "make_target_updater": [[244, "make-target-updater"]], "make_trainer": [[245, "make-trainer"]], "parallel_env_constructor": [[246, "parallel-env-constructor"]], "sync_async_collector": [[247, "sync-async-collector"]], "sync_sync_collector": [[248, "sync-sync-collector"]], "transformed_env_constructor": [[249, "transformed-env-constructor"]], "README Tutos": [[250, "readme-tutos"], [260, "readme-tutos"]], "API Reference": [[251, "api-reference"]], "Contributing": [[252, "contributing"], [265, "contributing"]], "Contents:": [[252, null]], "torchrl.modules package": [[253, "torchrl-modules-package"]], "TensorDict modules": [[253, "tensordict-modules"]], "Hooks": [[253, "hooks"]], "Models": [[253, "models"], [265, "models"]], "Planners": [[253, "planners"]], "Distributions": [[253, "distributions"]], "torchrl.objectives package": [[254, "torchrl-objectives-package"]], "Training value functions": [[254, "training-value-functions"]], "DQN": [[254, "dqn"], [258, "dqn"]], "DDPG": [[254, "ddpg"]], "SAC": [[254, "sac"]], "REDQ": [[254, "redq"]], "IQL": [[254, "iql"]], "TD3": [[254, "td3"]], "PPO": [[254, "ppo"]], "A2C": [[254, "a2c"]], "Reinforce": [[254, "reinforce"]], "Dreamer": [[254, "dreamer"]], "Returns": [[254, "returns"]], "torchrl.trainers package": [[255, "torchrl-trainers-package"]], "Checkpointing": [[255, "checkpointing"]], "Trainer and hooks": [[255, "trainer-and-hooks"]], "Builders": [[255, "builders"]], "Loggers": [[255, "loggers"]], "Recording utils": [[255, "recording-utils"]], "torchrl._utils package": [[256, "torchrl-utils-package"]], "TorchRL objectives: Coding a DDPG loss": [[257, "torchrl-objectives-coding-a-ddpg-loss"]], "Imports and setup": [[257, "imports-and-setup"]], "torchrl LossModule": [[257, "torchrl-lossmodule"]], "The __init__ method": [[257, "the-init-method"]], "The value estimator loss method": [[257, "the-value-estimator-loss-method"]], "The actor loss method": [[257, "the-actor-loss-method"]], "The value loss method": [[257, "the-value-loss-method"]], "Putting things together in a forward call": [[257, "putting-things-together-in-a-forward-call"]], "Environment": [[257, "environment"]], "Parallel execution": [[257, "parallel-execution"]], "Normalization of the observations": [[257, "normalization-of-the-observations"]], "Normalization stats": [[257, "normalization-stats"]], "Building the model": [[257, "building-the-model"]], "Data collector": [[257, "data-collector"], [258, "data-collector"], [259, "data-collector"]], "Evaluator: building your recorder object": [[257, "evaluator-building-your-recorder-object"]], "Replay buffer": [[257, "replay-buffer"], [259, "replay-buffer"]], "Loss module construction": [[257, "loss-module-construction"]], "Optimizer": [[257, "optimizer"], [258, "optimizer"]], "Time to train the policy": [[257, "time-to-train-the-policy"]], "Experiment results": [[257, "experiment-results"]], "Conclusion": [[257, "conclusion"], [262, "conclusion"]], "TorchRL trainer: A DQN example": [[258, "torchrl-trainer-a-dqn-example"]], "Building the environment": [[258, "building-the-environment"]], "Compute normalizing constants": [[258, "compute-normalizing-constants"]], "Building the model (Deep Q-network)": [[258, "building-the-model-deep-q-network"]], "Collecting and storing data": [[258, "collecting-and-storing-data"]], "Replay buffers": [[258, "replay-buffers"], [265, "replay-buffers"]], "Loss function": [[258, "loss-function"], [259, "loss-function"]], "Target parameters": [[258, "target-parameters"]], "Hyperparameters": [[258, "hyperparameters"]], "DQN parameters": [[258, "dqn-parameters"]], "Data collection and replay buffer": [[258, "data-collection-and-replay-buffer"]], "Environment and exploration": [[258, "environment-and-exploration"]], "Building a Trainer": [[258, "building-a-trainer"]], "Registering hooks": [[258, "registering-hooks"]], "Conclusion and possible improvements": [[258, "conclusion-and-possible-improvements"]], "Reinforcement Learning (PPO) with TorchRL Tutorial": [[259, "reinforcement-learning-ppo-with-torchrl-tutorial"]], "Define Hyperparameters": [[259, "define-hyperparameters"]], "Data collection parameters": [[259, "data-collection-parameters"]], "PPO parameters": [[259, "ppo-parameters"]], "Define an environment": [[259, "define-an-environment"]], "Normalization": [[259, "normalization"]], "Value network": [[259, "value-network"]], "Training loop": [[259, "training-loop"], [262, "training-loop"]], "Results": [[259, "results"]], "Conclusion and next steps": [[259, "conclusion-and-next-steps"]], "Task-specific policy in multi-task environments": [[261, "task-specific-policy-in-multi-task-environments"]], "Executing diverse tasks in parallel": [[261, "executing-diverse-tasks-in-parallel"]], "Rollout": [[261, "rollout"]], "Pendulum: Writing your environment and transforms with TorchRL": [[262, "pendulum-writing-your-environment-and-transforms-with-torchrl"]], "Coding the effect of an action: _step()": [[262, "coding-the-effect-of-an-action-step"]], "Resetting the simulator: _reset()": [[262, "resetting-the-simulator-reset"]], "Environment metadata: env.*_spec": [[262, "environment-metadata-env-spec"]], "Specs shape": [[262, "specs-shape"]], "Reproducible experiments: seeding": [[262, "reproducible-experiments-seeding"]], "Wrapping things together: the EnvBase class": [[262, "wrapping-things-together-the-envbase-class"]], "Testing our environment": [[262, "testing-our-environment"]], "Transforming an environment": [[262, "transforming-an-environment"]], "Writing custom transforms": [[262, "writing-custom-transforms"]], "Executing a rollout": [[262, "executing-a-rollout"]], "Batching computations": [[262, "batching-computations"]], "Training a simple policy": [[262, "training-a-simple-policy"]], "Using pretrained models": [[263, "using-pretrained-models"]], "Computation times": [[264, "computation-times"]], "Introduction to TorchRL": [[265, "introduction-to-torchrl"]], "Data": [[265, "data"]], "TensorDict": [[265, "tensordict"]], "Envs": [[265, "envs"]], "Changing environments config": [[265, "changing-environments-config"]], "Vectorized Environments": [[265, "vectorized-environments"]], "Modules": [[265, "modules"]], "TensorDictModules": [[265, "tensordictmodules"]], "Sequences of Modules": [[265, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[265, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[265, "specialized-classes"]], "Using Environments and Modules": [[265, "using-environments-and-modules"]], "Collectors": [[265, "collectors"]], "Objectives": [[265, "objectives"]], "State of the Library": [[265, "state-of-the-library"]], "Installing the Library": [[265, "installing-the-library"]], "TorchRL envs": [[266, "torchrl-envs"]], "Gym environments": [[266, "gym-environments"]], "Env Specs": [[266, "env-specs"]], "Seeding, resetting and steps": [[266, "seeding-resetting-and-steps"]], "Rollouts": [[266, "rollouts"]], "frame_skip": [[266, "frame-skip"]], "Rendering": [[266, "rendering"]], "DeepMind Control environments": [[266, "deepmind-control-environments"]], "Transforming envs": [[266, "transforming-envs"]], "Environment device": [[266, "environment-device"]], "Running environments in parallel": [[266, "running-environments-in-parallel"]], "Closing parallel environments": [[266, "closing-parallel-environments"]], "Seeding": [[266, "seeding"]], "Accessing environment attributes": [[266, "accessing-environment-attributes"]], "kwargs for parallel environments": [[266, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[266, "transforming-parallel-environments"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[11, "torchrl._utils.implement_for"]], "datacollectorbase (class in torchrl.collectors.collectors)": [[12, "torchrl.collectors.collectors.DataCollectorBase"]], "update_policy_weights_() (torchrl.collectors.collectors.datacollectorbase method)": [[12, "torchrl.collectors.collectors.DataCollectorBase.update_policy_weights_"]], "multisyncdatacollector (class in torchrl.collectors.collectors)": [[13, "torchrl.collectors.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multisyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multisyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multisyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multisyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors.collectors)": [[14, "torchrl.collectors.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[14, "torchrl.collectors.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[14, "torchrl.collectors.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[14, "torchrl.collectors.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[14, "torchrl.collectors.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[14, "torchrl.collectors.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[14, "torchrl.collectors.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "randompolicy (class in torchrl.collectors.collectors)": [[15, "torchrl.collectors.collectors.RandomPolicy"]], "syncdatacollector (class in torchrl.collectors.collectors)": [[16, "torchrl.collectors.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.collectors.syncdatacollector method)": [[16, "torchrl.collectors.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[16, "torchrl.collectors.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.syncdatacollector method)": [[16, "torchrl.collectors.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.collectors.syncdatacollector method)": [[16, "torchrl.collectors.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.collectors.syncdatacollector method)": [[16, "torchrl.collectors.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.syncdatacollector method)": [[16, "torchrl.collectors.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[16, "torchrl.collectors.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.syncdatacollector method)": [[16, "torchrl.collectors.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors.collectors)": [[17, "torchrl.collectors.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[17, "torchrl.collectors.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.asyncdatacollector method)": [[17, "torchrl.collectors.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.asyncdatacollector method)": [[17, "torchrl.collectors.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.asyncdatacollector method)": [[17, "torchrl.collectors.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[17, "torchrl.collectors.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.asyncdatacollector method)": [[17, "torchrl.collectors.collectors.aSyncDataCollector.update_policy_weights_"]], "distributeddatacollector (class in torchrl.collectors.distributed)": [[18, "torchrl.collectors.distributed.DistributedDataCollector"]], "update_policy_weights_() (torchrl.collectors.distributed.distributeddatacollector method)": [[18, "torchrl.collectors.distributed.DistributedDataCollector.update_policy_weights_"]], "distributedsyncdatacollector (class in torchrl.collectors.distributed)": [[19, "torchrl.collectors.distributed.DistributedSyncDataCollector"]], "update_policy_weights_() (torchrl.collectors.distributed.distributedsyncdatacollector method)": [[19, "torchrl.collectors.distributed.DistributedSyncDataCollector.update_policy_weights_"]], "rpcdatacollector (class in torchrl.collectors.distributed)": [[20, "torchrl.collectors.distributed.RPCDataCollector"]], "update_policy_weights_() (torchrl.collectors.distributed.rpcdatacollector method)": [[20, "torchrl.collectors.distributed.RPCDataCollector.update_policy_weights_"]], "raycollector (class in torchrl.collectors.distributed)": [[21, "torchrl.collectors.distributed.RayCollector"]], "add_collectors() (torchrl.collectors.distributed.raycollector method)": [[21, "torchrl.collectors.distributed.RayCollector.add_collectors"]], "load_state_dict() (torchrl.collectors.distributed.raycollector method)": [[21, "torchrl.collectors.distributed.RayCollector.load_state_dict"]], "local_policy() (torchrl.collectors.distributed.raycollector method)": [[21, "torchrl.collectors.distributed.RayCollector.local_policy"]], "remote_collectors() (torchrl.collectors.distributed.raycollector method)": [[21, "torchrl.collectors.distributed.RayCollector.remote_collectors"]], "set_seed() (torchrl.collectors.distributed.raycollector method)": [[21, "torchrl.collectors.distributed.RayCollector.set_seed"]], "shutdown() (torchrl.collectors.distributed.raycollector method)": [[21, "torchrl.collectors.distributed.RayCollector.shutdown"]], "state_dict() (torchrl.collectors.distributed.raycollector method)": [[21, "torchrl.collectors.distributed.RayCollector.state_dict"]], "stop_remote_collectors() (torchrl.collectors.distributed.raycollector method)": [[21, "torchrl.collectors.distributed.RayCollector.stop_remote_collectors"]], "update_policy_weights_() (torchrl.collectors.distributed.raycollector method)": [[21, "torchrl.collectors.distributed.RayCollector.update_policy_weights_"]], "submitit_delayed_launcher (class in torchrl.collectors.distributed)": [[22, "torchrl.collectors.distributed.submitit_delayed_launcher"]], "split_trajectories() (in module torchrl.collectors.utils)": [[23, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[24, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[24, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[24, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "expand() (torchrl.data.binarydiscretetensorspec method)": [[24, "torchrl.data.BinaryDiscreteTensorSpec.expand"]], "implements_for_spec() (torchrl.data.binarydiscretetensorspec class method)": [[24, "torchrl.data.BinaryDiscreteTensorSpec.implements_for_spec"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[24, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[24, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[24, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[24, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "squeeze() (torchrl.data.binarydiscretetensorspec method)": [[24, "torchrl.data.BinaryDiscreteTensorSpec.squeeze"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[24, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "to_one_hot() (torchrl.data.binarydiscretetensorspec method)": [[24, "torchrl.data.BinaryDiscreteTensorSpec.to_one_hot"]], "to_one_hot_spec() (torchrl.data.binarydiscretetensorspec method)": [[24, "torchrl.data.BinaryDiscreteTensorSpec.to_one_hot_spec"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[24, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[24, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[25, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[25, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[25, "torchrl.data.BoundedTensorSpec.encode"]], "expand() (torchrl.data.boundedtensorspec method)": [[25, "torchrl.data.BoundedTensorSpec.expand"]], "implements_for_spec() (torchrl.data.boundedtensorspec class method)": [[25, "torchrl.data.BoundedTensorSpec.implements_for_spec"]], "index() (torchrl.data.boundedtensorspec method)": [[25, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[25, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[25, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[25, "torchrl.data.BoundedTensorSpec.rand"]], "squeeze() (torchrl.data.boundedtensorspec method)": [[25, "torchrl.data.BoundedTensorSpec.squeeze"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[25, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[25, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[25, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[26, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[26, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[26, "torchrl.data.CompositeSpec.encode"]], "expand() (torchrl.data.compositespec method)": [[26, "torchrl.data.CompositeSpec.expand"]], "implements_for_spec() (torchrl.data.compositespec class method)": [[26, "torchrl.data.CompositeSpec.implements_for_spec"]], "index() (torchrl.data.compositespec method)": [[26, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[26, "torchrl.data.CompositeSpec.is_in"]], "items() (torchrl.data.compositespec method)": [[26, "torchrl.data.CompositeSpec.items"]], "keys() (torchrl.data.compositespec method)": [[26, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[26, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[26, "torchrl.data.CompositeSpec.rand"]], "squeeze() (torchrl.data.compositespec method)": [[26, "torchrl.data.CompositeSpec.squeeze"]], "to_numpy() (torchrl.data.compositespec method)": [[26, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[26, "torchrl.data.CompositeSpec.type_check"]], "values() (torchrl.data.compositespec method)": [[26, "torchrl.data.CompositeSpec.values"]], "zero() (torchrl.data.compositespec method)": [[26, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[27, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[27, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[27, "torchrl.data.DiscreteTensorSpec.encode"]], "expand() (torchrl.data.discretetensorspec method)": [[27, "torchrl.data.DiscreteTensorSpec.expand"]], "implements_for_spec() (torchrl.data.discretetensorspec class method)": [[27, "torchrl.data.DiscreteTensorSpec.implements_for_spec"]], "index() (torchrl.data.discretetensorspec method)": [[27, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[27, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[27, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[27, "torchrl.data.DiscreteTensorSpec.rand"]], "squeeze() (torchrl.data.discretetensorspec method)": [[27, "torchrl.data.DiscreteTensorSpec.squeeze"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[27, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "to_one_hot() (torchrl.data.discretetensorspec method)": [[27, "torchrl.data.DiscreteTensorSpec.to_one_hot"]], "to_one_hot_spec() (torchrl.data.discretetensorspec method)": [[27, "torchrl.data.DiscreteTensorSpec.to_one_hot_spec"]], "type_check() (torchrl.data.discretetensorspec method)": [[27, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[27, "torchrl.data.DiscreteTensorSpec.zero"]], "multidiscretetensorspec (class in torchrl.data)": [[28, "torchrl.data.MultiDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multidiscretetensorspec method)": [[28, "torchrl.data.MultiDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multidiscretetensorspec method)": [[28, "torchrl.data.MultiDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multidiscretetensorspec method)": [[28, "torchrl.data.MultiDiscreteTensorSpec.expand"]], "implements_for_spec() (torchrl.data.multidiscretetensorspec class method)": [[28, "torchrl.data.MultiDiscreteTensorSpec.implements_for_spec"]], "index() (torchrl.data.multidiscretetensorspec method)": [[28, "torchrl.data.MultiDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multidiscretetensorspec method)": [[28, "torchrl.data.MultiDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multidiscretetensorspec method)": [[28, "torchrl.data.MultiDiscreteTensorSpec.project"]], "rand() (torchrl.data.multidiscretetensorspec method)": [[28, "torchrl.data.MultiDiscreteTensorSpec.rand"]], "squeeze() (torchrl.data.multidiscretetensorspec method)": [[28, "torchrl.data.MultiDiscreteTensorSpec.squeeze"]], "to_numpy() (torchrl.data.multidiscretetensorspec method)": [[28, "torchrl.data.MultiDiscreteTensorSpec.to_numpy"]], "to_one_hot() (torchrl.data.multidiscretetensorspec method)": [[28, "torchrl.data.MultiDiscreteTensorSpec.to_one_hot"]], "to_one_hot_spec() (torchrl.data.multidiscretetensorspec method)": [[28, "torchrl.data.MultiDiscreteTensorSpec.to_one_hot_spec"]], "type_check() (torchrl.data.multidiscretetensorspec method)": [[28, "torchrl.data.MultiDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multidiscretetensorspec method)": [[28, "torchrl.data.MultiDiscreteTensorSpec.zero"]], "multionehotdiscretetensorspec (class in torchrl.data)": [[29, "torchrl.data.MultiOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[29, "torchrl.data.MultiOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multionehotdiscretetensorspec method)": [[29, "torchrl.data.MultiOneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multionehotdiscretetensorspec method)": [[29, "torchrl.data.MultiOneHotDiscreteTensorSpec.expand"]], "implements_for_spec() (torchrl.data.multionehotdiscretetensorspec class method)": [[29, "torchrl.data.MultiOneHotDiscreteTensorSpec.implements_for_spec"]], "index() (torchrl.data.multionehotdiscretetensorspec method)": [[29, "torchrl.data.MultiOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[29, "torchrl.data.MultiOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multionehotdiscretetensorspec method)": [[29, "torchrl.data.MultiOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multionehotdiscretetensorspec method)": [[29, "torchrl.data.MultiOneHotDiscreteTensorSpec.rand"]], "squeeze() (torchrl.data.multionehotdiscretetensorspec method)": [[29, "torchrl.data.MultiOneHotDiscreteTensorSpec.squeeze"]], "to_categorical() (torchrl.data.multionehotdiscretetensorspec method)": [[29, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_categorical"]], "to_categorical_spec() (torchrl.data.multionehotdiscretetensorspec method)": [[29, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_categorical_spec"]], "to_numpy() (torchrl.data.multionehotdiscretetensorspec method)": [[29, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multionehotdiscretetensorspec method)": [[29, "torchrl.data.MultiOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multionehotdiscretetensorspec method)": [[29, "torchrl.data.MultiOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[30, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.register_parameter"]], "register_state_dict_pre_hook() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[30, "torchrl.data.MultiStep.zero_grad"]], "onehotdiscretetensorspec (class in torchrl.data)": [[31, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[31, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[31, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.onehotdiscretetensorspec method)": [[31, "torchrl.data.OneHotDiscreteTensorSpec.expand"]], "implements_for_spec() (torchrl.data.onehotdiscretetensorspec class method)": [[31, "torchrl.data.OneHotDiscreteTensorSpec.implements_for_spec"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[31, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[31, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[31, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[31, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "squeeze() (torchrl.data.onehotdiscretetensorspec method)": [[31, "torchrl.data.OneHotDiscreteTensorSpec.squeeze"]], "to_categorical() (torchrl.data.onehotdiscretetensorspec method)": [[31, "torchrl.data.OneHotDiscreteTensorSpec.to_categorical"]], "to_categorical_spec() (torchrl.data.onehotdiscretetensorspec method)": [[31, "torchrl.data.OneHotDiscreteTensorSpec.to_categorical_spec"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[31, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[31, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[31, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[32, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[32, "torchrl.data.PrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.prioritizedreplaybuffer method)": [[32, "torchrl.data.PrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[32, "torchrl.data.PrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.prioritizedreplaybuffer method)": [[32, "torchrl.data.PrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[32, "torchrl.data.PrioritizedReplayBuffer.sample"]], "replaybuffer (class in torchrl.data)": [[33, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[33, "torchrl.data.ReplayBuffer.add"]], "append_transform() (torchrl.data.replaybuffer method)": [[33, "torchrl.data.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replaybuffer method)": [[33, "torchrl.data.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replaybuffer method)": [[33, "torchrl.data.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replaybuffer method)": [[33, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[34, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[34, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[34, "torchrl.data.TensorDictPrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[34, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[34, "torchrl.data.TensorDictPrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[34, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data)": [[35, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[35, "torchrl.data.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictreplaybuffer method)": [[35, "torchrl.data.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[35, "torchrl.data.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictreplaybuffer method)": [[35, "torchrl.data.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[35, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[36, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[36, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[36, "torchrl.data.TensorSpec.encode"]], "expand() (torchrl.data.tensorspec method)": [[36, "torchrl.data.TensorSpec.expand"]], "implements_for_spec() (torchrl.data.tensorspec class method)": [[36, "torchrl.data.TensorSpec.implements_for_spec"]], "index() (torchrl.data.tensorspec method)": [[36, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[36, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[36, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[36, "torchrl.data.TensorSpec.rand"]], "squeeze() (torchrl.data.tensorspec method)": [[36, "torchrl.data.TensorSpec.squeeze"]], "to_numpy() (torchrl.data.tensorspec method)": [[36, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[36, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[36, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[37, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[37, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[37, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "expand() (torchrl.data.unboundedcontinuoustensorspec method)": [[37, "torchrl.data.UnboundedContinuousTensorSpec.expand"]], "implements_for_spec() (torchrl.data.unboundedcontinuoustensorspec class method)": [[37, "torchrl.data.UnboundedContinuousTensorSpec.implements_for_spec"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[37, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[37, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[37, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[37, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "squeeze() (torchrl.data.unboundedcontinuoustensorspec method)": [[37, "torchrl.data.UnboundedContinuousTensorSpec.squeeze"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[37, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[37, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[37, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "unboundeddiscretetensorspec (class in torchrl.data)": [[38, "torchrl.data.UnboundedDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[38, "torchrl.data.UnboundedDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundeddiscretetensorspec method)": [[38, "torchrl.data.UnboundedDiscreteTensorSpec.encode"]], "expand() (torchrl.data.unboundeddiscretetensorspec method)": [[38, "torchrl.data.UnboundedDiscreteTensorSpec.expand"]], "implements_for_spec() (torchrl.data.unboundeddiscretetensorspec class method)": [[38, "torchrl.data.UnboundedDiscreteTensorSpec.implements_for_spec"]], "index() (torchrl.data.unboundeddiscretetensorspec method)": [[38, "torchrl.data.UnboundedDiscreteTensorSpec.index"]], "is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[38, "torchrl.data.UnboundedDiscreteTensorSpec.is_in"]], "project() (torchrl.data.unboundeddiscretetensorspec method)": [[38, "torchrl.data.UnboundedDiscreteTensorSpec.project"]], "rand() (torchrl.data.unboundeddiscretetensorspec method)": [[38, "torchrl.data.UnboundedDiscreteTensorSpec.rand"]], "squeeze() (torchrl.data.unboundeddiscretetensorspec method)": [[38, "torchrl.data.UnboundedDiscreteTensorSpec.squeeze"]], "to_numpy() (torchrl.data.unboundeddiscretetensorspec method)": [[38, "torchrl.data.UnboundedDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundeddiscretetensorspec method)": [[38, "torchrl.data.UnboundedDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.unboundeddiscretetensorspec method)": [[38, "torchrl.data.UnboundedDiscreteTensorSpec.zero"]], "d4rlexperiencereplay (class in torchrl.data.datasets)": [[39, "torchrl.data.datasets.D4RLExperienceReplay"]], "add() (torchrl.data.datasets.d4rlexperiencereplay method)": [[39, "torchrl.data.datasets.D4RLExperienceReplay.add"]], "append_transform() (torchrl.data.datasets.d4rlexperiencereplay method)": [[39, "torchrl.data.datasets.D4RLExperienceReplay.append_transform"]], "extend() (torchrl.data.datasets.d4rlexperiencereplay method)": [[39, "torchrl.data.datasets.D4RLExperienceReplay.extend"]], "insert_transform() (torchrl.data.datasets.d4rlexperiencereplay method)": [[39, "torchrl.data.datasets.D4RLExperienceReplay.insert_transform"]], "sample() (torchrl.data.datasets.d4rlexperiencereplay method)": [[39, "torchrl.data.datasets.D4RLExperienceReplay.sample"]], "openmlexperiencereplay (class in torchrl.data.datasets)": [[40, "torchrl.data.datasets.OpenMLExperienceReplay"]], "add() (torchrl.data.datasets.openmlexperiencereplay method)": [[40, "torchrl.data.datasets.OpenMLExperienceReplay.add"]], "append_transform() (torchrl.data.datasets.openmlexperiencereplay method)": [[40, "torchrl.data.datasets.OpenMLExperienceReplay.append_transform"]], "extend() (torchrl.data.datasets.openmlexperiencereplay method)": [[40, "torchrl.data.datasets.OpenMLExperienceReplay.extend"]], "insert_transform() (torchrl.data.datasets.openmlexperiencereplay method)": [[40, "torchrl.data.datasets.OpenMLExperienceReplay.insert_transform"]], "sample() (torchrl.data.datasets.openmlexperiencereplay method)": [[40, "torchrl.data.datasets.OpenMLExperienceReplay.sample"]], "lazymemmapstorage (class in torchrl.data.replay_buffers)": [[41, "torchrl.data.replay_buffers.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.lazymemmapstorage method)": [[41, "torchrl.data.replay_buffers.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers)": [[42, "torchrl.data.replay_buffers.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.lazytensorstorage method)": [[42, "torchrl.data.replay_buffers.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers)": [[43, "torchrl.data.replay_buffers.ListStorage"]], "attach() (torchrl.data.replay_buffers.liststorage method)": [[43, "torchrl.data.replay_buffers.ListStorage.attach"]], "prioritizedsampler (class in torchrl.data.replay_buffers)": [[44, "torchrl.data.replay_buffers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.prioritizedsampler method)": [[44, "torchrl.data.replay_buffers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers)": [[45, "torchrl.data.replay_buffers.RandomSampler"]], "roundrobinwriter (class in torchrl.data.replay_buffers)": [[46, "torchrl.data.replay_buffers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.roundrobinwriter method)": [[46, "torchrl.data.replay_buffers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.roundrobinwriter method)": [[46, "torchrl.data.replay_buffers.RoundRobinWriter.extend"]], "sampler (class in torchrl.data.replay_buffers)": [[47, "torchrl.data.replay_buffers.Sampler"]], "samplerwithoutreplacement (class in torchrl.data.replay_buffers)": [[48, "torchrl.data.replay_buffers.SamplerWithoutReplacement"]], "storage (class in torchrl.data.replay_buffers)": [[49, "torchrl.data.replay_buffers.Storage"]], "attach() (torchrl.data.replay_buffers.storage method)": [[49, "torchrl.data.replay_buffers.Storage.attach"]], "writer (class in torchrl.data.replay_buffers)": [[50, "torchrl.data.replay_buffers.Writer"]], "add() (torchrl.data.replay_buffers.writer method)": [[50, "torchrl.data.replay_buffers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writer method)": [[50, "torchrl.data.replay_buffers.Writer.extend"]], "envbase (class in torchrl.envs)": [[51, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[51, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.parameters"]], "rand_action() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.rand_action"]], "rand_step() (torchrl.envs.envbase method)": [[51, "id0"], [51, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[51, "id1"], [51, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[51, "id2"], [51, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[51, "id3"], [51, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[51, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[51, "id4"], [51, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[51, "torchrl.envs.EnvBase.zero_grad"]], "envcreator (class in torchrl.envs)": [[52, "torchrl.envs.EnvCreator"]], "envmetadata (class in torchrl.envs)": [[53, "torchrl.envs.EnvMetaData"]], "gymlikeenv (class in torchrl.envs)": [[54, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[54, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.parameters"]], "rand_action() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.rand_action"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[54, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[54, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[55, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[55, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[55, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[55, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[55, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[55, "torchrl.envs.step"]], "multithreadedenv (class in torchrl.envs)": [[56, "torchrl.envs.MultiThreadedEnv"]], "add_module() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.add_module"]], "apply() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.apply"]], "batch_locked (torchrl.envs.multithreadedenv property)": [[56, "torchrl.envs.MultiThreadedEnv.batch_locked"]], "bfloat16() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.bfloat16"]], "buffers() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.buffers"]], "children() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.children"]], "close() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.close"]], "cpu() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.cpu"]], "cuda() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.cuda"]], "double() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.double"]], "eval() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.eval"]], "extra_repr() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.fake_tensordict"]], "float() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.float"]], "forward() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.forward"]], "get_buffer() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.get_buffer"]], "get_extra_state() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.get_extra_state"]], "get_parameter() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.get_parameter"]], "get_submodule() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.get_submodule"]], "half() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.half"]], "ipu() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.ipu"]], "load_state_dict() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.load_state_dict"]], "modules() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.modules"]], "named_buffers() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.named_buffers"]], "named_children() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.named_children"]], "named_modules() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.named_modules"]], "named_parameters() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.named_parameters"]], "parameters() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.parameters"]], "rand_action() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.rand_action"]], "rand_step() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.rand_step"]], "register_backward_hook() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.register_module"]], "register_parameter() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.requires_grad_"]], "reset() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.reset"]], "rollout() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.rollout"]], "set_extra_state() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.set_extra_state"]], "set_seed() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.set_seed"]], "share_memory() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.share_memory"]], "specs (torchrl.envs.multithreadedenv property)": [[56, "torchrl.envs.MultiThreadedEnv.specs"]], "state_dict() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.state_dict"]], "step() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.step"]], "to() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.to"]], "to_empty() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.to_empty"]], "train() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.train"]], "type() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.type"]], "xpu() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.xpu"]], "zero_grad() (torchrl.envs.multithreadedenv method)": [[56, "torchrl.envs.MultiThreadedEnv.zero_grad"]], "parallelenv (class in torchrl.envs)": [[57, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[57, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.parameters"]], "rand_action() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.rand_action"]], "rand_step() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[57, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[57, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[58, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[58, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.parameters"]], "rand_action() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.rand_action"]], "rand_step() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[58, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[58, "torchrl.envs.SerialEnv.zero_grad"]], "braxenv() (in module torchrl.envs.libs.brax)": [[59, "torchrl.envs.libs.brax.BraxEnv"]], "braxwrapper() (in module torchrl.envs.libs.brax)": [[60, "torchrl.envs.libs.brax.BraxWrapper"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[61, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[62, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[63, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[64, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[65, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[66, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[67, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "openmlenv() (in module torchrl.envs.libs.openml)": [[68, "torchrl.envs.libs.openml.OpenMLEnv"]], "vmasenv() (in module torchrl.envs.libs.vmas)": [[69, "torchrl.envs.libs.vmas.VmasEnv"]], "vmaswrapper() (in module torchrl.envs.libs.vmas)": [[70, "torchrl.envs.libs.vmas.VmasWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[71, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[72, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.CatFrames"]], "forward() (torchrl.envs.transforms.catframes method)": [[73, "torchrl.envs.transforms.CatFrames.forward"]], "reset() (torchrl.envs.transforms.catframes method)": [[73, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[73, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.CatTensors"]], "forward() (torchrl.envs.transforms.cattensors method)": [[74, "torchrl.envs.transforms.CatTensors.forward"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[74, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[75, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[76, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[76, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[76, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[76, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[76, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[76, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "discreteactionprojection (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.DiscreteActionProjection"]], "transform_input_spec() (torchrl.envs.transforms.discreteactionprojection method)": [[77, "torchrl.envs.transforms.DiscreteActionProjection.transform_input_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[78, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[78, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[78, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "excludetransform (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.ExcludeTransform"]], "forward() (torchrl.envs.transforms.excludetransform method)": [[79, "torchrl.envs.transforms.ExcludeTransform.forward"]], "reset() (torchrl.envs.transforms.excludetransform method)": [[79, "torchrl.envs.transforms.ExcludeTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.excludetransform method)": [[79, "torchrl.envs.transforms.ExcludeTransform.transform_observation_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "forward() (torchrl.envs.transforms.finitetensordictcheck method)": [[80, "torchrl.envs.transforms.FiniteTensorDictCheck.forward"]], "flattenobservation (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.FlattenObservation"]], "forward() (torchrl.envs.transforms.flattenobservation method)": [[81, "torchrl.envs.transforms.FlattenObservation.forward"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[81, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "frameskiptransform (class in torchrl.envs.transforms)": [[82, "torchrl.envs.transforms.FrameSkipTransform"]], "forward() (torchrl.envs.transforms.frameskiptransform method)": [[82, "torchrl.envs.transforms.FrameSkipTransform.forward"]], "grayscale (class in torchrl.envs.transforms)": [[83, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[83, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "inittracker (class in torchrl.envs.transforms)": [[84, "torchrl.envs.transforms.InitTracker"]], "forward() (torchrl.envs.transforms.inittracker method)": [[84, "torchrl.envs.transforms.InitTracker.forward"]], "reset() (torchrl.envs.transforms.inittracker method)": [[84, "torchrl.envs.transforms.InitTracker.reset"]], "transform_observation_spec() (torchrl.envs.transforms.inittracker method)": [[84, "torchrl.envs.transforms.InitTracker.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[85, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[85, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[86, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[86, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_input_spec() (torchrl.envs.transforms.observationnorm method)": [[86, "torchrl.envs.transforms.ObservationNorm.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[86, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[87, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[88, "torchrl.envs.transforms.PinMemoryTransform"]], "forward() (torchrl.envs.transforms.pinmemorytransform method)": [[88, "torchrl.envs.transforms.PinMemoryTransform.forward"]], "r3mtransform (class in torchrl.envs.transforms)": [[89, "torchrl.envs.transforms.R3MTransform"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[89, "torchrl.envs.transforms.R3MTransform.to"]], "randomcroptensordict (class in torchrl.envs.transforms)": [[90, "torchrl.envs.transforms.RandomCropTensorDict"]], "forward() (torchrl.envs.transforms.randomcroptensordict method)": [[90, "torchrl.envs.transforms.RandomCropTensorDict.forward"]], "renametransform (class in torchrl.envs.transforms)": [[91, "torchrl.envs.transforms.RenameTransform"]], "forward() (torchrl.envs.transforms.renametransform method)": [[91, "torchrl.envs.transforms.RenameTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.renametransform method)": [[91, "torchrl.envs.transforms.RenameTransform.transform_input_spec"]], "transform_output_spec() (torchrl.envs.transforms.renametransform method)": [[91, "torchrl.envs.transforms.RenameTransform.transform_output_spec"]], "resize (class in torchrl.envs.transforms)": [[92, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[92, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[93, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[93, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[94, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[94, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "rewardsum (class in torchrl.envs.transforms)": [[95, "torchrl.envs.transforms.RewardSum"]], "forward() (torchrl.envs.transforms.rewardsum method)": [[95, "torchrl.envs.transforms.RewardSum.forward"]], "reset() (torchrl.envs.transforms.rewardsum method)": [[95, "torchrl.envs.transforms.RewardSum.reset"]], "transform_observation_spec() (torchrl.envs.transforms.rewardsum method)": [[95, "torchrl.envs.transforms.RewardSum.transform_observation_spec"]], "selecttransform (class in torchrl.envs.transforms)": [[96, "torchrl.envs.transforms.SelectTransform"]], "forward() (torchrl.envs.transforms.selecttransform method)": [[96, "torchrl.envs.transforms.SelectTransform.forward"]], "reset() (torchrl.envs.transforms.selecttransform method)": [[96, "torchrl.envs.transforms.SelectTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.selecttransform method)": [[96, "torchrl.envs.transforms.SelectTransform.transform_observation_spec"]], "squeezetransform (class in torchrl.envs.transforms)": [[97, "torchrl.envs.transforms.SqueezeTransform"]], "stepcounter (class in torchrl.envs.transforms)": [[98, "torchrl.envs.transforms.StepCounter"]], "forward() (torchrl.envs.transforms.stepcounter method)": [[98, "torchrl.envs.transforms.StepCounter.forward"]], "reset() (torchrl.envs.transforms.stepcounter method)": [[98, "torchrl.envs.transforms.StepCounter.reset"]], "transform_input_spec() (torchrl.envs.transforms.stepcounter method)": [[98, "torchrl.envs.transforms.StepCounter.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.stepcounter method)": [[98, "torchrl.envs.transforms.StepCounter.transform_observation_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[99, "torchrl.envs.transforms.TensorDictPrimer"]], "forward() (torchrl.envs.transforms.tensordictprimer method)": [[99, "torchrl.envs.transforms.TensorDictPrimer.forward"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[99, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[99, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[99, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "timemaxpool (class in torchrl.envs.transforms)": [[100, "torchrl.envs.transforms.TimeMaxPool"]], "forward() (torchrl.envs.transforms.timemaxpool method)": [[100, "torchrl.envs.transforms.TimeMaxPool.forward"]], "reset() (torchrl.envs.transforms.timemaxpool method)": [[100, "torchrl.envs.transforms.TimeMaxPool.reset"]], "transform_observation_spec() (torchrl.envs.transforms.timemaxpool method)": [[100, "torchrl.envs.transforms.TimeMaxPool.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[101, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[101, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[102, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[102, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[102, "torchrl.envs.transforms.Transform.reset"]], "transform_done_spec() (torchrl.envs.transforms.transform method)": [[102, "torchrl.envs.transforms.Transform.transform_done_spec"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[102, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[102, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_output_spec() (torchrl.envs.transforms.transform method)": [[102, "torchrl.envs.transforms.Transform.transform_output_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[102, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[103, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[103, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[103, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "done_spec (torchrl.envs.transforms.transformedenv property)": [[103, "torchrl.envs.transforms.TransformedEnv.done_spec"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[103, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[103, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[103, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[103, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "output_spec (torchrl.envs.transforms.transformedenv property)": [[103, "torchrl.envs.transforms.TransformedEnv.output_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[103, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[103, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[103, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[103, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[103, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[104, "torchrl.envs.transforms.UnsqueezeTransform"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[104, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[104, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[104, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[105, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[105, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[105, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[106, "torchrl.envs.transforms.VIPTransform"]], "to() (torchrl.envs.transforms.viptransform method)": [[106, "torchrl.envs.transforms.VIPTransform.to"]], "vecnorm (class in torchrl.envs.transforms)": [[107, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[107, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "forward() (torchrl.envs.transforms.vecnorm method)": [[107, "torchrl.envs.transforms.VecNorm.forward"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[107, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[107, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[107, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[108, "torchrl.envs.transforms.gSDENoise"]], "check_env_specs() (in module torchrl.envs.utils)": [[109, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[110, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[111, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[112, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[113, "torchrl.envs.utils.step_mdp"]], "cemplanner (class in torchrl.modules)": [[114, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[114, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[115, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[115, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[116, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[116, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[117, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[117, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[118, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[118, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[119, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[119, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[120, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[120, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[120, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[120, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[120, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[120, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[121, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[121, "torchrl.modules.DistributionalDQNnet.forward"]], "distributionalqvaluehook (class in torchrl.modules)": [[122, "torchrl.modules.DistributionalQValueHook"]], "dreameractor (class in torchrl.modules)": [[123, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[123, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[124, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[124, "torchrl.modules.DuelingCnnDQNet.forward"]], "independentnormal (class in torchrl.modules)": [[125, "torchrl.modules.IndependentNormal"]], "mode (torchrl.modules.independentnormal property)": [[125, "torchrl.modules.IndependentNormal.mode"]], "lstmnet (class in torchrl.modules)": [[126, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[126, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[127, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[127, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[128, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[128, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[128, "torchrl.modules.MPCPlannerBase.planning"]], "mppiplanner (class in torchrl.modules)": [[129, "torchrl.modules.MPPIPlanner"]], "planning() (torchrl.modules.mppiplanner method)": [[129, "torchrl.modules.MPPIPlanner.planning"]], "noisylazylinear (class in torchrl.modules)": [[130, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[130, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[131, "torchrl.modules.NoisyLinear"]], "normalparamwrapper (class in torchrl.modules)": [[132, "torchrl.modules.NormalParamWrapper"]], "forward() (torchrl.modules.normalparamwrapper method)": [[132, "torchrl.modules.NormalParamWrapper.forward"]], "obsdecoder (class in torchrl.modules)": [[133, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[133, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[134, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[134, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[135, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[135, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[135, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[135, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[135, "torchrl.modules.OneHotCategorical.sample"]], "qvaluehook (class in torchrl.modules)": [[136, "torchrl.modules.QValueHook"]], "rssmposterior (class in torchrl.modules)": [[137, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[137, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[138, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[138, "torchrl.modules.RSSMPrior.forward"]], "tanhdelta (class in torchrl.modules)": [[139, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[139, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[139, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[140, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[140, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[141, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[141, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[141, "torchrl.modules.TruncatedNormal.mode"]], "reset_noise (class in torchrl.modules)": [[142, "torchrl.modules.reset_noise"]], "actor (class in torchrl.modules.tensordict_module)": [[143, "torchrl.modules.tensordict_module.Actor"]], "actorcriticoperator (class in torchrl.modules.tensordict_module)": [[144, "torchrl.modules.tensordict_module.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[144, "torchrl.modules.tensordict_module.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[144, "torchrl.modules.tensordict_module.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules.tensordict_module)": [[145, "torchrl.modules.tensordict_module.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[145, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[145, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules.tensordict_module)": [[146, "torchrl.modules.tensordict_module.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[146, "torchrl.modules.tensordict_module.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[146, "torchrl.modules.tensordict_module.ActorValueOperator.get_value_operator"]], "additivegaussianwrapper (class in torchrl.modules.tensordict_module)": [[147, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper"]], "forward() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[147, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.forward"]], "step() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[147, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.step"]], "distributionalqvalueactor (class in torchrl.modules.tensordict_module)": [[148, "torchrl.modules.tensordict_module.DistributionalQValueActor"]], "egreedywrapper (class in torchrl.modules.tensordict_module)": [[149, "torchrl.modules.tensordict_module.EGreedyWrapper"]], "forward() (torchrl.modules.tensordict_module.egreedywrapper method)": [[149, "torchrl.modules.tensordict_module.EGreedyWrapper.forward"]], "step() (torchrl.modules.tensordict_module.egreedywrapper method)": [[149, "torchrl.modules.tensordict_module.EGreedyWrapper.step"]], "ornsteinuhlenbeckprocesswrapper (class in torchrl.modules.tensordict_module)": [[150, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper"]], "forward() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[150, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.forward"]], "step() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[150, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.step"]], "probabilisticactor (class in torchrl.modules.tensordict_module)": [[151, "torchrl.modules.tensordict_module.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules.tensordict_module)": [[152, "torchrl.modules.tensordict_module.QValueActor"]], "safemodule (class in torchrl.modules.tensordict_module)": [[153, "torchrl.modules.tensordict_module.SafeModule"]], "random() (torchrl.modules.tensordict_module.safemodule method)": [[153, "torchrl.modules.tensordict_module.SafeModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safemodule method)": [[153, "torchrl.modules.tensordict_module.SafeModule.random_sample"]], "to() (torchrl.modules.tensordict_module.safemodule method)": [[153, "torchrl.modules.tensordict_module.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules.tensordict_module)": [[154, "torchrl.modules.tensordict_module.SafeProbabilisticModule"]], "random() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[154, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[154, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random_sample"]], "safeprobabilistictensordictsequential (class in torchrl.modules.tensordict_module)": [[155, "torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential"]], "safesequential (class in torchrl.modules.tensordict_module)": [[156, "torchrl.modules.tensordict_module.SafeSequential"]], "valueoperator (class in torchrl.modules.tensordict_module)": [[157, "torchrl.modules.tensordict_module.ValueOperator"]], "worldmodelwrapper (class in torchrl.modules.tensordict_module)": [[158, "torchrl.modules.tensordict_module.WorldModelWrapper"]], "get_reward_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[158, "torchrl.modules.tensordict_module.WorldModelWrapper.get_reward_operator"]], "get_transition_model_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[158, "torchrl.modules.tensordict_module.WorldModelWrapper.get_transition_model_operator"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[159, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[160, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[161, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[161, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[162, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[163, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[164, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[164, "torchrl.objectives.A2CLoss.forward"]], "make_value_estimator() (torchrl.objectives.a2closs method)": [[164, "torchrl.objectives.A2CLoss.make_value_estimator"]], "clipppoloss (class in torchrl.objectives)": [[165, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[165, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[166, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[166, "torchrl.objectives.DDPGLoss.forward"]], "make_value_estimator() (torchrl.objectives.ddpgloss method)": [[166, "torchrl.objectives.DDPGLoss.make_value_estimator"]], "dqnloss (class in torchrl.objectives)": [[167, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[167, "torchrl.objectives.DQNLoss.forward"]], "make_value_estimator() (torchrl.objectives.dqnloss method)": [[167, "torchrl.objectives.DQNLoss.make_value_estimator"]], "discretesacloss (class in torchrl.objectives)": [[168, "torchrl.objectives.DiscreteSACLoss"]], "forward() (torchrl.objectives.discretesacloss method)": [[168, "torchrl.objectives.DiscreteSACLoss.forward"]], "make_value_estimator() (torchrl.objectives.discretesacloss method)": [[168, "torchrl.objectives.DiscreteSACLoss.make_value_estimator"]], "distributionaldqnloss (class in torchrl.objectives)": [[169, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[169, "torchrl.objectives.DistributionalDQNLoss.forward"]], "make_value_estimator() (torchrl.objectives.distributionaldqnloss method)": [[169, "torchrl.objectives.DistributionalDQNLoss.make_value_estimator"]], "dreameractorloss (class in torchrl.objectives)": [[170, "torchrl.objectives.DreamerActorLoss"]], "forward() (torchrl.objectives.dreameractorloss method)": [[170, "torchrl.objectives.DreamerActorLoss.forward"]], "make_value_estimator() (torchrl.objectives.dreameractorloss method)": [[170, "torchrl.objectives.DreamerActorLoss.make_value_estimator"]], "dreamermodelloss (class in torchrl.objectives)": [[171, "torchrl.objectives.DreamerModelLoss"]], "forward() (torchrl.objectives.dreamermodelloss method)": [[171, "torchrl.objectives.DreamerModelLoss.forward"]], "dreamervalueloss (class in torchrl.objectives)": [[172, "torchrl.objectives.DreamerValueLoss"]], "forward() (torchrl.objectives.dreamervalueloss method)": [[172, "torchrl.objectives.DreamerValueLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[173, "torchrl.objectives.HardUpdate"]], "iqlloss (class in torchrl.objectives)": [[174, "torchrl.objectives.IQLLoss"]], "forward() (torchrl.objectives.iqlloss method)": [[174, "torchrl.objectives.IQLLoss.forward"]], "loss_value_diff() (torchrl.objectives.iqlloss static method)": [[174, "torchrl.objectives.IQLLoss.loss_value_diff"]], "make_value_estimator() (torchrl.objectives.iqlloss method)": [[174, "torchrl.objectives.IQLLoss.make_value_estimator"]], "klpenppoloss (class in torchrl.objectives)": [[175, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[175, "torchrl.objectives.KLPENPPOLoss.forward"]], "lossmodule (class in torchrl.objectives)": [[176, "torchrl.objectives.LossModule"]], "convert_to_functional() (torchrl.objectives.lossmodule method)": [[176, "torchrl.objectives.LossModule.convert_to_functional"]], "cpu() (torchrl.objectives.lossmodule method)": [[176, "torchrl.objectives.LossModule.cpu"]], "cuda() (torchrl.objectives.lossmodule method)": [[176, "torchrl.objectives.LossModule.cuda"]], "double() (torchrl.objectives.lossmodule method)": [[176, "torchrl.objectives.LossModule.double"]], "float() (torchrl.objectives.lossmodule method)": [[176, "torchrl.objectives.LossModule.float"]], "forward() (torchrl.objectives.lossmodule method)": [[176, "torchrl.objectives.LossModule.forward"]], "half() (torchrl.objectives.lossmodule method)": [[176, "torchrl.objectives.LossModule.half"]], "make_value_estimator() (torchrl.objectives.lossmodule method)": [[176, "torchrl.objectives.LossModule.make_value_estimator"]], "named_parameters() (torchrl.objectives.lossmodule method)": [[176, "torchrl.objectives.LossModule.named_parameters"]], "parameters() (torchrl.objectives.lossmodule method)": [[176, "torchrl.objectives.LossModule.parameters"]], "register_buffer() (torchrl.objectives.lossmodule method)": [[176, "torchrl.objectives.LossModule.register_buffer"]], "to() (torchrl.objectives.lossmodule method)": [[176, "torchrl.objectives.LossModule.to"]], "value_estimator (torchrl.objectives.lossmodule property)": [[176, "torchrl.objectives.LossModule.value_estimator"]], "ppoloss (class in torchrl.objectives)": [[177, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[177, "torchrl.objectives.PPOLoss.forward"]], "make_value_estimator() (torchrl.objectives.ppoloss method)": [[177, "torchrl.objectives.PPOLoss.make_value_estimator"]], "redqloss (class in torchrl.objectives)": [[178, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[178, "torchrl.objectives.REDQLoss.forward"]], "make_value_estimator() (torchrl.objectives.redqloss method)": [[178, "torchrl.objectives.REDQLoss.make_value_estimator"]], "reinforceloss (class in torchrl.objectives)": [[179, "torchrl.objectives.ReinforceLoss"]], "forward() (torchrl.objectives.reinforceloss method)": [[179, "torchrl.objectives.ReinforceLoss.forward"]], "make_value_estimator() (torchrl.objectives.reinforceloss method)": [[179, "torchrl.objectives.ReinforceLoss.make_value_estimator"]], "sacloss (class in torchrl.objectives)": [[180, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[180, "torchrl.objectives.SACLoss.forward"]], "make_value_estimator() (torchrl.objectives.sacloss method)": [[180, "torchrl.objectives.SACLoss.make_value_estimator"]], "softupdate (class in torchrl.objectives)": [[181, "torchrl.objectives.SoftUpdate"]], "td3loss (class in torchrl.objectives)": [[182, "torchrl.objectives.TD3Loss"]], "forward() (torchrl.objectives.td3loss method)": [[182, "torchrl.objectives.TD3Loss.forward"]], "make_value_estimator() (torchrl.objectives.td3loss method)": [[182, "torchrl.objectives.TD3Loss.make_value_estimator"]], "valueestimators (class in torchrl.objectives)": [[183, "torchrl.objectives.ValueEstimators"]], "default_value_kwargs (class in torchrl.objectives)": [[184, "torchrl.objectives.default_value_kwargs"]], "distance_loss (class in torchrl.objectives)": [[185, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[186, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[187, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[188, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[189, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[189, "torchrl.objectives.value.GAE.forward"]], "value_estimate() (torchrl.objectives.value.gae method)": [[189, "torchrl.objectives.value.GAE.value_estimate"]], "td0estimator (class in torchrl.objectives.value)": [[190, "torchrl.objectives.value.TD0Estimator"]], "forward() (torchrl.objectives.value.td0estimator method)": [[190, "torchrl.objectives.value.TD0Estimator.forward"]], "value_estimate() (torchrl.objectives.value.td0estimator method)": [[190, "torchrl.objectives.value.TD0Estimator.value_estimate"]], "td1estimator (class in torchrl.objectives.value)": [[191, "torchrl.objectives.value.TD1Estimator"]], "forward() (torchrl.objectives.value.td1estimator method)": [[191, "torchrl.objectives.value.TD1Estimator.forward"]], "value_estimate() (torchrl.objectives.value.td1estimator method)": [[191, "torchrl.objectives.value.TD1Estimator.value_estimate"]], "tdlambdaestimator (class in torchrl.objectives.value)": [[192, "torchrl.objectives.value.TDLambdaEstimator"]], "forward() (torchrl.objectives.value.tdlambdaestimator method)": [[192, "torchrl.objectives.value.TDLambdaEstimator.forward"]], "value_estimate() (torchrl.objectives.value.tdlambdaestimator method)": [[192, "torchrl.objectives.value.TDLambdaEstimator.value_estimate"]], "valueestimatorbase (class in torchrl.objectives.value)": [[193, "torchrl.objectives.value.ValueEstimatorBase"]], "forward() (torchrl.objectives.value.valueestimatorbase method)": [[193, "torchrl.objectives.value.ValueEstimatorBase.forward"]], "value_estimate() (torchrl.objectives.value.valueestimatorbase method)": [[193, "torchrl.objectives.value.ValueEstimatorBase.value_estimate"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[194, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td0_advantage_estimate (class in torchrl.objectives.value.functional)": [[195, "torchrl.objectives.value.functional.td0_advantage_estimate"]], "td0_return_estimate (class in torchrl.objectives.value.functional)": [[196, "torchrl.objectives.value.functional.td0_return_estimate"]], "td1_advantage_estimate (class in torchrl.objectives.value.functional)": [[197, "torchrl.objectives.value.functional.td1_advantage_estimate"]], "td1_return_estimate (class in torchrl.objectives.value.functional)": [[198, "torchrl.objectives.value.functional.td1_return_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[199, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[200, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[201, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td1_advantage_estimate (class in torchrl.objectives.value.functional)": [[202, "torchrl.objectives.value.functional.vec_td1_advantage_estimate"]], "vec_td1_return_estimate (class in torchrl.objectives.value.functional)": [[203, "torchrl.objectives.value.functional.vec_td1_return_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[204, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[205, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "tensordictrecorder() (in module torchrl.record)": [[206, "torchrl.record.TensorDictRecorder"]], "videorecorder() (in module torchrl.record)": [[207, "torchrl.record.VideoRecorder"]], "logger() (in module torchrl.record.loggers)": [[208, "torchrl.record.loggers.Logger"]], "csvlogger() (in module torchrl.record.loggers.csv)": [[209, "torchrl.record.loggers.csv.CSVLogger"]], "generate_exp_name() (in module torchrl.record.loggers)": [[210, "torchrl.record.loggers.generate_exp_name"]], "get_logger() (in module torchrl.record.loggers)": [[211, "torchrl.record.loggers.get_logger"]], "mlflowlogger() (in module torchrl.record.loggers.mlflow)": [[212, "torchrl.record.loggers.mlflow.MLFlowLogger"]], "tensorboardlogger() (in module torchrl.record.loggers.tensorboard)": [[213, "torchrl.record.loggers.tensorboard.TensorboardLogger"]], "wandblogger() (in module torchrl.record.loggers.wandb)": [[214, "torchrl.record.loggers.wandb.WandbLogger"]], "batchsubsampler (class in torchrl.trainers)": [[215, "torchrl.trainers.BatchSubSampler"]], "register() (torchrl.trainers.batchsubsampler method)": [[215, "torchrl.trainers.BatchSubSampler.register"]], "clearcudacache (class in torchrl.trainers)": [[216, "torchrl.trainers.ClearCudaCache"]], "register() (torchrl.trainers.clearcudacache method)": [[216, "torchrl.trainers.ClearCudaCache.register"]], "countframeslog (class in torchrl.trainers)": [[217, "torchrl.trainers.CountFramesLog"]], "register() (torchrl.trainers.countframeslog method)": [[217, "torchrl.trainers.CountFramesLog.register"]], "logreward (class in torchrl.trainers)": [[218, "torchrl.trainers.LogReward"]], "register() (torchrl.trainers.logreward method)": [[218, "torchrl.trainers.LogReward.register"]], "optimizerhook (class in torchrl.trainers)": [[219, "torchrl.trainers.OptimizerHook"]], "register() (torchrl.trainers.optimizerhook method)": [[219, "torchrl.trainers.OptimizerHook.register"]], "recorder (class in torchrl.trainers)": [[220, "torchrl.trainers.Recorder"]], "register() (torchrl.trainers.recorder method)": [[220, "torchrl.trainers.Recorder.register"]], "replaybuffertrainer (class in torchrl.trainers)": [[221, "torchrl.trainers.ReplayBufferTrainer"]], "register() (torchrl.trainers.replaybuffertrainer method)": [[221, "torchrl.trainers.ReplayBufferTrainer.register"]], "rewardnormalizer (class in torchrl.trainers)": [[222, "torchrl.trainers.RewardNormalizer"]], "register() (torchrl.trainers.rewardnormalizer method)": [[222, "torchrl.trainers.RewardNormalizer.register"]], "selectkeys (class in torchrl.trainers)": [[223, "torchrl.trainers.SelectKeys"]], "register() (torchrl.trainers.selectkeys method)": [[223, "torchrl.trainers.SelectKeys.register"]], "trainer (class in torchrl.trainers)": [[224, "torchrl.trainers.Trainer"]], "trainerhookbase (class in torchrl.trainers)": [[225, "torchrl.trainers.TrainerHookBase"]], "register() (torchrl.trainers.trainerhookbase method)": [[225, "torchrl.trainers.TrainerHookBase.register"]], "updateweights (class in torchrl.trainers)": [[226, "torchrl.trainers.UpdateWeights"]], "register() (torchrl.trainers.updateweights method)": [[226, "torchrl.trainers.UpdateWeights.register"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[227, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[228, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[229, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[230, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[231, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[232, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[233, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[234, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[235, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[236, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[237, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[238, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[239, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[240, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[241, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[242, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[243, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[244, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[245, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[246, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[247, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[248, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[249, "torchrl.trainers.helpers.transformed_env_constructor"]]}})