Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.Actor", "reference/generated/torchrl.modules.ActorCriticOperator", "reference/generated/torchrl.modules.ActorCriticWrapper", "reference/generated/torchrl.modules.ActorValueOperator", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueActor", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.ProbabilisticActor", "reference/generated/torchrl.modules.QValueActor", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.SafeModule", "reference/generated/torchrl.modules.SafeProbabilisticModule", "reference/generated/torchrl.modules.SafeProbabilisticSequential", "reference/generated/torchrl.modules.SafeSequential", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.ValueOperator", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBuffer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/index", "tutorials/multi_task", "tutorials/sg_execution_times", "tutorials/tensordict_module", "tutorials/tensordict_tutorial", "tutorials/torch_envs", "tutorials/torchrl_demo"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.Actor.rst", "reference/generated/torchrl.modules.ActorCriticOperator.rst", "reference/generated/torchrl.modules.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.ActorValueOperator.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.ProbabilisticActor.rst", "reference/generated/torchrl.modules.QValueActor.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.SafeModule.rst", "reference/generated/torchrl.modules.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.SafeProbabilisticSequential.rst", "reference/generated/torchrl.modules.SafeSequential.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.ValueOperator.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBuffer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/sg_execution_times.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_tutorial.rst", "tutorials/torch_envs.rst", "tutorials/torchrl_demo.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "TensorDictReplayBuffer", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "GymLikeEnv", "ModelBasedEnvBase", "ParallelEnv", "SerialEnv", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DoubleToFloat", "FiniteTensorDictCheck", "FlattenObservation", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "TensorDictPrimer", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DistributionalQValueActor", "DreamerActor", "DuelingCnnDQNet", "LSTMNet", "MLP", "MPCPlannerBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "ProbabilisticActor", "QValueActor", "RSSMPosterior", "RSSMPrior", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticSequential", "SafeSequential", "TanhDelta", "TanhNormal", "TruncatedNormal", "ValueOperator", "reset_noise", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBuffer", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Demos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "README Demos", "Task-specific policy in multi-task environments", "Computation times", "TensorDictModule", "TensorDict", "TorchRL envs", "Introduction to TorchRL"], "terms": {"The": [0, 1, 2, 3, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 38, 41, 42, 44, 45, 58, 64, 67, 70, 71, 74, 77, 85, 86, 89, 91, 92, 93, 94, 100, 102, 104, 108, 110, 111, 112, 113, 115, 119, 125, 129, 130, 131, 134, 137, 142, 143, 144, 145, 153, 157, 182, 184, 185, 192, 194, 199, 200, 201, 202], "tensordict": [0, 1, 3, 11, 12, 13, 14, 15, 18, 19, 21, 25, 26, 29, 31, 35, 36, 41, 42, 43, 44, 45, 52, 55, 56, 58, 59, 60, 63, 64, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 97, 100, 102, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 124, 128, 129, 130, 131, 132, 134, 135, 136, 137, 142, 143, 144, 145, 153, 157, 161, 162, 167, 170, 172, 175, 177, 180, 188, 192, 194, 195, 196, 197, 198, 199, 201], "class": [0, 1, 2, 3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 184, 185, 186, 192, 194, 195, 199, 200, 201], "ha": [0, 6, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 71, 74, 113, 134, 194, 195, 197, 199, 200, 201, 202], "been": [0, 6, 11, 12, 14, 41, 42, 44, 45, 73, 195, 197, 201], "move": [0, 21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 78, 101, 112, 160, 195, 201, 202], "out": [0, 3, 21, 41, 42, 44, 45, 103, 104, 112, 113, 140, 141, 192, 199, 200, 201, 202], "dedic": [0, 86, 87, 88, 194, 197], "librari": [0, 6, 8, 9, 82, 188, 189, 193, 194, 201], "take": [0, 1, 3, 15, 41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125, 127, 146, 147, 148, 149, 150, 151, 152, 153, 163, 192, 194, 195, 199, 201], "look": [0, 4, 6, 21, 41, 42, 44, 45, 67, 113, 114, 115, 195, 199, 201, 202], "find": [0, 199], "sourc": [0, 1, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 199, 200, 201, 202], "code": [0, 3, 6, 67, 115, 196, 197, 198, 199, 201, 202], "github": [0, 2, 5, 6, 9, 202], "i": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 54, 55, 56, 57, 58, 61, 63, 64, 67, 70, 71, 72, 73, 74, 76, 77, 78, 79, 83, 84, 85, 86, 89, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 104, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 142, 143, 144, 145, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 164, 165, 167, 170, 175, 177, 180, 182, 186, 189, 192, 194, 195, 197, 199, 201, 202], "an": [0, 1, 2, 3, 4, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 57, 60, 63, 64, 67, 68, 72, 73, 74, 78, 80, 86, 87, 88, 90, 91, 92, 93, 94, 100, 101, 102, 103, 106, 112, 113, 114, 123, 124, 127, 128, 129, 132, 134, 135, 136, 137, 143, 144, 145, 157, 158, 159, 162, 165, 170, 183, 184, 185, 186, 189, 194, 195, 197, 199, 200, 201, 202], "open": [0, 4, 6, 10, 202], "reinforc": [0, 2, 3, 8, 55, 91, 92, 93, 94, 121, 128, 132, 133, 137, 138, 170, 195, 202], "learn": [0, 2, 3, 6, 8, 21, 55, 91, 92, 93, 94, 104, 121, 128, 132, 133, 136, 137, 138, 170, 194, 195, 197, 201, 202], "rl": [0, 1, 2, 7, 9, 11, 12, 13, 14, 43, 85, 104, 108, 119, 128, 135, 153, 189, 192, 194, 195, 199, 200, 201], "pytorch": [0, 1, 2, 72, 162, 192, 194, 200, 201, 202], "It": [0, 3, 6, 21, 25, 41, 42, 43, 44, 45, 50, 64, 74, 91, 93, 98, 110, 111, 113, 128, 129, 132, 134, 135, 136, 137, 142, 143, 158, 177, 189, 194, 199, 200, 201, 202], "provid": [0, 2, 3, 8, 13, 21, 23, 24, 25, 30, 41, 42, 43, 44, 45, 56, 63, 64, 67, 71, 74, 77, 78, 85, 90, 100, 101, 102, 108, 121, 142, 143, 144, 145, 153, 159, 165, 167, 175, 177, 180, 182, 189, 192, 194, 195, 197, 199, 201, 202], "python": [0, 3, 5, 6, 9, 192, 194, 195, 196, 197, 199, 201, 202], "first": [0, 1, 3, 6, 10, 11, 12, 13, 14, 42, 56, 61, 64, 67, 72, 74, 101, 103, 106, 112, 113, 161, 194, 195, 197, 199, 200, 201, 202], "low": [0, 194, 195, 202], "high": [0, 8, 143, 146, 147, 150, 194, 195, 202], "level": [0, 18, 134, 194, 195, 202], "abstract": [0, 17, 18, 19, 27, 28, 40, 41, 65, 102, 192, 200, 202], "ar": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 21, 22, 29, 30, 31, 35, 36, 37, 38, 41, 42, 43, 44, 45, 58, 59, 60, 67, 71, 73, 74, 77, 78, 84, 89, 94, 95, 100, 102, 104, 107, 111, 112, 113, 114, 115, 127, 128, 129, 132, 134, 135, 136, 137, 139, 142, 143, 144, 145, 182, 186, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202], "intend": [0, 6, 11, 12, 13, 14, 202], "effici": [0, 2, 104, 194, 195, 197, 200, 202], "modular": [0, 115, 202], "properli": [0, 200, 202], "test": [0, 3, 4, 80, 100, 158, 182, 199, 202], "aim": [0, 3, 6, 67, 77, 101, 164, 189, 194, 195, 202], "support": [0, 3, 18, 38, 73, 82, 97, 112, 115, 121, 132, 143, 144, 145, 192, 199, 200, 202], "research": [0, 6, 8, 202], "most": [0, 3, 6, 21, 194, 195, 199, 202], "written": [0, 3, 25, 35, 41, 42, 44, 45, 112, 113, 128, 129, 134, 135, 142, 192, 194, 197, 199, 202], "highli": [0, 2, 201, 202], "wai": [0, 135, 195, 197, 201, 202], "can": [0, 1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 18, 19, 21, 25, 27, 29, 41, 42, 44, 45, 55, 58, 63, 64, 67, 71, 73, 74, 77, 78, 89, 102, 104, 112, 113, 114, 115, 117, 118, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 142, 143, 144, 145, 158, 167, 175, 177, 180, 184, 185, 186, 189, 192, 194, 195, 197, 199, 201, 202], "easili": [0, 3, 6, 44, 45, 167, 175, 177, 180, 195, 200, 201, 202], "swap": [0, 3, 202], "compon": [0, 3, 35, 36, 37, 38, 121, 122, 128, 129, 132, 134, 135, 136, 137, 157, 162, 197, 199, 202], "transform": [0, 21, 29, 30, 31, 42, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 91, 98, 121, 122, 125, 127, 167, 170, 172, 175, 177, 180, 186, 188, 195], "them": [0, 6, 29, 30, 31, 41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125, 134, 194, 195, 197, 199, 200, 201, 202], "write": [0, 21, 42, 66, 112, 113, 115, 130, 131, 136, 137, 142, 192, 194, 195, 197, 199, 200, 202], "new": [0, 3, 11, 12, 13, 14, 21, 23, 25, 32, 41, 42, 44, 45, 73, 78, 84, 112, 113, 128, 129, 131, 132, 134, 135, 136, 137, 194, 195, 199, 200, 201, 202], "ones": [0, 18, 21, 41, 42, 44, 45, 56, 58, 59, 64, 67, 71, 74, 77, 112, 194, 200, 201, 202], "littl": [0, 3, 201, 202], "effort": [0, 3, 202], "thi": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 18, 21, 22, 25, 31, 35, 36, 37, 38, 41, 42, 43, 44, 45, 50, 55, 56, 58, 60, 64, 67, 71, 73, 74, 75, 76, 77, 78, 80, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 117, 118, 121, 122, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 143, 144, 145, 153, 155, 158, 162, 163, 164, 165, 167, 175, 177, 180, 182, 186, 189, 192, 194, 195, 197, 199, 201, 202], "repo": [0, 5, 189, 202], "attempt": [0, 202], "align": [0, 202], "exist": [0, 21, 41, 42, 44, 45, 56, 74, 165, 186, 199, 201, 202], "ecosystem": [0, 202], "dataset": [0, 23, 24, 25, 30, 78, 159, 200, 201, 202], "pillar": [0, 202], "environ": [0, 1, 3, 7, 10, 11, 12, 13, 14, 21, 22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 56, 59, 63, 64, 67, 73, 74, 78, 80, 89, 100, 102, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 164, 165, 167, 168, 169, 170, 172, 175, 177, 180, 182, 183, 184, 185, 186, 189, 196, 198], "model": [0, 1, 3, 8, 11, 12, 13, 14, 21, 41, 42, 43, 44, 45, 67, 77, 79, 86, 87, 88, 90, 101, 102, 112, 128, 135, 136, 137, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 188, 189, 192, 199, 201], "data": [0, 3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 64, 80, 85, 86, 87, 88, 89, 97, 100, 108, 109, 112, 113, 115, 119, 121, 122, 130, 136, 137, 143, 144, 145, 153, 159, 162, 163, 168, 182, 184, 185, 186, 188, 192, 195, 199, 200, 201], "util": [0, 11, 12, 13, 14, 15, 21, 41, 42, 44, 45, 67, 77, 80, 81, 82, 83, 84, 90, 125, 126, 127, 182, 188, 193, 194, 195, 199, 201, 202], "e": [0, 1, 3, 9, 10, 11, 12, 13, 14, 18, 21, 22, 35, 36, 41, 42, 44, 45, 56, 58, 67, 71, 73, 74, 77, 112, 113, 117, 118, 122, 142, 143, 144, 145, 153, 164, 185, 194, 195, 200, 201, 202], "g": [0, 1, 3, 9, 10, 21, 22, 41, 42, 44, 45, 56, 58, 67, 71, 73, 74, 77, 112, 113, 117, 118, 142, 148, 149, 151, 152, 185, 194, 195, 201, 202], "collector": [0, 3, 11, 12, 13, 14, 15, 162, 163, 168, 169, 182, 184, 185, 188, 192, 195, 201, 202], "contain": [0, 3, 6, 11, 12, 13, 14, 18, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 44, 45, 58, 67, 71, 74, 77, 78, 84, 89, 90, 101, 112, 128, 129, 130, 131, 132, 134, 135, 136, 137, 142, 143, 144, 145, 153, 159, 164, 167, 170, 172, 175, 177, 180, 182, 183, 184, 185, 186, 192, 195, 199, 201, 202], "etc": [0, 3, 6, 21, 28, 41, 42, 44, 45, 74, 101, 194, 200, 201, 202], "have": [0, 3, 5, 6, 11, 12, 14, 18, 21, 38, 41, 42, 44, 45, 55, 63, 73, 74, 78, 90, 100, 101, 114, 115, 129, 134, 135, 139, 153, 162, 192, 194, 195, 197, 199, 200, 201, 202], "few": [0, 2, 7, 153, 195, 201, 202], "depend": [0, 3, 6, 119, 135, 201, 202], "possibl": [0, 3, 19, 21, 22, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112, 158, 162, 194, 199, 200, 201, 202], "standard": [0, 64, 70, 78, 89, 98, 103, 104, 143, 144, 145, 194, 195, 202], "numpi": [0, 13, 16, 17, 18, 19, 20, 22, 27, 28, 72, 162, 194, 195, 201, 202], "common": [0, 3, 42, 44, 45, 86, 87, 88, 123, 124, 182, 189, 192, 194, 197, 199, 200, 201, 202], "openai": [0, 6, 48, 49, 201, 202], "gym": [0, 3, 10, 11, 12, 13, 42, 48, 49, 64, 71, 78, 167, 170, 172, 175, 177, 180, 182, 189, 194, 195, 202], "onli": [0, 1, 4, 6, 11, 12, 14, 18, 21, 25, 41, 42, 44, 45, 56, 58, 67, 71, 74, 77, 78, 100, 112, 113, 114, 115, 165, 192, 194, 195, 197, 199, 201, 202], "option": [0, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 35, 36, 41, 42, 43, 44, 45, 46, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 81, 84, 85, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 130, 131, 136, 137, 142, 143, 144, 145, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 165, 167, 168, 169, 170, 171, 173, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 194, 195, 202], "On": [0, 6, 195, 200], "end": [0, 21, 29, 30, 31, 41, 42, 44, 45, 74, 90, 102, 146, 147, 148, 149, 150, 151, 152, 194, 197, 201, 202], "come": [0, 1, 44, 45, 85, 86, 87, 88, 108, 119, 194, 199, 201, 202], "set": [0, 1, 2, 3, 6, 8, 11, 12, 13, 14, 21, 22, 38, 41, 42, 43, 44, 45, 56, 58, 67, 71, 74, 77, 83, 102, 112, 153, 158, 169, 186, 189, 193, 194, 195, 197, 201, 202], "re": [0, 3, 7, 21, 41, 42, 44, 45, 113, 192, 195, 197, 201, 202], "usabl": [0, 192, 202], "function": [0, 3, 10, 15, 21, 35, 36, 37, 38, 41, 42, 44, 45, 58, 67, 73, 74, 75, 76, 77, 78, 80, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 167, 170, 172, 175, 177, 180, 182, 188, 194, 195, 197, 199, 200, 201], "cost": [0, 2, 19, 195], "return": [0, 3, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 81, 82, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 100, 101, 102, 107, 109, 110, 111, 112, 113, 116, 117, 118, 119, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 142, 143, 144, 145, 148, 149, 151, 152, 159, 162, 164, 167, 168, 170, 172, 175, 177, 180, 182, 183, 184, 185, 186, 188, 192, 194, 195, 197, 199, 200, 201, 202], "process": [0, 1, 3, 11, 12, 14, 44, 45, 78, 192, 194, 195, 201, 202], "good": [0, 1, 8, 201, 202], "runtim": [0, 3, 21, 41, 42, 44, 45], "perform": [0, 3, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 58, 63, 67, 73, 74, 75, 76, 77, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 110, 111, 125, 135, 158, 162, 194, 195, 197, 200, 201], "introduct": [0, 196, 198, 201], "env": [0, 1, 5, 6, 11, 12, 13, 21, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 89, 102, 112, 165, 167, 168, 169, 170, 172, 175, 177, 180, 182, 184, 185, 186, 188, 194, 195, 196, 197, 198], "modul": [0, 3, 10, 21, 41, 42, 43, 44, 45, 58, 67, 71, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 136, 138, 140, 143, 144, 145, 162, 166, 171, 173, 174, 176, 179, 182, 187, 188, 192, 194, 195, 196, 197, 199], "us": [0, 1, 2, 3, 6, 9, 10, 11, 12, 13, 14, 18, 19, 21, 23, 24, 25, 29, 30, 31, 32, 41, 42, 43, 44, 45, 46, 56, 57, 64, 67, 71, 72, 73, 74, 77, 78, 80, 83, 84, 89, 90, 91, 92, 98, 101, 102, 104, 112, 113, 117, 118, 121, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 142, 143, 144, 145, 146, 147, 150, 158, 159, 162, 163, 165, 168, 169, 170, 178, 182, 186, 187, 189, 192, 193, 196, 197, 198, 200, 201], "object": [0, 3, 11, 12, 13, 14, 18, 21, 35, 36, 37, 38, 41, 42, 44, 45, 67, 73, 74, 78, 85, 86, 108, 112, 113, 114, 123, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 165, 168, 169, 181, 182, 186, 188, 192, 195, 199, 201], "state": [0, 1, 3, 11, 12, 13, 14, 21, 41, 42, 43, 44, 45, 52, 55, 56, 58, 67, 71, 73, 74, 76, 77, 78, 79, 86, 89, 98, 100, 101, 105, 110, 111, 112, 136, 142, 143, 144, 145, 186, 194, 195, 201], "contribut": 0, "instal": [0, 9, 162, 189, 201], "improv": [0, 2, 128], "structur": [0, 3, 6, 143, 144, 145], "dictionari": [0, 11, 12, 13, 14, 18, 21, 41, 42, 44, 45, 74, 113, 184, 185, 186, 192, 194, 201], "featur": [0, 3, 11, 12, 13, 14, 22, 41, 42, 44, 45, 55, 90, 98, 99, 101, 103, 104, 113, 143, 144, 145, 186, 194, 195, 199, 201, 202], "tensor": [0, 3, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 43, 44, 45, 52, 55, 56, 58, 61, 64, 67, 70, 71, 72, 73, 74, 77, 78, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 107, 108, 109, 112, 113, 115, 116, 117, 118, 119, 121, 122, 125, 126, 130, 131, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 167, 170, 172, 175, 177, 180, 192, 194, 195, 197, 199, 201, 202], "tensordictmodul": [0, 11, 12, 13, 14, 112, 114, 194, 195, 196, 197, 198], "exampl": [0, 3, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 56, 58, 59, 64, 67, 71, 72, 74, 77, 78, 84, 85, 86, 87, 88, 89, 90, 97, 100, 101, 108, 109, 112, 115, 119, 121, 122, 124, 143, 144, 145, 153, 154, 155, 156, 157, 160, 161, 163, 167, 170, 172, 175, 177, 180, 182, 187, 192, 194, 195, 196, 197, 200, 201, 202], "do": [0, 3, 6, 11, 12, 13, 14, 42, 63, 84, 87, 103, 192, 194, 195, 197, 201, 202], "": [0, 1, 3, 5, 6, 21, 23, 24, 25, 30, 41, 42, 44, 45, 58, 67, 71, 74, 77, 78, 80, 90, 104, 112, 113, 137, 143, 144, 145, 159, 177, 180, 194, 195, 197, 200, 201, 202], "don": [0, 5, 6, 16, 17, 18, 19, 20, 22, 27, 28, 41, 194, 200, 201, 202], "t": [0, 3, 5, 6, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 32, 41, 42, 44, 45, 67, 77, 78, 84, 112, 124, 130, 143, 144, 145, 162, 163, 186, 189, 194, 195, 197, 201, 202], "showcas": 0, "implement": [0, 2, 3, 8, 10, 21, 38, 41, 42, 44, 45, 78, 116, 117, 118, 128, 135, 137, 167, 175, 177, 180, 192, 194, 195, 202], "deepmind": [0, 6, 8, 46, 47], "control": [0, 1, 3, 44, 45, 46, 47, 91, 92, 93, 94, 102, 111, 112, 113, 114, 129, 134, 135, 138, 143, 146, 147, 150, 170, 192, 194], "devic": [0, 1, 2, 3, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 35, 36, 41, 42, 43, 44, 45, 52, 53, 58, 66, 67, 71, 72, 74, 77, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 103, 104, 108, 109, 112, 115, 119, 121, 122, 130, 163, 167, 170, 172, 175, 177, 178, 180, 194, 195, 197, 199, 202], "run": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 14, 21, 41, 42, 43, 44, 45, 46, 47, 58, 63, 64, 67, 73, 74, 75, 76, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 114, 115, 125, 158, 184, 185, 186, 189, 192, 194, 195, 197, 199, 200, 202], "parallel": [0, 1, 3, 7, 11, 12, 14, 80, 128, 183, 184, 185, 186, 195], "vecnorm": [0, 186, 188], "task": [0, 8, 44, 45, 46, 67, 77, 194, 195, 196, 198, 201, 202], "specif": [0, 4, 25, 26, 31, 42, 162, 188, 192, 196, 198], "polici": [0, 1, 2, 3, 11, 12, 13, 14, 41, 42, 43, 44, 45, 83, 84, 86, 87, 88, 104, 112, 113, 121, 122, 128, 129, 130, 134, 135, 136, 137, 158, 163, 167, 168, 169, 170, 172, 175, 182, 184, 185, 192, 195, 196, 198, 199, 201, 202], "multi": [0, 3, 6, 8, 21, 41, 42, 44, 45, 100, 101, 194, 195, 196, 198, 202], "execut": [0, 1, 3, 6, 13, 29, 30, 31, 41, 42, 43, 44, 45, 114, 115, 165, 186, 192, 195, 198, 199, 201], "divers": [0, 44, 45], "rollout": [0, 1, 3, 11, 12, 13, 14, 41, 42, 43, 44, 45, 80, 89, 128, 165, 194, 195, 202], "ddpg": [0, 91, 92, 93, 94, 130, 133, 138, 170, 171, 188, 196, 198], "normal": [0, 29, 64, 78, 90, 101, 113, 117, 118, 158, 160, 186, 192, 195, 201], "observ": [0, 2, 3, 11, 12, 13, 27, 41, 42, 43, 44, 45, 46, 47, 52, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 71, 72, 73, 74, 75, 77, 78, 84, 85, 86, 87, 88, 91, 92, 93, 94, 97, 100, 105, 106, 108, 109, 110, 119, 121, 122, 143, 144, 145, 167, 170, 172, 175, 177, 180, 182, 192, 195, 197, 199, 200, 201, 202], "build": [0, 3, 6, 15, 18, 21, 41, 42, 44, 45, 78, 89, 113, 162, 166, 171, 173, 174, 176, 178, 179, 181, 192, 199, 200, 201, 202], "evalu": [0, 21, 41, 42, 44, 45, 74, 95, 107, 118, 136, 168, 169, 195], "your": [0, 6, 7, 9, 21, 41, 42, 44, 45, 78, 186, 189, 195, 200, 202], "record": [0, 21, 41, 42, 44, 45, 135, 182, 188, 192, 195], "replai": [0, 13, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 38, 39, 44, 45, 130, 131, 136, 137, 159, 162, 178, 182, 188, 192, 195], "buffer": [0, 3, 13, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 58, 67, 71, 74, 77, 112, 115, 130, 131, 136, 137, 159, 162, 178, 182, 188, 192, 195, 199, 201], "hyperparamet": [0, 1], "initi": [0, 6, 11, 12, 13, 14, 21, 41, 42, 44, 45, 64, 67, 71, 73, 74, 79, 89, 103, 104, 134, 136, 137, 167, 170, 172, 175, 177, 180, 186, 195, 201], "time": [0, 3, 4, 6, 11, 12, 13, 14, 21, 41, 42, 44, 45, 56, 71, 78, 84, 98, 100, 136, 143, 144, 145, 162, 195, 197, 199, 200, 201, 202], "train": [0, 1, 11, 12, 13, 14, 21, 41, 42, 44, 45, 67, 74, 77, 91, 93, 128, 129, 132, 134, 135, 136, 137, 143, 162, 163, 182, 192, 200, 201], "experi": [0, 3, 23, 32, 189], "result": [0, 1, 3, 6, 11, 12, 13, 14, 21, 41, 42, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 84, 101, 122, 143, 146, 147, 148, 149, 150, 151, 152, 163, 195, 200, 201, 202], "sampl": [0, 2, 8, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 41, 43, 81, 83, 89, 95, 107, 110, 112, 113, 117, 118, 129, 130, 131, 134, 135, 153, 159, 162, 164, 195, 199, 201, 202], "trajectori": [0, 1, 11, 12, 13, 14, 15, 21, 41, 42, 44, 45, 73, 89, 135, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 195, 201, 202], "td": [0, 18, 46, 47, 48, 49, 51, 52, 56, 59, 64, 72, 74, 78, 84, 85, 86, 87, 88, 89, 97, 102, 108, 109, 112, 115, 119, 121, 122, 144, 145, 148, 149, 151, 152, 153, 161, 167, 170, 172, 175, 177, 180, 199, 200, 201, 202], "lambda": [0, 11, 12, 13, 14, 145, 148, 149, 151, 152, 182, 199, 200, 201, 202], "pixel": [0, 3, 6, 18, 62, 67, 68, 72, 77, 91, 105, 106, 167, 172, 175, 177, 180, 194, 196, 198, 201, 202], "base": [0, 3, 8, 11, 12, 13, 14, 34, 40, 43, 76, 86, 162, 167, 175, 177, 180, 192, 194, 196, 198, 201], "dqn": [0, 97, 109, 121, 131, 132, 133, 138, 172, 173, 188, 196, 198], "problem": [0, 6, 13, 201], "deep": [0, 8, 55, 91, 92, 93, 94, 96, 128, 133, 137, 138, 170, 194], "q": [0, 91, 92, 93, 94, 96, 99, 121, 122, 130, 131, 132, 133, 136, 137, 177, 180, 199], "network": [0, 1, 21, 41, 42, 44, 45, 86, 87, 88, 90, 91, 92, 93, 94, 96, 98, 99, 101, 104, 105, 106, 110, 111, 112, 130, 131, 132, 133, 136, 137, 138, 140, 143, 144, 145, 167, 170, 175, 181, 182, 192, 194, 197, 199, 201], "regular": [0, 14, 112, 113, 122, 132, 163, 192, 194, 199, 200, 201], "conclus": 0, "api": [0, 3, 67, 77, 192, 201, 202], "packag": [0, 5, 6, 9, 188, 189, 201], "trainer": [0, 128, 129, 132, 134, 135, 136, 137, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 194], "_util": [0, 10, 188], "knowledg": 0, "work": [0, 6, 7, 21, 41, 42, 44, 45, 56, 67, 78, 90, 101, 162, 189, 195, 197, 199, 200, 201, 202], "habitat": [0, 50, 189], "lab": [0, 3, 46, 47, 189], "about": [0, 189, 194, 195, 201, 202], "mujoco": [0, 5, 189], "issu": [0, 4, 112, 113, 189, 202], "when": [0, 1, 3, 4, 7, 11, 12, 13, 14, 21, 23, 24, 25, 29, 30, 31, 35, 36, 37, 38, 41, 42, 44, 45, 58, 63, 67, 71, 73, 74, 77, 78, 83, 89, 101, 102, 103, 112, 113, 115, 117, 125, 129, 134, 135, 142, 159, 186, 189, 192, 194, 195, 199, 200, 201], "render": [0, 7, 158, 189, 194, 195], "pro": [0, 6, 189], "tip": [0, 6, 189], "resourc": [0, 189], "version": [0, 1, 10, 21, 41, 42, 44, 45, 145, 189, 194, 195, 201], "index": [0, 6, 9, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 40, 84, 159, 194, 197, 200, 202], "search": [0, 195], "page": [0, 6], "somewhat": [1, 201], "equival": [1, 11, 12, 13, 14, 21, 41, 42, 44, 45, 74, 201, 202], "dataload": [1, 200], "except": [1, 16, 17, 18, 19, 20, 22, 27, 28, 41, 60, 107, 124, 194, 195, 200, 201], "1": [1, 2, 3, 9, 11, 12, 13, 14, 19, 20, 21, 22, 28, 41, 42, 43, 44, 45, 52, 54, 56, 58, 59, 63, 64, 67, 71, 72, 74, 77, 78, 84, 86, 87, 88, 89, 90, 91, 92, 94, 99, 101, 103, 104, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 121, 125, 128, 129, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 160, 167, 170, 172, 175, 177, 180, 182, 186, 189, 192, 194, 195, 197, 200, 201, 202], "thei": [1, 3, 7, 8, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 59, 60, 73, 74, 100, 128, 129, 132, 134, 135, 136, 137, 162, 192, 194, 195, 197, 199, 200, 201, 202], "collect": [1, 3, 11, 12, 13, 14, 21, 23, 24, 25, 26, 29, 30, 31, 64, 67, 77, 80, 130, 136, 137, 153, 159, 162, 163, 164, 165, 182, 192, 194, 195, 200, 201, 202], "over": [1, 2, 3, 11, 12, 13, 14, 21, 41, 42, 44, 45, 64, 115, 132, 164, 192, 194, 199, 200, 201, 202], "non": [1, 21, 23, 25, 41, 42, 44, 45, 54, 58, 67, 71, 74, 77, 112, 113, 143, 144, 145, 194, 199, 201], "static": [1, 78], "2": [1, 9, 11, 12, 13, 20, 21, 41, 42, 44, 45, 56, 58, 64, 67, 71, 74, 77, 78, 90, 91, 92, 93, 97, 99, 100, 101, 112, 119, 121, 129, 130, 134, 136, 137, 142, 143, 144, 145, 148, 149, 151, 152, 153, 194, 195, 197, 200, 201, 202], "like": [1, 6, 21, 41, 42, 44, 45, 50, 72, 80, 136, 194, 200, 201, 202], "being": [1, 3, 14, 21, 41, 42, 44, 45, 74, 83, 163, 184, 185, 186, 194, 195], "accept": [1, 11, 12, 13, 14, 21, 41, 42, 43, 44, 45, 58, 67, 71, 74, 77, 112, 113, 114, 192, 199, 201], "two": [1, 9, 21, 41, 42, 44, 45, 94, 113, 134, 137, 139, 158, 162, 167, 175, 177, 180, 194, 195, 197, 199, 200, 201, 202], "main": [1, 2, 113, 162, 194, 195, 197, 201], "argument": [1, 3, 11, 12, 13, 14, 18, 21, 41, 42, 44, 45, 58, 67, 71, 73, 74, 77, 90, 101, 103, 112, 113, 114, 119, 155, 164, 167, 170, 172, 175, 177, 180, 182, 183, 186, 194, 195, 199, 201], "list": [1, 5, 6, 8, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 37, 38, 41, 42, 43, 44, 45, 55, 67, 74, 77, 101, 115, 119, 141, 143, 145, 158, 159, 184, 185, 194, 195, 197, 199, 200, 201, 202], "constructor": [1, 13, 73, 143, 144, 145, 167, 170, 172, 175, 177, 180, 183, 186, 199], "iter": [1, 12, 13, 20, 21, 23, 24, 25, 26, 29, 30, 31, 41, 42, 44, 45, 64, 78, 90, 101, 112, 113, 114, 115, 123, 141, 158, 159, 161, 162, 167, 175, 177, 180, 192, 194], "step": [1, 3, 11, 12, 13, 14, 21, 41, 42, 43, 44, 45, 52, 63, 64, 74, 84, 89, 98, 100, 102, 113, 128, 135, 142, 153, 158, 162, 192, 194, 195, 197, 200, 202], "queri": [1, 11, 12, 13, 14, 21, 41, 42, 44, 45, 67, 73, 78, 115, 199, 202], "defin": [1, 2, 16, 17, 18, 19, 20, 22, 27, 28, 41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125, 143, 144, 145, 183, 195, 199, 200, 201], "number": [1, 3, 7, 11, 12, 13, 14, 17, 19, 21, 22, 23, 24, 25, 30, 32, 35, 36, 37, 41, 42, 43, 44, 45, 55, 63, 64, 70, 78, 89, 90, 95, 96, 98, 99, 101, 105, 106, 110, 111, 112, 113, 116, 117, 118, 127, 136, 137, 153, 155, 158, 159, 162, 163, 164, 165, 184, 185, 186, 194, 195, 201], "befor": [1, 3, 6, 9, 11, 12, 13, 14, 21, 41, 42, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 71, 72, 73, 75, 77, 101, 103, 104, 128, 129, 132, 134, 135, 136, 137, 144, 145, 194, 195, 199, 200, 201], "deliv": [1, 195, 202], "stack": [1, 6, 25, 44, 45, 78, 84, 114, 115, 153, 195, 197, 199, 200, 202], "user": [1, 21, 41, 42, 44, 45, 74, 100, 183, 192, 195, 199, 201, 202], "reset": [1, 3, 11, 12, 13, 14, 41, 42, 43, 44, 45, 52, 55, 58, 63, 67, 71, 73, 76, 77, 78, 79, 84, 120, 167, 170, 172, 175, 177, 180, 194, 195, 197, 202], "whenev": [1, 3, 163], "reach": [1, 11, 12, 13, 14, 41, 42, 44, 45, 201, 202], "done": [1, 3, 6, 11, 12, 13, 18, 21, 41, 42, 43, 44, 45, 52, 64, 70, 71, 78, 84, 89, 130, 131, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 167, 170, 172, 175, 177, 180, 194, 195, 197, 200, 201, 202], "after": [1, 18, 21, 41, 42, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 84, 103, 194, 195, 199, 200, 201], "predifin": 1, "becaus": [1, 6, 73, 94, 100, 112, 113, 194, 195, 197, 200, 201], "potenti": 1, "comput": [1, 3, 11, 13, 19, 21, 23, 25, 41, 42, 44, 45, 58, 64, 67, 73, 74, 75, 76, 77, 86, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 110, 111, 113, 117, 118, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 165, 194, 195, 197, 199], "heavi": 1, "crucial": [1, 194, 195, 201], "configur": [1, 11, 12, 13, 14, 135, 167, 175, 177, 180], "appropri": [1, 6, 11, 12, 13, 14, 39, 40, 183, 186], "paramet": [1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 175, 177, 180, 182, 183, 184, 185, 186, 194, 195, 199, 202], "consider": [1, 3, 194], "whether": [1, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 41, 42, 43, 44, 45, 74, 90, 101, 119, 130, 131, 132, 136, 137, 145, 159, 195, 201], "should": [1, 3, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 38, 41, 42, 43, 44, 45, 58, 64, 67, 73, 74, 75, 76, 77, 78, 80, 84, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 112, 113, 125, 133, 134, 135, 136, 138, 142, 143, 144, 145, 157, 158, 159, 162, 182, 184, 185, 186, 192, 194, 195, 197, 201, 202], "occur": [1, 12, 56, 112, 113, 201], "serial": [1, 3, 21, 41, 42, 44, 45, 78], "optim": [1, 21, 41, 42, 44, 45, 89, 103, 104, 135, 137, 157, 162, 167, 175, 182, 192, 194, 195, 200], "syncdatacollector": [1, 11, 12, 14, 182, 185, 188], "worker": [1, 11, 12, 13, 14, 44, 45, 78, 184, 185, 186, 201, 202], "multisyncdatacollector": [1, 185, 188, 202], "split": [1, 11, 12, 13, 14, 128, 129, 132, 134, 135, 136, 137, 192, 202], "workload": 1, "across": [1, 78, 163, 200], "aggreg": [1, 90, 91, 92, 115, 200], "final": [1, 114, 143, 158, 194, 195, 201], "multiasyncdatacollector": [1, 14, 184, 188, 194, 195, 202], "sever": [1, 21, 41, 42, 44, 45, 56, 74, 135, 201], "batch": [1, 3, 11, 12, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 41, 42, 43, 44, 45, 64, 74, 95, 96, 100, 103, 107, 112, 116, 128, 129, 132, 134, 135, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 161, 162, 163, 184, 185, 186, 192, 194, 195, 197, 199, 201, 202], "gather": [1, 23, 25, 142, 165, 189, 199, 201], "continu": [1, 8, 17, 28, 91, 92, 93, 94, 113, 115, 138, 143, 146, 147, 150, 170, 194, 201], "concomittantli": 1, "impli": [1, 201], "weight": [1, 8, 11, 12, 13, 14, 21, 23, 25, 41, 42, 44, 45, 58, 67, 71, 74, 77, 104, 112, 128, 129, 163, 181, 192, 194, 195, 197, 202], "mai": [1, 3, 4, 6, 11, 12, 13, 14, 21, 41, 42, 44, 45, 74, 78, 101, 192, 194, 201, 202], "slightli": [1, 194, 199, 201], "lag": [1, 11, 12, 13, 14], "therefor": [1, 3, 6, 135, 200, 201], "although": [1, 41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125, 192, 194, 195], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 6, 11, 12, 13, 14, 23, 24, 25, 26, 29, 30, 31, 35, 36, 41, 42, 43, 44, 45, 67, 73, 77, 112, 113, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 159, 162, 163, 192, 194, 195, 197, 199, 201], "asynchron": [1, 8, 12, 21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112, 128, 184], "off": [1, 2, 117, 118, 137, 158, 168, 192, 195, 201], "curriculum": 1, "For": [1, 3, 6, 8, 9, 11, 12, 13, 14, 21, 41, 42, 44, 45, 103, 121, 128, 132, 135, 158, 170, 192, 194, 199, 201], "remot": [1, 29, 44, 45, 201], "necessari": [1, 5, 11, 12, 13, 14, 136, 143, 144, 145, 194], "synchronis": 1, "from": [1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 41, 42, 43, 44, 45, 56, 64, 67, 71, 72, 73, 74, 77, 78, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 97, 101, 102, 103, 108, 109, 112, 113, 114, 115, 117, 118, 119, 121, 122, 129, 130, 131, 134, 135, 136, 137, 142, 143, 144, 145, 153, 159, 162, 164, 165, 167, 170, 172, 175, 177, 178, 180, 182, 183, 186, 189, 192, 194, 195, 197, 199, 200, 201, 202], "either": [1, 21, 41, 42, 44, 45, 170, 192, 200, 201, 202], "update_policy_weights_": [1, 11, 12, 13, 14, 194, 195, 202], "update_at_each_batch": [1, 11, 12, 14, 194], "true": [1, 3, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 41, 42, 43, 44, 45, 46, 47, 56, 58, 63, 64, 67, 70, 71, 72, 74, 77, 78, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 101, 103, 104, 112, 113, 114, 115, 117, 118, 124, 128, 129, 134, 135, 136, 137, 139, 143, 144, 145, 148, 149, 151, 152, 155, 156, 158, 162, 172, 186, 192, 194, 195, 197, 199, 200, 201, 202], "second": [1, 161, 194, 195, 197, 199, 200, 201, 202], "consid": [1, 21, 41, 42, 44, 45, 95, 116, 194, 200], "oper": [1, 3, 6, 11, 12, 14, 21, 41, 42, 44, 45, 73, 86, 87, 88, 112, 121, 128, 129, 130, 131, 132, 134, 135, 142, 143, 144, 145, 162, 170, 172, 177, 180, 192, 194, 195, 197, 199, 201], "instanc": [1, 3, 6, 7, 11, 12, 13, 14, 21, 27, 41, 42, 43, 44, 45, 47, 55, 58, 67, 71, 73, 75, 76, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 110, 111, 113, 114, 115, 125, 158, 165, 167, 168, 169, 170, 172, 175, 177, 180, 182, 184, 185, 192, 195, 199, 200, 201, 202], "cpu": [1, 3, 7, 9, 11, 12, 13, 21, 27, 35, 36, 41, 42, 43, 44, 45, 52, 53, 58, 67, 71, 74, 77, 89, 104, 108, 112, 115, 167, 170, 172, 175, 177, 180, 194, 195, 197, 200, 201, 202], "slower": 1, "than": [1, 7, 11, 12, 13, 14, 94, 101, 112, 163, 189, 194, 195, 199, 200, 201, 202], "one": [1, 3, 6, 10, 11, 12, 13, 14, 20, 22, 23, 24, 25, 26, 29, 30, 31, 38, 39, 40, 41, 42, 44, 45, 58, 63, 67, 73, 74, 75, 76, 77, 78, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 105, 106, 107, 109, 110, 111, 112, 113, 121, 122, 125, 127, 128, 129, 130, 131, 134, 135, 136, 155, 157, 158, 159, 162, 165, 167, 175, 177, 180, 186, 189, 192, 194, 195, 197, 199, 200, 201, 202], "cuda": [1, 3, 6, 21, 41, 42, 44, 45, 58, 66, 67, 71, 74, 77, 112, 154, 194, 195, 200, 201], "multipl": [1, 3, 11, 12, 13, 14, 19, 44, 45, 56, 73, 78, 100, 103, 104, 112, 113, 136, 177, 186, 192, 195, 200, 202], "infer": [1, 44, 45, 78, 103, 137, 194, 199, 200], "dispatch": 1, "avail": [1, 4, 5, 113, 121, 122, 184, 185, 194, 195, 201], "speed": [1, 2, 7, 19, 194, 195], "up": [1, 2, 3, 7, 8, 19, 189, 194, 195, 199, 201], "avoid": [1, 21, 41, 42, 44, 45, 74, 78, 112, 164, 199], "oom": 1, "error": [1, 3, 6, 9, 10, 21, 41, 42, 44, 45, 80, 124, 194, 195, 200, 201], "choic": [1, 2], "size": [1, 3, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 41, 42, 43, 44, 45, 52, 53, 56, 67, 71, 72, 74, 75, 77, 86, 87, 88, 89, 90, 95, 97, 100, 101, 107, 108, 109, 110, 111, 112, 115, 116, 119, 121, 122, 142, 143, 144, 145, 153, 159, 167, 170, 172, 175, 177, 180, 194, 195, 197, 199, 201, 202], "pass": [1, 3, 13, 18, 21, 25, 41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 103, 105, 106, 110, 111, 112, 113, 115, 124, 125, 143, 144, 145, 184, 185, 186, 194, 195, 197, 201], "ie": 1, "store": [1, 11, 12, 13, 14, 18, 21, 25, 31, 35, 36, 37, 41, 42, 44, 45, 78, 89, 100, 167, 170, 172, 175, 177, 180, 192, 194, 195, 200, 201], "while": [1, 3, 6, 21, 41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125, 134, 135, 194, 195, 202], "wait": [1, 195], "also": [1, 2, 3, 7, 21, 25, 41, 42, 44, 45, 74, 111, 114, 115, 128, 130, 131, 143, 192, 194, 195, 197, 199, 200, 201], "impact": 1, "memori": [1, 19, 21, 35, 41, 42, 44, 45, 58, 67, 71, 74, 77, 78, 112, 186, 192, 194, 202], "manag": [1, 140, 141, 158, 194, 199], "kei": [1, 3, 6, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 31, 41, 42, 44, 45, 55, 56, 64, 67, 71, 73, 74, 77, 78, 84, 89, 102, 112, 113, 114, 115, 119, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 142, 143, 144, 145, 157, 158, 161, 162, 165, 167, 175, 177, 180, 192, 194, 195, 197, 199, 201, 202], "which": [1, 3, 6, 10, 11, 12, 13, 14, 18, 19, 21, 22, 31, 41, 42, 44, 45, 55, 56, 63, 64, 67, 73, 74, 86, 87, 88, 112, 113, 115, 117, 118, 128, 129, 132, 134, 135, 136, 137, 139, 143, 153, 157, 167, 170, 172, 175, 177, 180, 192, 194, 195, 197, 199, 200, 201], "passing_devic": [1, 11, 12, 13, 14, 194, 195, 202], "dure": [1, 11, 12, 13, 14, 41, 42, 44, 45, 74, 158, 162, 194, 201], "A": [1, 3, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 67, 71, 73, 74, 76, 78, 79, 80, 84, 89, 90, 101, 104, 113, 114, 115, 121, 125, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 155, 159, 162, 163, 167, 172, 175, 177, 180, 182, 195, 200, 201], "heurist": [1, 16, 17, 18, 19, 20, 22, 27, 28, 194, 201], "usual": [1, 3, 5, 6, 41, 42, 44, 45, 104, 167, 175, 177, 180, 189, 192, 201], "same": [1, 3, 13, 21, 41, 42, 44, 45, 63, 64, 73, 74, 78, 90, 101, 194, 195, 197, 199, 200, 201], "storag": [1, 2, 21, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 41, 42, 44, 45, 159, 188, 192, 194, 195], "default": [1, 3, 9, 11, 12, 13, 14, 18, 19, 21, 22, 25, 30, 35, 36, 41, 42, 44, 45, 46, 55, 56, 61, 63, 64, 67, 70, 71, 72, 74, 77, 78, 84, 85, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 103, 104, 105, 106, 108, 110, 111, 112, 113, 116, 117, 118, 119, 125, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 151, 152, 153, 155, 156, 158, 160, 162, 167, 170, 175, 177, 180, 182, 186, 192, 194, 195, 199, 200, 201, 202], "behaviour": [1, 3, 42, 56, 117, 118, 158, 195], "besid": 1, "those": [1, 6, 44, 45, 64, 113, 114, 115, 163, 184, 185, 194, 195, 201], "choos": [1, 194], "follow": [1, 2, 3, 5, 6, 21, 41, 42, 43, 44, 45, 67, 90, 101, 127, 129, 134, 162, 177, 180, 192, 194, 195, 197, 199, 200, 201, 202], "max_frames_per_traj": [1, 11, 12, 13, 14, 164, 194, 202], "frame": [1, 11, 12, 13, 14, 21, 42, 55, 155, 158, 162, 164, 165, 194, 195, 201, 202], "call": [1, 3, 6, 10, 11, 12, 13, 14, 21, 23, 24, 25, 29, 30, 31, 35, 36, 37, 38, 41, 42, 44, 45, 55, 58, 59, 66, 67, 71, 73, 74, 75, 76, 77, 78, 83, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 103, 105, 106, 110, 111, 112, 113, 115, 125, 142, 158, 159, 192, 194, 195, 199, 200, 201, 202], "frames_per_batch": [1, 11, 12, 13, 14, 164, 194, 195, 202], "each": [1, 3, 6, 11, 12, 13, 14, 15, 20, 21, 23, 25, 41, 42, 44, 45, 71, 78, 115, 121, 122, 148, 149, 151, 152, 158, 184, 185, 194, 195, 199, 201, 202], "init_random_fram": [1, 11, 12, 13, 14, 164, 194, 195], "random": [1, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 27, 28, 33, 41, 42, 43, 44, 45, 63, 64, 71, 112, 113, 136, 158, 165, 194, 195, 201, 202], "rand_step": [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 78, 201, 202], "reset_at_each_it": [1, 11, 12, 13, 14, 194], "split_traj": [1, 11, 12, 13, 14, 194], "pad": [1, 15, 90, 91, 92, 100, 194, 195], "along": [1, 55, 56, 64, 72, 101, 104, 112, 113, 195, 200], "mask": [1, 11, 12, 13, 194, 195, 200, 201], "point": [1, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 32, 39, 40, 41, 42, 44, 45, 55, 58, 67, 71, 72, 74, 77, 102, 112, 127, 132, 162, 189, 197, 201], "boolean": [1, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 42, 146, 147, 148, 149, 150, 151, 152, 192], "repres": [1, 3, 11, 12, 13, 14, 25, 41, 42, 44, 45, 113, 121, 122, 139, 143, 199, 200], "valid": [1, 74, 90, 101, 134, 192, 201], "valu": [1, 3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 41, 42, 44, 45, 54, 56, 63, 64, 67, 69, 71, 72, 73, 74, 77, 78, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103, 104, 107, 108, 109, 112, 113, 116, 117, 118, 119, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 162, 167, 170, 175, 177, 180, 182, 192, 194, 195, 197, 199, 201, 202], "exploration_mod": [1, 11, 13, 158, 188, 194, 195, 199], "explor": [1, 79, 104, 112, 113, 128, 158, 168, 169, 182, 188, 194, 195], "strategi": [1, 192, 194], "reset_when_don": [1, 11, 13], "central": 2, "part": [2, 21, 41, 42, 44, 45, 64, 119, 153, 186, 194, 195, 199, 201], "algorithm": [2, 8, 11, 12, 43, 128, 135, 136, 153, 167, 168, 175, 192, 194, 195, 200, 202], "wide": [2, 3], "we": [2, 3, 4, 6, 8, 18, 21, 41, 42, 44, 45, 67, 78, 89, 100, 189, 192, 194, 195, 197, 199, 200, 201, 202], "veri": [2, 3, 194, 195, 201, 202], "influenti": 2, "latenc": 2, "especi": [2, 3, 6, 7, 56], "distribut": [2, 3, 8, 9, 23, 25, 64, 89, 95, 96, 97, 98, 107, 110, 111, 113, 114, 116, 117, 118, 121, 129, 132, 134, 135, 188, 192, 194, 195, 199, 201, 202], "larger": 2, "volum": 2, "lazymemmapstorag": [2, 188, 194, 195], "advis": [2, 201], "share": [2, 35, 36, 37, 38, 44, 45, 78, 86, 87, 88, 186, 197, 199, 201, 202], "due": [2, 3, 201], "lower": [2, 11, 12, 13, 14, 17, 78, 110, 111, 200], "serialis": 2, "memmaptensor": 2, "well": [2, 3, 11, 12, 14, 21, 38, 41, 42, 44, 45, 110, 111, 194, 195, 199, 200, 201, 202], "abil": 2, "specifi": [2, 10, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 75, 89, 112, 113, 194, 199], "file": [2, 5, 6, 192, 195, 198, 199, 202], "locat": [2, 6, 42, 64, 70, 117, 118, 200], "node": [2, 167, 170, 172, 175, 177, 180], "failur": 2, "recoveri": 2, "mean": [2, 3, 6, 13, 64, 78, 89, 95, 98, 100, 113, 116, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 194, 195, 201, 202], "liststorag": [2, 23, 24, 25, 30, 159, 188], "were": [2, 6, 44, 45, 194], "found": [2, 5, 6, 9, 18, 21, 25, 41, 42, 44, 45, 78, 113, 130, 135, 194, 195, 199], "rough": 2, "benchmark": [2, 8], "http": [2, 5, 6, 9, 23, 32, 55, 67, 91, 92, 93, 94, 98, 99, 104, 105, 106, 110, 111, 121, 128, 132, 133, 135, 136, 137, 138, 143, 146, 147, 150, 167, 170, 175, 177, 180, 202], "com": [2, 5, 6, 9, 202], "tree": 2, "type": [2, 21, 27, 41, 42, 43, 44, 45, 58, 67, 71, 74, 77, 78, 90, 101, 104, 112, 113, 123, 167, 170, 172, 175, 177, 180, 184, 194, 195, 200, 201], "1x": 2, "lazytensorstorag": [2, 188], "83x": 2, "3": [2, 3, 5, 6, 9, 11, 12, 13, 18, 19, 20, 21, 22, 41, 42, 44, 45, 55, 58, 61, 64, 67, 71, 72, 74, 77, 85, 86, 87, 88, 89, 90, 91, 92, 97, 99, 100, 101, 108, 112, 115, 119, 121, 124, 143, 144, 145, 148, 149, 151, 152, 161, 172, 192, 194, 195, 197, 200, 201, 202], "44x": 2, "parent": [2, 3, 27, 41, 56, 64, 67, 73, 86, 135, 195, 200, 201, 202], "subclass": [2, 3, 41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 80, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 105, 106, 109, 110, 111, 112, 113, 114, 125, 135, 194], "basic": [2, 43, 201], "properti": [2, 41, 42, 43, 44, 45, 74, 95, 103, 107, 116, 117, 118, 199, 200], "action": [2, 3, 8, 11, 12, 13, 19, 22, 27, 41, 42, 43, 44, 45, 52, 59, 63, 74, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 101, 102, 108, 109, 111, 113, 116, 117, 119, 121, 122, 131, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 167, 170, 172, 175, 177, 180, 182, 186, 192, 194, 195, 197, 199, 200, 201, 202], "shape": [2, 3, 16, 17, 18, 19, 20, 22, 27, 28, 41, 42, 44, 45, 56, 72, 95, 96, 101, 103, 107, 108, 112, 115, 116, 139, 153, 162, 182, 194, 195, 197, 199, 200, 201, 202], "dtype": [2, 3, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 32, 41, 42, 43, 44, 45, 52, 53, 58, 59, 64, 67, 71, 72, 74, 77, 86, 87, 88, 89, 97, 103, 104, 108, 109, 112, 115, 119, 121, 122, 143, 144, 145, 167, 170, 172, 175, 177, 180, 194, 195, 197, 199, 200, 201, 202], "domain": [2, 16, 17, 18, 19, 20, 22, 27, 28, 71, 112, 113, 114, 115, 188, 201, 202], "offer": [3, 6, 201], "handl": [3, 21, 41, 42, 44, 45, 78, 101, 162, 184, 185], "differ": [3, 11, 12, 13, 14, 21, 41, 42, 44, 45, 74, 101, 121, 122, 135, 139, 143, 144, 158, 162, 163, 184, 185, 192, 194, 195, 197, 200, 201], "backend": [3, 6, 192, 194], "dm": [3, 201], "custom": [3, 21, 41, 42, 44, 45, 186], "goal": [3, 194, 195], "abl": [3, 197, 200, 202], "even": [3, 7, 12, 35, 36, 37, 38, 194, 200, 201], "simul": [3, 6, 53, 89, 194], "some": [3, 6, 7, 8, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 67, 91, 113, 114, 115, 153, 164, 192, 194, 195, 199, 201, 202], "box": [3, 16, 17, 18, 19, 20, 22, 27, 28], "wrapper": [3, 14, 25, 26, 31, 43, 46, 47, 48, 49, 50, 51, 52, 113, 143, 186, 194, 201], "under": [3, 21, 41, 42, 44, 45, 112, 113, 194, 201], "lib": [3, 5, 6, 8, 9, 11, 12, 13, 46, 47, 48, 49, 50, 51, 52, 64, 71, 78, 167, 170, 172, 175, 177, 180, 182, 194, 195, 197, 201, 202], "hope": 3, "imit": 3, "other": [3, 6, 21, 35, 36, 37, 38, 41, 42, 43, 44, 45, 78, 104, 113, 128, 129, 132, 134, 135, 136, 137, 167, 175, 177, 180, 184, 185, 192, 194, 195, 199, 201, 202], "envbas": [3, 11, 12, 13, 14, 42, 44, 45, 63, 73, 74, 78, 80, 89, 102, 158, 165, 167, 168, 169, 170, 172, 175, 177, 180, 182, 184, 185, 186, 188], "torch": [3, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 32, 35, 36, 41, 42, 43, 44, 45, 52, 56, 58, 59, 64, 67, 70, 71, 72, 74, 77, 78, 84, 85, 86, 87, 88, 89, 90, 95, 97, 98, 100, 101, 103, 104, 107, 108, 109, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 130, 143, 144, 145, 153, 161, 167, 170, 172, 175, 177, 180, 182, 192, 194, 195, 197, 199, 200, 201, 202], "nn": [3, 11, 12, 13, 21, 41, 42, 43, 44, 45, 58, 67, 71, 74, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 124, 128, 131, 132, 143, 144, 145, 177, 180, 182, 194, 195, 197, 199, 202], "typic": [3, 21, 41, 42, 44, 45, 192], "method": [3, 11, 12, 13, 14, 21, 25, 29, 35, 36, 37, 38, 41, 42, 44, 45, 55, 58, 64, 67, 68, 71, 74, 77, 86, 87, 88, 89, 100, 112, 113, 114, 123, 128, 183, 192, 193, 194, 199, 200, 201], "organis": 3, "allow": [3, 11, 12, 13, 14, 21, 22, 41, 42, 44, 45, 84, 101, 139, 192, 194, 199, 200, 201], "gener": [3, 6, 13, 30, 34, 43, 64, 85, 95, 107, 108, 113, 119, 136, 143, 146, 147, 150, 162, 194, 195, 196, 197, 199, 200, 201, 202], "arbitrari": [3, 22, 44, 45, 194, 195], "input": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 41, 42, 43, 44, 45, 56, 58, 59, 67, 73, 75, 77, 84, 90, 91, 92, 93, 94, 100, 101, 103, 104, 110, 111, 112, 113, 114, 115, 127, 128, 129, 132, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 164, 182, 192, 195, 200, 201, 202], "output": [3, 11, 12, 13, 14, 21, 23, 24, 25, 30, 41, 42, 43, 44, 45, 67, 73, 77, 86, 90, 91, 92, 96, 98, 100, 101, 112, 113, 114, 115, 121, 122, 128, 129, 132, 134, 135, 136, 137, 143, 153, 159, 194, 197, 200, 201, 202], "nest": [3, 18, 21, 41, 42, 44, 45, 143, 144, 145, 192, 195, 200, 202], "attribut": [3, 21, 41, 42, 44, 45, 67, 113, 195, 199], "batch_siz": [3, 11, 12, 13, 18, 23, 24, 26, 29, 30, 31, 41, 43, 52, 53, 71, 86, 87, 88, 89, 97, 108, 109, 112, 115, 119, 121, 122, 153, 159, 167, 170, 172, 175, 177, 180, 194, 195, 197, 199, 200, 201, 202], "togeth": [3, 11, 12, 13, 14, 86, 87, 88, 199], "expect": [3, 6, 18, 21, 27, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 71, 72, 73, 75, 77, 80, 112, 115, 128, 129, 134, 135, 165, 189, 192, 194, 201], "live": [3, 11, 12, 13, 14, 21, 23, 24, 25, 26, 29, 30, 31, 41, 42, 43, 44, 45, 159], "doe": [3, 23, 25, 32, 38, 103, 114, 115, 129, 134, 135, 142, 162, 192, 194, 200, 201], "actual": [3, 6, 11, 12, 14, 41, 42, 44, 45, 164, 194, 195], "respons": [3, 162, 199, 201], "just": [3, 153, 192, 195, 199, 200, 201, 202], "retriev": [3, 29, 30, 31, 41, 42, 44, 45, 56, 64, 84, 89, 113, 129, 134, 135, 143, 144, 145, 167, 170, 172, 175, 177, 180, 186, 192, 200, 201], "care": [3, 41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125, 194, 195], "map": [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 35, 41, 42, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 86, 87, 88, 112, 113, 115, 121, 159, 188, 194, 195, 199, 200], "desir": [3, 21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 83, 90, 101, 112, 113, 194, 195, 200], "see": [3, 5, 6, 7, 8, 11, 12, 13, 14, 21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 79, 90, 101, 103, 112, 113, 117, 118, 194, 195, 199, 200, 201], "below": [3, 6, 11, 12, 13, 14, 21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 90, 101, 112, 117, 118, 187, 196], "parametr": [3, 104, 113, 137, 194, 199], "hardwar": 3, "observation_spec": [3, 41, 43, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 71, 72, 73, 74, 75, 77, 89, 165, 182, 194, 197, 201], "compositespec": [3, 41, 43, 71, 85, 89, 108, 115, 188, 194, 201], "all": [3, 11, 12, 13, 14, 21, 41, 42, 43, 44, 45, 58, 60, 64, 67, 71, 73, 74, 75, 76, 77, 78, 82, 83, 84, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 112, 113, 115, 125, 157, 162, 164, 184, 185, 186, 189, 192, 194, 195, 196, 197, 199, 200, 201, 202], "spec": [3, 16, 17, 18, 19, 20, 22, 27, 28, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 80, 85, 86, 87, 88, 97, 108, 109, 111, 112, 113, 115, 121, 122, 167, 170, 172, 175, 177, 180, 194, 195, 197, 202], "pair": [3, 21, 25, 41, 42, 44, 45, 86, 113, 194, 195, 197, 200, 201], "input_spec": [3, 41, 43, 44, 45, 58, 59, 67, 73, 74, 75, 77, 89, 201], "action_spec": [3, 41, 42, 43, 44, 45, 52, 74, 85, 87, 97, 108, 109, 111, 121, 122, 182, 194, 195, 197, 201, 202], "tensorspec": [3, 16, 17, 18, 19, 20, 22, 28, 41, 43, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 85, 108, 111, 112, 113, 114, 188], "reward_spec": [3, 41, 43, 54, 58, 59, 67, 69, 70, 73, 74, 75, 77, 89, 201], "reward": [3, 11, 12, 13, 21, 27, 41, 42, 43, 44, 45, 52, 54, 58, 59, 67, 69, 70, 73, 74, 75, 76, 77, 78, 84, 89, 130, 131, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 160, 186, 192, 194, 195, 197, 200, 201, 202], "importantli": [3, 113], "4": [3, 6, 11, 12, 13, 19, 22, 43, 46, 47, 48, 51, 55, 78, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 108, 109, 112, 115, 119, 121, 122, 124, 194, 195, 200, 201, 202], "action_s": 3, "simpli": [3, 5, 194, 195, 201], "With": [3, 192, 200, 201], "necessarili": 3, "requir": [3, 6, 13, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 41, 42, 44, 45, 58, 67, 71, 74, 77, 101, 112, 114, 115, 128, 129, 132, 134, 135, 136, 137, 192, 194, 195, 199, 201], "stateless": [3, 44, 45, 73, 201], "set_se": [3, 11, 12, 13, 14, 41, 42, 43, 44, 45, 52, 64, 74, 194, 201, 202], "integ": [3, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 38, 41, 42, 44, 45, 64, 90, 101, 159], "seed": [3, 11, 12, 13, 14, 41, 42, 43, 44, 45, 46, 74, 162, 194], "next": [3, 11, 12, 13, 18, 21, 23, 24, 25, 30, 41, 42, 43, 44, 45, 52, 78, 84, 111, 136, 142, 143, 144, 145, 159, 194, 195, 197, 201, 202], "determinist": [3, 21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 85, 98, 105, 111, 112, 113, 194, 195, 201], "preced": [3, 100, 199], "without": [3, 6, 8, 21, 41, 42, 44, 45, 87, 136, 142, 182, 189, 194, 195, 201], "risk": 3, "overlap": 3, "consecut": [3, 195, 201], "still": [3, 8, 134, 194, 195, 197, 201], "reproduc": 3, "max_step": [3, 41, 42, 43, 44, 45, 84, 194, 195, 201, 202], "maximum": [3, 11, 12, 13, 14, 17, 21, 23, 24, 25, 35, 36, 37, 41, 42, 44, 45, 69, 108, 116, 117, 118, 137, 159, 194, 195, 201], "safemodul": [3, 43, 53, 86, 87, 88, 89, 102, 108, 113, 115, 123, 124, 128, 129, 130, 134, 135, 136, 137, 142, 143, 144, 145, 158, 168, 169, 182, 188, 202], "ani": [3, 18, 21, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 67, 74, 78, 80, 90, 101, 104, 112, 113, 114, 115, 135, 159, 162, 189, 194, 195, 201], "compat": [3, 4, 6, 10, 21, 38, 41, 42, 44, 45, 50, 78, 123, 139, 195, 202], "better": [3, 195], "intens": [3, 7], "gym3": 3, "envpool": 3, "interfac": [3, 101, 103, 199], "simultan": [3, 44, 45], "often": [3, 133, 162, 201], "competit": 3, "advantag": [3, 99, 128, 129, 134, 135, 143, 144, 145, 146, 147, 148, 150, 151, 192, 194, 195, 201], "scale": [3, 64, 70, 86, 87, 88, 98, 108, 110, 111, 113, 115, 117, 118, 160, 165, 167, 175, 177, 180, 186, 194, 195, 199, 202], "varieti": 3, "its": [3, 6, 11, 12, 13, 14, 21, 25, 41, 42, 43, 44, 45, 55, 73, 74, 78, 90, 97, 113, 128, 129, 132, 134, 135, 136, 137, 162, 182, 192, 194, 195, 199, 201], "own": [3, 11, 12, 14, 21, 41, 42, 44, 45, 195, 199], "parallelenv": [3, 11, 12, 13, 14, 45, 183, 188, 194, 195, 197, 201, 202], "As": [3, 41, 42, 44, 45, 113, 194, 195, 201, 202], "inherit": [3, 102, 192, 199, 200], "enjoi": 3, "exact": 3, "Of": [3, 6, 189, 201], "cours": [3, 189, 201], "correspond": [3, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 32, 41, 42, 43, 44, 45, 71, 74, 78, 113, 195], "count": [3, 158, 164, 201], "def": [3, 10, 21, 41, 42, 43, 44, 45, 89, 119, 121, 124, 192, 194, 195, 197, 199, 200, 201, 202], "make_env": [3, 78, 84, 168, 169, 194, 195, 201], "gymenv": [3, 11, 12, 13, 14, 50, 58, 64, 71, 74, 78, 167, 170, 172, 175, 177, 180, 182, 188, 194, 195, 201, 202], "pendulum": [3, 11, 12, 13, 14, 48, 49, 58, 64, 71, 74, 78, 182, 195, 201, 202], "v1": [3, 11, 12, 13, 64, 71, 139, 148, 149, 151, 152, 195, 201, 202], "from_pixel": [3, 46, 47, 167, 175, 177, 180, 194, 195, 201, 202], "9": [3, 6, 21, 78, 194, 195, 200], "81": 3, "0": [3, 5, 6, 9, 10, 20, 21, 22, 23, 25, 32, 41, 42, 43, 44, 45, 52, 54, 56, 58, 61, 63, 64, 67, 71, 72, 74, 77, 78, 84, 89, 90, 91, 92, 94, 98, 101, 103, 104, 110, 111, 112, 115, 116, 117, 118, 125, 128, 129, 134, 135, 136, 137, 138, 142, 143, 144, 145, 153, 160, 162, 182, 186, 192, 194, 195, 197, 198, 199, 200, 201, 202], "print": [3, 5, 6, 11, 12, 13, 18, 19, 21, 22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 56, 59, 64, 71, 72, 78, 84, 85, 86, 87, 88, 90, 97, 101, 109, 112, 115, 119, 121, 122, 124, 167, 170, 172, 175, 177, 180, 182, 192, 194, 195, 197, 199, 200, 201, 202], "b": [3, 6, 15, 18, 103, 104, 143, 144, 145, 199, 200], "c": [3, 5, 6, 18, 167, 170, 172, 175, 177, 180, 200], "d": [3, 23, 32, 113, 200, 202], "get": [3, 5, 6, 38, 44, 45, 56, 59, 64, 72, 78, 85, 113, 146, 147, 150, 194, 195, 199, 201, 202], "forc": [3, 5, 6, 195], "variou": [3, 11, 12, 13, 14, 128, 129, 132, 134, 135, 136, 137, 184, 185, 194, 195, 201], "reset_work": 3, "fals": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 43, 44, 45, 46, 49, 52, 56, 58, 63, 64, 67, 70, 71, 72, 74, 77, 78, 86, 87, 88, 89, 90, 91, 97, 101, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 124, 130, 131, 132, 136, 137, 139, 143, 144, 145, 148, 149, 151, 152, 155, 156, 158, 159, 160, 162, 167, 170, 172, 175, 177, 180, 186, 192, 194, 195, 197, 199, 200, 201, 202], "field": [3, 11, 12, 13, 14, 18, 21, 41, 42, 43, 44, 45, 52, 71, 74, 86, 87, 88, 89, 97, 108, 109, 112, 115, 119, 121, 122, 165, 167, 170, 172, 175, 177, 180, 189, 195, 197, 199, 200, 201, 202], "bool": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 43, 44, 45, 46, 47, 52, 56, 63, 64, 67, 70, 71, 72, 74, 77, 78, 84, 89, 90, 91, 92, 101, 103, 104, 112, 113, 114, 115, 117, 118, 123, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 143, 144, 145, 148, 149, 151, 152, 155, 156, 158, 159, 160, 162, 167, 170, 172, 175, 177, 180, 186, 195, 197, 201, 202], "500": [3, 162, 194, 195, 201, 202], "uint8": [3, 72, 195, 201, 202], "none": [3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 112, 113, 115, 119, 121, 122, 123, 142, 143, 144, 145, 148, 149, 151, 152, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 175, 177, 180, 182, 184, 185, 186, 192, 194, 195, 199, 200, 201, 202], "is_shar": [3, 11, 12, 13, 18, 43, 52, 71, 78, 86, 87, 88, 89, 97, 108, 109, 112, 115, 119, 121, 122, 167, 170, 172, 175, 177, 180, 195, 197, 199, 200, 201, 202], "note": [3, 11, 12, 13, 14, 21, 41, 42, 44, 45, 78, 113, 194, 195, 197, 199, 200, 201], "launch": 3, "quit": [3, 194, 195, 201], "mani": [3, 129, 134, 135, 136, 195, 200, 201], "import": [3, 5, 6, 9, 11, 12, 13, 23, 25, 32, 42, 43, 44, 45, 64, 71, 78, 85, 86, 87, 88, 89, 97, 101, 108, 109, 112, 115, 119, 121, 122, 129, 143, 144, 145, 155, 158, 167, 170, 172, 175, 177, 180, 182, 194, 195, 197, 199, 200, 201, 202], "start": [3, 11, 84, 157, 194, 195, 201], "bottleneck": 3, "why": [3, 194, 201], "so": [3, 5, 6, 9, 21, 41, 42, 44, 45, 78, 114, 115, 194, 201], "slow": 3, "onc": [3, 6, 11, 12, 13, 14, 21, 41, 42, 44, 45, 74, 192, 194, 195, 201], "great": [3, 6, 7, 200, 202], "speedup": [3, 201], "anoth": [3, 41, 42, 44, 45, 73, 101, 128, 129, 132, 134, 135, 136, 137, 194, 197, 200, 201], "thing": [3, 6, 195, 201], "creat": [3, 5, 6, 9, 11, 12, 14, 21, 30, 41, 42, 44, 45, 67, 73, 74, 78, 84, 90, 91, 92, 93, 94, 99, 101, 102, 113, 131, 132, 136, 165, 168, 169, 182, 184, 185, 194, 195, 199, 200, 201, 202], "misspecifi": 3, "caus": [3, 6], "breakag": 3, "prealloc": 3, "In": [3, 6, 9, 10, 11, 12, 14, 21, 41, 42, 44, 45, 58, 67, 71, 73, 74, 77, 101, 111, 112, 115, 117, 118, 127, 163, 184, 185, 186, 194, 195, 197, 200, 201, 202], "obj": [3, 112, 113, 114], "check_env_spec": [3, 188], "rais": [3, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 60, 74, 80, 124, 194, 202], "assert": [3, 5, 16, 17, 18, 19, 20, 22, 27, 28, 42, 78, 80, 84, 143, 144, 145, 153, 161, 194, 195, 197, 199, 200, 201], "mismatch": [3, 200], "serialenv": [3, 188, 201], "mostli": [3, 14, 201], "purpos": [3, 6, 182, 200, 201], "want": [3, 5, 6, 194, 200, 201, 202], "assess": [3, 194], "subprocess": 3, "case": [3, 6, 10, 11, 12, 13, 14, 18, 23, 25, 32, 41, 42, 44, 45, 74, 101, 112, 113, 115, 127, 153, 163, 184, 185, 186, 192, 194, 199, 200, 201, 202], "raw": [3, 117, 118], "must": [3, 6, 11, 12, 13, 14, 18, 21, 35, 36, 37, 38, 41, 42, 44, 45, 64, 71, 74, 90, 101, 112, 113, 121, 122, 146, 147, 148, 149, 150, 151, 152, 153, 158, 162, 163, 167, 170, 172, 175, 177, 180, 194, 195, 197, 199, 200, 202], "treat": 3, "To": [3, 5, 6, 21, 30, 41, 42, 44, 45, 78, 86, 87, 88, 162, 194, 195, 199, 201, 202], "logic": 3, "torchvis": [3, 201, 202], "transformedenv": [3, 58, 63, 64, 71, 73, 78, 167, 170, 172, 175, 177, 180, 188, 194, 195, 197, 201, 202], "primit": [3, 194, 195], "compos": [3, 21, 30, 33, 34, 39, 41, 42, 44, 45, 73, 74, 78, 167, 170, 172, 175, 177, 180, 188, 195, 197, 201, 202], "built": [3, 6, 178, 182, 183, 186, 201], "base_env": [3, 71, 194, 195, 201, 202], "totensorimag": [3, 172, 188, 195, 201, 202], "in_kei": [3, 11, 12, 13, 43, 54, 55, 56, 57, 59, 61, 62, 64, 65, 67, 68, 69, 70, 72, 73, 77, 78, 85, 86, 87, 88, 89, 108, 112, 113, 115, 119, 123, 124, 130, 131, 143, 144, 145, 177, 180, 182, 194, 195, 197, 199, 201, 202], "resiz": [3, 188, 195, 201], "64": [3, 91, 92, 99, 194, 195, 197, 201, 202], "By": [3, 22, 42, 44, 45, 113, 158, 186, 200, 201], "now": [3, 6, 194, 197, 199, 200, 201], "appar": [3, 155], "bring": [3, 201], "signific": [3, 201], "kind": [3, 27, 84], "consult": 3, "achiev": [3, 21, 41, 42, 44, 45, 192, 199, 200, 201], "interest": [3, 44, 45, 113, 201], "abov": [3, 6, 21, 41, 42, 44, 45, 117, 118, 127, 192, 194, 195, 201], "resize_par": 3, "sinc": [3, 6, 21, 41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125, 194, 195, 201, 202], "out_kei": [3, 11, 12, 13, 43, 44, 45, 54, 56, 61, 65, 67, 68, 69, 72, 73, 77, 85, 86, 87, 88, 89, 108, 112, 113, 115, 119, 121, 122, 123, 124, 143, 144, 145, 158, 182, 194, 197, 199, 201, 202], "keyword": [3, 21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112, 113, 183, 194, 199, 201], "easi": [3, 195, 200, 201], "root": [3, 117, 118, 201], "graph": [3, 140, 141], "inv": 3, "appli": [3, 21, 29, 30, 31, 41, 42, 44, 45, 74, 117, 143, 157, 192, 194, 195, 199, 201, 202], "revers": 3, "order": [3, 13, 21, 22, 29, 30, 31, 41, 42, 44, 45, 74, 112, 114, 115, 199], "chain": [3, 30, 58, 90, 115, 201], "taken": [3, 41, 42, 44, 45, 195], "includ": [3, 6, 8, 21, 35, 36, 37, 38, 41, 42, 43, 44, 45, 74, 78, 164, 192, 194, 195, 200, 201], "invers": [3, 126], "through": [3, 13, 44, 45, 101, 113, 114, 115, 125, 194, 195, 197, 199, 201], "in_keys_inv": [3, 59, 73, 194, 197, 201], "append_transform": [3, 29, 30, 31, 67, 71, 194, 201, 202], "doubletofloat": [3, 167, 170, 175, 177, 180, 188, 194, 197], "float32": [3, 11, 12, 13, 18, 23, 27, 32, 43, 52, 59, 64, 71, 72, 86, 87, 88, 89, 97, 108, 109, 112, 115, 119, 121, 122, 167, 170, 172, 175, 177, 180, 195, 197, 199, 200, 201, 202], "float64": [3, 21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112, 197, 201], "torchrl": [4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 196, 197, 198, 199, 200], "against": [4, 6, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 80, 112, 113], "latest": [4, 9, 202], "guarante": [4, 21, 35, 36, 37, 38, 41, 42, 44, 45, 78, 202], "wa": [4, 6, 41, 42, 44, 45, 74, 133, 138, 194, 195, 197, 202], "releas": [4, 6, 9, 21, 41, 42, 44, 45, 74, 202], "howev": [4, 6, 21, 41, 42, 44, 45, 74, 194, 195, 200, 201], "project": [4, 16, 17, 18, 19, 20, 22, 27, 28, 112, 113, 195, 201, 202], "willing": 4, "keep": [4, 6, 12, 67, 77, 78, 155, 162, 195, 200, 201, 202], "backward": [4, 21, 41, 42, 44, 45, 78, 194, 195, 200], "older": [4, 6], "If": [4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 41, 42, 43, 44, 45, 56, 57, 63, 67, 73, 74, 77, 78, 90, 100, 101, 112, 113, 114, 115, 124, 125, 127, 142, 143, 144, 145, 151, 152, 157, 159, 162, 163, 165, 167, 175, 177, 180, 182, 186, 189, 194, 195, 197, 199, 200, 201, 202], "you": [4, 5, 6, 7, 9, 21, 41, 42, 44, 45, 78, 189, 194, 195, 197, 200, 201, 202], "feel": [4, 189, 202], "free": [4, 6, 128, 135, 192, 202], "gladli": 4, "instruct": [5, 9], "prepar": 5, "conda": [5, 6, 189], "assum": [5, 18, 22, 31, 42, 44, 45, 67, 71, 77, 100, 148, 149, 151, 152, 194, 195, 197], "let": [5, 6, 21, 41, 42, 44, 45, 158, 194, 195, 197, 199, 200, 201, 202], "n": [5, 6, 16, 19, 21, 22, 41, 42, 44, 45, 55, 113, 128, 142, 192, 194, 195, 200, 201], "7": [5, 9, 19, 22, 89, 90, 100, 101, 194, 195, 202], "cmake": 5, "14": [5, 10, 64], "activ": [5, 6, 8, 90, 98, 101, 135, 202], "sim": 5, "bullet": 5, "physic": [5, 6, 192, 194], "headless": [5, 6], "mode": [5, 13, 21, 41, 42, 44, 45, 74, 78, 81, 83, 95, 107, 113, 116, 117, 118, 158, 194, 195, 201, 202], "cluster": [5, 6, 189], "withbullet": 5, "forg": [5, 6], "aihabitat": 5, "nightli": 5, "y": [5, 6, 100, 124], "git": [5, 6, 9], "facebookresearch": 5, "subdirectori": 5, "reduc": [5, 19], "verbos": 5, "export": 5, "magnum_log": 5, "quiet": 5, "habitat_sim_log": 5, "remov": [5, 21, 41, 42, 44, 45, 194, 201], "command": [5, 6, 9, 201], "more": [5, 7, 11, 12, 13, 14, 21, 23, 24, 25, 26, 29, 30, 31, 41, 42, 44, 45, 79, 101, 103, 112, 121, 128, 132, 135, 143, 146, 147, 150, 157, 159, 170, 189, 192, 194, 195, 197, 199, 200, 201, 202], "detail": [5, 6, 21, 41, 42, 44, 45, 74, 121, 128, 132, 135, 170, 189, 197, 199, 200], "readm": [5, 6], "md": [5, 6], "habitatenv": [5, 188], "_has_habitat": 5, "check": [5, 6, 10, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 43, 44, 45, 56, 60, 80, 112, 113, 123, 194, 195, 197, 201], "_env": [5, 201], "available_env": [5, 46, 47, 48, 49, 51, 52, 201], "startswith": 5, "importerror": [5, 6, 9], "usr": [5, 6, 9], "x86_64": [5, 6], "linux": [5, 6], "gnu": [5, 6], "libopengl": [5, 6], "undefin": [5, 6, 9, 21, 41, 42, 44, 45, 74], "symbol": [5, 6, 9], "_glapi_tls_curr": [5, 6], "solut": [5, 6, 8, 189, 192, 202], "debug": [5, 201], "link": [5, 6], "right": [5, 6, 100, 194, 195, 201], "replac": [5, 6, 21, 195], "path": [5, 6, 21, 35, 41, 42, 44, 45, 67, 77, 162, 192], "mujoco_env": [5, 6], "proper": [5, 6], "name": [5, 6, 10, 21, 41, 42, 44, 45, 46, 74, 128, 129, 132, 134, 135, 136, 137, 156, 157, 167, 170, 172, 175, 177, 180, 192, 194, 195, 199, 201], "libglvnd": [5, 6], "glx": [5, 6], "cos7": [5, 6], "reinstal": [5, 6], "xvfbwrapper": [5, 6], "config": [5, 6, 165, 167, 168, 169, 170, 172, 175, 177, 178, 180, 183], "var": [5, 6, 21, 41, 42, 44, 45, 74], "ld_preload": [5, 6], "sysroot": [5, 6], "lib64": [5, 6], "libgldispatch": [5, 6], "offici": 6, "repositori": 6, "stand": [6, 86, 87, 88, 197, 201], "joint": [6, 195], "dynam": 6, "contact": 6, "engin": 6, "facilit": [6, 25, 66, 67, 77, 86, 87, 88, 194], "develop": [6, 202], "robot": [6, 67, 77], "biomechan": 6, "graphic": 6, "anim": 6, "machin": [6, 21], "area": 6, "demand": [6, 201], "fast": [6, 8, 136, 194, 195], "accur": [6, 194], "articul": 6, "interact": [6, 13, 113, 201], "recent": [6, 195, 199, 201, 202], "acquir": [6, 194], "access": [6, 21, 41, 42, 44, 45, 67, 186, 189, 200], "whomev": 6, "licenc": 6, "incorpor": [6, 194], "make": [6, 21, 38, 41, 42, 44, 45, 49, 52, 64, 67, 80, 84, 103, 113, 135, 169, 186, 194, 195, 197, 199, 200, 201, 202], "relianc": 6, "obsolet": 6, "seri": [6, 22, 39, 40, 45, 63, 73, 201], "legaci": 6, "document": [6, 21, 41, 42, 44, 45, 74, 202], "capabl": [6, 192, 194, 197, 201], "glfw": 6, "osmesa": 6, "egl": 6, "hand": [6, 194], "gpu": [6, 7, 21, 41, 42, 44, 45, 201], "our": [6, 194, 195, 197, 199, 200, 202], "advic": [6, 201], "sudo": [6, 189], "enabl": [6, 158], "apt": 6, "libglfw3": 6, "libglew2": 6, "libgl1": 6, "mesa": 6, "libosmesa6": 6, "via": [6, 44, 73, 77, 130, 192, 194, 201], "awar": [6, 35, 36, 37, 38], "fact": [6, 195, 201], "indent": 6, "workflow": [6, 86, 87, 88], "glew": 6, "mesalib": 6, "anaconda": 6, "libgl": 6, "cos6": 6, "menpo": 6, "glfw3": 6, "both": [6, 21, 41, 42, 44, 45, 74, 86, 87, 88, 90, 101, 158, 194, 199, 201], "tell": 6, "variabl": [6, 19, 22, 86, 87, 88, 136, 192, 199], "mujoco_gl": 6, "pyopengl_platform": 6, "deactiv": 6, "pre": [6, 21, 36, 41, 42, 44, 45, 67, 77, 201], "binari": [6, 16, 22, 54, 121, 122], "need": [6, 9, 21, 38, 41, 42, 44, 45, 58, 67, 73, 74, 75, 76, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 103, 105, 106, 110, 111, 112, 125, 127, 136, 142, 162, 186, 194, 199, 200, 201, 202], "These": [6, 201], "instead": [6, 19, 21, 41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125, 186, 194, 195, 199, 201], "refer": [6, 21, 41, 42, 44, 45, 74, 78, 89, 98, 105, 106, 110, 111, 121, 128, 132, 135, 143, 146, 147, 150, 170, 195, 199, 202], "setup": 6, "mkdir": 6, "cd": 6, "here": [6, 8, 9, 194, 195, 197, 199, 200, 201, 202], "tag": [6, 186], "earlier": [6, 11, 12, 13, 14, 194], "roboti": 6, "u": [6, 9, 194, 199, 201, 202], "download": [6, 9, 67, 77, 194, 195, 196, 197, 199, 200, 201, 202], "html": 6, "wget": 6, "mujoco210": 6, "tar": 6, "gz": 6, "xf": 6, "charg": 6, "obtain": [6, 42, 89, 194, 195], "mjkei": 6, "txt": 6, "mjlib_path": 6, "home": 6, "bin": 6, "libmujoco210": 6, "ld_library_path": 6, "mujoco_py_mujoco_path": 6, "too": [6, 117, 118, 128, 129, 132, 134, 135, 136, 137, 143, 144, 145, 194, 195, 201], "mujoco_py_mjkey_path": 6, "reload": 6, "recommend": [6, 200], "hard": [6, 133, 195, 201], "chang": [6, 21, 35, 36, 37, 38, 41, 42, 44, 45, 74, 78, 194, 200, 201], "later": [6, 94, 113, 194, 195], "known": [6, 7, 194], "try": [6, 124, 195, 200, 201, 202], "nativ": [6, 8, 41, 42, 44, 45, 55, 199], "usag": [6, 137], "local": [6, 9, 13, 21, 29, 41, 42, 44, 45, 74], "modifi": [6, 21, 41, 42, 44, 45, 58, 67, 71, 73, 74, 77, 112, 164, 167, 175, 177, 180, 194, 199], "nvidia": 6, "driver": 6, "hack": 6, "line": [6, 21, 41, 42, 44, 45, 195, 199, 202], "adatp": 6, "script": [6, 167, 170, 172, 175, 177, 180, 182, 186, 192, 194, 195, 197, 199, 200, 201, 202], "go": [6, 199, 201], "unnot": 6, "until": 6, "complet": [6, 8, 42, 189, 195, 197], "mujoco_pi": 6, "trigger": 6, "pipelin": 6, "give": [6, 43, 189, 194, 195, 202], "troubleshoot": 6, "gl": 6, "h": [6, 57, 68, 72], "eglshim": 6, "10": [6, 18, 43, 72, 89, 100, 136, 137, 143, 144, 145, 153, 192, 194, 195, 199, 200, 201, 202], "fatal": 6, "No": [6, 199], "directori": [6, 35, 192], "sure": [6, 38, 84, 186, 194, 199, 200, 201, 202], "glu": 6, "38": 6, "disappear": [6, 197], "filenotfounderror": 6, "errno": 6, "patchelf": 6, "fatalerror": 6, "gladloadgl": 6, "mj_env": 6, "python3": [6, 9], "8": [6, 86, 87, 88, 90, 91, 92, 99, 101, 108, 112, 115, 199, 201, 202], "site": 6, "__init__": [6, 43, 89, 119, 121, 124, 192, 199, 201], "912": 6, "glfwerror": 6, "65537": 6, "sovl": 6, "myscript": 6, "saniti": [6, 80], "cymj": 6, "linuxgpuextensionbuild": 6, "filenam": 6, "runtimeerror": [6, 21, 41, 42, 44, 45, 74, 194, 200, 201], "job": [6, 200], "schedul": [6, 158], "slurm": 6, "mjrendercontext": 6, "pyx": 6, "46": 6, "114": 6, "_setup_opengl_context": 6, "opengl_context": 6, "130": 6, "offscreenopenglcontext": 6, "fail": 6, "opengl": 6, "global": [6, 113, 192, 194, 199], "cuda_visible_devic": 6, "id": [6, 15, 136, 177], "around": [6, 14, 25, 26, 31, 43, 113, 143, 201], "slurm_step_gpu": 6, "enviro": [6, 9], "imag": [6, 46, 57, 67, 72, 77, 101, 195, 200, 201], "black": 6, "read": [6, 11, 12, 13, 14, 35, 36, 37, 38, 42, 44, 45, 73, 86, 87, 88, 107, 112, 113, 115, 128, 129, 132, 134, 135, 136, 137, 143, 144, 145, 162, 167, 175, 177, 180, 194, 195, 197, 199, 201], "miss": [6, 10, 18, 21, 41, 42, 44, 45, 74, 114, 115, 189, 202], "onscreen": 6, "101": 6, "displai": [6, 162, 192, 195], "correctli": [6, 21, 41, 42, 44, 45], "ask": [7, 201], "core": [7, 167, 170, 172, 175, 177, 180, 192, 202], "twice": [7, 137], "much": [7, 23, 25, 32, 134, 135, 200, 201], "spin": [8, 201], "hug": 8, "face": [8, 195, 201], "syllabu": 8, "lectur": 8, "best": [8, 195, 202], "awesom": [8, 200], "curat": 8, "discuss": 8, "reddit": 8, "maintain": 8, "reagent": 8, "product": [8, 184, 185], "orient": [8, 201], "stabl": [8, 9, 194], "baselines3": 8, "tf": 8, "agent": [8, 29, 104], "bandit": 8, "tensorflow": 8, "kera": 8, "acm": 8, "framework": [8, 43, 201, 202], "dopamin": 8, "prototyp": [8, 188], "salina": 8, "flexibl": [8, 192, 199, 201], "simpl": [8, 21, 22, 41, 42, 44, 45, 91, 113, 143, 194, 195, 200, 201], "sequenti": [8, 21, 41, 42, 44, 45, 114, 115, 199, 200, 201], "tianshou": 8, "eleg": 8, "rlpyt": 8, "rllib": 8, "industri": [8, 202], "grade": 8, "factori": 8, "throughput": 8, "cherri": 8, "jaxrl": 8, "space": [8, 22, 27, 106, 112, 113, 115, 121, 122, 194, 201], "mbrl": [8, 43], "rlmeta": 8, "light": 8, "elegantrl": 8, "cloud": 8, "mtrl": 8, "baselin": [8, 195], "relat": [9, 194], "689": 9, "13": [9, 10, 199], "lead": [9, 10, 18, 117, 118, 202], "dist": 9, "_torchrl": 9, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 9, "colab": 9, "notebook": [9, 194, 195, 196, 197, 199, 200, 201, 202], "24": 9, "11": [9, 19, 22, 72, 89, 195, 198], "2022": [9, 202], "12": [9, 200], "pip": [9, 201, 202], "solv": [9, 189, 194, 195], "pip3": 9, "extra": [9, 21, 41, 42, 44, 45, 78], "url": 9, "org": [9, 23, 32, 55, 67, 91, 92, 93, 94, 98, 99, 104, 105, 106, 110, 111, 121, 128, 132, 133, 135, 137, 138, 143, 146, 147, 150, 167, 170, 175, 180], "whl": 9, "There": [9, 192, 195, 201], "upgrad": 9, "previou": [9, 21, 111, 194, 199, 201], "relas": 9, "functorch": [9, 112, 115, 123, 195, 202], "lib_version_her": 9, "module_nam": 10, "str": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 31, 35, 41, 42, 44, 45, 46, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 69, 70, 72, 73, 74, 77, 78, 81, 83, 85, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 102, 103, 104, 108, 112, 113, 119, 121, 122, 123, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 142, 143, 144, 145, 156, 157, 158, 161, 165, 167, 170, 175, 177, 178, 180, 186, 194], "from_vers": 10, "to_vers": 10, "decor": 10, "fit": [10, 64, 192], "explicit": [10, 100, 194, 195], "intersect": 10, "rang": [10, 19, 78, 84, 134, 192, 194, 195, 199, 200, 202], "longer": [10, 195], "fun": [10, 199, 200], "self": [10, 21, 25, 41, 42, 43, 44, 45, 58, 67, 71, 74, 77, 89, 112, 119, 121, 124, 192, 199, 200, 202], "x": [10, 15, 18, 21, 72, 90, 96, 99, 100, 101, 121, 124, 125, 127, 146, 147, 148, 149, 150, 151, 152, 162, 195, 199, 202], "indic": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 42, 44, 45, 56, 71, 90, 101, 125, 159, 165, 186, 189, 192, 194, 195, 199, 200, 201], "doesn": 10, "create_env_fn": [11, 12, 13, 14, 44, 45, 194, 202], "sequenc": [11, 12, 13, 14, 18, 20, 23, 24, 26, 30, 39, 40, 54, 55, 56, 57, 59, 61, 62, 64, 65, 68, 69, 70, 72, 73, 78, 85, 90, 95, 101, 107, 108, 113, 114, 115, 119, 157, 159, 161, 162, 167, 175, 177, 180, 195, 197, 199, 201], "callabl": [11, 12, 13, 14, 21, 23, 24, 25, 26, 30, 41, 42, 43, 44, 45, 127, 159, 168, 169, 184, 185, 186], "union": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 31, 32, 41, 42, 44, 45, 53, 58, 64, 67, 70, 74, 77, 78, 90, 91, 92, 93, 94, 95, 99, 100, 101, 103, 104, 107, 108, 112, 113, 114, 116, 117, 118, 123, 124, 126, 131, 132, 133, 136, 137, 138, 143, 144, 145, 167, 168, 169, 170, 175, 177, 178, 180, 182, 183, 184, 185, 186], "tensordictbas": [11, 12, 13, 14, 15, 18, 21, 25, 29, 31, 41, 42, 44, 45, 55, 58, 63, 71, 73, 75, 76, 78, 79, 84, 89, 102, 112, 113, 128, 129, 130, 131, 132, 134, 135, 136, 137, 142, 143, 144, 145, 162], "total_fram": [11, 12, 13, 14, 162, 164, 182, 192, 194, 195, 202], "int": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 55, 56, 57, 58, 61, 63, 64, 67, 68, 74, 75, 77, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113, 116, 117, 121, 122, 128, 129, 130, 134, 135, 136, 137, 153, 154, 155, 158, 159, 162, 163, 167, 170, 175, 177, 178, 180, 184, 185, 186], "create_env_kwarg": [11, 12, 13, 14, 44, 45, 194], "dict": [11, 12, 13, 14, 18, 19, 21, 30, 41, 42, 44, 45, 74, 78, 90, 91, 92, 93, 94, 99, 100, 101, 113, 158, 168, 169, 170, 177, 180, 184, 185, 186, 201], "200": [11, 12, 13, 14, 21, 41, 42, 44, 45, 91, 92, 98, 110, 111, 194], "postproc": [11, 12, 13, 14, 194, 195], "pin_memori": [11, 13, 14, 23, 24, 25, 26, 30, 44, 45, 66, 159, 194, 202], "init_with_lag": [11, 12, 13, 14], "given": [11, 12, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 43, 44, 45, 58, 64, 67, 71, 74, 77, 84, 89, 98, 112, 113, 114, 115, 121, 122, 127, 130, 131, 142, 143, 144, 145, 154, 158, 182, 192, 194, 195, 199, 201], "datacollector": [11, 12, 13, 14, 113], "separ": [11, 12, 14, 15, 130, 136, 137, 194, 201], "synchron": [11, 184, 185], "item": [11, 25, 60, 130, 131, 153, 192, 194, 195, 200], "between": [11, 12, 13, 14, 21, 41, 42, 44, 45, 63, 69, 72, 74, 80, 90, 101, 113, 134, 139, 143, 158, 162, 194, 195, 199, 200, 201], "recept": 11, "safe": [11, 12, 16, 17, 18, 19, 20, 22, 27, 28, 112, 113, 123, 194, 202], "onlin": [11, 14, 128, 135, 153, 186], "env_mak": [11, 12, 13, 182, 201], "linear": [11, 12, 13, 21, 41, 42, 43, 44, 45, 58, 67, 71, 74, 77, 85, 86, 87, 88, 89, 90, 101, 103, 104, 108, 109, 110, 111, 112, 115, 119, 121, 122, 124, 143, 144, 145, 182, 197, 199, 202], "2000": [11, 12, 13, 194], "50": [11, 12, 13], "enumer": [11, 12, 13, 21, 41, 42, 44, 45, 194, 195, 202], "break": [11, 12, 13, 21, 41, 42, 44, 45, 78, 194, 195, 199, 202], "step_count": [11, 12, 13, 194, 195], "traj_id": [11, 12, 13, 15, 194], "shutdown": [11, 12, 13, 14, 194, 202], "del": [11, 12, 13, 194, 202], "bound": [11, 12, 13, 14, 17, 18, 21, 41, 42, 44, 45, 78, 110, 111, 112, 113, 201], "total": [11, 12, 13, 14, 42, 129, 134, 135, 153, 155, 158, 162, 164, 165, 194, 195, 197, 198, 199, 200, 201, 202], "greater": [11, 12, 14, 194, 195, 202], "close": [11, 12, 13, 14, 42, 129, 134, 135, 194, 202], "signal": [11, 12, 14, 194], "sent": [11, 12, 14, 35, 36, 44, 45, 78, 195, 200], "server": [11, 12, 14], "per": [11, 12, 13, 14, 44, 98, 162, 184, 185, 194, 195, 202], "span": [11, 12, 13, 14], "unless": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 199], "traje": [11, 12], "tori": [11, 12], "n_steps_max": [11, 12, 13, 14, 21, 194], "wrap": [11, 12, 13, 14, 21, 41, 42, 44, 45, 80, 86, 87, 88, 194, 195, 199, 201], "track": [11, 12, 13, 14, 78, 155, 194, 195, 200], "independ": [11, 12, 13, 14, 73, 137, 192, 194, 202], "neg": [11, 12, 13, 14, 23, 25, 32, 194], "ignor": [11, 12, 13, 14, 21, 41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125, 199, 200, 201], "length": [11, 12, 13, 14, 16, 44, 45, 89, 90, 91, 93, 96, 101, 112, 153, 194, 195, 200, 201], "mainli": [11, 12, 13, 14], "offlin": [11, 12, 13, 14, 192, 202], "postprocessor": [11, 12, 14], "format": [11, 12, 13, 14, 21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112, 201], "accord": [11, 12, 13, 14, 23, 25, 64, 70, 103, 110, 117, 118, 199, 200], "split_trajectori": [11, 12, 13, 14, 188], "inform": [11, 12, 13, 14, 21, 41, 42, 44, 45, 90, 101, 192, 195], "place": [11, 12, 13, 14, 18, 21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 78, 112, 163, 164, 195, 199], "loop": [11, 12, 13, 14, 42, 84, 162, 192, 194, 197, 200], "accommod": [11, 12, 13, 14], "kept": [11, 12, 13, 14, 44, 45, 73, 84, 117, 118], "origin": [11, 12, 13, 14, 67, 74, 77, 112, 113, 133, 135, 177, 180, 197, 200, 201], "long": [11, 12, 13, 14, 19, 22, 195, 200], "updat": [11, 12, 13, 14, 21, 23, 25, 32, 41, 42, 43, 44, 45, 74, 76, 78, 89, 112, 113, 128, 133, 135, 138, 143, 144, 145, 158, 162, 163, 168, 169, 181, 182, 192, 194, 195, 199, 201, 202], "everi": [11, 12, 14, 18, 21, 22, 38, 41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125, 162, 192, 194, 195, 200], "truncat": [11, 12, 13, 14, 118, 201], "help": [11, 12, 13, 14, 21, 41, 42, 44, 45, 189, 194], "desynchron": [11, 12, 13, 14], "match": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 90, 95, 101, 112, 113, 116, 134, 136, 137, 163, 195, 197, 199, 200, 201, 202], "load_state_dict": [11, 12, 13, 14, 21, 41, 42, 44, 45, 74, 78, 192], "state_dict": [11, 12, 13, 14, 21, 41, 42, 44, 45, 74, 78, 186, 192, 201], "ordereddict": [11, 12, 13, 14, 21, 41, 42, 44, 45, 74, 78], "load": [11, 12, 13, 14, 23, 24, 25, 30, 47, 159, 186, 192, 195], "form": [11, 12, 14, 21, 23, 24, 25, 30, 41, 42, 44, 45, 78, 127, 129, 134, 135, 159, 162], "worker0": [11, 12, 14], "state_dict0": [11, 12, 14], "worker1": [11, 12, 14], "state_dict1": [11, 12, 14], "reset_idx": [11, 12, 14], "static_se": [11, 12, 13, 14, 41, 42, 44, 45, 74], "increment": [11, 12, 13, 14, 41, 42, 44, 45, 134], "last": [11, 12, 13, 14, 21, 61, 90, 100, 101, 105, 195, 199, 201, 202], "env_fn": [11, 12, 13, 14, 184, 185], "v0": [11, 12, 14, 42, 48, 49, 51, 52, 58, 74, 78, 182], "env_fn_parallel": [11, 12, 13, 14], "6": [11, 12, 13, 14, 52, 64, 90, 95, 100, 101, 116, 119, 167, 170, 172, 175, 177, 180, 194, 195, 199, 200, 201, 202], "out_se": [11, 12, 13, 14, 201], "shut": [11, 12, 13, 14], "down": [11, 12, 13, 14], "irrevers": [11, 12, 14], "arg": [12, 18, 21, 29, 35, 36, 41, 42, 43, 44, 45, 50, 67, 74, 75, 76, 77, 85, 86, 90, 97, 101, 109, 155, 162, 186], "kwarg": [12, 13, 14, 18, 21, 29, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 67, 71, 74, 75, 76, 77, 85, 86, 90, 91, 92, 93, 94, 97, 99, 101, 102, 107, 108, 109, 113, 116, 118, 129, 134, 142, 155, 162, 167, 168, 169, 170, 175, 177, 180, 183, 184, 185, 202], "envcreat": [13, 182, 183, 186, 194, 195, 201, 202], "return_same_td": 13, "stop": [13, 41, 42, 44, 45, 201, 202], "equat": [13, 127, 129, 138], "exce": 13, "batcher": 13, "cautious": [13, 135], "ad": [13, 21, 23, 24, 25, 26, 29, 30, 31, 32, 41, 42, 44, 45, 74, 103, 104, 129, 134, 135, 159, 194, 201], "whole": [13, 21, 41, 42, 44, 45, 74, 153, 195], "content": [13, 90, 101, 195, 200, 202], "ident": [13, 44, 45, 184, 185, 194, 199, 200], "yield": [13, 21, 41, 42, 44, 45], "chunk": 13, "policy_state_dict": 13, "env_state_dict": 13, "singl": [14, 21, 23, 24, 25, 26, 29, 30, 31, 41, 42, 44, 45, 55, 56, 72, 90, 100, 101, 115, 132, 136, 148, 149, 151, 152, 159, 177, 186, 194, 195, 197, 199, 202], "paradigm": 14, "prefer": 14, "mere": 14, "rollout_tensordict": 15, "zero": [15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 56, 64, 89, 100, 125, 143, 144, 145, 199, 200, 202], "max": [15, 22, 116, 117, 118, 129, 136, 137, 194], "durat": [15, 195], "int64": [16, 19, 20, 22, 97, 109, 121, 122, 172, 195, 201], "discret": [16, 19, 20, 22, 107, 121, 122, 132], "vector": [16, 22, 44, 45, 91, 93, 101, 145, 151, 152, 188, 194, 195, 197, 199, 201], "assert_is_in": [16, 17, 18, 19, 20, 22, 27, 28], "belong": [16, 17, 18, 19, 20, 22, 27, 28], "otherwis": [16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 64, 71, 74, 78, 117, 118, 137, 158, 192, 194, 201], "encod": [16, 17, 18, 19, 20, 22, 27, 28, 97, 106, 107, 109, 110, 121, 122, 127, 199], "val": [16, 17, 18, 19, 20, 22, 27, 28, 202], "ndarrai": [16, 17, 18, 19, 20, 22, 23, 27, 28, 42], "np": [16, 17, 18, 19, 20, 22, 27, 28, 42, 194], "slice": [16, 17, 18, 19, 20, 22, 27, 28, 200], "tensor_to_index": [16, 17, 18, 19, 20, 22, 27, 28], "is_in": [16, 17, 18, 19, 20, 22, 27, 28, 201], "back": [16, 17, 18, 19, 20, 22, 27, 28, 112, 113, 194], "rand": [16, 17, 18, 19, 20, 22, 27, 28, 43, 52, 89, 201, 202], "uniform": [16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 32], "unbound": [16, 17, 18, 19, 20, 22, 27, 28, 200], "to_numpi": [16, 17, 18, 19, 20, 22, 27, 28], "transformed_in": [16, 17, 18, 19, 20, 22, 27, 28, 73, 74, 116, 186], "type_check": [16, 17, 18, 19, 20, 22, 27, 28], "whose": [16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112, 194], "fill": [16, 17, 18, 19, 20, 22, 27, 28, 71, 200], "minimum": [17, 69, 98, 108, 116, 117, 118, 125, 127, 137, 153, 194, 201], "float": [17, 19, 21, 22, 23, 24, 25, 26, 28, 32, 41, 42, 44, 45, 58, 59, 64, 67, 69, 70, 71, 72, 74, 77, 78, 95, 98, 103, 104, 110, 111, 112, 116, 118, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 159, 160, 194, 195, 201], "upper": 17, "composit": 18, "unnam": 18, "tupl": [18, 21, 23, 30, 41, 42, 44, 45, 53, 64, 91, 100, 101, 130, 143, 144, 145, 171, 173, 176, 179, 200], "effect": [18, 21, 41, 42, 44, 45, 74, 162, 195, 201], "cannot": [18, 200], "pixels_spec": 18, "boundedtensorspec": [18, 86, 87, 88, 108, 188, 201, 202], "32": [18, 90, 91, 92, 99, 101, 105, 106, 194, 195, 201, 202], "observation_vector_spec": 18, "33": [18, 21, 41, 42, 44, 45, 90, 101], "composite_spec": 18, "observation_vector": [18, 56, 167, 170, 175, 177, 180, 194], "within": [18, 21, 31, 41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125, 202], "randn": [18, 64, 85, 86, 87, 88, 97, 100, 108, 109, 112, 115, 119, 121, 122, 143, 144, 145, 161, 199, 200, 201, 202], "td_project": 18, "modif": [18, 21, 41, 42, 44, 45, 194, 200], "ob": [18, 59, 64, 72, 119, 143, 144, 145, 194, 197, 201, 202], "yield_nesting_kei": 18, "keysview": 18, "selected_kei": [18, 44, 45, 194], "altern": [19, 127, 195, 200], "onehottensorspec": 19, "categor": [19, 22, 107, 121, 122], "larg": 19, "action_valu": [19, 22, 97, 109, 121, 122, 172, 195], "arang": [19, 22, 97, 121, 153], "view": [19, 21, 22, 41, 42, 44, 45, 101, 121, 194, 200, 201, 202], "argmax": [19, 97, 109, 121, 122], "dim": [19, 56, 100, 186, 194, 200], "chosen_action_valu": [19, 22, 109, 172, 195], "outcom": [19, 22, 95, 116], "nvec": 20, "use_regist": [20, 22], "concaten": [20, 55, 56, 64, 73, 101, 115, 194, 195, 200, 201], "hot": [20, 22, 97, 107, 109, 121, 122], "cardin": [20, 121, 122], "element": [20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 35, 36, 37, 90, 112, 113, 153, 159, 194, 201], "gamma": [21, 128, 129, 130, 131, 132, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 182, 194, 195, 202], "present": [21, 23, 32, 41, 42, 44, 45, 91, 92, 93, 94, 99, 104, 112, 113, 114, 115, 128, 129, 132, 134, 135, 136, 137, 186, 192, 194, 197, 202], "sutton": 21, "r": [21, 64, 113, 127, 142, 201], "1988": 21, "predict": [21, 98, 102, 132, 137, 142], "tempor": [21, 144], "44": 21, "discount": [21, 128, 129, 130, 131, 132, 134, 135, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 194, 195], "factor": [21, 104, 117, 118, 128, 129, 130, 131, 132, 134, 135, 136, 194, 195, 201], "ahead": [21, 201], "add_modul": [21, 41, 42, 44, 45], "add": [21, 23, 24, 25, 26, 29, 30, 31, 39, 40, 41, 42, 44, 45, 103, 128, 157, 159, 194, 195, 200, 202], "child": [21, 41, 42, 44, 45, 200], "current": [21, 41, 42, 44, 45, 50, 74, 81, 98, 100, 111, 121, 122, 167, 175, 192, 194, 201, 202], "fn": [21, 41, 42, 44, 45, 184, 185], "recurs": [21, 41, 42, 44, 45], "submodul": [21, 41, 42, 44, 45], "children": [21, 41, 42, 44, 45], "init": [21, 41, 42, 44, 45, 194, 195], "no_grad": [21, 41, 42, 44, 45, 194, 195], "init_weight": [21, 41, 42, 44, 45], "m": [21, 41, 42, 44, 45, 113, 194, 195], "fill_": [21, 41, 42, 44, 45, 195, 200, 201], "net": [21, 41, 42, 44, 45, 100, 136, 177, 182, 195, 199, 202], "in_featur": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 86, 90, 91, 92, 93, 94, 100, 101, 103, 104, 112, 199], "out_featur": [21, 41, 42, 43, 44, 45, 58, 67, 71, 74, 77, 86, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 103, 104, 112, 194, 195, 199, 202], "bia": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 90, 98, 101, 103, 104, 112, 125, 126, 127, 195], "requires_grad": [21, 41, 42, 44, 45, 194], "bfloat16": [21, 41, 42, 44, 45], "cast": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 78, 112, 167, 170, 172, 175, 177, 180, 200, 201], "datatyp": [21, 41, 42, 44, 45], "direct": [21, 41, 42, 44, 45, 195], "member": [21, 41, 42, 44, 45], "xdoctest": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "skip": [21, 41, 42, 44, 45, 74, 113, 155, 158], "buf": [21, 41, 42, 44, 45], "20l": [21, 41, 42, 44, 45], "1l": [21, 41, 42, 44, 45], "5l": [21, 41, 42, 44, 45], "immedi": [21, 41, 42, 44, 45, 142], "associ": [21, 41, 42, 44, 45, 110, 186, 199], "construct": [21, 41, 42, 44, 45, 111, 113, 162, 167, 175, 199, 201], "copi": [21, 41, 42, 44, 45, 74, 194, 195, 200], "doubl": [21, 28, 41, 42, 44, 45, 58, 59, 67, 71, 72, 74, 77, 112, 131, 132, 133, 136, 138, 194, 201], "eval": [21, 41, 42, 44, 45, 74, 78, 194, 195], "certain": [21, 41, 42, 44, 45, 74, 134, 194, 195, 200, 201], "particular": [21, 41, 42, 44, 45, 74, 192, 195, 197], "behavior": [21, 41, 42, 44, 45, 74], "affect": [21, 41, 42, 44, 45, 73, 74], "dropout": [21, 41, 42, 44, 45, 74], "batchnorm": [21, 41, 42, 44, 45, 74], "disabl": [21, 41, 42, 44, 45, 74, 117, 118, 194], "gradient": [21, 41, 42, 44, 45, 74, 104, 117, 118, 128, 142, 143, 144, 145, 162, 194, 195], "comparison": [21, 41, 42, 44, 45, 74], "similar": [21, 41, 42, 44, 45, 58, 67, 71, 74, 76, 77, 78, 84, 112, 113, 194, 199, 201], "mechan": [21, 41, 42, 44, 45, 74], "confus": [21, 41, 42, 44, 45, 74], "extra_repr": [21, 41, 42, 44, 45], "represent": [21, 41, 42, 44, 45, 67, 77, 194, 195, 201], "string": [21, 41, 42, 44, 45, 113, 127, 161, 167, 175, 177, 180], "forward": [21, 41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 119, 121, 123, 124, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 143, 144, 145, 194, 195, 199, 202], "tennsordict": 21, "dimens": [21, 55, 56, 61, 64, 72, 75, 90, 101, 103, 104, 116, 117, 128, 129, 132, 134, 135, 136, 137, 143, 144, 145, 186, 194, 195, 200], "shift": [21, 125], "nontermin": [21, 194], "termin": [21, 114, 194, 195, 199, 202], "original_reward": [21, 194], "newli": 21, "get_buff": [21, 41, 42, 44, 45], "target": [21, 41, 42, 44, 45, 73, 112, 113, 130, 131, 132, 133, 134, 136, 137, 138, 142, 143, 144, 145, 164, 181, 182, 192, 194, 195], "throw": [21, 41, 42, 44, 45, 201], "docstr": [21, 41, 42, 44, 45], "get_submodul": [21, 41, 42, 44, 45], "explan": [21, 41, 42, 44, 45], "how": [21, 23, 25, 32, 41, 42, 44, 45, 129, 133, 134, 135, 162, 189, 194, 195, 197, 201, 202], "fulli": [21, 41, 42, 44, 45, 195], "qualifi": [21, 41, 42, 44, 45], "referenc": [21, 41, 42, 44, 45], "attributeerror": [21, 41, 42, 44, 45], "invalid": [21, 41, 42, 44, 45], "resolv": [21, 41, 42, 44, 45], "someth": [21, 41, 42, 44, 45, 189, 201], "get_extra_st": [21, 41, 42, 44, 45, 78], "set_extra_st": [21, 41, 42, 44, 45, 78], "pickleabl": [21, 41, 42, 44, 45, 78], "ensur": [21, 23, 25, 32, 41, 42, 44, 45, 67, 78, 123, 194], "pickl": [21, 41, 42, 44, 45, 78], "get_paramet": [21, 41, 42, 44, 45], "sai": [21, 41, 42, 44, 45, 201], "net_b": [21, 41, 42, 44, 45], "net_c": [21, 41, 42, 44, 45], "conv": [21, 41, 42, 44, 45, 90], "conv2d": [21, 41, 42, 44, 45, 90], "16": [21, 41, 42, 44, 45], "kernel_s": [21, 41, 42, 44, 45, 90, 91, 92, 195, 202], "stride": [21, 41, 42, 44, 45, 90, 91, 92, 99, 195, 202], "100": [21, 41, 42, 44, 45, 64, 154, 162, 182, 194, 195, 197, 201, 202], "diagram": [21, 41, 42, 44, 45], "show": [21, 41, 42, 44, 45, 195, 199, 202], "itself": [21, 41, 42, 44, 45], "would": [21, 41, 42, 44, 45, 101, 192, 195, 199, 200, 201], "degre": [21, 41, 42, 44, 45], "named_modul": [21, 41, 42, 44, 45], "o": [21, 41, 42, 44, 45], "transit": [21, 41, 42, 44, 45, 194, 195], "alwai": [21, 41, 42, 44, 45, 63, 195], "half": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112, 194], "ipu": [21, 41, 42, 44, 45], "strict": [21, 41, 42, 44, 45, 74], "descend": [21, 41, 42, 44, 45, 74], "exactli": [21, 41, 42, 44, 45, 50, 74], "persist": [21, 41, 42, 44, 45, 74], "strictli": [21, 41, 42, 44, 45, 74], "enforc": [21, 41, 42, 44, 45, 74, 114], "missing_kei": [21, 41, 42, 44, 45, 74], "unexpected_kei": [21, 41, 42, 44, 45, 74], "unexpect": [21, 41, 42, 44, 45, 74, 201], "namedtupl": [21, 41, 42, 44, 45, 74], "regist": [21, 22, 41, 42, 44, 45, 58, 67, 73, 74, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125, 192, 199], "duplic": [21, 41, 42, 44, 45, 131, 132, 200], "l": [21, 41, 42, 44, 45, 142], "idx": [21, 41, 42, 44, 45, 200], "named_buff": [21, 41, 42, 44, 45, 195], "prefix": [21, 41, 42, 44, 45, 74, 201], "prepend": [21, 41, 42, 44, 45], "running_var": [21, 41, 42, 44, 45], "named_children": [21, 41, 42, 44, 45], "conv4": [21, 41, 42, 44, 45], "conv5": [21, 41, 42, 44, 45], "memo": [21, 41, 42, 44, 45], "remove_dupl": [21, 41, 42, 44, 45], "alreadi": [21, 41, 42, 44, 45, 113, 194, 195], "named_paramet": [21, 41, 42, 44, 45, 195], "param": [21, 41, 42, 43, 44, 45, 95, 108, 109, 112, 115, 116, 119, 121, 122, 138, 141, 143, 144, 145, 170, 194, 195, 199, 202], "register_backward_hook": [21, 41, 42, 44, 45], "hook": [21, 41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 105, 106, 109, 110, 111, 121, 122, 125, 155, 156, 158, 160, 162, 163, 188], "removablehandl": [21, 41, 42, 44, 45], "deprec": [21, 41, 42, 44, 45, 74, 201], "favor": [21, 41, 42, 44, 45], "register_full_backward_hook": [21, 41, 42, 44, 45], "futur": [21, 41, 42, 44, 45, 67, 74, 77, 101, 189, 202], "register_buff": [21, 41, 42, 44, 45], "running_mean": [21, 41, 42, 44, 45], "save": [21, 41, 42, 44, 45, 162, 192, 195], "alongsid": [21, 41, 42, 44, 45], "latter": [21, 41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125, 184, 185], "num_featur": [21, 41, 42, 44, 45], "register_forward_hook": [21, 41, 42, 44, 45, 121, 122], "signatur": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112, 124], "posit": [21, 29, 30, 31, 41, 42, 44, 45, 74, 75, 199], "won": [21, 41, 42, 44, 45, 67, 77, 162, 186, 194], "inplac": [21, 41, 42, 44, 45, 194], "register_forward_pre_hook": [21, 41, 42, 44, 45], "invok": [21, 29, 41, 42, 44, 45], "respect": [21, 41, 42, 44, 45, 54, 58, 67, 71, 74, 77, 111, 112, 119, 157], "grad_input": [21, 41, 42, 44, 45], "grad_output": [21, 41, 42, 44, 45], "subsequ": [21, 41, 42, 44, 45], "entri": [21, 41, 42, 44, 45, 143, 144, 145, 199], "technic": [21, 41, 42, 44, 45], "reason": [21, 41, 42, 44, 45, 67, 194, 195], "receiv": [21, 41, 42, 44, 45, 73, 101, 195, 197], "similarli": [21, 41, 42, 44, 45, 114, 115, 194, 199, 201], "caller": [21, 41, 42, 44, 45], "register_load_state_dict_post_hook": [21, 41, 42, 44, 45], "post": [21, 41, 42, 44, 45, 195], "incompatible_kei": [21, 41, 42, 44, 45], "consist": [21, 41, 42, 44, 45, 90, 101, 194, 195, 201], "addit": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112, 127, 143, 195], "thrown": [21, 41, 42, 44, 45], "clearn": [21, 41, 42, 44, 45], "register_modul": [21, 41, 42, 44, 45, 192], "alia": [21, 41, 42, 44, 45], "register_paramet": [21, 41, 42, 44, 45], "requires_grad_": [21, 41, 42, 44, 45, 194], "autograd": [21, 41, 42, 44, 45, 74], "freez": [21, 41, 42, 44, 45], "finetun": [21, 41, 42, 44, 45], "individu": [21, 41, 42, 44, 45], "gan": [21, 41, 42, 44, 45], "share_memori": [21, 41, 42, 44, 45, 194], "share_memory_": [21, 41, 42, 44, 45, 200, 202], "destin": [21, 41, 42, 44, 45, 74, 84], "keep_var": [21, 41, 42, 44, 45, 74], "averag": [21, 41, 42, 44, 45, 74, 78, 160, 194, 199], "shallow": [21, 41, 42, 44, 45, 74], "pleas": [21, 41, 42, 44, 45, 74, 189], "design": [21, 22, 41, 42, 44, 45, 74, 128, 129, 132, 134, 135, 136, 137, 194, 195, 197, 200, 201, 202], "detach": [21, 41, 42, 44, 45, 74, 194, 195], "non_block": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112, 195], "memory_format": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "channels_last": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "Its": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "complex": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112, 199], "integr": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 94, 112], "unchang": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "tri": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "convert": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 78, 112, 127, 200], "host": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "pin": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "4d": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "ignore_w": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "1913": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "3420": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "5113": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "2325": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "torch_doctest_cuda1": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "gpu1": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "1914": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "5112": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "2324": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "float16": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "cdoubl": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "3741": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "j": [21, 23, 32, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112, 192, 195], "2382": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "5593": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "4443": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "complex128": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "6122": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "1150": [21, 41, 42, 44, 45, 58, 67, 71, 74, 77, 112], "to_empti": [21, 41, 42, 44, 45], "dst_type": [21, 41, 42, 44, 45], "xpu": [21, 41, 42, 44, 45], "zero_grad": [21, 41, 42, 44, 45, 192, 194, 195, 200], "set_to_non": [21, 41, 42, 44, 45], "context": [21, 41, 42, 44, 45, 103, 140, 141, 143, 146, 147, 150, 158, 194, 195, 199], "grad": [21, 41, 42, 44, 45, 195], "unidimension": [22, 200], "keepdim": 22, "sum": [22, 42, 142, 194, 195, 201], "user_regist": 22, "experiment": [22, 113], "onto": [22, 112, 113], "appear": 22, "priori": 22, "definit": [22, 38], "uniqu": 22, "discretebox": 22, "alpha": [23, 25, 32, 90, 136, 137, 194, 195, 202], "beta": [23, 25, 32, 134, 194, 195, 202], "ep": [23, 25, 32, 78, 129, 138, 160], "1e": [23, 25, 32, 78, 95, 98, 116], "08": [23, 25, 32, 194], "collate_fn": [23, 24, 25, 26, 30, 159, 200, 202], "prefetch": [23, 24, 25, 26, 30, 159, 194, 195], "priorit": [23, 25, 32, 130, 131, 136, 137, 194, 195], "schaul": [23, 32], "quan": [23, 32], "antonogl": [23, 32], "silver": [23, 32], "2015": [23, 32], "arxiv": [23, 32, 55, 67, 91, 92, 93, 94, 98, 99, 104, 105, 106, 110, 111, 121, 128, 132, 133, 135, 137, 138, 143, 146, 147, 150, 167, 170, 175, 180], "ab": [23, 32, 67, 78, 98, 99, 104, 105, 106, 110, 111, 128, 133, 135, 167, 175], "1511": [23, 32, 99], "05952": [23, 32], "expon": [23, 25, 32], "\u03b1": [23, 25, 32], "determin": [23, 25, 32, 67, 77, 195], "delta": [23, 25, 32, 113, 116, 188], "prioriti": [23, 25, 31, 32, 35, 36, 37, 38, 130, 131, 136, 137, 192, 194, 195], "null": [23, 25, 32, 54, 194], "merg": [23, 24, 25, 30, 159], "mini": [23, 24, 25, 30, 159], "style": [23, 24, 25, 30, 159], "rb": [23, 24, 25, 30, 159, 195, 202], "multithread": [23, 24, 25, 30, 159], "instanti": [23, 24, 25, 44, 45, 73, 159, 194, 195, 200, 201], "extend": [23, 24, 25, 26, 29, 30, 31, 39, 40, 159, 192, 194, 195, 202], "multinomi": [23, 25], "update_prior": [23, 25, 32, 192, 194, 202], "circular": [24, 159, 194], "randomli": [24, 26, 63, 64, 71, 113, 159], "select": [24, 25, 26, 29, 30, 31, 44, 45, 63, 89, 159, 161, 194, 195], "priority_kei": [25, 31, 131, 132, 137, 202], "td_error": [25, 31, 130, 131, 132, 136, 137, 194, 202], "prioritizedreplaybuff": [25, 188, 202], "flaot": 25, "return_weight": 25, "_weight": 25, "replaybuff": [26, 29, 31, 40, 178, 182, 188, 202], "meta": [27, 192], "describ": [27, 56, 73, 116, 117, 167, 175, 201], "what": [27, 41, 42, 44, 45, 71, 189, 195, 199, 201, 202], "replay_buff": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 182, 194, 195], "rb_prototyp": [29, 30, 31], "invoc": 29, "friendli": [29, 194], "public": 29, "rpc": 29, "append": [29, 30, 31, 84, 194, 195, 200, 202], "insert_transform": [29, 30, 31], "insert": [29, 30, 31, 39, 40, 75, 195], "include_info": [29, 31], "sampler": [29, 30, 31, 32, 33, 35, 36, 37, 38, 188], "writer": [30, 39, 188], "max_siz": [30, 35, 37, 38, 195], "1_000": 30, "randomsampl": [30, 188], "roundrobinwrit": [30, 188], "kw": [31, 39], "max_capac": 32, "uniformli": [33, 201], "scratch_dir": [35, 194], "memmap": [35, 44, 45, 78], "attach": [35, 36, 37, 38, 195], "entiti": [35, 36, 37, 38], "made": [35, 36, 37, 38, 194], "eg": [35, 36, 37, 38], "alloc": 36, "__len__": 38, "roundrobin": 39, "piec": [39, 40], "_inplace_upd": [41, 44, 45, 74], "_batch_lock": [41, 44, 45, 74], "run_type_check": [41, 43], "compar": [41, 158, 195, 201], "batch_lock": [41, 42, 44, 45, 74], "environn": [41, 42, 43, 44, 45, 74], "immut": [41, 42, 44, 45, 74, 167, 175], "fake_tensordict": [41, 42, 44, 45], "fake": [41, 42, 44, 45], "overridden": [41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125], "recip": [41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125], "afterward": [41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125, 201], "former": [41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125], "silent": [41, 42, 44, 45, 58, 67, 73, 75, 76, 77, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 106, 110, 111, 125], "info": [41, 42, 44, 45, 79, 199], "_step": [41, 42, 44, 45], "privat": [41, 42, 44, 45, 201], "_reset": [41, 42, 43, 44, 45, 89, 202], "overwritten": [41, 42, 44, 45, 84, 194], "callback": [41, 42, 44, 45], "auto_reset": [41, 42, 44, 45, 195], "auto_cast_to_devic": [41, 42, 44, 45], "break_when_any_don": [41, 42, 44, 45], "return_contigu": [41, 42, 44, 45, 197], "soon": [41, 42, 44, 45], "smaller": [41, 42, 44, 45], "automat": [41, 42, 44, 45, 64, 85, 108, 195, 202], "lazystackedtensordict": [41, 42, 43, 44, 45, 197, 200, 201, 202], "concomitt": [41, 42, 44, 45], "eras": [41, 42, 44, 45], "workspac": [41, 42, 44, 45], "carri": [41, 42, 44, 45], "discard": [42, 84, 201], "info_dict_read": 42, "set_info_dict_read": 42, "put": [42, 78, 186, 200], "f": [42, 127, 143, 144, 145, 194, 195, 199, 200, 201], "read_act": 42, "read_don": 42, "reader": [42, 194, 195], "frame_skip": [42, 46, 47, 48, 51, 155, 158, 164, 192, 194, 202], "broken": [42, 80], "read_ob": 42, "dictat": [42, 113], "inner": [42, 192, 194, 201], "read_reward": 42, "total_reward": 42, "step_reward": 42, "far": [42, 117, 118, 201], "baseinfodictread": 42, "info_dict": 42, "hoc": 42, "manner": [42, 67, 194, 197], "dict_read": 42, "gymwrapp": [42, 188, 202], "default_info_dict_read": 42, "my_info_kei": 42, "some_env": 42, "meant": 43, "world": [43, 201], "limit": [43, 44, 45, 200], "safeti": 43, "constraint": 43, "behav": [43, 50, 107], "classic": [43, 199, 200], "directli": [43, 186, 195], "unboundedcontinuoustensorspec": [43, 71, 85, 86, 87, 88, 89, 112, 115, 119, 188, 201], "mymbenv": [43, 89], "world_model": [43, 53, 89], "super": [43, 89, 119, 121, 124, 199, 202], "hidden_observ": [43, 89], "mlp": [43, 86, 89, 90, 91, 92, 93, 94, 97, 100, 167, 175, 177, 180, 188, 194, 195, 197, 199, 202], "worldmodelwrapp": [43, 89], "activation_class": [43, 89, 90, 91, 92, 93, 94, 98, 99, 101, 194, 195, 202], "relu": [43, 89, 127], "activate_last_lay": [43, 89, 94, 101], "depth": [43, 89, 90, 91, 92, 93, 94, 97, 98, 99, 101, 105, 106, 195, 197], "equal": [44, 45, 63, 64, 90, 96, 101, 139, 153, 184, 185, 200], "my_env_fun": [44, 45], "custom_attribute_list": [44, 45], "custom_attribut": [44, 45], "custom_method_list": [44, 45], "custom_method": [44, 45], "num_work": [44, 45, 194, 195], "deploi": [44, 45], "creation": [44, 45, 194, 201], "slight": [44, 45, 195], "overhead": [44, 45, 199], "env_input_kei": [44, 45], "permit": [44, 45], "drastic": [44, 45], "decreas": [44, 45], "io": [44, 45], "burden": [44, 45], "_batchedenv": [44, 45], "might": [44, 45, 189, 194, 201], "next_pixel": [44, 45], "next_vector": [44, 45], "amount": [44, 45], "occupi": [44, 45], "excluded_kei": [44, 45], "exclud": [44, 45, 194], "share_individual_td": [44, 45], "lazi": [44, 45, 67, 103, 114, 115, 194, 197, 200, 201], "shared_memori": [44, 45], "policy_proof": [44, 45], "ll": [44, 45, 194, 195, 201], "hidden": [44, 45, 86, 87, 88, 98, 100, 105, 106, 110, 111, 112, 115, 167, 175, 197, 199, 202], "allow_step_when_don": [44, 45], "encount": [44, 45, 189], "update_kwarg": [44, 45], "dm_control": [46, 47, 194, 197, 201], "env_nam": [46, 48, 51, 194, 201], "task_nam": 46, "cheetah": [46, 47, 194, 201], "suit": [47, 201], "disable_env_check": 48, "categorical_action_encod": 49, "serv": [50, 201], "placehold": [50, 74], "secur": 50, "jumanji": [51, 52], "snake": [51, 52], "6x6": [51, 52], "td1": 52, "int32": [52, 200, 202], "5": [52, 89, 90, 97, 98, 100, 101, 109, 117, 118, 121, 122, 134, 194, 195, 200, 201, 202], "12x12": 52, "tsp50": 52, "tsp100": 52, "model_bas": [53, 89], "dreamer": [53, 98], "prior_shap": 53, "belief_shap": 53, "obs_decod": 53, "transform_reward_spec": [54, 58, 59, 67, 69, 70, 73, 75, 77], "cat_dim": [55, 64], "success": [55, 73, 202], "account": 55, "movement": 55, "veloc": [55, 201], "propos": [55, 102, 133, 138, 177, 180], "plai": [55, 201], "atari": [55, 201], "pdf": [55, 91, 92, 93, 94, 121, 132, 136, 137, 138, 143, 146, 147, 150, 170, 177, 180], "1312": 55, "5602": 55, "tranform": [55, 58, 67, 71, 73, 76, 77, 79], "transform_observation_spec": [55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 71, 72, 73, 75, 77], "del_kei": [56, 195, 197], "unsqueeze_if_oor": 56, "observation_posit": 56, "observation_veloc": 56, "delet": [56, 200], "unsqueez": [56, 72, 75, 100, 200], "key1": [56, 153, 161], "key2": [56, 153, 161], "_": [56, 59, 64, 72, 78, 112, 127, 143, 144, 145, 194, 195, 199, 202], "w": [57, 68, 72], "crop": 57, "center": 57, "width": [57, 68, 195], "height": [57, 68, 195], "squar": [57, 117, 118], "rewardsc": [58, 74, 188, 194], "rewardclip": [58, 188], "transformed_env": [58, 73, 74], "dest": [58, 67, 77, 112], "transform_input_spec": [58, 59, 67, 73, 75, 77], "finit": [60, 194], "first_dim": 61, "last_dim": 61, "flatten": [61, 194, 195], "adjac": 61, "turn": [62, 158, 195], "noop": [63, 202], "30": [63, 110, 111, 195], "op": [63, 163], "noop_max": 63, "loc": [64, 70, 86, 87, 88, 108, 113, 115, 117, 118, 165, 167, 175, 177, 180, 186, 194, 195, 199, 202], "standard_norm": [64, 70, 194, 195], "affin": [64, 70], "layer": [64, 78, 90, 91, 92, 98, 101, 103, 104, 105, 106, 120, 194, 195, 199], "set_default_tensor_typ": 64, "doubletensor": 64, "std": [64, 78, 194, 195, 201], "isclos": 64, "next_ob": [64, 143, 144, 145, 194, 202], "normalis": 64, "stat": [64, 165, 186, 194], "rubric": [64, 115], "manual_se": [64, 194, 201, 202], "init_stat": 64, "3752e": 64, "01": [64, 125, 128, 129, 134, 135, 194, 198], "5087e": 64, "03": [64, 194, 198], "9294e": 64, "9636": 64, "5608": 64, "6408": 64, "num_it": 64, "reduce_dim": 64, "constant": [64, 192, 194, 195, 201], "ideal": [64, 194], "statist": [64, 78, 186, 194, 201], "approach": [64, 201], "gaussian": [64, 89, 103, 104], "empir": [64, 89, 113], "deviat": [64, 78, 89, 98, 103, 104, 135, 194, 195], "summari": [64, 78], "r3m": 67, "resnet": [67, 77], "visual": [67, 77], "embed": [67, 76, 77, 86, 87, 88, 112, 199], "ego4d": [67, 77], "paper": [67, 77, 133, 177, 180, 194], "univers": [67, 77], "manipul": [67, 201], "suraj": 67, "nair": 67, "aravind": 67, "rajeswaran": 67, "vikash": [67, 77], "kumar": [67, 77], "chelsea": 67, "finn": 67, "abhinav": 67, "gupta": 67, "2203": 67, "12601": 67, "_init": 67, "snippet": [67, 194], "resenet50": 67, "model_nam": [67, 77], "resnet50": [67, 77], "resnet34": 67, "resnet18": 67, "left": [67, 77, 195], "empti": [67, 74, 77, 194], "r3m_vec": 67, "feed": [67, 77], "244": [67, 77], "hub": [67, 77], "cach": [67, 74, 77, 154], "download_path": [67, 77], "tensor_pixels_kei": [67, 77], "interpol": [68, 195], "bilinear": 68, "clamp_min": 69, "clamp_max": 69, "clip": [69, 129, 162], "clip_min": 69, "scalar": [69, 92, 94, 103, 104, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "clip_max": 69, "default_valu": 71, "primer": 71, "popul": 71, "drawn": [71, 113], "rel": [71, 95, 116], "fix": [71, 137, 201], "chosen": [71, 167, 175, 177, 180], "mykei": 71, "dtype_or_devic": 71, "255": [72, 201], "precis": [72, 194], "ri": 72, "randint": [72, 194], "out_keys_inv": 73, "principl": 73, "combin": [73, 200], "cattransform": 73, "notabl": 73, "cache_spec": 74, "anymor": [74, 112, 194], "unsqueeze_dim": 75, "vip": [76, 77], "toward": 77, "implicit": 77, "jason": 77, "ma": 77, "shagun": 77, "sodhani": 77, "dinesh": 77, "jayaraman": 77, "osbert": 77, "bastani": 77, "ami": 77, "zhang": 77, "vip_vec": 77, "shared_td": 78, "lock": 78, "decai": [78, 136, 160, 194, 195, 201], "9999": [78, 201], "0001": [78, 98, 160], "fly": [78, 134, 201], "substitut": 78, "to_observation_norm": 78, "rate": [78, 142, 194, 195], "99": [78, 128, 129, 134, 135, 136, 137, 142, 182, 194, 195, 202], "numer": [78, 112, 113, 117, 118, 200, 201], "underflow": 78, "1000": [78, 113, 133, 182, 194, 195], "build_td_for_shared_vecnorm": 78, "memmori": 78, "memmap_": [78, 200], "multiprocess": [78, 201], "mp": 78, "queue": 78, "td_share": 78, "v": [78, 100, 137, 195, 199, 202], "observationnorm": [78, 186, 188, 194, 195, 202], "state_dim": [79, 110, 111], "action_dim": [79, 91, 93, 197], "gsde": [79, 136, 186], "nois": [79, 104, 120, 136, 158, 186, 194], "func": [79, 199], "gsdemodul": 79, "short": 80, "discrep": [80, 128, 129, 130, 131, 134, 135], "imposs": 80, "probabilistictdmodul": [83, 101, 113, 137, 142, 158], "next_tensordict": [84, 194], "keep_oth": 84, "exclude_reward": 84, "exclude_don": 84, "exclude_act": 84, "_run_check": 84, "reflect": [84, 164], "renam": [84, 194], "next_": 84, "funtion": 84, "td_out": [84, 153, 161], "make_polici": 84, "next_td": 84, "next_observ": [84, 100, 197], "translat": [85, 108], "td_modul": [85, 86, 87, 88, 108, 112, 113, 115, 119, 199, 202], "actor": [86, 87, 88, 89, 91, 93, 97, 98, 108, 109, 121, 122, 128, 129, 130, 134, 135, 136, 137, 167, 170, 172, 175, 177, 180, 188, 194, 195, 202], "critic": [86, 128, 129, 134, 135, 137, 199], "get_policy_oper": [86, 87, 88, 167, 175, 199], "alon": [86, 87, 88], "tdmodul": [86, 87, 88, 182], "get_critic_oper": [86, 199], "common_oper": [86, 88], "produc": [86, 88, 90, 101, 107, 201], "policy_oper": [86, 87, 88], "value_oper": [86, 87, 88], "probabilisticactor": [86, 87, 88, 137, 188, 194], "valueoper": [86, 87, 88, 128, 129, 134, 135, 182, 188, 194, 199], "tanhnorm": [86, 87, 88, 108, 115, 188, 199, 202], "normalparamwrapp": [86, 87, 88, 108, 115, 199, 202], "spec_hidden": [86, 88], "module_hidden": [86, 88, 199], "td_module_hidden": [86, 88, 199], "spec_act": [86, 88], "module_act": [86, 88, 199], "td_module_act": [86, 87, 88, 199], "dist_in_kei": [86, 87, 88, 108, 115], "sample_out_kei": [86, 88, 115], "distribution_class": [86, 87, 88, 108, 113, 115, 194, 199, 202], "return_log_prob": [86, 87, 88, 113, 115, 199, 202], "module_valu": [86, 87, 88, 199], "num_cel": [86, 90, 91, 92, 93, 94, 98, 99, 101, 194, 195, 199, 202], "td_module_valu": [86, 87, 88, 199], "state_action_valu": [86, 119, 142, 170, 177, 180, 182, 194, 199, 202], "td_clone": [86, 87, 88, 199], "clone": [86, 87, 88, 112, 167, 175, 177, 180, 194, 195, 199, 200, 202], "sample_log_prob": [86, 87, 88, 113, 115, 167, 175, 177, 199], "tensordictmodulewrapp": [86, 168, 169, 182], "estim": [86, 87, 88, 128, 129, 134, 135, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 194, 195], "get_value_oper": [86, 87, 88, 167, 175], "action_modul": 87, "state_valu": [87, 88, 119, 143, 144, 145, 146, 147, 148, 150, 151, 167, 175, 180, 194], "safesequenti": [87, 88, 188], "planning_horizon": 89, "optim_step": [89, 200], "num_candid": 89, "num_top_k_candid": 89, "reward_kei": 89, "action_kei": [89, 102], "cross": 89, "entropi": [89, 128, 129, 134, 135, 136, 137], "botev": 89, "et": [89, 199], "al": [89, 172, 199, 201], "2013": 89, "cem": 89, "plan": [89, 102], "unit": [89, 98, 105, 106, 110, 111], "varianc": [89, 117, 118], "cumul": 89, "rank": 89, "top": 89, "k": [89, 195, 199, 200], "episod": [89, 146, 147, 148, 149, 150, 151, 152, 195], "repeat": 89, "maximis": [89, 91, 93, 194], "horizon": 89, "modelbasedenv": 89, "mpc": [89, 102], "planner": [89, 188], "candid": 89, "modelbasedenvbas": [89, 102, 188], "next_hidden_observ": 89, "elu": [90, 91, 92, 93, 94, 98, 99, 195, 202], "activation_kwarg": [90, 101], "norm_class": [90, 91, 92, 101], "norm_kwarg": [90, 101], "bias_last_lay": [90, 91, 92, 93, 94, 99, 101], "aggregator_class": [90, 91, 92, 195, 202], "squashdim": [90, 91, 202], "aggregator_kwarg": [90, 91, 92, 195], "squeeze_output": [90, 91, 92, 195], "convolut": [90, 91, 92], "neural": [90, 112, 195, 199, 201], "len": [90, 101, 194, 195, 200, 202], "cell": [90, 101, 194], "kernel": [90, 99, 100], "tanh": [90, 101, 116, 117, 118, 194], "squeez": [90, 195, 200], "singleton": [90, 101], "device_typ": [90, 91, 92, 93, 94, 99, 101, 103, 104], "cnet": 90, "34": [90, 101], "35": [90, 101], "possibli": [90, 112, 162, 194, 201], "rectangular": 90, "conv_net_kwarg": [91, 92], "mlp_net_kwarg": [91, 92, 93], "use_avg_pool": [91, 92], "WITH": [91, 92, 93, 94, 138, 170], "1509": [91, 92, 93, 94, 133, 138, 170], "02971": [91, 92, 93, 94, 138, 170], "convnet": [91, 188, 202], "ndims_in": 91, "avgpool": [91, 92], "128": [92, 194, 198, 201], "adaptiveavgpool2d": [92, 195], "400": [93, 94, 195], "300": [93, 94, 167, 175], "mlp_net_kwargs_net1": 94, "mlp_net_kwargs_net2": 94, "atol": [95, 116], "06": [95, 116, 194], "rtol": [95, 116], "batch_shap": [95, 116], "event_shap": [95, 116], "absolut": [95, 116], "toler": [95, 116], "log_prob": [95, 107, 118], "log": [95, 107, 113, 118, 128, 129, 132, 134, 135, 136, 137, 155, 156, 158, 162, 182, 192, 195, 199, 202], "probabl": [95, 107, 113, 118, 195, 199, 202], "densiti": [95, 107, 118], "mass": [95, 107, 118], "rsampl": [95, 107, 113], "sample_shap": [95, 107], "reparameter": [95, 107], "dqnet": 96, "atom": 96, "action_spac": [97, 109, 121, 122], "one_hot": [97, 109, 121, 122], "onehotdiscretetensorspec": [97, 109, 121, 122, 188], "nbin": [97, 121], "qvalue_actor": [97, 109, 121, 122], "std_bia": 98, "std_min_val": 98, "stochast": [98, 104, 105, 111, 136, 137], "belief": [98, 105, 110, 111], "1912": 98, "016034": 98, "softplu": [98, 125, 126, 127], "out_features_valu": 99, "cnn_kwarg": [99, 195], "mlp_kwarg": [99, 100, 195], "duel": [99, 195], "cnn": [99, 195, 202], "06581": 99, "512": 99, "lstm_kwarg": 100, "embedd": 100, "lstm": 100, "time_step": 100, "2d": 100, "hidden_s": 100, "input_s": 100, "hidden0_in": 100, "hidden1_in": 100, "hidden0_out": 100, "hidden1_out": 100, "single_bias_last_lay": 101, "layer_class": 101, "layer_kwarg": 101, "perceptron": 101, "seamless": 101, "though": 101, "reshap": [101, 200], "lazylinear": 101, "42": [101, 162], "noisylinear": [101, 103, 188, 195], "noisylazylinear": [101, 188], "At": [102, 197], "mpcplanner": 102, "tensordict_out": [102, 199, 201], "std_init": [103, 104], "noisi": [103, 104, 120], "term": [103, 104, 127, 128, 163, 195], "matrix": [103, 104], "ax": [103, 104], "initialize_paramet": 103, "isol": 103, "1706": 104, "10295v3": 104, "induc": 104, "aid": 104, "descent": 104, "remain": 104, "emploi": 104, "decod": [105, 199], "1803": [105, 106], "10122": [105, 106], "rnn_hidden": 105, "latent": 106, "logit": 107, "prob": 107, "One": [107, 112, 139, 194, 199, 200, 201], "excacli": 107, "probabilist": [108, 199, 202], "functional_modul": [108, 109, 112, 115, 119, 121, 122], "make_funct": [108, 109, 112, 115, 119, 121, 122, 123, 195, 199, 202], "tensordict_modul": [108, 109, 115, 121, 122, 123, 124, 198, 199], "hidden_dim": [110, 111], "scale_lb": [110, 111], "posterior": 110, "rssm": [110, 111], "1811": [110, 111], "04551": [110, 111], "obs_embed": 110, "rnn_hidden_dim": 111, "prior": 111, "dream": 111, "recurr": 111, "functionalmodul": [112, 123], "functionalmodulewithbuff": [112, 123], "character": 112, "overflow": [112, 113], "grucel": [112, 199], "td_fmodul": 112, "td_function": 112, "td_state": 112, "vmap": [112, 115, 195, 199, 202], "expand": [112, 115, 199, 202], "isn": 112, "ensembl": [112, 136], "params_repeat": 112, "td_vmap": [112, 115], "irrespect": [112, 113], "random_sampl": [112, 113], "tensor_spec": 113, "default_interaction_mod": [113, 199], "distribution_kwarg": [113, 194], "cache_dist": 113, "n_empirical_estim": 113, "probabilistictensordictmodul": [113, 114, 202], "rule": [113, 199], "interaction_mod": 113, "get_dist": [113, 114, 199], "__call__": [113, 192, 199], "real": 113, "median": 113, "suppli": 113, "fist": 113, "set_interaction_mod": 113, "diverg": [113, 134], "ppo": [113, 129, 134, 135, 167, 174, 175, 188], "partial_toler": [114, 115, 197], "probabilistictensordictsequenti": [114, 199, 202], "tensordictsequenti": [114, 197, 202], "expos": [114, 199], "recov": [114, 197], "who": [114, 115], "AND": [114, 115], "scan": [114, 115], "sub": [114, 115, 153, 162, 197, 201, 202], "tensordictsequenci": 115, "tensordictsequ": 115, "safeprobabilisticmodul": [115, 188], "spec1": 115, "net1": 115, "module1": 115, "td_module1": 115, "spec2": 115, "module2": 115, "td_module2": 115, "ndunboundedcontinuoustensorspec": 115, "min": [116, 117, 118, 129, 136, 137, 194, 195], "event_dim": [116, 117], "upscal": [117, 118], "tanh_loc": [117, 118], "prevent": [117, 118, 134, 135, 194], "tanhtransform": 117, "ultim": [117, 118], "unstabl": [117, 118], "poor": [117, 118], "explos": [117, 118], "practic": [117, 118, 127, 189, 195, 201], "switch": [117, 118], "sigma": [117, 118], "formula": [117, 118, 129, 134, 135], "custommodul": [119, 124], "cat": [119, 194, 200, 202], "var_num": [121, 122], "regard": [121, 128, 132, 135, 200], "perspect": [121, 132], "1707": [121, 132, 135, 167, 175], "06887": [121, 132], "mult_one_hot": [121, 122], "customdistributionalqv": 121, "log_softmax": 121, "greedi": [122, 195], "_src": 123, "wrapper_typ": 123, "mislead": 124, "other_kei": 124, "typeerror": 124, "min_val": [125, 127], "bias": [125, 194], "_bia": 125, "invert": 126, "surject": 127, "exp": 127, "expln": 127, "biased_softplu": [127, 188], "beggin": 127, "biased_softplus_": 127, "syntax": [127, 194], "condit": 127, "met": 127, "safeprobabilisticsequenti": [128, 129, 134, 135, 168, 169, 188], "advantage_kei": [128, 129, 134, 135, 143, 144, 145], "value_target_kei": [128, 135, 143, 144, 145], "value_target": [128, 135, 143, 144, 145], "entropy_bonu": [128, 129, 134, 135], "samples_mc_entropi": [128, 129, 134, 135], "entropy_coef": [128, 129, 134, 135], "critic_coef": [128, 129, 134, 135], "loss_critic_typ": [128, 129, 134, 135], "smooth_l1": [128, 129, 130, 131, 134, 135, 136, 137, 139], "a2c": [128, 166, 188], "loss": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 157, 162, 166, 171, 173, 174, 176, 177, 179, 182, 192, 194, 195, 200, 202], "reli": [128, 194, 201], "1602": 128, "01783v2": 128, "advantage_diff_kei": 128, "advantage_diff": 128, "value_error": [128, 143, 144, 145], "loss_function_typ": 128, "l1": [128, 129, 130, 131, 134, 135, 136, 139, 195], "l2": [128, 129, 130, 131, 134, 135, 136, 139], "advantage_modul": 128, "tha": 128, "throughout": [128, 129, 132, 134, 135, 136, 137, 201], "essenti": [128, 129, 132, 134, 135, 136, 137, 194, 200], "backpropag": [128, 129, 132, 134, 135, 136, 137], "clip_epsilon": 129, "threshold": 129, "bonu": [129, 134, 135], "favour": [129, 134, 135], "exploratori": [129, 134, 135], "mont": [129, 134, 135], "carlo": [129, 134, 135], "multipli": [129, 134, 135, 136, 137, 194], "loss_funct": [129, 130, 131, 135, 136, 137, 139], "actor_network": [130, 136, 137], "value_network": [130, 131, 132, 137, 143, 144, 145], "delay_actor": [130, 137], "delay_valu": [130, 131, 132, 137], "input_tensordict": [130, 131, 132], "assign": [130, 131, 194, 199], "qvalueactor": [131, 188, 195], "distributionalqvalueactor": [132, 188], "unlik": [132, 135, 199, 200, 202], "disctount": 132, "loss_modul": [133, 138, 162, 181, 182, 192, 200], "dqnloss": [133, 138, 173, 188], "ddpgloss": [133, 138, 171, 182, 188, 202], "sacloss": [133, 138, 179, 188], "value_network_update_interv": 133, "contrast": 133, "soft": [133, 137, 138], "06461": 133, "dtarg": 134, "decrement": 134, "samples_mc_kl": 134, "kl": 134, "penalti": 134, "old_polici": 134, "new_polici": 134, "adapt": 134, "old": [134, 201], "thu": 134, "distanc": [134, 139, 142, 143], "apart": 134, "proxim": [135, 167, 175], "optimis": [135, 158], "flavour": [135, 194, 202], "constrain": 135, "clipppoloss": [135, 188], "klpenppoloss": [135, 188], "regularis": 135, "06347": [135, 167, 175], "qvalue_network": [136, 137], "num_qvalue_net": [136, 137], "sub_sample_len": 136, "priotity_kei": [136, 137], "alpha_init": [136, 137], "min_alpha": [136, 137], "max_alpha": [136, 137], "fixed_alpha": [136, 137], "target_entropi": [136, 137], "auto": [136, 137], "delay_qvalu": [136, 137], "redq": [136, 176, 177, 188], "openreview": [136, 177], "ay8zfzm0tdd": [136, 177], "idea": [136, 192, 195, 200], "sac": [136, 137, 179, 180, 188], "subsampl": [136, 153, 192], "know": [136, 158, 194, 195, 202], "1801": [137, 180], "01290": [137, 180], "qvalue_network_bi": 137, "prod": 137, "n_action": 137, "redqloss": [138, 188], "999": [138, 160, 195], "epsilon": [138, 195], "prev_param": 138, "new_param": 138, "v2": [139, 148, 149, 151, 152, 167, 170, 175, 177, 180], "strict_shap": 139, "view_a": 139, "hold": [140, 141], "next_val_kei": 142, "pred_next_v": 142, "usus": 142, "mse": [142, 195], "q_valu": 142, "target_valu": 142, "n_steps_to_next": 142, "value_next_st": 142, "lmbda": [143, 145, 146, 148, 149, 150, 151, 152, 194, 195], "average_ga": 143, "differenti": [143, 144, 145, 194], "value_kei": [143, 144, 145], "dimension": [143, 146, 147, 150], "1506": [143, 146, 147, 150], "02438": [143, 146, 147, 150], "exponenti": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 160], "propag": [143, 144, 145], "throught": [143, 144, 145], "advang": 143, "gradient_mod": 143, "sign": 143, "unused_arg": 143, "target_param": [143, 144, 145], "relev": [143, 144, 145], "value_net": [143, 144, 145], "98": [143, 144, 145], "94": [143, 145], "unpack": [143, 144, 145], "average_reward": [144, 145], "next_state_valu": [146, 147, 148, 149, 150, 151, 152, 188], "old_stat": [146, 147, 148, 150, 151], "timestep": [146, 147, 148, 149, 150, 151, 152, 195], "new_stat": [146, 147, 148, 149, 150, 151, 152], "flag": [146, 147, 148, 149, 150, 151, 152], "rolling_gamma": [148, 149, 151, 152], "ti": [148, 149, 151, 152], "event": [148, 149, 151, 152], "g1": [148, 149, 151, 152], "g2": [148, 149, 151, 152], "g3": [148, 149, 151, 152], "g4": [148, 149, 151, 152], "v3": [148, 149, 151, 152], "v4": [148, 149, 151, 152, 194], "upcom": [148, 149, 151, 152, 194], "sub_traj_len": 153, "min_sub_traj_len": 153, "full": [153, 194, 195, 197, 199, 200, 201, 202], "20": [153, 194, 195, 201], "register_op": [153, 154, 155, 156, 157, 160, 161, 163, 192], "process_optim_batch": [153, 160, 192], "_process_optim_batch_hook": [153, 192], "interv": [154, 163, 195], "clear": 154, "clear_cuda": 154, "pre_optim_step": [154, 192], "counter": [155, 192], "log_pbar": [155, 156, 158, 160, 192], "progress": [155, 156, 158, 162, 192, 201], "bar": [155, 156, 158, 162, 192], "count_fram": 155, "pre_steps_log": [155, 156, 192], "lognam": 156, "r_train": 156, "logger": [156, 158, 162, 182, 186, 192], "log_reward": 156, "loss_compon": 157, "appl": 157, "omit": [157, 195], "loss_": 157, "optimizer_hook": 157, "loss_actor": 157, "record_interv": [158, 194], "record_fram": [158, 164, 194], "policy_explor": [158, 182, 194], "log_kei": 158, "suffix": 158, "underestim": 158, "suppos": [158, 192, 199, 200, 201], "set_exploration_mod": [158, 188, 194, 195, 202], "reward_evalu": 158, "video": [158, 186, 195], "reward_norm": 160, "batch_process": [160, 161, 192], "update_reward_stat": 160, "normalize_reward": 160, "make_train": [161, 188], "_process_batch_hook": [161, 192], "versatil": 162, "lossmodul": [162, 181, 182], "optim_steps_per_batch": [162, 192, 194], "epoch": 162, "clip_grad_norm": 162, "norm": [162, 195], "partial": [162, 202], "deriv": 162, "clamp": 162, "clip_norm": 162, "progress_bar": 162, "tqdm": [162, 194, 195], "save_trainer_interv": 162, "disk": [162, 192, 195], "10000": [162, 195], "save_trainer_fil": [162, 192], "_datacollector": [163, 168, 169, 182], "update_weights_interv": 163, "sit": [163, 195], "sync": [163, 182, 192, 194, 202], "update_weight": 163, "post_step": [163, 192], "helper": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 194, 202], "cfg": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186], "dictconfig": [164, 165, 167, 168, 169, 170, 172, 175, 177, 178, 180, 181, 182, 183, 186], "correct": [164, 195], "divid": 164, "unknowingli": 164, "1m": 164, "annealing_fram": [164, 194], "init_env_step": [164, 165, 194], "proof_environ": [165, 167, 170, 172, 175, 177, 180, 194], "sta": 165, "ot": 165, "a2closs": [166, 188], "in_keys_actor": [167, 175], "observation_kei": [167, 175, 177, 180], "actorvalueoper": [167, 175, 188, 199], "dummi": [167, 170, 172, 175, 177, 180, 201], "join": [167, 175], "actorcriticoper": [167, 175, 188], "parser_env_arg": [167, 175, 177], "make_ppo_model": [167, 188], "parser_model_args_continu": [167, 175, 177, 180], "cattensor": [167, 170, 175, 177, 180, 188, 194, 195, 197, 201], "hydra": [167, 170, 172, 175, 177, 180], "config_stor": [167, 170, 172, 175, 177, 180], "configstor": [167, 170, 172, 175, 177, 180], "dataclass": [167, 170, 172, 175, 177, 180], "halfcheetah": [167, 170, 175, 177, 180, 194], "config_field": [167, 170, 172, 175, 177, 180], "config_cl": [167, 170, 172, 175, 177, 180], "ppomodelconfig": [167, 175], "envconfig": [167, 170, 172, 175, 177, 180], "make_dataclass": [167, 170, 172, 175, 177, 180], "cls_name": [167, 170, 172, 175, 177, 180], "config_path": [167, 170, 172, 175, 177, 180], "config_nam": [167, 170, 172, 175, 177, 180], "actor_valu": [167, 175], "17": [167, 170, 175, 177, 180, 194], "actor_model_explor": [168, 169, 194], "make_env_kwarg": [168, 169], "creator": [168, 169, 184, 185, 186], "actor_net_kwarg": [170, 177, 180], "value_net_kwarg": [170, 180], "modulelist": [170, 177, 180], "ddpgcnnactor": [170, 188], "ddpgmlpactor": [170, 188], "ddpgcnnqnet": [170, 188], "ddpgmlpqnet": [170, 188], "ddpgmodelconfig": 170, "targetnetupdat": [171, 173, 176, 179, 181, 182], "discretemodelconfig": 172, "pong": [172, 201], "v5": [172, 201], "pixels_onli": [172, 194, 195, 201, 202], "210": [172, 201], "160": [172, 201], "ppoloss": [174, 188], "redqloss_deprec": 176, "qvalue_net_kwarg": [177, 180], "qvalu": [177, 180, 194, 195], "redqmodelconfig": 177, "replayargsconfig": 178, "sacmodelconfig": 180, "target_net_updat": 182, "constitu": 182, "learnt": [182, 195], "tempfil": 182, "tensorboardlogg": 182, "tensordictreplaybuff": [182, 188, 194, 195], "egreedywrapp": [182, 195], "env_proof": 182, "obs_spec": 182, "net_valu": 182, "dir": [182, 192], "gettempdir": 182, "exp_nam": [182, 194], "argpars": [183, 186], "namespac": [183, 186], "parser": [183, 186], "transformed_env_constructor": [183, 188], "env_kwarg": [184, 185, 194], "num_env_per_collector": [184, 185], "num_collector": [184, 185], "less": [184, 185, 194, 195, 202], "video_tag": 186, "norm_obs_onli": 186, "use_env_cr": 186, "custom_env_mak": 186, "custom_env": 186, "return_transformed_env": 186, "action_dim_gsd": 186, "state_dim_gsd": 186, "batch_dim": [186, 200], "obs_norm_state_dict": 186, "wheter": 186, "maker": [186, 194], "overrid": 186, "exclus": 186, "my": [187, 196], "asyncdatacollector": 188, "tensordictprioritizedreplaybuff": [188, 194, 202], "remotetensordictreplaybuff": 188, "prioritizedsampl": 188, "binarydiscretetensorspec": 188, "multonehotdiscretetensorspec": 188, "discretetensorspec": 188, "multistep": [188, 194, 195], "gymlikeenv": 188, "centercrop": 188, "grayscal": [188, 195, 201], "flattenobserv": 188, "unsqueezetransform": 188, "observationtransform": 188, "catfram": [188, 195], "finitetensordictcheck": 188, "noopresetenv": [188, 201, 202], "binarizereward": 188, "pinmemorytransform": 188, "gsdenois": 188, "tensordictprim": 188, "r3mtransform": 188, "viptransform": 188, "viprewardtransform": 188, "step_mdp": [188, 194, 195, 201, 202], "get_available_librari": 188, "dreamerenv": 188, "dmcontrolenv": [188, 194, 197, 201], "dmcontrolwrapp": 188, "jumanjienv": 188, "jumanjiwrapp": 188, "actorcriticwrapp": [188, 199], "is_tensordict_compat": 188, "ensure_tensordict_compat": 188, "qvaluehook": 188, "distributionalqvaluehook": 188, "duelingcnndqnet": [188, 195], "distributionaldqnnet": 188, "lstmnet": 188, "dreameractor": 188, "obsencod": 188, "obsdecod": 188, "rssmprior": 188, "rssmposterior": 188, "reset_nois": 188, "cemplann": 188, "mpcplannerbas": 188, "truncatednorm": 188, "tanhdelta": [188, 194], "onehotcategor": 188, "inv_softplu": 188, "distributionaldqnloss": [188, 195], "gae": 188, "tdlambdaestim": 188, "tdestim": 188, "generalized_advantage_estim": 188, "vec_generalized_advantage_estim": 188, "vec_td_lambda_return_estim": 188, "vec_td_lambda_advantage_estim": [188, 194, 195], "td_lambda_return_estim": 188, "td_lambda_advantage_estim": 188, "td_advantage_estim": 188, "distance_loss": 188, "hold_out_net": [188, 194], "hold_out_param": 188, "softupd": [188, 194], "hardupd": [188, 194], "checkpoint": 188, "batchsubsampl": [188, 192], "countframeslog": 188, "logreward": [188, 192], "optimizerhook": 188, "rewardnorm": 188, "selectkei": [188, 192], "updateweight": [188, 192], "clearcudacach": 188, "builder": [188, 195, 201], "sync_sync_collector": 188, "sync_async_collector": 188, "make_collector_offpolici": 188, "make_collector_onpolici": 188, "parallel_env_constructor": [188, 194], "make_sac_loss": 188, "make_a2c_loss": 188, "make_dqn_loss": 188, "make_ddpg_loss": 188, "make_target_updat": 188, "make_ppo_loss": 188, "make_redq_loss": 188, "make_dqn_actor": 188, "make_ddpg_actor": [188, 194], "make_a2c_model": 188, "make_sac_model": 188, "make_redq_model": 188, "make_replay_buff": [188, 194], "correct_for_frame_skip": 188, "get_stats_random_rollout": [188, 194], "implement_for": 188, "journei": 189, "guid": [189, 194, 195], "textbook": 189, "highlight": 189, "readi": [189, 197], "ever": 189, "cover": [189, 202], "bump": 189, "think": [189, 201], "commun": [189, 201], "benefit": 189, "submit": [189, 202], "pr": 189, "outer": [192, 194, 201], "believ": 192, "scheme": [192, 201], "substenti": 192, "sketch": 192, "_pre_steps_log_hook": 192, "_pre_optim_hook": 192, "sub_batch": 192, "_post_loss_hook": 192, "post_loss": 192, "_post_optim_hook": 192, "post_optim": 192, "_post_optim_log": 192, "post_optim_log": 192, "_post_steps_hook": 192, "_post_steps_log_hook": 192, "post_steps_log": 192, "comment": [192, 202], "categori": 192, "extens": 192, "replaybuffertrain": 192, "reserv": 192, "trainerhookbas": 192, "three": [192, 195], "logginghook": 192, "logging_hook": 192, "save_dict": 192, "some_valu": 192, "els": [192, 194, 195], "torchsnapshot": 192, "ckpt_backend": 192, "py": [192, 194, 195, 197, 198, 199, 200, 201, 202], "wherea": [192, 194, 199], "pt": [192, 195], "filepath": 192, "select_kei": 192, "save_train": 192, "load_from_fil": 192, "perfectli": 192, "intern": 193, "click": [194, 195, 197, 199, 200, 201, 202], "tutori": [194, 195, 197, 198, 199, 201, 202], "scratch": [194, 195], "familiar": [194, 195, 201], "suffici": [194, 195], "transpar": [194, 195], "understood": [194, 195], "understand": [194, 195], "sota": [194, 195, 202], "rather": [194, 195], "illustr": [194, 195], "deepcopi": 194, "matplotlib": [194, 195, 201], "pyplot": [194, 195, 201], "plt": [194, 195, 201], "ornsteinuhlenbeckprocesswrapp": 194, "wish": 194, "env_librari": 194, "env_task": 194, "env_arg": 194, "elif": [194, 195], "notimplementederror": 194, "rescal": 194, "leav": 194, "make_transformed_env": 194, "reward_sc": 194, "double_to_float_list": 194, "double_to_float_inv_list": 194, "dmcontrol": 194, "downstream": 194, "_stat": 194, "leverag": [194, 201], "adopt": [194, 201], "env_per_collector": 194, "env_creat": 194, "parallel_env": [194, 201, 202], "td_stat": 194, "_td_stat": 194, "numel": 194, "_td_stats_select": 194, "to_tensordict": [194, 195, 200], "got": [194, 200], "isfinit": 194, "sd": 194, "get_env_stat": 194, "proof_env": 194, "env_spec": 194, "actor_net": 194, "num_lay": 194, "actor_modul": [194, 202], "q_net": 194, "qnet": 194, "frequenc": 194, "make_record": 194, "recorder_obj": 194, "higher": [194, 195, 201], "likelihood": 194, "special": [194, 199, 201], "arrai": 194, "prb": 194, "buffer_s": [194, 195], "buffer_scratch_dir": 194, "adjust": 194, "device_count": [194, 195, 201], "1000000": 194, "ou": 194, "becom": [194, 201], "lr": [194, 195], "5e": 194, "weight_decai": 194, "5000": 194, "warm": 194, "tau": [194, 195], "005": [194, 195], "tmp": 194, "n_steps_forward": 194, "semin": 194, "ornstein": 194, "uhlenbeck": 194, "qnet_target": 194, "annealing_num_step": [194, 195], "9152e": 194, "3728e": 194, "00": [194, 198], "6790e": 194, "02": 194, "8100e": 194, "0432e": 194, "4661e": 194, "7335e": 194, "6330e": 194, "3439e": 194, "04": [194, 198], "3564e": 194, "1885e": 194, "4405e": 194, "1127e": 194, "9993e": 194, "7058e": 194, "7317e": 194, "3022e": 194, "2335": 194, "3836": 194, "3375": 194, "3587": 194, "3461": 194, "4445": 194, "3917": 194, "3489": 194, "5510": 194, "5761": 194, "1731": 194, "4106": 194, "3918": 194, "0521": 194, "4038": 194, "4419": 194, "9479": 194, "coupl": 194, "async": [194, 202], "transmiss": 194, "3018685293": 194, "adam": [194, 195], "optimizer_actor": 194, "optimizer_qnet": 194, "total_collection_step": 194, "scheduler1": 194, "lr_schedul": 194, "cosineannealinglr": 194, "t_max": 194, "scheduler2": 194, "temporarili": 194, "henc": 194, "word": [194, 201], "Then": [194, 197], "fed": 194, "hood": 194, "metadata": [194, 201], "ommit": 194, "earli": [194, 202], "rewards_ev": 194, "norm_factor_train": 194, "collected_fram": 194, "pbar": [194, 195], "r0": 194, "filter": 194, "current_fram": [194, 195], "sampled_tensordict": 194, "backprop": 194, "next_valu": [194, 195], "value_est": 194, "value_loss": 194, "pow": [194, 195], "sampled_tensordict_actor": 194, "actor_loss": 194, "p_in": 194, "p_dest": 194, "zip": [194, 196], "copy_": 194, "b_in": 194, "b_dest": 194, "td_record": 194, "r_evalu": 194, "set_descript": [194, 195], "4f": [194, 195], "2500": 194, "330": 194, "69it": 194, "memmapstorag": 194, "m0j04bc6": 194, "057220458984375": 194, "mb": [194, 198], "1v1iur4": 194, "002384185791015625": 194, "mt_au9r": 194, "0095367431640625": 194, "8wv1zvq6": 194, "sx1rjtca": 194, "xroure7u": 194, "w0e3ids2": 194, "1621246337890625": 194, "cjzodv4": 194, "rrxu_w9j": 194, "r3onyyko": 194, "5h68kck5": 194, "019073486328125": 194, "steps_to_next_ob": [194, 195], "z8laofbi": 194, "zps6b2qy": 194, "tmpcvh7zn5m": 194, "2201": 194, "3075": 194, "7563": 194, "40": [194, 198], "07": 194, "187": 194, "75it": 194, "1917": 194, "60": [194, 202], "1500": 194, "237": 194, "21it": 194, "4095": 194, "80": 194, "342": 194, "82it": 194, "3090": 194, "339": [194, 199], "11it": 194, "1454": 194, "09": 194, "plot": [194, 195], "mention": [194, 195, 201], "figur": [194, 195, 199, 201], "label": [194, 195, 200], "legend": [194, 195], "xlabel": [194, 195], "ylabel": [194, 195], "tight_layout": [194, 195], "250": 194, "devid": 194, "100000": [194, 195], "batch_size_traj": 194, "simplic": [194, 199], "23": 194, "td_lambda": 194, "95": [194, 195], "roughli": [194, 202], "four": 194, "big": [194, 195, 201], "inde": [194, 200], "revert": 194, "compli": [194, 200], "incompat": [194, 200], "bit": 194, "rand_idx": 194, "8doffd55": 194, "1444091796875": 194, "uzg93nl": 194, "0476837158203125": 194, "jcf13syh": 194, "000762939453125": 194, "oocrrrb3": 194, "fh7s__t3": 194, "24249267578125": 194, "zylhdk9c": 194, "h8cq969y": 194, "19073486328125": 194, "h36qsne6": 194, "3814697265625": 194, "34d2ivgh": 194, "tmp_v3r7jky": 194, "titl": [194, 195], "labmda": 194, "text": 194, "minut": [194, 195, 197, 199, 200, 201, 202], "55": [194, 198], "294": [194, 198], "coding_ddpg": [194, 198], "jupyt": [194, 195, 196, 197, 199, 200, 201, 202], "ipynb": [194, 195, 197, 199, 200, 201, 202], "galleri": [194, 195, 196, 197, 199, 200, 201, 202], "sphinx": [194, 195, 196, 197, 199, 200, 201, 202], "cartpol": [195, 201], "tabl": 195, "pick": 195, "highest": 195, "discretiz": 195, "amort": 195, "seen": 195, "past": 195, "esitm": 195, "ipython": 195, "get_funct": [195, 199], "is_notebook": 195, "shell": 195, "get_ipython": 195, "__class__": 195, "__name__": 195, "zmqinteractiveshel": 195, "qtconsol": 195, "terminalinteractiveshel": 195, "nameerror": 195, "interpret": 195, "hyperparam": 195, "hopefulli": 195, "sentit": 195, "variat": 195, "2e": 195, "harder": [195, 202], "restrict": [195, 201], "n_optim": 195, "n_worker": 195, "smooth": 195, "loos": 195, "notic": 195, "eps_greedy_v": 195, "eps_greedy_val_env": 195, "05": 195, "predefin": 195, "init_bia": 195, "500000": 195, "techin": 195, "dummy_env": 195, "9915668368339539": 195, "08069734275341034": 195, "pole": 195, "un": 195, "actuat": 195, "cart": 195, "frictionless": 195, "upright": [195, 201], "balanc": [195, 201], "pixels_sav": 195, "eval_rollout": 195, "imageio": 195, "mimwrit": 195, "cartpole_random": 195, "mp4": 195, "fp": 195, "480": 195, "360": 195, "trick": 195, "num_ob": 195, "num_act": 195, "make_model": 195, "output_s": 195, "could": [195, 200, 201], "unflatten_kei": 195, "fairli": 195, "params_target": 195, "actor_explor": 195, "eps_init": 195, "eps_end": 195, "pai": 195, "attent": [195, 199], "params_flat": 195, "flatten_kei": 195, "params_target_flat": 195, "600": 195, "bootstrap": 195, "value_next_step": 195, "not_termin": 195, "significantli": 195, "data_collector": 195, "traj_lengths_ev": 195, "grad_val": 195, "traj_length": 195, "mavg": 195, "traj_count": 195, "prev_traj_count": 195, "enough": 195, "send": [195, 200, 202], "sampled_data": 195, "sampled_data_out": 195, "tdstep": 195, "exp_valu": 195, "mse_loss": 195, "gv": 195, "p": [195, 199], "sqrt": 195, "clip_grad_value_": 195, "p1": 195, "p2": 195, "set_": 195, "clear_output": 195, "gcf": 195, "clf": 195, "figsiz": 195, "15": 195, "subplot": [195, 201], "traj": 195, "savefig": 195, "dqn_td0": 195, "png": 195, "traceback": [195, 199, 202], "__w": [195, 199, 202], "doc": [195, 199, 202], "coding_dqn": [195, 198], "382": 195, "indexerror": 195, "imshow": [195, 201], "imread": 195, "axi": 195, "traj_lengths_train": 195, "saved_results_td0": 195, "entir": 195, "capac": 195, "smooth_l1_loss": 195, "clip_grad_norm_": 195, "dqn_tdlambda": 195, "saved_results_tdlambda": 195, "fewer": 195, "load_td0": 195, "load_tdlambda": 195, "frames_td0": 195, "frames_tdlambda": 195, "evals_td0": 195, "evals_tdlambda": 195, "mavgs_td0": 195, "mavgs_tdlambda": 195, "losses_td0": 195, "losses_tdlambda": 195, "values_td0": 195, "values_tdlambda": 195, "grad_vals_td0": 195, "grad_vals_tdlambda": 195, "traj_lengths_td0": 195, "traj_lengths_tdlambda": 195, "traj_count_td0": 195, "traj_count_tdlambda": 195, "td0": 195, "goe": [195, 201], "greatli": 195, "nth": 195, "noticebli": 195, "myopic": 195, "collectorclass": 195, "till": 195, "worst": 195, "accuraci": 195, "fanci": 195, "techniqu": 195, "230": [195, 198], "tutorials_python": 196, "tutorials_jupyt": 196, "distinct": 197, "humanoid": [197, 201], "walk": [197, 201], "env1": 197, "env1_obs_kei": 197, "observation_stand": 197, "env2": 197, "env2_obs_kei": 197, "observation_walk": 197, "tdreset1": 197, "tdreset2": 197, "tdreset": 197, "67": 197, "backbon": [197, 202], "policy_common": 197, "policy_stand": 197, "policy_walk": 197, "seq": 197, "21": 197, "But": 197, "env1_mak": 197, "env2_mak": 197, "_single_task": 197, "td_rollout": 197, "shown": 197, "361": [197, 198], "multi_task": [197, 198], "449": 198, "torch_env": [198, 201], "26": [198, 201], "torchrl_demo": [198, 202], "393": [198, 202], "tensordict_tutori": [198, 200], "022": [198, 200], "021": [198, 199], "recommand": 199, "conveni": [199, 200], "a_out": 199, "mergelinear": 199, "in_1": 199, "in_2": 199, "linear_1": 199, "linear_2": 199, "x_1": 199, "x_2": 199, "multiheadlinear": 199, "out_1": 199, "out_2": 199, "splitlinear": 199, "output_1": 199, "output_2": 199, "split_and_merge_linear": 199, "make_functional_with_buff": 199, "replica": 199, "params_expand": [199, 202], "buffers_expand": 199, "num_model": 199, "group": 199, "zeros_lik": 199, "result_td": 199, "ok": 199, "conflict": 199, "wire": 199, "tensordictsequentialand": 199, "block": 199, "demonstr": [199, 201], "architectur": 199, "vaswani": 199, "2017": 199, "asid": 199, "src": 199, "ffn": 199, "skiplayernorm": 199, "splithead": 199, "tokenstoqkv": 199, "modulenotfounderror": 199, "attentionblocktensordict": 199, "connect": 199, "moreov": 199, "complic": [199, 200, 201], "to_nam": 199, "from_nam": 199, "to_dim": 199, "to_len": 199, "from_dim": 199, "latent_dim": 199, "num_head": 199, "x_out": 199, "attn": 199, "thank": 199, "transformerblockencodertensordict": 199, "transformerblockdecodertensordict": 199, "token": 199, "extract": 199, "x_from": 199, "x_to": 199, "transformerencodertensordict": 199, "num_block": 199, "transformerdecodertensordict": 199, "transformertensordict": 199, "from_len": 199, "x_encod": 199, "x_decod": 199, "ve": 199, "operar": 199, "td_token": 199, "tdtransform": 199, "t1": 199, "t2": 199, "t3": 199, "t4": 199, "minim": 199, "introduc": [199, 200], "margin": 199, "deal": 200, "furthermor": 200, "awai": 200, "organ": 200, "power": 200, "segment": 200, "get_data_a": 200, "get_data_b": 200, "reusabl": 200, "lot": 200, "rewriten": 200, "modal": 200, "get_data": 200, "reus": 200, "argu": 200, "dictdataset": 200, "__getitem__": 200, "collat": 200, "collate_dict_fn": 200, "dict_list": 200, "final_dict": 200, "single_dict": 200, "simpler": 200, "collate_tensordict_fn": 200, "furtherdown": 200, "_permutedtensordict": 200, "_unsqueezedtensordict": 200, "_viewedtensordict": 200, "datastructur": 200, "explicitli": 200, "caramba": 200, "algebra": 200, "foo": [200, 201], "multidimension": 200, "insid": [200, 201], "violat": 200, "err": 200, "resp": 200, "among": 200, "tensordict_clon": 200, "tensodict": 200, "tuple_index": 200, "new_tensordict": 200, "get_sub_tensordict": 200, "subtensordict": 200, "pointer": 200, "subtd": 200, "td2": 200, "booltensor": 200, "fashion": 200, "clonned_tensordict": 200, "staked_tensordict": 200, "contigu": [200, 202], "isinst": 200, "unbind": 200, "list_tensordict": 200, "comeback": 200, "permut": [200, 201, 202], "unsqueezed_tensordict": 200, "role": 201, "supervis": 201, "unsupervis": 201, "rom": 201, "licens": 201, "pygam": 201, "unifi": 201, "_build_env": 201, "sphinx_gallery_start_ignor": 201, "warn": 201, "filterwarn": 201, "sphinx_gallery_end_ignor": 201, "adventur": 201, "ram": 201, "airraid": 201, "alien": 201, "amidar": 201, "assault": 201, "happen": 201, "continuousbox": 201, "tool": 201, "5900": 201, "pack": 201, "brief": 201, "exectut": 201, "brax": 201, "reproduct": 201, "did": 201, "shortcut": 201, "tensordict_tprim": 201, "tensordict_rollout": [201, 202], "quickli": 201, "axesimag": 201, "0x7f07468d9cf0": 201, "inconsist": 201, "supplementari": 201, "again": 201, "acrobot": 201, "swingup": 201, "swingup_spars": 201, "ball_in_cup": 201, "catch": 201, "balance_spars": 201, "three_pol": 201, "two_pol": 201, "finger": 201, "turn_easi": 201, "turn_hard": 201, "fish": 201, "swim": 201, "hopper": 201, "hop": 201, "run_pure_st": 201, "bring_bal": 201, "bring_peg": 201, "insert_bal": 201, "insert_peg": 201, "point_mass": 201, "reacher": 201, "swimmer": 201, "swimmer6": 201, "swimmer15": 201, "walker": 201, "dog": 201, "fetch": 201, "trot": 201, "humanoid_cmu": 201, "lqr": 201, "lqr_2_1": 201, "lqr_6_2": 201, "quadrup": 201, "escap": 201, "stacker": 201, "stack_2": 201, "stack_4": 201, "240": [201, 202], "320": 201, "env_transform": 201, "wrapper1": 201, "wrapper2": 201, "obviou": 201, "truth": 201, "extern": 201, "env0": 201, "env_transformed_bi": 201, "stanc": 201, "transformeddistribut": 201, "base_dist": 201, "unboundeddiscretetensorspec": 201, "concat": 201, "mofidi": 201, "_inv_apply_transform": 201, "_apply_transform": 201, "transformedenviron": 201, "moderet": 201, "computation": 201, "legitim": 201, "side": 201, "incom": 201, "amongst": 201, "has_cuda": 201, "simplest": 201, "wor": 201, "convention": 201, "program": 201, "scope": 201, "difficulti": 201, "markovian": 201, "reconstruct": 201, "3288080526": 201, "sometim": 201, "constain": 201, "sleep": 201, "uuid": 201, "uuid1": 201, "bar_": 201, "get_someth": 201, "bar_26d4962a": 201, "8a9d": 201, "11ed": 201, "80a2": 201, "0242ac120002": 201, "aargh": 201, "ourselv": 201, "foo_list": 201, "vec_env": 201, "_dispatch_caller_parallel": 201, "0x7f0737e8c6d0": 201, "bar_2a2d0a50": 201, "9e0d": 201, "bar_2a26c3f2": 201, "9d27": 201, "bar_2a3346f": 201, "8596": 201, "121": 201, "122": 201, "parallen": 201, "carefulli": 201, "commonli": 201, "approxim": 201, "particularili": 201, "evolv": 201, "caution": 201, "previous": 201, "steadi": 201, "approx": 201, "1458": 201, "3187": 201, "2112": 201, "0963": 201, "1105": 201, "1092": 201, "_extra_st": 201, "observation_count": 201, "observation_ssq": 201, "observation_sum": 201, "0478": 201, "1648": 201, "0974": 201, "0132": 201, "9566": 201, "0094": 201, "dispach": 201, "small": 201, "absor": 201, "18": 201, "demo": 202, "icml": 202, "dai": 202, "overview": 202, "vmoen": 202, "fb": 202, "question": 202, "team": 202, "decid": 202, "invest": 202, "platform": 202, "media": 202, "truli": 202, "rest": 202, "predominantli": 202, "wandb": 202, "tensorboard": 202, "tensordict1": 202, "tensordict2": 202, "tensordict_sampl": 202, "_sum_tre": 202, "28791671991348267": 202, "gym_env": 202, "0000": 202, "366": 202, "431": 202, "tensordict_reset": 202, "469": 202, "out_tensordict": 202, "681": 202, "2004": 202, "valueerror": 202, "myenv": 202, "othertransform": 202, "squash": 202, "backbone_modul": 202, "value_modul": 202, "tensordict_exp": 202, "base_modul": 202, "is_don": 202, "tensordicts_prealloc": 202, "tensordicts_stack": 202, "disclaim": 202, "concatmodul": 202, "loss_fn": 202, "loss_td": 202, "bug": 202, "bc": 202, "year": 202, "roadmap": 202, "compris": 202, "hierarch": 202, "contributor": 202, "curiou": 202, "feedback": 202, "nascent": 202, "pypi": 202}, "objects": {"torchrl._utils": [[10, 0, 1, "", "implement_for"]], "torchrl.collectors": [[11, 0, 1, "", "MultiSyncDataCollector"], [12, 0, 1, "", "MultiaSyncDataCollector"], [13, 0, 1, "", "SyncDataCollector"], [14, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.MultiSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[13, 1, 1, "", "iterator"], [13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "rollout"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[15, 2, 1, "", "split_trajectories"]], "torchrl.data": [[16, 0, 1, "", "BinaryDiscreteTensorSpec"], [17, 0, 1, "", "BoundedTensorSpec"], [18, 0, 1, "", "CompositeSpec"], [19, 0, 1, "", "DiscreteTensorSpec"], [20, 0, 1, "", "MultOneHotDiscreteTensorSpec"], [21, 0, 1, "", "MultiStep"], [22, 0, 1, "", "OneHotDiscreteTensorSpec"], [23, 0, 1, "", "PrioritizedReplayBuffer"], [24, 0, 1, "", "ReplayBuffer"], [25, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [26, 0, 1, "", "TensorDictReplayBuffer"], [27, 0, 1, "", "TensorSpec"], [28, 0, 1, "", "UnboundedContinuousTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[16, 1, 1, "", "assert_is_in"], [16, 1, 1, "", "encode"], [16, 1, 1, "", "index"], [16, 1, 1, "", "is_in"], [16, 1, 1, "", "project"], [16, 1, 1, "", "rand"], [16, 1, 1, "", "to_numpy"], [16, 1, 1, "", "type_check"], [16, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "keys"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.MultOneHotDiscreteTensorSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[21, 1, 1, "", "add_module"], [21, 1, 1, "", "apply"], [21, 1, 1, "", "bfloat16"], [21, 1, 1, "", "buffers"], [21, 1, 1, "", "children"], [21, 1, 1, "", "cpu"], [21, 1, 1, "", "cuda"], [21, 1, 1, "", "double"], [21, 1, 1, "", "eval"], [21, 1, 1, "", "extra_repr"], [21, 1, 1, "", "float"], [21, 1, 1, "", "forward"], [21, 1, 1, "", "get_buffer"], [21, 1, 1, "", "get_extra_state"], [21, 1, 1, "", "get_parameter"], [21, 1, 1, "", "get_submodule"], [21, 1, 1, "", "half"], [21, 1, 1, "", "ipu"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "modules"], [21, 1, 1, "", "named_buffers"], [21, 1, 1, "", "named_children"], [21, 1, 1, "", "named_modules"], [21, 1, 1, "", "named_parameters"], [21, 1, 1, "", "parameters"], [21, 1, 1, "", "register_backward_hook"], [21, 1, 1, "", "register_buffer"], [21, 1, 1, "", "register_forward_hook"], [21, 1, 1, "", "register_forward_pre_hook"], [21, 1, 1, "", "register_full_backward_hook"], [21, 1, 1, "", "register_load_state_dict_post_hook"], [21, 1, 1, "", "register_module"], [21, 1, 1, "", "register_parameter"], [21, 1, 1, "", "requires_grad_"], [21, 1, 1, "", "set_extra_state"], [21, 1, 1, "", "share_memory"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "to"], [21, 1, 1, "", "to_empty"], [21, 1, 1, "", "train"], [21, 1, 1, "", "type"], [21, 1, 1, "", "xpu"], [21, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[23, 1, 1, "", "add"], [23, 1, 1, "", "extend"], [23, 1, 1, "", "sample"], [23, 1, 1, "", "update_priority"]], "torchrl.data.ReplayBuffer": [[24, 1, 1, "", "add"], [24, 1, 1, "", "extend"], [24, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[25, 1, 1, "", "add"], [25, 1, 1, "", "extend"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "update_priority"]], "torchrl.data.TensorDictReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.rb_prototype": [[29, 0, 1, "", "RemoteTensorDictReplayBuffer"], [30, 0, 1, "", "ReplayBuffer"], [31, 0, 1, "", "TensorDictReplayBuffer"]], "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer": [[29, 1, 1, "", "add"], [29, 1, 1, "", "append_transform"], [29, 1, 1, "", "extend"], [29, 1, 1, "", "insert_transform"], [29, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer": [[30, 1, 1, "", "add"], [30, 1, 1, "", "append_transform"], [30, 1, 1, "", "extend"], [30, 1, 1, "", "insert_transform"], [30, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer": [[31, 1, 1, "", "add"], [31, 1, 1, "", "append_transform"], [31, 1, 1, "", "extend"], [31, 1, 1, "", "insert_transform"], [31, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.samplers": [[32, 0, 1, "", "PrioritizedSampler"], [33, 0, 1, "", "RandomSampler"], [34, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[32, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[35, 0, 1, "", "LazyMemmapStorage"], [36, 0, 1, "", "LazyTensorStorage"], [37, 0, 1, "", "ListStorage"], [38, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[35, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[36, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[39, 0, 1, "", "RoundRobinWriter"], [40, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[39, 1, 1, "", "add"], [39, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[40, 1, 1, "", "add"], [40, 1, 1, "", "extend"]], "torchrl.envs": [[41, 0, 1, "", "EnvBase"], [42, 0, 1, "", "GymLikeEnv"], [43, 2, 1, "", "ModelBasedEnvBase"], [44, 0, 1, "", "ParallelEnv"], [45, 0, 1, "", "SerialEnv"], [43, 1, 1, "", "rand_step"], [43, 1, 1, "", "reset"], [43, 1, 1, "", "rollout"], [43, 1, 1, "", "set_seed"], [43, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[41, 1, 1, "", "add_module"], [41, 1, 1, "", "apply"], [41, 3, 1, "", "batch_locked"], [41, 1, 1, "", "bfloat16"], [41, 1, 1, "", "buffers"], [41, 1, 1, "", "children"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 1, 1, "", "double"], [41, 1, 1, "", "eval"], [41, 1, 1, "", "extra_repr"], [41, 1, 1, "", "fake_tensordict"], [41, 1, 1, "", "float"], [41, 1, 1, "", "forward"], [41, 1, 1, "", "get_buffer"], [41, 1, 1, "", "get_extra_state"], [41, 1, 1, "", "get_parameter"], [41, 1, 1, "", "get_submodule"], [41, 1, 1, "", "half"], [41, 1, 1, "", "ipu"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "modules"], [41, 1, 1, "", "named_buffers"], [41, 1, 1, "", "named_children"], [41, 1, 1, "", "named_modules"], [41, 1, 1, "", "named_parameters"], [41, 1, 1, "", "parameters"], [41, 1, 1, "id0", "rand_step"], [41, 1, 1, "", "register_backward_hook"], [41, 1, 1, "", "register_buffer"], [41, 1, 1, "", "register_forward_hook"], [41, 1, 1, "", "register_forward_pre_hook"], [41, 1, 1, "", "register_full_backward_hook"], [41, 1, 1, "", "register_load_state_dict_post_hook"], [41, 1, 1, "", "register_module"], [41, 1, 1, "", "register_parameter"], [41, 1, 1, "", "requires_grad_"], [41, 1, 1, "id1", "reset"], [41, 1, 1, "id2", "rollout"], [41, 1, 1, "", "set_extra_state"], [41, 1, 1, "id3", "set_seed"], [41, 1, 1, "", "share_memory"], [41, 3, 1, "", "specs"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "id4", "step"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_empty"], [41, 1, 1, "", "train"], [41, 1, 1, "", "type"], [41, 1, 1, "", "xpu"], [41, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[42, 1, 1, "", "add_module"], [42, 1, 1, "", "apply"], [42, 3, 1, "", "batch_locked"], [42, 1, 1, "", "bfloat16"], [42, 1, 1, "", "buffers"], [42, 1, 1, "", "children"], [42, 1, 1, "", "close"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 1, 1, "", "double"], [42, 1, 1, "", "eval"], [42, 1, 1, "", "extra_repr"], [42, 1, 1, "", "fake_tensordict"], [42, 1, 1, "", "float"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_buffer"], [42, 1, 1, "", "get_extra_state"], [42, 1, 1, "", "get_parameter"], [42, 1, 1, "", "get_submodule"], [42, 1, 1, "", "half"], [42, 1, 1, "", "ipu"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "modules"], [42, 1, 1, "", "named_buffers"], [42, 1, 1, "", "named_children"], [42, 1, 1, "", "named_modules"], [42, 1, 1, "", "named_parameters"], [42, 1, 1, "", "parameters"], [42, 1, 1, "", "rand_step"], [42, 1, 1, "", "read_action"], [42, 1, 1, "", "read_done"], [42, 1, 1, "", "read_obs"], [42, 1, 1, "", "read_reward"], [42, 1, 1, "", "register_backward_hook"], [42, 1, 1, "", "register_buffer"], [42, 1, 1, "", "register_forward_hook"], [42, 1, 1, "", "register_forward_pre_hook"], [42, 1, 1, "", "register_full_backward_hook"], [42, 1, 1, "", "register_load_state_dict_post_hook"], [42, 1, 1, "", "register_module"], [42, 1, 1, "", "register_parameter"], [42, 1, 1, "", "requires_grad_"], [42, 1, 1, "", "reset"], [42, 1, 1, "", "rollout"], [42, 1, 1, "", "set_extra_state"], [42, 1, 1, "", "set_info_dict_reader"], [42, 1, 1, "", "set_seed"], [42, 1, 1, "", "share_memory"], [42, 3, 1, "", "specs"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "", "step"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_empty"], [42, 1, 1, "", "train"], [42, 1, 1, "", "type"], [42, 1, 1, "", "xpu"], [42, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 3, 1, "", "batch_locked"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "fake_tensordict"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "rand_step"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "reset"], [44, 1, 1, "", "rollout"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_seed"], [44, 1, 1, "", "share_memory"], [44, 3, 1, "", "specs"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "step"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "update_kwargs"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 3, 1, "", "batch_locked"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "fake_tensordict"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "share_memory"], [45, 3, 1, "", "specs"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "step"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "update_kwargs"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.dm_control": [[46, 2, 1, "", "DMControlEnv"], [47, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[48, 2, 1, "", "GymEnv"], [49, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[50, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[51, 2, 1, "", "JumanjiEnv"], [52, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.model_based.dreamer": [[53, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[54, 0, 1, "", "BinarizeReward"], [55, 0, 1, "", "CatFrames"], [56, 0, 1, "", "CatTensors"], [57, 0, 1, "", "CenterCrop"], [58, 0, 1, "", "Compose"], [59, 0, 1, "", "DoubleToFloat"], [60, 0, 1, "", "FiniteTensorDictCheck"], [61, 0, 1, "", "FlattenObservation"], [62, 0, 1, "", "GrayScale"], [63, 0, 1, "", "NoopResetEnv"], [64, 0, 1, "", "ObservationNorm"], [65, 0, 1, "", "ObservationTransform"], [66, 0, 1, "", "PinMemoryTransform"], [67, 0, 1, "", "R3MTransform"], [68, 0, 1, "", "Resize"], [69, 0, 1, "", "RewardClipping"], [70, 0, 1, "", "RewardScaling"], [71, 0, 1, "", "TensorDictPrimer"], [72, 0, 1, "", "ToTensorImage"], [73, 0, 1, "", "Transform"], [74, 0, 1, "", "TransformedEnv"], [75, 0, 1, "", "UnsqueezeTransform"], [76, 0, 1, "", "VIPRewardTransform"], [77, 0, 1, "", "VIPTransform"], [78, 0, 1, "", "VecNorm"], [79, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[54, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[55, 1, 1, "", "reset"], [55, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[56, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[57, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[58, 1, 1, "", "forward"], [58, 1, 1, "", "reset"], [58, 1, 1, "", "to"], [58, 1, 1, "", "transform_input_spec"], [58, 1, 1, "", "transform_observation_spec"], [58, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[59, 1, 1, "", "transform_input_spec"], [59, 1, 1, "", "transform_observation_spec"], [59, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.FlattenObservation": [[61, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[62, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[63, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[64, 1, 1, "", "init_stats"], [64, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[67, 1, 1, "", "forward"], [67, 1, 1, "", "reset"], [67, 1, 1, "", "to"], [67, 1, 1, "", "transform_input_spec"], [67, 1, 1, "", "transform_observation_spec"], [67, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Resize": [[68, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[69, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[70, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[71, 1, 1, "", "reset"], [71, 1, 1, "", "to"], [71, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[72, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[73, 1, 1, "", "forward"], [73, 1, 1, "", "reset"], [73, 1, 1, "", "transform_input_spec"], [73, 1, 1, "", "transform_observation_spec"], [73, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[74, 3, 1, "", "action_spec"], [74, 3, 1, "", "batch_locked"], [74, 1, 1, "", "eval"], [74, 3, 1, "", "input_spec"], [74, 1, 1, "", "load_state_dict"], [74, 3, 1, "", "observation_spec"], [74, 3, 1, "", "reward_spec"], [74, 1, 1, "", "set_seed"], [74, 1, 1, "", "state_dict"], [74, 1, 1, "", "to"], [74, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[75, 1, 1, "", "forward"], [75, 1, 1, "", "transform_input_spec"], [75, 1, 1, "", "transform_observation_spec"], [75, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[76, 1, 1, "", "forward"], [76, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[77, 1, 1, "", "forward"], [77, 1, 1, "", "reset"], [77, 1, 1, "", "to"], [77, 1, 1, "", "transform_input_spec"], [77, 1, 1, "", "transform_observation_spec"], [77, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VecNorm": [[78, 1, 1, "", "build_td_for_shared_vecnorm"], [78, 1, 1, "", "get_extra_state"], [78, 1, 1, "", "set_extra_state"], [78, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[79, 1, 1, "", "reset"]], "torchrl.envs.utils": [[80, 2, 1, "", "check_env_specs"], [81, 2, 1, "", "exploration_mode"], [82, 2, 1, "", "get_available_libraries"], [83, 2, 1, "", "set_exploration_mode"], [84, 2, 1, "", "step_mdp"]], "torchrl.modules": [[85, 0, 1, "", "Actor"], [86, 0, 1, "", "ActorCriticOperator"], [87, 0, 1, "", "ActorCriticWrapper"], [88, 0, 1, "", "ActorValueOperator"], [89, 0, 1, "", "CEMPlanner"], [90, 0, 1, "", "ConvNet"], [91, 0, 1, "", "DdpgCnnActor"], [92, 0, 1, "", "DdpgCnnQNet"], [93, 0, 1, "", "DdpgMlpActor"], [94, 0, 1, "", "DdpgMlpQNet"], [95, 0, 1, "", "Delta"], [96, 0, 1, "", "DistributionalDQNnet"], [97, 0, 1, "", "DistributionalQValueActor"], [98, 0, 1, "", "DreamerActor"], [99, 0, 1, "", "DuelingCnnDQNet"], [100, 0, 1, "", "LSTMNet"], [101, 0, 1, "", "MLP"], [102, 0, 1, "", "MPCPlannerBase"], [103, 0, 1, "", "NoisyLazyLinear"], [104, 0, 1, "", "NoisyLinear"], [105, 0, 1, "", "ObsDecoder"], [106, 0, 1, "", "ObsEncoder"], [107, 0, 1, "", "OneHotCategorical"], [108, 0, 1, "", "ProbabilisticActor"], [109, 0, 1, "", "QValueActor"], [110, 0, 1, "", "RSSMPosterior"], [111, 0, 1, "", "RSSMPrior"], [112, 0, 1, "", "SafeModule"], [113, 0, 1, "", "SafeProbabilisticModule"], [114, 0, 1, "", "SafeProbabilisticSequential"], [115, 0, 1, "", "SafeSequential"], [116, 0, 1, "", "TanhDelta"], [117, 0, 1, "", "TanhNormal"], [118, 0, 1, "", "TruncatedNormal"], [119, 0, 1, "", "ValueOperator"], [120, 0, 1, "", "reset_noise"]], "torchrl.modules.ActorCriticOperator": [[86, 1, 1, "", "get_critic_operator"], [86, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorCriticWrapper": [[87, 1, 1, "", "get_policy_operator"], [87, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorValueOperator": [[88, 1, 1, "", "get_policy_operator"], [88, 1, 1, "", "get_value_operator"]], "torchrl.modules.CEMPlanner": [[89, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[90, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[91, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[92, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[93, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[94, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[95, 1, 1, "", "log_prob"], [95, 3, 1, "", "mean"], [95, 3, 1, "", "mode"], [95, 1, 1, "", "rsample"], [95, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[96, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[98, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[99, 1, 1, "", "forward"]], "torchrl.modules.LSTMNet": [[100, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[101, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[102, 1, 1, "", "forward"], [102, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[103, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[105, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[106, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[107, 1, 1, "", "log_prob"], [107, 3, 1, "", "mode"], [107, 1, 1, "", "rsample"], [107, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[110, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[111, 1, 1, "", "forward"]], "torchrl.modules.SafeModule": [[112, 1, 1, "", "random"], [112, 1, 1, "", "random_sample"], [112, 1, 1, "", "to"]], "torchrl.modules.SafeProbabilisticModule": [[113, 1, 1, "", "random"], [113, 1, 1, "", "random_sample"]], "torchrl.modules.TanhDelta": [[116, 3, 1, "", "mean"], [116, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[117, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[118, 1, 1, "", "log_prob"], [118, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module.actors": [[121, 0, 1, "", "DistributionalQValueHook"], [122, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[123, 0, 1, "", "ensure_tensordict_compatible"], [124, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[125, 0, 1, "", "biased_softplus"], [126, 0, 1, "", "inv_softplus"], [127, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[125, 1, 1, "", "forward"]], "torchrl.objectives": [[128, 0, 1, "", "A2CLoss"], [129, 0, 1, "", "ClipPPOLoss"], [130, 0, 1, "", "DDPGLoss"], [131, 0, 1, "", "DQNLoss"], [132, 0, 1, "", "DistributionalDQNLoss"], [133, 0, 1, "", "HardUpdate"], [134, 0, 1, "", "KLPENPPOLoss"], [135, 0, 1, "", "PPOLoss"], [136, 0, 1, "", "REDQLoss"], [137, 0, 1, "", "SACLoss"], [138, 0, 1, "", "SoftUpdate"], [139, 0, 1, "", "distance_loss"], [140, 0, 1, "", "hold_out_net"], [141, 0, 1, "", "hold_out_params"], [142, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[128, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[129, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[130, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[131, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[132, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[134, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[135, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[136, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[137, 1, 1, "", "forward"]], "torchrl.objectives.value": [[143, 0, 1, "", "GAE"], [144, 0, 1, "", "TDEstimate"], [145, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[143, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[144, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[145, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[146, 0, 1, "", "generalized_advantage_estimate"], [147, 0, 1, "", "td_advantage_estimate"], [148, 0, 1, "", "td_lambda_advantage_estimate"], [149, 0, 1, "", "td_lambda_return_estimate"], [150, 0, 1, "", "vec_generalized_advantage_estimate"], [151, 0, 1, "", "vec_td_lambda_advantage_estimate"], [152, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.trainers": [[153, 0, 1, "", "BatchSubSampler"], [154, 0, 1, "", "ClearCudaCache"], [155, 0, 1, "", "CountFramesLog"], [156, 0, 1, "", "LogReward"], [157, 0, 1, "", "OptimizerHook"], [158, 0, 1, "", "Recorder"], [159, 0, 1, "", "ReplayBuffer"], [160, 0, 1, "", "RewardNormalizer"], [161, 0, 1, "", "SelectKeys"], [162, 0, 1, "", "Trainer"], [163, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.ReplayBuffer": [[159, 1, 1, "", "add"], [159, 1, 1, "", "extend"], [159, 1, 1, "", "sample"]], "torchrl.trainers.helpers": [[164, 2, 1, "", "correct_for_frame_skip"], [165, 2, 1, "", "get_stats_random_rollout"], [166, 2, 1, "", "make_a2c_loss"], [167, 2, 1, "", "make_a2c_model"], [168, 2, 1, "", "make_collector_offpolicy"], [169, 2, 1, "", "make_collector_onpolicy"], [170, 2, 1, "", "make_ddpg_actor"], [171, 2, 1, "", "make_ddpg_loss"], [172, 2, 1, "", "make_dqn_actor"], [173, 2, 1, "", "make_dqn_loss"], [174, 2, 1, "", "make_ppo_loss"], [175, 2, 1, "", "make_ppo_model"], [176, 2, 1, "", "make_redq_loss"], [177, 2, 1, "", "make_redq_model"], [178, 2, 1, "", "make_replay_buffer"], [179, 2, 1, "", "make_sac_loss"], [180, 2, 1, "", "make_sac_model"], [181, 2, 1, "", "make_target_updater"], [182, 2, 1, "", "make_trainer"], [183, 2, 1, "", "parallel_env_constructor"], [184, 2, 1, "", "sync_async_collector"], [185, 2, 1, "", "sync_sync_collector"], [186, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 5, 190, 191, 192, 193, 194, 195, 201, 202], "document": [0, 8], "tutori": 0, "refer": [0, 188], "indic": 0, "tabl": 0, "collector": [1, 194], "packag": [1, 2, 3, 190, 191, 192, 193], "data": [1, 2, 194, 202], "helper": [1, 3], "function": [1, 202], "replai": [2, 194, 202], "buffer": [2, 194, 202], "compos": [2, 58], "prototyp": 2, "tensorspec": [2, 27], "util": [2, 190, 191, 192], "env": [3, 201, 202], "vector": [3, 202], "transform": [3, 73, 194, 199, 201, 202], "domain": 3, "specif": [3, 197], "librari": [3, 202], "work": [4, 5], "gym": [4, 201], "version": [4, 6, 9], "habitat": 5, "lab": 5, "set": [5, 200], "up": 5, "your": [5, 194], "environ": [5, 6, 194, 195, 197, 201, 202], "instal": [5, 6, 202], "from": [5, 6], "pip": [5, 6], "us": [5, 8, 194, 195, 199, 202], "common": [5, 6], "issu": [5, 6, 9], "about": 6, "mujoco": 6, "prerequisit": 6, "render": [6, 201], "all": 6, "new": 6, "bindindg": 6, "2": [6, 199], "1": [6, 199], "old": 6, "bind": 6, "py": 6, "option": 6, "clone": 6, "repo": [6, 8], "when": 6, "pro": 7, "tip": 7, "train": [7, 194, 195], "cluster": 7, "resourc": 8, "pytorch": [8, 9], "functorch": [8, 199], "rl": [8, 202], "blog": 8, "websit": 8, "educ": 8, "forum": 8, "how": 9, "reproduc": 9, "workaround": 9, "implement_for": 10, "multisyncdatacollector": 11, "multiasyncdatacollector": 12, "syncdatacollector": 13, "asyncdatacollector": 14, "split_trajectori": 15, "binarydiscretetensorspec": 16, "boundedtensorspec": 17, "compositespec": 18, "discretetensorspec": 19, "multonehotdiscretetensorspec": 20, "multistep": 21, "onehotdiscretetensorspec": 22, "prioritizedreplaybuff": 23, "replaybuff": [24, 30, 159], "tensordictprioritizedreplaybuff": 25, "tensordictreplaybuff": [26, 31], "unboundedcontinuoustensorspec": 28, "remotetensordictreplaybuff": 29, "prioritizedsampl": 32, "randomsampl": 33, "sampler": 34, "lazymemmapstorag": 35, "lazytensorstorag": 36, "liststorag": 37, "storag": 38, "roundrobinwrit": 39, "writer": 40, "envbas": 41, "gymlikeenv": 42, "modelbasedenvbas": 43, "parallelenv": 44, "serialenv": 45, "dmcontrolenv": 46, "dmcontrolwrapp": 47, "gymenv": 48, "gymwrapp": 49, "habitatenv": 50, "jumanjienv": 51, "jumanjiwrapp": 52, "dreamerenv": 53, "binarizereward": 54, "catfram": 55, "cattensor": 56, "centercrop": 57, "doubletofloat": 59, "finitetensordictcheck": 60, "flattenobserv": 61, "grayscal": 62, "noopresetenv": 63, "observationnorm": 64, "observationtransform": 65, "pinmemorytransform": 66, "r3mtransform": 67, "resiz": 68, "rewardclip": 69, "rewardsc": 70, "tensordictprim": 71, "totensorimag": 72, "transformedenv": 74, "unsqueezetransform": 75, "viprewardtransform": 76, "viptransform": 77, "vecnorm": [78, 201], "gsdenois": 79, "check_env_spec": 80, "exploration_mod": 81, "get_available_librari": 82, "set_exploration_mod": 83, "step_mdp": 84, "actor": [85, 199], "actorcriticoper": [86, 199], "actorcriticwrapp": 87, "actorvalueoper": 88, "cemplann": 89, "convnet": 90, "ddpgcnnactor": 91, "ddpgcnnqnet": 92, "ddpgmlpactor": 93, "ddpgmlpqnet": 94, "delta": 95, "distributionaldqnnet": 96, "distributionalqvalueactor": 97, "dreameractor": 98, "duelingcnndqnet": 99, "lstmnet": 100, "mlp": 101, "mpcplannerbas": 102, "noisylazylinear": 103, "noisylinear": 104, "obsdecod": 105, "obsencod": 106, "onehotcategor": 107, "probabilisticactor": [108, 199], "qvalueactor": 109, "rssmposterior": 110, "rssmprior": 111, "safemodul": 112, "safeprobabilisticmodul": 113, "safeprobabilisticsequenti": 114, "safesequenti": 115, "tanhdelta": 116, "tanhnorm": 117, "truncatednorm": 118, "valueoper": 119, "reset_nois": 120, "distributionalqvaluehook": 121, "qvaluehook": 122, "ensure_tensordict_compat": 123, "is_tensordict_compat": 124, "biased_softplu": 125, "inv_softplu": 126, "map": 127, "a2closs": 128, "clipppoloss": 129, "ddpgloss": 130, "dqnloss": 131, "distributionaldqnloss": 132, "hardupd": 133, "klpenppoloss": 134, "ppoloss": 135, "redqloss": 136, "sacloss": 137, "softupd": 138, "distance_loss": 139, "hold_out_net": 140, "hold_out_param": 141, "next_state_valu": 142, "gae": 143, "tdestim": 144, "tdlambdaestim": 145, "generalized_advantage_estim": 146, "td_advantage_estim": 147, "td_lambda_advantage_estim": 148, "td_lambda_return_estim": 149, "vec_generalized_advantage_estim": 150, "vec_td_lambda_advantage_estim": 151, "vec_td_lambda_return_estim": 152, "batchsubsampl": 153, "clearcudacach": 154, "countframeslog": 155, "logreward": 156, "optimizerhook": 157, "record": [158, 194], "rewardnorm": 160, "selectkei": 161, "trainer": [162, 192], "updateweight": 163, "correct_for_frame_skip": 164, "get_stats_random_rollout": 165, "make_a2c_loss": 166, "make_a2c_model": 167, "make_collector_offpolici": 168, "make_collector_onpolici": 169, "make_ddpg_actor": 170, "make_ddpg_loss": 171, "make_dqn_actor": 172, "make_dqn_loss": 173, "make_ppo_loss": 174, "make_ppo_model": 175, "make_redq_loss": 176, "make_redq_model": 177, "make_replay_buff": 178, "make_sac_loss": 179, "make_sac_model": 180, "make_target_updat": 181, "make_train": 182, "parallel_env_constructor": 183, "sync_async_collector": 184, "sync_sync_collector": 185, "transformed_env_constructor": 186, "readm": [187, 196], "demo": [187, 196], "api": 188, "knowledg": 189, "base": [189, 195], "contribut": [189, 202], "content": 189, "modul": [190, 202], "tensordict": [190, 200, 202], "hook": [190, 192], "model": [190, 194, 195, 202], "explor": 190, "planner": 190, "distribut": 190, "object": [191, 194, 202], "dqn": [191, 195], "ddpg": [191, 194], "sac": 191, "redq": 191, "ppo": 191, "a2c": 191, "return": 191, "checkpoint": 192, "builder": 192, "_util": 193, "code": [194, 195, 200], "parallel": [194, 197, 201], "execut": [194, 197], "normal": 194, "observ": 194, "build": [194, 195], "evalu": 194, "hyperparamet": [194, 195], "initi": 194, "time": [194, 198], "polici": [194, 197], "experi": 194, "result": 194, "sampl": 194, "trajectori": 194, "td": [194, 195], "lambda": [194, 195], "pixel": 195, "The": 195, "problem": 195, "deep": 195, "q": 195, "network": 195, "regular": 195, "loop": 195, "conclus": 195, "possibl": 195, "improv": [195, 200], "task": 197, "multi": 197, "divers": 197, "rollout": [197, 201], "comput": 198, "tensordictmodul": [199, 202], "exampl": 199, "simpl": 199, "usag": [199, 200], "multipl": 199, "input": 199, "3": 199, "output": 199, "4": 199, "combin": 199, "tensordictsequenti": 199, "5": 199, "compat": 199, "do": [199, 200], "": 199, "don": 199, "t": [199, 200], "probabilistictensordictmodul": 199, "showcas": 199, "implement": 199, "benchmark": 199, "modular": 200, "can": 200, "i": 200, "thi": 200, "python": 200, "dict": 200, "structur": 200, "dictionari": 200, "featur": 200, "get": 200, "kei": 200, "valu": 200, "updat": 200, "tensordict_or_dict": 200, "del": 200, "tensor": 200, "batch": 200, "size": 200, "devic": [200, 201], "memori": 200, "share": 200, "via": 200, "physic": 200, "oper": 200, "spec": 201, "seed": 201, "reset": 201, "step": 201, "frame_skip": 201, "deepmind": 201, "control": 201, "run": 201, "close": 201, "access": 201, "attribut": 201, "kwarg": 201, "introduct": 202, "chang": 202, "config": 202, "sequenc": 202, "program": 202, "ensembl": 202, "meta": 202, "special": 202, "class": 202, "state": 202}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials:": [[0, null]], "References:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers (Prototype)": [[2, "composable-replay-buffers-prototype"]], "TensorSpec": [[2, "tensorspec"], [27, "tensorspec"]], "Utils": [[2, "utils"], [190, "utils"], [191, "utils"], [192, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [194, "transforms"], [202, "transforms"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Working with gym": [[4, "working-with-gym"]], "Versioning": [[4, "versioning"]], "Working with habitat-lab": [[5, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[5, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[5, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[5, "installing-torchrl"]], "Using Habitat": [[5, "using-habitat"]], "Common issues": [[5, "common-issues"]], "About MuJoCo": [[6, "about-mujoco"]], "Installing MuJoCo": [[6, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[6, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[6, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[6, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[6, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[6, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[6, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips": [[7, "pro-tips"]], "Training on a cluster": [[7, "training-on-a-cluster"]], "Useful resources": [[8, "useful-resources"]], "Pytorch documentation": [[8, "pytorch-documentation"]], "functorch documentation": [[8, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[8, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[8, "educational-resource"]], "Forums": [[8, "forums"]], "Repos": [[8, "repos"]], "Versioning Issues": [[9, "versioning-issues"]], "Pytorch version": [[9, "pytorch-version"]], "How to reproduce": [[9, "how-to-reproduce"]], "Workarounds": [[9, "workarounds"]], "implement_for": [[10, "implement-for"]], "MultiSyncDataCollector": [[11, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[12, "multiasyncdatacollector"]], "SyncDataCollector": [[13, "syncdatacollector"]], "aSyncDataCollector": [[14, "asyncdatacollector"]], "split_trajectories": [[15, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[16, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[17, "boundedtensorspec"]], "CompositeSpec": [[18, "compositespec"]], "DiscreteTensorSpec": [[19, "discretetensorspec"]], "MultOneHotDiscreteTensorSpec": [[20, "multonehotdiscretetensorspec"]], "MultiStep": [[21, "multistep"]], "OneHotDiscreteTensorSpec": [[22, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[23, "prioritizedreplaybuffer"]], "ReplayBuffer": [[24, "replaybuffer"], [30, "replaybuffer"], [159, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[25, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[26, "tensordictreplaybuffer"], [31, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[28, "unboundedcontinuoustensorspec"]], "RemoteTensorDictReplayBuffer": [[29, "remotetensordictreplaybuffer"]], "PrioritizedSampler": [[32, "prioritizedsampler"]], "RandomSampler": [[33, "randomsampler"]], "Sampler": [[34, "sampler"]], "LazyMemmapStorage": [[35, "lazymemmapstorage"]], "LazyTensorStorage": [[36, "lazytensorstorage"]], "ListStorage": [[37, "liststorage"]], "Storage": [[38, "storage"]], "RoundRobinWriter": [[39, "roundrobinwriter"]], "Writer": [[40, "writer"]], "EnvBase": [[41, "envbase"]], "GymLikeEnv": [[42, "gymlikeenv"]], "ModelBasedEnvBase": [[43, "modelbasedenvbase"]], "ParallelEnv": [[44, "parallelenv"]], "SerialEnv": [[45, "serialenv"]], "DMControlEnv": [[46, "dmcontrolenv"]], "DMControlWrapper": [[47, "dmcontrolwrapper"]], "GymEnv": [[48, "gymenv"]], "GymWrapper": [[49, "gymwrapper"]], "HabitatEnv": [[50, "habitatenv"]], "JumanjiEnv": [[51, "jumanjienv"]], "JumanjiWrapper": [[52, "jumanjiwrapper"]], "DreamerEnv": [[53, "dreamerenv"]], "BinarizeReward": [[54, "binarizereward"]], "CatFrames": [[55, "catframes"]], "CatTensors": [[56, "cattensors"]], "CenterCrop": [[57, "centercrop"]], "Compose": [[58, "compose"]], "DoubleToFloat": [[59, "doubletofloat"]], "FiniteTensorDictCheck": [[60, "finitetensordictcheck"]], "FlattenObservation": [[61, "flattenobservation"]], "GrayScale": [[62, "grayscale"]], "NoopResetEnv": [[63, "noopresetenv"]], "ObservationNorm": [[64, "observationnorm"]], "ObservationTransform": [[65, "observationtransform"]], "PinMemoryTransform": [[66, "pinmemorytransform"]], "R3MTransform": [[67, "r3mtransform"]], "Resize": [[68, "resize"]], "RewardClipping": [[69, "rewardclipping"]], "RewardScaling": [[70, "rewardscaling"]], "TensorDictPrimer": [[71, "tensordictprimer"]], "ToTensorImage": [[72, "totensorimage"]], "Transform": [[73, "transform"]], "TransformedEnv": [[74, "transformedenv"]], "UnsqueezeTransform": [[75, "unsqueezetransform"]], "VIPRewardTransform": [[76, "viprewardtransform"]], "VIPTransform": [[77, "viptransform"]], "VecNorm": [[78, "vecnorm"], [201, "vecnorm"]], "gSDENoise": [[79, "gsdenoise"]], "check_env_specs": [[80, "check-env-specs"]], "exploration_mode": [[81, "exploration-mode"]], "get_available_libraries": [[82, "get-available-libraries"]], "set_exploration_mode": [[83, "set-exploration-mode"]], "step_mdp": [[84, "step-mdp"]], "Actor": [[85, "actor"], [199, "actor"]], "ActorCriticOperator": [[86, "actorcriticoperator"], [199, "actorcriticoperator"]], "ActorCriticWrapper": [[87, "actorcriticwrapper"]], "ActorValueOperator": [[88, "actorvalueoperator"]], "CEMPlanner": [[89, "cemplanner"]], "ConvNet": [[90, "convnet"]], "DdpgCnnActor": [[91, "ddpgcnnactor"]], "DdpgCnnQNet": [[92, "ddpgcnnqnet"]], "DdpgMlpActor": [[93, "ddpgmlpactor"]], "DdpgMlpQNet": [[94, "ddpgmlpqnet"]], "Delta": [[95, "delta"]], "DistributionalDQNnet": [[96, "distributionaldqnnet"]], "DistributionalQValueActor": [[97, "distributionalqvalueactor"]], "DreamerActor": [[98, "dreameractor"]], "DuelingCnnDQNet": [[99, "duelingcnndqnet"]], "LSTMNet": [[100, "lstmnet"]], "MLP": [[101, "mlp"]], "MPCPlannerBase": [[102, "mpcplannerbase"]], "NoisyLazyLinear": [[103, "noisylazylinear"]], "NoisyLinear": [[104, "noisylinear"]], "ObsDecoder": [[105, "obsdecoder"]], "ObsEncoder": [[106, "obsencoder"]], "OneHotCategorical": [[107, "onehotcategorical"]], "ProbabilisticActor": [[108, "probabilisticactor"], [199, "probabilisticactor"]], "QValueActor": [[109, "qvalueactor"]], "RSSMPosterior": [[110, "rssmposterior"]], "RSSMPrior": [[111, "rssmprior"]], "SafeModule": [[112, "safemodule"]], "SafeProbabilisticModule": [[113, "safeprobabilisticmodule"]], "SafeProbabilisticSequential": [[114, "safeprobabilisticsequential"]], "SafeSequential": [[115, "safesequential"]], "TanhDelta": [[116, "tanhdelta"]], "TanhNormal": [[117, "tanhnormal"]], "TruncatedNormal": [[118, "truncatednormal"]], "ValueOperator": [[119, "valueoperator"]], "reset_noise": [[120, "reset-noise"]], "DistributionalQValueHook": [[121, "distributionalqvaluehook"]], "QValueHook": [[122, "qvaluehook"]], "ensure_tensordict_compatible": [[123, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[124, "is-tensordict-compatible"]], "biased_softplus": [[125, "biased-softplus"]], "inv_softplus": [[126, "inv-softplus"]], "mappings": [[127, "mappings"]], "A2CLoss": [[128, "a2closs"]], "ClipPPOLoss": [[129, "clipppoloss"]], "DDPGLoss": [[130, "ddpgloss"]], "DQNLoss": [[131, "dqnloss"]], "DistributionalDQNLoss": [[132, "distributionaldqnloss"]], "HardUpdate": [[133, "hardupdate"]], "KLPENPPOLoss": [[134, "klpenppoloss"]], "PPOLoss": [[135, "ppoloss"]], "REDQLoss": [[136, "redqloss"]], "SACLoss": [[137, "sacloss"]], "SoftUpdate": [[138, "softupdate"]], "distance_loss": [[139, "distance-loss"]], "hold_out_net": [[140, "hold-out-net"]], "hold_out_params": [[141, "hold-out-params"]], "next_state_value": [[142, "next-state-value"]], "GAE": [[143, "gae"]], "TDEstimate": [[144, "tdestimate"]], "TDLambdaEstimate": [[145, "tdlambdaestimate"]], "generalized_advantage_estimate": [[146, "generalized-advantage-estimate"]], "td_advantage_estimate": [[147, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[148, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[149, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[150, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[151, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[152, "vec-td-lambda-return-estimate"]], "BatchSubSampler": [[153, "batchsubsampler"]], "ClearCudaCache": [[154, "clearcudacache"]], "CountFramesLog": [[155, "countframeslog"]], "LogReward": [[156, "logreward"]], "OptimizerHook": [[157, "optimizerhook"]], "Recorder": [[158, "recorder"]], "RewardNormalizer": [[160, "rewardnormalizer"]], "SelectKeys": [[161, "selectkeys"]], "Trainer": [[162, "trainer"]], "UpdateWeights": [[163, "updateweights"]], "correct_for_frame_skip": [[164, "correct-for-frame-skip"]], "get_stats_random_rollout": [[165, "get-stats-random-rollout"]], "make_a2c_loss": [[166, "make-a2c-loss"]], "make_a2c_model": [[167, "make-a2c-model"]], "make_collector_offpolicy": [[168, "make-collector-offpolicy"]], "make_collector_onpolicy": [[169, "make-collector-onpolicy"]], "make_ddpg_actor": [[170, "make-ddpg-actor"]], "make_ddpg_loss": [[171, "make-ddpg-loss"]], "make_dqn_actor": [[172, "make-dqn-actor"]], "make_dqn_loss": [[173, "make-dqn-loss"]], "make_ppo_loss": [[174, "make-ppo-loss"]], "make_ppo_model": [[175, "make-ppo-model"]], "make_redq_loss": [[176, "make-redq-loss"]], "make_redq_model": [[177, "make-redq-model"]], "make_replay_buffer": [[178, "make-replay-buffer"]], "make_sac_loss": [[179, "make-sac-loss"]], "make_sac_model": [[180, "make-sac-model"]], "make_target_updater": [[181, "make-target-updater"]], "make_trainer": [[182, "make-trainer"]], "parallel_env_constructor": [[183, "parallel-env-constructor"]], "sync_async_collector": [[184, "sync-async-collector"]], "sync_sync_collector": [[185, "sync-sync-collector"]], "transformed_env_constructor": [[186, "transformed-env-constructor"]], "README Demos": [[187, "readme-demos"], [196, "readme-demos"]], "API Reference": [[188, "api-reference"]], "Knowledge Base": [[189, "knowledge-base"]], "Contributing": [[189, "contributing"], [202, "contributing"]], "Contents:": [[189, null]], "torchrl.modules package": [[190, "torchrl-modules-package"]], "TensorDict modules": [[190, "tensordict-modules"]], "Hooks": [[190, "hooks"]], "Models": [[190, "models"], [202, "models"]], "Exploration": [[190, "exploration"]], "Planners": [[190, "planners"]], "Distributions": [[190, "distributions"]], "torchrl.objectives package": [[191, "torchrl-objectives-package"]], "DQN": [[191, "dqn"]], "DDPG": [[191, "ddpg"]], "SAC": [[191, "sac"]], "REDQ": [[191, "redq"]], "PPO": [[191, "ppo"]], "A2C": [[191, "a2c"]], "Returns": [[191, "returns"]], "torchrl.trainers package": [[192, "torchrl-trainers-package"]], "Checkpointing": [[192, "checkpointing"]], "Trainer and hooks": [[192, "trainer-and-hooks"]], "Builders": [[192, "builders"]], "torchrl._utils package": [[193, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[194, "coding-ddpg-using-torchrl"]], "Environment": [[194, "environment"]], "Parallel execution": [[194, "parallel-execution"]], "Normalization of the observations": [[194, "normalization-of-the-observations"]], "Building the model": [[194, "building-the-model"]], "Evaluator: building your recorder object": [[194, "evaluator-building-your-recorder-object"]], "Replay buffer": [[194, "replay-buffer"]], "Hyperparameters": [[194, "hyperparameters"], [195, "hyperparameters"]], "Initialization": [[194, "initialization"]], "Data collector": [[194, "data-collector"]], "Time to train the policy!": [[194, "time-to-train-the-policy"]], "Experiment results": [[194, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[194, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[195, "coding-a-pixel-based-dqn-using-torchrl"]], "Building the environment": [[195, "building-the-environment"]], "The problem": [[195, "the-problem"]], "Building the model (Deep Q-network)": [[195, "building-the-model-deep-q-network"]], "Regular DQN": [[195, "regular-dqn"]], "Training loop": [[195, "training-loop"], [195, "id1"]], "TD-lambda": [[195, "td-lambda"]], "Conclusion and possible improvements": [[195, "conclusion-and-possible-improvements"]], "Task-specific policy in multi-task environments": [[197, "task-specific-policy-in-multi-task-environments"]], "Policy": [[197, "policy"]], "Executing diverse tasks in parallel": [[197, "executing-diverse-tasks-in-parallel"]], "Rollout": [[197, "rollout"]], "Computation times": [[198, "computation-times"]], "TensorDictModule": [[199, "tensordictmodule"]], "TensorDictModule by examples": [[199, "tensordictmodule-by-examples"]], "Example 1: Simple usage": [[199, "example-1-simple-usage"]], "Example 2: Multiple inputs": [[199, "example-2-multiple-inputs"]], "Example 3: Multiple outputs": [[199, "example-3-multiple-outputs"]], "Example 4: Combining multiple TensorDictModule with TensorDictSequential": [[199, "example-4-combining-multiple-tensordictmodule-with-tensordictsequential"]], "Example 5: Compatibility with functorch": [[199, "example-5-compatibility-with-functorch"]], "Do\u2019s and don\u2019t with TensorDictModule": [[199, "do-s-and-don-t-with-tensordictmodule"]], "ProbabilisticTensorDictModule": [[199, "probabilistictensordictmodule"]], "Showcase: Implementing a transformer using TensorDictModule": [[199, "showcase-implementing-a-transformer-using-tensordictmodule"]], "Benchmarking": [[199, "benchmarking"]], "TensorDict": [[200, "tensordict"], [202, "tensordict"]], "Improving the modularity of codes": [[200, "improving-the-modularity-of-codes"]], "Can\u2019t I do this with a python dict?": [[200, "can-t-i-do-this-with-a-python-dict"]], "TensorDict structure": [[200, "tensordict-structure"]], "TensorDict Dictionary Features": [[200, "tensordict-dictionary-features"]], "get(key)": [[200, "get-key"]], "set(key, value)": [[200, "set-key-value"]], "keys()": [[200, "keys"]], "values()": [[200, "values"]], "update(tensordict_or_dict)": [[200, "update-tensordict-or-dict"]], "del": [[200, "del"]], "TensorDict tensor features": [[200, "tensordict-tensor-features"]], "Batch size": [[200, "batch-size"]], "Devices": [[200, "devices"]], "Memory sharing via physical memory usage": [[200, "memory-sharing-via-physical-memory-usage"]], "Tensor operations": [[200, "tensor-operations"]], "TorchRL envs": [[201, "torchrl-envs"]], "Gym environments": [[201, "gym-environments"]], "Env Specs": [[201, "env-specs"]], "Seeding, resetting and steps": [[201, "seeding-resetting-and-steps"]], "Rollouts": [[201, "rollouts"]], "frame_skip": [[201, "frame-skip"]], "Rendering": [[201, "rendering"]], "DeepMind Control environments": [[201, "deepmind-control-environments"]], "Transforming envs": [[201, "transforming-envs"]], "Environment device": [[201, "environment-device"]], "Running environments in parallel": [[201, "running-environments-in-parallel"]], "Closing parallel environments": [[201, "closing-parallel-environments"]], "Seeding": [[201, "seeding"]], "Accessing environment attributes": [[201, "accessing-environment-attributes"]], "kwargs for parallel environments": [[201, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[201, "transforming-parallel-environments"]], "Introduction to TorchRL": [[202, "introduction-to-torchrl"]], "Data": [[202, "data"]], "Replay buffers": [[202, "replay-buffers"]], "Envs": [[202, "envs"]], "Changing environments config": [[202, "changing-environments-config"]], "Vectorized Environments": [[202, "vectorized-environments"]], "Modules": [[202, "modules"]], "TensorDictModules": [[202, "tensordictmodules"]], "Sequences of Modules": [[202, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[202, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[202, "specialized-classes"]], "Using Environments and Modules": [[202, "using-environments-and-modules"]], "Objectives": [[202, "objectives"]], "State of the Library": [[202, "state-of-the-library"]], "Installing the Library": [[202, "installing-the-library"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[10, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors)": [[11, "torchrl.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors)": [[12, "torchrl.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "syncdatacollector (class in torchrl.collectors)": [[13, "torchrl.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors)": [[14, "torchrl.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[15, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[16, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[17, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.encode"]], "index() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[18, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.encode"]], "index() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[19, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.encode"]], "index() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.zero"]], "multonehotdiscretetensorspec (class in torchrl.data)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[21, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.zero_grad"]], "onehotdiscretetensorspec (class in torchrl.data)": [[22, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[23, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[23, "torchrl.data.PrioritizedReplayBuffer.add"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[23, "torchrl.data.PrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[23, "torchrl.data.PrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.prioritizedreplaybuffer method)": [[23, "torchrl.data.PrioritizedReplayBuffer.update_priority"]], "replaybuffer (class in torchrl.data)": [[24, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[24, "torchrl.data.ReplayBuffer.add"]], "extend() (torchrl.data.replaybuffer method)": [[24, "torchrl.data.ReplayBuffer.extend"]], "sample() (torchrl.data.replaybuffer method)": [[24, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[25, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[25, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[25, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[25, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[25, "torchrl.data.TensorDictPrioritizedReplayBuffer.update_priority"]], "tensordictreplaybuffer (class in torchrl.data)": [[26, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[26, "torchrl.data.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[26, "torchrl.data.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[26, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[27, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.encode"]], "index() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[28, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "remotetensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.sample"]], "replaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.sample"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[32, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[32, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[33, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[35, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[35, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[36, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[36, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[37, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[38, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[40, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[40, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[40, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[41, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[41, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[41, "id0"], [41, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[41, "id1"], [41, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[41, "id2"], [41, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[41, "id3"], [41, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[41, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[41, "id4"], [41, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.zero_grad"]], "gymlikeenv (class in torchrl.envs)": [[42, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[42, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[42, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[43, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[43, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[43, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[43, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[43, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[43, "torchrl.envs.step"]], "parallelenv (class in torchrl.envs)": [[44, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[44, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[44, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[45, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[45, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[45, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.zero_grad"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[46, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[47, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[48, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[49, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[50, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[51, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[52, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[53, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[54, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[54, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[55, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[55, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[55, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[56, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[56, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[57, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[57, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[58, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[59, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[59, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[59, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[59, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[60, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[61, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[61, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "grayscale (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[62, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[63, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[64, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[64, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.R3MTransform"]], "forward() (torchrl.envs.transforms.r3mtransform method)": [[67, "torchrl.envs.transforms.R3MTransform.forward"]], "reset() (torchrl.envs.transforms.r3mtransform method)": [[67, "torchrl.envs.transforms.R3MTransform.reset"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[67, "torchrl.envs.transforms.R3MTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.r3mtransform method)": [[67, "torchrl.envs.transforms.R3MTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.r3mtransform method)": [[67, "torchrl.envs.transforms.R3MTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.r3mtransform method)": [[67, "torchrl.envs.transforms.R3MTransform.transform_reward_spec"]], "resize (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[68, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[69, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[70, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[71, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[71, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[71, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[72, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[73, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[73, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[73, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[73, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[73, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[74, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[74, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[74, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[74, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[74, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[74, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[74, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[74, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[74, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[74, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[74, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[75, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[75, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[75, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[75, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[76, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[76, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.VIPTransform"]], "forward() (torchrl.envs.transforms.viptransform method)": [[77, "torchrl.envs.transforms.VIPTransform.forward"]], "reset() (torchrl.envs.transforms.viptransform method)": [[77, "torchrl.envs.transforms.VIPTransform.reset"]], "to() (torchrl.envs.transforms.viptransform method)": [[77, "torchrl.envs.transforms.VIPTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.viptransform method)": [[77, "torchrl.envs.transforms.VIPTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.viptransform method)": [[77, "torchrl.envs.transforms.VIPTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.viptransform method)": [[77, "torchrl.envs.transforms.VIPTransform.transform_reward_spec"]], "vecnorm (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[78, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[78, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[78, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[78, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[79, "torchrl.envs.transforms.gSDENoise.reset"]], "check_env_specs() (in module torchrl.envs.utils)": [[80, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[81, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[82, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[83, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[84, "torchrl.envs.utils.step_mdp"]], "actor (class in torchrl.modules)": [[85, "torchrl.modules.Actor"]], "actorcriticoperator (class in torchrl.modules)": [[86, "torchrl.modules.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.actorcriticoperator method)": [[86, "torchrl.modules.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.actorcriticoperator method)": [[86, "torchrl.modules.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules)": [[87, "torchrl.modules.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.actorcriticwrapper method)": [[87, "torchrl.modules.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorcriticwrapper method)": [[87, "torchrl.modules.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules)": [[88, "torchrl.modules.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.actorvalueoperator method)": [[88, "torchrl.modules.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorvalueoperator method)": [[88, "torchrl.modules.ActorValueOperator.get_value_operator"]], "cemplanner (class in torchrl.modules)": [[89, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[89, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[90, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[90, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[91, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[91, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[92, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[92, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[93, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[93, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[94, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[94, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[95, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[95, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[95, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[95, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[95, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[95, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[96, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[96, "torchrl.modules.DistributionalDQNnet.forward"]], "distributionalqvalueactor (class in torchrl.modules)": [[97, "torchrl.modules.DistributionalQValueActor"]], "dreameractor (class in torchrl.modules)": [[98, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[98, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[99, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[99, "torchrl.modules.DuelingCnnDQNet.forward"]], "lstmnet (class in torchrl.modules)": [[100, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[100, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[101, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[101, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[102, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[102, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[102, "torchrl.modules.MPCPlannerBase.planning"]], "noisylazylinear (class in torchrl.modules)": [[103, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[103, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[104, "torchrl.modules.NoisyLinear"]], "obsdecoder (class in torchrl.modules)": [[105, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[105, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[106, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[106, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[107, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[107, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[107, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[107, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[107, "torchrl.modules.OneHotCategorical.sample"]], "probabilisticactor (class in torchrl.modules)": [[108, "torchrl.modules.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules)": [[109, "torchrl.modules.QValueActor"]], "rssmposterior (class in torchrl.modules)": [[110, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[110, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[111, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[111, "torchrl.modules.RSSMPrior.forward"]], "safemodule (class in torchrl.modules)": [[112, "torchrl.modules.SafeModule"]], "random() (torchrl.modules.safemodule method)": [[112, "torchrl.modules.SafeModule.random"]], "random_sample() (torchrl.modules.safemodule method)": [[112, "torchrl.modules.SafeModule.random_sample"]], "to() (torchrl.modules.safemodule method)": [[112, "torchrl.modules.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules)": [[113, "torchrl.modules.SafeProbabilisticModule"]], "random() (torchrl.modules.safeprobabilisticmodule method)": [[113, "torchrl.modules.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.safeprobabilisticmodule method)": [[113, "torchrl.modules.SafeProbabilisticModule.random_sample"]], "safeprobabilisticsequential (class in torchrl.modules)": [[114, "torchrl.modules.SafeProbabilisticSequential"]], "safesequential (class in torchrl.modules)": [[115, "torchrl.modules.SafeSequential"]], "tanhdelta (class in torchrl.modules)": [[116, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[116, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[116, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[117, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[117, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[118, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[118, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[118, "torchrl.modules.TruncatedNormal.mode"]], "valueoperator (class in torchrl.modules)": [[119, "torchrl.modules.ValueOperator"]], "reset_noise (class in torchrl.modules)": [[120, "torchrl.modules.reset_noise"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[121, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[122, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[123, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[124, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[125, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[125, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[126, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[127, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[128, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[128, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[129, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[129, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[130, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[130, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[131, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[131, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[132, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[132, "torchrl.objectives.DistributionalDQNLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[133, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[134, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[134, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[135, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[135, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[136, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[136, "torchrl.objectives.REDQLoss.forward"]], "sacloss (class in torchrl.objectives)": [[137, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[137, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[138, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[139, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[140, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[141, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[142, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[143, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[143, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[144, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[144, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[145, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[145, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[146, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[147, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[148, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[149, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[150, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[151, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[152, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "batchsubsampler (class in torchrl.trainers)": [[153, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[154, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[155, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[156, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[157, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[158, "torchrl.trainers.Recorder"]], "replaybuffer (class in torchrl.trainers)": [[159, "torchrl.trainers.ReplayBuffer"]], "add() (torchrl.trainers.replaybuffer method)": [[159, "torchrl.trainers.ReplayBuffer.add"]], "extend() (torchrl.trainers.replaybuffer method)": [[159, "torchrl.trainers.ReplayBuffer.extend"]], "sample() (torchrl.trainers.replaybuffer method)": [[159, "torchrl.trainers.ReplayBuffer.sample"]], "rewardnormalizer (class in torchrl.trainers)": [[160, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[161, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[162, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[163, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[164, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[165, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[166, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[167, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[168, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[169, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[170, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[171, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[172, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[173, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[174, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[175, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[176, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[177, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[178, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[179, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[180, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[181, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[182, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[183, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[184, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[185, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[186, "torchrl.trainers.helpers.transformed_env_constructor"]]}})