Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.Specs", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/torchrl.trainers.loggers.CSVLogger", "reference/generated/torchrl.trainers.loggers.Logger", "reference/generated/torchrl.trainers.loggers.MLFlowLogger", "reference/generated/torchrl.trainers.loggers.TensorboardLogger", "reference/generated/torchrl.trainers.loggers.WandbLogger", "reference/generated/torchrl.trainers.loggers.generate_exp_name", "reference/generated/torchrl.trainers.loggers.get_logger", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/index", "tutorials/multi_task", "tutorials/sg_execution_times", "tutorials/tensordict_module", "tutorials/tensordict_tutorial", "tutorials/torch_envs", "tutorials/torchrl_demo"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.Specs.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/torchrl.trainers.loggers.CSVLogger.rst", "reference/generated/torchrl.trainers.loggers.Logger.rst", "reference/generated/torchrl.trainers.loggers.MLFlowLogger.rst", "reference/generated/torchrl.trainers.loggers.TensorboardLogger.rst", "reference/generated/torchrl.trainers.loggers.WandbLogger.rst", "reference/generated/torchrl.trainers.loggers.generate_exp_name.rst", "reference/generated/torchrl.trainers.loggers.get_logger.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/sg_execution_times.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_tutorial.rst", "tutorials/torch_envs.rst", "tutorials/torchrl_demo.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips and Debugging", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "ParallelEnv", "SerialEnv", "Specs", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DoubleToFloat", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "RewardSum", "SqueezeTransform", "StepCounter", "TensorDictPrimer", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "RSSMPosterior", "RSSMPrior", "TanhDelta", "TanhNormal", "TruncatedNormal", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DistributionalQValueActor", "EGreedyWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticSequential", "SafeSequential", "ValueOperator", "WorldModelWrapper", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "CSVLogger", "Logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "generate_exp_name", "get_logger", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "README Tutos", "Task-specific policy in multi-task environments", "Computation times", "TensorDictModule", "TensorDict", "TorchRL envs", "Introduction to TorchRL"], "terms": {"The": [0, 1, 2, 3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 39, 42, 44, 45, 63, 70, 73, 76, 80, 83, 86, 94, 96, 97, 98, 99, 105, 107, 108, 110, 111, 115, 116, 121, 122, 128, 129, 131, 132, 134, 135, 136, 141, 145, 146, 147, 149, 150, 151, 153, 157, 162, 163, 164, 165, 175, 179, 203, 205, 206, 208, 210, 211, 212, 220, 222, 227, 228, 229, 230], "tensordict": [0, 1, 3, 11, 12, 14, 15, 16, 19, 20, 22, 26, 27, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 48, 55, 56, 57, 60, 61, 63, 64, 65, 69, 70, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 105, 107, 108, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 162, 163, 164, 165, 173, 175, 179, 182, 183, 188, 191, 193, 196, 198, 201, 216, 220, 222, 223, 224, 225, 226, 227, 229], "class": [0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 205, 206, 207, 220, 222, 223, 227, 228, 229], "ha": [0, 4, 6, 7, 9, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 40, 42, 44, 45, 80, 83, 86, 125, 127, 132, 153, 222, 223, 225, 227, 228, 229, 230], "been": [0, 4, 6, 7, 11, 12, 15, 39, 42, 44, 45, 82, 223, 225, 229], "move": [0, 22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 87, 106, 131, 181, 223, 229, 230], "out": [0, 3, 4, 22, 39, 42, 44, 45, 109, 110, 128, 131, 132, 160, 161, 220, 227, 228, 229, 230], "dedic": [0, 122, 123, 124, 222, 225], "librari": [0, 4, 6, 7, 8, 9, 91, 216, 217, 221, 222, 229], "take": [0, 1, 3, 7, 16, 39, 42, 44, 45, 63, 78, 79, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141, 143, 166, 167, 168, 169, 170, 171, 172, 175, 184, 220, 222, 223, 227, 229], "look": [0, 4, 6, 7, 22, 39, 42, 44, 45, 73, 132, 133, 134, 223, 227, 229, 230], "find": [0, 125, 127, 227], "sourc": [0, 1, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 222, 223, 224, 225, 227, 228, 229, 230], "code": [0, 3, 4, 6, 7, 73, 134, 224, 225, 226, 227, 229, 230], "github": [0, 2, 4, 5, 6, 9, 230], "i": [0, 1, 2, 3, 5, 6, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 46, 49, 59, 60, 61, 62, 63, 69, 70, 73, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 116, 117, 118, 119, 121, 122, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 183, 185, 186, 188, 191, 196, 198, 201, 203, 207, 217, 220, 222, 223, 225, 227, 229, 230], "an": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 49, 62, 65, 69, 70, 73, 74, 81, 82, 83, 87, 89, 95, 96, 97, 98, 99, 105, 106, 107, 109, 113, 122, 123, 124, 128, 131, 132, 133, 136, 139, 140, 143, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 163, 164, 165, 174, 179, 180, 183, 186, 191, 204, 205, 206, 207, 213, 217, 222, 223, 225, 227, 228, 229, 230], "open": [0, 4, 6, 10, 230], "reinforc": [0, 2, 3, 8, 60, 96, 97, 98, 99, 128, 137, 144, 148, 152, 156, 157, 158, 191, 216, 223, 230], "learn": [0, 2, 3, 6, 7, 8, 22, 60, 96, 97, 98, 99, 108, 110, 128, 137, 144, 148, 152, 155, 156, 157, 158, 191, 222, 223, 225, 229, 230], "rl": [0, 1, 2, 4, 7, 9, 11, 12, 14, 15, 43, 110, 121, 129, 135, 144, 154, 175, 217, 220, 222, 223, 227, 228, 229], "pytorch": [0, 1, 2, 7, 81, 183, 220, 222, 228, 229, 230], "It": [0, 2, 3, 6, 22, 26, 39, 42, 43, 44, 45, 53, 70, 83, 96, 98, 102, 115, 116, 128, 132, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 162, 163, 180, 198, 217, 222, 227, 228, 229, 230], "provid": [0, 2, 3, 4, 7, 8, 14, 22, 24, 25, 26, 39, 42, 43, 44, 45, 61, 69, 70, 73, 77, 80, 83, 86, 87, 95, 105, 106, 107, 121, 125, 127, 129, 137, 162, 163, 164, 165, 174, 175, 186, 188, 196, 198, 201, 203, 214, 217, 220, 222, 223, 225, 227, 229, 230], "python": [0, 3, 4, 5, 6, 9, 220, 222, 223, 224, 225, 227, 229, 230], "first": [0, 1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 42, 61, 66, 70, 73, 81, 83, 86, 106, 109, 113, 131, 132, 150, 173, 182, 222, 223, 225, 227, 228, 229, 230], "low": [0, 222, 223, 230], "high": [0, 8, 163, 166, 167, 170, 222, 223, 230], "level": [0, 19, 153, 222, 223, 230], "abstract": [0, 7, 18, 19, 20, 28, 29, 38, 39, 71, 107, 220, 228, 230], "ar": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 14, 15, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 63, 64, 65, 73, 77, 80, 82, 83, 86, 87, 93, 94, 99, 100, 105, 107, 110, 114, 116, 128, 131, 132, 133, 134, 143, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 203, 207, 220, 221, 222, 223, 225, 227, 228, 229, 230], "intend": [0, 6, 11, 12, 14, 15, 230], "effici": [0, 2, 7, 110, 222, 223, 225, 228, 230], "modular": [0, 134, 230], "properli": [0, 228, 230], "test": [0, 3, 4, 89, 105, 180, 203, 227, 230], "aim": [0, 3, 6, 73, 86, 106, 185, 217, 222, 223, 230], "support": [0, 3, 19, 36, 82, 91, 126, 131, 134, 137, 148, 163, 164, 165, 210, 220, 227, 228, 230], "research": [0, 6, 8, 230], "most": [0, 3, 6, 7, 22, 222, 223, 227, 230], "written": [0, 3, 33, 39, 42, 44, 45, 77, 128, 131, 132, 144, 145, 153, 154, 162, 173, 174, 220, 222, 225, 227, 230], "highli": [0, 2, 229, 230], "wai": [0, 154, 223, 225, 229, 230], "can": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 20, 22, 24, 26, 28, 39, 40, 42, 44, 45, 60, 63, 69, 70, 73, 77, 80, 82, 83, 86, 87, 94, 104, 107, 108, 110, 111, 118, 119, 125, 131, 132, 133, 134, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 162, 163, 164, 165, 180, 188, 196, 198, 201, 205, 206, 207, 217, 220, 222, 223, 225, 227, 229, 230], "easili": [0, 3, 6, 44, 45, 188, 196, 198, 201, 223, 228, 229, 230], "swap": [0, 3, 230], "compon": [0, 2, 3, 33, 34, 35, 36, 137, 138, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 179, 183, 225, 227, 230], "transform": [0, 7, 22, 24, 25, 26, 27, 40, 42, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 96, 102, 137, 138, 141, 143, 174, 188, 191, 193, 196, 198, 201, 207, 216, 223], "them": [0, 6, 24, 25, 26, 27, 39, 40, 42, 44, 45, 46, 63, 78, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141, 153, 174, 222, 223, 225, 227, 228, 229, 230], "write": [0, 7, 22, 42, 72, 131, 132, 134, 146, 147, 155, 157, 162, 174, 220, 222, 223, 225, 227, 228, 230], "new": [0, 3, 7, 11, 12, 14, 15, 22, 26, 30, 39, 42, 44, 45, 77, 82, 87, 93, 128, 131, 132, 136, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 222, 223, 227, 228, 229, 230], "ones": [0, 19, 22, 39, 42, 44, 45, 61, 63, 64, 70, 73, 80, 83, 86, 131, 222, 228, 229, 230], "littl": [0, 3, 229, 230], "effort": [0, 3, 230], "thi": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 53, 60, 61, 63, 65, 67, 70, 73, 77, 78, 80, 82, 83, 84, 85, 86, 87, 89, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 136, 137, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 173, 175, 177, 180, 183, 184, 185, 186, 188, 196, 198, 201, 203, 207, 217, 220, 222, 223, 225, 227, 229, 230], "repo": [0, 5, 217, 230], "attempt": [0, 125, 127, 230], "align": [0, 230], "exist": [0, 22, 39, 42, 44, 45, 61, 83, 86, 186, 207, 227, 229, 230], "ecosystem": [0, 230], "dataset": [0, 24, 25, 26, 87, 228, 229, 230], "pillar": [0, 230], "environ": [0, 1, 2, 3, 4, 7, 10, 11, 12, 14, 15, 22, 23, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 61, 64, 67, 69, 70, 73, 79, 82, 83, 86, 87, 89, 94, 105, 107, 108, 149, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 180, 185, 186, 188, 189, 190, 191, 193, 196, 198, 201, 203, 204, 205, 206, 207, 217, 224, 226], "model": [0, 1, 3, 7, 8, 11, 12, 14, 15, 22, 39, 42, 43, 44, 45, 73, 86, 88, 95, 106, 107, 108, 122, 123, 124, 131, 136, 144, 149, 150, 151, 154, 155, 157, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 216, 217, 220, 227, 229], "data": [0, 3, 7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 70, 89, 94, 105, 108, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 146, 155, 157, 163, 164, 165, 175, 183, 184, 189, 203, 205, 206, 207, 216, 220, 223, 227, 228, 229], "util": [0, 3, 11, 12, 14, 15, 16, 22, 39, 42, 44, 45, 73, 86, 89, 90, 91, 92, 93, 95, 141, 142, 143, 203, 216, 221, 222, 223, 227, 229, 230], "e": [0, 1, 3, 7, 9, 10, 11, 12, 14, 15, 19, 22, 23, 33, 34, 39, 40, 42, 44, 45, 61, 63, 73, 77, 80, 82, 83, 86, 104, 108, 111, 118, 119, 131, 132, 138, 162, 163, 164, 165, 175, 185, 206, 222, 223, 228, 229, 230], "g": [0, 1, 3, 7, 9, 10, 22, 23, 39, 40, 42, 44, 45, 61, 63, 73, 77, 80, 82, 83, 86, 104, 108, 118, 119, 131, 132, 162, 168, 169, 171, 172, 206, 222, 223, 229, 230], "collector": [0, 3, 11, 12, 13, 14, 15, 16, 128, 183, 184, 189, 190, 203, 205, 206, 216, 220, 223, 229, 230], "contain": [0, 3, 6, 11, 12, 14, 15, 19, 22, 24, 25, 26, 27, 28, 30, 36, 37, 38, 39, 42, 43, 44, 45, 46, 63, 73, 80, 83, 86, 87, 93, 94, 95, 106, 108, 131, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 162, 163, 164, 165, 175, 185, 188, 191, 193, 196, 198, 201, 203, 204, 205, 206, 207, 214, 220, 223, 227, 229, 230], "etc": [0, 3, 6, 22, 29, 39, 42, 44, 45, 83, 106, 222, 228, 229, 230], "have": [0, 3, 4, 5, 6, 7, 11, 12, 15, 19, 22, 36, 39, 42, 44, 45, 46, 60, 69, 82, 83, 87, 95, 105, 106, 133, 134, 145, 153, 154, 159, 175, 183, 220, 222, 223, 225, 227, 228, 229, 230], "few": [0, 2, 7, 175, 223, 229, 230], "depend": [0, 3, 6, 7, 135, 154, 229, 230], "possibl": [0, 3, 20, 22, 23, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131, 180, 183, 222, 227, 228, 229, 230], "standard": [0, 70, 76, 87, 94, 102, 108, 109, 110, 163, 164, 165, 222, 223, 230], "numpi": [0, 14, 17, 18, 19, 20, 21, 23, 28, 29, 81, 183, 222, 223, 229, 230], "common": [0, 3, 7, 42, 44, 45, 122, 123, 124, 139, 140, 203, 217, 220, 222, 225, 227, 228, 229, 230], "openai": [0, 6, 51, 52, 229, 230], "gym": [0, 3, 7, 10, 11, 12, 14, 40, 42, 51, 52, 70, 80, 87, 188, 191, 193, 196, 198, 201, 203, 217, 222, 223, 230], "onli": [0, 1, 6, 11, 12, 15, 19, 22, 26, 39, 42, 44, 45, 46, 61, 63, 73, 80, 83, 86, 87, 105, 131, 132, 133, 134, 186, 220, 222, 223, 225, 227, 229, 230], "option": [0, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 33, 34, 39, 40, 42, 43, 44, 45, 46, 49, 56, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 86, 87, 90, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 125, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 146, 147, 149, 150, 151, 155, 156, 157, 162, 163, 164, 165, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 183, 186, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 210, 222, 223, 230], "On": [0, 6, 223, 228], "end": [0, 22, 24, 25, 26, 27, 39, 42, 44, 45, 83, 95, 107, 166, 167, 168, 169, 170, 171, 172, 222, 225, 229, 230], "come": [0, 1, 3, 7, 44, 45, 121, 122, 123, 124, 129, 135, 222, 227, 229, 230], "set": [0, 1, 2, 3, 6, 8, 11, 12, 14, 15, 22, 23, 24, 25, 26, 27, 36, 39, 41, 42, 43, 44, 45, 61, 63, 73, 79, 80, 83, 86, 92, 107, 125, 131, 175, 180, 190, 207, 217, 221, 222, 223, 225, 229, 230], "re": [0, 3, 7, 22, 39, 42, 44, 45, 132, 220, 223, 225, 229, 230], "usabl": [0, 220, 230], "function": [0, 3, 7, 10, 16, 22, 33, 34, 35, 36, 39, 40, 42, 44, 45, 63, 78, 82, 83, 84, 85, 87, 89, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 111, 112, 113, 114, 115, 116, 119, 122, 123, 124, 125, 127, 128, 131, 132, 134, 135, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 188, 191, 193, 196, 198, 201, 203, 216, 222, 223, 225, 227, 228, 229], "cost": [0, 2, 20, 223], "return": [0, 3, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 38, 39, 40, 42, 43, 44, 45, 46, 49, 59, 60, 61, 62, 63, 64, 66, 68, 70, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 93, 94, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 111, 114, 115, 116, 117, 118, 119, 122, 123, 124, 126, 130, 131, 132, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 168, 169, 171, 172, 183, 185, 188, 189, 191, 193, 196, 198, 201, 203, 204, 205, 206, 207, 216, 220, 222, 223, 225, 227, 228, 229, 230], "process": [0, 1, 2, 3, 4, 11, 12, 15, 40, 44, 45, 87, 128, 220, 222, 223, 229, 230], "good": [0, 1, 8, 229, 230], "runtim": [0, 3, 22, 39, 42, 44, 45], "perform": [0, 3, 7, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 63, 69, 78, 82, 83, 84, 85, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 111, 112, 113, 115, 116, 125, 127, 128, 141, 150, 154, 180, 183, 222, 223, 225, 228, 229], "introduct": [0, 224, 226, 229], "env": [0, 1, 2, 4, 5, 6, 7, 11, 12, 14, 22, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 107, 108, 131, 173, 186, 188, 189, 190, 191, 193, 196, 198, 201, 203, 205, 206, 207, 216, 222, 223, 224, 225, 226], "modul": [0, 3, 7, 10, 22, 39, 42, 43, 44, 45, 63, 73, 78, 80, 82, 83, 84, 85, 86, 87, 88, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 152, 155, 156, 158, 160, 163, 164, 165, 183, 187, 192, 194, 195, 197, 200, 203, 216, 220, 222, 223, 225, 227], "us": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 19, 20, 22, 24, 25, 26, 27, 30, 39, 40, 42, 43, 44, 45, 49, 61, 62, 70, 73, 80, 81, 82, 83, 86, 87, 89, 92, 93, 94, 95, 96, 97, 102, 104, 106, 107, 108, 110, 111, 118, 119, 128, 131, 132, 136, 137, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 170, 180, 183, 184, 186, 189, 190, 191, 199, 203, 207, 213, 214, 217, 220, 221, 224, 225, 226, 228, 229], "object": [0, 3, 11, 12, 14, 15, 19, 22, 33, 34, 35, 36, 39, 42, 44, 45, 73, 82, 83, 87, 108, 121, 122, 129, 131, 132, 133, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 186, 189, 190, 202, 203, 207, 216, 220, 223, 227, 229], "state": [0, 1, 3, 11, 12, 14, 15, 22, 39, 42, 43, 44, 45, 48, 55, 60, 61, 63, 79, 80, 82, 83, 85, 87, 88, 94, 102, 105, 106, 108, 112, 115, 116, 122, 131, 136, 155, 162, 163, 164, 165, 207, 222, 223, 229], "contribut": 0, "instal": [0, 4, 9, 183, 217, 229], "improv": [0, 2, 67, 144], "structur": [0, 3, 6, 128, 163, 164, 165], "dictionari": [0, 11, 12, 14, 15, 19, 22, 39, 42, 44, 45, 83, 132, 205, 206, 207, 220, 222, 229], "featur": [0, 3, 11, 12, 14, 15, 23, 39, 42, 44, 45, 60, 95, 102, 103, 106, 109, 110, 132, 163, 164, 165, 207, 222, 223, 227, 229, 230], "tensor": [0, 3, 7, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 55, 56, 57, 60, 61, 63, 66, 70, 73, 76, 80, 81, 82, 83, 86, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 114, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 141, 142, 146, 147, 150, 151, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 188, 191, 193, 196, 198, 201, 220, 222, 223, 225, 227, 229, 230], "tensordictmodul": [0, 11, 12, 14, 15, 108, 131, 133, 222, 223, 224, 225, 226], "exampl": [0, 3, 8, 9, 10, 11, 12, 14, 15, 19, 20, 21, 22, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 61, 63, 64, 70, 73, 80, 81, 83, 86, 87, 93, 94, 95, 105, 106, 108, 111, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 135, 137, 138, 140, 163, 164, 165, 175, 176, 177, 178, 179, 181, 182, 184, 188, 191, 193, 196, 198, 201, 203, 220, 222, 223, 224, 225, 228, 229, 230], "do": [0, 3, 6, 11, 12, 14, 15, 42, 69, 93, 109, 123, 220, 222, 223, 225, 229, 230], "": [0, 1, 3, 5, 6, 7, 22, 24, 25, 26, 39, 42, 44, 45, 63, 73, 80, 83, 86, 87, 89, 95, 110, 131, 132, 157, 163, 164, 165, 198, 201, 222, 223, 225, 228, 229, 230], "don": [0, 5, 6, 17, 18, 19, 20, 21, 23, 28, 29, 39, 222, 228, 229, 230], "t": [0, 3, 5, 6, 7, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 39, 40, 42, 44, 45, 73, 86, 87, 93, 131, 140, 146, 163, 164, 165, 183, 184, 207, 217, 222, 223, 225, 229, 230], "showcas": 0, "implement": [0, 2, 3, 8, 10, 22, 36, 39, 42, 44, 45, 87, 104, 117, 118, 119, 144, 154, 157, 188, 196, 198, 201, 220, 222, 223, 230], "deepmind": [0, 6, 8, 49, 50], "control": [0, 1, 3, 4, 44, 45, 49, 50, 96, 97, 98, 99, 107, 108, 116, 128, 131, 132, 133, 145, 153, 154, 158, 163, 166, 167, 170, 191, 220, 222], "devic": [0, 1, 2, 3, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 33, 34, 39, 41, 42, 43, 44, 45, 48, 55, 56, 57, 58, 63, 72, 73, 80, 81, 83, 86, 94, 95, 96, 97, 98, 99, 103, 105, 106, 108, 109, 110, 122, 123, 124, 126, 128, 129, 130, 131, 134, 135, 137, 138, 146, 184, 188, 191, 193, 196, 198, 199, 201, 222, 223, 225, 227, 230], "run": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 15, 22, 39, 42, 43, 44, 45, 49, 50, 63, 69, 70, 78, 82, 83, 84, 85, 87, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 133, 134, 141, 180, 205, 206, 207, 217, 220, 222, 223, 225, 227, 228, 230], "parallel": [0, 1, 3, 7, 11, 12, 15, 89, 144, 204, 205, 206, 207, 223], "vecnorm": [0, 40, 207, 216], "task": [0, 8, 44, 45, 49, 73, 86, 222, 223, 224, 226, 229, 230], "specif": [0, 4, 7, 26, 27, 42, 183, 216, 220, 224, 226], "polici": [0, 1, 2, 3, 7, 11, 12, 13, 14, 15, 39, 42, 43, 44, 45, 92, 93, 110, 122, 123, 124, 125, 127, 128, 131, 132, 137, 138, 144, 145, 146, 153, 154, 155, 157, 180, 184, 188, 189, 190, 191, 193, 196, 203, 205, 206, 220, 223, 224, 226, 227, 229, 230], "multi": [0, 3, 6, 8, 22, 39, 42, 44, 45, 105, 106, 222, 223, 224, 226, 230], "execut": [0, 1, 3, 6, 7, 14, 22, 24, 25, 26, 27, 39, 40, 42, 43, 44, 45, 133, 134, 186, 207, 220, 223, 226, 227, 229], "divers": [0, 44, 45], "rollout": [0, 1, 3, 11, 12, 14, 15, 39, 42, 43, 44, 45, 56, 57, 89, 94, 108, 128, 144, 186, 222, 223, 230], "ddpg": [0, 96, 97, 98, 99, 146, 152, 158, 191, 192, 216, 224, 226], "normal": [0, 70, 87, 95, 104, 106, 111, 118, 119, 132, 180, 181, 207, 220, 223, 229], "observ": [0, 2, 3, 7, 11, 12, 14, 28, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 55, 56, 57, 60, 61, 62, 63, 64, 66, 68, 70, 71, 74, 77, 79, 80, 81, 82, 83, 84, 87, 93, 96, 97, 98, 99, 105, 112, 113, 115, 121, 122, 123, 124, 126, 127, 128, 129, 130, 135, 136, 137, 138, 150, 163, 164, 165, 174, 188, 191, 193, 196, 198, 201, 203, 220, 223, 225, 227, 228, 229, 230], "build": [0, 3, 6, 16, 19, 22, 39, 42, 44, 45, 87, 94, 108, 132, 183, 187, 192, 194, 195, 197, 199, 200, 202, 220, 227, 228, 229, 230], "evalu": [0, 22, 39, 42, 44, 45, 83, 100, 114, 119, 155, 189, 190, 223], "your": [0, 2, 3, 6, 7, 9, 22, 39, 42, 44, 45, 87, 207, 217, 223, 228, 230], "record": [0, 22, 39, 42, 44, 45, 154, 173, 174, 203, 216, 220, 223], "replai": [0, 7, 14, 24, 25, 26, 27, 30, 31, 32, 36, 37, 44, 45, 146, 147, 155, 157, 183, 199, 203, 216, 220, 223], "buffer": [0, 3, 7, 14, 22, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 43, 44, 45, 63, 73, 80, 83, 86, 131, 134, 146, 147, 155, 157, 183, 199, 203, 216, 220, 223, 227, 229], "hyperparamet": [0, 1], "initi": [0, 6, 11, 12, 14, 15, 22, 39, 42, 44, 45, 70, 73, 80, 82, 83, 88, 94, 108, 109, 110, 125, 127, 128, 153, 155, 157, 188, 191, 193, 196, 198, 201, 207, 223, 229], "time": [0, 3, 6, 7, 11, 12, 14, 15, 22, 39, 40, 42, 44, 45, 61, 80, 87, 93, 102, 105, 128, 150, 155, 163, 164, 165, 183, 223, 225, 227, 228, 229, 230], "train": [0, 1, 11, 12, 14, 15, 22, 39, 42, 44, 45, 67, 73, 83, 86, 96, 98, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 163, 183, 184, 203, 220, 228, 229], "experi": [0, 3, 24, 30, 208, 210, 211, 212, 213, 214, 217], "result": [0, 1, 3, 6, 11, 12, 14, 15, 22, 24, 25, 26, 27, 39, 40, 42, 44, 45, 59, 60, 61, 62, 63, 64, 66, 68, 70, 74, 75, 76, 79, 80, 81, 82, 83, 84, 87, 89, 93, 106, 138, 163, 166, 167, 168, 169, 170, 171, 172, 173, 184, 223, 228, 229, 230], "sampl": [0, 2, 7, 8, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 39, 43, 90, 92, 94, 100, 104, 108, 114, 115, 118, 119, 125, 127, 128, 131, 132, 145, 146, 147, 153, 154, 175, 183, 185, 223, 227, 229, 230], "trajectori": [0, 1, 11, 12, 14, 15, 16, 22, 39, 42, 44, 45, 82, 94, 108, 128, 154, 163, 165, 166, 167, 168, 169, 170, 171, 172, 175, 223, 229, 230], "td": [0, 19, 47, 48, 49, 50, 51, 52, 54, 55, 61, 64, 70, 81, 83, 87, 93, 94, 107, 108, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 135, 137, 138, 164, 165, 168, 169, 171, 172, 173, 175, 182, 188, 191, 193, 196, 198, 201, 227, 228, 229, 230], "lambda": [0, 11, 12, 14, 15, 40, 149, 151, 165, 168, 169, 171, 172, 203, 227, 228, 229, 230], "pixel": [0, 3, 6, 19, 68, 73, 74, 81, 86, 96, 112, 113, 174, 188, 193, 196, 198, 201, 222, 224, 226, 229, 230], "dqn": [0, 126, 130, 137, 147, 148, 152, 158, 193, 194, 216, 224, 226], "problem": [0, 6, 7, 14, 229], "deep": [0, 8, 60, 96, 97, 98, 99, 101, 128, 144, 152, 157, 158, 191, 222], "q": [0, 96, 97, 98, 99, 101, 103, 137, 138, 146, 147, 148, 152, 155, 157, 198, 201, 227], "network": [0, 1, 7, 22, 39, 42, 44, 45, 95, 96, 97, 98, 99, 101, 102, 103, 106, 110, 112, 113, 115, 116, 122, 123, 124, 131, 146, 147, 148, 152, 155, 157, 158, 160, 163, 164, 165, 188, 191, 196, 202, 203, 220, 222, 225, 227, 229], "regular": [0, 15, 131, 132, 138, 148, 184, 220, 222, 227, 228, 229], "conclus": 0, "api": [0, 3, 4, 73, 86, 220, 229, 230], "packag": [0, 5, 6, 9, 216, 217, 229], "helper": [0, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 222, 230], "compos": [0, 3, 22, 24, 25, 26, 31, 32, 37, 39, 42, 44, 45, 82, 83, 87, 150, 188, 191, 193, 196, 198, 201, 216, 223, 225, 229, 230], "tensorspec": [0, 3, 13, 17, 18, 19, 20, 21, 23, 29, 39, 43, 59, 60, 61, 62, 63, 64, 66, 68, 70, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 116, 121, 125, 127, 128, 129, 131, 132, 133, 216], "envbas": [0, 3, 11, 12, 14, 15, 40, 42, 44, 45, 46, 69, 82, 83, 87, 89, 94, 107, 108, 180, 186, 188, 189, 190, 191, 193, 196, 198, 201, 203, 205, 206, 207, 216], "gymlikeenv": [0, 216], "envmetadata": [0, 216], "spec": [0, 2, 3, 17, 18, 19, 20, 21, 23, 28, 29, 39, 41, 42, 43, 44, 45, 59, 60, 61, 62, 63, 64, 66, 68, 70, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 116, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 137, 138, 188, 191, 193, 196, 198, 201, 216, 222, 223, 225, 230], "vector": [0, 7, 17, 23, 44, 45, 96, 98, 106, 165, 171, 172, 216, 222, 223, 225, 227, 229], "domain": [0, 2, 7, 17, 18, 19, 20, 21, 23, 28, 29, 80, 131, 132, 133, 134, 216, 229, 230], "hook": [0, 22, 39, 42, 44, 45, 63, 78, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 126, 127, 128, 130, 137, 138, 141, 177, 178, 180, 181, 183, 184, 216], "explor": [0, 1, 88, 110, 125, 127, 128, 131, 132, 144, 180, 189, 190, 203, 216, 222, 223], "planner": [0, 94, 108, 216], "distribut": [0, 2, 3, 8, 9, 70, 94, 100, 101, 102, 104, 108, 111, 114, 115, 116, 117, 118, 119, 126, 132, 133, 137, 145, 148, 153, 154, 216, 220, 222, 223, 227, 229, 230], "sac": [0, 155, 157, 200, 201, 216], "redq": [0, 155, 197, 198, 216], "ppo": [0, 7, 132, 145, 153, 154, 188, 195, 196, 216], "a2c": [0, 144, 187, 216], "dreamer": [0, 58, 102, 149, 150, 151, 216], "trainer": [0, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 222], "checkpoint": [0, 216], "builder": [0, 216, 223, 229], "logger": [0, 174, 178, 180, 183, 203, 207, 208, 210, 211, 212, 213, 214, 216], "_util": [0, 10, 216], "implement_for": [0, 216], "work": [0, 3, 6, 7, 22, 39, 42, 44, 45, 61, 73, 87, 95, 106, 183, 217, 223, 225, 227, 228, 229, 230], "what": [0, 7, 28, 39, 42, 44, 45, 80, 217, 223, 227, 229, 230], "version": [0, 1, 10, 22, 39, 42, 44, 45, 165, 217, 222, 223, 229], "habitat": [0, 53, 217], "lab": [0, 3, 49, 50, 217], "up": [0, 1, 2, 3, 7, 8, 20, 217, 222, 223, 227, 229], "issu": [0, 4, 7, 131, 132, 217, 230], "about": [0, 4, 217, 222, 223, 229, 230], "mujoco": [0, 5, 217], "prerequisit": 0, "render": [0, 7, 180, 217, 222, 223], "all": [0, 3, 7, 11, 12, 14, 15, 22, 39, 40, 42, 43, 44, 45, 46, 63, 65, 70, 73, 77, 78, 80, 82, 83, 84, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 131, 132, 134, 141, 150, 179, 183, 185, 205, 206, 207, 217, 220, 222, 223, 224, 225, 227, 228, 229, 230], "bindindg": 0, "2": [0, 1, 7, 9, 11, 12, 14, 21, 22, 39, 40, 42, 44, 45, 56, 57, 61, 63, 70, 73, 80, 83, 86, 87, 95, 96, 97, 98, 103, 105, 106, 111, 126, 127, 128, 131, 135, 137, 145, 146, 153, 155, 157, 162, 163, 164, 165, 168, 169, 171, 172, 174, 175, 222, 223, 225, 228, 229, 230], "1": [0, 1, 2, 3, 7, 9, 11, 12, 14, 15, 20, 21, 22, 23, 29, 39, 40, 42, 43, 44, 45, 48, 55, 56, 57, 59, 61, 63, 64, 67, 69, 70, 73, 80, 81, 83, 86, 87, 93, 94, 95, 96, 97, 99, 103, 104, 106, 108, 109, 110, 111, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 135, 137, 141, 144, 145, 150, 153, 154, 155, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 180, 181, 188, 191, 193, 196, 198, 201, 203, 207, 217, 220, 222, 223, 225, 228, 229, 230], "old": [0, 153, 229], "bind": 0, "py": [0, 220, 222, 223, 225, 226, 227, 228, 229, 230], "when": [0, 1, 3, 4, 7, 11, 12, 14, 15, 22, 24, 25, 26, 27, 33, 34, 35, 36, 39, 40, 42, 44, 45, 63, 69, 73, 77, 80, 82, 83, 86, 87, 92, 94, 106, 107, 108, 109, 118, 131, 132, 134, 141, 145, 153, 154, 162, 173, 174, 207, 217, 220, 222, 223, 227, 228, 229], "pro": [0, 6, 217], "tip": [0, 6, 217], "debug": [0, 5, 217, 229], "gradient": [0, 22, 39, 42, 44, 45, 83, 104, 110, 118, 119, 144, 156, 162, 163, 164, 165, 183, 222, 223], "relat": [0, 9, 222], "error": [0, 1, 3, 6, 9, 10, 22, 39, 42, 44, 45, 89, 140, 222, 223, 228, 229], "newcom": 0, "my": 0, "too": [0, 6, 104, 118, 119, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 163, 164, 165, 222, 223, 229], "slow": [0, 3], "intermedi": 0, "resourc": [0, 217], "functorch": [0, 7, 9, 131, 134, 139, 223, 230], "blog": 0, "websit": 0, "index": [0, 6, 7, 9, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 37, 38, 93, 222, 225, 228, 230], "search": [0, 223], "page": [0, 6], "somewhat": [1, 229], "equival": [1, 11, 12, 14, 15, 22, 39, 42, 44, 45, 83, 229, 230], "dataload": [1, 228], "except": [1, 17, 18, 19, 20, 21, 23, 28, 29, 39, 65, 114, 140, 222, 223, 228, 229], "thei": [1, 3, 7, 8, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 64, 65, 82, 83, 86, 105, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 183, 220, 222, 223, 225, 227, 228, 229, 230], "collect": [1, 3, 7, 11, 12, 14, 15, 22, 24, 25, 26, 27, 70, 73, 86, 89, 128, 146, 155, 157, 175, 183, 184, 185, 186, 203, 220, 222, 223, 228, 229, 230], "over": [1, 2, 3, 7, 11, 12, 14, 15, 22, 39, 42, 44, 45, 70, 134, 148, 150, 185, 220, 222, 227, 228, 229, 230], "non": [1, 7, 22, 39, 42, 44, 45, 59, 63, 73, 80, 83, 86, 131, 132, 150, 163, 164, 165, 222, 227, 229], "static": [1, 87], "like": [1, 6, 22, 39, 42, 44, 45, 53, 81, 89, 155, 222, 228, 229, 230], "being": [1, 3, 7, 15, 22, 39, 42, 44, 45, 83, 92, 128, 174, 184, 205, 206, 207, 222, 223], "accept": [1, 11, 12, 14, 15, 22, 39, 42, 43, 44, 45, 63, 73, 77, 80, 83, 86, 131, 132, 133, 220, 227, 229], "two": [1, 7, 9, 22, 39, 42, 44, 45, 99, 132, 153, 157, 159, 180, 183, 188, 196, 198, 201, 222, 223, 225, 227, 228, 229, 230], "main": [1, 2, 4, 40, 86, 132, 183, 222, 223, 225, 229], "argument": [1, 3, 11, 12, 14, 15, 19, 22, 39, 42, 44, 45, 63, 73, 80, 82, 83, 86, 95, 106, 109, 131, 132, 133, 135, 173, 177, 185, 188, 191, 193, 196, 198, 201, 203, 204, 207, 222, 223, 227, 229], "list": [1, 5, 6, 7, 8, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 39, 42, 43, 44, 45, 60, 73, 77, 83, 86, 106, 134, 135, 161, 163, 165, 173, 180, 205, 206, 222, 223, 225, 227, 228, 229, 230], "constructor": [1, 14, 82, 163, 164, 165, 188, 191, 193, 196, 198, 201, 204, 207, 227], "iter": [1, 12, 14, 21, 22, 24, 25, 26, 27, 39, 42, 44, 45, 70, 87, 95, 106, 131, 132, 133, 134, 139, 161, 180, 182, 183, 188, 196, 198, 201, 220, 222], "step": [1, 3, 7, 11, 12, 14, 15, 22, 39, 40, 42, 43, 44, 45, 46, 48, 55, 69, 70, 79, 83, 93, 94, 102, 105, 107, 108, 125, 127, 128, 132, 144, 149, 154, 162, 173, 175, 180, 183, 220, 222, 223, 225, 228, 230], "queri": [1, 11, 12, 14, 15, 22, 39, 42, 44, 45, 73, 82, 87, 134, 227, 230], "defin": [1, 2, 17, 18, 19, 20, 21, 23, 28, 29, 39, 42, 44, 45, 63, 78, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141, 163, 164, 165, 173, 204, 223, 227, 228, 229], "number": [1, 3, 7, 11, 12, 14, 15, 18, 20, 22, 23, 24, 25, 26, 30, 33, 34, 35, 39, 42, 43, 44, 45, 60, 67, 69, 70, 76, 79, 87, 94, 95, 100, 101, 102, 103, 104, 106, 108, 111, 112, 113, 115, 116, 117, 118, 119, 125, 127, 128, 131, 132, 143, 149, 155, 157, 175, 177, 180, 183, 184, 185, 186, 205, 206, 207, 222, 223, 229], "befor": [1, 3, 6, 9, 11, 12, 14, 15, 22, 39, 42, 44, 45, 46, 59, 60, 61, 62, 63, 64, 66, 68, 70, 74, 75, 76, 79, 80, 81, 82, 84, 86, 106, 109, 110, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 164, 165, 222, 223, 227, 228, 229], "deliv": [1, 223, 230], "stack": [1, 6, 7, 44, 45, 86, 87, 93, 133, 134, 173, 175, 223, 225, 227, 228, 230], "user": [1, 2, 4, 7, 22, 39, 42, 44, 45, 79, 83, 105, 204, 220, 223, 227, 229, 230], "reset": [1, 3, 7, 11, 12, 14, 15, 39, 40, 42, 43, 44, 45, 48, 55, 60, 63, 69, 73, 77, 79, 80, 82, 85, 87, 88, 93, 120, 128, 173, 188, 191, 193, 196, 198, 201, 222, 223, 225, 230], "whenev": [1, 3, 184], "reach": [1, 11, 12, 14, 15, 39, 42, 44, 45, 125, 127, 128, 229, 230], "done": [1, 3, 6, 7, 11, 12, 14, 19, 22, 39, 40, 42, 43, 44, 45, 48, 55, 56, 57, 70, 76, 79, 80, 87, 93, 94, 108, 146, 147, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 188, 191, 193, 196, 198, 201, 222, 223, 225, 228, 229, 230], "after": [1, 7, 19, 22, 39, 42, 44, 45, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 74, 75, 76, 79, 80, 81, 82, 83, 84, 93, 109, 125, 127, 150, 222, 223, 227, 228, 229], "predifin": 1, "becaus": [1, 6, 82, 99, 105, 131, 132, 222, 223, 225, 228, 229], "potenti": 1, "comput": [1, 3, 7, 11, 14, 20, 22, 39, 42, 44, 45, 63, 70, 78, 82, 83, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 111, 112, 113, 115, 116, 118, 119, 122, 125, 127, 128, 132, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 186, 222, 223, 225, 227], "heavi": [1, 7], "crucial": [1, 222, 223, 229], "configur": [1, 7, 11, 12, 14, 15, 154, 188, 196, 198, 201], "appropri": [1, 6, 11, 12, 14, 15, 37, 38, 204, 207], "paramet": [1, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 46, 49, 50, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 196, 198, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 222, 223, 227, 230], "consider": [1, 3, 7, 222], "whether": [1, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 39, 42, 43, 44, 45, 83, 86, 95, 106, 135, 146, 147, 148, 155, 157, 165, 223, 229], "should": [1, 3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 36, 39, 42, 43, 44, 45, 63, 70, 77, 78, 82, 83, 84, 85, 87, 89, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 131, 132, 141, 152, 153, 154, 155, 158, 162, 163, 164, 165, 174, 179, 180, 183, 203, 205, 206, 207, 220, 222, 223, 225, 229, 230], "occur": [1, 7, 12, 61, 131, 132, 150, 229], "serial": [1, 3, 22, 39, 42, 44, 45, 87], "optim": [1, 7, 22, 39, 42, 44, 45, 94, 108, 109, 110, 154, 157, 179, 183, 188, 196, 203, 220, 222, 223, 228], "syncdatacollector": [1, 11, 12, 15, 203, 206, 216], "worker": [1, 11, 12, 14, 15, 40, 44, 45, 87, 205, 206, 207, 229, 230], "multisyncdatacollector": [1, 206, 216, 230], "split": [1, 11, 12, 14, 15, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 220, 230], "workload": 1, "across": [1, 87, 128, 184, 228], "aggreg": [1, 95, 96, 97, 134, 228], "final": [1, 125, 127, 128, 133, 163, 180, 222, 223, 229], "multiasyncdatacollector": [1, 15, 205, 216, 222, 223, 230], "sever": [1, 7, 22, 39, 42, 44, 45, 61, 83, 154, 229], "batch": [1, 3, 11, 12, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 39, 42, 43, 44, 45, 70, 83, 86, 100, 101, 105, 109, 114, 117, 128, 131, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 182, 183, 184, 205, 206, 207, 220, 222, 223, 225, 227, 229, 230], "gather": [1, 162, 186, 217, 227, 229], "continu": [1, 8, 18, 29, 96, 97, 98, 99, 128, 132, 134, 158, 163, 166, 167, 170, 191, 222, 229], "concomittantli": 1, "impli": [1, 229], "weight": [1, 8, 11, 12, 14, 15, 22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 110, 131, 144, 145, 150, 184, 202, 220, 222, 223, 225, 230], "mai": [1, 3, 4, 6, 7, 11, 12, 14, 15, 22, 39, 42, 44, 45, 83, 87, 106, 220, 222, 229, 230], "slightli": [1, 222, 227, 229], "lag": [1, 11, 12, 14, 15], "therefor": [1, 3, 6, 154, 228, 229], "although": [1, 7, 39, 42, 44, 45, 63, 78, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141, 220, 222, 223], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 6, 7, 11, 12, 14, 15, 24, 25, 26, 27, 33, 34, 39, 42, 43, 44, 45, 73, 77, 82, 86, 125, 127, 131, 132, 143, 144, 145, 146, 148, 152, 153, 154, 155, 157, 158, 162, 163, 164, 165, 173, 174, 183, 184, 220, 222, 223, 225, 227, 229], "asynchron": [1, 8, 12, 22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131, 144, 205], "off": [1, 2, 104, 118, 119, 157, 180, 189, 220, 223, 229], "curriculum": 1, "For": [1, 3, 6, 7, 8, 9, 11, 12, 14, 15, 22, 39, 42, 44, 45, 109, 137, 144, 148, 154, 180, 191, 220, 222, 227, 229], "remot": [1, 44, 45, 229], "necessari": [1, 5, 7, 11, 12, 14, 15, 155, 163, 164, 165, 222], "synchronis": [1, 40], "from": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 46, 61, 70, 73, 79, 80, 81, 82, 83, 86, 87, 93, 94, 96, 97, 98, 99, 104, 106, 107, 108, 109, 111, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 145, 146, 147, 153, 154, 155, 157, 162, 163, 164, 165, 173, 174, 175, 183, 185, 186, 188, 191, 193, 196, 198, 199, 201, 203, 204, 207, 217, 220, 222, 223, 225, 227, 228, 229, 230], "either": [1, 4, 22, 39, 42, 44, 45, 136, 191, 214, 220, 228, 229, 230], "update_policy_weights_": [1, 11, 12, 14, 15, 222, 223, 230], "update_at_each_batch": [1, 11, 12, 15, 222], "true": [1, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 56, 57, 61, 63, 69, 70, 73, 76, 79, 80, 81, 83, 86, 87, 89, 93, 94, 95, 96, 97, 98, 99, 103, 104, 106, 108, 109, 110, 118, 119, 122, 123, 124, 125, 128, 131, 132, 133, 134, 140, 144, 145, 149, 150, 151, 153, 154, 155, 157, 159, 163, 164, 165, 168, 169, 171, 172, 173, 174, 177, 178, 180, 183, 193, 207, 220, 222, 223, 225, 227, 228, 229, 230], "second": [1, 7, 182, 222, 223, 225, 227, 228, 229, 230], "consid": [1, 7, 22, 39, 42, 44, 45, 100, 117, 222, 228], "oper": [1, 3, 6, 7, 11, 12, 15, 22, 39, 42, 44, 45, 82, 111, 122, 123, 124, 131, 136, 137, 144, 145, 146, 147, 148, 153, 154, 162, 163, 164, 165, 183, 191, 193, 198, 201, 220, 222, 223, 225, 227, 229], "instanc": [1, 3, 6, 7, 11, 12, 14, 15, 22, 28, 39, 40, 42, 43, 44, 45, 50, 60, 63, 78, 80, 82, 84, 85, 87, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 111, 112, 113, 115, 116, 125, 127, 128, 132, 133, 134, 141, 174, 180, 186, 188, 189, 190, 191, 193, 196, 198, 201, 203, 205, 206, 214, 220, 223, 227, 228, 229, 230], "cpu": [1, 3, 7, 9, 11, 12, 14, 22, 28, 33, 34, 39, 42, 43, 44, 45, 48, 55, 56, 57, 58, 63, 73, 80, 83, 86, 94, 108, 110, 129, 131, 134, 188, 191, 193, 196, 198, 201, 222, 223, 225, 228, 229, 230], "slower": 1, "than": [1, 7, 11, 12, 14, 15, 86, 99, 106, 111, 125, 127, 131, 184, 217, 222, 223, 227, 228, 229, 230], "one": [1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 21, 23, 24, 25, 26, 27, 36, 37, 38, 39, 40, 42, 44, 45, 46, 63, 69, 73, 78, 82, 83, 84, 85, 86, 87, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 114, 115, 116, 125, 126, 127, 128, 130, 131, 132, 137, 138, 141, 143, 144, 145, 146, 147, 153, 154, 155, 177, 179, 180, 183, 186, 188, 196, 198, 201, 207, 217, 220, 222, 223, 225, 227, 228, 229, 230], "cuda": [1, 3, 6, 22, 39, 42, 44, 45, 63, 72, 73, 80, 83, 86, 131, 176, 222, 223, 228, 229], "multipl": [1, 3, 4, 7, 11, 12, 14, 15, 20, 44, 45, 61, 77, 82, 87, 105, 109, 110, 131, 132, 155, 198, 207, 220, 223, 228, 230], "infer": [1, 44, 45, 87, 109, 157, 222, 227, 228], "dispatch": 1, "avail": [1, 5, 132, 137, 138, 205, 206, 222, 223, 229], "speed": [1, 2, 7, 20, 222, 223], "avoid": [1, 22, 39, 42, 44, 45, 83, 87, 131, 185, 227], "oom": 1, "choic": [1, 2, 111], "size": [1, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 36, 39, 41, 42, 43, 44, 45, 48, 55, 56, 57, 58, 61, 73, 78, 80, 81, 83, 84, 86, 94, 95, 100, 105, 106, 108, 111, 114, 115, 116, 117, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 135, 137, 138, 162, 163, 164, 165, 174, 175, 188, 191, 193, 196, 198, 201, 222, 223, 225, 227, 229, 230], "pass": [1, 3, 14, 19, 22, 26, 39, 40, 41, 42, 44, 45, 63, 78, 82, 84, 85, 87, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 109, 111, 112, 113, 115, 116, 125, 127, 128, 131, 132, 134, 140, 141, 163, 164, 165, 205, 206, 207, 222, 223, 225, 229], "ie": 1, "store": [1, 7, 11, 12, 14, 15, 19, 22, 26, 27, 33, 34, 35, 39, 42, 44, 45, 87, 94, 105, 108, 188, 191, 193, 196, 198, 201, 220, 222, 223, 228, 229], "while": [1, 3, 6, 7, 22, 39, 42, 44, 45, 63, 78, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141, 153, 154, 222, 223, 230], "wait": [1, 223], "also": [1, 2, 3, 7, 22, 26, 39, 42, 44, 45, 77, 83, 116, 133, 134, 144, 146, 147, 163, 220, 222, 223, 225, 227, 228, 229], "impact": 1, "memori": [1, 7, 20, 22, 33, 39, 40, 42, 44, 45, 63, 73, 80, 83, 86, 87, 131, 207, 220, 222, 230], "manag": [1, 7, 160, 161, 180, 222, 227], "kei": [1, 3, 6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 39, 42, 44, 45, 46, 60, 61, 70, 73, 77, 80, 82, 83, 86, 87, 93, 94, 107, 108, 125, 127, 128, 131, 132, 133, 134, 135, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 162, 163, 164, 165, 174, 179, 180, 182, 183, 186, 188, 196, 198, 201, 220, 222, 223, 225, 227, 229, 230], "which": [1, 3, 6, 7, 10, 11, 12, 14, 15, 19, 20, 22, 23, 27, 39, 42, 44, 45, 46, 60, 61, 67, 69, 70, 73, 82, 83, 104, 118, 119, 122, 123, 124, 131, 132, 134, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 163, 175, 179, 188, 191, 193, 196, 198, 201, 220, 222, 223, 225, 227, 228, 229], "passing_devic": [1, 11, 12, 14, 15, 222, 223, 230], "dure": [1, 11, 12, 14, 15, 39, 42, 44, 45, 67, 83, 180, 183, 222, 229], "A": [1, 3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 53, 67, 73, 80, 82, 83, 85, 87, 88, 89, 93, 94, 95, 106, 108, 110, 111, 125, 127, 132, 133, 134, 137, 141, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 177, 183, 184, 188, 193, 196, 198, 201, 203, 208, 209, 210, 223, 228, 229], "heurist": [1, 17, 18, 19, 20, 21, 23, 28, 29, 128, 222, 229], "usual": [1, 3, 5, 6, 7, 39, 42, 44, 45, 110, 173, 188, 196, 198, 201, 217, 220, 229], "same": [1, 3, 14, 22, 39, 40, 42, 44, 45, 67, 69, 70, 82, 83, 87, 95, 106, 128, 222, 223, 225, 227, 228, 229], "storag": [1, 2, 7, 22, 24, 25, 26, 27, 33, 34, 35, 39, 41, 42, 44, 45, 216, 220, 222, 223], "default": [1, 3, 9, 11, 12, 14, 15, 19, 20, 22, 23, 24, 25, 26, 33, 34, 39, 42, 44, 45, 46, 49, 60, 61, 69, 70, 73, 76, 80, 81, 83, 86, 87, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 125, 127, 128, 129, 131, 132, 135, 141, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 168, 169, 171, 172, 173, 174, 175, 177, 178, 180, 181, 183, 188, 191, 196, 198, 201, 203, 207, 220, 222, 223, 227, 228, 229, 230], "behaviour": [1, 3, 42, 61, 104, 118, 119, 180, 223], "besid": 1, "those": [1, 4, 6, 44, 45, 70, 132, 133, 134, 184, 205, 206, 222, 223, 229], "choos": [1, 222], "follow": [1, 2, 3, 5, 6, 7, 22, 39, 42, 43, 44, 45, 73, 95, 106, 143, 145, 153, 156, 183, 198, 201, 220, 222, 223, 225, 227, 228, 229, 230], "max_frames_per_traj": [1, 11, 12, 14, 15, 185, 222, 230], "frame": [1, 11, 12, 14, 15, 22, 42, 60, 67, 125, 127, 128, 173, 174, 177, 180, 183, 185, 186, 222, 223, 229, 230], "call": [1, 3, 6, 7, 10, 11, 12, 14, 15, 22, 24, 25, 26, 27, 33, 34, 35, 36, 39, 42, 44, 45, 60, 63, 64, 72, 73, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 108, 109, 111, 112, 113, 115, 116, 125, 127, 128, 131, 132, 134, 141, 162, 173, 180, 220, 222, 223, 227, 228, 229, 230], "frames_per_batch": [1, 11, 12, 14, 15, 185, 222, 223, 230], "each": [1, 3, 6, 7, 11, 12, 14, 15, 16, 21, 22, 26, 39, 40, 42, 44, 45, 73, 77, 79, 80, 86, 87, 134, 137, 138, 168, 169, 171, 172, 180, 205, 206, 222, 223, 227, 229, 230], "init_random_fram": [1, 11, 12, 14, 15, 185, 222, 223], "random": [1, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 28, 29, 31, 39, 42, 43, 44, 45, 69, 70, 80, 131, 132, 155, 180, 186, 222, 223, 229, 230], "rand_step": [1, 39, 40, 42, 43, 44, 45, 47, 49, 50, 51, 52, 54, 87, 229, 230], "reset_at_each_it": [1, 11, 12, 14, 15, 222], "split_traj": [1, 11, 12, 14, 15, 222], "pad": [1, 16, 95, 96, 97, 105, 222, 223], "along": [1, 60, 61, 70, 77, 81, 86, 106, 110, 131, 132, 223, 228], "mask": [1, 11, 12, 14, 222, 223, 228, 229], "point": [1, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 37, 38, 39, 42, 44, 45, 60, 63, 73, 80, 81, 83, 86, 107, 131, 143, 148, 183, 217, 225, 229], "boolean": [1, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 125, 166, 167, 168, 169, 170, 171, 172, 220], "repres": [1, 3, 11, 12, 14, 15, 26, 39, 42, 44, 45, 67, 132, 137, 138, 159, 163, 227, 228], "valid": [1, 83, 95, 106, 125, 127, 153, 220, 229], "valu": [1, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 39, 42, 44, 45, 46, 59, 61, 69, 70, 73, 75, 77, 80, 81, 82, 83, 86, 87, 96, 97, 98, 99, 100, 102, 103, 104, 106, 108, 109, 110, 111, 114, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 183, 188, 191, 196, 198, 201, 203, 220, 222, 223, 225, 227, 229, 230], "exploration_mod": [1, 11, 14, 180, 216, 222, 223, 227], "strategi": [1, 220, 222], "reset_when_don": [1, 11, 14], "central": 2, "part": [2, 7, 22, 39, 42, 44, 45, 70, 77, 135, 175, 207, 222, 223, 227, 229], "algorithm": [2, 7, 8, 11, 12, 43, 67, 144, 154, 155, 156, 175, 188, 189, 196, 220, 222, 223, 228, 230], "wide": [2, 3, 4], "we": [2, 3, 4, 6, 8, 19, 22, 39, 40, 42, 44, 45, 73, 86, 87, 94, 105, 217, 220, 222, 223, 225, 227, 228, 229, 230], "give": [2, 6, 43, 217, 222, 223, 230], "abil": 2, "veri": [2, 3, 222, 223, 229, 230], "influenti": 2, "latenc": 2, "especi": [2, 3, 6, 7, 61], "larger": 2, "volum": 2, "lazymemmapstorag": [2, 216, 222, 223], "advis": [2, 229], "share": [2, 7, 33, 34, 35, 36, 40, 44, 45, 87, 122, 123, 124, 207, 225, 227, 229, 230], "due": [2, 3, 4, 229], "lower": [2, 11, 12, 14, 15, 18, 87, 115, 116, 228], "serialis": 2, "memmaptensor": 2, "well": [2, 3, 7, 11, 12, 15, 22, 36, 39, 42, 44, 45, 115, 116, 222, 223, 227, 228, 229, 230], "specifi": [2, 10, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 77, 78, 84, 94, 131, 132, 222, 227], "file": [2, 5, 6, 173, 220, 223, 226, 227, 230], "locat": [2, 6, 42, 70, 76, 104, 111, 118, 119, 228], "node": [2, 188, 191, 193, 196, 198, 201], "failur": 2, "recoveri": 2, "mean": [2, 3, 6, 14, 70, 87, 94, 100, 102, 105, 108, 117, 132, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 222, 223, 229, 230], "liststorag": [2, 24, 25, 26, 216], "were": [2, 6, 44, 45, 222], "found": [2, 5, 6, 9, 19, 22, 26, 39, 42, 44, 45, 87, 132, 146, 154, 222, 223, 227], "rough": 2, "benchmark": [2, 8], "http": [2, 4, 5, 6, 9, 24, 30, 60, 73, 96, 97, 98, 99, 102, 103, 108, 110, 112, 113, 115, 116, 128, 137, 144, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 163, 166, 167, 170, 188, 191, 196, 198, 201, 230], "com": [2, 4, 5, 6, 9, 230], "tree": 2, "type": [2, 22, 24, 26, 28, 39, 42, 43, 44, 45, 63, 73, 80, 83, 86, 87, 95, 106, 110, 125, 127, 131, 132, 139, 188, 191, 193, 196, 198, 201, 205, 222, 223, 228, 229], "1x": 2, "lazytensorstorag": [2, 216], "83x": 2, "3": [2, 3, 5, 6, 9, 11, 12, 14, 19, 20, 21, 22, 23, 39, 42, 44, 45, 60, 63, 70, 73, 80, 81, 83, 86, 94, 95, 96, 97, 103, 105, 106, 108, 111, 121, 122, 123, 124, 126, 129, 131, 134, 135, 137, 140, 150, 163, 164, 165, 168, 169, 171, 172, 174, 182, 193, 220, 222, 223, 228, 229, 230], "44x": 2, "parent": [2, 3, 28, 39, 61, 67, 70, 73, 82, 86, 122, 154, 223, 228, 229, 230], "subclass": [2, 3, 39, 42, 44, 45, 63, 78, 82, 84, 85, 89, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 126, 127, 128, 130, 131, 132, 133, 141, 154, 222], "basic": [2, 43, 229], "properti": [2, 39, 42, 43, 44, 45, 83, 86, 100, 104, 109, 114, 117, 118, 119, 227, 228], "action": [2, 3, 7, 8, 11, 12, 14, 20, 23, 28, 39, 42, 43, 44, 45, 46, 48, 55, 56, 57, 64, 67, 69, 83, 93, 94, 96, 97, 98, 99, 101, 102, 106, 107, 108, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 135, 137, 138, 147, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 188, 191, 193, 196, 198, 201, 203, 207, 220, 222, 223, 225, 227, 228, 229, 230], "shape": [2, 3, 17, 18, 19, 20, 21, 23, 28, 29, 39, 42, 44, 45, 46, 61, 81, 100, 101, 106, 109, 111, 114, 117, 129, 131, 134, 159, 174, 175, 183, 203, 222, 223, 225, 227, 228, 229, 230], "dtype": [2, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 39, 42, 43, 44, 45, 48, 55, 56, 57, 58, 63, 64, 70, 73, 80, 81, 83, 86, 94, 108, 109, 110, 122, 123, 124, 126, 128, 129, 130, 131, 134, 135, 137, 138, 163, 164, 165, 188, 191, 193, 196, 198, 201, 222, 223, 225, 227, 228, 229, 230], "import": [2, 3, 5, 6, 9, 11, 12, 14, 24, 26, 30, 40, 42, 43, 44, 45, 70, 80, 87, 94, 106, 108, 111, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 135, 137, 138, 145, 163, 164, 165, 177, 180, 188, 191, 193, 196, 198, 201, 203, 222, 223, 225, 227, 228, 229, 230], "match": [2, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 40, 42, 44, 45, 59, 60, 61, 62, 63, 64, 66, 68, 70, 74, 75, 76, 79, 80, 81, 82, 83, 84, 95, 100, 106, 117, 131, 132, 153, 155, 157, 184, 223, 225, 227, 228, 229, 230], "input": [2, 3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 43, 44, 45, 61, 63, 64, 73, 77, 82, 84, 86, 93, 95, 96, 97, 98, 99, 105, 106, 109, 110, 115, 116, 128, 131, 132, 133, 134, 143, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 185, 203, 220, 223, 228, 229, 230], "output": [2, 3, 11, 12, 14, 15, 22, 24, 25, 26, 39, 42, 43, 44, 45, 73, 82, 86, 95, 96, 97, 101, 102, 105, 106, 111, 122, 125, 127, 128, 131, 132, 133, 134, 137, 138, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 163, 174, 175, 222, 225, 228, 229, 230], "send": [2, 3, 223, 228, 230], "receiv": [2, 3, 22, 39, 42, 44, 45, 82, 106, 223, 225], "parallelenv": [2, 3, 11, 12, 14, 15, 45, 204, 216, 222, 223, 225, 229, 230], "creat": [2, 3, 4, 5, 6, 9, 11, 12, 15, 22, 24, 25, 26, 39, 40, 42, 44, 45, 46, 73, 77, 82, 83, 87, 93, 95, 96, 97, 98, 99, 103, 106, 107, 132, 147, 148, 155, 174, 186, 189, 190, 203, 205, 206, 222, 223, 227, 228, 229, 230], "commun": [2, 3, 217, 229], "spawn": [2, 3], "check": [2, 3, 4, 5, 6, 10, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 40, 42, 43, 44, 45, 61, 65, 89, 131, 132, 139, 222, 223, 225, 229], "check_env_spec": [2, 3, 216], "method": [2, 3, 11, 12, 14, 15, 22, 26, 33, 34, 35, 36, 39, 42, 44, 45, 60, 63, 70, 73, 74, 80, 83, 86, 94, 105, 122, 123, 124, 131, 132, 133, 139, 144, 173, 204, 220, 221, 222, 227, 228, 229], "saniti": [2, 3, 6, 89], "offer": [3, 6, 229], "handl": [3, 22, 39, 42, 44, 45, 87, 106, 183, 205, 206], "differ": [3, 11, 12, 14, 15, 22, 39, 42, 44, 45, 83, 106, 108, 137, 138, 154, 159, 163, 164, 180, 183, 184, 205, 206, 220, 222, 223, 225, 228, 229], "backend": [3, 6, 220, 222], "dm": [3, 229], "base": [3, 7, 8, 11, 12, 14, 15, 32, 38, 43, 85, 122, 149, 183, 188, 196, 198, 201, 220, 222, 224, 226, 229], "custom": [3, 4, 22, 39, 42, 44, 45, 207], "goal": [3, 222, 223], "abl": [3, 225, 228, 230], "even": [3, 7, 12, 33, 34, 35, 36, 40, 222, 228, 229], "simul": [3, 4, 6, 7, 57, 58, 94, 108, 222], "some": [3, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 73, 96, 132, 133, 134, 175, 185, 220, 222, 223, 227, 229, 230], "box": [3, 17, 18, 19, 20, 21, 23, 28, 29], "wrapper": [3, 15, 26, 27, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 111, 125, 127, 128, 132, 136, 163, 207, 210, 211, 212, 222, 229], "under": [3, 22, 39, 42, 44, 45, 131, 132, 222, 229], "lib": [3, 4, 5, 6, 8, 9, 11, 12, 14, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 70, 80, 87, 188, 191, 193, 196, 198, 201, 203, 222, 223, 225, 229, 230], "hope": 3, "imit": 3, "other": [3, 6, 7, 22, 33, 34, 35, 36, 39, 42, 43, 44, 45, 87, 110, 111, 132, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 188, 196, 198, 201, 205, 206, 220, 222, 223, 227, 229, 230], "torch": [3, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 33, 34, 39, 40, 42, 43, 44, 45, 48, 55, 56, 57, 61, 63, 64, 70, 73, 76, 80, 81, 83, 86, 87, 93, 94, 95, 100, 102, 104, 105, 106, 108, 109, 110, 111, 114, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 146, 163, 164, 165, 175, 182, 188, 191, 193, 196, 198, 201, 203, 220, 222, 223, 225, 227, 228, 229, 230], "nn": [3, 11, 12, 14, 22, 39, 42, 43, 44, 45, 63, 73, 80, 83, 86, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 108, 111, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 144, 147, 148, 163, 164, 165, 198, 201, 203, 222, 223, 225, 227, 230], "typic": [3, 7, 22, 39, 42, 44, 45, 220], "organis": 3, "allow": [3, 11, 12, 14, 15, 22, 23, 39, 42, 44, 45, 46, 93, 106, 159, 220, 222, 227, 228, 229], "gener": [3, 6, 7, 14, 25, 32, 40, 43, 70, 77, 100, 114, 121, 129, 132, 135, 136, 155, 163, 166, 167, 170, 183, 213, 222, 223, 224, 225, 227, 228, 229, 230], "arbitrari": [3, 23, 44, 45, 222, 223], "nest": [3, 19, 22, 39, 42, 44, 45, 46, 163, 164, 165, 220, 223, 228, 230], "attribut": [3, 22, 39, 42, 44, 45, 73, 79, 132, 223, 227], "batch_siz": [3, 7, 11, 12, 14, 19, 24, 25, 26, 27, 39, 41, 43, 48, 55, 56, 57, 58, 80, 94, 108, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 135, 137, 138, 175, 188, 191, 193, 196, 198, 201, 222, 223, 225, 227, 228, 229, 230], "togeth": [3, 11, 12, 14, 15, 122, 123, 124, 136, 227], "expect": [3, 6, 19, 22, 28, 39, 42, 43, 44, 45, 59, 60, 61, 62, 63, 64, 66, 68, 70, 73, 74, 75, 76, 79, 80, 81, 82, 84, 89, 128, 131, 134, 144, 145, 153, 154, 186, 217, 220, 222, 229], "live": [3, 11, 12, 14, 15, 22, 24, 25, 26, 27, 39, 42, 43, 44, 45], "doe": [3, 24, 26, 30, 36, 109, 133, 134, 145, 153, 154, 162, 183, 220, 222, 228, 229], "actual": [3, 6, 11, 12, 15, 39, 42, 44, 45, 185, 222, 223], "respons": [3, 7, 183, 227, 229], "just": [3, 175, 220, 223, 227, 228, 229, 230], "retriev": [3, 24, 25, 26, 27, 39, 42, 44, 45, 46, 61, 70, 93, 94, 108, 132, 145, 153, 154, 163, 164, 165, 188, 191, 193, 196, 198, 201, 207, 220, 228, 229], "care": [3, 7, 39, 42, 44, 45, 63, 78, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141, 222, 223], "map": [3, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 33, 39, 42, 44, 45, 59, 60, 61, 62, 63, 64, 66, 68, 70, 74, 75, 76, 79, 80, 81, 82, 84, 87, 111, 122, 123, 124, 131, 132, 134, 136, 137, 216, 222, 223, 227, 228], "desir": [3, 22, 39, 42, 44, 45, 46, 63, 73, 80, 83, 86, 92, 95, 106, 131, 132, 222, 223, 228], "see": [3, 5, 6, 7, 8, 11, 12, 14, 15, 22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 88, 95, 104, 106, 109, 118, 119, 131, 132, 222, 223, 227, 228, 229], "below": [3, 6, 11, 12, 14, 15, 22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 95, 104, 106, 118, 119, 131], "parametr": [3, 110, 132, 157, 222, 227], "hardwar": 3, "observation_spec": [3, 39, 43, 60, 61, 62, 63, 64, 66, 68, 70, 73, 74, 77, 79, 80, 81, 82, 83, 84, 94, 108, 186, 203, 222, 225, 229], "compositespec": [3, 39, 41, 43, 79, 80, 94, 108, 121, 125, 127, 129, 134, 216, 222, 229], "pair": [3, 22, 39, 42, 44, 45, 46, 122, 132, 222, 223, 225, 228, 229], "input_spec": [3, 39, 43, 44, 45, 63, 64, 82, 83, 84, 94, 108, 229], "action_spec": [3, 13, 39, 42, 43, 44, 45, 48, 55, 83, 116, 121, 123, 126, 129, 130, 137, 138, 203, 222, 223, 225, 229, 230], "reward_spec": [3, 39, 43, 59, 63, 64, 75, 76, 77, 82, 83, 84, 94, 108, 229], "reward": [3, 11, 12, 14, 22, 28, 39, 42, 43, 44, 45, 46, 48, 55, 56, 57, 59, 63, 64, 75, 76, 77, 82, 83, 84, 85, 86, 87, 93, 94, 108, 136, 146, 147, 150, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 178, 180, 181, 207, 220, 222, 223, 225, 228, 229, 230], "importantli": [3, 132], "4": [3, 6, 11, 12, 14, 20, 23, 43, 49, 50, 51, 54, 60, 86, 87, 94, 95, 96, 97, 102, 103, 105, 106, 108, 111, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 135, 137, 138, 140, 173, 222, 223, 225, 228, 229, 230], "action_s": 3, "simpli": [3, 5, 222, 223, 229], "With": [3, 220, 228, 229], "necessarili": 3, "requir": [3, 6, 7, 14, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 39, 42, 44, 45, 63, 73, 80, 83, 86, 106, 131, 133, 134, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 220, 222, 223, 227, 229], "stateless": [3, 44, 45, 82, 229], "set_se": [3, 11, 12, 14, 15, 39, 42, 43, 44, 45, 48, 55, 70, 83, 222, 229, 230], "integ": [3, 11, 12, 14, 15, 21, 22, 23, 36, 39, 42, 44, 45, 67, 70, 79, 95, 106], "seed": [3, 11, 12, 14, 15, 39, 42, 43, 44, 45, 49, 56, 57, 83, 183, 222], "next": [3, 7, 11, 12, 14, 19, 22, 24, 25, 26, 39, 40, 42, 43, 44, 45, 46, 48, 55, 56, 57, 87, 93, 94, 108, 116, 136, 155, 162, 163, 164, 165, 222, 223, 225, 229, 230], "determinist": [3, 22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 102, 112, 116, 121, 127, 131, 132, 222, 223, 229], "preced": [3, 105, 227], "without": [3, 6, 8, 22, 39, 42, 44, 45, 123, 155, 162, 203, 217, 222, 223, 229], "risk": 3, "overlap": 3, "consecut": [3, 128, 223, 229], "still": [3, 8, 79, 125, 153, 222, 223, 225, 229], "reproduc": 3, "max_step": [3, 39, 42, 43, 44, 45, 56, 57, 79, 93, 222, 223, 229, 230], "maximum": [3, 11, 12, 14, 15, 18, 22, 33, 34, 35, 39, 42, 44, 45, 75, 79, 117, 118, 119, 129, 157, 222, 223, 229], "safemodul": [3, 43, 58, 94, 107, 122, 123, 124, 125, 127, 128, 129, 132, 134, 136, 139, 140, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 157, 162, 163, 164, 165, 180, 189, 190, 203, 216, 230], "ani": [3, 4, 7, 19, 22, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 73, 83, 87, 89, 95, 106, 110, 131, 132, 133, 134, 154, 183, 210, 217, 222, 223, 229], "compat": [3, 6, 10, 22, 36, 39, 42, 44, 45, 53, 87, 139, 159, 223, 230], "better": [3, 7, 223], "intens": [3, 7], "gym3": 3, "envpool": 3, "interfac": [3, 106, 109, 227], "simultan": [3, 44, 45], "often": [3, 7, 152, 183, 229], "competit": 3, "advantag": [3, 7, 103, 144, 145, 153, 154, 156, 163, 164, 165, 166, 167, 168, 170, 171, 220, 222, 223, 229], "scale": [3, 70, 76, 102, 104, 111, 115, 116, 118, 119, 122, 123, 124, 129, 132, 134, 181, 186, 188, 196, 198, 201, 207, 222, 223, 227, 230], "varieti": 3, "its": [3, 4, 6, 11, 12, 14, 15, 22, 26, 39, 42, 43, 44, 45, 60, 82, 83, 87, 95, 125, 126, 127, 132, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 183, 203, 220, 222, 223, 227, 229], "own": [3, 11, 12, 15, 22, 39, 42, 44, 45, 223, 227], "As": [3, 39, 42, 44, 45, 132, 222, 223, 229, 230], "inherit": [3, 107, 220, 227, 228], "enjoi": 3, "exact": 3, "Of": [3, 6, 217, 229], "cours": [3, 217, 229], "correspond": [3, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 39, 42, 43, 44, 45, 80, 83, 87, 128, 132, 223], "count": [3, 40, 79, 128, 180, 185, 229], "def": [3, 10, 22, 39, 40, 42, 43, 44, 45, 94, 108, 135, 137, 140, 220, 222, 223, 225, 227, 228, 229, 230], "make_env": [3, 57, 87, 93, 189, 190, 222, 223, 229], "gymenv": [3, 4, 11, 12, 14, 15, 40, 53, 63, 70, 80, 83, 87, 188, 191, 193, 196, 198, 201, 203, 216, 222, 223, 229, 230], "pendulum": [3, 11, 12, 14, 15, 40, 51, 52, 63, 70, 80, 83, 87, 203, 223, 229, 230], "v1": [3, 11, 12, 14, 40, 70, 80, 159, 168, 169, 171, 172, 223, 229, 230], "from_pixel": [3, 49, 50, 188, 196, 198, 201, 222, 223, 229, 230], "9": [3, 6, 22, 87, 222, 223, 228], "81": 3, "0": [3, 4, 5, 6, 7, 9, 10, 21, 22, 23, 24, 26, 30, 39, 42, 43, 44, 45, 48, 55, 59, 61, 63, 69, 70, 73, 80, 81, 83, 86, 87, 93, 94, 95, 96, 97, 99, 102, 104, 106, 108, 109, 110, 111, 115, 116, 117, 118, 119, 125, 127, 128, 131, 134, 141, 144, 145, 149, 150, 151, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 175, 181, 183, 203, 207, 220, 222, 223, 225, 226, 227, 228, 229, 230], "must": [3, 6, 11, 12, 14, 15, 19, 22, 33, 34, 35, 36, 39, 40, 42, 44, 45, 67, 70, 80, 83, 86, 95, 106, 131, 132, 137, 138, 166, 167, 168, 169, 170, 171, 172, 175, 180, 183, 184, 188, 191, 193, 196, 198, 201, 222, 223, 225, 227, 228, 230], "print": [3, 5, 6, 11, 12, 14, 19, 20, 22, 23, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 61, 64, 70, 80, 81, 87, 93, 95, 106, 111, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 137, 138, 140, 188, 191, 193, 196, 198, 201, 203, 220, 222, 223, 225, 227, 228, 229, 230], "b": [3, 6, 16, 19, 109, 110, 163, 164, 165, 174, 227, 228], "c": [3, 5, 6, 19, 188, 191, 193, 196, 198, 201, 228], "d": [3, 24, 30, 132, 228, 230], "get": [3, 5, 6, 7, 36, 40, 44, 45, 61, 64, 70, 81, 87, 121, 127, 132, 166, 167, 170, 214, 222, 223, 227, 229, 230], "forc": [3, 5, 6, 223], "variou": [3, 11, 12, 14, 15, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 205, 206, 222, 223, 229], "reset_work": 3, "fals": [3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 39, 40, 42, 43, 44, 45, 46, 48, 49, 52, 55, 56, 57, 61, 63, 69, 70, 73, 76, 80, 81, 83, 86, 87, 94, 95, 96, 106, 108, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 146, 147, 148, 149, 150, 151, 155, 156, 157, 159, 163, 164, 165, 168, 169, 171, 172, 177, 178, 180, 181, 183, 188, 191, 193, 196, 198, 201, 207, 220, 222, 223, 225, 227, 228, 229, 230], "field": [3, 11, 12, 14, 15, 19, 22, 39, 42, 43, 44, 45, 48, 55, 56, 57, 80, 83, 94, 108, 122, 123, 124, 126, 128, 129, 130, 131, 134, 135, 137, 138, 186, 188, 191, 193, 196, 198, 201, 217, 223, 225, 227, 228, 229, 230], "bool": [3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 55, 56, 57, 61, 69, 70, 73, 76, 80, 81, 83, 86, 87, 93, 94, 95, 96, 97, 104, 106, 108, 109, 110, 118, 119, 125, 128, 131, 132, 133, 134, 139, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 163, 164, 165, 168, 169, 171, 172, 173, 174, 177, 178, 180, 181, 183, 188, 191, 193, 196, 198, 201, 207, 223, 225, 229, 230], "500": [3, 183, 222, 223, 229, 230], "uint8": [3, 81, 223, 229, 230], "none": [3, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 48, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 106, 107, 108, 109, 110, 114, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 150, 151, 156, 162, 163, 164, 165, 168, 169, 171, 172, 173, 174, 179, 180, 183, 186, 188, 189, 190, 191, 193, 196, 198, 201, 203, 205, 206, 207, 208, 209, 210, 211, 220, 222, 223, 227, 228, 229, 230], "is_shar": [3, 11, 12, 14, 19, 43, 48, 55, 56, 57, 80, 87, 94, 108, 122, 123, 124, 126, 128, 129, 130, 131, 134, 135, 137, 138, 188, 191, 193, 196, 198, 201, 223, 225, 227, 228, 229, 230], "note": [3, 11, 12, 14, 15, 22, 39, 42, 44, 45, 87, 128, 132, 222, 223, 225, 227, 228, 229], "launch": 3, "quit": [3, 222, 223, 229], "mani": [3, 145, 153, 154, 155, 223, 228, 229], "start": [3, 4, 11, 40, 93, 179, 222, 223, 229], "bottleneck": [3, 7], "why": [3, 222, 229], "so": [3, 5, 6, 9, 22, 39, 42, 44, 45, 87, 133, 134, 222, 229], "onc": [3, 6, 11, 12, 14, 15, 22, 39, 42, 44, 45, 83, 125, 127, 220, 222, 223, 229], "great": [3, 6, 7, 228, 230], "speedup": [3, 7, 229], "anoth": [3, 7, 39, 42, 44, 45, 82, 106, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 222, 225, 228, 229], "thing": [3, 6, 7, 223, 229], "misspecifi": 3, "caus": [3, 6, 7], "breakag": 3, "prealloc": 3, "In": [3, 4, 6, 7, 9, 10, 11, 12, 15, 22, 39, 42, 44, 45, 63, 73, 80, 82, 83, 86, 104, 106, 116, 118, 119, 131, 134, 143, 184, 205, 206, 207, 222, 223, 225, 228, 229, 230], "obj": [3, 131, 132, 133], "rais": [3, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 65, 83, 89, 140, 222, 230], "assert": [3, 5, 17, 18, 19, 20, 21, 23, 28, 29, 42, 87, 89, 93, 111, 163, 164, 165, 175, 182, 222, 223, 225, 227, 228, 229], "mismatch": [3, 228], "serialenv": [3, 216, 229], "mostli": [3, 15, 229], "purpos": [3, 6, 203, 228, 229], "want": [3, 5, 6, 7, 222, 228, 229, 230], "assess": [3, 222], "subprocess": [3, 40], "case": [3, 4, 6, 7, 10, 11, 12, 14, 15, 19, 24, 26, 30, 39, 42, 44, 45, 83, 106, 131, 132, 134, 143, 175, 184, 205, 206, 207, 220, 222, 227, 228, 229, 230], "raw": [3, 104, 118, 119], "treat": 3, "To": [3, 5, 6, 22, 24, 25, 26, 39, 42, 44, 45, 87, 122, 123, 124, 128, 183, 222, 223, 227, 229, 230], "logic": 3, "torchvis": [3, 229, 230], "transformedenv": [3, 40, 63, 69, 70, 80, 82, 87, 188, 191, 193, 196, 198, 201, 216, 222, 223, 225, 229, 230], "primit": [3, 222, 223], "built": [3, 4, 6, 199, 203, 204, 207, 229], "base_env": [3, 80, 222, 223, 229, 230], "totensorimag": [3, 193, 216, 223, 229, 230], "in_kei": [3, 11, 12, 14, 43, 59, 60, 61, 62, 64, 66, 68, 70, 71, 73, 74, 75, 76, 77, 81, 82, 86, 87, 94, 108, 121, 122, 123, 124, 129, 131, 132, 134, 135, 139, 140, 146, 147, 163, 164, 165, 173, 174, 198, 201, 203, 222, 223, 225, 227, 229, 230], "resiz": [3, 216, 223, 229], "64": [3, 96, 97, 103, 222, 223, 225, 229, 230], "By": [3, 23, 42, 44, 45, 132, 180, 207, 228, 229], "now": [3, 6, 222, 225, 227, 228, 229], "appar": [3, 177], "bring": [3, 229], "signific": [3, 4, 7, 229], "kind": [3, 28, 93], "consult": 3, "achiev": [3, 22, 39, 42, 44, 45, 220, 227, 228, 229], "interest": [3, 44, 45, 132, 229], "abov": [3, 6, 22, 39, 42, 44, 45, 104, 118, 119, 143, 220, 222, 223, 229], "resize_par": 3, "sinc": [3, 4, 6, 22, 39, 42, 44, 45, 63, 78, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141, 222, 223, 229, 230], "out_kei": [3, 11, 12, 14, 43, 44, 45, 59, 61, 66, 71, 73, 74, 75, 77, 81, 82, 86, 94, 108, 121, 122, 123, 124, 129, 131, 132, 134, 135, 137, 138, 139, 140, 163, 164, 165, 180, 203, 222, 225, 227, 229, 230], "keyword": [3, 22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131, 132, 204, 222, 227, 229], "easi": [3, 4, 223, 228, 229], "root": [3, 104, 118, 119, 229], "graph": [3, 7, 160, 161], "inv": 3, "appli": [3, 22, 24, 25, 26, 27, 39, 42, 44, 45, 67, 83, 118, 163, 179, 220, 222, 223, 227, 229, 230], "revers": 3, "order": [3, 14, 22, 23, 24, 25, 26, 27, 39, 42, 44, 45, 83, 131, 133, 134, 227], "chain": [3, 24, 25, 26, 63, 95, 134, 229], "taken": [3, 39, 42, 44, 45, 223], "includ": [3, 6, 8, 22, 33, 34, 35, 36, 39, 42, 43, 44, 45, 83, 87, 185, 220, 222, 223, 228, 229], "invers": [3, 142], "through": [3, 4, 7, 14, 44, 45, 106, 132, 133, 134, 141, 222, 223, 225, 227, 229], "in_keys_inv": [3, 64, 82, 222, 225, 229], "append_transform": [3, 24, 25, 26, 27, 73, 80, 222, 229, 230], "doubletofloat": [3, 188, 191, 196, 198, 201, 216, 222, 225], "float32": [3, 11, 12, 14, 19, 24, 28, 30, 43, 48, 55, 56, 57, 64, 70, 80, 81, 94, 108, 122, 123, 124, 126, 128, 129, 130, 131, 134, 135, 137, 138, 188, 191, 193, 196, 198, 201, 223, 225, 227, 228, 229, 230], "float64": [3, 22, 39, 42, 44, 45, 56, 57, 63, 73, 80, 83, 86, 131, 225, 229], "regist": [3, 22, 23, 39, 42, 44, 45, 63, 78, 82, 83, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141, 220, 227], "log": [3, 7, 100, 114, 119, 132, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 177, 178, 180, 183, 203, 220, 223, 227, 230], "tool": [4, 229], "context": [4, 7, 22, 39, 40, 42, 44, 45, 109, 160, 161, 163, 166, 167, 170, 180, 222, 223, 227], "real": [4, 132], "world": [4, 43, 136, 150, 229], "system": 4, "robot": [4, 6, 73, 86], "game": 4, "adopt": [4, 222, 229], "interact": [4, 6, 7, 14, 132, 229], "histor": 4, "wa": [4, 6, 39, 42, 44, 45, 83, 152, 158, 222, 223, 225, 230], "ceas": 4, "maintain": [4, 8], "fork": 4, "gymnasium": 4, "farama": 4, "foundat": 4, "document": [4, 6, 22, 39, 42, 44, 45, 83, 230], "further": 4, "detail": [4, 5, 6, 22, 39, 42, 44, 45, 83, 137, 144, 148, 154, 191, 217, 225, 227, 228], "usag": [4, 6, 86, 157], "known": [4, 6, 7, 222], "gone": 4, "bc": [4, 230], "break": [4, 11, 12, 14, 22, 39, 42, 44, 45, 87, 222, 223, 227, 230], "chang": [4, 6, 22, 33, 34, 35, 36, 39, 42, 44, 45, 83, 87, 222, 228, 229], "face": [4, 7, 8, 223, 229], "modif": [4, 19, 22, 39, 42, 44, 45, 222, 228], "practic": [4, 7, 104, 118, 119, 143, 217, 223, 229], "torchrl": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 224, 225, 226, 227, 228], "against": [4, 6, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 89, 131, 132], "13": [4, 9, 10, 227], "between": [4, 11, 12, 14, 15, 22, 39, 42, 44, 45, 69, 75, 81, 83, 89, 95, 106, 132, 150, 151, 153, 159, 163, 180, 183, 222, 223, 227, 228, 229], "howev": [4, 6, 22, 39, 42, 44, 45, 77, 79, 83, 222, 223, 228, 229], "around": [4, 6, 15, 26, 27, 43, 132, 163, 229], "construct": [4, 22, 39, 42, 44, 45, 116, 132, 183, 188, 196, 227, 229], "automat": [4, 39, 42, 44, 45, 70, 121, 129, 223, 230], "wrap": [4, 11, 12, 14, 15, 22, 39, 42, 44, 45, 89, 122, 123, 124, 136, 222, 223, 227, 229], "best": [4, 8, 223, 230], "gymwrapp": [4, 42, 216, 230], "If": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 39, 40, 42, 43, 44, 45, 46, 61, 62, 69, 73, 77, 79, 82, 83, 86, 87, 95, 105, 106, 125, 127, 128, 131, 132, 133, 134, 140, 141, 143, 150, 162, 163, 164, 165, 171, 172, 179, 183, 184, 186, 188, 196, 198, 201, 203, 207, 217, 222, 223, 225, 227, 228, 229, 230], "you": [4, 5, 6, 7, 9, 22, 39, 42, 44, 45, 87, 217, 222, 223, 225, 228, 229, 230], "feel": [4, 217, 230], "free": [4, 6, 144, 150, 154, 220, 230], "gladli": 4, "instruct": [5, 9], "prepar": 5, "conda": [5, 6, 217], "assum": [5, 19, 23, 27, 42, 44, 45, 73, 77, 80, 86, 105, 168, 169, 171, 172, 174, 222, 223, 225], "let": [5, 6, 22, 39, 42, 44, 45, 180, 222, 223, 225, 227, 228, 229, 230], "n": [5, 6, 17, 20, 22, 23, 39, 42, 44, 45, 60, 108, 132, 144, 162, 220, 222, 223, 228, 229], "7": [5, 9, 20, 23, 94, 95, 105, 106, 108, 222, 223, 230], "cmake": 5, "14": [5, 10, 70], "activ": [5, 6, 8, 95, 102, 106, 154, 230], "sim": 5, "bullet": 5, "physic": [5, 6, 220, 222], "headless": [5, 6], "mode": [5, 14, 22, 39, 42, 44, 45, 83, 87, 90, 92, 100, 104, 114, 117, 118, 119, 132, 180, 222, 223, 229, 230], "cluster": [5, 6, 7, 217], "withbullet": 5, "forg": [5, 6], "aihabitat": 5, "nightli": 5, "y": [5, 6, 105, 140], "git": [5, 6, 9], "facebookresearch": 5, "subdirectori": 5, "reduc": [5, 20], "verbos": 5, "export": 5, "magnum_log": 5, "quiet": 5, "habitat_sim_log": 5, "remov": [5, 22, 39, 42, 44, 45, 78, 222, 229], "command": [5, 6, 9, 229], "more": [5, 7, 11, 12, 14, 15, 22, 24, 25, 26, 27, 39, 42, 44, 45, 86, 88, 106, 109, 111, 125, 127, 131, 137, 144, 148, 154, 163, 166, 167, 170, 179, 191, 217, 220, 222, 223, 225, 227, 228, 229, 230], "readm": [5, 6], "md": [5, 6], "habitatenv": [5, 216], "_has_habitat": 5, "_env": [5, 229], "available_env": [5, 47, 48, 49, 50, 51, 52, 54, 55, 229], "startswith": 5, "importerror": [5, 6, 9], "usr": [5, 6, 9], "x86_64": [5, 6], "linux": [5, 6], "gnu": [5, 6], "libopengl": [5, 6], "undefin": [5, 6, 9, 22, 39, 42, 44, 45, 83], "symbol": [5, 6, 9], "_glapi_tls_curr": [5, 6], "solut": [5, 6, 7, 8, 217, 220, 230], "link": [5, 6], "right": [5, 6, 105, 222, 223, 229], "replac": [5, 6, 22, 223], "path": [5, 6, 22, 33, 39, 42, 44, 45, 73, 86, 108, 183, 220], "mujoco_env": [5, 6], "proper": [5, 6], "name": [5, 6, 10, 22, 39, 42, 44, 45, 49, 77, 83, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 178, 179, 188, 191, 193, 196, 198, 201, 208, 210, 211, 212, 214, 220, 222, 223, 227, 229], "libglvnd": [5, 6], "glx": [5, 6], "cos7": [5, 6], "reinstal": [5, 6], "xvfbwrapper": [5, 6], "config": [5, 6, 186, 188, 189, 190, 191, 193, 196, 198, 199, 201, 204], "var": [5, 6, 22, 39, 42, 44, 45, 83], "ld_preload": [5, 6], "sysroot": [5, 6], "lib64": [5, 6], "libgldispatch": [5, 6], "offici": 6, "repositori": 6, "stand": [6, 122, 123, 124, 225, 229], "joint": [6, 223], "dynam": 6, "contact": 6, "engin": 6, "facilit": [6, 72, 73, 86, 122, 123, 124, 222], "develop": [6, 230], "biomechan": 6, "graphic": 6, "anim": 6, "machin": [6, 22], "area": 6, "demand": [6, 229], "fast": [6, 8, 48, 155, 222, 223], "accur": [6, 222], "articul": 6, "recent": [6, 223, 227, 229, 230], "acquir": [6, 222], "access": [6, 7, 22, 39, 42, 44, 45, 46, 73, 207, 217, 228], "whomev": 6, "licenc": 6, "incorpor": [6, 222], "make": [6, 22, 36, 39, 42, 44, 45, 52, 55, 70, 73, 89, 93, 109, 132, 154, 190, 207, 222, 223, 225, 227, 228, 229, 230], "relianc": 6, "obsolet": 6, "seri": [6, 7, 23, 37, 38, 45, 69, 82, 174, 229], "keep": [6, 12, 73, 86, 87, 128, 177, 183, 223, 228, 229, 230], "legaci": 6, "capabl": [6, 220, 222, 225, 229], "glfw": 6, "osmesa": 6, "egl": 6, "hand": [6, 222], "gpu": [6, 7, 22, 39, 42, 44, 45, 229], "our": [6, 7, 222, 223, 225, 227, 228, 230], "advic": [6, 229], "sudo": [6, 217], "enabl": [6, 7, 128, 180], "apt": 6, "libglfw3": 6, "libglew2": 6, "libgl1": 6, "mesa": 6, "libosmesa6": 6, "via": [6, 7, 44, 82, 86, 146, 220, 222, 229], "awar": [6, 33, 34, 35, 36], "fact": [6, 7, 223, 229], "indent": 6, "workflow": [6, 122, 123, 124], "glew": 6, "mesalib": 6, "anaconda": 6, "libgl": 6, "cos6": 6, "menpo": 6, "glfw3": 6, "both": [6, 22, 39, 40, 42, 44, 45, 83, 95, 106, 122, 123, 124, 180, 222, 227, 229], "tell": 6, "variabl": [6, 7, 20, 23, 108, 122, 123, 124, 155, 220, 227], "mujoco_gl": 6, "pyopengl_platform": 6, "deactiv": 6, "pre": [6, 22, 34, 39, 42, 44, 45, 73, 86, 229], "binari": [6, 17, 23, 59, 137, 138], "releas": [6, 9, 22, 39, 42, 44, 45, 83, 230], "need": [6, 7, 9, 22, 36, 39, 42, 44, 45, 63, 78, 82, 83, 84, 85, 86, 87, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 109, 111, 112, 113, 115, 116, 125, 127, 128, 131, 141, 143, 155, 162, 174, 183, 207, 222, 227, 228, 229, 230], "These": [6, 229], "instead": [6, 7, 20, 22, 39, 42, 44, 45, 63, 78, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141, 207, 222, 223, 227, 229], "refer": [6, 22, 39, 42, 44, 45, 83, 87, 94, 102, 108, 112, 113, 115, 116, 137, 144, 148, 149, 150, 151, 154, 163, 166, 167, 170, 191, 223, 227, 230], "setup": 6, "mkdir": 6, "cd": 6, "here": [6, 7, 8, 9, 222, 223, 225, 227, 228, 229, 230], "tag": [6, 174, 207, 210], "earlier": [6, 11, 12, 14, 15, 222], "roboti": 6, "u": [6, 9, 222, 227, 229, 230], "download": [6, 9, 73, 86, 222, 223, 224, 225, 227, 228, 229, 230], "html": 6, "wget": 6, "mujoco210": 6, "tar": 6, "gz": 6, "xf": 6, "charg": 6, "obtain": [6, 42, 94, 222, 223], "mjkei": 6, "txt": 6, "mjlib_path": 6, "home": 6, "bin": 6, "libmujoco210": 6, "ld_library_path": 6, "mujoco_py_mujoco_path": 6, "mujoco_py_mjkey_path": 6, "reload": 6, "recommend": [6, 228], "hard": [6, 152, 223, 229], "later": [6, 99, 132, 222, 223], "try": [6, 7, 140, 223, 228, 229, 230], "nativ": [6, 8, 39, 42, 44, 45, 60, 227], "local": [6, 9, 14, 22, 39, 42, 44, 45, 83, 210], "modifi": [6, 7, 22, 39, 42, 44, 45, 63, 73, 80, 82, 83, 86, 128, 131, 185, 188, 196, 198, 201, 222, 227], "nvidia": 6, "driver": 6, "older": 6, "hack": 6, "line": [6, 22, 39, 42, 44, 45, 223, 227, 230], "adatp": 6, "script": [6, 188, 191, 193, 196, 198, 201, 203, 207, 220, 222, 223, 225, 227, 228, 229, 230], "go": [6, 227, 229], "unnot": 6, "until": 6, "complet": [6, 8, 42, 217, 223, 225], "mujoco_pi": 6, "trigger": 6, "pipelin": 6, "troubleshoot": 6, "gl": 6, "h": [6, 62, 74, 81, 108, 174], "eglshim": 6, "10": [6, 19, 40, 43, 56, 57, 81, 94, 105, 108, 127, 128, 155, 156, 157, 163, 164, 165, 175, 220, 222, 223, 227, 228, 229, 230], "fatal": 6, "No": [6, 227], "directori": [6, 33, 210, 220], "sure": [6, 36, 93, 207, 222, 227, 228, 229, 230], "glu": 6, "38": 6, "disappear": [6, 225], "filenotfounderror": 6, "errno": 6, "patchelf": 6, "fatalerror": 6, "gladloadgl": 6, "mj_env": 6, "python3": [6, 9], "8": [6, 48, 95, 96, 97, 103, 106, 122, 123, 124, 129, 131, 134, 227, 229, 230], "site": 6, "__init__": [6, 43, 94, 108, 135, 137, 140, 220, 227, 229], "912": 6, "glfwerror": 6, "65537": 6, "sovl": 6, "myscript": 6, "cymj": 6, "linuxgpuextensionbuild": 6, "filenam": 6, "runtimeerror": [6, 7, 22, 39, 42, 44, 45, 83, 222, 228, 229], "job": [6, 228], "schedul": [6, 180], "slurm": 6, "mjrendercontext": 6, "pyx": 6, "46": 6, "114": 6, "_setup_opengl_context": 6, "opengl_context": 6, "130": 6, "offscreenopenglcontext": 6, "fail": 6, "opengl": 6, "global": [6, 132, 220, 222, 227], "cuda_visible_devic": 6, "id": [6, 16, 128, 155, 198, 213], "slurm_step_gpu": 6, "enviro": [6, 9], "imag": [6, 49, 62, 73, 81, 86, 106, 223, 228, 229], "black": 6, "read": [6, 11, 12, 14, 15, 33, 34, 35, 36, 42, 44, 45, 46, 82, 114, 122, 123, 124, 131, 132, 134, 136, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 163, 164, 165, 174, 183, 188, 196, 198, 201, 222, 223, 225, 227, 229], "miss": [6, 10, 19, 22, 39, 42, 44, 45, 83, 133, 134, 217, 230], "onscreen": 6, "101": 6, "displai": [6, 183, 220, 223], "correctli": [6, 22, 39, 42, 44, 45], "scratch": [7, 222, 223], "loop": [7, 11, 12, 14, 15, 42, 93, 183, 220, 222, 225, 228], "sketch": [7, 220], "ob": [7, 19, 64, 70, 81, 135, 163, 164, 165, 222, 225, 229, 230], "_": [7, 40, 61, 64, 70, 81, 87, 131, 143, 163, 164, 165, 222, 223, 227, 230], "rang": [7, 10, 20, 40, 87, 93, 153, 220, 222, 223, 227, 228, 230], "n_training_step": 7, "datapoint": 7, "onlin": [7, 11, 15, 144, 154, 175, 207], "n_data_per_train": 7, "no_grad": [7, 22, 39, 42, 44, 45, 222, 223], "append": [7, 24, 25, 26, 27, 40, 93, 222, 223, 228, 230], "replay_buff": [7, 30, 31, 32, 33, 34, 35, 36, 37, 38, 203, 222, 223], "extend": [7, 24, 25, 26, 27, 37, 38, 220, 222, 223, 230], "loss": [7, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 179, 183, 187, 192, 194, 195, 197, 198, 200, 203, 220, 222, 223, 228, 230], "offlin": [7, 11, 12, 14, 15, 220, 230], "loss_fn": [7, 230], "backward": [7, 22, 39, 42, 44, 45, 87, 222, 223, 228], "zero_grad": [7, 22, 39, 42, 44, 45, 220, 222, 223, 228], "backpropag": [7, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157], "decor": [7, 10], "differenti": [7, 163, 164, 165, 222], "pai": [7, 223], "attent": [7, 223, 227], "understand": [7, 222, 223], "denomin": 7, "probabl": [7, 100, 114, 119, 132, 223, 227, 230], "artifact": 7, "numer": [7, 87, 104, 118, 119, 131, 132, 228, 229], "misconcept": 7, "directli": [7, 43, 207, 223], "save": [7, 22, 39, 42, 44, 45, 173, 183, 220, 223], "alreadi": [7, 22, 39, 42, 44, 45, 132, 222, 223], "freed": 7, "appear": [7, 23], "compuat": 7, "twice": [7, 157], "fix": [7, 80, 157, 229], "retain_graph": 7, "lead": [7, 9, 10, 19, 104, 118, 119, 230], "discuss": [7, 8], "inplac": [7, 22, 39, 42, 44, 45, 222], "flag": [7, 24, 25, 26, 27, 166, 167, 168, 169, 170, 171, 172], "reason": [7, 22, 39, 42, 44, 45, 73, 222, 223], "updat": [7, 11, 12, 14, 15, 22, 30, 39, 42, 43, 44, 45, 83, 85, 87, 94, 108, 128, 131, 132, 144, 152, 154, 158, 163, 164, 165, 180, 183, 184, 189, 190, 202, 203, 220, 222, 223, 227, 229, 230], "critic": [7, 122, 144, 145, 153, 154, 156, 157, 227], "accumul": 7, "onto": [7, 23, 125, 127, 131, 132], "separ": [7, 11, 12, 15, 16, 73, 86, 146, 155, 157, 222, 229], "exclud": [7, 44, 45, 222], "forward": [7, 22, 39, 42, 44, 45, 63, 73, 78, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 109, 111, 112, 113, 115, 116, 125, 127, 128, 131, 132, 135, 137, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 163, 164, 165, 222, 223, 227, 230], "submodul": [7, 22, 39, 42, 44, 45], "param": [7, 22, 39, 42, 43, 44, 45, 100, 117, 129, 130, 131, 134, 135, 137, 138, 158, 161, 163, 164, 165, 191, 222, 223, 227, 230], "grad": [7, 22, 39, 42, 44, 45, 223], "whose": [7, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 63, 73, 80, 83, 86, 111, 131, 222], "norm": [7, 183, 223], "strictli": [7, 22, 39, 42, 44, 45, 83], "neg": [7, 11, 12, 14, 15, 24, 26, 30, 149, 222], "ask": [7, 229], "core": [7, 188, 191, 193, 196, 198, 201, 220, 230], "much": [7, 24, 26, 30, 153, 154, 228, 229], "upon": 7, "factor": [7, 22, 104, 110, 118, 119, 128, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 222, 223, 229], "fit": [7, 10, 70, 220], "everi": [7, 11, 12, 15, 19, 22, 23, 36, 39, 42, 44, 45, 63, 78, 82, 84, 85, 87, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141, 183, 220, 222, 223, 228], "bottlneck": 7, "affect": [7, 22, 39, 42, 44, 45, 82, 83], "brax": [7, 47, 48, 229], "jax": 7, "improperli": 7, "item": [7, 11, 65, 146, 147, 175, 220, 222, 223, 228], "underli": 7, "manipul": [7, 73, 229], "tedeiou": 7, "priorit": [7, 24, 26, 30, 146, 147, 155, 157, 222, 223], "amount": [7, 44, 45, 128], "isn": [7, 131], "contigu": [7, 228, 230], "costli": 7, "concaten": [7, 21, 60, 61, 70, 82, 106, 134, 222, 223, 228, 229], "constitut": 7, "plain": 7, "profil": 7, "indic": [7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 38, 39, 42, 44, 45, 61, 79, 80, 95, 106, 128, 141, 186, 207, 217, 220, 222, 223, 227, 228, 229], "fulli": [7, 22, 39, 42, 44, 45, 223], "frequent": 7, "techniqu": [7, 223], "target": [7, 22, 39, 40, 42, 44, 45, 82, 131, 132, 146, 147, 148, 151, 152, 153, 155, 157, 158, 162, 163, 164, 165, 185, 202, 203, 220, 222, 223], "program": [7, 229], "spin": [8, 229], "hug": 8, "syllabu": 8, "lectur": 8, "awesom": [8, 228], "curat": 8, "reddit": 8, "reagent": 8, "product": [8, 205, 206], "orient": [8, 229], "stabl": [8, 9, 222], "baselines3": 8, "tf": 8, "agent": [8, 110], "bandit": 8, "tensorflow": 8, "kera": 8, "acm": 8, "framework": [8, 43, 229, 230], "dopamin": 8, "prototyp": 8, "salina": 8, "flexibl": [8, 220, 227, 229], "simpl": [8, 22, 23, 39, 42, 44, 45, 96, 132, 156, 163, 222, 223, 228, 229], "sequenti": [8, 22, 39, 42, 44, 45, 133, 134, 227, 228, 229], "tianshou": 8, "eleg": 8, "rlpyt": 8, "rllib": 8, "industri": [8, 230], "grade": 8, "factori": 8, "throughput": 8, "cherri": 8, "jaxrl": 8, "space": [8, 23, 28, 113, 125, 127, 128, 131, 132, 134, 137, 138, 222, 229], "mbrl": [8, 43], "rlmeta": 8, "light": 8, "elegantrl": 8, "cloud": 8, "mtrl": 8, "baselin": [8, 223], "689": 9, "dist": 9, "_torchrl": 9, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 9, "colab": 9, "notebook": [9, 222, 223, 224, 225, 227, 228, 229, 230], "24": 9, "11": [9, 20, 23, 40, 81, 94, 108, 222], "2022": [9, 230], "12": [9, 228], "pip": [9, 229, 230], "solv": [9, 217, 222, 223], "pip3": 9, "extra": [9, 22, 39, 42, 44, 45, 87], "url": 9, "org": [9, 24, 30, 60, 73, 96, 97, 98, 99, 102, 103, 108, 110, 112, 113, 115, 116, 128, 137, 144, 148, 149, 150, 151, 152, 154, 156, 157, 158, 163, 166, 167, 170, 188, 191, 196, 201], "whl": 9, "latest": [9, 230], "There": [9, 220, 223, 229], "upgrad": 9, "previou": [9, 22, 116, 222, 227, 229], "relas": 9, "lib_version_her": 9, "module_nam": 10, "str": [10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 33, 39, 41, 42, 44, 45, 49, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 70, 71, 73, 74, 75, 76, 77, 81, 82, 83, 86, 87, 90, 92, 94, 95, 96, 97, 98, 99, 103, 105, 106, 107, 108, 109, 110, 111, 121, 125, 126, 127, 128, 129, 131, 132, 135, 137, 138, 139, 143, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 173, 174, 178, 179, 180, 182, 186, 188, 191, 196, 198, 199, 201, 207, 208, 209, 210, 211, 212, 213, 214, 222], "from_vers": 10, "to_vers": 10, "explicit": [10, 105, 222, 223], "intersect": 10, "longer": [10, 223], "fun": [10, 227, 228], "self": [10, 22, 39, 42, 43, 44, 45, 63, 73, 80, 83, 86, 94, 108, 125, 127, 131, 135, 137, 140, 220, 227, 228, 230], "x": [10, 16, 19, 22, 81, 95, 101, 103, 105, 106, 108, 137, 140, 141, 143, 166, 167, 168, 169, 170, 171, 172, 174, 183, 223, 227, 230], "doesn": 10, "create_env_fn": [11, 12, 14, 15, 40, 44, 45, 222, 230], "sequenc": [11, 12, 14, 15, 19, 21, 24, 25, 37, 38, 59, 60, 61, 62, 64, 66, 68, 70, 71, 74, 75, 76, 77, 81, 82, 87, 95, 100, 106, 114, 121, 129, 132, 133, 134, 135, 173, 174, 179, 182, 183, 188, 196, 198, 201, 223, 225, 227, 229], "callabl": [11, 12, 14, 15, 22, 24, 25, 26, 39, 40, 42, 43, 44, 45, 143, 189, 190, 205, 206, 207], "union": [11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 39, 42, 44, 45, 58, 63, 70, 73, 76, 83, 86, 87, 95, 96, 97, 98, 99, 100, 103, 105, 106, 109, 110, 114, 117, 118, 119, 128, 129, 131, 132, 133, 139, 140, 142, 147, 148, 152, 155, 157, 158, 163, 164, 165, 188, 189, 190, 191, 196, 198, 199, 201, 203, 204, 205, 206, 207], "tensordictbas": [11, 12, 14, 15, 16, 19, 22, 26, 27, 39, 41, 42, 44, 45, 46, 60, 63, 69, 77, 78, 79, 80, 82, 84, 85, 87, 88, 93, 94, 107, 108, 125, 127, 128, 131, 132, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 162, 163, 164, 165, 183], "total_fram": [11, 12, 14, 15, 183, 185, 203, 220, 222, 223, 230], "int": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 49, 56, 58, 60, 61, 62, 63, 66, 67, 69, 70, 73, 74, 78, 79, 83, 84, 86, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 115, 116, 117, 118, 125, 127, 128, 130, 131, 132, 137, 138, 144, 145, 146, 149, 150, 151, 153, 154, 155, 157, 173, 174, 175, 176, 177, 180, 183, 184, 188, 191, 196, 198, 199, 201, 205, 206, 207], "create_env_kwarg": [11, 12, 14, 15, 40, 44, 45, 222], "dict": [11, 12, 14, 15, 19, 20, 22, 39, 40, 42, 44, 45, 83, 87, 95, 96, 97, 98, 99, 103, 105, 106, 132, 180, 189, 190, 191, 198, 201, 205, 206, 207, 210, 214, 229], "200": [11, 12, 14, 15, 22, 39, 42, 44, 45, 56, 57, 96, 97, 102, 115, 116, 222], "postproc": [11, 12, 14, 15, 222, 223], "pin_memori": [11, 14, 15, 24, 25, 26, 44, 45, 72, 222, 230], "init_with_lag": [11, 12, 14, 15], "given": [11, 12, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 43, 44, 45, 63, 70, 73, 80, 83, 86, 93, 94, 102, 108, 128, 131, 132, 133, 134, 137, 138, 143, 146, 147, 162, 163, 164, 165, 176, 180, 203, 220, 222, 223, 227, 229], "datacollector": [11, 12, 14, 15, 132], "synchron": [11, 205, 206], "recept": 11, "safe": [11, 12, 17, 18, 19, 20, 21, 23, 28, 29, 125, 128, 131, 132, 139, 222, 230], "env_mak": [11, 12, 14, 203, 229], "linear": [11, 12, 14, 22, 39, 42, 43, 44, 45, 63, 73, 80, 83, 86, 94, 95, 106, 108, 109, 110, 111, 115, 116, 121, 122, 123, 124, 127, 128, 129, 130, 131, 134, 135, 137, 138, 140, 163, 164, 165, 203, 225, 227, 230], "2000": [11, 12, 14, 222], "50": [11, 12, 14], "enumer": [11, 12, 14, 22, 39, 42, 44, 45, 222, 223, 230], "step_count": [11, 12, 14, 79, 222, 223], "traj_id": [11, 12, 14, 16, 222], "shutdown": [11, 12, 14, 15, 222, 230], "del": [11, 12, 14, 222, 230], "bound": [11, 12, 14, 15, 18, 19, 22, 39, 42, 44, 45, 87, 115, 116, 128, 131, 132, 229], "total": [11, 12, 14, 15, 42, 145, 153, 154, 175, 177, 180, 183, 185, 186, 222, 223, 225, 226, 227, 228, 229, 230], "greater": [11, 12, 15, 222, 223, 230], "close": [11, 12, 14, 15, 42, 145, 153, 154, 222, 230], "signal": [11, 12, 15, 222], "sent": [11, 12, 15, 33, 34, 44, 45, 87, 223, 228], "server": [11, 12, 15], "per": [11, 12, 14, 15, 44, 102, 183, 205, 206, 222, 223, 230], "span": [11, 12, 14, 15], "unless": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 227], "traje": [11, 12], "tori": [11, 12], "n_steps_max": [11, 12, 14, 15, 22, 222], "track": [11, 12, 14, 15, 77, 87, 128, 177, 210, 222, 223, 228], "independ": [11, 12, 14, 15, 82, 157, 220, 222, 230], "ignor": [11, 12, 14, 15, 22, 39, 42, 44, 45, 63, 78, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141, 227, 228, 229], "length": [11, 12, 14, 15, 17, 44, 45, 94, 95, 96, 98, 101, 106, 108, 131, 175, 222, 223, 228, 229], "mainli": [11, 12, 14, 15], "postprocessor": [11, 12, 15], "format": [11, 12, 14, 15, 22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131, 229], "accord": [11, 12, 14, 15, 46, 70, 76, 104, 109, 115, 118, 119, 227, 228], "split_trajectori": [11, 12, 14, 15, 216], "inform": [11, 12, 14, 15, 22, 39, 40, 42, 44, 45, 95, 106, 220, 223], "place": [11, 12, 14, 15, 19, 22, 39, 40, 42, 44, 45, 46, 63, 73, 80, 83, 86, 87, 131, 184, 185, 223, 227], "accommod": [11, 12, 14, 15], "kept": [11, 12, 14, 15, 44, 45, 82, 93, 104, 118, 119], "origin": [11, 12, 14, 15, 73, 83, 86, 131, 132, 152, 154, 198, 201, 225, 228, 229], "long": [11, 12, 14, 15, 20, 23, 223, 228], "truncat": [11, 12, 14, 15, 119, 229], "help": [11, 12, 14, 15, 22, 39, 42, 44, 45, 217, 222], "desynchron": [11, 12, 14, 15], "load_state_dict": [11, 12, 14, 15, 22, 39, 42, 44, 45, 83, 87, 220], "state_dict": [11, 12, 14, 15, 22, 39, 42, 44, 45, 83, 87, 207, 220, 229], "ordereddict": [11, 12, 14, 15, 22, 39, 42, 44, 45, 83, 87], "load": [11, 12, 14, 15, 24, 25, 26, 50, 207, 220, 223], "form": [11, 12, 15, 22, 24, 25, 26, 39, 42, 44, 45, 87, 143, 145, 153, 154, 183], "worker0": [11, 12, 15], "state_dict0": [11, 12, 15], "worker1": [11, 12, 15], "state_dict1": [11, 12, 15], "reset_idx": [11, 12, 15], "static_se": [11, 12, 14, 15, 39, 42, 44, 45, 83], "increment": [11, 12, 14, 15, 39, 42, 44, 45, 79, 153], "last": [11, 12, 14, 15, 22, 66, 95, 105, 106, 112, 125, 127, 223, 227, 229, 230], "env_fn": [11, 12, 14, 15, 40, 205, 206], "v0": [11, 12, 15, 42, 51, 52, 54, 55, 63, 83, 87, 203], "env_fn_parallel": [11, 12, 14, 15], "6": [11, 12, 14, 15, 55, 70, 95, 100, 105, 106, 117, 135, 188, 191, 193, 196, 198, 201, 222, 223, 227, 228, 229, 230], "out_se": [11, 12, 14, 15, 229], "shut": [11, 12, 14, 15], "down": [11, 12, 14, 15], "irrevers": [11, 12, 15], "arg": [12, 19, 22, 33, 34, 39, 40, 42, 43, 44, 45, 53, 73, 78, 83, 84, 85, 86, 95, 106, 121, 122, 126, 130, 177, 183, 207, 212], "kwarg": [12, 14, 15, 19, 22, 33, 34, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 73, 78, 80, 83, 84, 85, 86, 95, 96, 97, 98, 99, 103, 104, 106, 107, 114, 117, 119, 121, 122, 126, 129, 130, 132, 145, 153, 162, 174, 177, 183, 188, 189, 190, 191, 196, 198, 201, 204, 205, 206, 210, 212, 214, 230], "envcreat": [14, 203, 204, 207, 216, 222, 223, 229, 230], "return_same_td": 14, "stop": [14, 39, 42, 44, 45, 229, 230], "equat": [14, 128, 143, 145, 158], "exce": 14, "batcher": 14, "cautious": [14, 154], "ad": [14, 22, 24, 25, 26, 27, 30, 39, 42, 44, 45, 46, 77, 83, 109, 110, 128, 145, 153, 154, 222, 229], "whole": [14, 22, 39, 42, 44, 45, 83, 175, 223], "content": [14, 95, 106, 223, 228, 230], "ident": [14, 44, 45, 205, 206, 222, 227, 228], "yield": [14, 22, 39, 42, 44, 45], "chunk": 14, "policy_state_dict": 14, "env_state_dict": 14, "singl": [15, 22, 24, 25, 26, 27, 39, 42, 44, 45, 46, 60, 61, 73, 81, 86, 95, 105, 106, 134, 148, 155, 168, 169, 171, 172, 198, 207, 222, 223, 225, 227, 230], "paradigm": 15, "prefer": 15, "mere": 15, "rollout_tensordict": 16, "zero": [16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 61, 70, 94, 105, 127, 128, 141, 163, 164, 165, 227, 228, 230], "max": [16, 23, 117, 118, 119, 145, 155, 157, 222], "durat": [16, 223], "int64": [17, 20, 21, 23, 126, 128, 130, 137, 138, 193, 223, 229], "discret": [17, 20, 21, 23, 114, 137, 138, 148], "assert_is_in": [17, 18, 19, 20, 21, 23, 28, 29], "belong": [17, 18, 19, 20, 21, 23, 28, 29], "otherwis": [17, 18, 19, 20, 21, 22, 23, 28, 29, 39, 42, 44, 45, 70, 80, 83, 87, 104, 118, 119, 150, 157, 180, 220, 222, 229], "encod": [17, 18, 19, 20, 21, 23, 28, 29, 113, 114, 115, 126, 130, 137, 138, 143, 227], "val": [17, 18, 19, 20, 21, 23, 28, 29, 230], "ndarrai": [17, 18, 19, 20, 21, 23, 28, 29, 42, 128], "np": [17, 18, 19, 20, 21, 23, 28, 29, 42, 222], "slice": [17, 18, 19, 20, 21, 23, 28, 29, 228], "tensor_to_index": [17, 18, 19, 20, 21, 23, 28, 29], "is_in": [17, 18, 19, 20, 21, 23, 28, 29, 229], "project": [17, 18, 19, 20, 21, 23, 28, 29, 125, 127, 128, 131, 132, 223, 229, 230], "back": [17, 18, 19, 20, 21, 23, 28, 29, 131, 132, 222], "rand": [17, 18, 19, 20, 21, 23, 28, 29, 43, 48, 55, 94, 108, 229, 230], "uniform": [17, 18, 19, 20, 21, 23, 24, 26, 28, 29, 30], "unbound": [17, 18, 19, 20, 21, 23, 28, 29, 228], "to_numpi": [17, 18, 19, 20, 21, 23, 28, 29], "transformed_in": [17, 18, 19, 20, 21, 23, 28, 29, 82, 83, 111, 117, 207], "type_check": [17, 18, 19, 20, 21, 23, 28, 29], "fill": [17, 18, 19, 20, 21, 23, 28, 29, 80, 228], "minimum": [18, 75, 102, 111, 117, 118, 119, 129, 141, 143, 157, 175, 222, 229], "float": [18, 20, 22, 23, 24, 26, 29, 30, 39, 42, 44, 45, 63, 64, 70, 73, 75, 76, 80, 81, 83, 86, 87, 100, 102, 104, 108, 109, 110, 115, 116, 117, 119, 125, 127, 128, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 181, 222, 223, 229], "upper": 18, "composit": 19, "unnam": 19, "tupl": [19, 22, 24, 25, 26, 27, 39, 42, 44, 45, 58, 70, 96, 105, 106, 111, 146, 149, 163, 164, 165, 192, 194, 197, 200, 228], "effect": [19, 22, 39, 42, 44, 45, 77, 83, 183, 223, 229], "cannot": [19, 228], "pixels_spec": 19, "boundedtensorspec": [19, 122, 123, 124, 127, 128, 129, 216, 229, 230], "32": [19, 56, 57, 95, 96, 97, 103, 106, 112, 113, 222, 223, 229, 230], "observation_vector_spec": 19, "33": [19, 22, 39, 42, 44, 45, 95, 106], "composite_spec": 19, "observation_vector": [19, 61, 188, 191, 196, 198, 201, 222], "within": [19, 22, 27, 39, 42, 44, 45, 63, 78, 82, 84, 85, 87, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141, 230], "randn": [19, 70, 105, 111, 121, 122, 123, 124, 126, 129, 130, 131, 134, 135, 137, 138, 163, 164, 165, 182, 227, 228, 229, 230], "td_project": 19, "yield_nesting_kei": 19, "keysview": 19, "selected_kei": [19, 44, 45, 222], "altern": [20, 143, 223, 228], "onehottensorspec": 20, "categor": [20, 23, 114, 137, 138], "larg": 20, "action_valu": [20, 23, 126, 130, 137, 138, 193, 223], "arang": [20, 23, 126, 137, 175], "view": [20, 22, 23, 39, 42, 44, 45, 106, 137, 222, 228, 229, 230], "argmax": [20, 126, 130, 137, 138], "dim": [20, 61, 86, 105, 207, 222, 228], "chosen_action_valu": [20, 23, 130, 193, 223], "outcom": [20, 23, 100, 117], "nvec": 21, "use_regist": [21, 23], "hot": [21, 23, 114, 126, 130, 137, 138], "cardin": [21, 137, 138], "element": [21, 23, 24, 25, 26, 27, 30, 33, 34, 35, 95, 131, 132, 175, 222, 229], "gamma": [22, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 203, 222, 223, 230], "present": [22, 24, 30, 39, 42, 44, 45, 46, 77, 96, 97, 98, 99, 103, 110, 128, 131, 132, 133, 134, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 207, 220, 222, 225, 230], "sutton": 22, "r": [22, 70, 132, 143, 162, 229], "1988": 22, "predict": [22, 102, 107, 108, 136, 148, 150, 151, 157, 162], "tempor": [22, 108, 164], "44": 22, "discount": [22, 40, 144, 145, 146, 147, 148, 149, 151, 153, 154, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 222, 223], "ahead": [22, 229], "add_modul": [22, 39, 42, 44, 45], "add": [22, 24, 25, 26, 27, 37, 38, 39, 42, 44, 45, 109, 144, 179, 222, 223, 228, 230], "child": [22, 39, 42, 44, 45, 228], "current": [22, 39, 42, 44, 45, 46, 53, 83, 90, 102, 105, 116, 128, 137, 138, 188, 196, 213, 220, 222, 229, 230], "fn": [22, 39, 42, 44, 45, 111, 205, 206], "recurs": [22, 39, 42, 44, 45], "children": [22, 39, 42, 44, 45], "init": [22, 39, 42, 44, 45, 222, 223], "init_weight": [22, 39, 42, 44, 45], "m": [22, 39, 42, 44, 45, 132, 222, 223], "fill_": [22, 39, 42, 44, 45, 223, 228, 229], "net": [22, 39, 42, 44, 45, 105, 155, 198, 203, 223, 227, 230], "in_featur": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 95, 96, 97, 98, 99, 105, 106, 109, 110, 122, 131, 227], "out_featur": [22, 39, 42, 43, 44, 45, 63, 73, 80, 83, 86, 94, 95, 96, 97, 98, 99, 102, 103, 105, 106, 108, 109, 110, 122, 126, 131, 222, 223, 227, 230], "bia": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 95, 102, 106, 109, 110, 111, 127, 128, 131, 141, 142, 143, 223], "requires_grad": [22, 39, 42, 44, 45, 222], "bfloat16": [22, 39, 42, 44, 45], "cast": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 87, 131, 188, 191, 193, 196, 198, 201, 228, 229], "datatyp": [22, 39, 42, 44, 45], "direct": [22, 39, 42, 44, 45, 223], "member": [22, 39, 42, 44, 45], "xdoctest": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "skip": [22, 39, 42, 44, 45, 67, 83, 132, 173, 174, 177, 180], "buf": [22, 39, 42, 44, 45], "20l": [22, 39, 42, 44, 45], "1l": [22, 39, 42, 44, 45], "5l": [22, 39, 42, 44, 45], "immedi": [22, 39, 42, 44, 45, 162], "associ": [22, 39, 42, 44, 45, 115, 207, 227], "copi": [22, 39, 42, 44, 45, 83, 222, 223, 228], "doubl": [22, 24, 26, 29, 39, 42, 44, 45, 63, 64, 73, 80, 81, 83, 86, 131, 147, 148, 152, 155, 158, 222, 229], "eval": [22, 39, 42, 44, 45, 83, 87, 222, 223], "certain": [22, 39, 42, 44, 45, 67, 79, 83, 153, 222, 223, 228, 229], "particular": [22, 39, 42, 44, 45, 83, 220, 223, 225], "behavior": [22, 39, 42, 44, 45, 83], "dropout": [22, 39, 42, 44, 45, 83], "batchnorm": [22, 39, 42, 44, 45, 83], "disabl": [22, 39, 42, 44, 45, 83, 104, 118, 119, 222], "comparison": [22, 39, 42, 44, 45, 83], "similar": [22, 39, 42, 44, 45, 63, 73, 80, 83, 85, 86, 87, 93, 131, 132, 222, 227, 229], "mechan": [22, 39, 42, 44, 45, 83], "confus": [22, 39, 42, 44, 45, 83], "extra_repr": [22, 39, 42, 44, 45], "represent": [22, 39, 42, 44, 45, 73, 86, 222, 223, 229], "string": [22, 39, 42, 44, 45, 132, 143, 173, 182, 188, 196, 198, 201], "tennsordict": 22, "dimens": [22, 60, 61, 66, 70, 78, 81, 84, 86, 95, 106, 109, 110, 117, 118, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 163, 164, 165, 207, 222, 223, 228], "shift": [22, 141], "nontermin": [22, 222], "termin": [22, 133, 222, 223, 227, 230], "original_reward": [22, 222], "newli": 22, "get_buff": [22, 39, 42, 44, 45], "throw": [22, 39, 42, 44, 45, 229], "docstr": [22, 39, 42, 44, 45], "get_submodul": [22, 39, 42, 44, 45], "explan": [22, 39, 42, 44, 45], "how": [22, 24, 26, 30, 39, 42, 44, 45, 145, 152, 153, 154, 183, 217, 222, 223, 225, 229, 230], "qualifi": [22, 39, 42, 44, 45], "referenc": [22, 39, 42, 44, 45], "attributeerror": [22, 39, 42, 44, 45], "invalid": [22, 39, 42, 44, 45], "resolv": [22, 39, 42, 44, 45], "someth": [22, 39, 42, 44, 45, 217, 229], "get_extra_st": [22, 39, 42, 44, 45, 87], "set_extra_st": [22, 39, 42, 44, 45, 87], "pickleabl": [22, 39, 42, 44, 45, 87], "ensur": [22, 24, 26, 30, 39, 42, 44, 45, 73, 87, 139, 222], "guarante": [22, 33, 34, 35, 36, 39, 42, 44, 45, 87, 230], "pickl": [22, 39, 42, 44, 45, 87], "get_paramet": [22, 39, 42, 44, 45], "sai": [22, 39, 42, 44, 45, 229], "net_b": [22, 39, 42, 44, 45], "net_c": [22, 39, 42, 44, 45], "conv": [22, 39, 42, 44, 45, 95], "conv2d": [22, 39, 42, 44, 45, 95], "16": [22, 39, 42, 44, 45], "kernel_s": [22, 39, 42, 44, 45, 95, 96, 97, 223, 230], "stride": [22, 39, 42, 44, 45, 95, 96, 97, 103, 223, 230], "100": [22, 39, 42, 44, 45, 70, 176, 183, 203, 222, 223, 225, 229, 230], "diagram": [22, 39, 42, 44, 45], "show": [22, 39, 42, 44, 45, 223, 227, 230], "itself": [22, 39, 42, 44, 45, 79], "would": [22, 39, 42, 44, 45, 106, 220, 223, 227, 228, 229], "degre": [22, 39, 42, 44, 45], "named_modul": [22, 39, 42, 44, 45], "o": [22, 39, 42, 44, 45], "transit": [22, 39, 42, 44, 45, 136, 222, 223], "alwai": [22, 39, 42, 44, 45, 69, 223], "half": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131, 222], "ipu": [22, 39, 42, 44, 45], "strict": [22, 39, 42, 44, 45, 83], "descend": [22, 39, 42, 44, 45, 83], "exactli": [22, 39, 42, 44, 45, 53, 83], "persist": [22, 39, 42, 44, 45, 83], "enforc": [22, 39, 42, 44, 45, 83, 133], "missing_kei": [22, 39, 42, 44, 45, 83], "unexpected_kei": [22, 39, 42, 44, 45, 83], "unexpect": [22, 39, 42, 44, 45, 83, 229], "namedtupl": [22, 39, 42, 44, 45, 83], "duplic": [22, 39, 42, 44, 45, 147, 148, 228], "l": [22, 39, 42, 44, 45, 162], "idx": [22, 39, 42, 44, 45, 228], "named_buff": [22, 39, 42, 44, 45, 223], "prefix": [22, 39, 42, 44, 45, 83, 173, 229], "prepend": [22, 39, 42, 44, 45], "running_var": [22, 39, 42, 44, 45], "named_children": [22, 39, 42, 44, 45], "conv4": [22, 39, 42, 44, 45], "conv5": [22, 39, 42, 44, 45], "memo": [22, 39, 42, 44, 45], "remove_dupl": [22, 39, 42, 44, 45], "named_paramet": [22, 39, 42, 44, 45, 223], "register_backward_hook": [22, 39, 42, 44, 45], "removablehandl": [22, 39, 42, 44, 45], "deprec": [22, 39, 42, 44, 45, 83, 229], "favor": [22, 39, 42, 44, 45], "register_full_backward_hook": [22, 39, 42, 44, 45], "futur": [22, 39, 42, 44, 45, 73, 83, 86, 106, 217, 230], "register_buff": [22, 39, 42, 44, 45], "running_mean": [22, 39, 42, 44, 45], "alongsid": [22, 39, 42, 44, 45], "latter": [22, 39, 42, 44, 45, 63, 78, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141, 205, 206], "num_featur": [22, 39, 42, 44, 45], "register_forward_hook": [22, 39, 42, 44, 45, 137, 138], "signatur": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131, 140], "posit": [22, 24, 25, 26, 27, 39, 42, 44, 45, 67, 78, 79, 83, 84, 111, 227], "won": [22, 39, 40, 42, 44, 45, 73, 86, 183, 207, 222], "register_forward_pre_hook": [22, 39, 42, 44, 45], "invok": [22, 39, 42, 44, 45], "respect": [22, 39, 42, 44, 45, 59, 63, 73, 80, 83, 86, 116, 131, 135, 179], "grad_input": [22, 39, 42, 44, 45], "grad_output": [22, 39, 42, 44, 45], "subsequ": [22, 39, 42, 44, 45], "entri": [22, 39, 42, 44, 45, 73, 86, 163, 164, 165, 227], "technic": [22, 39, 42, 44, 45], "similarli": [22, 39, 42, 44, 45, 133, 134, 222, 227, 229], "caller": [22, 39, 42, 44, 45], "register_load_state_dict_post_hook": [22, 39, 42, 44, 45], "post": [22, 39, 42, 44, 45, 223], "incompatible_kei": [22, 39, 42, 44, 45], "consist": [22, 39, 42, 44, 45, 95, 106, 222, 223, 229], "addit": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 125, 131, 143, 163, 223], "thrown": [22, 39, 42, 44, 45], "clearn": [22, 39, 42, 44, 45], "register_modul": [22, 39, 42, 44, 45, 220], "alia": [22, 39, 42, 44, 45], "register_paramet": [22, 39, 42, 44, 45], "requires_grad_": [22, 39, 42, 44, 45, 222], "autograd": [22, 39, 42, 44, 45, 83], "freez": [22, 39, 42, 44, 45], "finetun": [22, 39, 42, 44, 45], "individu": [22, 39, 42, 44, 45], "gan": [22, 39, 42, 44, 45], "share_memori": [22, 39, 40, 42, 44, 45, 222], "share_memory_": [22, 39, 42, 44, 45, 228, 230], "destin": [22, 39, 42, 44, 45, 83, 93], "keep_var": [22, 39, 42, 44, 45, 83], "averag": [22, 39, 42, 44, 45, 83, 87, 128, 149, 150, 181, 222, 227], "shallow": [22, 39, 42, 44, 45, 83], "pleas": [22, 39, 42, 44, 45, 83, 217], "design": [22, 23, 39, 42, 44, 45, 83, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 222, 223, 225, 228, 229, 230], "detach": [22, 39, 42, 44, 45, 83, 222, 223], "non_block": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131, 223], "memory_format": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "channels_last": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "Its": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "complex": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131, 227], "integr": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 99, 108, 131], "unchang": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "tri": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "convert": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 87, 131, 143, 228], "host": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "pin": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "4d": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "ignore_w": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "1913": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "3420": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "5113": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "2325": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "torch_doctest_cuda1": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "gpu1": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "1914": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "5112": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "2324": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "float16": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "cdoubl": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "3741": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "j": [22, 24, 30, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131, 220, 223], "2382": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "5593": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "4443": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "complex128": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "6122": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "1150": [22, 39, 42, 44, 45, 63, 73, 80, 83, 86, 131], "to_empti": [22, 39, 42, 44, 45], "dst_type": [22, 39, 42, 44, 45], "xpu": [22, 39, 42, 44, 45], "set_to_non": [22, 39, 42, 44, 45], "unidimension": [23, 228], "keepdim": 23, "sum": [23, 42, 150, 162, 222, 223, 229], "user_regist": 23, "experiment": [23, 132], "priori": 23, "definit": [23, 36], "uniqu": 23, "discretebox": 23, "alpha": [24, 26, 30, 95, 155, 157, 222, 223, 230], "beta": [24, 26, 30, 153, 222, 223, 230], "ep": [24, 26, 30, 87, 128, 145, 158, 181], "1e": [24, 26, 30, 87, 100, 102, 111, 117], "08": [24, 26, 30, 222], "collate_fn": [24, 25, 26, 228, 230], "prefetch": [24, 25, 26, 222, 223], "schaul": [24, 30], "quan": [24, 30], "antonogl": [24, 30], "silver": [24, 30], "2015": [24, 30], "arxiv": [24, 30, 60, 73, 96, 97, 98, 99, 102, 103, 108, 110, 112, 113, 115, 116, 128, 137, 144, 148, 149, 150, 151, 152, 154, 157, 158, 163, 166, 167, 170, 188, 191, 196, 201], "ab": [24, 30, 73, 87, 102, 103, 108, 110, 112, 113, 115, 116, 144, 149, 150, 151, 152, 154, 188, 196], "1511": [24, 30, 103], "05952": [24, 30], "expon": [24, 26, 30], "\u03b1": [24, 26, 30], "determin": [24, 26, 30, 73, 86, 128, 223], "delta": [24, 26, 30, 117, 132, 216], "prioriti": [24, 26, 27, 30, 33, 34, 35, 36, 146, 147, 155, 157, 220, 222, 223], "null": [24, 26, 30, 59, 222], "max_siz": [24, 25, 26, 33, 35, 36, 223], "1_000": [24, 25, 26], "merg": [24, 25, 26], "mini": [24, 25, 26], "style": [24, 25, 26], "rb": [24, 25, 26, 223, 230], "multithread": [24, 25, 26], "insert_transform": [24, 25, 26, 27], "insert": [24, 25, 26, 27, 37, 38, 84, 223], "return_info": [24, 25, 26, 27], "sampler": [24, 25, 26, 27, 30, 31, 33, 34, 35, 36, 216, 222], "info": [24, 25, 26, 27, 39, 42, 44, 45, 56, 57, 88, 227], "select": [24, 25, 26, 27, 44, 45, 69, 94, 182, 222, 223], "writer": [25, 37, 216], "randomsampl": [25, 216, 222], "roundrobinwrit": [25, 216], "priority_kei": [26, 27, 147, 148, 157, 230], "td_error": [26, 27, 146, 147, 148, 155, 157, 222, 230], "prioritizedreplaybuff": [26, 216, 230], "update_tensordict_prior": [26, 222, 230], "include_info": [26, 27], "kw": [27, 37], "replaybuff": [27, 38, 199, 203, 216, 230], "meta": [28, 41, 220], "describ": [28, 61, 82, 117, 118, 188, 196, 213, 229], "max_capac": [30, 222], "update_prior": [30, 220, 222, 230], "uniformli": [31, 229], "scratch_dir": [33, 222], "memmap": [33, 44, 45, 87], "attach": [33, 34, 35, 36, 223], "entiti": [33, 34, 35, 36], "made": [33, 34, 35, 36, 128, 222], "eg": [33, 34, 35, 36], "alloc": 34, "__len__": 36, "roundrobin": 37, "piec": [37, 38], "_inplace_upd": [39, 44, 45, 83], "_batch_lock": [39, 44, 45, 83], "run_type_check": [39, 43], "compar": [39, 180, 223, 229], "batch_lock": [39, 41, 42, 44, 45, 83], "environn": [39, 42, 43, 44, 45, 83], "immut": [39, 42, 44, 45, 83, 188, 196], "fake_tensordict": [39, 42, 44, 45], "fake": [39, 42, 44, 45], "overridden": [39, 42, 44, 45, 63, 78, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141], "recip": [39, 42, 44, 45, 63, 78, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141], "afterward": [39, 42, 44, 45, 63, 78, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141, 229], "former": [39, 42, 44, 45, 63, 78, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141], "silent": [39, 42, 44, 45, 63, 78, 82, 84, 85, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 111, 112, 113, 115, 116, 125, 127, 128, 141], "_step": [39, 42, 44, 45], "privat": [39, 42, 44, 45, 229], "_reset": [39, 42, 43, 44, 45, 94, 108, 230], "overwritten": [39, 42, 44, 45, 93, 222], "callback": [39, 42, 44, 45], "auto_reset": [39, 42, 44, 45, 223], "auto_cast_to_devic": [39, 42, 44, 45], "break_when_any_don": [39, 42, 44, 45], "return_contigu": [39, 42, 44, 45, 89, 225], "soon": [39, 42, 44, 45], "smaller": [39, 42, 44, 45], "lazystackedtensordict": [39, 42, 43, 44, 45, 94, 108, 225, 228, 229, 230], "concomitt": [39, 42, 44, 45], "eras": [39, 42, 44, 45, 46], "workspac": [39, 42, 44, 45, 46], "carri": [39, 42, 44, 45], "creator": [40, 189, 190, 205, 206, 207], "substitut": [40, 87], "multiprocess": [40, 41, 87, 229], "pointer": [40, 228], "mp": [40, 87], "env_creat": [40, 222], "test_env1": 40, "_td": 40, "observation_count": [40, 229], "test_env2": 40, "sleep": [40, 229], "5": [40, 55, 56, 57, 94, 95, 102, 104, 105, 106, 108, 118, 119, 126, 130, 137, 138, 153, 222, 223, 228, 229, 230], "__name__": [40, 223], "__main__": 40, "p": [40, 223, 227], "p1": [40, 223], "p2": [40, 223], "join": [40, 188, 196], "9934": 40, "env_str": 41, "discard": [42, 93, 173, 229], "info_dict_read": 42, "set_info_dict_read": 42, "put": [42, 87, 207, 228], "f": [42, 143, 163, 164, 165, 222, 223, 227, 228, 229], "read_act": 42, "read_don": 42, "reader": [42, 222, 223], "frame_skip": [42, 49, 50, 51, 54, 67, 177, 180, 185, 220, 222, 230], "broken": [42, 89], "read_ob": 42, "dictat": [42, 132], "inner": [42, 220, 222, 229], "read_reward": 42, "total_reward": 42, "step_reward": 42, "far": [42, 104, 118, 119, 229], "baseinfodictread": 42, "info_dict": 42, "hoc": 42, "manner": [42, 73, 222, 225], "dict_read": 42, "default_info_dict_read": 42, "my_info_kei": 42, "some_env": 42, "meant": 43, "limit": [43, 44, 45, 228], "safeti": 43, "constraint": 43, "behav": [43, 53, 114], "classic": [43, 227, 228], "unboundedcontinuoustensorspec": [43, 80, 94, 121, 122, 123, 124, 131, 134, 135, 216, 229], "mymbenv": [43, 94, 108], "world_model": [43, 58, 94, 108, 150], "super": [43, 94, 108, 135, 137, 140, 227, 230], "hidden_observ": [43, 94, 108], "mlp": [43, 94, 95, 96, 97, 98, 99, 105, 108, 122, 126, 188, 196, 198, 201, 216, 222, 223, 225, 227, 230], "worldmodelwrapp": [43, 94, 108, 216], "activation_class": [43, 94, 95, 96, 97, 98, 99, 102, 103, 106, 108, 222, 223, 230], "relu": [43, 94, 108, 111, 143], "activate_last_lay": [43, 94, 99, 106, 108], "depth": [43, 94, 95, 96, 97, 98, 99, 102, 103, 106, 108, 112, 113, 126, 223, 225], "equal": [44, 45, 69, 70, 95, 101, 106, 159, 175, 205, 206, 228], "my_env_fun": [44, 45], "custom_attribute_list": [44, 45], "custom_attribut": [44, 45], "custom_method_list": [44, 45], "custom_method": [44, 45], "num_work": [44, 45, 222, 223], "deploi": [44, 45], "creation": [44, 45, 222, 229], "slight": [44, 45, 223], "overhead": [44, 45, 227], "env_input_kei": [44, 45], "permit": [44, 45], "drastic": [44, 45], "decreas": [44, 45], "io": [44, 45], "burden": [44, 45], "_batchedenv": [44, 45], "might": [44, 45, 214, 217, 222, 229], "next_pixel": [44, 45], "next_vector": [44, 45], "occupi": [44, 45], "excluded_kei": [44, 45], "share_individual_td": [44, 45], "lazi": [44, 45, 73, 109, 133, 134, 222, 225, 228, 229], "shared_memori": [44, 45], "policy_proof": [44, 45], "ll": [44, 45, 222, 223, 229], "hidden": [44, 45, 102, 105, 112, 113, 115, 116, 122, 123, 124, 131, 134, 188, 196, 225, 227, 230], "instanti": [44, 45, 82, 222, 223, 228, 229], "allow_step_when_don": [44, 45], "encount": [44, 45, 217], "update_kwarg": [44, 45], "build_tensordict": 46, "next_observ": [46, 93, 105, 225], "log_prob": [46, 100, 114, 119], "empti": [46, 73, 83, 86, 222], "popul": [46, 80], "env_nam": [47, 49, 51, 54, 222, 229], "googl": [47, 48], "ant": [47, 48], "categorical_action_encod": [48, 52], "get_environ": 48, "87": 48, "acrobot": [48, 229], "fetch": [48, 229], "dm_control": [49, 50, 222, 225, 229], "task_nam": 49, "cheetah": [49, 50, 222, 229], "suit": [50, 229], "disable_env_check": 51, "serv": [53, 229], "placehold": [53, 83], "secur": 53, "jumanji": [54, 55], "snake": [54, 55], "6x6": [54, 55], "td1": 55, "int32": [55, 228, 230], "12x12": 55, "tsp50": 55, "tsp100": 55, "vma": [56, 57], "scenario_nam": [56, 57], "num_env": [56, 57], "continuous_act": [56, 57], "flock": [56, 57], "scenario": [56, 57], "n_agent": [56, 57], "cohesion_rew": [56, 57], "collision_rew": [56, 57], "separation_rew": [56, 57], "velocity_rew": [56, 57], "18": [56, 57, 229], "model_bas": [58, 94, 108], "prior_shap": 58, "belief_shap": 58, "obs_decod": 58, "transform_reward_spec": [59, 63, 64, 75, 76, 82, 84], "cat_dim": [60, 70], "success": [60, 82, 230], "account": 60, "movement": 60, "veloc": [60, 229], "propos": [60, 107, 152, 158, 198, 201], "plai": [60, 229], "atari": [60, 229], "pdf": [60, 96, 97, 98, 99, 128, 137, 148, 155, 157, 158, 163, 166, 167, 170, 191, 198, 201], "1312": 60, "5602": 60, "tranform": [60, 63, 79, 80, 82, 85, 88], "transform_observation_spec": [60, 61, 62, 63, 64, 66, 68, 70, 74, 77, 79, 80, 81, 82, 84], "del_kei": [61, 223, 225], "unsqueeze_if_oor": 61, "observation_posit": 61, "observation_veloc": 61, "delet": [61, 228], "unsqueez": [61, 81, 84, 86, 105, 228], "key1": [61, 175, 182], "key2": [61, 175, 182], "w": [62, 74, 81, 128, 174], "crop": [62, 174], "center": [62, 174], "width": [62, 74, 223], "height": [62, 74, 223], "squar": [62, 104, 118, 119, 174], "rewardsc": [63, 83, 216, 222], "rewardclip": [63, 216], "transformed_env": [63, 82, 83], "dest": [63, 73, 86, 131], "transform_input_spec": [63, 64, 82, 84], "finit": [65, 222], "first_dim": 66, "last_dim": 66, "flatten": [66, 222, 223], "adjac": 66, "repeatedli": 67, "stabil": 67, "turn": [68, 180, 223], "noop": [69, 230], "30": [69, 115, 116, 222, 223], "op": [69, 125, 127, 184], "randomli": [69, 70, 80, 132], "noop_max": 69, "loc": [70, 76, 104, 111, 118, 119, 122, 123, 124, 129, 132, 134, 186, 188, 196, 198, 201, 207, 222, 223, 227, 230], "standard_norm": [70, 76, 222, 223], "affin": [70, 76], "layer": [70, 87, 95, 96, 97, 102, 106, 109, 110, 112, 113, 120, 222, 223, 227], "set_default_tensor_typ": 70, "doubletensor": 70, "std": [70, 87, 111, 222, 223, 229], "isclos": 70, "next_ob": [70, 163, 164, 165, 222, 230], "normalis": 70, "stat": [70, 186, 207, 222], "rubric": [70, 134], "manual_se": [70, 127, 128, 222, 229, 230], "init_stat": 70, "3752e": 70, "01": [70, 128, 141, 144, 145, 153, 154, 222, 226], "5087e": 70, "03": [70, 222, 226], "9294e": 70, "9636": 70, "5608": 70, "6408": 70, "num_it": 70, "reduce_dim": 70, "constant": [70, 220, 222, 223, 229], "ideal": [70, 222], "statist": [70, 87, 156, 207, 222, 229], "approach": [70, 229], "gaussian": [70, 94, 108, 109, 110, 125], "empir": [70, 94, 108, 132], "deviat": [70, 87, 94, 102, 108, 109, 110, 154, 222, 223], "summari": [70, 87], "r3m": 73, "resnet": [73, 86], "visual": [73, 86], "embed": [73, 85, 86, 122, 123, 124, 131, 227], "ego4d": [73, 86], "paper": [73, 86, 152, 198, 201, 222], "univers": [73, 86], "suraj": 73, "nair": 73, "aravind": 73, "rajeswaran": 73, "vikash": [73, 86], "kumar": [73, 86], "chelsea": 73, "finn": 73, "abhinav": 73, "gupta": 73, "2203": [73, 108], "12601": 73, "_init": 73, "snippet": [73, 222], "resenet50": 73, "model_nam": [73, 86, 213], "resnet50": [73, 86], "resnet34": 73, "resnet18": 73, "left": [73, 86, 223], "r3m_vec": 73, "feed": [73, 86], "244": [73, 86], "stack_imag": [73, 86], "tread": [73, 86], "separet": [73, 86], "hub": [73, 86], "cach": [73, 83, 86, 176], "download_path": [73, 86], "tensor_pixels_kei": [73, 86], "interpol": [74, 223], "bilinear": 74, "clamp_min": [75, 128], "clamp_max": 75, "clip": [75, 145, 183], "clip_min": 75, "scalar": [75, 97, 99, 109, 110, 125, 127, 128, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "clip_max": 75, "episod": [77, 94, 166, 167, 168, 169, 170, 171, 172, 223], "cumul": [77, 94], "episode_": 77, "reward1": 77, "reward2": 77, "ho": 77, "squeeze_dim": 78, "squeez": [78, 95, 223, 228], "manual": 79, "default_valu": 80, "primer": 80, "drawn": [80, 132], "rel": [80, 100, 117], "chosen": [80, 188, 196, 198, 201], "mykei": 80, "dtype_or_devic": 80, "255": [81, 229], "precis": [81, 222], "ri": 81, "randint": [81, 222], "out_keys_inv": 82, "principl": 82, "combin": [82, 228], "cattransform": 82, "notabl": 82, "cache_spec": 83, "anymor": [83, 131, 222], "unsqueeze_dim": 84, "vip": [85, 86], "toward": 86, "implicit": 86, "jason": 86, "ma": 86, "shagun": 86, "sodhani": 86, "dinesh": 86, "jayaraman": 86, "osbert": 86, "bastani": 86, "ami": 86, "zhang": 86, "vip_vec": 86, "is_3d": 86, "know": [86, 125, 127, 155, 180, 222, 223, 230], "cat": [86, 135, 222, 228, 230], "shared_td": 87, "lock": 87, "decai": [87, 125, 127, 155, 181, 222, 223, 229], "9999": [87, 229], "0001": [87, 102, 111, 181], "fly": [87, 153, 229], "to_observation_norm": 87, "rate": [87, 162, 222, 223], "99": [87, 108, 144, 145, 149, 151, 153, 154, 155, 156, 157, 162, 203, 222, 223, 230], "underflow": 87, "1000": [87, 125, 127, 128, 132, 152, 222, 223], "build_td_for_shared_vecnorm": 87, "memmori": 87, "memmap_": [87, 228], "queue": 87, "td_share": 87, "v": [87, 105, 157, 223, 227, 230], "observationnorm": [87, 207, 216, 222, 223, 230], "state_dim": [88, 115, 116], "action_dim": [88, 96, 98, 225], "gsde": [88, 155, 207], "nois": [88, 110, 120, 128, 155, 180, 207, 222], "func": [88, 227], "gsdemodul": 88, "short": 89, "discrep": [89, 144, 145, 146, 147, 153, 154], "imposs": 89, "probabilistictdmodul": [92, 106, 132, 157, 162, 180], "next_tensordict": [93, 222], "keep_oth": 93, "exclude_reward": 93, "exclude_don": 93, "exclude_act": 93, "_run_check": 93, "reflect": [93, 185], "renam": [93, 222], "next_": 93, "funtion": 93, "td_out": [93, 175, 182], "make_polici": 93, "next_td": 93, "planning_horizon": [94, 108], "optim_step": [94, 108, 228], "num_candid": [94, 108], "top_k": [94, 108], "reward_kei": [94, 108], "action_kei": [94, 107, 108, 125, 127], "cross": 94, "entropi": [94, 144, 145, 153, 154, 155, 157], "botev": 94, "et": [94, 227], "al": [94, 193, 227, 229], "2013": 94, "cem": 94, "plan": [94, 107, 108], "unit": [94, 102, 112, 113, 115, 116], "varianc": [94, 104, 111, 118, 119], "rank": 94, "top": [94, 108], "k": [94, 223, 227, 228], "repeat": 94, "maximis": [94, 96, 98, 108, 222], "horizon": [94, 108], "modelbasedenv": [94, 108], "mpc": [94, 107, 108], "candid": [94, 108], "modelbasedenvbas": [94, 107, 108, 216], "next_hidden_observ": 94, "actor": [94, 96, 98, 102, 108, 122, 123, 124, 126, 127, 128, 129, 130, 137, 138, 144, 145, 146, 149, 153, 154, 155, 157, 188, 191, 193, 196, 198, 201, 216, 222, 223, 230], "num_cel": [95, 96, 97, 98, 99, 102, 103, 106, 122, 222, 223, 227, 230], "elu": [95, 96, 97, 98, 99, 102, 103, 223, 230], "activation_kwarg": [95, 106], "norm_class": [95, 96, 97, 106], "norm_kwarg": [95, 106], "bias_last_lay": [95, 96, 97, 98, 99, 103, 106], "aggregator_class": [95, 96, 97, 223, 230], "squashdim": [95, 96, 230], "aggregator_kwarg": [95, 96, 97, 223], "squeeze_output": [95, 96, 97, 223], "convolut": [95, 96, 97], "neural": [95, 131, 223, 227, 229], "produc": [95, 106, 114, 122, 124, 174, 229], "len": [95, 106, 222, 223, 228, 230], "cell": [95, 106, 222], "kernel": [95, 103, 105], "tanh": [95, 104, 106, 117, 118, 119, 222], "singleton": [95, 106], "device_typ": [95, 96, 97, 98, 99, 103, 106, 109, 110], "cnet": 95, "34": [95, 106, 226, 229], "35": [95, 106], "possibli": [95, 131, 183, 222, 229], "rectangular": 95, "conv_net_kwarg": [96, 97], "mlp_net_kwarg": [96, 97, 98], "use_avg_pool": [96, 97], "WITH": [96, 97, 98, 99, 128, 158, 191], "1509": [96, 97, 98, 99, 108, 128, 152, 158, 191], "02971": [96, 97, 98, 99, 128, 158, 191], "convnet": [96, 216, 230], "ndims_in": 96, "avgpool": [96, 97], "128": [97, 222], "adaptiveavgpool2d": [97, 223], "400": [98, 99, 223], "300": [98, 99, 188, 196], "mlp_net_kwargs_net1": 99, "mlp_net_kwargs_net2": 99, "atol": [100, 117], "06": [100, 117], "rtol": [100, 117], "batch_shap": [100, 117], "event_shap": [100, 117], "absolut": [100, 117], "toler": [100, 117], "densiti": [100, 114, 119], "mass": [100, 114, 119], "rsampl": [100, 114, 132], "sample_shap": [100, 114], "reparameter": [100, 114], "dqnet": 101, "atom": 101, "std_bia": 102, "std_min_val": 102, "stochast": [102, 110, 112, 116, 155, 157], "belief": [102, 112, 115, 116], "1912": [102, 149, 150, 151], "016034": 102, "softplu": [102, 111, 141, 142, 143], "out_features_valu": 103, "cnn_kwarg": [103, 223], "mlp_kwarg": [103, 105, 223], "duel": [103, 223], "cnn": [103, 223, 230], "06581": 103, "512": 103, "upscal": [104, 118, 119], "tanh_loc": [104, 118, 119], "event_dim": [104, 117, 118], "prevent": [104, 118, 119, 153, 154, 222], "ultim": [104, 118, 119], "unstabl": [104, 118, 119], "poor": [104, 118, 119], "explos": [104, 118, 119], "switch": [104, 118, 119], "sigma": [104, 118, 119, 125, 128], "formula": [104, 118, 119, 145, 153, 154], "lstm_kwarg": 105, "embedd": 105, "lstm": [105, 111], "time_step": 105, "2d": 105, "hidden_s": 105, "input_s": 105, "hidden0_in": 105, "hidden1_in": 105, "hidden0_out": 105, "hidden1_out": 105, "single_bias_last_lay": 106, "layer_class": 106, "layer_kwarg": 106, "perceptron": 106, "seamless": 106, "though": 106, "reshap": [106, 228], "lazylinear": 106, "42": [106, 183], "noisylinear": [106, 109, 216, 223], "noisylazylinear": [106, 216], "At": [107, 225], "mpcplanner": 107, "tensordict_out": [107, 227, 229], "advantage_modul": [108, 144], "temperatur": 108, "mppi": 108, "covari": 108, "william": [108, 156], "aldrich": 108, "theodor": 108, "01149": 108, "hansen": 108, "wang": 108, "su": 108, "04955": 108, "ndunboundedcontinuoustensorspec": [108, 134], "valueoper": [108, 122, 123, 124, 144, 145, 153, 154, 203, 216, 222, 227], "tdlambdaestim": [108, 216], "value_net": [108, 163, 164, 165], "adv": 108, "95": [108, 149, 222, 223], "std_init": [109, 110], "noisi": [109, 110, 120], "term": [109, 110, 143, 144, 184, 223], "matrix": [109, 110], "ax": [109, 110], "initialize_paramet": 109, "isol": 109, "1706": 110, "10295v3": 110, "induc": 110, "aid": 110, "descent": 110, "remain": 110, "emploi": 110, "scale_map": 111, "biased_softplus_1": 111, "scale_lb": [111, 115, 116], "exp": [111, 143], "module_norm": 111, "decod": [112, 227], "1803": [112, 113], "10122": [112, 113], "rnn_hidden": 112, "latent": 113, "logit": 114, "prob": 114, "One": [114, 125, 127, 131, 159, 214, 222, 227, 228, 229], "excacli": 114, "hidden_dim": [115, 116], "posterior": [115, 150], "rssm": [115, 116, 150], "1811": [115, 116], "04551": [115, 116], "obs_embed": 115, "rnn_hidden_dim": 116, "prior": [116, 150], "dream": 116, "recurr": 116, "min": [117, 118, 119, 145, 155, 157, 222, 223], "tanhtransform": 118, "tensordict_modul": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 226, 227], "translat": [121, 129], "td_modul": [121, 122, 123, 124, 129, 131, 132, 134, 135, 227, 230], "get_policy_oper": [122, 123, 124, 188, 196, 227], "alon": [122, 123, 124], "tdmodul": [122, 123, 124, 203], "get_critic_oper": [122, 227], "common_oper": [122, 124], "policy_oper": [122, 123, 124], "value_oper": [122, 123, 124], "probabilisticactor": [122, 123, 124, 157, 216, 222], "tanhnorm": [122, 123, 124, 129, 134, 216, 227, 230], "normalparamwrapp": [122, 123, 124, 129, 134, 216, 227, 230], "spec_hidden": [122, 124], "module_hidden": [122, 124, 227], "td_module_hidden": [122, 124, 227], "spec_act": [122, 124], "module_act": [122, 124, 227], "td_module_act": [122, 123, 124, 227], "dist_in_kei": [122, 123, 124, 129, 134], "sample_out_kei": [122, 124, 134], "distribution_class": [122, 123, 124, 129, 132, 134, 222, 227, 230], "return_log_prob": [122, 123, 124, 132, 134, 227, 230], "module_valu": [122, 123, 124, 227], "td_module_valu": [122, 123, 124, 227], "state_action_valu": [122, 135, 162, 191, 198, 201, 203, 222, 227, 230], "td_clone": [122, 123, 124, 227], "clone": [122, 123, 124, 131, 188, 196, 198, 201, 222, 223, 227, 228, 230], "sample_log_prob": [122, 123, 124, 132, 134, 188, 196, 198, 227], "tensordictmodulewrapp": [122, 189, 190, 203], "estim": [122, 123, 124, 144, 145, 153, 154, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 222, 223], "get_value_oper": [122, 123, 124, 188, 196], "action_modul": 123, "state_valu": [123, 124, 135, 163, 164, 165, 166, 167, 168, 170, 171, 188, 196, 201, 222], "safesequenti": [123, 124, 136, 216], "sigma_init": 125, "sigma_end": 125, "annealing_num_step": [125, 127, 128, 222, 223], "po": [125, 127], "epsilon": [125, 127, 128, 158, 223], "recov": [125, 127, 133, 225], "happen": [125, 229], "action_spac": [126, 130, 137, 138], "one_hot": [126, 130, 137, 138], "onehotdiscretetensorspec": [126, 130, 137, 138, 216], "nbin": [126, 137], "qvalue_actor": [126, 130, 137, 138], "eps_init": [127, 128, 223], "eps_end": [127, 128, 223], "greedi": [127, 138, 223], "explorative_polici": [127, 128], "0000": [127, 230], "6986": 127, "9366": 127, "5837": 127, "8596": 127, "grad_fn": 127, "addbackward0": 127, "theta": 128, "15": [128, 149, 223, 226], "mu": 128, "dt": 128, "x0": 128, "sigma_min": 128, "n_steps_ann": 128, "ornstein": [128, 222], "uhlenbeck": [128, 222], "ou": [128, 222], "introduc": [128, 227, 228], "auto": [128, 155, 157], "correl": 128, "sort": 128, "prev_nois": 128, "current_sigma": 128, "sqrt": [128, 223], "n_step": 128, "ou_prev_nois": 128, "ou_step": 128, "increas": 128, "anneal": 128, "_ou_prev_nois": 128, "_ou_step": 128, "probabilist": [129, 227, 230], "functional_modul": [129, 130, 131, 134, 135, 137, 138], "make_funct": [129, 130, 131, 134, 135, 137, 138, 139, 223, 227, 230], "functionalmodul": [131, 139], "functionalmodulewithbuff": [131, 139], "character": 131, "overflow": [131, 132], "grucel": [131, 227], "td_fmodul": 131, "td_function": 131, "td_state": 131, "vmap": [131, 134, 223, 227, 230], "expand": [131, 134, 227, 230], "ensembl": [131, 155], "params_repeat": 131, "td_vmap": [131, 134], "irrespect": [131, 132], "random_sampl": [131, 132], "tensor_spec": 132, "default_interaction_mod": [132, 227], "distribution_kwarg": [132, 222], "cache_dist": 132, "n_empirical_estim": 132, "probabilistictensordictmodul": [132, 133, 230], "rule": [132, 227], "interaction_mod": 132, "get_dist": [132, 133, 227], "__call__": [132, 220, 227], "median": 132, "suppli": 132, "fist": 132, "set_interaction_mod": 132, "diverg": [132, 150, 153], "partial_toler": [133, 134, 225], "probabilistictensordictsequenti": [133, 227, 230], "tensordictsequenti": [133, 225, 230], "expos": [133, 227], "who": [133, 134], "AND": [133, 134], "scan": [133, 134], "sub": [133, 134, 175, 183, 225, 229, 230], "tensordictsequenci": 134, "tensordictsequ": 134, "safeprobabilisticmodul": [134, 216], "spec1": 134, "net1": 134, "module1": 134, "td_module1": 134, "spec2": 134, "module2": 134, "td_module2": 134, "custommodul": [135, 140], "transition_model": 136, "reward_model": 136, "imaginari": 136, "imagin": 136, "get_reward_oper": 136, "get_transition_model_oper": 136, "var_num": [137, 138], "regard": [137, 144, 148, 154, 228], "perspect": [137, 148], "1707": [137, 148, 154, 188, 196], "06887": [137, 148], "mult_one_hot": [137, 138], "customdistributionalqv": 137, "log_softmax": 137, "_src": 139, "wrapper_typ": 139, "mislead": 140, "other_kei": 140, "typeerror": 140, "min_val": [141, 143], "bias": [141, 222], "_bia": 141, "invert": 142, "surject": 143, "expln": 143, "biased_softplu": [143, 216], "beggin": 143, "biased_softplus_": 143, "syntax": [143, 222], "condit": 143, "met": 143, "safeprobabilisticsequenti": [144, 145, 153, 154, 156, 189, 190, 216], "advantage_kei": [144, 145, 153, 154, 156, 163, 164, 165], "value_target_kei": [144, 154, 156, 163, 164, 165], "value_target": [144, 154, 156, 163, 164, 165], "entropy_bonu": [144, 145, 153, 154], "samples_mc_entropi": [144, 145, 153, 154], "entropy_coef": [144, 145, 153, 154], "critic_coef": [144, 145, 153, 154], "loss_critic_typ": [144, 145, 153, 154, 156], "smooth_l1": [144, 145, 146, 147, 153, 154, 155, 156, 157, 159], "reli": [144, 222, 229], "1602": 144, "01783v2": 144, "advantage_diff_kei": 144, "advantage_diff": 144, "value_error": [144, 163, 164, 165], "loss_function_typ": 144, "l1": [144, 145, 146, 147, 153, 154, 155, 159, 223], "l2": [144, 145, 146, 147, 150, 151, 153, 154, 155, 159], "tha": 144, "throughout": [144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 229], "essenti": [144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 222, 228], "clip_epsilon": 145, "threshold": 145, "bonu": [145, 153, 154], "favour": [145, 153, 154], "exploratori": [145, 153, 154], "mont": [145, 153, 154], "carlo": [145, 153, 154], "multipli": [145, 153, 154, 155, 157, 222], "loss_funct": [145, 146, 147, 154, 155, 157, 159], "actor_network": [146, 155, 156, 157], "value_network": [146, 147, 148, 157, 163, 164, 165], "delay_actor": [146, 157], "delay_valu": [146, 147, 148, 156, 157], "input_tensordict": [146, 147, 148], "assign": [146, 147, 222, 227], "qvalueactor": [147, 216, 223], "distributionalqvalueactor": [148, 216], "unlik": [148, 154, 227, 228, 230], "disctount": 148, "actor_model": 149, "value_model": [149, 151], "model_based_env": 149, "dreamerenv": [149, 216], "imagination_horizon": 149, "lmbda": [149, 163, 165, 166, 168, 169, 170, 171, 172, 222, 223], "discount_loss": [149, 151], "01603": [149, 150, 151], "unrol": 149, "lambda_kl": 150, "lambda_reco": 150, "lambda_reward": 150, "reco_loss": 150, "reward_loss": 150, "free_nat": 150, "delayed_clamp": 150, "global_averag": 150, "kl": [150, 153], "reconstruct": [150, 229], "nat": 150, "clamp": [150, 183], "value_loss": [151, 222], "fake_data": 151, "loss_modul": [152, 158, 183, 202, 203, 220, 228], "dqnloss": [152, 158, 194, 216], "ddpgloss": [152, 158, 192, 203, 216, 230], "sacloss": [152, 158, 200, 216], "value_network_update_interv": 152, "contrast": 152, "soft": [152, 157, 158], "06461": 152, "dtarg": 153, "decrement": 153, "samples_mc_kl": 153, "penalti": 153, "old_polici": 153, "new_polici": 153, "adapt": 153, "thu": 153, "distanc": [153, 159, 162, 163], "apart": 153, "proxim": [154, 188, 196], "optimis": [154, 180], "flavour": [154, 222, 230], "constrain": 154, "clipppoloss": [154, 216], "klpenppoloss": [154, 216], "regularis": 154, "06347": [154, 188, 196], "qvalue_network": [155, 157], "num_qvalue_net": [155, 157], "sub_sample_len": 155, "priotity_kei": [155, 157], "alpha_init": [155, 157], "min_alpha": [155, 157], "max_alpha": [155, 157], "fixed_alpha": [155, 157], "target_entropi": [155, 157], "delay_qvalu": [155, 157], "openreview": [155, 198], "ay8zfzm0tdd": [155, 198], "idea": [155, 220, 223, 228], "subsampl": [155, 175, 220], "connectionist": 156, "1992": 156, "doi": 156, "1007": 156, "bf00992696": 156, "1801": [157, 201], "01290": [157, 201], "qvalue_network_bi": 157, "prod": 157, "n_action": 157, "redqloss": [158, 216], "999": [158, 181, 223], "prev_param": 158, "new_param": 158, "v2": [159, 168, 169, 171, 172, 188, 191, 196, 198, 201], "strict_shap": 159, "view_a": 159, "hold": [160, 161], "next_val_kei": 162, "pred_next_v": 162, "usus": 162, "mse": [162, 223], "q_valu": 162, "target_valu": 162, "n_steps_to_next": 162, "value_next_st": 162, "average_ga": 163, "value_kei": [163, 164, 165], "dimension": [163, 166, 167, 170], "1506": [163, 166, 167, 170], "02438": [163, 166, 167, 170], "exponenti": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 181], "propag": [163, 164, 165], "throught": [163, 164, 165], "advang": 163, "gradient_mod": 163, "sign": 163, "unused_arg": 163, "target_param": [163, 164, 165], "relev": [163, 164, 165], "98": [163, 164, 165], "94": [163, 165], "unpack": [163, 164, 165], "average_reward": [164, 165], "next_state_valu": [166, 167, 168, 169, 170, 171, 172, 216], "old_stat": [166, 167, 168, 170, 171], "timestep": [166, 167, 168, 169, 170, 171, 172, 223], "new_stat": [166, 167, 168, 169, 170, 171, 172], "rolling_gamma": [168, 169, 171, 172], "ti": [168, 169, 171, 172], "event": [168, 169, 171, 172], "g1": [168, 169, 171, 172], "g2": [168, 169, 171, 172], "g3": [168, 169, 171, 172], "g4": [168, 169, 171, 172], "v3": [168, 169, 171, 172], "v4": [168, 169, 171, 172, 222], "upcom": [168, 169, 171, 172, 222], "out_file_bas": 173, "skip_reset": 173, "dump": 173, "interv": [173, 174, 176, 184, 223], "center_crop": 174, "make_grid": 174, "video": [174, 180, 207, 223], "Will": 174, "grid": 174, "sub_traj_len": 175, "min_sub_traj_len": 175, "full": [175, 222, 223, 225, 227, 228, 229, 230], "20": [175, 222, 223, 229], "register_op": [175, 176, 177, 178, 179, 181, 182, 184, 220], "process_optim_batch": [175, 181, 220], "_process_optim_batch_hook": [175, 220], "clear": 176, "clear_cuda": 176, "pre_optim_step": [176, 220], "counter": [177, 220], "log_pbar": [177, 178, 180, 181, 220], "progress": [177, 178, 180, 183, 220, 229], "bar": [177, 178, 180, 183, 220], "count_fram": 177, "pre_steps_log": [177, 178, 220], "lognam": 178, "r_train": 178, "log_reward": 178, "loss_compon": 179, "appl": 179, "omit": [179, 223], "loss_": 179, "optimizer_hook": 179, "loss_actor": 179, "record_interv": [180, 222], "record_fram": [180, 185, 222], "policy_explor": [180, 203, 222], "log_kei": 180, "suffix": 180, "underestim": 180, "suppos": [180, 220, 227, 228, 229], "set_exploration_mod": [180, 216, 222, 223, 230], "reward_evalu": 180, "reward_norm": 181, "batch_process": [181, 182, 220], "update_reward_stat": 181, "normalize_reward": 181, "make_train": [182, 216], "_process_batch_hook": [182, 220], "versatil": 183, "lossmodul": [183, 202, 203], "optim_steps_per_batch": [183, 220, 222], "epoch": 183, "clip_grad_norm": 183, "partial": [183, 230], "deriv": 183, "clip_norm": 183, "progress_bar": 183, "tqdm": [183, 222, 223], "save_trainer_interv": 183, "disk": [183, 220, 223], "10000": [183, 223], "save_trainer_fil": [183, 220], "_datacollector": [184, 189, 190, 203], "update_weights_interv": 184, "sit": [184, 223], "sync": [184, 203, 220, 222, 230], "update_weight": 184, "post_step": [184, 220], "cfg": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207], "dictconfig": [185, 186, 188, 189, 190, 191, 193, 196, 198, 199, 201, 202, 203, 204, 207], "correct": [185, 223], "divid": 185, "unknowingli": 185, "1m": 185, "annealing_fram": [185, 222], "init_env_step": [185, 186, 222], "proof_environ": [186, 188, 191, 193, 196, 198, 201, 222], "sta": 186, "ot": 186, "a2closs": [187, 216], "in_keys_actor": [188, 196], "observation_kei": [188, 196, 198, 201], "actorvalueoper": [188, 196, 216, 227], "dummi": [188, 191, 193, 196, 198, 201, 229], "actorcriticoper": [188, 196, 216], "parser_env_arg": [188, 196, 198], "make_ppo_model": [188, 216], "parser_model_args_continu": [188, 196, 198, 201], "cattensor": [188, 191, 196, 198, 201, 216, 222, 223, 225, 229], "hydra": [188, 191, 193, 196, 198, 201], "config_stor": [188, 191, 193, 196, 198, 201], "configstor": [188, 191, 193, 196, 198, 201], "dataclass": [188, 191, 193, 196, 198, 201], "halfcheetah": [188, 191, 196, 198, 201, 222], "config_field": [188, 191, 193, 196, 198, 201], "config_cl": [188, 191, 193, 196, 198, 201], "ppomodelconfig": [188, 196], "envconfig": [188, 191, 193, 196, 198, 201], "make_dataclass": [188, 191, 193, 196, 198, 201], "cls_name": [188, 191, 193, 196, 198, 201], "config_path": [188, 191, 193, 196, 198, 201], "config_nam": [188, 191, 193, 196, 198, 201], "actor_valu": [188, 196], "17": [188, 191, 196, 198, 201, 222], "actor_model_explor": [189, 190, 222], "make_env_kwarg": [189, 190], "actor_net_kwarg": [191, 198, 201], "value_net_kwarg": [191, 201], "modulelist": [191, 198, 201], "ddpgcnnactor": [191, 216], "ddpgmlpactor": [191, 216], "ddpgcnnqnet": [191, 216], "ddpgmlpqnet": [191, 216], "ddpgmodelconfig": 191, "targetnetupdat": [192, 194, 197, 200, 202, 203], "discretemodelconfig": 193, "pong": [193, 229], "v5": [193, 229], "pixels_onli": [193, 222, 223, 229, 230], "210": [193, 229], "160": [193, 229], "ppoloss": [195, 216], "redqloss_deprec": 197, "qvalue_net_kwarg": [198, 201], "qvalu": [198, 201, 222, 223], "redqmodelconfig": 198, "replayargsconfig": 199, "sacmodelconfig": 201, "target_net_updat": 203, "constitu": 203, "learnt": [203, 223], "tempfil": 203, "tensorboardlogg": [203, 216], "tensordictreplaybuff": [203, 216, 222, 223], "egreedywrapp": [203, 216, 223], "env_proof": 203, "obs_spec": 203, "net_valu": 203, "dir": [203, 220], "gettempdir": 203, "exp_nam": [203, 208, 209, 210, 211, 212, 222], "argpars": [204, 207], "namespac": [204, 207], "parser": [204, 207], "transformed_env_constructor": [204, 216], "env_kwarg": [205, 206, 222], "num_env_per_collector": [205, 206], "num_collector": [205, 206], "less": [205, 206, 222, 223, 230], "video_tag": 207, "norm_obs_onli": 207, "use_env_cr": 207, "custom_env_mak": 207, "custom_env": 207, "return_transformed_env": 207, "action_dim_gsd": 207, "state_dim_gsd": 207, "batch_dim": [207, 228], "obs_norm_state_dict": 207, "wheter": 207, "maker": [207, 222], "overrid": 207, "exclus": 207, "log_dir": [208, 209, 211, 214], "minim": [208, 227], "dependeci": 208, "csv": [208, 214], "templat": 209, "tracking_uri": 210, "mlflow": [210, 214], "uri": 210, "datastor": 210, "tb_log": 211, "tensoarboard": 211, "tensorboard": [211, 214, 230], "wandb": [212, 214, 230], "experiment_nam": [213, 214], "uuid": [213, 229], "date": 213, "logger_typ": 214, "logger_nam": 214, "wandb_kwarg": 214, "mlflow_kwarg": 214, "randompolici": 216, "asyncdatacollector": 216, "tensordictprioritizedreplaybuff": [216, 230], "prioritizedsampl": [216, 222], "binarydiscretetensorspec": 216, "multonehotdiscretetensorspec": 216, "discretetensorspec": 216, "multistep": [216, 222, 223], "binarizereward": 216, "catfram": [216, 223], "centercrop": 216, "finitetensordictcheck": 216, "flattenobserv": 216, "frameskiptransform": 216, "grayscal": [216, 223, 229], "gsdenois": 216, "noopresetenv": [216, 229, 230], "observationtransform": 216, "pinmemorytransform": 216, "rewardsum": 216, "squeezetransform": 216, "stepcount": 216, "tensordictprim": 216, "unsqueezetransform": 216, "r3mtransform": 216, "viptransform": 216, "viprewardtransform": 216, "tensordictrecord": 216, "videorecord": 216, "step_mdp": [216, 222, 223, 229, 230], "get_available_librari": 216, "braxenv": 216, "braxwrapp": 216, "dmcontrolenv": [216, 222, 225, 229], "dmcontrolwrapp": 216, "jumanjienv": 216, "jumanjiwrapp": 216, "vmasenv": 216, "vmaswrapp": 216, "actorcriticwrapp": [216, 227], "additivegaussianwrapp": 216, "ornsteinuhlenbeckprocesswrapp": [216, 222], "is_tensordict_compat": 216, "ensure_tensordict_compat": 216, "qvaluehook": 216, "distributionalqvaluehook": 216, "duelingcnndqnet": [216, 223], "distributionaldqnnet": 216, "lstmnet": 216, "dreameractor": 216, "obsencod": 216, "obsdecod": 216, "rssmprior": 216, "rssmposterior": 216, "reset_nois": 216, "cemplann": 216, "mpcplannerbas": 216, "mppiplann": 216, "independentnorm": 216, "truncatednorm": 216, "tanhdelta": [216, 222], "onehotcategor": 216, "inv_softplu": 216, "distributionaldqnloss": [216, 223], "reinforceloss": 216, "dreameractorloss": 216, "dreamermodelloss": 216, "dreamervalueloss": 216, "gae": 216, "tdestim": 216, "generalized_advantage_estim": 216, "vec_generalized_advantage_estim": 216, "vec_td_lambda_return_estim": 216, "vec_td_lambda_advantage_estim": [216, 222, 223], "td_lambda_return_estim": 216, "td_lambda_advantage_estim": 216, "td_advantage_estim": 216, "distance_loss": 216, "hold_out_net": [216, 222], "hold_out_param": 216, "softupd": [216, 222], "hardupd": [216, 222], "batchsubsampl": [216, 220], "clearcudacach": 216, "countframeslog": 216, "logreward": [216, 220], "optimizerhook": 216, "rewardnorm": 216, "selectkei": [216, 220], "updateweight": [216, 220], "make_a2c_loss": 216, "make_a2c_model": 216, "make_collector_offpolici": 216, "make_collector_onpolici": 216, "make_ddpg_actor": [216, 222], "make_ddpg_loss": 216, "make_dqn_actor": 216, "make_dqn_loss": 216, "make_ppo_loss": 216, "make_redq_loss": 216, "make_redq_model": 216, "make_replay_buff": [216, 222], "make_sac_loss": 216, "make_sac_model": 216, "make_target_updat": 216, "parallel_env_constructor": [216, 222], "sync_async_collector": 216, "sync_sync_collector": 216, "correct_for_frame_skip": 216, "get_stats_random_rollout": [216, 222], "csvlogger": 216, "mlflowlogg": 216, "wandblogg": 216, "get_logg": 216, "generate_exp_nam": 216, "journei": 217, "guid": [217, 222, 223], "textbook": 217, "highlight": 217, "readi": [217, 225], "ever": 217, "cover": [217, 230], "bump": 217, "think": [217, 229], "benefit": 217, "submit": [217, 230], "pr": 217, "outer": [220, 222, 229], "believ": 220, "scheme": [220, 229], "substenti": 220, "_pre_steps_log_hook": 220, "_pre_optim_hook": 220, "sub_batch": 220, "_post_loss_hook": 220, "post_loss": 220, "_post_optim_hook": 220, "post_optim": 220, "_post_optim_log": 220, "post_optim_log": 220, "_post_steps_hook": 220, "_post_steps_log_hook": 220, "post_steps_log": 220, "comment": [220, 230], "categori": 220, "extens": 220, "replaybuffertrain": 220, "reserv": 220, "trainerhookbas": 220, "three": [220, 223], "logginghook": 220, "logging_hook": 220, "save_dict": 220, "some_valu": 220, "els": [220, 222, 223], "torchsnapshot": 220, "ckpt_backend": 220, "wherea": [220, 222, 227], "pt": [220, 223], "filepath": 220, "select_kei": 220, "save_train": 220, "load_from_fil": 220, "perfectli": 220, "intern": 221, "click": [222, 223, 225, 227, 228, 229, 230], "tutori": [222, 223, 225, 226, 227, 229, 230], "familiar": [222, 223, 229], "suffici": [222, 223], "transpar": [222, 223], "understood": [222, 223], "sota": [222, 223, 230], "rather": [222, 223], "illustr": [222, 223], "deepcopi": 222, "matplotlib": [222, 223, 229], "pyplot": [222, 223, 229], "plt": [222, 223, 229], "wish": 222, "env_librari": 222, "env_task": 222, "env_arg": 222, "elif": [222, 223], "notimplementederror": 222, "friendli": 222, "rescal": 222, "leav": 222, "make_transformed_env": 222, "reward_sc": 222, "double_to_float_list": 222, "double_to_float_inv_list": 222, "dmcontrol": 222, "downstream": 222, "_stat": 222, "leverag": [222, 229], "env_per_collector": 222, "parallel_env": [222, 229, 230], "td_stat": 222, "_td_stat": 222, "numel": 222, "_td_stats_select": 222, "to_tensordict": [222, 223, 228], "got": [222, 228], "isfinit": 222, "sd": 222, "get_env_stat": 222, "proof_env": 222, "env_spec": 222, "actor_net": 222, "num_lay": 222, "actor_modul": [222, 230], "q_net": 222, "qnet": 222, "frequenc": 222, "make_record": 222, "recorder_obj": 222, "higher": [222, 223, 229], "likelihood": 222, "circular": 222, "special": [222, 227, 229], "arrai": 222, "prb": 222, "buffer_s": [222, 223], "buffer_scratch_dir": 222, "adjust": 222, "device_count": [222, 223, 229], "1000000": 222, "becom": [222, 229], "lr": [222, 223], "5e": 222, "weight_decai": 222, "5000": 222, "warm": 222, "tau": [222, 223], "005": [222, 223], "tmp": 222, "n_steps_forward": 222, "semin": 222, "qnet_target": 222, "9152e": 222, "3728e": 222, "00": [222, 226], "6790e": 222, "02": [222, 226], "8100e": 222, "0432e": 222, "4661e": 222, "7335e": 222, "6330e": 222, "3439e": 222, "04": [222, 226], "3564e": 222, "1885e": 222, "4405e": 222, "1127e": 222, "9993e": 222, "7058e": 222, "7317e": 222, "3022e": 222, "2335": 222, "3836": 222, "3375": 222, "3587": 222, "3461": 222, "4445": 222, "3917": 222, "3489": 222, "5510": 222, "5761": 222, "1731": 222, "4106": 222, "3918": 222, "0521": 222, "4038": 222, "4419": 222, "9479": 222, "coupl": 222, "async": [222, 230], "transmiss": 222, "3018685293": 222, "adam": [222, 223], "optimizer_actor": 222, "optimizer_qnet": 222, "total_collection_step": 222, "scheduler1": 222, "lr_schedul": 222, "cosineannealinglr": 222, "t_max": 222, "scheduler2": 222, "temporarili": 222, "henc": 222, "word": [222, 229], "Then": [222, 225], "fed": 222, "hood": 222, "metadata": [222, 229], "ommit": 222, "earli": [222, 230], "rewards_ev": 222, "norm_factor_train": 222, "collected_fram": 222, "pbar": [222, 223], "r0": 222, "filter": 222, "current_fram": [222, 223], "sampled_tensordict": 222, "backprop": 222, "next_valu": [222, 223], "value_est": 222, "pow": [222, 223], "sampled_tensordict_actor": 222, "actor_loss": 222, "p_in": 222, "p_dest": 222, "zip": [222, 224], "copy_": 222, "b_in": 222, "b_dest": 222, "td_record": 222, "r_evalu": 222, "set_descript": [222, 223], "4f": [222, 223], "2500": 222, "05": [222, 223, 226], "372": 222, "56it": 222, "memmapstorag": 222, "bzsufzv8": 222, "057220458984375": 222, "mb": [222, 226], "89vvwl1k": 222, "002384185791015625": 222, "imv46zqv": 222, "0095367431640625": 222, "n2lb66nw": 222, "ema2il_a": 222, "mavdp2vi": 222, "leshdsew": 222, "1621246337890625": 222, "muz8l3n7": 222, "x4o9cawb": 222, "29rfh4ai": 222, "xn4j16c3": 222, "019073486328125": 222, "steps_to_next_ob": [222, 223], "l3xqdeit": 222, "kk8m4j7f": 222, "tmpp39y3l5a": 222, "1951": 222, "1591": 222, "9131": 222, "40": 222, "168": 222, "23it": 222, "2201": 222, "07": 222, "60": [222, 230], "1500": 222, "206": 222, "70it": 222, "4415": 222, "80": 222, "262": 222, "14it": 222, "2235": 222, "249": 222, "85it": 222, "9488": 222, "plot": [222, 223], "mention": [222, 223, 229], "figur": [222, 223, 227, 229], "label": [222, 223, 228], "legend": [222, 223], "xlabel": [222, 223], "ylabel": [222, 223], "tight_layout": [222, 223], "250": 222, "devid": 222, "100000": [222, 223], "batch_size_traj": 222, "simplic": [222, 227], "td_lambda": 222, "roughli": [222, 230], "four": 222, "big": [222, 223, 229], "inde": [222, 228], "revert": 222, "compli": [222, 228], "incompat": [222, 228], "bit": 222, "rand_idx": 222, "uemo76j0": 222, "1444091796875": 222, "d1skqio5": 222, "0476837158203125": 222, "h71ispt3": 222, "000762939453125": 222, "sc7w2zs_": 222, "7_m9zm4o": 222, "24249267578125": 222, "bszw4nw6": 222, "g1vy42xx": 222, "19073486328125": 222, "5l5n4ojv": 222, "3814697265625": 222, "jl77sotd": 222, "tmph91qmx3a": 222, "titl": [222, 223], "labmda": 222, "text": 222, "minut": [222, 223, 225, 227, 228, 229, 230], "044": [222, 226], "coding_ddpg": [222, 226], "jupyt": [222, 223, 224, 225, 227, 228, 229, 230], "ipynb": [222, 223, 225, 227, 228, 229, 230], "galleri": [222, 223, 224, 225, 227, 228, 229, 230], "sphinx": [222, 223, 224, 225, 227, 228, 229, 230], "cartpol": [223, 229], "tabl": 223, "pick": 223, "highest": 223, "discretiz": 223, "amort": 223, "seen": 223, "past": 223, "esitm": 223, "ipython": 223, "get_funct": [223, 227], "is_notebook": 223, "shell": 223, "get_ipython": 223, "__class__": 223, "zmqinteractiveshel": 223, "qtconsol": 223, "terminalinteractiveshel": 223, "nameerror": 223, "interpret": 223, "hyperparam": 223, "hopefulli": 223, "sentit": 223, "variat": 223, "2e": 223, "harder": [223, 230], "restrict": [223, 229], "n_optim": 223, "n_worker": 223, "smooth": 223, "loos": 223, "notic": 223, "eps_greedy_v": 223, "eps_greedy_val_env": 223, "predefin": 223, "init_bia": 223, "500000": 223, "techin": 223, "dummy_env": 223, "990597128868103": 223, "08267423510551453": 223, "pole": 223, "un": 223, "actuat": 223, "cart": 223, "frictionless": 223, "upright": [223, 229], "balanc": [223, 229], "pixels_sav": 223, "eval_rollout": 223, "imageio": 223, "mimwrit": 223, "cartpole_random": 223, "mp4": 223, "fp": 223, "480": 223, "360": 223, "trick": 223, "num_ob": 223, "num_act": 223, "make_model": 223, "output_s": 223, "could": [223, 228, 229], "unflatten_kei": 223, "fairli": 223, "params_target": 223, "actor_explor": 223, "params_flat": 223, "flatten_kei": 223, "params_target_flat": 223, "600": 223, "bootstrap": 223, "value_next_step": 223, "not_termin": 223, "significantli": 223, "data_collector": 223, "traj_lengths_ev": 223, "grad_val": 223, "traj_length": 223, "mavg": 223, "traj_count": 223, "prev_traj_count": 223, "enough": 223, "sampled_data": 223, "sampled_data_out": 223, "tdstep": 223, "exp_valu": 223, "mse_loss": 223, "gv": 223, "clip_grad_value_": 223, "set_": 223, "clear_output": 223, "gcf": 223, "clf": 223, "figsiz": 223, "subplot": [223, 229], "traj": 223, "savefig": 223, "dqn_td0": 223, "png": 223, "traceback": [223, 227, 230], "__w": [223, 227, 230], "doc": [223, 227, 230], "coding_dqn": [223, 226], "381": 223, "indexerror": 223, "imshow": [223, 229], "imread": 223, "axi": 223, "traj_lengths_train": 223, "saved_results_td0": 223, "entir": 223, "capac": 223, "smooth_l1_loss": 223, "clip_grad_norm_": 223, "dqn_tdlambda": 223, "saved_results_tdlambda": 223, "fewer": 223, "load_td0": 223, "load_tdlambda": 223, "frames_td0": 223, "frames_tdlambda": 223, "evals_td0": 223, "evals_tdlambda": 223, "mavgs_td0": 223, "mavgs_tdlambda": 223, "losses_td0": 223, "losses_tdlambda": 223, "values_td0": 223, "values_tdlambda": 223, "grad_vals_td0": 223, "grad_vals_tdlambda": 223, "traj_lengths_td0": 223, "traj_lengths_tdlambda": 223, "traj_count_td0": 223, "traj_count_tdlambda": 223, "td0": 223, "goe": [223, 229], "greatli": 223, "nth": 223, "noticebli": 223, "myopic": 223, "collectorclass": 223, "till": 223, "worst": 223, "accuraci": 223, "fanci": 223, "003": [223, 226], "tutorials_python": 224, "tutorials_jupyt": 224, "distinct": 225, "humanoid": [225, 229], "walk": [225, 229], "env1": 225, "env1_obs_kei": 225, "observation_stand": 225, "env2": 225, "env2_obs_kei": 225, "observation_walk": 225, "tdreset1": 225, "tdreset2": 225, "tdreset": 225, "67": 225, "backbon": [225, 230], "policy_common": 225, "policy_stand": 225, "policy_walk": 225, "seq": 225, "21": 225, "But": 225, "env1_mak": 225, "env2_mak": 225, "_single_task": 225, "td_rollout": 225, "shown": 225, "729": [225, 226], "multi_task": [225, 226], "075": 226, "torch_env": [226, 229], "380": [226, 229], "torchrl_demo": [226, 230], "861": [226, 230], "030": [226, 227], "tensordict_tutori": [226, 228], "028": [226, 228], "recommand": 227, "conveni": [227, 228], "a_out": 227, "mergelinear": 227, "in_1": 227, "in_2": 227, "linear_1": 227, "linear_2": 227, "x_1": 227, "x_2": 227, "multiheadlinear": 227, "out_1": 227, "out_2": 227, "splitlinear": 227, "output_1": 227, "output_2": 227, "split_and_merge_linear": 227, "make_functional_with_buff": 227, "replica": 227, "params_expand": [227, 230], "buffers_expand": 227, "num_model": 227, "group": 227, "zeros_lik": 227, "result_td": 227, "ok": 227, "conflict": 227, "wire": 227, "tensordictsequentialand": 227, "block": 227, "demonstr": [227, 229], "architectur": 227, "vaswani": 227, "2017": 227, "asid": 227, "src": 227, "ffn": 227, "skiplayernorm": 227, "splithead": 227, "tokenstoqkv": 227, "339": 227, "modulenotfounderror": 227, "attentionblocktensordict": 227, "connect": 227, "moreov": 227, "complic": [227, 228, 229], "to_nam": 227, "from_nam": 227, "to_dim": 227, "to_len": 227, "from_dim": 227, "latent_dim": 227, "num_head": 227, "x_out": 227, "attn": 227, "thank": 227, "transformerblockencodertensordict": 227, "transformerblockdecodertensordict": 227, "token": 227, "extract": 227, "x_from": 227, "x_to": 227, "transformerencodertensordict": 227, "num_block": 227, "transformerdecodertensordict": 227, "transformertensordict": 227, "from_len": 227, "x_encod": 227, "x_decod": 227, "ve": 227, "operar": 227, "td_token": 227, "tdtransform": 227, "t1": 227, "t2": 227, "t3": 227, "t4": 227, "margin": 227, "deal": 228, "furthermor": 228, "awai": 228, "organ": 228, "power": 228, "segment": 228, "get_data_a": 228, "get_data_b": 228, "reusabl": 228, "lot": 228, "rewriten": 228, "modal": 228, "get_data": 228, "reus": 228, "argu": 228, "dictdataset": 228, "__getitem__": 228, "collat": 228, "collate_dict_fn": 228, "dict_list": 228, "final_dict": 228, "single_dict": 228, "simpler": 228, "collate_tensordict_fn": 228, "furtherdown": 228, "_permutedtensordict": 228, "_unsqueezedtensordict": 228, "_viewedtensordict": 228, "datastructur": 228, "explicitli": 228, "caramba": 228, "algebra": 228, "foo": [228, 229], "multidimension": 228, "insid": [228, 229], "violat": 228, "err": 228, "resp": 228, "among": 228, "tensordict_clon": 228, "tensodict": 228, "tuple_index": 228, "new_tensordict": 228, "get_sub_tensordict": 228, "subtensordict": 228, "subtd": 228, "td2": 228, "booltensor": 228, "fashion": 228, "clonned_tensordict": 228, "staked_tensordict": 228, "isinst": 228, "unbind": 228, "list_tensordict": 228, "comeback": 228, "permut": [228, 229, 230], "unsqueezed_tensordict": 228, "role": 229, "supervis": 229, "unsupervis": 229, "rom": 229, "licens": 229, "pygam": 229, "unifi": 229, "_build_env": 229, "sphinx_gallery_start_ignor": 229, "warn": 229, "filterwarn": 229, "sphinx_gallery_end_ignor": 229, "adventur": 229, "ram": 229, "airraid": 229, "alien": 229, "amidar": 229, "assault": 229, "continuousbox": 229, "2117": 229, "pack": 229, "brief": 229, "exectut": 229, "reproduct": 229, "did": 229, "shortcut": 229, "tensordict_tprim": 229, "tensordict_rollout": [229, 230], "quickli": 229, "axesimag": 229, "0x7f185c0bf8e0": 229, "inconsist": 229, "supplementari": 229, "again": 229, "swingup": 229, "swingup_spars": 229, "ball_in_cup": 229, "catch": 229, "balance_spars": 229, "three_pol": 229, "two_pol": 229, "finger": 229, "turn_easi": 229, "turn_hard": 229, "fish": 229, "swim": 229, "hopper": 229, "hop": 229, "run_pure_st": 229, "bring_bal": 229, "bring_peg": 229, "insert_bal": 229, "insert_peg": 229, "point_mass": 229, "reacher": 229, "swimmer": 229, "swimmer6": 229, "swimmer15": 229, "walker": 229, "dog": 229, "trot": 229, "humanoid_cmu": 229, "lqr": 229, "lqr_2_1": 229, "lqr_6_2": 229, "quadrup": 229, "escap": 229, "stacker": 229, "stack_2": 229, "stack_4": 229, "240": [229, 230], "320": 229, "env_transform": 229, "wrapper1": 229, "wrapper2": 229, "obviou": 229, "truth": 229, "extern": 229, "env0": 229, "env_transformed_bi": 229, "stanc": 229, "transformeddistribut": 229, "base_dist": 229, "unboundeddiscretetensorspec": 229, "concat": 229, "mofidi": 229, "_inv_apply_transform": 229, "_apply_transform": 229, "transformedenviron": 229, "moderet": 229, "computation": 229, "legitim": 229, "side": 229, "incom": 229, "amongst": 229, "has_cuda": 229, "simplest": 229, "wor": 229, "convention": 229, "scope": 229, "difficulti": 229, "markovian": 229, "3288080526": 229, "sometim": 229, "constain": 229, "uuid1": 229, "bar_": 229, "get_someth": 229, "bar_f8658c74": 229, "9026": 229, "11ed": 229, "b964": 229, "0242ac120002": 229, "aargh": 229, "ourselv": 229, "foo_list": 229, "vec_env": 229, "_dispatch_caller_parallel": 229, "0x7f184c4b3610": 229, "bar_fc77e488": 229, "9664": 229, "bar_fc43e7d2": 229, "b0e9": 229, "bar_fc7807c4": 229, "a0d9": 229, "121": 229, "122": 229, "parallen": 229, "carefulli": 229, "commonli": 229, "approxim": 229, "particularili": 229, "evolv": 229, "caution": 229, "previous": 229, "steadi": 229, "approx": 229, "2240": 229, "3159": 229, "2390": 229, "9623": 229, "0769": 229, "1169": 229, "_extra_st": 229, "observation_ssq": 229, "observation_sum": 229, "1738": 229, "2708": 229, "0108": 229, "9569": 229, "8809": 229, "0247": 229, "dispach": 229, "small": 229, "absor": 229, "demo": 230, "icml": 230, "dai": 230, "overview": 230, "vmoen": 230, "fb": 230, "question": 230, "team": 230, "decid": 230, "invest": 230, "platform": 230, "media": 230, "truli": 230, "rest": 230, "predominantli": 230, "tensordict1": 230, "tensordict2": 230, "tensordict_sampl": 230, "_sampler": 230, "_sum_tre": 230, "06984968483448029": 230, "28791671991348267": 230, "gym_env": 230, "364": 230, "431": 230, "tensordict_reset": 230, "469": 230, "out_tensordict": 230, "681": 230, "2002": 230, "valueerror": 230, "myenv": 230, "othertransform": 230, "squash": 230, "backbone_modul": 230, "value_modul": 230, "tensordict_exp": 230, "base_modul": 230, "is_don": 230, "tensordicts_prealloc": 230, "tensordicts_stack": 230, "disclaim": 230, "concatmodul": 230, "loss_td": 230, "bug": 230, "year": 230, "roadmap": 230, "compris": 230, "hierarch": 230, "contributor": 230, "curiou": 230, "feedback": 230, "nascent": 230, "pypi": 230}, "objects": {"torchrl._utils": [[10, 0, 1, "", "implement_for"]], "torchrl.collectors.collectors": [[11, 0, 1, "", "MultiSyncDataCollector"], [12, 0, 1, "", "MultiaSyncDataCollector"], [13, 0, 1, "", "RandomPolicy"], [14, 0, 1, "", "SyncDataCollector"], [15, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[14, 1, 1, "", "iterator"], [14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "rollout"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[16, 2, 1, "", "split_trajectories"]], "torchrl.data": [[17, 0, 1, "", "BinaryDiscreteTensorSpec"], [18, 0, 1, "", "BoundedTensorSpec"], [19, 0, 1, "", "CompositeSpec"], [20, 0, 1, "", "DiscreteTensorSpec"], [21, 0, 1, "", "MultOneHotDiscreteTensorSpec"], [22, 0, 1, "", "MultiStep"], [23, 0, 1, "", "OneHotDiscreteTensorSpec"], [24, 0, 1, "", "PrioritizedReplayBuffer"], [25, 0, 1, "", "ReplayBuffer"], [26, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [27, 0, 1, "", "TensorDictReplayBuffer"], [28, 0, 1, "", "TensorSpec"], [29, 0, 1, "", "UnboundedContinuousTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "keys"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.MultOneHotDiscreteTensorSpec": [[21, 1, 1, "", "assert_is_in"], [21, 1, 1, "", "encode"], [21, 1, 1, "", "index"], [21, 1, 1, "", "is_in"], [21, 1, 1, "", "project"], [21, 1, 1, "", "rand"], [21, 1, 1, "", "to_numpy"], [21, 1, 1, "", "type_check"], [21, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[22, 1, 1, "", "add_module"], [22, 1, 1, "", "apply"], [22, 1, 1, "", "bfloat16"], [22, 1, 1, "", "buffers"], [22, 1, 1, "", "children"], [22, 1, 1, "", "cpu"], [22, 1, 1, "", "cuda"], [22, 1, 1, "", "double"], [22, 1, 1, "", "eval"], [22, 1, 1, "", "extra_repr"], [22, 1, 1, "", "float"], [22, 1, 1, "", "forward"], [22, 1, 1, "", "get_buffer"], [22, 1, 1, "", "get_extra_state"], [22, 1, 1, "", "get_parameter"], [22, 1, 1, "", "get_submodule"], [22, 1, 1, "", "half"], [22, 1, 1, "", "ipu"], [22, 1, 1, "", "load_state_dict"], [22, 1, 1, "", "modules"], [22, 1, 1, "", "named_buffers"], [22, 1, 1, "", "named_children"], [22, 1, 1, "", "named_modules"], [22, 1, 1, "", "named_parameters"], [22, 1, 1, "", "parameters"], [22, 1, 1, "", "register_backward_hook"], [22, 1, 1, "", "register_buffer"], [22, 1, 1, "", "register_forward_hook"], [22, 1, 1, "", "register_forward_pre_hook"], [22, 1, 1, "", "register_full_backward_hook"], [22, 1, 1, "", "register_load_state_dict_post_hook"], [22, 1, 1, "", "register_module"], [22, 1, 1, "", "register_parameter"], [22, 1, 1, "", "requires_grad_"], [22, 1, 1, "", "set_extra_state"], [22, 1, 1, "", "share_memory"], [22, 1, 1, "", "state_dict"], [22, 1, 1, "", "to"], [22, 1, 1, "", "to_empty"], [22, 1, 1, "", "train"], [22, 1, 1, "", "type"], [22, 1, 1, "", "xpu"], [22, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[24, 1, 1, "", "add"], [24, 1, 1, "", "append_transform"], [24, 1, 1, "", "extend"], [24, 1, 1, "", "insert_transform"], [24, 1, 1, "", "sample"]], "torchrl.data.ReplayBuffer": [[25, 1, 1, "", "add"], [25, 1, 1, "", "append_transform"], [25, 1, 1, "", "extend"], [25, 1, 1, "", "insert_transform"], [25, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "append_transform"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "insert_transform"], [26, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "append_transform"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "insert_transform"], [27, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.samplers": [[30, 0, 1, "", "PrioritizedSampler"], [31, 0, 1, "", "RandomSampler"], [32, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[30, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[33, 0, 1, "", "LazyMemmapStorage"], [34, 0, 1, "", "LazyTensorStorage"], [35, 0, 1, "", "ListStorage"], [36, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[33, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[34, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[35, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[36, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[37, 0, 1, "", "RoundRobinWriter"], [38, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[37, 1, 1, "", "add"], [37, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "extend"]], "torchrl.envs": [[39, 0, 1, "", "EnvBase"], [40, 0, 1, "", "EnvCreator"], [41, 0, 1, "", "EnvMetaData"], [42, 0, 1, "", "GymLikeEnv"], [43, 2, 1, "", "ModelBasedEnvBase"], [44, 0, 1, "", "ParallelEnv"], [45, 0, 1, "", "SerialEnv"], [46, 0, 1, "", "Specs"], [43, 1, 1, "", "rand_step"], [43, 1, 1, "", "reset"], [43, 1, 1, "", "rollout"], [43, 1, 1, "", "set_seed"], [43, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[39, 1, 1, "", "add_module"], [39, 1, 1, "", "apply"], [39, 3, 1, "", "batch_locked"], [39, 1, 1, "", "bfloat16"], [39, 1, 1, "", "buffers"], [39, 1, 1, "", "children"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 1, 1, "", "double"], [39, 1, 1, "", "eval"], [39, 1, 1, "", "extra_repr"], [39, 1, 1, "", "fake_tensordict"], [39, 1, 1, "", "float"], [39, 1, 1, "", "forward"], [39, 1, 1, "", "get_buffer"], [39, 1, 1, "", "get_extra_state"], [39, 1, 1, "", "get_parameter"], [39, 1, 1, "", "get_submodule"], [39, 1, 1, "", "half"], [39, 1, 1, "", "ipu"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "modules"], [39, 1, 1, "", "named_buffers"], [39, 1, 1, "", "named_children"], [39, 1, 1, "", "named_modules"], [39, 1, 1, "", "named_parameters"], [39, 1, 1, "", "parameters"], [39, 1, 1, "id0", "rand_step"], [39, 1, 1, "", "register_backward_hook"], [39, 1, 1, "", "register_buffer"], [39, 1, 1, "", "register_forward_hook"], [39, 1, 1, "", "register_forward_pre_hook"], [39, 1, 1, "", "register_full_backward_hook"], [39, 1, 1, "", "register_load_state_dict_post_hook"], [39, 1, 1, "", "register_module"], [39, 1, 1, "", "register_parameter"], [39, 1, 1, "", "requires_grad_"], [39, 1, 1, "id1", "reset"], [39, 1, 1, "id2", "rollout"], [39, 1, 1, "", "set_extra_state"], [39, 1, 1, "id3", "set_seed"], [39, 1, 1, "", "share_memory"], [39, 3, 1, "", "specs"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "id4", "step"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_empty"], [39, 1, 1, "", "train"], [39, 1, 1, "", "type"], [39, 1, 1, "", "xpu"], [39, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[42, 1, 1, "", "add_module"], [42, 1, 1, "", "apply"], [42, 3, 1, "", "batch_locked"], [42, 1, 1, "", "bfloat16"], [42, 1, 1, "", "buffers"], [42, 1, 1, "", "children"], [42, 1, 1, "", "close"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 1, 1, "", "double"], [42, 1, 1, "", "eval"], [42, 1, 1, "", "extra_repr"], [42, 1, 1, "", "fake_tensordict"], [42, 1, 1, "", "float"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_buffer"], [42, 1, 1, "", "get_extra_state"], [42, 1, 1, "", "get_parameter"], [42, 1, 1, "", "get_submodule"], [42, 1, 1, "", "half"], [42, 1, 1, "", "ipu"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "modules"], [42, 1, 1, "", "named_buffers"], [42, 1, 1, "", "named_children"], [42, 1, 1, "", "named_modules"], [42, 1, 1, "", "named_parameters"], [42, 1, 1, "", "parameters"], [42, 1, 1, "", "rand_step"], [42, 1, 1, "", "read_action"], [42, 1, 1, "", "read_done"], [42, 1, 1, "", "read_obs"], [42, 1, 1, "", "read_reward"], [42, 1, 1, "", "register_backward_hook"], [42, 1, 1, "", "register_buffer"], [42, 1, 1, "", "register_forward_hook"], [42, 1, 1, "", "register_forward_pre_hook"], [42, 1, 1, "", "register_full_backward_hook"], [42, 1, 1, "", "register_load_state_dict_post_hook"], [42, 1, 1, "", "register_module"], [42, 1, 1, "", "register_parameter"], [42, 1, 1, "", "requires_grad_"], [42, 1, 1, "", "reset"], [42, 1, 1, "", "rollout"], [42, 1, 1, "", "set_extra_state"], [42, 1, 1, "", "set_info_dict_reader"], [42, 1, 1, "", "set_seed"], [42, 1, 1, "", "share_memory"], [42, 3, 1, "", "specs"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "", "step"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_empty"], [42, 1, 1, "", "train"], [42, 1, 1, "", "type"], [42, 1, 1, "", "xpu"], [42, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 3, 1, "", "batch_locked"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "fake_tensordict"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "rand_step"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "reset"], [44, 1, 1, "", "rollout"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_seed"], [44, 1, 1, "", "share_memory"], [44, 3, 1, "", "specs"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "step"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "update_kwargs"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 3, 1, "", "batch_locked"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "fake_tensordict"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "share_memory"], [45, 3, 1, "", "specs"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "step"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "update_kwargs"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.envs.Specs": [[46, 1, 1, "", "build_tensordict"]], "torchrl.envs.libs.brax": [[47, 2, 1, "", "BraxEnv"], [48, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[49, 2, 1, "", "DMControlEnv"], [50, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[51, 2, 1, "", "GymEnv"], [52, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[53, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[54, 2, 1, "", "JumanjiEnv"], [55, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.vmas": [[56, 2, 1, "", "VmasEnv"], [57, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[58, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[59, 0, 1, "", "BinarizeReward"], [60, 0, 1, "", "CatFrames"], [61, 0, 1, "", "CatTensors"], [62, 0, 1, "", "CenterCrop"], [63, 0, 1, "", "Compose"], [64, 0, 1, "", "DoubleToFloat"], [65, 0, 1, "", "FiniteTensorDictCheck"], [66, 0, 1, "", "FlattenObservation"], [67, 0, 1, "", "FrameSkipTransform"], [68, 0, 1, "", "GrayScale"], [69, 0, 1, "", "NoopResetEnv"], [70, 0, 1, "", "ObservationNorm"], [71, 0, 1, "", "ObservationTransform"], [72, 0, 1, "", "PinMemoryTransform"], [73, 0, 1, "", "R3MTransform"], [74, 0, 1, "", "Resize"], [75, 0, 1, "", "RewardClipping"], [76, 0, 1, "", "RewardScaling"], [77, 0, 1, "", "RewardSum"], [78, 0, 1, "", "SqueezeTransform"], [79, 0, 1, "", "StepCounter"], [80, 0, 1, "", "TensorDictPrimer"], [81, 0, 1, "", "ToTensorImage"], [82, 0, 1, "", "Transform"], [83, 0, 1, "", "TransformedEnv"], [84, 0, 1, "", "UnsqueezeTransform"], [85, 0, 1, "", "VIPRewardTransform"], [86, 0, 1, "", "VIPTransform"], [87, 0, 1, "", "VecNorm"], [88, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[59, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[60, 1, 1, "", "reset"], [60, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[61, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[62, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[63, 1, 1, "", "forward"], [63, 1, 1, "", "reset"], [63, 1, 1, "", "to"], [63, 1, 1, "", "transform_input_spec"], [63, 1, 1, "", "transform_observation_spec"], [63, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[64, 1, 1, "", "transform_input_spec"], [64, 1, 1, "", "transform_observation_spec"], [64, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.FlattenObservation": [[66, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[68, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[69, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[70, 1, 1, "", "init_stats"], [70, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[73, 1, 1, "", "to"]], "torchrl.envs.transforms.Resize": [[74, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[75, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[76, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[77, 1, 1, "", "reset"], [77, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SqueezeTransform": [[78, 1, 1, "", "forward"]], "torchrl.envs.transforms.StepCounter": [[79, 1, 1, "", "reset"], [79, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[80, 1, 1, "", "reset"], [80, 1, 1, "", "to"], [80, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[81, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[82, 1, 1, "", "forward"], [82, 1, 1, "", "reset"], [82, 1, 1, "", "transform_input_spec"], [82, 1, 1, "", "transform_observation_spec"], [82, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[83, 3, 1, "", "action_spec"], [83, 3, 1, "", "batch_locked"], [83, 1, 1, "", "eval"], [83, 3, 1, "", "input_spec"], [83, 1, 1, "", "load_state_dict"], [83, 3, 1, "", "observation_spec"], [83, 3, 1, "", "reward_spec"], [83, 1, 1, "", "set_seed"], [83, 1, 1, "", "state_dict"], [83, 1, 1, "", "to"], [83, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[84, 1, 1, "", "forward"], [84, 1, 1, "", "transform_input_spec"], [84, 1, 1, "", "transform_observation_spec"], [84, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[85, 1, 1, "", "forward"], [85, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[86, 3, 1, "", "is_3d"], [86, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[87, 1, 1, "", "build_td_for_shared_vecnorm"], [87, 1, 1, "", "get_extra_state"], [87, 1, 1, "", "set_extra_state"], [87, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[88, 1, 1, "", "reset"]], "torchrl.envs.utils": [[89, 2, 1, "", "check_env_specs"], [90, 2, 1, "", "exploration_mode"], [91, 2, 1, "", "get_available_libraries"], [92, 2, 1, "", "set_exploration_mode"], [93, 2, 1, "", "step_mdp"]], "torchrl.modules": [[94, 0, 1, "", "CEMPlanner"], [95, 0, 1, "", "ConvNet"], [96, 0, 1, "", "DdpgCnnActor"], [97, 0, 1, "", "DdpgCnnQNet"], [98, 0, 1, "", "DdpgMlpActor"], [99, 0, 1, "", "DdpgMlpQNet"], [100, 0, 1, "", "Delta"], [101, 0, 1, "", "DistributionalDQNnet"], [102, 0, 1, "", "DreamerActor"], [103, 0, 1, "", "DuelingCnnDQNet"], [104, 0, 1, "", "IndependentNormal"], [105, 0, 1, "", "LSTMNet"], [106, 0, 1, "", "MLP"], [107, 0, 1, "", "MPCPlannerBase"], [108, 0, 1, "", "MPPIPlanner"], [109, 0, 1, "", "NoisyLazyLinear"], [110, 0, 1, "", "NoisyLinear"], [111, 0, 1, "", "NormalParamWrapper"], [112, 0, 1, "", "ObsDecoder"], [113, 0, 1, "", "ObsEncoder"], [114, 0, 1, "", "OneHotCategorical"], [115, 0, 1, "", "RSSMPosterior"], [116, 0, 1, "", "RSSMPrior"], [117, 0, 1, "", "TanhDelta"], [118, 0, 1, "", "TanhNormal"], [119, 0, 1, "", "TruncatedNormal"], [120, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[94, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[95, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[96, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[97, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[98, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[99, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[100, 1, 1, "", "log_prob"], [100, 3, 1, "", "mean"], [100, 3, 1, "", "mode"], [100, 1, 1, "", "rsample"], [100, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[101, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[102, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[103, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[104, 3, 1, "", "mode"]], "torchrl.modules.LSTMNet": [[105, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[106, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[107, 1, 1, "", "forward"], [107, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[108, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[109, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[111, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[112, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[113, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[114, 1, 1, "", "log_prob"], [114, 3, 1, "", "mode"], [114, 1, 1, "", "rsample"], [114, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[115, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[116, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[117, 3, 1, "", "mean"], [117, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[118, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[119, 1, 1, "", "log_prob"], [119, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module": [[121, 0, 1, "", "Actor"], [122, 0, 1, "", "ActorCriticOperator"], [123, 0, 1, "", "ActorCriticWrapper"], [124, 0, 1, "", "ActorValueOperator"], [125, 0, 1, "", "AdditiveGaussianWrapper"], [126, 0, 1, "", "DistributionalQValueActor"], [127, 0, 1, "", "EGreedyWrapper"], [128, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [129, 0, 1, "", "ProbabilisticActor"], [130, 0, 1, "", "QValueActor"], [131, 0, 1, "", "SafeModule"], [132, 0, 1, "", "SafeProbabilisticModule"], [133, 0, 1, "", "SafeProbabilisticSequential"], [134, 0, 1, "", "SafeSequential"], [135, 0, 1, "", "ValueOperator"], [136, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[122, 1, 1, "", "get_critic_operator"], [122, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[123, 1, 1, "", "get_policy_operator"], [123, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[124, 1, 1, "", "get_policy_operator"], [124, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[127, 1, 1, "", "forward"], [127, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.SafeModule": [[131, 1, 1, "", "random"], [131, 1, 1, "", "random_sample"], [131, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[132, 1, 1, "", "random"], [132, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[136, 1, 1, "", "get_reward_operator"], [136, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.tensordict_module.actors": [[137, 0, 1, "", "DistributionalQValueHook"], [138, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[139, 0, 1, "", "ensure_tensordict_compatible"], [140, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[141, 0, 1, "", "biased_softplus"], [142, 0, 1, "", "inv_softplus"], [143, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[141, 1, 1, "", "forward"]], "torchrl.objectives": [[144, 0, 1, "", "A2CLoss"], [145, 0, 1, "", "ClipPPOLoss"], [146, 0, 1, "", "DDPGLoss"], [147, 0, 1, "", "DQNLoss"], [148, 0, 1, "", "DistributionalDQNLoss"], [149, 0, 1, "", "DreamerActorLoss"], [150, 0, 1, "", "DreamerModelLoss"], [151, 0, 1, "", "DreamerValueLoss"], [152, 0, 1, "", "HardUpdate"], [153, 0, 1, "", "KLPENPPOLoss"], [154, 0, 1, "", "PPOLoss"], [155, 0, 1, "", "REDQLoss"], [156, 0, 1, "", "ReinforceLoss"], [157, 0, 1, "", "SACLoss"], [158, 0, 1, "", "SoftUpdate"], [159, 0, 1, "", "distance_loss"], [160, 0, 1, "", "hold_out_net"], [161, 0, 1, "", "hold_out_params"], [162, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[144, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[145, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[146, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[147, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[148, 1, 1, "", "forward"]], "torchrl.objectives.DreamerActorLoss": [[149, 1, 1, "", "forward"]], "torchrl.objectives.DreamerModelLoss": [[150, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[151, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[153, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[154, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[155, 1, 1, "", "forward"]], "torchrl.objectives.ReinforceLoss": [[156, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[157, 1, 1, "", "forward"]], "torchrl.objectives.value": [[163, 0, 1, "", "GAE"], [164, 0, 1, "", "TDEstimate"], [165, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[163, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[164, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[165, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[166, 0, 1, "", "generalized_advantage_estimate"], [167, 0, 1, "", "td_advantage_estimate"], [168, 0, 1, "", "td_lambda_advantage_estimate"], [169, 0, 1, "", "td_lambda_return_estimate"], [170, 0, 1, "", "vec_generalized_advantage_estimate"], [171, 0, 1, "", "vec_td_lambda_advantage_estimate"], [172, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[173, 2, 1, "", "TensorDictRecorder"], [174, 2, 1, "", "VideoRecorder"]], "torchrl.trainers": [[175, 0, 1, "", "BatchSubSampler"], [176, 0, 1, "", "ClearCudaCache"], [177, 0, 1, "", "CountFramesLog"], [178, 0, 1, "", "LogReward"], [179, 0, 1, "", "OptimizerHook"], [180, 0, 1, "", "Recorder"], [181, 0, 1, "", "RewardNormalizer"], [182, 0, 1, "", "SelectKeys"], [183, 0, 1, "", "Trainer"], [184, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.helpers": [[185, 2, 1, "", "correct_for_frame_skip"], [186, 2, 1, "", "get_stats_random_rollout"], [187, 2, 1, "", "make_a2c_loss"], [188, 2, 1, "", "make_a2c_model"], [189, 2, 1, "", "make_collector_offpolicy"], [190, 2, 1, "", "make_collector_onpolicy"], [191, 2, 1, "", "make_ddpg_actor"], [192, 2, 1, "", "make_ddpg_loss"], [193, 2, 1, "", "make_dqn_actor"], [194, 2, 1, "", "make_dqn_loss"], [195, 2, 1, "", "make_ppo_loss"], [196, 2, 1, "", "make_ppo_model"], [197, 2, 1, "", "make_redq_loss"], [198, 2, 1, "", "make_redq_model"], [199, 2, 1, "", "make_replay_buffer"], [200, 2, 1, "", "make_sac_loss"], [201, 2, 1, "", "make_sac_model"], [202, 2, 1, "", "make_target_updater"], [203, 2, 1, "", "make_trainer"], [204, 2, 1, "", "parallel_env_constructor"], [205, 2, 1, "", "sync_async_collector"], [206, 2, 1, "", "sync_sync_collector"], [207, 2, 1, "", "transformed_env_constructor"]], "torchrl.trainers.loggers": [[208, 2, 1, "", "CSVLogger"], [209, 2, 1, "", "Logger"], [210, 2, 1, "", "MLFlowLogger"], [211, 2, 1, "", "TensorboardLogger"], [212, 2, 1, "", "WandbLogger"], [213, 2, 1, "", "generate_exp_name"], [214, 2, 1, "", "get_logger"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 5, 218, 219, 220, 221, 222, 223, 229, 230], "document": [0, 8], "tutori": 0, "refer": [0, 216], "knowledg": [0, 217], "base": [0, 217, 223], "indic": 0, "tabl": 0, "collector": [1, 222], "packag": [1, 2, 3, 218, 219, 220, 221], "data": [1, 2, 222, 230], "helper": [1, 3], "function": [1, 230], "replai": [2, 222, 230], "buffer": [2, 222, 230], "compos": [2, 63], "tensorspec": [2, 28], "util": [2, 218, 219, 220], "env": [3, 229, 230], "vector": [3, 230], "transform": [3, 82, 222, 227, 229, 230], "record": [3, 180, 222], "domain": 3, "specif": [3, 225], "librari": [3, 230], "work": [4, 5], "gym": [4, 229], "what": 4, "i": [4, 7, 228], "openai": 4, "version": [4, 6, 9], "habitat": 5, "lab": 5, "set": [5, 228], "up": 5, "your": [5, 222], "environ": [5, 6, 222, 223, 225, 229, 230], "instal": [5, 6, 230], "from": [5, 6], "pip": [5, 6], "us": [5, 8, 222, 223, 227, 230], "common": [5, 6], "issu": [5, 6, 9], "about": 6, "mujoco": 6, "prerequisit": 6, "render": [6, 229], "all": 6, "new": 6, "bindindg": 6, "2": [6, 227], "1": [6, 227], "old": 6, "bind": 6, "py": 6, "option": 6, "clone": 6, "repo": [6, 8], "when": 6, "pro": 7, "tip": 7, "debug": 7, "gradient": 7, "relat": 7, "error": 7, "newcom": 7, "my": 7, "train": [7, 222, 223], "too": 7, "slow": 7, "intermedi": 7, "resourc": 8, "pytorch": [8, 9], "functorch": [8, 227], "rl": [8, 230], "blog": 8, "websit": 8, "educ": 8, "forum": 8, "how": 9, "reproduc": 9, "workaround": 9, "implement_for": 10, "multisyncdatacollector": 11, "multiasyncdatacollector": 12, "randompolici": 13, "syncdatacollector": 14, "asyncdatacollector": 15, "split_trajectori": 16, "binarydiscretetensorspec": 17, "boundedtensorspec": 18, "compositespec": 19, "discretetensorspec": 20, "multonehotdiscretetensorspec": 21, "multistep": 22, "onehotdiscretetensorspec": 23, "prioritizedreplaybuff": 24, "replaybuff": 25, "tensordictprioritizedreplaybuff": 26, "tensordictreplaybuff": 27, "unboundedcontinuoustensorspec": 29, "prioritizedsampl": 30, "randomsampl": 31, "sampler": 32, "lazymemmapstorag": 33, "lazytensorstorag": 34, "liststorag": 35, "storag": 36, "roundrobinwrit": 37, "writer": 38, "envbas": 39, "envcreat": 40, "envmetadata": 41, "gymlikeenv": 42, "modelbasedenvbas": 43, "parallelenv": 44, "serialenv": 45, "spec": [46, 229], "braxenv": 47, "braxwrapp": 48, "dmcontrolenv": 49, "dmcontrolwrapp": 50, "gymenv": 51, "gymwrapp": 52, "habitatenv": 53, "jumanjienv": 54, "jumanjiwrapp": 55, "vmasenv": 56, "vmaswrapp": 57, "dreamerenv": 58, "binarizereward": 59, "catfram": 60, "cattensor": 61, "centercrop": 62, "doubletofloat": 64, "finitetensordictcheck": 65, "flattenobserv": 66, "frameskiptransform": 67, "grayscal": 68, "noopresetenv": 69, "observationnorm": 70, "observationtransform": 71, "pinmemorytransform": 72, "r3mtransform": 73, "resiz": 74, "rewardclip": 75, "rewardsc": 76, "rewardsum": 77, "squeezetransform": 78, "stepcount": 79, "tensordictprim": 80, "totensorimag": 81, "transformedenv": 83, "unsqueezetransform": 84, "viprewardtransform": 85, "viptransform": 86, "vecnorm": [87, 229], "gsdenois": 88, "check_env_spec": 89, "exploration_mod": 90, "get_available_librari": 91, "set_exploration_mod": 92, "step_mdp": 93, "cemplann": 94, "convnet": 95, "ddpgcnnactor": 96, "ddpgcnnqnet": 97, "ddpgmlpactor": 98, "ddpgmlpqnet": 99, "delta": 100, "distributionaldqnnet": 101, "dreameractor": 102, "duelingcnndqnet": 103, "independentnorm": 104, "lstmnet": 105, "mlp": 106, "mpcplannerbas": 107, "mppiplann": 108, "noisylazylinear": 109, "noisylinear": 110, "normalparamwrapp": 111, "obsdecod": 112, "obsencod": 113, "onehotcategor": 114, "rssmposterior": 115, "rssmprior": 116, "tanhdelta": 117, "tanhnorm": 118, "truncatednorm": 119, "reset_nois": 120, "actor": [121, 227], "actorcriticoper": [122, 227], "actorcriticwrapp": 123, "actorvalueoper": 124, "additivegaussianwrapp": 125, "distributionalqvalueactor": 126, "egreedywrapp": 127, "ornsteinuhlenbeckprocesswrapp": 128, "probabilisticactor": [129, 227], "qvalueactor": 130, "safemodul": 131, "safeprobabilisticmodul": 132, "safeprobabilisticsequenti": 133, "safesequenti": 134, "valueoper": 135, "worldmodelwrapp": 136, "distributionalqvaluehook": 137, "qvaluehook": 138, "ensure_tensordict_compat": 139, "is_tensordict_compat": 140, "biased_softplu": 141, "inv_softplu": 142, "map": 143, "a2closs": 144, "clipppoloss": 145, "ddpgloss": 146, "dqnloss": 147, "distributionaldqnloss": 148, "dreameractorloss": 149, "dreamermodelloss": 150, "dreamervalueloss": 151, "hardupd": 152, "klpenppoloss": 153, "ppoloss": 154, "redqloss": 155, "reinforceloss": 156, "sacloss": 157, "softupd": 158, "distance_loss": 159, "hold_out_net": 160, "hold_out_param": 161, "next_state_valu": 162, "gae": 163, "tdestim": 164, "tdlambdaestim": 165, "generalized_advantage_estim": 166, "td_advantage_estim": 167, "td_lambda_advantage_estim": 168, "td_lambda_return_estim": 169, "vec_generalized_advantage_estim": 170, "vec_td_lambda_advantage_estim": 171, "vec_td_lambda_return_estim": 172, "tensordictrecord": 173, "videorecord": 174, "batchsubsampl": 175, "clearcudacach": 176, "countframeslog": 177, "logreward": 178, "optimizerhook": 179, "rewardnorm": 181, "selectkei": 182, "trainer": [183, 220], "updateweight": 184, "correct_for_frame_skip": 185, "get_stats_random_rollout": 186, "make_a2c_loss": 187, "make_a2c_model": 188, "make_collector_offpolici": 189, "make_collector_onpolici": 190, "make_ddpg_actor": 191, "make_ddpg_loss": 192, "make_dqn_actor": 193, "make_dqn_loss": 194, "make_ppo_loss": 195, "make_ppo_model": 196, "make_redq_loss": 197, "make_redq_model": 198, "make_replay_buff": 199, "make_sac_loss": 200, "make_sac_model": 201, "make_target_updat": 202, "make_train": 203, "parallel_env_constructor": 204, "sync_async_collector": 205, "sync_sync_collector": 206, "transformed_env_constructor": 207, "csvlogger": 208, "logger": [209, 220], "mlflowlogg": 210, "tensorboardlogg": 211, "wandblogg": 212, "generate_exp_nam": 213, "get_logg": 214, "readm": [215, 224], "tuto": [215, 224], "api": 216, "contribut": [217, 230], "content": 217, "modul": [218, 230], "tensordict": [218, 228, 230], "hook": [218, 220], "model": [218, 222, 223, 230], "explor": 218, "planner": 218, "distribut": 218, "object": [219, 222, 230], "dqn": [219, 223], "ddpg": [219, 222], "sac": 219, "redq": 219, "ppo": 219, "a2c": 219, "reinforc": 219, "dreamer": 219, "return": 219, "checkpoint": 220, "builder": 220, "_util": 221, "code": [222, 223, 228], "parallel": [222, 225, 229], "execut": [222, 225], "normal": 222, "observ": 222, "build": [222, 223], "evalu": 222, "hyperparamet": [222, 223], "initi": 222, "time": [222, 226], "polici": [222, 225], "experi": 222, "result": 222, "sampl": 222, "trajectori": 222, "td": [222, 223], "lambda": [222, 223], "pixel": 223, "The": 223, "problem": 223, "deep": 223, "q": 223, "network": 223, "regular": 223, "loop": 223, "conclus": 223, "possibl": 223, "improv": [223, 228], "task": 225, "multi": 225, "divers": 225, "rollout": [225, 229], "comput": 226, "tensordictmodul": [227, 230], "exampl": 227, "simpl": 227, "usag": [227, 228], "multipl": 227, "input": 227, "3": 227, "output": 227, "4": 227, "combin": 227, "tensordictsequenti": 227, "5": 227, "compat": 227, "do": [227, 228], "": 227, "don": 227, "t": [227, 228], "probabilistictensordictmodul": 227, "showcas": 227, "implement": 227, "benchmark": 227, "modular": 228, "can": 228, "thi": 228, "python": 228, "dict": 228, "structur": 228, "dictionari": 228, "featur": 228, "get": 228, "kei": 228, "valu": 228, "updat": 228, "tensordict_or_dict": 228, "del": 228, "tensor": 228, "batch": 228, "size": 228, "devic": [228, 229], "memori": 228, "share": 228, "via": 228, "physic": 228, "oper": 228, "seed": 229, "reset": 229, "step": 229, "frame_skip": 229, "deepmind": 229, "control": 229, "run": 229, "close": 229, "access": 229, "attribut": 229, "kwarg": 229, "introduct": 230, "chang": 230, "config": 230, "sequenc": 230, "program": 230, "ensembl": 230, "meta": 230, "special": 230, "class": 230, "state": 230}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials": [[0, "tutorials"]], "References": [[0, "references"]], "Knowledge Base": [[0, "knowledge-base"], [217, "knowledge-base"]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers": [[2, "composable-replay-buffers"]], "TensorSpec": [[2, "tensorspec"], [28, "tensorspec"]], "Utils": [[2, "utils"], [218, "utils"], [219, "utils"], [220, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [222, "transforms"], [230, "transforms"]], "Recorders": [[3, "recorders"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Working with gym": [[4, "working-with-gym"]], "What is OpenAI Gym?": [[4, "what-is-openai-gym"]], "Versioning": [[4, "versioning"]], "Working with habitat-lab": [[5, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[5, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[5, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[5, "installing-torchrl"]], "Using Habitat": [[5, "using-habitat"]], "Common issues": [[5, "common-issues"]], "About MuJoCo": [[6, "about-mujoco"]], "Installing MuJoCo": [[6, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[6, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[6, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[6, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[6, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[6, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[6, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips and Debugging": [[7, "pro-tips-and-debugging"]], "Gradient-related errors [Newcomers]": [[7, "gradient-related-errors-newcomers"]], "My Training is too slow [Newcomers / intermediate]": [[7, "my-training-is-too-slow-newcomers-intermediate"]], "Useful resources": [[8, "useful-resources"]], "Pytorch documentation": [[8, "pytorch-documentation"]], "functorch documentation": [[8, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[8, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[8, "educational-resource"]], "Forums": [[8, "forums"]], "Repos": [[8, "repos"]], "Versioning Issues": [[9, "versioning-issues"]], "Pytorch version": [[9, "pytorch-version"]], "How to reproduce": [[9, "how-to-reproduce"]], "Workarounds": [[9, "workarounds"]], "implement_for": [[10, "implement-for"]], "MultiSyncDataCollector": [[11, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[12, "multiasyncdatacollector"]], "RandomPolicy": [[13, "randompolicy"]], "SyncDataCollector": [[14, "syncdatacollector"]], "aSyncDataCollector": [[15, "asyncdatacollector"]], "split_trajectories": [[16, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[17, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[18, "boundedtensorspec"]], "CompositeSpec": [[19, "compositespec"]], "DiscreteTensorSpec": [[20, "discretetensorspec"]], "MultOneHotDiscreteTensorSpec": [[21, "multonehotdiscretetensorspec"]], "MultiStep": [[22, "multistep"]], "OneHotDiscreteTensorSpec": [[23, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[24, "prioritizedreplaybuffer"]], "ReplayBuffer": [[25, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[26, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[27, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[29, "unboundedcontinuoustensorspec"]], "PrioritizedSampler": [[30, "prioritizedsampler"]], "RandomSampler": [[31, "randomsampler"]], "Sampler": [[32, "sampler"]], "LazyMemmapStorage": [[33, "lazymemmapstorage"]], "LazyTensorStorage": [[34, "lazytensorstorage"]], "ListStorage": [[35, "liststorage"]], "Storage": [[36, "storage"]], "RoundRobinWriter": [[37, "roundrobinwriter"]], "Writer": [[38, "writer"]], "EnvBase": [[39, "envbase"]], "EnvCreator": [[40, "envcreator"]], "EnvMetaData": [[41, "envmetadata"]], "GymLikeEnv": [[42, "gymlikeenv"]], "ModelBasedEnvBase": [[43, "modelbasedenvbase"]], "ParallelEnv": [[44, "parallelenv"]], "SerialEnv": [[45, "serialenv"]], "Specs": [[46, "specs"]], "BraxEnv": [[47, "braxenv"]], "BraxWrapper": [[48, "braxwrapper"]], "DMControlEnv": [[49, "dmcontrolenv"]], "DMControlWrapper": [[50, "dmcontrolwrapper"]], "GymEnv": [[51, "gymenv"]], "GymWrapper": [[52, "gymwrapper"]], "HabitatEnv": [[53, "habitatenv"]], "JumanjiEnv": [[54, "jumanjienv"]], "JumanjiWrapper": [[55, "jumanjiwrapper"]], "VmasEnv": [[56, "vmasenv"]], "VmasWrapper": [[57, "vmaswrapper"]], "DreamerEnv": [[58, "dreamerenv"]], "BinarizeReward": [[59, "binarizereward"]], "CatFrames": [[60, "catframes"]], "CatTensors": [[61, "cattensors"]], "CenterCrop": [[62, "centercrop"]], "Compose": [[63, "compose"]], "DoubleToFloat": [[64, "doubletofloat"]], "FiniteTensorDictCheck": [[65, "finitetensordictcheck"]], "FlattenObservation": [[66, "flattenobservation"]], "FrameSkipTransform": [[67, "frameskiptransform"]], "GrayScale": [[68, "grayscale"]], "NoopResetEnv": [[69, "noopresetenv"]], "ObservationNorm": [[70, "observationnorm"]], "ObservationTransform": [[71, "observationtransform"]], "PinMemoryTransform": [[72, "pinmemorytransform"]], "R3MTransform": [[73, "r3mtransform"]], "Resize": [[74, "resize"]], "RewardClipping": [[75, "rewardclipping"]], "RewardScaling": [[76, "rewardscaling"]], "RewardSum": [[77, "rewardsum"]], "SqueezeTransform": [[78, "squeezetransform"]], "StepCounter": [[79, "stepcounter"]], "TensorDictPrimer": [[80, "tensordictprimer"]], "ToTensorImage": [[81, "totensorimage"]], "Transform": [[82, "transform"]], "TransformedEnv": [[83, "transformedenv"]], "UnsqueezeTransform": [[84, "unsqueezetransform"]], "VIPRewardTransform": [[85, "viprewardtransform"]], "VIPTransform": [[86, "viptransform"]], "VecNorm": [[87, "vecnorm"], [229, "vecnorm"]], "gSDENoise": [[88, "gsdenoise"]], "check_env_specs": [[89, "check-env-specs"]], "exploration_mode": [[90, "exploration-mode"]], "get_available_libraries": [[91, "get-available-libraries"]], "set_exploration_mode": [[92, "set-exploration-mode"]], "step_mdp": [[93, "step-mdp"]], "CEMPlanner": [[94, "cemplanner"]], "ConvNet": [[95, "convnet"]], "DdpgCnnActor": [[96, "ddpgcnnactor"]], "DdpgCnnQNet": [[97, "ddpgcnnqnet"]], "DdpgMlpActor": [[98, "ddpgmlpactor"]], "DdpgMlpQNet": [[99, "ddpgmlpqnet"]], "Delta": [[100, "delta"]], "DistributionalDQNnet": [[101, "distributionaldqnnet"]], "DreamerActor": [[102, "dreameractor"]], "DuelingCnnDQNet": [[103, "duelingcnndqnet"]], "IndependentNormal": [[104, "independentnormal"]], "LSTMNet": [[105, "lstmnet"]], "MLP": [[106, "mlp"]], "MPCPlannerBase": [[107, "mpcplannerbase"]], "MPPIPlanner": [[108, "mppiplanner"]], "NoisyLazyLinear": [[109, "noisylazylinear"]], "NoisyLinear": [[110, "noisylinear"]], "NormalParamWrapper": [[111, "normalparamwrapper"]], "ObsDecoder": [[112, "obsdecoder"]], "ObsEncoder": [[113, "obsencoder"]], "OneHotCategorical": [[114, "onehotcategorical"]], "RSSMPosterior": [[115, "rssmposterior"]], "RSSMPrior": [[116, "rssmprior"]], "TanhDelta": [[117, "tanhdelta"]], "TanhNormal": [[118, "tanhnormal"]], "TruncatedNormal": [[119, "truncatednormal"]], "reset_noise": [[120, "reset-noise"]], "Actor": [[121, "actor"], [227, "actor"]], "ActorCriticOperator": [[122, "actorcriticoperator"], [227, "actorcriticoperator"]], "ActorCriticWrapper": [[123, "actorcriticwrapper"]], "ActorValueOperator": [[124, "actorvalueoperator"]], "AdditiveGaussianWrapper": [[125, "additivegaussianwrapper"]], "DistributionalQValueActor": [[126, "distributionalqvalueactor"]], "EGreedyWrapper": [[127, "egreedywrapper"]], "OrnsteinUhlenbeckProcessWrapper": [[128, "ornsteinuhlenbeckprocesswrapper"]], "ProbabilisticActor": [[129, "probabilisticactor"], [227, "probabilisticactor"]], "QValueActor": [[130, "qvalueactor"]], "SafeModule": [[131, "safemodule"]], "SafeProbabilisticModule": [[132, "safeprobabilisticmodule"]], "SafeProbabilisticSequential": [[133, "safeprobabilisticsequential"]], "SafeSequential": [[134, "safesequential"]], "ValueOperator": [[135, "valueoperator"]], "WorldModelWrapper": [[136, "worldmodelwrapper"]], "DistributionalQValueHook": [[137, "distributionalqvaluehook"]], "QValueHook": [[138, "qvaluehook"]], "ensure_tensordict_compatible": [[139, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[140, "is-tensordict-compatible"]], "biased_softplus": [[141, "biased-softplus"]], "inv_softplus": [[142, "inv-softplus"]], "mappings": [[143, "mappings"]], "A2CLoss": [[144, "a2closs"]], "ClipPPOLoss": [[145, "clipppoloss"]], "DDPGLoss": [[146, "ddpgloss"]], "DQNLoss": [[147, "dqnloss"]], "DistributionalDQNLoss": [[148, "distributionaldqnloss"]], "DreamerActorLoss": [[149, "dreameractorloss"]], "DreamerModelLoss": [[150, "dreamermodelloss"]], "DreamerValueLoss": [[151, "dreamervalueloss"]], "HardUpdate": [[152, "hardupdate"]], "KLPENPPOLoss": [[153, "klpenppoloss"]], "PPOLoss": [[154, "ppoloss"]], "REDQLoss": [[155, "redqloss"]], "ReinforceLoss": [[156, "reinforceloss"]], "SACLoss": [[157, "sacloss"]], "SoftUpdate": [[158, "softupdate"]], "distance_loss": [[159, "distance-loss"]], "hold_out_net": [[160, "hold-out-net"]], "hold_out_params": [[161, "hold-out-params"]], "next_state_value": [[162, "next-state-value"]], "GAE": [[163, "gae"]], "TDEstimate": [[164, "tdestimate"]], "TDLambdaEstimate": [[165, "tdlambdaestimate"]], "generalized_advantage_estimate": [[166, "generalized-advantage-estimate"]], "td_advantage_estimate": [[167, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[168, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[169, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[170, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[171, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[172, "vec-td-lambda-return-estimate"]], "TensorDictRecorder": [[173, "tensordictrecorder"]], "VideoRecorder": [[174, "videorecorder"]], "BatchSubSampler": [[175, "batchsubsampler"]], "ClearCudaCache": [[176, "clearcudacache"]], "CountFramesLog": [[177, "countframeslog"]], "LogReward": [[178, "logreward"]], "OptimizerHook": [[179, "optimizerhook"]], "Recorder": [[180, "recorder"]], "RewardNormalizer": [[181, "rewardnormalizer"]], "SelectKeys": [[182, "selectkeys"]], "Trainer": [[183, "trainer"]], "UpdateWeights": [[184, "updateweights"]], "correct_for_frame_skip": [[185, "correct-for-frame-skip"]], "get_stats_random_rollout": [[186, "get-stats-random-rollout"]], "make_a2c_loss": [[187, "make-a2c-loss"]], "make_a2c_model": [[188, "make-a2c-model"]], "make_collector_offpolicy": [[189, "make-collector-offpolicy"]], "make_collector_onpolicy": [[190, "make-collector-onpolicy"]], "make_ddpg_actor": [[191, "make-ddpg-actor"]], "make_ddpg_loss": [[192, "make-ddpg-loss"]], "make_dqn_actor": [[193, "make-dqn-actor"]], "make_dqn_loss": [[194, "make-dqn-loss"]], "make_ppo_loss": [[195, "make-ppo-loss"]], "make_ppo_model": [[196, "make-ppo-model"]], "make_redq_loss": [[197, "make-redq-loss"]], "make_redq_model": [[198, "make-redq-model"]], "make_replay_buffer": [[199, "make-replay-buffer"]], "make_sac_loss": [[200, "make-sac-loss"]], "make_sac_model": [[201, "make-sac-model"]], "make_target_updater": [[202, "make-target-updater"]], "make_trainer": [[203, "make-trainer"]], "parallel_env_constructor": [[204, "parallel-env-constructor"]], "sync_async_collector": [[205, "sync-async-collector"]], "sync_sync_collector": [[206, "sync-sync-collector"]], "transformed_env_constructor": [[207, "transformed-env-constructor"]], "CSVLogger": [[208, "csvlogger"]], "Logger": [[209, "logger"]], "MLFlowLogger": [[210, "mlflowlogger"]], "TensorboardLogger": [[211, "tensorboardlogger"]], "WandbLogger": [[212, "wandblogger"]], "generate_exp_name": [[213, "generate-exp-name"]], "get_logger": [[214, "get-logger"]], "README Tutos": [[215, "readme-tutos"], [224, "readme-tutos"]], "API Reference": [[216, "api-reference"]], "Contributing": [[217, "contributing"], [230, "contributing"]], "Contents:": [[217, null]], "torchrl.modules package": [[218, "torchrl-modules-package"]], "TensorDict modules": [[218, "tensordict-modules"]], "Hooks": [[218, "hooks"]], "Models": [[218, "models"], [230, "models"]], "Exploration": [[218, "exploration"]], "Planners": [[218, "planners"]], "Distributions": [[218, "distributions"]], "torchrl.objectives package": [[219, "torchrl-objectives-package"]], "DQN": [[219, "dqn"]], "DDPG": [[219, "ddpg"]], "SAC": [[219, "sac"]], "REDQ": [[219, "redq"]], "PPO": [[219, "ppo"]], "A2C": [[219, "a2c"]], "Reinforce": [[219, "reinforce"]], "Dreamer": [[219, "dreamer"]], "Returns": [[219, "returns"]], "torchrl.trainers package": [[220, "torchrl-trainers-package"]], "Checkpointing": [[220, "checkpointing"]], "Trainer and hooks": [[220, "trainer-and-hooks"]], "Builders": [[220, "builders"]], "Loggers": [[220, "loggers"]], "torchrl._utils package": [[221, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[222, "coding-ddpg-using-torchrl"]], "Environment": [[222, "environment"]], "Parallel execution": [[222, "parallel-execution"]], "Normalization of the observations": [[222, "normalization-of-the-observations"]], "Building the model": [[222, "building-the-model"]], "Evaluator: building your recorder object": [[222, "evaluator-building-your-recorder-object"]], "Replay buffer": [[222, "replay-buffer"]], "Hyperparameters": [[222, "hyperparameters"], [223, "hyperparameters"]], "Initialization": [[222, "initialization"]], "Data collector": [[222, "data-collector"]], "Time to train the policy!": [[222, "time-to-train-the-policy"]], "Experiment results": [[222, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[222, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[223, "coding-a-pixel-based-dqn-using-torchrl"]], "Building the environment": [[223, "building-the-environment"]], "The problem": [[223, "the-problem"]], "Building the model (Deep Q-network)": [[223, "building-the-model-deep-q-network"]], "Regular DQN": [[223, "regular-dqn"]], "Training loop": [[223, "training-loop"], [223, "id1"]], "TD-lambda": [[223, "td-lambda"]], "Conclusion and possible improvements": [[223, "conclusion-and-possible-improvements"]], "Task-specific policy in multi-task environments": [[225, "task-specific-policy-in-multi-task-environments"]], "Policy": [[225, "policy"]], "Executing diverse tasks in parallel": [[225, "executing-diverse-tasks-in-parallel"]], "Rollout": [[225, "rollout"]], "Computation times": [[226, "computation-times"]], "TensorDictModule": [[227, "tensordictmodule"]], "TensorDictModule by examples": [[227, "tensordictmodule-by-examples"]], "Example 1: Simple usage": [[227, "example-1-simple-usage"]], "Example 2: Multiple inputs": [[227, "example-2-multiple-inputs"]], "Example 3: Multiple outputs": [[227, "example-3-multiple-outputs"]], "Example 4: Combining multiple TensorDictModule with TensorDictSequential": [[227, "example-4-combining-multiple-tensordictmodule-with-tensordictsequential"]], "Example 5: Compatibility with functorch": [[227, "example-5-compatibility-with-functorch"]], "Do\u2019s and don\u2019t with TensorDictModule": [[227, "do-s-and-don-t-with-tensordictmodule"]], "ProbabilisticTensorDictModule": [[227, "probabilistictensordictmodule"]], "Showcase: Implementing a transformer using TensorDictModule": [[227, "showcase-implementing-a-transformer-using-tensordictmodule"]], "Benchmarking": [[227, "benchmarking"]], "TensorDict": [[228, "tensordict"], [230, "tensordict"]], "Improving the modularity of codes": [[228, "improving-the-modularity-of-codes"]], "Can\u2019t I do this with a python dict?": [[228, "can-t-i-do-this-with-a-python-dict"]], "TensorDict structure": [[228, "tensordict-structure"]], "TensorDict Dictionary Features": [[228, "tensordict-dictionary-features"]], "get(key)": [[228, "get-key"]], "set(key, value)": [[228, "set-key-value"]], "keys()": [[228, "keys"]], "values()": [[228, "values"]], "update(tensordict_or_dict)": [[228, "update-tensordict-or-dict"]], "del": [[228, "del"]], "TensorDict tensor features": [[228, "tensordict-tensor-features"]], "Batch size": [[228, "batch-size"]], "Devices": [[228, "devices"]], "Memory sharing via physical memory usage": [[228, "memory-sharing-via-physical-memory-usage"]], "Tensor operations": [[228, "tensor-operations"]], "TorchRL envs": [[229, "torchrl-envs"]], "Gym environments": [[229, "gym-environments"]], "Env Specs": [[229, "env-specs"]], "Seeding, resetting and steps": [[229, "seeding-resetting-and-steps"]], "Rollouts": [[229, "rollouts"]], "frame_skip": [[229, "frame-skip"]], "Rendering": [[229, "rendering"]], "DeepMind Control environments": [[229, "deepmind-control-environments"]], "Transforming envs": [[229, "transforming-envs"]], "Environment device": [[229, "environment-device"]], "Running environments in parallel": [[229, "running-environments-in-parallel"]], "Closing parallel environments": [[229, "closing-parallel-environments"]], "Seeding": [[229, "seeding"]], "Accessing environment attributes": [[229, "accessing-environment-attributes"]], "kwargs for parallel environments": [[229, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[229, "transforming-parallel-environments"]], "Introduction to TorchRL": [[230, "introduction-to-torchrl"]], "Data": [[230, "data"]], "Replay buffers": [[230, "replay-buffers"]], "Envs": [[230, "envs"]], "Changing environments config": [[230, "changing-environments-config"]], "Vectorized Environments": [[230, "vectorized-environments"]], "Modules": [[230, "modules"]], "TensorDictModules": [[230, "tensordictmodules"]], "Sequences of Modules": [[230, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[230, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[230, "specialized-classes"]], "Using Environments and Modules": [[230, "using-environments-and-modules"]], "Objectives": [[230, "objectives"]], "State of the Library": [[230, "state-of-the-library"]], "Installing the Library": [[230, "installing-the-library"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[10, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors.collectors)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors.collectors)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "randompolicy (class in torchrl.collectors.collectors)": [[13, "torchrl.collectors.collectors.RandomPolicy"]], "syncdatacollector (class in torchrl.collectors.collectors)": [[14, "torchrl.collectors.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors.collectors)": [[15, "torchrl.collectors.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[16, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[17, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[18, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.encode"]], "index() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[19, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.encode"]], "index() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[20, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.encode"]], "index() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.zero"]], "multonehotdiscretetensorspec (class in torchrl.data)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[22, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.zero_grad"]], "onehotdiscretetensorspec (class in torchrl.data)": [[23, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[24, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.sample"]], "replaybuffer (class in torchrl.data)": [[25, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.add"]], "append_transform() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data)": [[27, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[28, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.encode"]], "index() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[29, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[30, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[30, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[31, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[32, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[33, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[33, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[34, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[34, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[35, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[35, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[36, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[36, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[37, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[37, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[37, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[38, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[38, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[38, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[39, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[39, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[39, "id0"], [39, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[39, "id1"], [39, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[39, "id2"], [39, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[39, "id3"], [39, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[39, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[39, "id4"], [39, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[39, "torchrl.envs.EnvBase.zero_grad"]], "envcreator (class in torchrl.envs)": [[40, "torchrl.envs.EnvCreator"]], "envmetadata (class in torchrl.envs)": [[41, "torchrl.envs.EnvMetaData"]], "gymlikeenv (class in torchrl.envs)": [[42, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[42, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[42, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[43, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[43, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[43, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[43, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[43, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[43, "torchrl.envs.step"]], "parallelenv (class in torchrl.envs)": [[44, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[44, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[44, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[45, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[45, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[45, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.zero_grad"]], "specs (class in torchrl.envs)": [[46, "torchrl.envs.Specs"]], "build_tensordict() (torchrl.envs.specs method)": [[46, "torchrl.envs.Specs.build_tensordict"]], "braxenv() (in module torchrl.envs.libs.brax)": [[47, "torchrl.envs.libs.brax.BraxEnv"]], "braxwrapper() (in module torchrl.envs.libs.brax)": [[48, "torchrl.envs.libs.brax.BraxWrapper"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[49, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[50, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[51, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[52, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[53, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[54, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[55, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "vmasenv() (in module torchrl.envs.libs.vmas)": [[56, "torchrl.envs.libs.vmas.VmasEnv"]], "vmaswrapper() (in module torchrl.envs.libs.vmas)": [[57, "torchrl.envs.libs.vmas.VmasWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[58, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[59, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[59, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[60, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[60, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[60, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[61, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[61, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[62, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[63, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[63, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[63, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[63, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[63, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[63, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[64, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[64, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[64, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[66, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "frameskiptransform (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.FrameSkipTransform"]], "grayscale (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[68, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[69, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[70, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[70, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.R3MTransform"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[73, "torchrl.envs.transforms.R3MTransform.to"]], "resize (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[74, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[75, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[76, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "rewardsum (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.RewardSum"]], "reset() (torchrl.envs.transforms.rewardsum method)": [[77, "torchrl.envs.transforms.RewardSum.reset"]], "transform_observation_spec() (torchrl.envs.transforms.rewardsum method)": [[77, "torchrl.envs.transforms.RewardSum.transform_observation_spec"]], "squeezetransform (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.SqueezeTransform"]], "forward() (torchrl.envs.transforms.squeezetransform method)": [[78, "torchrl.envs.transforms.SqueezeTransform.forward"]], "stepcounter (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.StepCounter"]], "reset() (torchrl.envs.transforms.stepcounter method)": [[79, "torchrl.envs.transforms.StepCounter.reset"]], "transform_observation_spec() (torchrl.envs.transforms.stepcounter method)": [[79, "torchrl.envs.transforms.StepCounter.transform_observation_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[80, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[80, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[80, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[81, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[82, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[82, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[82, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[82, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[82, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[82, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[83, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[83, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[83, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[83, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[83, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[83, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[83, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[83, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[83, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[83, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[83, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[83, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[84, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[84, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[84, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[84, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[84, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[85, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[85, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[85, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[86, "torchrl.envs.transforms.VIPTransform"]], "is_3d (torchrl.envs.transforms.viptransform property)": [[86, "torchrl.envs.transforms.VIPTransform.is_3d"]], "to() (torchrl.envs.transforms.viptransform method)": [[86, "torchrl.envs.transforms.VIPTransform.to"]], "vecnorm (class in torchrl.envs.transforms)": [[87, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[87, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[87, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[87, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[87, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[88, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[88, "torchrl.envs.transforms.gSDENoise.reset"]], "check_env_specs() (in module torchrl.envs.utils)": [[89, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[90, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[91, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[92, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[93, "torchrl.envs.utils.step_mdp"]], "cemplanner (class in torchrl.modules)": [[94, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[94, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[95, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[95, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[96, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[96, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[97, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[97, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[98, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[98, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[99, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[99, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[100, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[100, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[100, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[100, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[100, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[100, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[101, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[101, "torchrl.modules.DistributionalDQNnet.forward"]], "dreameractor (class in torchrl.modules)": [[102, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[102, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[103, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[103, "torchrl.modules.DuelingCnnDQNet.forward"]], "independentnormal (class in torchrl.modules)": [[104, "torchrl.modules.IndependentNormal"]], "mode (torchrl.modules.independentnormal property)": [[104, "torchrl.modules.IndependentNormal.mode"]], "lstmnet (class in torchrl.modules)": [[105, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[105, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[106, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[106, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[107, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[107, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[107, "torchrl.modules.MPCPlannerBase.planning"]], "mppiplanner (class in torchrl.modules)": [[108, "torchrl.modules.MPPIPlanner"]], "planning() (torchrl.modules.mppiplanner method)": [[108, "torchrl.modules.MPPIPlanner.planning"]], "noisylazylinear (class in torchrl.modules)": [[109, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[109, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[110, "torchrl.modules.NoisyLinear"]], "normalparamwrapper (class in torchrl.modules)": [[111, "torchrl.modules.NormalParamWrapper"]], "forward() (torchrl.modules.normalparamwrapper method)": [[111, "torchrl.modules.NormalParamWrapper.forward"]], "obsdecoder (class in torchrl.modules)": [[112, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[112, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[113, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[113, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[114, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[114, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[114, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[114, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[114, "torchrl.modules.OneHotCategorical.sample"]], "rssmposterior (class in torchrl.modules)": [[115, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[115, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[116, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[116, "torchrl.modules.RSSMPrior.forward"]], "tanhdelta (class in torchrl.modules)": [[117, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[117, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[117, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[118, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[118, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[119, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[119, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[119, "torchrl.modules.TruncatedNormal.mode"]], "reset_noise (class in torchrl.modules)": [[120, "torchrl.modules.reset_noise"]], "actor (class in torchrl.modules.tensordict_module)": [[121, "torchrl.modules.tensordict_module.Actor"]], "actorcriticoperator (class in torchrl.modules.tensordict_module)": [[122, "torchrl.modules.tensordict_module.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[122, "torchrl.modules.tensordict_module.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[122, "torchrl.modules.tensordict_module.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules.tensordict_module)": [[123, "torchrl.modules.tensordict_module.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[123, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[123, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules.tensordict_module)": [[124, "torchrl.modules.tensordict_module.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[124, "torchrl.modules.tensordict_module.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[124, "torchrl.modules.tensordict_module.ActorValueOperator.get_value_operator"]], "additivegaussianwrapper (class in torchrl.modules.tensordict_module)": [[125, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper"]], "forward() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[125, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.forward"]], "step() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[125, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.step"]], "distributionalqvalueactor (class in torchrl.modules.tensordict_module)": [[126, "torchrl.modules.tensordict_module.DistributionalQValueActor"]], "egreedywrapper (class in torchrl.modules.tensordict_module)": [[127, "torchrl.modules.tensordict_module.EGreedyWrapper"]], "forward() (torchrl.modules.tensordict_module.egreedywrapper method)": [[127, "torchrl.modules.tensordict_module.EGreedyWrapper.forward"]], "step() (torchrl.modules.tensordict_module.egreedywrapper method)": [[127, "torchrl.modules.tensordict_module.EGreedyWrapper.step"]], "ornsteinuhlenbeckprocesswrapper (class in torchrl.modules.tensordict_module)": [[128, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper"]], "forward() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[128, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.forward"]], "step() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[128, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.step"]], "probabilisticactor (class in torchrl.modules.tensordict_module)": [[129, "torchrl.modules.tensordict_module.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules.tensordict_module)": [[130, "torchrl.modules.tensordict_module.QValueActor"]], "safemodule (class in torchrl.modules.tensordict_module)": [[131, "torchrl.modules.tensordict_module.SafeModule"]], "random() (torchrl.modules.tensordict_module.safemodule method)": [[131, "torchrl.modules.tensordict_module.SafeModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safemodule method)": [[131, "torchrl.modules.tensordict_module.SafeModule.random_sample"]], "to() (torchrl.modules.tensordict_module.safemodule method)": [[131, "torchrl.modules.tensordict_module.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules.tensordict_module)": [[132, "torchrl.modules.tensordict_module.SafeProbabilisticModule"]], "random() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[132, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[132, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random_sample"]], "safeprobabilisticsequential (class in torchrl.modules.tensordict_module)": [[133, "torchrl.modules.tensordict_module.SafeProbabilisticSequential"]], "safesequential (class in torchrl.modules.tensordict_module)": [[134, "torchrl.modules.tensordict_module.SafeSequential"]], "valueoperator (class in torchrl.modules.tensordict_module)": [[135, "torchrl.modules.tensordict_module.ValueOperator"]], "worldmodelwrapper (class in torchrl.modules.tensordict_module)": [[136, "torchrl.modules.tensordict_module.WorldModelWrapper"]], "get_reward_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[136, "torchrl.modules.tensordict_module.WorldModelWrapper.get_reward_operator"]], "get_transition_model_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[136, "torchrl.modules.tensordict_module.WorldModelWrapper.get_transition_model_operator"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[137, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[138, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[139, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[140, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[141, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[141, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[142, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[143, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[144, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[144, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[145, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[145, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[146, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[146, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[147, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[147, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[148, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[148, "torchrl.objectives.DistributionalDQNLoss.forward"]], "dreameractorloss (class in torchrl.objectives)": [[149, "torchrl.objectives.DreamerActorLoss"]], "forward() (torchrl.objectives.dreameractorloss method)": [[149, "torchrl.objectives.DreamerActorLoss.forward"]], "dreamermodelloss (class in torchrl.objectives)": [[150, "torchrl.objectives.DreamerModelLoss"]], "forward() (torchrl.objectives.dreamermodelloss method)": [[150, "torchrl.objectives.DreamerModelLoss.forward"]], "dreamervalueloss (class in torchrl.objectives)": [[151, "torchrl.objectives.DreamerValueLoss"]], "forward() (torchrl.objectives.dreamervalueloss method)": [[151, "torchrl.objectives.DreamerValueLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[152, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[153, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[153, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[154, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[154, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[155, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[155, "torchrl.objectives.REDQLoss.forward"]], "reinforceloss (class in torchrl.objectives)": [[156, "torchrl.objectives.ReinforceLoss"]], "forward() (torchrl.objectives.reinforceloss method)": [[156, "torchrl.objectives.ReinforceLoss.forward"]], "sacloss (class in torchrl.objectives)": [[157, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[157, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[158, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[159, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[160, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[161, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[162, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[163, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[163, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[164, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[164, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[165, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[165, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[166, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[167, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[168, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[169, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[170, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[171, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[172, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "tensordictrecorder() (in module torchrl.record)": [[173, "torchrl.record.TensorDictRecorder"]], "videorecorder() (in module torchrl.record)": [[174, "torchrl.record.VideoRecorder"]], "batchsubsampler (class in torchrl.trainers)": [[175, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[176, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[177, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[178, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[179, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[180, "torchrl.trainers.Recorder"]], "rewardnormalizer (class in torchrl.trainers)": [[181, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[182, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[183, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[184, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[185, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[186, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[187, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[188, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[189, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[190, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[191, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[192, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[193, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[194, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[195, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[196, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[197, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[198, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[199, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[200, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[201, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[202, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[203, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[204, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[205, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[206, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[207, "torchrl.trainers.helpers.transformed_env_constructor"]], "csvlogger() (in module torchrl.trainers.loggers)": [[208, "torchrl.trainers.loggers.CSVLogger"]], "logger() (in module torchrl.trainers.loggers)": [[209, "torchrl.trainers.loggers.Logger"]], "mlflowlogger() (in module torchrl.trainers.loggers)": [[210, "torchrl.trainers.loggers.MLFlowLogger"]], "tensorboardlogger() (in module torchrl.trainers.loggers)": [[211, "torchrl.trainers.loggers.TensorboardLogger"]], "wandblogger() (in module torchrl.trainers.loggers)": [[212, "torchrl.trainers.loggers.WandbLogger"]], "generate_exp_name() (in module torchrl.trainers.loggers)": [[213, "torchrl.trainers.loggers.generate_exp_name"]], "get_logger() (in module torchrl.trainers.loggers)": [[214, "torchrl.trainers.loggers.get_logger"]]}})