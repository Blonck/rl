Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.CSVLogger", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.MLFlowLogger", "reference/generated/torchrl.record.loggers.TensorboardLogger", "reference/generated/torchrl.record.loggers.WandbLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/index", "tutorials/multi_task", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.CSVLogger.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.WandbLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "RSSMPosterior", "RSSMPrior", "TanhDelta", "TanhNormal", "TruncatedNormal", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DistributionalQValueActor", "EGreedyWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticSequential", "SafeSequential", "ValueOperator", "WorldModelWrapper", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "CSVLogger", "Logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "generate_exp_name", "get_logger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "Reinforcement Learning (PPO) with TorchRL Tutorial", "README Tutos", "Task-specific policy in multi-task environments", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"The": [0, 1, 2, 3, 4, 5, 7, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 42, 45, 47, 48, 49, 66, 69, 76, 79, 84, 86, 89, 93, 96, 103, 104, 106, 107, 108, 109, 115, 117, 118, 120, 121, 125, 126, 131, 132, 138, 139, 141, 142, 144, 145, 146, 151, 155, 156, 157, 159, 160, 161, 163, 164, 168, 173, 174, 175, 176, 186, 188, 189, 190, 193, 197, 223, 225, 226, 233, 235, 236, 237, 240, 241, 243, 244], "tensordict": [0, 1, 3, 12, 13, 15, 16, 17, 20, 21, 22, 24, 27, 28, 29, 33, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 103, 104, 115, 117, 118, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 184, 193, 197, 199, 201, 202, 208, 211, 213, 216, 218, 221, 229, 233, 235, 236, 237, 239, 240, 241, 244], "class": [0, 1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 225, 226, 227, 233, 235, 236, 237, 244], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 43, 45, 47, 48, 49, 63, 89, 93, 135, 137, 142, 164, 235, 236, 237, 239, 240, 241, 243, 244], "been": [0, 5, 7, 8, 16, 42, 45, 47, 48, 49, 92, 236, 237, 239, 240, 244], "move": [0, 4, 24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 97, 103, 116, 141, 200, 235, 236, 243, 244], "out": [0, 3, 4, 5, 24, 42, 45, 47, 48, 49, 89, 99, 119, 120, 138, 141, 142, 171, 172, 233, 235, 236, 237, 240, 243, 244], "dedic": [0, 132, 133, 134, 235, 239], "librari": [0, 5, 6, 7, 8, 9, 10, 47, 101, 229, 230, 234, 237, 240, 244], "take": [0, 1, 3, 8, 17, 42, 45, 47, 48, 49, 88, 90, 92, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151, 153, 177, 178, 179, 180, 181, 182, 183, 193, 204, 233, 235, 236, 237, 240, 244], "look": [0, 3, 5, 7, 8, 24, 42, 45, 47, 48, 49, 79, 80, 142, 143, 144, 236, 237, 240, 241, 243, 244], "find": [0, 4, 6, 135, 137, 196, 200], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 235, 236, 237, 238, 239, 240, 241, 243, 244], "code": [0, 3, 5, 7, 8, 79, 144, 237, 238, 239, 241, 242, 243, 244], "github": [0, 2, 5, 6, 7, 10, 241, 243], "i": [0, 1, 2, 3, 6, 7, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 52, 62, 63, 64, 65, 66, 67, 69, 71, 74, 75, 76, 79, 80, 81, 84, 85, 86, 88, 89, 91, 92, 93, 95, 96, 97, 99, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 126, 127, 128, 129, 131, 132, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 179, 180, 182, 183, 184, 185, 193, 195, 196, 197, 198, 199, 200, 202, 205, 206, 208, 211, 216, 218, 221, 223, 227, 230, 233, 235, 236, 237, 239, 240, 241, 243, 244], "an": [0, 1, 2, 3, 5, 8, 9, 10, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 52, 65, 67, 70, 75, 76, 79, 80, 81, 82, 89, 91, 92, 93, 97, 99, 105, 106, 107, 108, 109, 115, 116, 117, 119, 123, 132, 133, 134, 138, 141, 142, 143, 146, 149, 150, 153, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 174, 175, 176, 185, 191, 197, 198, 202, 203, 206, 211, 224, 225, 226, 227, 230, 235, 236, 239, 241, 243, 244], "open": [0, 5, 7, 11, 243], "reinforc": [0, 2, 3, 9, 63, 106, 107, 108, 109, 138, 147, 154, 158, 162, 163, 167, 168, 169, 211, 229, 236, 238, 240, 242, 243], "learn": [0, 2, 3, 7, 8, 9, 24, 63, 106, 107, 108, 109, 118, 120, 138, 147, 154, 158, 162, 163, 166, 167, 168, 169, 211, 235, 236, 238, 239, 240, 242, 243, 244], "rl": [0, 1, 2, 3, 5, 8, 10, 12, 13, 15, 16, 46, 120, 131, 139, 145, 154, 165, 193, 230, 233, 235, 236, 237, 241, 244], "pytorch": [0, 1, 2, 91, 202, 230, 233, 235, 236, 237, 240, 241, 243, 244], "It": [0, 2, 3, 4, 7, 24, 28, 42, 45, 46, 47, 48, 49, 56, 76, 80, 93, 99, 106, 108, 112, 125, 126, 138, 142, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 173, 174, 198, 218, 230, 235, 240, 241, 243, 244], "provid": [0, 2, 3, 5, 8, 9, 12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 29, 34, 42, 45, 46, 47, 48, 49, 64, 65, 71, 75, 76, 79, 80, 85, 89, 93, 96, 97, 105, 115, 116, 117, 131, 135, 137, 139, 147, 163, 168, 173, 174, 175, 176, 185, 192, 193, 199, 206, 208, 216, 218, 221, 223, 230, 233, 235, 236, 237, 239, 240, 241, 243, 244], "python": [0, 3, 5, 6, 7, 10, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244], "first": [0, 1, 3, 4, 5, 7, 8, 11, 45, 64, 71, 76, 79, 80, 91, 93, 116, 119, 123, 141, 142, 160, 184, 201, 235, 236, 237, 239, 240, 241, 243, 244], "low": [0, 67, 236, 240, 243], "high": [0, 9, 67, 174, 177, 178, 181, 235, 236, 243], "level": [0, 4, 20, 164, 235, 236, 243], "abstract": [0, 8, 19, 20, 21, 22, 30, 31, 32, 41, 42, 77, 117, 203, 233, 237, 240, 243], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 12, 13, 15, 16, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 66, 67, 68, 70, 71, 79, 85, 89, 92, 93, 94, 96, 97, 104, 109, 110, 115, 117, 120, 124, 126, 138, 141, 142, 143, 144, 153, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 199, 223, 227, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244], "intend": [0, 7, 12, 13, 15, 16, 67, 243], "effici": [0, 2, 4, 8, 120, 235, 236, 237, 239, 241, 243], "modular": [0, 144, 243], "properli": [0, 237, 240, 243], "test": [0, 3, 5, 99, 115, 198, 223, 236, 237, 243], "aim": [0, 3, 7, 79, 96, 116, 205, 230, 235, 236, 243], "support": [0, 3, 20, 39, 47, 76, 92, 101, 136, 141, 144, 147, 158, 174, 175, 176, 188, 233, 237, 240, 243], "research": [0, 7, 9, 243], "most": [0, 3, 7, 8, 24, 67, 235, 236, 237, 240, 243], "written": [0, 3, 36, 42, 45, 47, 48, 49, 63, 85, 88, 90, 138, 141, 142, 154, 155, 164, 165, 173, 184, 185, 233, 235, 239, 240, 243], "highli": [0, 2, 243, 244], "wai": [0, 3, 4, 79, 81, 96, 165, 235, 236, 237, 239, 241, 243, 244], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 42, 43, 45, 47, 48, 49, 63, 66, 67, 75, 76, 79, 80, 85, 89, 92, 93, 96, 97, 104, 114, 117, 118, 120, 121, 128, 129, 135, 141, 142, 143, 144, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 198, 208, 216, 218, 221, 225, 226, 227, 230, 233, 235, 236, 237, 239, 240, 241, 243, 244], "easili": [0, 3, 7, 208, 216, 218, 221, 236, 237, 243, 244], "swap": [0, 3, 237, 241, 243], "compon": [0, 2, 3, 36, 37, 38, 39, 147, 148, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 197, 202, 235, 237, 239, 240, 241, 243], "transform": [0, 2, 4, 8, 12, 13, 15, 24, 26, 27, 28, 29, 43, 45, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 106, 112, 147, 148, 151, 153, 185, 199, 208, 211, 213, 216, 218, 221, 227, 229, 236, 238, 241, 242], "them": [0, 7, 26, 27, 28, 29, 42, 43, 45, 47, 48, 49, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151, 164, 185, 235, 236, 239, 240, 241, 243, 244], "write": [0, 3, 8, 24, 45, 78, 141, 142, 144, 156, 157, 163, 166, 168, 173, 185, 233, 235, 236, 237, 238, 239, 241, 242, 243], "new": [0, 3, 4, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 42, 45, 47, 48, 49, 85, 92, 97, 103, 138, 141, 142, 146, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 235, 236, 237, 240, 243, 244], "ones": [0, 20, 24, 42, 45, 47, 48, 49, 64, 66, 68, 76, 79, 89, 93, 96, 141, 235, 237, 240, 243, 244], "littl": [0, 3, 237, 243, 244], "effort": [0, 3, 240, 243], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 20, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 56, 63, 64, 66, 67, 70, 72, 74, 76, 79, 80, 81, 85, 86, 89, 90, 92, 93, 95, 96, 97, 99, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 146, 147, 148, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 175, 176, 184, 193, 195, 198, 199, 202, 204, 205, 206, 208, 216, 218, 221, 223, 227, 230, 233, 235, 236, 237, 239, 240, 241, 243, 244], "repo": [0, 6, 230, 243], "attempt": [0, 135, 137, 163, 243], "align": [0, 243], "exist": [0, 4, 24, 42, 45, 47, 48, 49, 64, 93, 206, 227, 243, 244], "ecosystem": [0, 243], "dataset": [0, 26, 27, 28, 97, 236, 241, 243, 244], "pillar": [0, 243], "environ": [0, 1, 2, 3, 5, 8, 11, 12, 13, 15, 16, 24, 25, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 67, 68, 72, 75, 76, 79, 80, 92, 93, 97, 99, 104, 115, 117, 118, 159, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 193, 195, 198, 205, 206, 208, 209, 210, 211, 213, 216, 218, 221, 223, 224, 225, 226, 227, 230, 238, 241, 242], "model": [0, 1, 3, 8, 9, 12, 13, 15, 16, 24, 42, 45, 46, 47, 48, 49, 79, 89, 96, 98, 105, 116, 117, 118, 132, 133, 134, 141, 146, 154, 159, 160, 161, 163, 165, 166, 168, 202, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 229, 230, 233, 237, 238, 240, 242, 244], "data": [0, 3, 8, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 76, 88, 99, 104, 115, 118, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 156, 166, 168, 174, 175, 176, 193, 199, 202, 204, 209, 223, 225, 226, 227, 229, 233, 240, 241, 244], "util": [0, 3, 12, 13, 15, 16, 17, 24, 42, 45, 47, 48, 49, 79, 96, 99, 100, 101, 102, 103, 105, 151, 152, 153, 223, 229, 234, 235, 236, 237, 240, 243, 244], "e": [0, 1, 3, 8, 10, 11, 12, 13, 15, 16, 20, 24, 25, 36, 37, 42, 43, 45, 47, 48, 49, 64, 66, 71, 76, 79, 85, 89, 92, 93, 96, 99, 114, 118, 121, 128, 129, 141, 142, 148, 173, 174, 175, 176, 193, 205, 226, 235, 236, 237, 240, 241, 243, 244], "g": [0, 1, 3, 8, 10, 11, 24, 25, 42, 43, 45, 47, 48, 49, 64, 66, 71, 76, 79, 85, 89, 92, 93, 96, 99, 114, 118, 128, 129, 141, 142, 173, 179, 180, 182, 183, 226, 235, 236, 237, 240, 241, 243, 244], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 88, 138, 199, 202, 204, 209, 210, 223, 225, 226, 229, 233, 244], "contain": [0, 3, 7, 12, 13, 15, 16, 20, 24, 26, 27, 28, 29, 30, 33, 39, 40, 41, 42, 45, 46, 47, 48, 49, 66, 68, 79, 89, 93, 96, 97, 103, 104, 105, 116, 118, 141, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 192, 193, 205, 208, 211, 213, 216, 218, 221, 223, 224, 225, 226, 227, 233, 235, 236, 237, 240, 241, 243, 244], "etc": [0, 3, 7, 8, 11, 24, 31, 32, 42, 45, 47, 48, 49, 93, 116, 235, 237, 243, 244], "have": [0, 3, 5, 6, 7, 8, 12, 13, 16, 20, 22, 24, 39, 42, 45, 47, 48, 49, 63, 75, 76, 89, 92, 93, 97, 99, 105, 115, 116, 143, 144, 155, 164, 165, 170, 193, 202, 233, 235, 236, 237, 239, 240, 241, 243, 244], "few": [0, 2, 8, 193, 236, 237, 243, 244], "depend": [0, 3, 4, 7, 8, 145, 165, 237, 240, 243, 244], "possibl": [0, 3, 4, 21, 24, 25, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141, 198, 202, 235, 237, 240, 243, 244], "standard": [0, 76, 84, 97, 104, 112, 118, 119, 120, 135, 174, 175, 176, 235, 236, 243], "numpi": [0, 11, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 91, 202, 235, 236, 240, 243, 244], "common": [0, 3, 4, 45, 48, 49, 132, 133, 134, 149, 150, 223, 230, 233, 235, 237, 239, 241, 243, 244], "openai": [0, 7, 54, 55, 237, 240, 243, 244], "gym": [0, 3, 4, 8, 11, 12, 13, 15, 43, 45, 54, 55, 74, 76, 81, 89, 97, 208, 211, 213, 216, 218, 221, 223, 230, 235, 236, 237, 240, 241, 243], "onli": [0, 1, 3, 4, 7, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 42, 45, 47, 48, 49, 64, 66, 67, 71, 76, 79, 80, 89, 93, 96, 97, 115, 141, 142, 143, 144, 206, 233, 235, 236, 237, 239, 240, 243, 244], "option": [0, 4, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 42, 43, 45, 46, 47, 48, 49, 52, 63, 64, 65, 67, 68, 71, 72, 74, 75, 76, 79, 80, 81, 84, 88, 89, 90, 91, 93, 94, 96, 97, 99, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 135, 137, 138, 142, 143, 144, 147, 148, 156, 157, 159, 160, 161, 163, 166, 168, 173, 174, 175, 176, 179, 180, 182, 183, 185, 193, 195, 196, 197, 198, 199, 200, 202, 206, 208, 211, 216, 218, 221, 223, 225, 226, 227, 240, 243], "On": [0, 3, 7, 236], "end": [0, 24, 26, 27, 28, 29, 42, 45, 47, 48, 49, 93, 105, 117, 177, 178, 179, 180, 181, 182, 183, 235, 236, 237, 239, 240, 241, 243, 244], "come": [0, 1, 3, 8, 48, 49, 131, 132, 133, 134, 139, 145, 235, 236, 237, 243, 244], "set": [0, 1, 2, 3, 7, 9, 12, 13, 15, 16, 24, 25, 26, 27, 28, 29, 39, 42, 44, 45, 46, 47, 48, 49, 64, 66, 74, 79, 88, 89, 93, 96, 99, 102, 117, 135, 141, 193, 198, 199, 210, 227, 230, 234, 235, 236, 237, 239, 240, 241, 243, 244], "re": [0, 3, 8, 24, 42, 45, 47, 48, 49, 142, 233, 236, 237, 239, 240, 243, 244], "usabl": [0, 233, 243], "function": [0, 3, 8, 11, 17, 24, 36, 37, 38, 39, 42, 43, 45, 47, 48, 49, 68, 93, 97, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 121, 122, 123, 124, 125, 126, 129, 132, 133, 134, 135, 137, 138, 141, 142, 144, 145, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 208, 211, 213, 216, 218, 221, 223, 229, 235, 239, 240, 244], "cost": [0, 2, 21, 236, 240], "return": [0, 3, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 43, 45, 46, 47, 48, 49, 52, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 76, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 103, 104, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 136, 140, 141, 142, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 179, 180, 182, 183, 202, 205, 208, 209, 211, 213, 216, 218, 221, 223, 224, 225, 226, 227, 229, 233, 235, 236, 237, 239, 240, 241, 243, 244], "process": [0, 1, 2, 3, 4, 5, 8, 12, 13, 15, 16, 24, 42, 43, 45, 47, 48, 49, 97, 138, 233, 235, 236, 240, 241, 243, 244], "good": [0, 1, 4, 9, 235, 237, 243, 244], "runtim": [0, 3, 24, 42, 45, 47, 48, 49, 240], "perform": [0, 3, 4, 8, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 75, 93, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 117, 118, 121, 122, 123, 125, 126, 135, 137, 138, 151, 160, 165, 198, 202, 235, 236, 237, 239, 240, 244], "ppo": [0, 4, 8, 142, 155, 164, 165, 208, 215, 216, 229, 235, 236, 238, 242], "pendulum": [0, 3, 12, 13, 15, 16, 43, 47, 54, 55, 66, 74, 76, 81, 89, 93, 97, 223, 236, 237, 238, 242, 243, 244], "your": [0, 2, 3, 7, 8, 10, 24, 42, 45, 47, 48, 49, 97, 227, 230, 236, 237, 238, 242, 243], "introduct": [0, 238, 242, 244], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 15, 16, 20, 21, 24, 26, 27, 28, 29, 33, 34, 42, 43, 45, 46, 47, 48, 49, 52, 64, 65, 67, 74, 76, 79, 80, 81, 89, 91, 92, 93, 96, 97, 99, 102, 103, 104, 105, 106, 107, 112, 114, 116, 117, 118, 120, 121, 128, 129, 138, 141, 142, 146, 147, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 181, 191, 192, 198, 199, 200, 202, 204, 206, 209, 210, 211, 219, 223, 227, 230, 233, 234, 237, 238, 239, 240, 242, 244], "pretrain": [0, 238, 242], "task": [0, 9, 48, 49, 52, 79, 96, 163, 235, 236, 237, 238, 240, 242, 243, 244], "specif": [0, 5, 8, 28, 29, 45, 202, 229, 233, 235, 237, 238, 242], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 42, 45, 46, 47, 48, 49, 67, 102, 120, 132, 133, 134, 135, 137, 138, 141, 142, 147, 148, 154, 155, 156, 164, 165, 166, 168, 198, 204, 208, 209, 210, 211, 213, 216, 223, 225, 226, 233, 236, 238, 241, 242, 243, 244], "multi": [0, 3, 7, 9, 24, 42, 45, 47, 48, 49, 115, 116, 235, 236, 238, 240, 242, 243], "ddpg": [0, 106, 107, 108, 109, 156, 162, 169, 211, 212, 229, 236, 238, 242, 243], "pixel": [0, 3, 7, 20, 63, 65, 71, 73, 76, 79, 82, 91, 96, 106, 122, 123, 185, 208, 213, 216, 218, 221, 235, 238, 241, 242, 243, 244], "dqn": [0, 136, 140, 147, 157, 158, 162, 169, 213, 214, 229, 238, 242], "api": [0, 3, 5, 79, 96, 233, 240, 243, 244], "packag": [0, 6, 7, 10, 229, 230, 236, 243, 244], "helper": [0, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 235, 240], "replai": [0, 8, 12, 13, 15, 26, 27, 28, 29, 33, 34, 35, 39, 40, 67, 80, 89, 156, 157, 163, 166, 168, 199, 202, 219, 223, 229, 233, 240, 241], "buffer": [0, 3, 4, 8, 12, 13, 15, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 66, 67, 79, 80, 89, 93, 96, 141, 144, 156, 157, 163, 166, 168, 199, 202, 219, 223, 229, 233, 240, 241, 244], "compos": [0, 3, 24, 26, 27, 28, 34, 35, 40, 42, 45, 47, 48, 49, 92, 93, 97, 160, 208, 211, 213, 216, 218, 221, 229, 235, 236, 237, 239, 243, 244], "tensorspec": [0, 3, 14, 18, 19, 20, 21, 22, 23, 25, 31, 32, 42, 46, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 76, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 126, 131, 135, 137, 138, 139, 141, 142, 143, 229, 240], "env": [0, 1, 2, 5, 6, 7, 8, 12, 13, 15, 24, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 117, 118, 141, 184, 206, 208, 209, 210, 211, 213, 216, 218, 221, 223, 225, 226, 227, 229, 235, 236, 237, 238, 239, 241, 242], "envbas": [0, 3, 12, 13, 15, 16, 43, 45, 47, 48, 49, 75, 81, 92, 93, 97, 99, 104, 117, 118, 198, 206, 208, 209, 210, 211, 213, 216, 218, 221, 223, 225, 226, 227, 229], "gymlikeenv": [0, 229], "envmetadata": [0, 229], "vector": [0, 8, 18, 25, 67, 106, 108, 116, 176, 182, 183, 229, 235, 236, 239, 240, 241, 244], "record": [0, 24, 42, 45, 47, 48, 49, 165, 184, 185, 186, 187, 188, 189, 190, 191, 192, 223, 229, 237], "domain": [0, 2, 8, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 67, 89, 141, 142, 143, 144, 229, 235, 237, 240, 243, 244], "modul": [0, 3, 4, 8, 11, 24, 42, 45, 46, 47, 48, 49, 66, 67, 79, 80, 89, 93, 96, 97, 98, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 162, 166, 167, 169, 171, 174, 175, 176, 202, 207, 212, 214, 215, 217, 220, 223, 229, 233, 235, 237, 239, 240, 241], "hook": [0, 24, 42, 45, 47, 48, 49, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 136, 137, 138, 140, 147, 148, 151, 195, 196, 198, 199, 200, 202, 203, 204, 229, 235], "explor": [0, 1, 98, 120, 135, 137, 138, 141, 142, 154, 198, 209, 210, 223, 229, 235, 237, 240], "planner": [0, 104, 118, 229], "distribut": [0, 2, 3, 4, 9, 10, 76, 104, 110, 111, 112, 114, 118, 121, 124, 125, 126, 127, 128, 129, 135, 136, 142, 143, 147, 155, 158, 164, 165, 229, 233, 235, 236, 237, 240, 243, 244], "object": [0, 3, 4, 6, 12, 13, 15, 16, 20, 24, 36, 37, 38, 39, 42, 45, 47, 48, 49, 68, 76, 79, 92, 93, 97, 118, 131, 132, 139, 141, 142, 143, 149, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 206, 209, 210, 222, 223, 227, 229, 233, 236, 237, 240, 244], "sac": [0, 163, 166, 168, 220, 221, 229], "redq": [0, 166, 217, 218, 229], "iql": [0, 163, 229], "a2c": [0, 154, 207, 229], "dreamer": [0, 61, 112, 159, 160, 161, 229], "trainer": [0, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 235], "checkpoint": [0, 229, 241], "builder": [0, 229, 236, 244], "logger": [0, 185, 186, 188, 189, 190, 191, 192, 196, 198, 202, 223, 227, 229], "_util": [0, 11, 229], "implement_for": [0, 229], "index": [0, 3, 7, 8, 10, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 41, 67, 103, 235, 239, 243], "search": [0, 236], "page": [0, 7], "somewhat": [1, 244], "equival": [1, 16, 21, 22, 23, 24, 25, 42, 45, 47, 48, 49, 93, 199, 235, 243, 244], "dataload": [1, 236, 237], "except": [1, 3, 12, 13, 15, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 42, 70, 124, 150, 235, 236, 243, 244], "1": [1, 2, 3, 4, 8, 10, 11, 12, 13, 15, 16, 21, 22, 23, 24, 25, 31, 32, 42, 43, 45, 46, 47, 48, 49, 51, 58, 59, 60, 62, 64, 66, 67, 68, 72, 75, 76, 79, 80, 81, 89, 90, 91, 93, 96, 97, 103, 104, 105, 106, 107, 109, 113, 114, 116, 118, 119, 120, 121, 125, 126, 127, 128, 129, 132, 133, 134, 135, 137, 138, 139, 140, 141, 144, 145, 147, 151, 154, 155, 160, 163, 164, 165, 166, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 193, 198, 199, 200, 208, 211, 213, 216, 218, 221, 223, 227, 230, 233, 235, 236, 237, 239, 240, 241, 243, 244], "thei": [1, 3, 4, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 68, 70, 79, 92, 93, 96, 115, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 199, 202, 233, 236, 237, 239, 240, 241, 243, 244], "collect": [1, 3, 4, 8, 12, 13, 15, 16, 24, 26, 27, 28, 29, 76, 79, 96, 99, 138, 156, 166, 168, 193, 199, 202, 204, 205, 206, 223, 233, 240, 241, 243, 244], "over": [1, 2, 3, 4, 8, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 67, 76, 90, 103, 144, 158, 160, 205, 233, 235, 237, 240, 244], "non": [1, 8, 24, 27, 42, 45, 47, 48, 49, 62, 66, 71, 79, 89, 93, 94, 96, 103, 141, 142, 160, 174, 175, 176, 235, 240, 244], "static": [1, 97, 163, 240], "2": [1, 3, 8, 10, 11, 12, 13, 15, 22, 23, 24, 42, 43, 45, 47, 48, 49, 59, 60, 64, 66, 67, 76, 79, 89, 93, 96, 97, 105, 106, 107, 108, 113, 115, 116, 121, 136, 137, 138, 141, 145, 147, 155, 156, 163, 164, 166, 168, 173, 174, 175, 176, 179, 180, 182, 183, 185, 193, 235, 236, 237, 239, 240, 241, 243, 244], "like": [1, 4, 7, 24, 42, 45, 47, 48, 49, 56, 91, 99, 166, 235, 237, 240, 241, 244], "version": [1, 6, 11, 24, 42, 45, 47, 48, 49, 163, 168, 176, 230, 235, 236, 237, 240, 241, 244], "being": [1, 3, 8, 16, 24, 42, 45, 47, 48, 49, 67, 68, 81, 93, 102, 138, 155, 164, 165, 185, 199, 204, 225, 226, 227, 235, 236, 237, 240], "train": [1, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 72, 79, 93, 96, 99, 106, 108, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 174, 202, 204, 223, 233, 241, 244], "": [1, 3, 6, 7, 8, 24, 26, 27, 28, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 97, 99, 105, 120, 135, 141, 142, 163, 168, 174, 175, 176, 218, 221, 235, 236, 237, 239, 240, 241, 243, 244], "accept": [1, 12, 13, 15, 16, 24, 42, 45, 46, 47, 48, 49, 66, 71, 79, 85, 89, 93, 94, 96, 141, 142, 143, 233, 235, 237, 244], "two": [1, 4, 8, 10, 24, 42, 45, 47, 48, 49, 76, 79, 96, 109, 142, 163, 164, 168, 170, 198, 202, 208, 216, 218, 221, 235, 236, 237, 239, 240, 243, 244], "main": [1, 2, 5, 43, 142, 202, 235, 239, 244], "argument": [1, 3, 12, 13, 15, 16, 20, 24, 42, 45, 47, 48, 49, 66, 79, 89, 92, 93, 96, 103, 105, 116, 119, 141, 142, 143, 145, 184, 195, 205, 208, 211, 213, 216, 218, 221, 223, 224, 227, 235, 236, 237, 240, 244], "list": [1, 6, 7, 8, 9, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 38, 39, 42, 45, 46, 47, 48, 49, 63, 68, 76, 79, 81, 85, 93, 96, 116, 144, 145, 172, 174, 176, 184, 198, 199, 225, 226, 235, 236, 237, 239, 240, 241, 243, 244], "constructor": [1, 15, 92, 174, 175, 176, 208, 211, 213, 216, 218, 221, 224, 227, 235, 236, 237], "iter": [1, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 45, 47, 48, 49, 69, 76, 86, 97, 105, 116, 141, 142, 143, 144, 149, 172, 198, 201, 202, 208, 216, 218, 221, 233, 235, 237, 240], "execut": [1, 3, 6, 7, 8, 12, 13, 15, 24, 26, 27, 28, 29, 42, 43, 45, 46, 47, 48, 49, 89, 143, 144, 206, 227, 233, 236, 237, 242, 244], "step": [1, 3, 4, 8, 12, 13, 15, 16, 24, 42, 43, 45, 46, 47, 48, 49, 51, 58, 71, 74, 75, 76, 88, 90, 93, 103, 104, 112, 115, 117, 118, 135, 137, 138, 142, 154, 159, 165, 173, 184, 193, 198, 202, 233, 235, 236, 239, 240, 241, 243], "queri": [1, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 79, 92, 97, 144, 240, 243], "defin": [1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 80, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151, 174, 175, 176, 184, 224, 236, 240, 244], "number": [1, 3, 8, 12, 13, 15, 16, 19, 21, 24, 25, 26, 27, 28, 33, 36, 37, 38, 42, 45, 46, 47, 48, 49, 63, 67, 72, 75, 76, 84, 88, 90, 97, 104, 105, 110, 111, 112, 113, 114, 116, 118, 121, 122, 123, 125, 126, 127, 128, 129, 135, 137, 138, 141, 142, 153, 159, 163, 166, 168, 193, 195, 198, 202, 204, 205, 206, 225, 226, 227, 235, 236, 237, 240, 241, 244], "befor": [1, 3, 4, 6, 7, 10, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 76, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 94, 116, 119, 120, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 175, 176, 199, 235, 237, 240, 244], "deliv": [1, 243], "stack": [1, 7, 8, 48, 49, 97, 143, 144, 184, 193, 236, 239, 240, 243], "user": [1, 2, 5, 8, 24, 42, 45, 47, 48, 49, 93, 115, 224, 233, 236, 240, 243, 244], "reset": [1, 3, 8, 12, 13, 15, 16, 24, 42, 43, 45, 46, 47, 48, 49, 51, 58, 63, 66, 69, 71, 74, 75, 79, 85, 86, 88, 89, 90, 92, 95, 97, 99, 130, 138, 184, 208, 211, 213, 216, 218, 221, 235, 236, 237, 239, 243], "whenev": [1, 3, 24, 74, 204], "reach": [1, 3, 12, 13, 15, 16, 42, 45, 47, 48, 49, 135, 137, 138, 237, 243, 244], "done": [1, 3, 4, 7, 8, 12, 13, 15, 20, 24, 42, 43, 45, 46, 47, 48, 49, 51, 58, 59, 60, 76, 81, 84, 86, 88, 89, 92, 93, 97, 103, 104, 118, 156, 157, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 208, 211, 213, 216, 218, 221, 235, 236, 237, 239, 240, 241, 243, 244], "state": [1, 3, 4, 12, 13, 15, 16, 24, 42, 45, 46, 47, 48, 49, 51, 58, 63, 64, 66, 69, 74, 76, 81, 86, 88, 92, 93, 95, 97, 103, 104, 112, 115, 116, 118, 122, 125, 126, 132, 141, 146, 166, 173, 174, 175, 176, 227, 235, 236, 237, 240, 244], "after": [1, 8, 12, 13, 20, 24, 42, 45, 47, 48, 49, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 103, 119, 135, 137, 160, 235, 236, 237, 240, 241, 244], "predifin": 1, "becaus": [1, 3, 4, 7, 92, 109, 115, 141, 142, 235, 236, 239, 240, 244], "potenti": [1, 240], "comput": [1, 3, 4, 8, 12, 15, 21, 24, 42, 45, 47, 48, 49, 76, 93, 95, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 132, 135, 137, 138, 142, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 206, 235, 237, 239, 241], "heavi": [1, 8], "crucial": [1, 163, 235, 236, 237, 240, 244], "configur": [1, 8, 12, 13, 15, 16, 165, 208, 216, 218, 221, 236, 237, 240], "hyperparamet": [1, 163, 240], "appropri": [1, 3, 4, 7, 12, 13, 15, 16, 40, 41, 89, 224, 227, 235, 236], "paramet": [1, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 52, 53, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 137, 138, 141, 142, 143, 144, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 213, 216, 218, 221, 223, 224, 225, 226, 227, 235, 240, 241, 243], "consider": [1, 3, 8, 235, 236], "whether": [1, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 45, 46, 47, 48, 49, 93, 105, 116, 145, 156, 157, 158, 166, 168, 176, 235, 236, 237, 240, 244], "should": [1, 3, 4, 5, 7, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 39, 42, 45, 46, 47, 48, 49, 63, 71, 76, 80, 81, 85, 86, 88, 92, 93, 97, 99, 103, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 141, 142, 151, 162, 164, 165, 166, 169, 173, 174, 175, 176, 185, 197, 198, 199, 202, 223, 225, 226, 227, 233, 235, 236, 237, 239, 240, 241, 243, 244], "occur": [1, 8, 13, 64, 76, 80, 141, 142, 160, 244], "serial": [1, 3, 24, 42, 45, 47, 48, 49, 97], "optim": [1, 8, 24, 42, 45, 47, 48, 49, 104, 118, 119, 120, 165, 168, 197, 202, 208, 216, 223, 233, 237, 240], "parallel": [1, 3, 8, 16, 99, 154, 224, 225, 226, 227, 236, 237], "syncdatacollector": [1, 12, 13, 16, 223, 226, 229, 237], "worker": [1, 12, 13, 15, 16, 43, 47, 48, 49, 97, 225, 226, 227, 235, 237, 243, 244], "multisyncdatacollector": [1, 226, 229, 237, 243], "split": [1, 3, 12, 13, 15, 16, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 233, 237, 243], "workload": 1, "across": [1, 8, 97, 138, 204, 235, 240], "aggreg": [1, 105, 106, 107, 144], "result": [1, 3, 7, 12, 13, 15, 16, 24, 26, 27, 28, 29, 42, 43, 45, 47, 48, 49, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 76, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 97, 99, 103, 116, 148, 174, 177, 178, 179, 180, 181, 182, 183, 184, 204, 236, 240, 241, 243, 244], "final": [1, 3, 4, 135, 137, 138, 143, 174, 198, 235, 236, 237, 240, 244], "multiasyncdatacollector": [1, 16, 225, 229, 235, 236, 237, 243], "sever": [1, 8, 22, 24, 42, 45, 47, 48, 49, 64, 93, 165, 237, 244], "batch": [1, 3, 12, 13, 15, 16, 17, 21, 24, 25, 26, 27, 28, 29, 34, 42, 45, 46, 47, 48, 49, 71, 76, 80, 89, 93, 94, 110, 111, 115, 119, 124, 127, 138, 141, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 193, 196, 199, 200, 201, 202, 204, 225, 226, 227, 233, 235, 236, 237, 239, 241, 243, 244], "gather": [1, 3, 80, 173, 206, 230, 235, 236, 237, 240, 244], "continu": [1, 9, 19, 31, 106, 107, 108, 109, 138, 142, 144, 169, 174, 177, 178, 181, 211, 235, 237, 240, 243, 244], "concomittantli": 1, "network": [1, 4, 8, 24, 42, 45, 47, 48, 49, 105, 106, 107, 108, 109, 111, 112, 113, 116, 120, 122, 123, 125, 126, 132, 133, 134, 141, 156, 157, 158, 162, 163, 166, 168, 169, 171, 174, 175, 176, 208, 211, 216, 222, 223, 233, 239, 240, 244], "impli": [1, 244], "weight": [1, 4, 9, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 120, 141, 154, 155, 160, 204, 222, 233, 235, 236, 237, 239, 240, 243], "mai": [1, 2, 3, 4, 5, 7, 8, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 76, 86, 93, 94, 97, 99, 116, 233, 235, 236, 237, 240, 241, 243, 244], "slightli": [1, 235, 240, 241, 244], "lag": [1, 12, 13, 15, 16, 236, 237], "therefor": [1, 3, 7, 165, 244], "although": [1, 8, 42, 45, 47, 48, 49, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151, 233, 235, 236], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 4, 7, 8, 12, 13, 15, 16, 26, 27, 28, 29, 36, 37, 42, 45, 46, 47, 48, 49, 63, 79, 85, 88, 90, 92, 94, 96, 135, 137, 141, 142, 153, 154, 155, 156, 158, 162, 163, 164, 165, 166, 168, 169, 173, 174, 175, 176, 184, 185, 196, 199, 200, 202, 204, 233, 235, 236, 237, 239, 240, 244], "asynchron": [1, 9, 13, 24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141, 154, 225, 236, 237], "off": [1, 2, 4, 114, 128, 129, 168, 198, 209, 233, 236, 237, 241, 244], "curriculum": [1, 4], "For": [1, 3, 4, 7, 8, 9, 10, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 71, 76, 119, 147, 154, 158, 163, 165, 198, 211, 233, 235, 236, 237, 240, 241, 244], "remot": [1, 48, 49, 244], "rollout": [1, 3, 13, 15, 42, 45, 46, 47, 48, 49, 59, 60, 81, 99, 104, 118, 138, 154, 206, 235, 236, 237, 241, 243], "necessari": [1, 4, 6, 8, 12, 13, 15, 16, 86, 166, 174, 175, 176, 235, 236, 237], "synchronis": [1, 43], "from": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 64, 67, 69, 74, 76, 79, 80, 81, 86, 88, 89, 91, 92, 93, 94, 96, 97, 103, 104, 106, 107, 108, 109, 114, 116, 117, 118, 119, 121, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 155, 156, 157, 164, 165, 166, 168, 173, 174, 175, 176, 184, 185, 193, 199, 202, 205, 206, 208, 211, 213, 216, 218, 219, 221, 223, 224, 227, 230, 233, 235, 236, 237, 239, 240, 241, 243, 244], "either": [1, 5, 24, 42, 45, 47, 48, 49, 146, 192, 211, 233, 235, 236, 241, 243, 244], "update_policy_weights_": [1, 12, 13, 15, 16, 235, 236, 243], "update_at_each_batch": [1, 12, 13, 16, 235], "true": [1, 3, 4, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 64, 66, 67, 71, 74, 75, 76, 79, 80, 81, 84, 88, 89, 91, 93, 94, 96, 97, 99, 103, 104, 105, 106, 107, 108, 109, 113, 114, 116, 118, 119, 120, 128, 129, 132, 133, 134, 135, 138, 141, 142, 143, 144, 150, 154, 155, 159, 160, 161, 164, 165, 166, 168, 170, 174, 175, 176, 179, 180, 182, 183, 184, 185, 195, 196, 198, 199, 202, 213, 227, 233, 235, 236, 237, 239, 240, 241, 243, 244], "second": [1, 8, 163, 168, 201, 235, 236, 237, 239, 240, 241, 243, 244], "consid": [1, 8, 24, 42, 45, 47, 48, 49, 67, 110, 127, 230, 235, 240], "devic": [1, 2, 3, 7, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 36, 37, 42, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 66, 78, 79, 81, 89, 91, 93, 96, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 118, 119, 120, 132, 133, 134, 136, 138, 139, 140, 141, 144, 145, 147, 148, 156, 199, 204, 208, 211, 213, 216, 218, 219, 221, 235, 236, 237, 239, 240, 241, 243], "oper": [1, 3, 4, 7, 8, 12, 13, 16, 24, 42, 45, 47, 48, 49, 71, 92, 121, 132, 133, 134, 141, 146, 147, 154, 155, 156, 157, 158, 164, 165, 173, 174, 175, 176, 202, 211, 213, 218, 221, 233, 235, 236, 237, 239, 240, 244], "instanc": [1, 3, 4, 7, 8, 12, 13, 15, 16, 24, 30, 42, 43, 45, 46, 47, 48, 49, 53, 63, 76, 89, 92, 97, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 117, 121, 122, 123, 125, 126, 135, 137, 138, 142, 143, 144, 151, 185, 192, 198, 206, 208, 209, 210, 211, 213, 216, 218, 221, 223, 225, 226, 233, 235, 237, 240, 244], "cpu": [1, 3, 8, 10, 12, 13, 15, 18, 24, 30, 36, 37, 42, 45, 46, 47, 48, 49, 51, 58, 59, 60, 66, 79, 81, 89, 93, 96, 103, 104, 118, 120, 139, 141, 144, 199, 208, 211, 213, 216, 218, 221, 235, 236, 237, 239, 240, 241, 243, 244], "slower": 1, "than": [1, 4, 8, 12, 13, 15, 16, 81, 109, 116, 121, 135, 137, 141, 199, 204, 230, 235, 236, 237, 240, 243, 244], "one": [1, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 21, 22, 23, 25, 26, 27, 28, 29, 33, 39, 40, 41, 42, 43, 45, 47, 48, 49, 67, 75, 76, 79, 87, 93, 94, 96, 97, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 124, 125, 126, 135, 136, 137, 138, 140, 141, 142, 147, 148, 151, 153, 154, 155, 156, 157, 164, 165, 166, 195, 197, 198, 202, 206, 208, 216, 218, 221, 227, 230, 233, 235, 236, 237, 239, 240, 241, 244], "cuda": [1, 3, 7, 24, 42, 45, 47, 48, 49, 66, 78, 79, 89, 93, 96, 141, 194, 235, 236, 237, 241, 244], "when": [1, 2, 3, 5, 8, 12, 13, 15, 16, 24, 26, 27, 28, 29, 34, 36, 37, 38, 39, 42, 43, 45, 47, 48, 49, 66, 67, 75, 76, 79, 80, 85, 89, 92, 93, 96, 97, 102, 104, 116, 117, 118, 119, 128, 141, 142, 144, 151, 155, 164, 165, 173, 184, 185, 199, 227, 230, 233, 235, 236, 237, 240, 241, 244], "multipl": [1, 3, 5, 8, 12, 13, 15, 16, 21, 48, 49, 64, 67, 85, 92, 97, 115, 119, 120, 141, 142, 166, 218, 227, 233, 235, 236, 237, 240, 243], "infer": [1, 48, 49, 97, 119, 163, 168, 235, 237], "run": [1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 16, 24, 42, 45, 46, 47, 48, 49, 52, 53, 75, 76, 93, 97, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 143, 144, 151, 198, 225, 226, 227, 230, 233, 235, 236, 237, 239, 240, 241, 243], "dispatch": 1, "avail": [1, 4, 6, 142, 147, 148, 225, 226, 235, 236, 237, 244], "speed": [1, 2, 4, 8, 21, 235, 236, 237, 240], "up": [1, 2, 3, 8, 9, 21, 230, 235, 236, 237, 240, 244], "avoid": [1, 24, 42, 45, 47, 48, 49, 93, 97, 141, 205, 237], "oom": 1, "error": [1, 3, 7, 10, 11, 24, 42, 45, 47, 48, 49, 80, 99, 150, 230, 235, 236, 237, 244], "choic": [1, 2, 121], "size": [1, 2, 3, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 42, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 64, 71, 79, 81, 87, 89, 91, 93, 94, 96, 103, 104, 105, 110, 115, 116, 118, 121, 124, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 173, 174, 175, 176, 185, 193, 199, 208, 211, 213, 216, 218, 221, 235, 236, 237, 239, 240, 241, 243, 244], "pass": [1, 3, 4, 12, 13, 15, 20, 24, 28, 42, 43, 44, 45, 47, 48, 49, 68, 81, 92, 94, 97, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 119, 121, 122, 123, 125, 126, 135, 137, 138, 141, 142, 144, 150, 151, 174, 175, 176, 199, 225, 226, 227, 235, 236, 237, 239, 240, 244], "ie": [1, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 71, 94, 236, 237], "store": [1, 2, 3, 8, 12, 13, 15, 16, 20, 24, 28, 29, 33, 36, 37, 38, 42, 45, 47, 48, 49, 97, 104, 115, 118, 208, 211, 213, 216, 218, 221, 233, 235, 237, 241, 244], "while": [1, 3, 7, 8, 24, 42, 45, 47, 48, 49, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151, 163, 164, 165, 235, 237, 240, 241, 243], "wait": [1, 240], "also": [1, 2, 3, 8, 11, 24, 28, 42, 45, 47, 48, 49, 67, 76, 81, 85, 86, 89, 93, 126, 143, 144, 154, 156, 157, 174, 233, 235, 236, 237, 239, 240, 244], "impact": [1, 236], "memori": [1, 3, 8, 21, 24, 36, 42, 43, 45, 47, 48, 49, 66, 79, 89, 93, 96, 97, 141, 227, 233, 235, 236, 237, 239, 240, 241, 243, 244], "manag": [1, 8, 171, 172, 198, 235], "kei": [1, 3, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 42, 45, 47, 48, 49, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 78, 79, 80, 81, 85, 86, 88, 89, 90, 92, 93, 95, 96, 97, 103, 104, 117, 118, 135, 137, 138, 141, 142, 143, 144, 145, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 185, 196, 197, 198, 200, 201, 202, 206, 208, 216, 218, 221, 233, 235, 236, 237, 239, 240, 243, 244], "control": [1, 3, 5, 8, 52, 53, 67, 103, 106, 107, 108, 109, 117, 118, 126, 138, 141, 142, 143, 155, 164, 165, 169, 174, 177, 178, 181, 211, 233, 235, 236, 237, 240], "which": [1, 3, 4, 7, 8, 11, 12, 13, 15, 16, 20, 21, 24, 25, 29, 42, 45, 47, 48, 49, 63, 64, 72, 75, 76, 79, 80, 88, 89, 90, 92, 93, 99, 114, 128, 129, 132, 133, 134, 141, 142, 144, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 174, 193, 197, 208, 211, 213, 216, 218, 221, 233, 235, 236, 237, 239, 240, 241, 244], "storing_devic": [1, 12, 13, 15, 16, 235, 236, 243], "dure": [1, 12, 13, 15, 16, 42, 45, 47, 48, 49, 72, 93, 198, 202, 235, 236, 237, 240, 244], "A": [1, 3, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 56, 67, 72, 79, 80, 81, 89, 92, 93, 95, 97, 98, 99, 103, 104, 105, 116, 118, 120, 121, 135, 137, 142, 143, 144, 147, 151, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 186, 187, 188, 195, 202, 204, 208, 213, 216, 218, 221, 223, 236, 237, 240, 244], "heurist": [1, 4, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 138, 235, 244], "usual": [1, 3, 4, 6, 7, 8, 42, 45, 47, 48, 49, 120, 184, 208, 216, 218, 221, 230, 233, 235, 237, 244], "same": [1, 3, 4, 11, 12, 13, 15, 24, 42, 43, 45, 47, 48, 49, 67, 72, 75, 76, 92, 93, 97, 105, 116, 138, 235, 236, 237, 239, 240, 241, 244], "storag": [1, 2, 8, 24, 26, 27, 28, 29, 36, 37, 38, 42, 44, 45, 47, 48, 49, 68, 229, 233, 235, 236, 237, 241], "default": [1, 3, 10, 12, 13, 15, 16, 18, 20, 21, 24, 25, 26, 27, 28, 33, 36, 37, 42, 45, 47, 48, 49, 52, 63, 64, 67, 71, 75, 76, 79, 80, 84, 88, 89, 90, 91, 93, 94, 96, 97, 99, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 135, 137, 138, 139, 141, 142, 145, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 173, 174, 175, 176, 179, 180, 182, 183, 184, 185, 193, 195, 196, 198, 199, 200, 202, 208, 211, 216, 218, 221, 223, 227, 233, 235, 236, 237, 241, 243, 244], "behaviour": [1, 3, 45, 64, 76, 80, 103, 114, 128, 129, 198, 236, 240], "besid": 1, "those": [1, 5, 7, 20, 48, 49, 76, 89, 142, 143, 144, 204, 225, 226, 235, 236, 240, 244], "choos": [1, 235, 236, 237], "follow": [1, 2, 3, 6, 7, 8, 24, 42, 45, 46, 47, 48, 49, 79, 105, 116, 153, 155, 164, 167, 202, 218, 221, 233, 235, 236, 237, 239, 240, 243, 244], "max_frames_per_traj": [1, 12, 13, 15, 16, 205, 235, 237, 243], "frame": [1, 2, 12, 13, 15, 16, 24, 45, 63, 72, 135, 137, 138, 184, 185, 195, 198, 202, 205, 206, 235, 236, 237, 243, 244], "call": [1, 3, 7, 8, 11, 12, 13, 15, 16, 24, 26, 27, 28, 29, 34, 36, 37, 38, 39, 42, 45, 47, 48, 49, 63, 66, 67, 68, 71, 74, 76, 78, 79, 85, 88, 89, 93, 96, 97, 99, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 121, 122, 123, 125, 126, 135, 137, 138, 141, 142, 144, 151, 173, 184, 198, 233, 235, 236, 237, 240, 243, 244], "frames_per_batch": [1, 12, 13, 15, 16, 205, 235, 236, 237, 243], "each": [1, 3, 4, 7, 8, 12, 13, 15, 16, 17, 22, 23, 24, 28, 42, 43, 45, 47, 48, 49, 79, 85, 88, 89, 90, 96, 97, 135, 144, 147, 148, 179, 180, 182, 183, 198, 199, 225, 226, 235, 236, 237, 240, 241, 243, 244], "init_random_fram": [1, 12, 13, 15, 16, 205, 235, 236], "random": [1, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 34, 42, 45, 46, 47, 48, 49, 67, 75, 76, 89, 99, 141, 142, 166, 198, 206, 235, 236, 237, 240, 241, 243, 244], "rand_step": [1, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 74, 97, 240, 243, 244], "reset_at_each_it": [1, 12, 13, 15, 16, 235], "split_traj": [1, 12, 13, 15, 16, 235, 236, 237], "trajectori": [1, 3, 12, 13, 15, 16, 17, 24, 28, 33, 42, 45, 47, 48, 49, 80, 92, 104, 118, 138, 165, 174, 176, 177, 178, 179, 180, 181, 182, 183, 193, 229, 236, 237, 240, 243, 244], "pad": [1, 17, 105, 106, 107, 115, 199, 235], "along": [1, 63, 64, 76, 80, 85, 91, 116, 120, 141, 142, 236, 240], "mask": [1, 4, 12, 13, 15, 80, 199, 235, 236, 244], "point": [1, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 40, 41, 42, 45, 47, 48, 49, 63, 66, 79, 89, 91, 93, 96, 117, 141, 153, 158, 202, 230, 236, 237, 239, 240, 244], "boolean": [1, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 45, 80, 135, 177, 178, 179, 180, 181, 182, 183, 233], "repres": [1, 3, 12, 13, 15, 16, 20, 28, 42, 45, 47, 48, 49, 72, 80, 142, 147, 148, 170, 174, 199, 235, 236, 237], "valid": [1, 80, 93, 105, 116, 135, 137, 164, 199, 233, 244], "valu": [1, 3, 8, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 42, 45, 47, 48, 49, 62, 63, 64, 67, 75, 76, 79, 80, 83, 85, 89, 90, 91, 92, 93, 96, 97, 106, 107, 108, 109, 110, 112, 113, 114, 116, 118, 119, 120, 121, 124, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 193, 195, 196, 197, 198, 199, 202, 208, 211, 216, 218, 221, 223, 233, 236, 239, 240, 243, 244], "exploration_mod": [1, 12, 13, 15, 198, 229, 235, 236], "strategi": [1, 233, 235, 236], "reset_when_don": [1, 12, 13, 15], "central": [2, 235, 236], "part": [2, 4, 8, 24, 42, 45, 47, 48, 49, 76, 85, 145, 193, 227, 235, 236, 237, 240, 244], "algorithm": [2, 8, 9, 12, 13, 46, 72, 154, 165, 166, 167, 168, 193, 208, 209, 216, 233, 235, 236, 237, 241, 243], "implement": [2, 3, 9, 11, 24, 39, 42, 45, 47, 48, 49, 81, 92, 97, 114, 127, 128, 129, 154, 163, 165, 168, 208, 216, 218, 221, 233, 235, 236, 237, 240, 243], "wide": [2, 3, 5, 235], "we": [2, 3, 5, 7, 9, 20, 24, 42, 43, 45, 47, 48, 49, 79, 81, 89, 97, 104, 115, 230, 233, 235, 236, 237, 239, 240, 241, 243, 244], "give": [2, 7, 46, 230, 235, 236, 240, 241, 243], "abil": [2, 240], "veri": [2, 3, 236, 240, 243, 244], "influenti": 2, "sampl": [2, 4, 8, 9, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 42, 45, 46, 47, 48, 49, 80, 100, 102, 104, 110, 114, 118, 124, 125, 128, 129, 135, 137, 138, 141, 142, 155, 156, 157, 164, 165, 193, 199, 202, 205, 236, 237, 241, 243, 244], "latenc": 2, "especi": [2, 3, 7, 8, 64], "larger": [2, 4, 163], "volum": 2, "lazymemmapstorag": [2, 229, 235, 236, 241], "advis": [2, 235, 244], "share": [2, 3, 6, 8, 36, 37, 38, 39, 43, 48, 49, 97, 132, 133, 134, 227, 237, 239, 243, 244], "due": [2, 3, 5, 241, 244], "lower": [2, 16, 19, 97, 125, 126, 237, 240], "serialis": 2, "memmaptensor": [2, 241], "well": [2, 3, 8, 16, 24, 39, 42, 45, 47, 48, 49, 125, 126, 235, 236, 241, 243, 244], "specifi": [2, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 85, 87, 94, 104, 141, 142, 235, 237], "file": [2, 6, 7, 8, 184, 233, 235, 236, 242, 243], "locat": [2, 7, 45, 76, 84, 114, 121, 128, 129, 236, 237], "improv": [2, 4, 72, 154], "node": [2, 208, 211, 213, 216, 218, 221], "failur": [2, 4], "recoveri": 2, "mean": [2, 3, 4, 7, 12, 13, 15, 28, 33, 76, 97, 104, 110, 112, 115, 118, 127, 135, 142, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 235, 236, 237, 240, 243, 244], "liststorag": [2, 26, 27, 28, 229], "were": [2, 7, 48, 49, 235, 237], "found": [2, 6, 7, 10, 20, 24, 28, 42, 45, 47, 48, 49, 97, 142, 156, 165, 235, 236, 243], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 26, 33, 47, 63, 79, 106, 107, 108, 109, 112, 113, 118, 120, 122, 123, 125, 126, 138, 147, 154, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 174, 177, 178, 181, 208, 211, 216, 218, 221, 235, 236, 241, 243], "com": [2, 5, 6, 7, 10, 241, 243], "tree": 2, "type": [2, 3, 13, 24, 26, 28, 30, 42, 45, 46, 47, 48, 49, 66, 79, 81, 89, 92, 93, 96, 97, 105, 116, 120, 135, 137, 141, 142, 149, 208, 211, 213, 216, 218, 221, 225, 236, 237, 240, 244], "1x": 2, "lazytensorstorag": [2, 229, 237], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 42, 45, 47, 48, 49, 66, 67, 76, 79, 81, 89, 91, 93, 96, 104, 105, 106, 107, 113, 115, 116, 118, 121, 131, 132, 133, 134, 136, 139, 141, 144, 145, 147, 150, 160, 174, 175, 176, 179, 180, 182, 183, 185, 201, 213, 233, 235, 236, 237, 240, 241, 242, 243, 244], "44x": 2, "too": [2, 7, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 114, 128, 129, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 174, 175, 176, 235, 236, 237, 240, 244], "difficult": [2, 4], "trajecotri": 2, "One": [2, 4, 8, 23, 25, 124, 135, 137, 141, 170, 192, 235, 236, 244], "element": [2, 12, 13, 15, 22, 23, 25, 26, 27, 28, 29, 33, 36, 37, 38, 80, 105, 135, 141, 142, 193, 237, 244], "pai": [2, 8, 236], "attent": [2, 8, 236], "alwai": [2, 24, 42, 45, 47, 48, 49, 75, 236, 237, 240], "lead": [2, 3, 4, 8, 10, 11, 20, 24, 27, 89, 114, 128, 129, 240, 243], "dimens": [2, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 63, 64, 71, 76, 80, 87, 91, 94, 105, 116, 119, 120, 127, 128, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 174, 175, 176, 227, 236, 237, 240], "other": [2, 3, 4, 7, 8, 24, 27, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 67, 86, 97, 120, 121, 142, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 199, 208, 216, 218, 221, 225, 226, 233, 235, 236, 237, 240, 241, 243, 244], "word": [2, 240, 244], "creat": [2, 3, 4, 5, 6, 7, 10, 12, 13, 15, 16, 24, 26, 27, 28, 42, 43, 45, 47, 48, 49, 79, 85, 92, 93, 97, 103, 105, 106, 107, 108, 109, 113, 116, 117, 142, 157, 158, 166, 185, 199, 206, 209, 210, 223, 225, 226, 235, 236, 237, 240, 241, 243, 244], "1m": [2, 205, 235, 237], "multidimension": [2, 28, 33], "doe": [2, 3, 26, 28, 33, 39, 119, 143, 144, 155, 164, 165, 173, 202, 233, 235, 236, 237, 240, 244], "desir": [2, 3, 24, 42, 45, 47, 48, 49, 66, 76, 79, 80, 89, 93, 96, 102, 105, 116, 141, 142, 235, 240], "sub": [2, 3, 12, 13, 42, 45, 47, 48, 49, 80, 143, 144, 193, 202, 236, 237, 239, 243, 244], "diversifi": 2, "make": [2, 4, 7, 24, 39, 42, 45, 47, 48, 49, 55, 58, 76, 79, 80, 99, 119, 142, 165, 199, 210, 227, 235, 236, 237, 239, 240, 241, 243, 244], "more": [2, 3, 4, 6, 8, 11, 12, 13, 15, 16, 24, 26, 27, 28, 29, 42, 45, 47, 48, 49, 98, 116, 119, 121, 135, 137, 141, 147, 154, 158, 165, 174, 177, 178, 181, 197, 211, 230, 233, 235, 236, 237, 239, 240, 241, 244], "To": [2, 3, 4, 6, 7, 8, 24, 26, 27, 28, 42, 45, 47, 48, 49, 97, 132, 133, 134, 138, 202, 235, 236, 237, 240, 241, 243, 244], "do": [2, 3, 4, 7, 45, 75, 80, 103, 119, 133, 233, 235, 236, 237, 239, 240, 243, 244], "custom": [2, 3, 5, 24, 42, 45, 47, 48, 49, 227, 236, 237], "name": [2, 6, 7, 11, 24, 42, 45, 47, 48, 49, 52, 67, 69, 81, 85, 86, 93, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 186, 188, 189, 190, 192, 196, 197, 208, 211, 213, 216, 218, 221, 233, 235, 236, 237, 240, 244], "randomcroptensordict": 2, "here": [2, 3, 4, 7, 8, 9, 10, 235, 236, 237, 240, 243, 244], "exampl": [2, 3, 4, 9, 10, 11, 12, 13, 15, 16, 18, 20, 21, 22, 23, 24, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 66, 67, 68, 74, 76, 79, 81, 89, 91, 93, 96, 97, 103, 104, 105, 115, 116, 118, 121, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 150, 174, 175, 176, 193, 194, 195, 196, 197, 199, 200, 201, 204, 208, 211, 213, 216, 218, 221, 223, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244], "how": [2, 3, 24, 26, 28, 33, 42, 45, 47, 48, 49, 155, 162, 164, 165, 202, 230, 235, 236, 237, 239, 240, 241, 243, 244], "parent": [2, 3, 30, 42, 64, 71, 72, 76, 79, 89, 92, 94, 132, 165, 240, 243, 244], "subclass": [2, 3, 42, 45, 47, 48, 49, 92, 99, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 136, 137, 138, 140, 141, 142, 143, 151, 165, 235, 240], "basic": [2, 46, 237, 244], "properti": [2, 3, 42, 45, 46, 47, 48, 49, 93, 110, 114, 119, 124, 127, 128, 129, 240], "observ": [2, 3, 8, 12, 13, 15, 24, 30, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 58, 59, 60, 63, 64, 65, 66, 68, 69, 71, 73, 74, 76, 77, 81, 82, 85, 86, 88, 89, 90, 91, 92, 93, 94, 97, 103, 106, 107, 108, 109, 115, 122, 123, 125, 131, 132, 133, 134, 136, 137, 138, 139, 140, 145, 146, 147, 148, 157, 160, 174, 175, 176, 185, 208, 211, 213, 216, 218, 221, 223, 233, 236, 237, 239, 240, 243, 244], "action": [2, 3, 8, 9, 12, 13, 15, 21, 25, 30, 42, 45, 46, 47, 48, 49, 51, 58, 59, 60, 67, 68, 72, 75, 81, 86, 93, 103, 104, 106, 107, 108, 109, 111, 112, 116, 117, 118, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 147, 148, 157, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 208, 211, 213, 216, 218, 221, 223, 227, 233, 235, 236, 237, 239, 241, 243, 244], "shape": [2, 3, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 64, 76, 81, 89, 91, 98, 99, 103, 110, 111, 116, 119, 121, 124, 127, 139, 141, 144, 170, 185, 193, 199, 202, 223, 235, 236, 237, 239, 241, 243, 244], "dtype": [2, 3, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 42, 45, 46, 47, 48, 49, 51, 58, 59, 60, 66, 67, 68, 76, 79, 81, 89, 91, 93, 96, 99, 103, 104, 118, 119, 120, 132, 133, 134, 136, 138, 139, 140, 141, 144, 145, 147, 148, 174, 175, 176, 208, 211, 213, 216, 218, 221, 236, 237, 239, 240, 241, 243, 244], "import": [2, 3, 4, 6, 7, 10, 12, 13, 15, 26, 28, 33, 43, 45, 46, 74, 76, 79, 81, 89, 96, 97, 103, 104, 116, 118, 121, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 155, 174, 175, 176, 195, 198, 208, 211, 213, 216, 218, 221, 223, 236, 237, 239, 240, 241, 243, 244], "spec": [2, 3, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 42, 44, 45, 46, 47, 48, 49, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 76, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 99, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148, 208, 211, 213, 216, 218, 221, 235, 236, 237, 239, 243], "match": [2, 3, 6, 8, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 43, 45, 47, 48, 49, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 76, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 105, 110, 116, 127, 141, 142, 164, 166, 168, 199, 204, 236, 237, 239, 240, 243, 244], "input": [2, 3, 4, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 46, 47, 48, 49, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 76, 78, 79, 80, 81, 85, 86, 88, 89, 90, 92, 94, 95, 96, 97, 99, 103, 105, 106, 107, 108, 109, 115, 116, 119, 120, 125, 126, 138, 141, 142, 143, 144, 153, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 196, 200, 205, 223, 233, 235, 236, 237, 240, 243, 244], "output": [2, 3, 4, 12, 13, 15, 16, 24, 26, 27, 28, 42, 45, 46, 47, 48, 49, 63, 76, 79, 81, 90, 92, 96, 99, 105, 106, 107, 111, 112, 115, 116, 121, 132, 135, 137, 138, 141, 142, 143, 144, 147, 148, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 174, 185, 193, 235, 236, 237, 239, 240, 241, 243, 244], "send": [2, 3, 8, 236, 243], "receiv": [2, 3, 24, 42, 45, 47, 48, 49, 92, 116, 236, 237, 239, 240], "parallelenv": [2, 3, 12, 13, 15, 16, 47, 49, 224, 229, 235, 236, 237, 239, 243, 244], "commun": [2, 3, 230, 237, 244], "spawn": [2, 3, 4, 47], "check": [2, 3, 4, 5, 6, 7, 11, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 43, 45, 46, 47, 48, 49, 64, 70, 80, 99, 141, 142, 149, 235, 236, 237, 239, 240, 241, 244], "check_env_spec": [2, 3, 229, 237, 240], "method": [2, 3, 4, 12, 13, 15, 16, 24, 26, 27, 28, 29, 33, 36, 37, 38, 39, 42, 45, 47, 48, 49, 63, 66, 71, 76, 79, 81, 82, 89, 92, 93, 96, 104, 115, 132, 133, 134, 141, 142, 143, 149, 154, 184, 224, 233, 234, 235, 237, 240, 244], "saniti": [2, 3, 7, 99, 236, 237], "offer": [3, 7, 240, 244], "handl": [3, 24, 42, 45, 47, 48, 49, 97, 116, 202, 225, 226, 235, 237], "differ": [3, 4, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 63, 67, 76, 81, 93, 94, 116, 118, 147, 148, 163, 165, 170, 174, 175, 198, 202, 204, 225, 226, 233, 235, 236, 237, 239, 240, 241, 244], "backend": [3, 7, 11, 233, 235, 237, 240], "dm": [3, 235, 244], "lab": [3, 52, 53, 230], "base": [3, 4, 8, 9, 12, 13, 15, 16, 35, 41, 46, 47, 89, 95, 132, 159, 202, 208, 216, 218, 221, 233, 235, 238, 240, 242, 244], "goal": [3, 4, 235, 236, 237, 240], "abl": [3, 235, 237, 239, 240, 243], "experi": [3, 26, 33, 99, 186, 188, 189, 190, 191, 192, 230, 236, 237], "even": [3, 4, 8, 13, 36, 37, 38, 39, 43, 235, 237, 240, 244], "simul": [3, 5, 7, 8, 61, 104, 118, 235, 237], "some": [3, 4, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 79, 99, 106, 142, 143, 144, 193, 205, 233, 235, 236, 237, 240, 243, 244], "box": [3, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "wrapper": [3, 11, 16, 28, 29, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 121, 135, 137, 138, 142, 146, 174, 188, 189, 190, 227, 235, 237, 241, 244], "under": [3, 4, 24, 42, 45, 47, 48, 49, 141, 142, 235, 240, 244], "lib": [3, 5, 6, 7, 9, 10, 12, 13, 15, 43, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 74, 76, 81, 89, 97, 208, 211, 213, 216, 218, 221, 223, 235, 236, 237, 239, 241, 243, 244], "hope": 3, "imit": 3, "torch": [3, 8, 9, 10, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 36, 37, 42, 43, 45, 46, 47, 48, 49, 51, 58, 59, 60, 64, 66, 67, 68, 76, 79, 81, 84, 89, 91, 93, 96, 97, 103, 104, 105, 110, 112, 114, 115, 116, 118, 119, 120, 121, 124, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 152, 156, 174, 175, 176, 193, 200, 201, 208, 211, 213, 216, 218, 221, 223, 233, 235, 236, 237, 239, 240, 241, 243, 244], "nn": [3, 12, 13, 15, 24, 42, 45, 46, 47, 48, 49, 66, 67, 79, 89, 93, 96, 104, 105, 106, 107, 108, 109, 111, 112, 113, 116, 118, 121, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 154, 157, 158, 174, 175, 176, 218, 221, 223, 235, 236, 237, 239, 240, 241, 243], "typic": [3, 4, 8, 24, 42, 45, 47, 48, 49, 233, 237, 240], "organis": [3, 240], "allow": [3, 12, 13, 15, 16, 24, 25, 42, 45, 47, 48, 49, 81, 89, 103, 116, 170, 233, 235, 237, 240, 244], "gener": [3, 7, 8, 15, 27, 35, 43, 46, 76, 81, 85, 86, 92, 110, 124, 131, 139, 142, 145, 146, 166, 174, 177, 178, 181, 191, 202, 235, 236, 237, 238, 239, 240, 241, 243, 244], "arbitrari": [3, 25, 48, 49, 235, 236, 240], "nest": [3, 20, 24, 42, 45, 47, 48, 49, 174, 175, 176, 233, 236, 237, 240, 243], "structur": [3, 7, 27, 138, 174, 175, 176, 236, 237, 240, 241], "attribut": [3, 4, 24, 42, 45, 47, 48, 49, 79, 88, 142, 240], "batch_siz": [3, 8, 12, 13, 15, 20, 26, 27, 28, 29, 34, 42, 44, 46, 51, 58, 59, 60, 63, 81, 89, 103, 104, 118, 132, 133, 134, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 193, 199, 208, 211, 213, 216, 218, 221, 235, 236, 237, 239, 240, 241, 243, 244], "togeth": [3, 12, 13, 15, 16, 80, 132, 133, 134, 146, 235, 237], "expect": [3, 4, 7, 20, 24, 30, 42, 45, 46, 47, 48, 49, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 76, 79, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 94, 99, 138, 141, 144, 154, 155, 164, 165, 206, 230, 233, 235, 237, 240, 244], "live": [3, 12, 13, 15, 16, 24, 26, 27, 28, 29, 42, 45, 46, 47, 48, 49], "actual": [3, 4, 7, 16, 42, 45, 47, 48, 49, 205, 235, 236, 237, 240], "respons": [3, 8, 202, 244], "just": [3, 4, 193, 233, 235, 236, 237, 240, 243, 244], "retriev": [3, 26, 27, 28, 29, 42, 45, 47, 48, 49, 64, 76, 103, 104, 118, 142, 155, 164, 165, 174, 175, 176, 208, 211, 213, 216, 218, 221, 227, 233, 236, 237, 240, 244], "care": [3, 8, 42, 45, 47, 48, 49, 92, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151, 235, 237, 240], "map": [3, 8, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 36, 42, 45, 47, 48, 49, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 76, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 94, 97, 121, 132, 133, 134, 141, 142, 144, 146, 147, 229, 235, 236, 237, 241], "see": [3, 6, 7, 8, 9, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 98, 105, 114, 116, 119, 128, 129, 141, 142, 199, 235, 236, 237, 240, 244], "below": [3, 7, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 105, 114, 116, 128, 129, 141, 199, 236, 237, 240], "parametr": [3, 120, 142, 163, 168, 235, 237], "hardwar": 3, "input_spec": [3, 42, 46, 66, 67, 68, 76, 81, 86, 88, 92, 93, 94, 104, 118, 235, 237, 240, 244], "compositespec": [3, 42, 44, 45, 46, 47, 48, 49, 67, 81, 88, 89, 92, 104, 118, 131, 135, 137, 139, 144, 229, 235, 237, 240, 244], "all": [3, 4, 8, 12, 13, 15, 16, 24, 42, 43, 45, 46, 47, 48, 49, 66, 70, 76, 79, 85, 89, 90, 93, 96, 97, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 141, 142, 144, 151, 160, 197, 202, 205, 225, 226, 227, 230, 233, 235, 236, 237, 238, 239, 240, 243, 244], "output_spec": [3, 81, 92, 93, 240], "reward": [3, 12, 13, 15, 24, 30, 42, 45, 46, 47, 48, 49, 51, 58, 59, 60, 62, 66, 68, 81, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 103, 104, 118, 146, 156, 157, 160, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 195, 196, 198, 200, 227, 233, 235, 236, 237, 239, 240, 241, 243, 244], "observation_spec": [3, 42, 46, 63, 64, 65, 66, 68, 69, 71, 73, 74, 76, 79, 82, 85, 86, 88, 89, 90, 91, 92, 93, 94, 104, 118, 206, 223, 235, 237, 239, 240, 244], "pair": [3, 24, 42, 45, 47, 48, 49, 89, 132, 142, 235, 236, 237, 239, 240, 244], "pointer": [3, 6, 43], "action_spec": [3, 12, 13, 14, 15, 42, 45, 46, 47, 48, 49, 51, 58, 93, 126, 131, 133, 136, 139, 140, 147, 148, 223, 236, 237, 239, 240, 241, 243, 244], "reward_spec": [3, 42, 46, 62, 66, 68, 83, 84, 85, 92, 93, 94, 104, 118, 237, 240, 244], "done_spec": [3, 92, 93, 240, 244], "flag": [3, 8, 26, 27, 28, 29, 177, 178, 179, 180, 181, 182, 183, 240, 241], "importantli": [3, 142], "4": [3, 7, 12, 13, 15, 18, 21, 25, 46, 52, 53, 54, 57, 97, 104, 105, 106, 107, 112, 113, 115, 116, 118, 121, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 150, 184, 235, 236, 237, 240, 241, 243, 244], "action_s": 3, "help": [3, 4, 24, 42, 45, 47, 48, 49, 230, 235, 236, 237], "prealloc": [3, 240], "tensor": [3, 8, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 58, 59, 60, 63, 64, 66, 67, 71, 74, 76, 79, 80, 81, 84, 89, 90, 91, 92, 93, 94, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 124, 127, 128, 129, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 151, 152, 156, 157, 160, 161, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 208, 211, 213, 216, 218, 221, 233, 235, 236, 237, 239, 240, 241, 243, 244], "consist": [3, 24, 42, 45, 47, 48, 49, 105, 116, 235, 236, 237, 240, 241, 244], "With": [3, 233, 235, 244], "necessarili": 3, "requir": [3, 4, 7, 8, 15, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 116, 141, 143, 144, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 233, 235, 236, 237, 240, 244], "If": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 45, 46, 47, 48, 49, 64, 65, 67, 69, 71, 75, 76, 79, 80, 85, 86, 89, 92, 93, 96, 97, 103, 105, 115, 116, 135, 137, 138, 141, 142, 143, 144, 150, 151, 153, 160, 163, 168, 173, 174, 175, 176, 182, 183, 197, 199, 202, 204, 206, 208, 216, 218, 221, 223, 227, 230, 235, 236, 237, 239, 240, 243, 244], "present": [3, 24, 26, 33, 42, 45, 47, 48, 49, 69, 85, 86, 103, 106, 107, 108, 109, 113, 120, 138, 141, 142, 143, 144, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 227, 233, 235, 239, 243], "instanti": [3, 48, 49, 92, 235, 236, 240, 244], "0": [3, 4, 5, 6, 7, 8, 10, 11, 22, 23, 24, 25, 26, 28, 33, 42, 45, 46, 47, 48, 49, 51, 58, 62, 64, 66, 67, 75, 76, 79, 89, 91, 93, 96, 97, 99, 104, 105, 106, 107, 109, 112, 114, 116, 118, 119, 120, 121, 125, 126, 127, 128, 129, 135, 137, 138, 141, 144, 151, 154, 155, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 176, 193, 200, 202, 223, 227, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244], "stateless": [3, 92, 235, 240, 244], "set_se": [3, 12, 13, 15, 16, 42, 45, 46, 47, 48, 49, 51, 58, 76, 81, 93, 235, 240, 243, 244], "seed": [3, 12, 13, 15, 16, 42, 45, 46, 47, 48, 49, 52, 59, 60, 93, 99, 202, 235], "next": [3, 4, 8, 12, 13, 15, 20, 24, 26, 27, 28, 42, 43, 45, 46, 47, 48, 49, 51, 58, 59, 60, 74, 81, 97, 103, 104, 118, 126, 146, 157, 166, 173, 174, 175, 176, 196, 200, 235, 236, 239, 240, 241, 243, 244], "determinist": [3, 24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 112, 122, 126, 131, 137, 141, 142, 235, 236, 240, 244], "preced": [3, 115, 236], "without": [3, 7, 9, 24, 42, 45, 47, 48, 49, 133, 166, 173, 223, 230, 235, 236, 237, 240, 244], "risk": [3, 80], "overlap": 3, "consecut": [3, 138, 236, 244], "still": [3, 9, 88, 135, 164, 235, 236, 239, 240, 244], "reproduc": [3, 99, 237], "maximum": [3, 4, 12, 13, 15, 16, 19, 24, 36, 37, 38, 42, 45, 47, 48, 49, 67, 83, 88, 90, 127, 128, 129, 139, 163, 168, 199, 235, 236, 237, 240, 243, 244], "max_step": [3, 12, 42, 45, 46, 47, 48, 49, 59, 60, 88, 236, 243, 244], "n": [3, 6, 7, 18, 21, 24, 25, 42, 45, 47, 48, 49, 63, 67, 71, 94, 118, 142, 154, 173, 199, 233, 235, 236, 244], "tensordictmodul": [3, 12, 13, 15, 16, 118, 141, 143, 235, 236, 237, 239, 240, 241], "ani": [3, 5, 8, 20, 24, 26, 27, 28, 29, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 71, 79, 80, 93, 97, 99, 105, 116, 120, 141, 142, 143, 144, 165, 188, 202, 230, 235, 236, 237, 240, 243, 244], "compat": [3, 7, 11, 24, 39, 42, 45, 47, 48, 49, 56, 63, 97, 149, 170, 236, 243], "figur": [3, 235, 236, 237, 240, 244], "summar": [3, 240], "In": [3, 4, 5, 7, 8, 10, 11, 16, 24, 42, 45, 47, 48, 49, 66, 79, 86, 89, 92, 93, 96, 114, 116, 126, 128, 129, 141, 144, 153, 204, 225, 226, 227, 235, 236, 237, 239, 240, 241, 244], "brief": [3, 237, 244], "popul": [3, 74, 89, 237, 240], "entri": [3, 12, 13, 15, 24, 42, 45, 47, 48, 49, 65, 71, 74, 76, 79, 81, 88, 96, 103, 174, 175, 176, 235, 237, 240, 241], "deliveri": 3, "step_mdp": [3, 229, 235, 236, 240, 243, 244], "nasium": 3, "recent": [3, 7, 11, 235, 236, 243, 244], "shift": [3, 24, 151, 237], "termin": [3, 24, 143, 235, 236, 237, 240, 243], "trust": 3, "truncat": [3, 12, 13, 15, 88, 129, 237, 244], "refer": [3, 7, 8, 24, 42, 45, 47, 48, 49, 93, 97, 104, 112, 118, 122, 123, 125, 126, 147, 154, 158, 159, 160, 161, 165, 174, 177, 178, 181, 211, 235, 236, 237, 243], "achiev": [3, 4, 24, 42, 45, 47, 48, 49, 199, 233, 235, 237, 240, 244], "via": [3, 4, 7, 8, 48, 79, 92, 96, 156, 233, 236, 237, 244], "stepcount": [3, 12, 236, 237, 243], "chosen": [3, 89, 208, 216, 218, 221], "someth": [3, 24, 42, 45, 47, 48, 49, 230, 236, 237, 240, 244], "els": [3, 233, 235, 236, 237, 240, 241], "100": [3, 24, 42, 45, 47, 48, 49, 76, 194, 202, 223, 236, 237, 239, 240, 241, 243, 244], "truncated_kei": [3, 88], "assess": [3, 235], "split_trajectori": [3, 12, 13, 15, 16, 229], "slice": [3, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "adjac": [3, 71], "reli": [3, 154, 235, 237, 240, 244], "traj_id": [3, 12, 13, 15, 17, 243], "junction": 3, "miss": [3, 4, 6, 7, 11, 20, 24, 42, 45, 47, 48, 49, 89, 93, 103, 143, 144, 230], "context": [3, 5, 8, 24, 42, 43, 45, 47, 48, 49, 89, 94, 119, 171, 172, 174, 177, 178, 181, 198, 235, 236, 237, 240, 241], "mark": 3, "through": [3, 4, 5, 8, 15, 48, 49, 80, 116, 142, 143, 144, 151, 235, 236, 237, 239, 240, 241, 244], "inittrack": 3, "our": [3, 7, 8, 235, 236, 237, 239, 241, 243], "tutori": [3, 235, 236, 238, 239, 240, 241, 242, 243, 244], "inform": [3, 4, 12, 13, 15, 16, 24, 42, 43, 45, 47, 48, 49, 105, 116, 233, 236, 237, 240], "design": [3, 12, 13, 24, 25, 42, 45, 47, 48, 49, 80, 93, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 235, 236, 237, 239, 240, 244], "scratch": [3, 8, 235, 236, 240], "better": [3, 8, 236, 237, 240], "featur": [3, 4, 12, 13, 15, 16, 25, 42, 45, 47, 48, 49, 63, 71, 89, 94, 105, 112, 113, 116, 119, 120, 142, 174, 175, 176, 227, 235, 236, 237, 240, 244], "intens": [3, 8], "gym3": 3, "envpool": [3, 47], "interfac": [3, 116, 119, 235, 237, 240], "simultan": [3, 48, 49, 240], "often": [3, 8, 162, 202, 236, 240, 244], "competit": 3, "advantag": [3, 8, 113, 154, 155, 164, 165, 167, 174, 175, 176, 177, 178, 179, 181, 182, 233, 235, 236, 237, 240, 244], "scale": [3, 4, 76, 84, 112, 114, 121, 125, 126, 128, 129, 132, 133, 134, 139, 142, 144, 200, 206, 208, 216, 218, 221, 227, 235, 236, 237, 243], "varieti": 3, "its": [3, 4, 5, 7, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 42, 45, 46, 47, 48, 49, 63, 92, 93, 97, 105, 135, 136, 137, 142, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 202, 223, 233, 235, 236, 237, 240, 241, 244], "own": [3, 12, 13, 16, 24, 42, 45, 47, 48, 49, 236, 237, 240], "As": [3, 4, 42, 45, 47, 48, 49, 142, 235, 236, 237, 240, 241, 243, 244], "inherit": [3, 117, 233, 237], "serialenv": [3, 89, 229, 244], "enjoi": 3, "exact": 3, "Of": [3, 7, 230, 240, 244], "cours": [3, 4, 230, 237, 240, 244], "correspond": [3, 4, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 42, 45, 46, 47, 48, 49, 79, 89, 93, 96, 97, 138, 142, 236, 237, 240, 241], "count": [3, 43, 88, 138, 198, 205, 235, 236, 237, 244], "def": [3, 11, 24, 42, 43, 45, 46, 47, 48, 49, 104, 118, 145, 147, 150, 233, 235, 236, 239, 240, 243, 244], "make_env": [3, 60, 97, 209, 210, 235, 236, 244], "gymenv": [3, 5, 12, 13, 15, 16, 43, 56, 66, 74, 76, 81, 89, 93, 97, 208, 211, 213, 216, 218, 221, 223, 229, 235, 236, 237, 241, 243, 244], "v1": [3, 12, 13, 15, 43, 47, 74, 76, 81, 89, 170, 179, 180, 182, 183, 236, 240, 243, 244], "from_pixel": [3, 52, 53, 208, 216, 218, 221, 235, 236, 241, 243, 244], "9": [3, 7, 24, 97, 236, 237, 240, 241, 242], "81": [3, 240], "must": [3, 7, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 36, 37, 38, 39, 42, 43, 45, 47, 48, 49, 72, 76, 89, 93, 94, 105, 116, 141, 142, 147, 148, 177, 178, 179, 180, 181, 182, 183, 193, 198, 199, 202, 204, 208, 211, 213, 216, 218, 221, 235, 236, 237, 239, 240, 243], "work": [3, 4, 8, 11, 24, 42, 45, 47, 48, 49, 64, 79, 97, 105, 116, 202, 230, 235, 236, 237, 239, 240, 241, 243, 244], "print": [3, 6, 7, 12, 13, 15, 18, 20, 21, 24, 25, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 67, 68, 74, 76, 81, 89, 91, 97, 103, 105, 116, 121, 131, 132, 133, 134, 136, 137, 138, 140, 141, 144, 145, 147, 148, 150, 208, 211, 213, 216, 218, 221, 223, 233, 235, 236, 237, 239, 240, 241, 243, 244], "simpli": [3, 6, 69, 86, 235, 236, 237, 244], "b": [3, 7, 8, 17, 20, 119, 120, 174, 175, 176, 185, 236, 241], "c": [3, 6, 7, 20, 76, 208, 211, 213, 216, 218, 221, 236], "d": [3, 26, 33, 142, 243], "get": [3, 4, 6, 7, 8, 39, 43, 48, 49, 64, 67, 68, 76, 80, 91, 97, 131, 137, 142, 177, 178, 181, 192, 235, 236, 237, 240, 243, 244], "forc": [3, 6, 7, 236, 240], "variou": [3, 12, 13, 15, 16, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 225, 226, 236, 237, 244], "reset_work": 3, "fals": [3, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 64, 66, 71, 74, 75, 76, 79, 80, 81, 84, 89, 91, 93, 94, 96, 97, 99, 103, 104, 105, 106, 116, 118, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 170, 174, 175, 176, 179, 180, 182, 183, 195, 196, 198, 199, 200, 202, 208, 211, 213, 216, 218, 221, 227, 233, 235, 236, 237, 239, 240, 241, 243, 244], "field": [3, 12, 13, 15, 16, 20, 24, 42, 45, 46, 47, 48, 49, 51, 58, 59, 60, 81, 89, 93, 103, 104, 118, 132, 133, 134, 136, 138, 139, 140, 141, 144, 145, 147, 148, 206, 208, 211, 213, 216, 218, 221, 230, 236, 237, 239, 240, 241, 243, 244], "bool": [3, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 58, 59, 60, 64, 67, 71, 74, 75, 76, 79, 81, 84, 89, 91, 93, 94, 96, 97, 99, 103, 104, 105, 106, 107, 114, 116, 118, 119, 120, 128, 129, 135, 138, 141, 142, 143, 144, 149, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 170, 174, 175, 176, 179, 180, 182, 183, 184, 185, 195, 196, 198, 199, 200, 202, 208, 211, 213, 216, 218, 221, 227, 236, 237, 239, 240, 241, 243, 244], "500": [3, 202, 235, 240, 243, 244], "uint8": [3, 32, 91, 236, 241, 243, 244], "none": [3, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 59, 60, 62, 63, 64, 65, 66, 68, 71, 73, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 124, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 160, 161, 163, 167, 168, 173, 174, 175, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 196, 197, 198, 199, 200, 202, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 233, 235, 236, 237, 240, 243, 244], "is_shar": [3, 12, 13, 15, 20, 46, 51, 58, 59, 60, 81, 89, 97, 103, 104, 118, 132, 133, 134, 136, 138, 139, 140, 141, 144, 145, 147, 148, 208, 211, 213, 216, 218, 221, 236, 237, 239, 240, 241, 243, 244], "note": [3, 4, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 97, 138, 142, 235, 236, 239, 244], "launch": 3, "quit": [3, 235, 236, 237, 244], "time": [3, 4, 7, 8, 12, 13, 15, 16, 24, 42, 43, 45, 47, 48, 49, 64, 80, 89, 90, 97, 103, 112, 115, 138, 160, 166, 174, 175, 176, 202, 236, 237, 239, 240, 241, 243, 244], "mani": [3, 4, 155, 164, 165, 166, 236, 237, 240, 244], "start": [3, 4, 5, 12, 43, 103, 197, 236, 240, 244], "bottleneck": [3, 8], "why": [3, 235, 240, 244], "so": [3, 4, 6, 7, 10, 24, 42, 45, 47, 48, 49, 89, 97, 143, 144, 235, 237, 240, 244], "slow": [3, 4], "onc": [3, 7, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 93, 135, 137, 200, 233, 235, 236, 237, 240, 244], "great": [3, 7, 8, 243], "speedup": [3, 8, 244], "precis": [3, 91, 103, 235, 237], "anoth": [3, 8, 42, 45, 47, 48, 49, 92, 116, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 235, 237, 239, 240, 244], "thing": [3, 7, 8, 230, 235, 237, 244], "misspecifi": 3, "caus": [3, 7, 8, 80], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 42, 43, 45, 47, 48, 49, 79, 90, 96, 97, 103, 141, 150, 156, 174, 175, 176, 202, 204, 227, 230, 235, 236, 237, 239, 240, 241, 243, 244], "rais": [3, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 70, 93, 99, 150, 235, 236, 237, 243], "assert": [3, 6, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 45, 81, 97, 99, 121, 174, 175, 176, 193, 201, 235, 236, 239, 244], "mismatch": [3, 236], "mostli": [3, 16, 244], "purpos": [3, 7, 223, 235, 237, 241, 244], "want": [3, 6, 7, 8, 76, 235, 236, 237, 240, 241, 243, 244], "subprocess": [3, 43], "addit": [3, 4, 24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 135, 141, 153, 174], "multithread": [3, 26, 27, 28, 47], "multithreadedenv": [3, 229], "underneath": 3, "higher": [3, 4, 235, 236, 237, 244], "restrict": [3, 236, 241, 244], "flexibl": [3, 9, 47, 233, 235, 244], "cover": [3, 230, 235, 237, 240, 243], "popular": 3, "atari": [3, 4, 63, 244], "classic": [3, 46, 236], "benchmark_batched_env": 3, "py": [3, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244], "compar": [3, 42, 198, 236, 237, 244], "case": [3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 20, 24, 26, 28, 33, 42, 45, 47, 48, 49, 89, 93, 99, 116, 141, 142, 144, 153, 193, 204, 225, 226, 227, 233, 235, 237, 240, 244], "raw": [3, 4, 114, 128, 129, 236, 240], "treat": 3, "logic": 3, "torchvis": [3, 79, 96, 243, 244], "build": [3, 7, 17, 20, 24, 42, 45, 47, 48, 49, 97, 104, 118, 142, 202, 207, 212, 214, 215, 217, 219, 220, 222, 233, 237, 240, 241, 243, 244], "transformedenv": [3, 12, 43, 66, 71, 74, 75, 76, 81, 89, 92, 97, 208, 211, 213, 216, 218, 221, 235, 236, 237, 239, 240, 241, 243, 244], "primit": [3, 4, 235, 236], "built": [3, 5, 7, 219, 223, 224, 227, 236, 237, 244], "base_env": [3, 67, 68, 89, 235, 236, 237, 241, 243, 244], "totensorimag": [3, 213, 236, 243, 244], "in_kei": [3, 12, 13, 15, 46, 62, 63, 64, 65, 67, 68, 71, 73, 76, 77, 79, 81, 82, 83, 84, 85, 90, 91, 92, 96, 97, 104, 118, 131, 132, 133, 134, 139, 141, 142, 144, 145, 149, 150, 156, 157, 174, 175, 176, 184, 185, 218, 221, 223, 235, 236, 237, 239, 240, 241, 243, 244], "resiz": [3, 236, 244], "64": [3, 106, 107, 113, 235, 236, 237, 239, 240, 243, 244], "By": [3, 25, 45, 142, 198, 227, 235, 236, 241, 244], "now": [3, 7, 235, 237, 239, 241, 244], "appar": [3, 195], "bring": [3, 237, 244], "signific": [3, 5, 8, 237, 244], "kind": [3, 30, 103], "consult": 3, "interest": [3, 142, 237, 240, 244], "abov": [3, 7, 24, 42, 45, 47, 48, 49, 114, 128, 129, 153, 233, 235, 236, 237, 240, 244], "resize_par": 3, "sinc": [3, 4, 5, 7, 24, 42, 45, 47, 48, 49, 103, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151, 235, 236, 237, 240, 241, 243, 244], "out_kei": [3, 12, 13, 15, 46, 62, 63, 64, 65, 71, 73, 76, 77, 79, 81, 82, 83, 85, 90, 91, 92, 96, 104, 118, 131, 132, 133, 134, 139, 141, 142, 144, 145, 147, 148, 149, 150, 174, 175, 176, 198, 223, 235, 237, 239, 240, 241, 243, 244], "keyword": [3, 12, 13, 15, 24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141, 142, 224, 235, 236, 237, 244], "easi": [3, 5, 235, 236, 237, 241, 244], "root": [3, 20, 103, 114, 128, 129, 240, 244], "graph": [3, 4, 8, 171, 172, 240], "inv": [3, 67, 240], "appli": [3, 4, 24, 26, 27, 28, 29, 42, 45, 47, 48, 49, 63, 64, 66, 67, 69, 70, 71, 72, 74, 78, 80, 81, 85, 86, 88, 89, 90, 92, 93, 95, 97, 128, 174, 197, 233, 235, 236, 237, 240, 243, 244], "revers": 3, "order": [3, 15, 24, 25, 26, 27, 28, 29, 42, 45, 47, 48, 49, 93, 141, 143, 144], "chain": [3, 26, 27, 28, 66, 67, 105, 144, 244], "taken": [3, 42, 45, 47, 48, 49, 235, 236, 237, 240], "includ": [3, 4, 7, 9, 24, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 93, 97, 205, 233, 235, 236, 237, 240, 244], "invers": [3, 4, 76, 152, 163, 240], "in_keys_inv": [3, 68, 76, 77, 81, 92, 235, 239, 240, 244], "append_transform": [3, 26, 27, 28, 29, 79, 89, 235, 240, 243, 244], "doubletofloat": [3, 208, 211, 216, 218, 221, 235, 237, 239], "float32": [3, 12, 13, 15, 20, 26, 30, 33, 46, 51, 58, 59, 60, 68, 76, 81, 89, 91, 103, 104, 118, 132, 133, 134, 136, 138, 139, 140, 141, 144, 145, 147, 148, 208, 211, 213, 216, 218, 221, 236, 237, 239, 240, 241, 243, 244], "float64": [3, 24, 42, 45, 47, 48, 49, 59, 60, 66, 79, 89, 93, 96, 141, 239, 244], "append": [3, 8, 26, 27, 28, 29, 43, 89, 235, 236, 237, 240, 241, 243], "regist": [3, 24, 25, 42, 45, 47, 48, 49, 93, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151, 233, 237], "manipul": [3, 4, 8, 79, 244], "keep": [3, 4, 7, 8, 13, 76, 79, 96, 97, 103, 138, 195, 202, 235, 236, 237, 240, 243, 244], "mind": 3, "go": [3, 7, 80, 235, 236, 237, 239, 240, 241, 243, 244], "what": [3, 8, 30, 42, 45, 47, 48, 49, 89, 103, 230, 236, 237, 240, 241, 243, 244], "singl": [3, 16, 24, 26, 27, 28, 29, 42, 45, 47, 48, 49, 63, 64, 79, 91, 96, 105, 115, 116, 144, 158, 166, 179, 180, 182, 183, 218, 227, 235, 236, 237, 239, 240, 241], "third_transform": 3, "prohibit": 3, "would": [3, 24, 42, 45, 47, 48, 49, 116, 233, 236, 237, 240, 244], "replac": [3, 6, 7, 24, 67, 103], "unexpect": [3, 24, 42, 45, 47, 48, 49, 93, 235, 244], "behviour": 3, "fortun": 3, "eras": [3, 42, 45, 47, 48, 49], "ident": [3, 12, 13, 15, 24, 48, 49, 225, 226, 235, 236], "alreadi": [3, 8, 24, 42, 45, 47, 48, 49, 142, 235, 236, 237], "place": [3, 12, 13, 15, 16, 20, 24, 42, 43, 45, 47, 48, 49, 66, 79, 89, 93, 96, 97, 141, 199, 204, 205, 236, 237, 240], "chang": [3, 5, 7, 24, 36, 37, 38, 39, 42, 45, 47, 48, 49, 81, 92, 93, 97, 235, 237, 240, 241, 244], "happen": [3, 135, 236, 241, 244], "catfram": [3, 236], "hold": [3, 171, 172, 240], "about": [3, 5, 7, 235, 236, 237, 240, 243, 244], "notic": [3, 237, 240], "loss": [3, 8, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 197, 202, 207, 212, 214, 215, 217, 218, 220, 223, 233, 235, 236, 240, 243], "parenthood": 3, "reason": [3, 4, 8, 24, 42, 45, 47, 48, 49, 79, 235, 236, 237], "henc": [3, 80, 235, 237, 240], "composit": [3, 20, 42, 45, 47, 48, 49, 237, 240], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 240], "log": [3, 4, 8, 110, 124, 129, 142, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 195, 196, 198, 202, 223, 233, 236, 237, 240, 243], "reveal": 4, "bug": [4, 243], "curv": 4, "won": [4, 24, 42, 43, 45, 47, 48, 49, 79, 96, 202, 227, 235, 236, 237], "tell": [4, 7], "exploit": 4, "video": [4, 185, 198, 227, 236], "game": [4, 5], "cannot": [4, 7, 20, 80, 236, 237, 240], "cv": 4, "need": [4, 7, 8, 10, 24, 39, 42, 45, 47, 48, 49, 71, 79, 81, 93, 96, 97, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 119, 121, 122, 123, 125, 126, 135, 137, 138, 141, 151, 153, 166, 173, 185, 202, 227, 235, 236, 237, 240, 243, 244], "act": 4, "flip": 4, "imag": [4, 7, 52, 65, 79, 91, 96, 116, 235, 236, 241, 244], "correspondingli": 4, "relat": [4, 10, 71, 236, 240], "prescript": 4, "tune": [4, 241], "coeffici": 4, "bonu": [4, 155, 164, 165], "beta": [4, 26, 28, 33, 163, 164, 235, 236, 243], "altern": [4, 21, 47, 153, 235, 236, 237], "reduc": [4, 6, 21, 236, 237], "downstream": [4, 235], "issu": [4, 5, 8, 80, 141, 142, 230, 243], "formul": 4, "ob": [4, 8, 20, 68, 76, 91, 103, 145, 174, 175, 176, 235, 236, 239, 240, 243, 244], "rate": [4, 97, 173, 235, 236, 237], "gradient": [4, 24, 42, 45, 47, 48, 49, 93, 114, 120, 128, 129, 154, 167, 173, 174, 175, 176, 202, 235, 237, 240], "norm": [4, 8, 202, 236, 237, 240], "easier": [4, 235], "behavior": [4, 24, 42, 45, 47, 48, 49, 93, 163, 237], "local": [4, 7, 10, 15, 24, 42, 45, 47, 48, 49, 93, 188, 243], "optima": 4, "sens": [4, 240], "product": [4, 9, 225, 226], "instead": [4, 7, 8, 11, 21, 24, 42, 45, 47, 48, 49, 71, 89, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151, 227, 235, 240, 244], "sum": [4, 23, 25, 45, 160, 173, 235, 236, 237, 240, 244], "track": [4, 12, 13, 15, 16, 85, 97, 138, 188, 195, 235, 236, 240], "stat": [4, 76, 206, 227, 237], "w": [4, 65, 82, 91, 138, 185, 236], "r": [4, 24, 76, 142, 153, 173, 236, 240, 244], "yield": [4, 15, 24, 42, 45, 47, 48, 49], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 12, 13, 156, 157, 237], "futur": [4, 24, 42, 45, 47, 48, 49, 79, 93, 96, 116, 230, 243], "past": [4, 236], "becom": [4, 235, 244], "between": [4, 5, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 67, 75, 83, 91, 93, 99, 105, 116, 142, 160, 161, 164, 170, 174, 198, 202, 235, 236, 244], "spars": 4, "ineffici": 4, "interact": [4, 5, 7, 8, 12, 13, 15, 142, 237, 240, 244], "ad": [4, 12, 13, 15, 24, 26, 27, 28, 29, 33, 42, 45, 47, 48, 49, 85, 93, 119, 120, 138, 155, 164, 165, 235, 244], "intermedi": [4, 241], "instrument": 4, "greatli": [4, 236], "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 235], "discov": 4, "score": 4, "undesir": 4, "though": [4, 116, 237], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 64, 67, 76, 103, 104, 115, 137, 138, 151, 174, 175, 176, 243], "subtask": 4, "hierarch": [4, 243], "framework": [4, 9, 46, 243, 244], "individu": [4, 24, 42, 45, 47, 48, 49, 235], "select": [4, 26, 27, 28, 29, 63, 64, 66, 69, 70, 71, 72, 74, 75, 78, 80, 81, 85, 86, 88, 89, 90, 92, 95, 97, 104, 201, 235, 236], "fall": 4, "section": 4, "explicit": [4, 11, 115, 236], "mechan": [4, 24, 42, 45, 47, 48, 49, 93, 240], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 42, 45, 47, 48, 49, 163, 237], "addition": 4, "per": [4, 12, 13, 15, 16, 48, 112, 202, 225, 226, 235, 236, 237, 243], "timestep": [4, 177, 178, 179, 180, 181, 182, 183, 236], "realli": 4, "larg": [4, 21, 237], "target": [4, 8, 24, 42, 43, 45, 47, 48, 49, 92, 141, 142, 156, 157, 158, 161, 162, 164, 166, 168, 169, 173, 174, 175, 176, 205, 222, 223, 233, 235, 240], "huge": 4, "practic": [4, 5, 8, 114, 128, 129, 153, 230, 235, 236, 237, 241, 244], "std": [4, 76, 97, 121, 135, 244], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 238, 239, 241, 242], "initi": [4, 7, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 76, 79, 89, 92, 93, 98, 104, 118, 119, 120, 135, 137, 138, 164, 166, 168, 208, 211, 213, 216, 218, 221, 227, 236, 240, 244], "estim": [4, 132, 133, 134, 154, 155, 164, 165, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 235, 236, 237, 239, 240, 241, 243, 244], "encount": [4, 48, 49, 230, 236, 240], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 235, 236, 237, 244], "bonus": 4, "denser": 4, "prior": [4, 126, 160], "freshli": 4, "proper": [4, 6, 7, 236, 237], "doesn": [4, 11, 47], "drop": [4, 103], "meant": [4, 46], "encourag": [4, 236], "measur": [4, 236, 237], "novelti": 4, "revisit": 4, "previous": [4, 237, 244], "diminish": 4, "decreas": 4, "ideal": [4, 76, 235, 240], "down": [4, 12, 13, 15, 16, 236], "gone": [4, 5], "anyth": 4, "try": [4, 7, 8, 150, 235, 236, 237, 240, 243, 244], "distil": 4, "add": [4, 6, 24, 26, 27, 28, 29, 40, 41, 42, 45, 47, 48, 49, 119, 154, 197, 235, 236, 237, 240, 243], "nois": [4, 98, 120, 130, 138, 166, 198, 227, 235], "exploratori": [4, 155, 164, 165], "could": [4, 6, 235, 236, 237, 241, 244], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 26, 28, 29, 33, 36, 37, 38, 39, 156, 157, 163, 166, 168, 233, 235, 236], "schedul": [4, 7, 198, 237, 240], "separ": [4, 8, 12, 13, 16, 17, 79, 96, 156, 163, 166, 168, 235, 236, 244], "divers": [4, 48, 49], "clone": [4, 8, 132, 133, 134, 141, 163, 208, 216, 218, 221, 229, 235, 236, 240, 243], "bootstrap": [4, 236], "noisi": [4, 119, 120, 130], "unstabl": [4, 114, 128, 129], "inher": 4, "stochast": [4, 112, 120, 122, 126, 163, 166, 168, 237], "enemi": 4, "variabl": [4, 7, 8, 21, 25, 118, 132, 133, 134, 166, 233], "pomdp": 4, "previou": [4, 10, 24, 126, 235, 237, 240, 244], "loos": [4, 236, 237], "nonexist": 4, "sure": [4, 7, 39, 227, 235, 237, 240, 243, 244], "architectur": [4, 236], "sequenc": [4, 12, 13, 15, 16, 20, 22, 23, 26, 27, 40, 41, 62, 63, 64, 65, 67, 68, 71, 73, 76, 77, 80, 82, 83, 84, 85, 90, 91, 92, 97, 105, 110, 116, 124, 131, 139, 142, 143, 144, 145, 184, 185, 197, 199, 201, 202, 208, 216, 218, 221, 236, 237, 239, 244], "rather": [4, 81, 235, 236, 237], "last": [4, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 71, 76, 80, 90, 105, 115, 116, 122, 135, 137, 235, 236, 237, 240, 241, 243, 244], "lstm": [4, 115, 121], "explicitli": [4, 235], "rel": [4, 89, 110, 127], "tend": 4, "stabl": [4, 9, 10, 235], "don": [4, 6, 7, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 42, 235, 236, 237, 243, 244], "compens": 4, "faster": [4, 47], "descent": [4, 120], "1000": [4, 97, 135, 137, 138, 142, 162, 235, 236, 237, 241], "know": [4, 135, 137, 166, 198, 235, 236, 237], "minimum": [4, 19, 83, 112, 121, 127, 128, 129, 139, 151, 153, 163, 168, 193, 235, 237, 240, 243, 244], "rang": [4, 8, 11, 21, 43, 97, 164, 233, 235, 236, 237, 240, 243], "manual": 4, "deviat": [4, 76, 97, 104, 112, 118, 119, 120, 135, 165, 235], "radic": 4, "begin": [4, 12, 13, 15], "updat": [4, 8, 12, 13, 15, 16, 24, 33, 42, 45, 46, 47, 48, 49, 67, 93, 95, 97, 104, 118, 138, 141, 142, 154, 162, 165, 169, 174, 175, 176, 198, 202, 204, 209, 210, 222, 223, 233, 235, 236, 237, 240, 243, 244], "stabil": [4, 72], "stage": [4, 240], "never": 4, "prevent": [4, 114, 128, 129, 164, 165, 200, 235], "solv": [4, 10, 230, 235, 236, 237, 240], "entir": [4, 236, 237, 240], "submit": [4, 230, 243], "suffici": [4, 235, 236], "recommend": [4, 7], "system": [4, 5, 237, 240], "adequ": [4, 99, 237], "infeas": 4, "allevi": 4, "prune": 4, "develop": [4, 7, 235, 243], "filter": [4, 235], "fire": [4, 24, 42, 45, 47, 48, 49], "certain": [4, 24, 42, 45, 47, 48, 49, 72, 88, 93, 164, 235, 236, 237, 244], "illeg": 4, "chess": 4, "combin": [4, 92, 236], "grasp": 4, "releas": [4, 7, 10, 24, 42, 45, 47, 48, 49, 93, 243], "top": [4, 104, 118], "p": [4, 43], "wherein": 4, "cumul": [4, 85, 104, 237], "probabl": [4, 8, 110, 124, 129, 142, 236, 243], "q": [4, 106, 107, 108, 109, 111, 113, 147, 148, 156, 157, 158, 162, 163, 166, 168, 218, 221], "flow": [4, 235, 237, 240], "directli": [4, 8, 46, 227, 237, 240], "reparameter": [4, 110, 124], "soft": [4, 162, 168, 169], "actor": [4, 104, 106, 108, 112, 118, 132, 133, 134, 136, 137, 138, 139, 140, 147, 148, 154, 155, 156, 159, 163, 164, 165, 166, 168, 208, 211, 213, 216, 218, 221, 229, 235, 236, 237, 241, 243], "critic": [4, 8, 132, 154, 155, 164, 165, 167, 168, 237], "clip": [4, 83, 155, 202, 237, 240], "oppos": 4, "incorrect": 4, "thought": 4, "bound": [4, 16, 19, 20, 24, 42, 45, 47, 48, 49, 97, 125, 126, 138, 141, 142, 236, 237, 244], "region": 4, "squash": [4, 243], "tanh": [4, 105, 114, 116, 127, 128, 129, 235, 237, 240, 241, 243], "correct": [4, 205, 236, 237], "prob": [4, 124, 237], "rememb": 4, "remap": 4, "origin": [4, 8, 12, 13, 15, 16, 67, 79, 93, 96, 141, 142, 162, 165, 218, 221, 239, 240, 244], "side": [4, 244], "tool": [5, 240, 244], "real": [5, 142, 240], "world": [5, 46, 146, 160, 240, 244], "robot": [5, 7, 79, 96], "adopt": [5, 235, 244], "histor": 5, "wa": [5, 7, 42, 45, 47, 48, 49, 93, 162, 169, 236, 237, 239, 243], "ceas": 5, "maintain": [5, 9, 240], "fork": 5, "gymnasium": [5, 11, 236, 237, 240, 243], "farama": [5, 237, 240], "foundat": [5, 237], "document": [5, 7, 24, 42, 45, 47, 48, 49, 93, 243], "further": [5, 237], "detail": [5, 6, 7, 24, 42, 45, 47, 48, 49, 93, 147, 154, 158, 165, 211, 230, 239], "instal": [5, 10, 202, 230, 237, 244], "usag": [5, 7, 163, 168, 235, 236, 237, 239, 240, 241, 243, 244], "known": [5, 7, 8, 235, 236], "bc": [5, 243], "break": [5, 12, 13, 15, 24, 42, 45, 47, 48, 49, 97, 235, 236, 243], "face": [5, 8, 9, 244], "modif": [5, 20, 24, 42, 45, 47, 48, 49, 71, 235, 237, 240], "against": [5, 7, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 99, 141, 142, 237], "13": [5, 10, 11, 240, 242], "howev": [5, 7, 24, 42, 45, 47, 48, 49, 85, 88, 93, 235, 236, 237, 244], "around": [5, 7, 16, 28, 29, 46, 142, 174, 244], "construct": [5, 24, 27, 42, 45, 47, 48, 49, 99, 126, 142, 202, 208, 216, 235, 237, 240, 244], "automat": [5, 42, 45, 47, 48, 49, 76, 131, 139, 235, 236, 237, 240, 243], "wrap": [5, 12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 99, 132, 133, 134, 146, 235, 236, 237, 244], "best": [5, 9, 236, 243], "gymwrapp": [5, 45, 229, 237, 243], "you": [5, 6, 7, 8, 10, 24, 42, 45, 47, 48, 49, 97, 230, 235, 236, 237, 239, 241, 243, 244], "feel": [5, 230, 243], "free": [5, 7, 154, 160, 165, 233, 237, 243], "gladli": 5, "instruct": [6, 7, 10, 67, 236, 237], "prepar": [6, 237], "conda": [6, 7, 230], "assum": [6, 20, 25, 29, 45, 48, 49, 65, 71, 79, 80, 85, 89, 96, 115, 163, 168, 179, 180, 182, 183, 185, 235, 236, 237, 239, 240], "let": [6, 7, 24, 42, 45, 47, 48, 49, 198, 235, 236, 237, 239, 240, 241, 243, 244], "7": [6, 10, 21, 25, 104, 105, 115, 116, 118, 235, 236, 237, 240, 241, 242, 243], "cmake": 6, "14": [6, 11, 76, 237, 240, 241], "activ": [6, 7, 9, 105, 112, 116, 165, 243], "sim": 6, "bullet": 6, "physic": [6, 7, 233, 235, 240], "headless": [6, 7], "mode": [6, 12, 13, 15, 24, 42, 45, 47, 48, 49, 93, 97, 100, 102, 110, 114, 124, 127, 128, 129, 142, 198, 235, 236, 243, 244], "cluster": [6, 7, 8, 230], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": 6, "y": [6, 7, 115, 150, 237], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": 6, "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 42, 45, 47, 48, 49, 87, 244], "command": [6, 7, 10, 235, 237, 240, 244], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 229], "_has_habitat": 6, "_env": [6, 244], "available_env": [6, 50, 51, 52, 53, 54, 55, 57, 58, 244], "startswith": 6, "oserror": 6, "load": [6, 12, 13, 15, 16, 26, 27, 28, 53, 227, 233], "libllvmlit": 6, "solut": [6, 7, 9, 230, 233, 243], "ionstal": 6, "path": [6, 7, 24, 36, 42, 45, 47, 48, 49, 79, 96, 118, 202, 233], "env_nam": [6, 47, 50, 52, 54, 57, 235, 237, 244], "llvmlite": 6, "config": [6, 7, 79, 96, 206, 208, 209, 210, 211, 213, 216, 218, 219, 221, 224], "var": [6, 7, 24, 42, 45, 47, 48, 49, 93], "ld_preload": [6, 7], "python3": [6, 7, 10, 243], "8": [6, 7, 33, 51, 105, 106, 107, 113, 116, 132, 133, 134, 139, 141, 144, 163, 236, 237, 240, 241, 242, 243], "site": [6, 7], "bind": 6, "deactiv": [6, 7], "importerror": [6, 7, 10], "usr": [6, 7, 10, 243], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 24, 42, 45, 47, 48, 49, 93], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco": [6, 8, 230, 237], "debug": [6, 8, 230, 244], "link": [6, 7], "right": [6, 7, 115, 235, 236, 237, 240, 244], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": 7, "repositori": 7, "stand": [7, 132, 133, 134, 239, 240, 244], "joint": [7, 236], "dynam": [7, 163, 237, 240], "contact": 7, "engin": [7, 240], "facilit": [7, 78, 79, 96, 132, 133, 134, 235, 240], "biomechan": 7, "graphic": 7, "anim": 7, "machin": [7, 24], "area": 7, "demand": [7, 244], "fast": [7, 9, 51, 81, 166, 235, 236, 237], "accur": [7, 235, 240], "articul": 7, "acquir": [7, 235, 237], "deepmind": [7, 8, 9, 52, 53, 237], "access": [7, 8, 24, 42, 45, 47, 48, 49, 79, 227, 230, 240], "whomev": 7, "licenc": 7, "incorpor": [7, 235, 240], "relianc": 7, "obsolet": 7, "seri": [7, 8, 25, 40, 41, 49, 75, 92, 185, 236, 237, 244], "legaci": 7, "pro": [7, 230], "tip": [7, 230], "capabl": [7, 233, 235, 239, 241, 244], "glfw": 7, "osmesa": 7, "egl": 7, "hand": [7, 235, 240], "gpu": [7, 8, 24, 42, 45, 47, 48, 49, 235, 237, 244], "advic": [7, 244], "sudo": [7, 230], "enabl": [7, 8, 138, 198, 237, 240], "apt": 7, "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 36, 37, 38, 39], "fact": [7, 8, 236, 237, 240, 241, 244], "indent": 7, "workflow": [7, 132, 133, 134], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "both": [7, 24, 42, 43, 45, 47, 48, 49, 81, 93, 105, 116, 132, 133, 134, 198, 235, 237, 240, 241, 244], "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 24, 37, 42, 45, 47, 48, 49, 79, 96, 244], "binari": [7, 18, 25, 62, 147, 148], "These": [7, 24, 42, 45, 47, 48, 49, 79, 96, 235, 237, 240, 244], "setup": [7, 235], "mkdir": 7, "cd": 7, "tag": [7, 185, 188, 227], "earlier": [7, 235, 237], "roboti": 7, "u": [7, 10, 235, 237, 240, 241, 243, 244], "download": [7, 10, 79, 96, 235, 236, 237, 238, 239, 240, 241, 243, 244], "html": [7, 47, 236], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 45, 79, 96, 104, 199, 235, 236, 237], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 241], "bin": 7, "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "hard": [7, 162, 236, 244], "later": [7, 109, 142, 235, 237], "nativ": [7, 9, 42, 45, 47, 48, 49, 63], "modifi": [7, 8, 24, 42, 45, 47, 48, 49, 66, 71, 79, 89, 92, 93, 96, 138, 141, 205, 208, 216, 218, 221, 235, 236, 237], "nvidia": 7, "driver": 7, "older": [7, 11], "hack": 7, "line": [7, 24, 42, 45, 47, 48, 49, 235, 236, 243], "adatp": 7, "script": [7, 99, 208, 211, 213, 216, 218, 221, 223, 227, 233, 235, 236, 237, 239, 240, 241, 243, 244], "unnot": [7, 80], "until": [7, 237], "complet": [7, 9, 45, 230, 236, 237, 239], "mujoco_pi": 7, "trigger": 7, "pipelin": [7, 237], "problem": [7, 8, 15, 236, 237, 240, 244], "troubleshoot": 7, "gl": 7, "h": [7, 65, 82, 91, 118, 185, 236], "eglshim": 7, "10": [7, 20, 43, 46, 59, 60, 91, 104, 115, 118, 137, 138, 166, 167, 168, 174, 175, 176, 193, 233, 235, 236, 237, 240, 242, 243, 244], "fatal": 7, "No": 7, "directori": [7, 36, 188, 233], "glu": 7, "38": [7, 237, 240], "disappear": [7, 236, 239], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "__init__": [7, 46, 104, 118, 145, 147, 150, 233, 235, 236, 240, 244], "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": 7, "runtimeerror": [7, 8, 24, 42, 45, 47, 48, 49, 93, 244], "job": 7, "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 237, 240], "114": [7, 240], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 240], "offscreenopenglcontext": 7, "fail": [7, 99], "opengl": 7, "global": [7, 24, 42, 45, 47, 48, 49, 142, 233, 235], "cuda_visible_devic": 7, "id": [7, 17, 138, 166, 191, 218], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "read": [7, 16, 36, 37, 38, 39, 45, 63, 64, 66, 67, 69, 70, 71, 72, 74, 78, 80, 81, 85, 86, 88, 89, 90, 92, 95, 97, 124, 132, 133, 134, 141, 142, 144, 146, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 174, 175, 176, 185, 202, 208, 216, 218, 221, 235, 236, 237, 239, 240, 241, 244], "onscreen": 7, "101": [7, 240], "displai": [7, 202, 233, 236, 240], "correctli": [7, 24, 42, 45, 47, 48, 49], "loop": [8, 12, 13, 15, 16, 45, 103, 202, 233, 235, 239], "sketch": [8, 233], "_": [8, 43, 64, 67, 68, 76, 81, 91, 97, 141, 153, 174, 175, 176, 235, 236, 237, 240, 243], "n_training_step": 8, "datapoint": 8, "onlin": [8, 12, 16, 154, 165, 193, 227, 237], "n_data_per_train": 8, "no_grad": [8, 24, 42, 45, 47, 48, 49, 235, 236, 237], "replay_buff": [8, 33, 34, 35, 36, 37, 38, 39, 40, 41, 199, 223, 235, 236, 237], "extend": [8, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 199, 233, 235, 236, 237, 241, 243], "offlin": [8, 12, 13, 15, 16, 99, 163, 233, 241, 243], "loss_fn": [8, 243], "backward": [8, 24, 42, 45, 47, 48, 49, 97, 235, 236, 237, 240], "zero_grad": [8, 24, 42, 45, 47, 48, 49, 233, 235, 236, 237, 240], "backpropag": [8, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 240], "decor": [8, 11], "differenti": [8, 174, 175, 176, 235, 240], "understand": [8, 235, 236], "denomin": 8, "artifact": 8, "numer": [8, 97, 114, 128, 129, 141, 142, 200, 237, 244], "misconcept": 8, "save": [8, 24, 42, 45, 47, 48, 49, 184, 202, 233, 236], "freed": 8, "appear": [8, 25, 240], "compuat": 8, "twice": [8, 163, 168], "fix": [8, 89, 168, 240, 244], "retain_graph": 8, "discuss": [8, 9], "inplac": [8, 24, 42, 45, 47, 48, 49, 235, 236], "accumul": 8, "onto": [8, 25, 135, 137, 141, 142, 236, 240], "exclud": [8, 69, 103, 235], "forward": [8, 24, 42, 45, 47, 48, 49, 63, 64, 66, 67, 69, 70, 71, 72, 74, 76, 78, 79, 80, 81, 85, 86, 88, 89, 90, 92, 95, 97, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 117, 119, 121, 122, 123, 125, 126, 135, 137, 138, 141, 142, 145, 147, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 174, 175, 176, 235, 236, 240, 243], "submodul": [8, 24, 42, 45, 47, 48, 49], "param": [8, 24, 42, 45, 46, 47, 48, 49, 81, 92, 110, 127, 139, 140, 141, 144, 145, 147, 148, 169, 172, 174, 175, 176, 211, 235, 236, 240, 241, 243], "grad": [8, 24, 42, 45, 47, 48, 49, 236, 237], "whose": [8, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 121, 141, 235], "strictli": [8, 24, 42, 45, 47, 48, 49, 93, 235, 237], "neg": [8, 12, 13, 15, 16, 26, 28, 33, 63, 71, 80, 94, 159, 235, 237, 240], "ask": [8, 235, 237, 241, 244], "core": [8, 208, 211, 213, 216, 218, 221, 233, 243], "much": [8, 26, 28, 33, 164, 165, 236, 237, 240, 244], "render": [8, 198, 235, 236, 237], "upon": [8, 240], "factor": [8, 24, 114, 120, 128, 129, 138, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 235, 236, 244], "fit": [8, 11, 76, 233], "everi": [8, 16, 20, 24, 25, 39, 42, 45, 47, 48, 49, 97, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151, 202, 233, 235, 236, 237, 240], "bottlneck": 8, "affect": [8, 24, 42, 45, 47, 48, 49, 92, 93, 99], "brax": [8, 50, 51, 81, 244], "jax": [8, 11], "improperli": 8, "item": [8, 12, 70, 156, 157, 193, 233, 235, 236, 237, 240], "underli": [8, 240], "tedeiou": 8, "priorit": [8, 26, 28, 33, 156, 157, 163, 166, 168, 235, 236], "amount": [8, 138, 236], "isn": [8, 141], "contigu": [8, 237, 240, 243, 244], "costli": [8, 240], "concaten": [8, 22, 23, 63, 64, 76, 92, 116, 144, 235, 236, 240, 244], "constitut": [8, 236, 240], "plain": 8, "profil": 8, "indic": [8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 45, 47, 48, 49, 64, 88, 89, 105, 116, 138, 151, 206, 227, 230, 233, 235, 237, 240, 244], "fulli": [8, 24, 42, 45, 47, 48, 49, 236, 240], "frequent": 8, "techniqu": [8, 236], "program": [8, 163, 244], "functorch": [8, 10, 141, 144, 236, 243], "incl": 8, "suit": [8, 53, 237, 244], "mujoco_instal": 8, "valueerror": [8, 236], "bad": 8, "fds_to_keep": 8, "view": [8, 21, 24, 25, 42, 45, 47, 48, 49, 116, 147, 235, 236, 240, 243, 244], "expand": [8, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 141, 144, 235, 240, 243], "new_shap": 8, "content": [8, 12, 13, 15, 27, 47, 105, 116, 236, 237, 240, 243], "lost": 8, "permut": [8, 243, 244], "spin": [9, 244], "deep": [9, 63, 106, 107, 108, 109, 111, 138, 154, 162, 168, 169, 211, 235], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 76, 97, 235, 236, 237], "reddit": 9, "reagent": 9, "orient": [9, 244], "baselines3": 9, "tf": 9, "agent": [9, 120, 240], "bandit": 9, "tensorflow": 9, "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "simpl": [9, 24, 25, 42, 45, 47, 48, 49, 106, 142, 167, 174, 235, 236, 237, 244], "sequenti": [9, 24, 42, 45, 47, 48, 49, 143, 144, 237, 240, 241, 244], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 243], "grade": 9, "factori": 9, "throughput": [9, 235], "cherri": 9, "jaxrl": 9, "space": [9, 25, 30, 67, 123, 135, 137, 138, 141, 142, 144, 147, 148, 235, 236, 237, 240, 243, 244], "mbrl": [9, 46], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "dist": [10, 243], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 237], "notebook": [10, 235, 236, 237, 238, 239, 240, 241, 243, 244], "24": [10, 237, 240], "11": [10, 21, 25, 43, 91, 104, 118, 237, 239, 240], "2022": [10, 243], "12": [10, 237, 240, 241], "pip": [10, 243, 244], "pip3": [10, 237], "extra": [10, 24, 42, 45, 47, 48, 49, 97, 103, 236, 237], "url": 10, "org": [10, 26, 33, 63, 79, 106, 107, 108, 109, 112, 113, 118, 120, 122, 123, 125, 126, 138, 147, 154, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 174, 177, 178, 181, 208, 211, 216, 221, 235, 236, 241], "whl": 10, "latest": [10, 47, 199, 237, 240, 243], "There": [10, 233, 236, 237, 240, 244], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": 11, "str": [11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 42, 44, 45, 47, 48, 49, 52, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 96, 97, 100, 102, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 131, 135, 136, 137, 138, 139, 141, 142, 145, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 206, 208, 211, 216, 218, 219, 221, 227, 237], "from_vers": 11, "to_vers": 11, "intersect": 11, "eg": [11, 36, 37, 38, 39, 67], "v": [11, 97, 115, 163, 168, 236, 243], "longer": [11, 236], "fun": [11, 237], "self": [11, 24, 42, 45, 46, 47, 48, 49, 66, 79, 89, 93, 96, 104, 118, 135, 137, 141, 145, 147, 150, 233, 240, 243], "x": [11, 17, 20, 24, 91, 105, 111, 113, 115, 116, 118, 147, 150, 151, 153, 177, 178, 179, 180, 181, 182, 183, 185, 202, 236, 237, 240, 243], "27": [11, 237, 240], "create_env_fn": [12, 13, 15, 16, 43, 48, 49, 235, 243], "callabl": [12, 13, 15, 16, 24, 26, 27, 28, 42, 43, 45, 46, 47, 48, 49, 153, 209, 210, 225, 226, 227], "tensordictbas": [12, 13, 15, 16, 17, 20, 24, 28, 29, 42, 44, 45, 47, 48, 49, 63, 64, 66, 69, 70, 71, 74, 75, 78, 80, 81, 85, 86, 88, 89, 90, 92, 95, 97, 103, 104, 117, 118, 135, 137, 138, 141, 142, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 202, 240], "int": [12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 52, 63, 64, 65, 66, 67, 71, 72, 75, 76, 79, 80, 82, 87, 88, 90, 93, 94, 96, 99, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 125, 126, 127, 128, 135, 137, 138, 140, 141, 142, 147, 148, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 168, 184, 185, 193, 194, 195, 198, 199, 202, 204, 208, 211, 216, 218, 219, 221, 225, 226, 227, 240], "200": [12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 59, 60, 106, 107, 112, 125, 126, 240], "total_fram": [12, 13, 15, 16, 202, 205, 223, 233, 235, 236, 237, 243], "create_env_kwarg": [12, 13, 15, 16, 43, 47, 48, 49, 235], "dict": [12, 13, 15, 16, 20, 21, 22, 24, 42, 43, 45, 47, 48, 49, 89, 93, 97, 105, 106, 107, 108, 109, 113, 115, 116, 142, 188, 192, 198, 209, 210, 211, 218, 221, 225, 226, 227, 237, 244], "postproc": [12, 13, 15, 16, 235, 236], "given": [12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 46, 47, 48, 49, 66, 67, 76, 79, 89, 93, 96, 103, 104, 112, 118, 138, 141, 142, 143, 144, 147, 148, 153, 156, 157, 173, 174, 175, 176, 194, 198, 223, 233, 235, 236, 237, 240, 244], "datacollector": [12, 13, 15, 16, 142, 237], "synchron": [12, 47, 225, 226, 236, 237], "recept": 12, "safe": [12, 13, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 135, 138, 141, 142, 149, 235, 243], "env_mak": [12, 13, 15, 223, 244], "lambda": [12, 13, 15, 16, 43, 159, 161, 176, 179, 180, 182, 183, 223, 243, 244], "50": [12, 13, 15, 237, 240, 241], "linear": [12, 13, 15, 24, 42, 45, 46, 47, 48, 49, 66, 79, 89, 93, 96, 104, 105, 116, 118, 119, 120, 121, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 141, 144, 145, 147, 148, 150, 174, 175, 176, 223, 235, 236, 239, 241, 243], "2000": [12, 13, 15, 237], "enumer": [12, 13, 15, 24, 42, 45, 47, 48, 49, 235, 236, 237, 243], "step_count": [12, 13, 15, 88, 236, 237, 243], "int64": [12, 13, 15, 18, 21, 22, 23, 25, 136, 138, 140, 147, 148, 213, 236, 237, 240, 243, 244], "shutdown": [12, 13, 15, 16, 235, 236, 243], "del": [12, 13, 15, 235, 236, 237, 239, 243, 244], "randompolici": [12, 13, 15, 229], "total": [12, 13, 15, 16, 18, 22, 23, 25, 45, 155, 164, 165, 193, 195, 198, 202, 205, 206, 235, 236, 237, 239, 240, 241, 242, 243, 244], "lifespan": [12, 13, 15], "divis": [12, 13, 15, 236], "endless": [12, 13, 15], "accommod": [12, 13, 15, 16], "kept": [12, 13, 15, 16, 48, 49, 67, 92, 99, 103, 114, 128, 129], "long": [12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 67, 236], "dictionari": [12, 13, 15, 16, 20, 24, 42, 45, 47, 48, 49, 89, 93, 142, 225, 226, 227, 233, 235, 237, 240, 244], "span": [12, 13, 15, 16], "unless": [12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 237], "n_step": [12, 13, 15, 16, 24, 138, 235, 237], "independ": [12, 13, 15, 16, 92, 94, 163, 168, 233, 235, 236, 243], "ignor": [12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 67, 69, 86, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151, 244], "mainli": [12, 13, 15, 16, 240], "post": [12, 13, 15, 24, 42, 45, 47, 48, 49, 235, 236], "multistep": [12, 13, 15, 229, 235, 236], "accord": [12, 13, 15, 16, 76, 84, 114, 119, 125, 128, 129, 240], "return_same_td": [12, 13, 15], "cautious": [12, 13, 15, 165], "whole": [12, 13, 15, 20, 24, 42, 45, 47, 48, 49, 93, 193, 236, 237], "boolm": [12, 13], "update_policy_weight_": [12, 13], "sync": [12, 13, 204, 223, 233, 235, 243], "async": [12, 13, 235, 243], "load_state_dict": [12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 93, 97, 233, 235], "state_dict": [12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 93, 97, 227, 233, 235, 236, 244], "ordereddict": [12, 13, 15, 16, 24, 42, 45, 47, 48, 49, 93, 97, 236], "form": [12, 13, 16, 24, 26, 27, 28, 42, 45, 47, 48, 49, 97, 153, 155, 164, 165, 202], "worker0": [12, 13, 16], "state_dict0": [12, 13, 16], "worker1": [12, 13, 16], "state_dict1": [12, 13, 16], "reset_idx": [12, 13, 16], "static_se": [12, 13, 15, 16, 42, 45, 47, 48, 49, 93], "integ": [12, 13, 15, 16, 22, 23, 24, 25, 32, 39, 42, 45, 47, 48, 49, 72, 76, 88, 105, 116], "increment": [12, 13, 15, 16, 42, 45, 47, 48, 49, 88, 164], "env_fn": [12, 13, 15, 16, 43, 225, 226], "v0": [12, 13, 16, 45, 54, 55, 57, 58, 66, 93, 97, 223], "env_fn_parallel": [12, 13, 15, 16], "6": [12, 13, 15, 16, 58, 76, 105, 110, 115, 116, 127, 145, 208, 211, 213, 216, 218, 221, 236, 237, 240, 241, 242, 243, 244], "out_se": [12, 13, 15, 16, 244], "shut": [12, 13, 15, 16, 236], "irrevers": [12, 13, 16], "arg": [13, 20, 24, 29, 36, 37, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 79, 87, 93, 94, 95, 96, 105, 116, 131, 132, 136, 140, 190, 195, 199, 202, 227, 235, 236, 243], "kwarg": [13, 15, 16, 20, 24, 36, 37, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 79, 87, 89, 93, 94, 95, 96, 105, 106, 107, 108, 109, 113, 114, 116, 117, 124, 127, 129, 131, 132, 136, 139, 140, 142, 155, 164, 173, 185, 188, 190, 192, 195, 202, 208, 209, 210, 211, 216, 218, 221, 224, 225, 226, 235, 236, 237, 243], "envcreat": [15, 223, 224, 227, 229, 235, 236, 243, 244], "chunk": 15, "policy_state_dict": 15, "env_state_dict": 15, "close": [15, 16, 45, 47, 155, 164, 165, 235, 239, 240, 243], "pin_memori": [16, 26, 27, 28, 48, 49, 78, 235, 243], "paradigm": 16, "regular": [16, 141, 142, 148, 158, 204, 233, 235, 244], "prefer": [16, 80, 86, 237], "mere": 16, "greater": [16, 235, 236, 243], "signal": [16, 88, 235, 237], "sent": [16, 36, 37, 97], "server": 16, "length": [16, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 48, 49, 80, 104, 105, 106, 108, 111, 116, 118, 141, 193, 199, 235, 236, 237, 240, 244], "postprocessor": 16, "format": [16, 23, 24, 25, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141, 236, 244], "rollout_tensordict": 17, "max": [17, 25, 28, 33, 67, 90, 127, 128, 129, 155, 166, 168, 235, 237], "durat": [17, 236], "discret": [18, 21, 22, 23, 25, 32, 67, 124, 147, 148, 158, 236, 244], "5": [18, 43, 47, 58, 59, 60, 104, 105, 112, 114, 115, 116, 118, 128, 129, 136, 140, 147, 148, 163, 164, 235, 236, 240, 241, 243, 244], "assert_is_in": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "belong": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "otherwis": [18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 67, 76, 89, 93, 97, 114, 128, 129, 160, 168, 198, 199, 233, 235, 236, 237, 240, 244], "encod": [18, 19, 20, 21, 22, 23, 25, 27, 30, 31, 32, 67, 123, 124, 125, 136, 140, 147, 148, 153, 236, 237, 240], "val": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 236, 243], "ndarrai": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 45, 138], "np": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 45, 235, 240], "tupl": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 45, 47, 48, 49, 76, 81, 106, 115, 116, 121, 156, 159, 174, 175, 176, 196, 200, 212, 214, 217, 220], "compli": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "current": [18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 45, 47, 48, 49, 56, 80, 93, 100, 103, 112, 115, 126, 138, 147, 148, 191, 208, 216, 233, 236, 237, 240, 243, 244], "least": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "complient": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "singleton": [18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 105, 116], "tensor_to_index": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "is_in": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 244], "project": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 67, 135, 137, 138, 141, 142, 236, 243, 244], "back": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 141, 142, 235, 237, 240], "rand": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 46, 51, 58, 104, 118, 240, 243, 244], "uniform": [18, 19, 20, 21, 22, 23, 25, 26, 28, 30, 31, 32, 33], "unbound": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 89, 240], "to_numpi": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "transformed_in": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 92, 93, 121, 127, 227], "type_check": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32], "fill": [18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 89, 240, 241], "float": [19, 21, 24, 25, 26, 28, 31, 33, 42, 45, 47, 48, 49, 66, 68, 76, 79, 83, 84, 89, 91, 93, 96, 97, 110, 112, 114, 118, 119, 120, 125, 126, 127, 129, 135, 137, 138, 141, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 200, 235, 236, 244], "upper": 19, "unnam": 20, "effect": [20, 24, 42, 45, 47, 48, 49, 85, 93, 202, 236, 244], "pixels_spec": 20, "boundedtensorspec": [20, 132, 133, 134, 137, 138, 139, 229, 237, 240, 243, 244], "32": [20, 59, 60, 105, 106, 107, 113, 116, 122, 123, 235, 236, 237, 240, 241, 243, 244], "observation_vector_spec": 20, "33": [20, 24, 42, 45, 47, 48, 49, 105, 116, 237, 240], "composite_spec": 20, "observation_vector": [20, 64, 208, 211, 216, 218, 221, 235], "td": [20, 50, 51, 52, 53, 54, 55, 57, 58, 64, 67, 68, 74, 76, 91, 93, 97, 103, 104, 117, 118, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 175, 176, 179, 180, 182, 183, 184, 193, 201, 208, 211, 213, 216, 218, 221, 240, 243, 244], "within": [20, 24, 29, 42, 45, 47, 48, 49, 97, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151, 240, 243], "randn": [20, 76, 115, 121, 131, 132, 133, 134, 136, 139, 140, 141, 144, 145, 147, 148, 174, 175, 176, 201, 243, 244], "td_project": 20, "include_nest": 20, "leaves_onli": 20, "keysview": 20, "reflect": [20, 103, 205, 237], "immedi": [20, 24, 42, 45, 47, 48, 49, 173], "children": [20, 24, 42, 45, 47, 48, 49], "selected_kei": [20, 86, 235], "onehottensorspec": 21, "categor": [21, 23, 25, 124, 147, 148], "action_valu": [21, 25, 136, 140, 147, 148, 213, 236], "arang": [21, 25, 136, 147, 193], "argmax": [21, 136, 140, 147, 148], "dim": [21, 63, 64, 89, 94, 115, 227, 236, 240], "chosen_action_valu": [21, 25, 140, 213, 236], "outcom": [21, 25, 110, 127], "to_one_hot": [21, 22], "hot": [21, 22, 23, 25, 67, 124, 136, 140, 147, 148, 236], "to_one_hot_spec": [21, 22], "onehotdiscretetensorspec": [21, 136, 140, 147, 148, 229], "convert": [21, 22, 23, 24, 25, 42, 45, 47, 48, 49, 66, 68, 79, 89, 93, 96, 97, 141, 153, 236, 237, 240], "nvec": [22, 23], "cardin": [22, 23, 147, 148, 237], "ax": [22, 119, 120], "multionehotdiscretetensorspec": [22, 229], "use_regist": [23, 25], "to_categor": [23, 25], "to_categorical_spec": [23, 25], "multidiscretetensorspec": [23, 229], "gamma": [24, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 223, 235, 236, 237, 243], "sutton": 24, "1988": 24, "predict": [24, 112, 117, 118, 146, 158, 160, 161, 163, 168, 173, 236], "tempor": [24, 118, 175, 236], "44": [24, 237, 240, 241], "discount": [24, 43, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 235, 236, 237], "ahead": [24, 244], "add_modul": [24, 42, 45, 47, 48, 49], "child": [24, 42, 45, 47, 48, 49], "fn": [24, 42, 45, 47, 48, 49, 121, 225, 226], "recurs": [24, 42, 45, 47, 48, 49], "init": [24, 42, 45, 47, 48, 49, 235, 236, 237], "init_weight": [24, 42, 45, 47, 48, 49], "m": [24, 42, 45, 47, 48, 49, 67, 142, 240], "fill_": [24, 42, 45, 47, 48, 49, 236, 244], "net": [24, 42, 45, 47, 48, 49, 115, 166, 218, 223, 236, 240, 241, 243], "in_featur": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 105, 106, 107, 108, 109, 115, 116, 119, 120, 132, 141, 243], "out_featur": [24, 42, 45, 46, 47, 48, 49, 66, 79, 89, 93, 96, 104, 105, 106, 107, 108, 109, 112, 113, 115, 116, 118, 119, 120, 132, 136, 141, 235, 243], "bia": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 105, 112, 116, 119, 120, 121, 137, 138, 141, 151, 152, 153, 236, 237, 243], "requires_grad": [24, 42, 45, 47, 48, 49, 235], "bfloat16": [24, 42, 45, 47, 48, 49], "cast": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 97, 141, 208, 211, 213, 216, 218, 221, 244], "datatyp": [24, 42, 45, 47, 48, 49], "direct": [24, 42, 45, 47, 48, 49, 236], "member": [24, 42, 45, 47, 48, 49], "xdoctest": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "skip": [24, 42, 45, 47, 48, 49, 72, 93, 99, 142, 184, 185, 195, 198, 237, 240], "buf": [24, 42, 45, 47, 48, 49], "20l": [24, 42, 45, 47, 48, 49], "1l": [24, 42, 45, 47, 48, 49], "5l": [24, 42, 45, 47, 48, 49], "associ": [24, 42, 45, 47, 48, 49, 125, 227], "copi": [24, 42, 45, 47, 48, 49, 81, 93, 103, 235, 236], "doubl": [24, 26, 28, 31, 42, 45, 47, 48, 49, 66, 68, 79, 89, 91, 93, 96, 141, 157, 158, 162, 166, 169, 235, 236, 237, 244], "eval": [24, 42, 45, 47, 48, 49, 93, 97, 235, 236, 237], "evalu": [24, 42, 45, 47, 48, 49, 93, 110, 124, 129, 166, 209, 210, 236, 237], "particular": [24, 42, 45, 47, 48, 49, 93, 233, 236, 239], "dropout": [24, 42, 45, 47, 48, 49, 93], "batchnorm": [24, 42, 45, 47, 48, 49, 93], "disabl": [24, 42, 45, 47, 48, 49, 93, 114, 128, 129, 235], "comparison": [24, 42, 45, 47, 48, 49, 93], "similar": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 95, 96, 97, 141, 142, 235, 236, 237, 240, 244], "confus": [24, 42, 45, 47, 48, 49, 93], "extra_repr": [24, 42, 45, 47, 48, 49], "represent": [24, 42, 45, 47, 48, 49, 79, 96, 235, 240, 241, 244], "string": [24, 42, 45, 47, 48, 49, 79, 96, 142, 153, 184, 201, 208, 216, 218, 221, 237], "nontermin": 24, "original_reward": 24, "newli": 24, "OR": 24, "latter": [24, 42, 45, 47, 48, 49, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151, 225, 226], "reshap": [24, 116, 237], "get_buff": [24, 42, 45, 47, 48, 49], "throw": [24, 42, 45, 47, 48, 49, 244], "docstr": [24, 42, 45, 47, 48, 49], "get_submodul": [24, 42, 45, 47, 48, 49], "explan": [24, 42, 45, 47, 48, 49], "qualifi": [24, 42, 45, 47, 48, 49], "referenc": [24, 42, 45, 47, 48, 49], "attributeerror": [24, 42, 45, 47, 48, 49], "invalid": [24, 42, 45, 47, 48, 49], "resolv": [24, 42, 45, 47, 48, 49], "get_extra_st": [24, 42, 45, 47, 48, 49, 97], "set_extra_st": [24, 42, 45, 47, 48, 49, 97], "picklabl": [24, 42, 45, 47, 48, 49, 97], "ensur": [24, 26, 28, 33, 42, 45, 47, 48, 49, 63, 79, 97, 149, 235, 236, 237, 240], "guarante": [24, 36, 37, 38, 39, 42, 45, 47, 48, 49, 97, 243], "pickl": [24, 42, 45, 47, 48, 49, 97], "get_paramet": [24, 42, 45, 47, 48, 49], "sai": [24, 42, 45, 47, 48, 49, 241, 244], "net_b": [24, 42, 45, 47, 48, 49], "net_c": [24, 42, 45, 47, 48, 49], "conv": [24, 42, 45, 47, 48, 49, 105, 236], "conv2d": [24, 42, 45, 47, 48, 49, 105, 243], "16": [24, 42, 45, 47, 48, 49, 237, 240, 241], "kernel_s": [24, 42, 45, 47, 48, 49, 105, 106, 107, 236, 243], "stride": [24, 42, 45, 47, 48, 49, 105, 106, 107, 113, 236, 243], "diagram": [24, 42, 45, 47, 48, 49], "show": [24, 42, 45, 47, 48, 49, 235, 236, 237, 240, 243], "itself": [24, 42, 45, 47, 48, 49, 237], "degre": [24, 42, 45, 47, 48, 49], "named_modul": [24, 42, 45, 47, 48, 49], "o": [24, 42, 45, 47, 48, 49], "transit": [24, 42, 45, 47, 48, 49, 146, 235, 236, 240], "half": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141, 235], "ipu": [24, 42, 45, 47, 48, 49], "strict": [24, 42, 45, 47, 48, 49, 93], "descend": [24, 42, 45, 47, 48, 49, 93], "exactli": [24, 42, 45, 47, 48, 49, 56, 93, 235], "persist": [24, 42, 45, 47, 48, 49, 93, 103], "enforc": [24, 42, 45, 47, 48, 49, 93, 143, 240], "missing_kei": [24, 42, 45, 47, 48, 49, 93], "unexpected_kei": [24, 42, 45, 47, 48, 49, 93], "namedtupl": [24, 42, 45, 47, 48, 49, 93], "duplic": [24, 42, 45, 47, 48, 49, 157, 158], "l": [24, 42, 45, 47, 48, 49, 173, 237, 240], "idx": [24, 42, 45, 47, 48, 49], "named_buff": [24, 42, 45, 47, 48, 49, 236], "prefix": [24, 42, 45, 47, 48, 49, 93, 184, 244], "remove_dupl": [24, 42, 45, 47, 48, 49], "prepend": [24, 42, 45, 47, 48, 49], "running_var": [24, 42, 45, 47, 48, 49], "named_children": [24, 42, 45, 47, 48, 49], "conv4": [24, 42, 45, 47, 48, 49], "conv5": [24, 42, 45, 47, 48, 49], "memo": [24, 42, 45, 47, 48, 49], "named_paramet": [24, 42, 45, 47, 48, 49, 236], "register_backward_hook": [24, 42, 45, 47, 48, 49], "removablehandl": [24, 42, 45, 47, 48, 49], "deprec": [24, 42, 45, 47, 48, 49, 93, 244], "favor": [24, 42, 45, 47, 48, 49, 237], "register_full_backward_hook": [24, 42, 45, 47, 48, 49], "register_buff": [24, 42, 45, 47, 48, 49], "running_mean": [24, 42, 45, 47, 48, 49], "alongsid": [24, 42, 45, 47, 48, 49], "num_featur": [24, 42, 45, 47, 48, 49], "register_forward_hook": [24, 42, 45, 47, 48, 49, 147, 148], "with_kwarg": [24, 42, 45, 47, 48, 49], "posit": [24, 26, 27, 28, 29, 42, 45, 47, 48, 49, 71, 72, 87, 88, 90, 93, 94, 121, 237, 240], "signatur": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141, 150, 240], "possibli": [24, 42, 45, 47, 48, 49, 105, 141, 202, 237, 240, 244], "register_module_forward_hook": [24, 42, 45, 47, 48, 49], "register_forward_pre_hook": [24, 42, 45, 47, 48, 49], "invok": [24, 42, 45, 47, 48, 49], "And": [24, 42, 45, 47, 48, 49], "forward_pr": [24, 42, 45, 47, 48, 49], "register_module_forward_pre_hook": [24, 42, 45, 47, 48, 49], "respect": [24, 42, 45, 47, 48, 49, 62, 66, 79, 80, 89, 93, 96, 126, 141, 145, 197, 237], "grad_input": [24, 42, 45, 47, 48, 49], "grad_output": [24, 42, 45, 47, 48, 49], "subsequ": [24, 42, 45, 47, 48, 49], "technic": [24, 42, 45, 47, 48, 49, 236], "similarli": [24, 42, 45, 47, 48, 49, 143, 144, 163, 235, 244], "caller": [24, 42, 45, 47, 48, 49], "register_module_full_backward_hook": [24, 42, 45, 47, 48, 49], "register_full_backward_pre_hook": [24, 42, 45, 47, 48, 49], "backward_pr": [24, 42, 45, 47, 48, 49], "register_module_full_backward_pre_hook": [24, 42, 45, 47, 48, 49], "register_load_state_dict_post_hook": [24, 42, 45, 47, 48, 49], "incompatible_kei": [24, 42, 45, 47, 48, 49], "thrown": [24, 42, 45, 47, 48, 49], "clear": [24, 42, 45, 47, 48, 49, 194], "register_modul": [24, 42, 45, 47, 48, 49, 233], "alia": [24, 42, 45, 47, 48, 49], "register_paramet": [24, 42, 45, 47, 48, 49], "register_state_dict_pre_hook": [24, 42, 45, 47, 48, 49], "keep_var": [24, 42, 45, 47, 48, 49, 93], "made": [24, 36, 37, 38, 39, 42, 45, 47, 48, 49, 138, 235, 241], "requires_grad_": [24, 42, 45, 47, 48, 49, 235], "autograd": [24, 42, 45, 47, 48, 49, 93], "freez": [24, 42, 45, 47, 48, 49], "finetun": [24, 42, 45, 47, 48, 49], "gan": [24, 42, 45, 47, 48, 49], "share_memori": [24, 42, 43, 45, 47, 48, 49, 235], "share_memory_": [24, 42, 45, 47, 48, 49, 243], "destin": [24, 42, 45, 47, 48, 49, 93, 103], "averag": [24, 42, 45, 47, 48, 49, 93, 97, 138, 159, 160, 200, 235, 237], "shallow": [24, 42, 45, 47, 48, 49, 93], "pleas": [24, 42, 45, 47, 48, 49, 93, 230], "detach": [24, 42, 45, 47, 48, 49, 93, 235, 236], "non_block": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141, 236], "memory_format": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "channels_last": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "Its": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "complex": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141, 235, 236], "integr": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 109, 118, 141, 240, 241], "unchang": [24, 42, 45, 47, 48, 49, 66, 67, 79, 89, 93, 96, 141], "tri": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "host": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "pin": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "4d": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "ignore_w": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "1913": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "3420": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "5113": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "2325": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "torch_doctest_cuda1": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "gpu1": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "1914": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "5112": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "2324": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "float16": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "cdoubl": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "3741": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "j": [24, 26, 33, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141, 233, 236], "2382": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "5593": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "4443": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "complex128": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "6122": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "1150": [24, 42, 45, 47, 48, 49, 66, 79, 89, 93, 96, 141], "to_empti": [24, 42, 45, 47, 48, 49], "dst_type": [24, 42, 45, 47, 48, 49], "xpu": [24, 42, 45, 47, 48, 49], "set_to_non": [24, 42, 45, 47, 48, 49], "unidimension": 25, "keepdim": 25, "user_regist": 25, "experiment": [25, 142], "priori": 25, "definit": [25, 39], "uniqu": 25, "discretebox": [25, 244], "discretetensorspec": [25, 229, 244], "alpha": [26, 28, 33, 105, 166, 168, 235, 236, 243], "ep": [26, 28, 33, 97, 138, 155, 169, 200], "1e": [26, 28, 33, 97, 110, 112, 121, 127, 237], "08": [26, 28, 33, 237, 240], "collate_fn": [26, 27, 28, 243], "prefetch": [26, 27, 28, 235, 236], "schaul": [26, 33], "quan": [26, 33], "antonogl": [26, 33], "silver": [26, 33], "2015": [26, 33], "arxiv": [26, 33, 63, 79, 106, 107, 108, 109, 112, 113, 118, 120, 122, 123, 125, 126, 138, 147, 154, 158, 159, 160, 161, 162, 163, 165, 168, 169, 174, 177, 178, 181, 208, 211, 216, 221, 235, 241], "ab": [26, 33, 79, 97, 112, 113, 118, 120, 122, 123, 125, 126, 154, 159, 160, 161, 162, 163, 165, 168, 208, 216, 235, 241], "1511": [26, 33, 113], "05952": [26, 33], "expon": [26, 28, 33], "\u03b1": [26, 28, 33], "determin": [26, 28, 33, 79, 96, 138, 236], "delta": [26, 28, 33, 127, 142, 229], "null": [26, 28, 33, 62, 235], "max_siz": [26, 27, 28, 36, 38, 39, 236], "1_000": [26, 27, 28], "merg": [26, 27, 28, 240], "mini": [26, 27, 28], "style": [26, 27, 28], "rb": [26, 27, 28, 236, 241, 243], "insert_transform": [26, 27, 28, 29], "insert": [26, 27, 28, 29, 40, 41, 94, 236], "return_info": [26, 27, 28, 29], "sampler": [26, 27, 28, 29, 33, 34, 36, 37, 38, 39, 80, 229, 235, 237], "info": [26, 27, 28, 29, 42, 45, 47, 48, 49, 59, 60, 98], "writer": [27, 40, 229, 237], "randomsampl": [27, 229, 235], "roundrobinwrit": [27, 229], "priority_kei": [28, 29, 157, 158, 163, 168, 243], "td_error": [28, 29, 156, 157, 158, 163, 166, 168, 235, 243], "reduct": [28, 33], "prioritizedreplaybuff": [28, 229, 243], "update_tensordict_prior": [28, 235, 243], "min": [28, 33, 127, 128, 129, 155, 166, 168, 235, 236, 237], "median": [28, 33, 142], "include_info": [28, 29], "kw": [29, 40], "replaybuff": [29, 41, 80, 219, 223, 229, 237, 241, 243], "meta": [30, 44, 233, 237], "describ": [30, 64, 92, 127, 128, 191, 208, 216, 237, 240, 244], "max_capac": [33, 235], "update_prior": [33, 199, 233, 243], "uniformli": [34, 244], "scratch_dir": [36, 235], "memmap": [36, 48, 49, 97, 199], "attach": [36, 37, 38, 39, 236], "entiti": [36, 37, 38, 39], "alloc": [37, 235], "__len__": 39, "roundrobin": 40, "piec": [40, 41, 237, 240], "_inplace_upd": [42, 47, 48, 49, 50, 51, 59, 60, 93], "_batch_lock": [42, 47, 48, 49, 50, 51, 59, 60, 93], "run_type_check": [42, 46], "batch_lock": [42, 44, 45, 47, 48, 49, 89, 93, 240], "environn": [42, 45, 46, 47, 48, 49, 93], "immut": [42, 45, 47, 48, 49, 81, 93, 208, 216], "fake_tensordict": [42, 45, 47, 48, 49, 235, 236], "fake": [42, 45, 47, 48, 49, 235, 236], "overridden": [42, 45, 47, 48, 49, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151], "recip": [42, 45, 47, 48, 49, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151], "afterward": [42, 45, 47, 48, 49, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151, 244], "former": [42, 45, 47, 48, 49, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151], "silent": [42, 45, 47, 48, 49, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 126, 135, 137, 138, 151], "rand_act": [42, 45, 47, 48, 49], "_step": [42, 45, 47, 48, 49, 71, 81], "privat": [42, 45, 47, 48, 49, 240, 244], "_reset": [42, 45, 46, 47, 48, 49, 104, 118], "overwritten": [42, 45, 47, 48, 49, 71], "callback": [42, 45, 47, 48, 49], "auto_reset": [42, 45, 47, 48, 49, 236, 240], "auto_cast_to_devic": [42, 45, 47, 48, 49], "break_when_any_don": [42, 45, 47, 48, 49], "return_contigu": [42, 45, 47, 48, 49, 99, 239], "stop": [42, 45, 47, 48, 49, 237, 243, 244], "soon": [42, 45, 47, 48, 49], "lazystackedtensordict": [42, 45, 46, 47, 48, 49, 104, 118, 239, 243, 244], "concomitt": [42, 45, 47, 48, 49], "workspac": [42, 45, 47, 48, 49], "carri": [42, 45, 47, 48, 49, 236, 240], "creator": [43, 209, 210, 225, 226, 227], "substitut": [43, 97], "multiprocess": [43, 44, 97, 236, 237, 240, 244], "vecnorm": [43, 227], "mp": [43, 97], "env_creat": [43, 235], "test_env1": 43, "_td": 43, "observation_count": [43, 244], "test_env2": 43, "sleep": [43, 244], "__name__": [43, 236], "__main__": 43, "p1": 43, "p2": 43, "join": [43, 208, 216, 237], "9934": 43, "env_str": 44, "union": [45, 105, 166], "discard": [45, 103, 184, 244], "info_dict_read": 45, "set_info_dict_read": 45, "put": [45, 97, 227, 236, 237, 240], "f": [45, 153, 174, 175, 176, 235, 236, 237, 240, 244], "read_act": 45, "read_don": 45, "reader": [45, 235, 236], "frame_skip": [45, 52, 53, 54, 57, 72, 195, 198, 205, 233, 235, 237, 243], "broken": [45, 99], "read_ob": 45, "dictat": [45, 142, 240], "inner": [45, 67, 233, 235, 237, 244], "read_reward": 45, "total_reward": 45, "step_reward": 45, "far": [45, 114, 128, 129, 240, 244], "baseinfodictread": 45, "info_dict": 45, "hoc": 45, "manner": [45, 79, 235, 236, 237, 239, 240], "dict_read": 45, "default_info_dict_read": 45, "my_info_kei": 45, "some_env": 45, "limit": [46, 235, 240], "safeti": 46, "constraint": [46, 237], "behav": [46, 56, 124, 163, 241], "unboundedcontinuoustensorspec": [46, 89, 104, 131, 132, 133, 134, 141, 144, 145, 229, 237, 240, 244], "mymbenv": [46, 104, 118], "world_model": [46, 104, 118, 160], "super": [46, 104, 118, 145, 147, 150, 235, 236, 240, 243], "hidden_observ": [46, 104, 118], "mlp": [46, 104, 105, 106, 107, 108, 109, 115, 118, 132, 136, 208, 216, 218, 221, 229, 235, 236, 239, 241, 243], "worldmodelwrapp": [46, 104, 118, 229], "safemodul": [46, 104, 117, 132, 133, 134, 135, 137, 138, 139, 142, 144, 146, 149, 150, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 198, 209, 210, 223, 229, 243], "activation_class": [46, 104, 105, 106, 107, 108, 109, 112, 113, 116, 118, 235, 236, 243], "relu": [46, 104, 118, 121, 153], "activate_last_lay": [46, 104, 109, 116, 118], "depth": [46, 104, 105, 106, 107, 108, 109, 112, 113, 116, 118, 122, 123, 136, 236, 239], "less": [47, 225, 226, 235, 236, 237, 243], "equal": [47, 48, 49, 75, 76, 105, 111, 116, 170, 193, 225, 226, 237, 241], "readthedoc": 47, "io": 47, "en": 47, "python_interfac": 47, "num_work": [47, 48, 49, 235, 236], "thread": 47, "task_id": 47, "my_env_fun": [48, 49], "custom_attribute_list": [48, 49], "custom_attribut": [48, 49], "custom_method_list": [48, 49], "custom_method": [48, 49], "deploi": [48, 49], "creation": [48, 49, 244], "slight": [48, 49, 236], "overhead": [48, 49], "share_individual_td": [48, 49], "lazi": [48, 49, 79, 119, 143, 144, 235, 236, 239, 244], "shared_memori": [48, 49], "policy_proof": [48, 49], "ll": [48, 49, 235, 236, 237, 244], "hidden": [48, 49, 112, 115, 122, 123, 125, 126, 132, 133, 134, 141, 144, 208, 216, 239, 243], "allow_step_when_don": [48, 49], "update_kwarg": [48, 49], "googl": [50, 51, 237], "ant": [50, 51, 241], "get_environ": 51, "87": [51, 240], "acrobot": [51, 244], "fetch": [51, 241, 244], "dm_control": [52, 53, 235, 239, 244], "task_nam": 52, "cheetah": [52, 53, 235, 244], "habitat": [56, 230, 241], "serv": [56, 244], "placehold": [56, 93], "secur": 56, "jumanji": [57, 58], "snake": [57, 58], "6x6": [57, 58], "td1": 58, "int32": [58, 243], "12x12": 58, "tsp50": 58, "tsp100": 58, "vma": [59, 60], "scenario_nam": [59, 60], "flock": [59, 60], "num_env": [59, 60], "continuous_act": [59, 60], "scenario": [59, 60, 235, 240], "n_agent": [59, 60], "cohesion_rew": [59, 60], "collision_rew": [59, 60], "separation_rew": [59, 60], "velocity_rew": [59, 60], "18": [59, 60, 237, 240, 241, 244], "model_bas": [61, 104, 118], "transform_reward_spec": [62, 66, 68, 81, 83, 84, 92, 94], "success": [63, 92, 236, 240, 243], "account": [63, 236], "movement": 63, "veloc": [63, 240, 244], "propos": [63, 117, 162, 169, 218, 221], "plai": [63, 236, 237, 244], "pdf": [63, 106, 107, 108, 109, 138, 147, 158, 166, 169, 174, 177, 178, 181, 211, 218, 221], "1312": 63, "5602": 63, "_buffer": [63, 90], "transform_observation_spec": [63, 64, 65, 66, 68, 69, 71, 73, 74, 76, 81, 82, 85, 86, 88, 89, 90, 91, 92, 94, 240], "del_kei": [64, 236, 239, 240], "unsqueeze_if_oor": 64, "observation_posit": 64, "observation_veloc": 64, "delet": 64, "unsqueez": [64, 91, 94, 115, 240], "key1": [64, 193, 201], "key2": [64, 193, 201], "crop": [65, 80, 185], "center": [65, 185], "width": [65, 82], "height": [65, 82], "squar": [65, 114, 128, 129, 185], "rewardsc": [66, 93, 235, 236], "rewardclip": 66, "transformed_env": [66, 92, 93], "tranform": [66, 69, 74, 86, 88, 92, 95, 236], "dest": [66, 79, 96, 141], "transform_input_spec": [66, 67, 68, 76, 81, 88, 92, 94], "num_actions_effect": 67, "max_act": 67, "action_kei": [67, 104, 117, 118, 135, 137], "include_forward": 67, "dimension": [67, 174, 177, 178, 181], "num_act": [67, 236], "action_out": 67, "wherea": [67, 233, 235], "_call": [67, 71, 240], "inde": [67, 237, 240], "remain": [67, 120], "manual_se": [67, 76, 137, 138, 235, 240, 243, 244], "expos": [68, 143], "extern": [68, 244], "excluded_kei": 69, "finit": 70, "first_dim": 71, "last_dim": 71, "allow_positive_dim": [71, 94], "flatten": [71, 199, 235, 236], "th": [71, 94, 240], "permit": [71, 94], "exclus": [71, 227], "frameskip": 71, "repeatedli": [72, 237], "turn": [73, 94, 198, 235, 236, 240, 241], "init_kei": 74, "is_init": 74, "tracker": 74, "noop": [75, 243], "30": [75, 125, 126, 236, 237, 240], "op": [75, 135, 137, 204], "randomli": [75, 76, 89, 142, 240], "noop_max": 75, "loc": [76, 84, 114, 121, 128, 129, 132, 133, 134, 139, 142, 144, 206, 208, 216, 218, 221, 227, 235, 236, 237, 243], "out_keys_inv": [76, 77, 81, 92, 240], "standard_norm": [76, 84, 235, 236], "affin": [76, 84], "layer": [76, 97, 105, 106, 107, 112, 116, 119, 120, 122, 123, 130, 235, 236, 237, 241], "normal": [76, 97, 105, 114, 116, 121, 128, 129, 135, 142, 155, 164, 165, 198, 200, 227, 233, 244], "set_default_tensor_typ": 76, "doubletensor": 76, "isclos": 76, "next_ob": [76, 174, 175, 176, 235, 243], "rubric": [76, 144], "init_stat": [76, 235, 236, 237], "3752e": 76, "01": [76, 138, 151, 154, 155, 164, 165, 237, 240, 241, 242], "5087e": 76, "03": [76, 237, 240, 241, 242], "9294e": 76, "9636": 76, "5608": [76, 240], "6408": 76, "num_it": [76, 236, 237], "reduce_dim": [76, 235, 236, 237], "cat_dim": [76, 235, 236, 237], "keep_dim": [76, 236], "constant": [76, 233, 235, 237, 244], "statist": [76, 97, 167, 227, 235, 236, 237, 244], "approach": [76, 235, 237, 244], "gaussian": [76, 89, 104, 118, 119, 120, 135, 237], "empir": [76, 104, 118, 142, 237], "3d": 76, "third": 76, "r3m": [79, 241], "resnet": [79, 96], "visual": [79, 96, 237, 240], "embed": [79, 95, 96, 132, 133, 134, 141, 241], "ego4d": [79, 96], "paper": [79, 96, 162, 218, 221, 235, 237], "univers": [79, 96], "suraj": 79, "nair": 79, "aravind": 79, "rajeswaran": 79, "vikash": [79, 96], "kumar": [79, 96], "chelsea": 79, "finn": 79, "abhinav": 79, "gupta": 79, "2203": [79, 118, 241], "12601": [79, 241], "_init": 79, "snippet": [79, 235], "resnet50": [79, 96, 241], "model_nam": [79, 96, 191], "resnet34": 79, "resnet18": 79, "left": [79, 81, 90, 92, 96, 235, 236, 237], "empti": [79, 90, 93, 96, 235, 240], "r3m_vec": [79, 241], "feed": [79, 96], "244": [79, 96, 240], "stack_imag": [79, 96], "tread": [79, 96], "separet": [79, 96], "hub": [79, 96, 241], "cach": [79, 93, 96, 194, 241], "public": [79, 96], "resnet50_weight": [79, 96], "imagenet1k_v1": [79, 96], "download_path": [79, 96], "tensor_pixels_kei": [79, 96], "sub_seq_len": 80, "sample_dim": 80, "mask_kei": 80, "primarili": 80, "hesit": 80, "request": 80, "robust": 80, "vari": 80, "mix": 80, "NOT": 80, "improp": 80, "create_copi": 81, "renam": [81, 103, 235], "stuff": 81, "braxenv": [81, 229], "newnam": 81, "transform_output_spec": [81, 92], "untouch": [81, 92], "transform_done_spec": [81, 92], "interpol": [82, 236], "bilinear": 82, "clamp_min": [83, 138], "clamp_max": 83, "clip_min": 83, "scalar": [83, 107, 109, 119, 120, 135, 137, 138, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 236, 240], "clip_max": 83, "episod": [85, 104, 177, 178, 179, 180, 181, 182, 183, 236], "episode_": 85, "reward1": 85, "reward2": 85, "ho": 85, "excludetransform": 86, "squeeze_dim": 87, "squeez": [87, 105, 236, 240, 243], "recognis": 88, "primer": 89, "default_valu": 89, "drawn": [89, 142, 237], "unit": [89, 104, 112, 122, 123, 125, 126, 237], "transfomedenv": 89, "lock": [89, 97, 240], "mykei": 89, "dtype_or_devic": 89, "pool": 90, "255": [91, 240], "ri": 91, "randint": [91, 235], "principl": 92, "cattransform": 92, "notabl": 92, "cache_spec": 93, "anymor": [93, 141, 235], "unsqueeze_dim": [94, 240], "danger": 94, "vip": [95, 96, 241], "toward": 96, "implicit": [96, 163], "jason": 96, "ma": 96, "shagun": 96, "sodhani": 96, "dinesh": 96, "jayaraman": 96, "osbert": 96, "bastani": 96, "ami": 96, "zhang": 96, "vip_vec": 96, "shared_td": 97, "decai": [97, 135, 137, 166, 200, 235, 236, 244], "9999": [97, 240], "0001": [97, 112, 121, 237, 240], "fly": [97, 164, 237, 240, 244], "to_observation_norm": 97, "99": [97, 118, 154, 155, 159, 161, 163, 164, 165, 166, 167, 168, 173, 223, 235, 236, 237, 240, 241, 243], "underflow": [97, 200], "build_td_for_shared_vecnorm": 97, "memmori": 97, "memmap_": 97, "queue": 97, "td_share": 97, "observationnorm": [97, 227, 235, 236, 237, 243], "state_dim": [98, 125, 126], "action_dim": [98, 106, 108, 239], "gsde": [98, 166, 227], "func": [98, 243], "gsdemodul": 98, "check_dtyp": 99, "short": [99, 237], "discrep": [99, 154, 155, 156, 157, 164, 165], "imposs": 99, "heterogen": [99, 236], "caution": [99, 244], "probabilistictdmodul": [102, 116, 142, 163, 168, 173, 198], "next_tensordict": [103, 235], "keep_oth": [103, 240], "exclude_reward": 103, "exclude_don": 103, "exclude_act": 103, "THe": 103, "next_": 103, "funtion": [103, 240], "planning_horizon": [104, 118], "optim_step": [104, 118], "num_candid": [104, 118], "top_k": [104, 118], "reward_kei": [104, 118, 196, 200], "cross": 104, "entropi": [104, 154, 155, 164, 165, 166, 168], "botev": 104, "et": 104, "al": [104, 213, 244], "2013": 104, "cem": 104, "plan": [104, 117, 118], "varianc": [104, 114, 121, 128, 129, 237], "rank": 104, "k": [104, 236], "repeat": [104, 237, 240], "maximis": [104, 106, 108, 118, 235, 237, 240], "horizon": [104, 118, 237], "modelbasedenv": [104, 118], "mpc": [104, 117, 118], "candid": [104, 118], "modelbasedenvbas": [104, 117, 118, 229], "next_hidden_observ": 104, "num_cel": [105, 106, 107, 108, 109, 112, 113, 116, 132, 235, 236, 237, 243], "elu": [105, 106, 107, 108, 109, 112, 113, 236, 243], "activation_kwarg": [105, 116], "norm_class": [105, 106, 107, 116], "norm_kwarg": [105, 116], "bias_last_lay": [105, 106, 107, 108, 109, 113, 116], "aggregator_class": [105, 106, 107, 236, 243], "squashdim": [105, 106, 243], "aggregator_kwarg": [105, 106, 107, 236], "squeeze_output": [105, 106, 107, 236], "convolut": [105, 106, 107], "neural": [105, 141, 236, 237, 240, 244], "produc": [105, 116, 124, 132, 134, 185, 237, 244], "len": [105, 116, 235, 236, 240, 241, 243], "cell": [105, 116, 237], "kernel": [105, 113, 115], "device_typ": [105, 106, 107, 108, 109, 113, 116, 119, 120], "cnet": 105, "34": [105, 116, 237, 240, 241], "35": [105, 116, 237, 240], "rectangular": 105, "conv_net_kwarg": [106, 107], "mlp_net_kwarg": [106, 107, 108], "use_avg_pool": [106, 107], "WITH": [106, 107, 108, 109, 138, 169, 211], "1509": [106, 107, 108, 109, 118, 138, 162, 169, 211, 235], "02971": [106, 107, 108, 109, 138, 169, 211, 235], "convnet": [106, 229, 243], "ndims_in": 106, "avgpool": [106, 107], "128": [107, 235, 236, 240, 241], "adaptiveavgpool2d": [107, 236], "400": [108, 109, 240], "300": [108, 109, 208, 216, 240], "mlp_net_kwargs_net1": 109, "mlp_net_kwargs_net2": 109, "atol": [110, 127], "06": [110, 127, 240], "rtol": [110, 127], "batch_shap": [110, 127], "event_shap": [110, 127], "absolut": [110, 127], "toler": [110, 127], "log_prob": [110, 124, 129], "densiti": [110, 124, 129], "mass": [110, 124, 129, 240], "rsampl": [110, 124, 142], "sample_shap": [110, 124], "dqnet": 111, "atom": 111, "std_bia": 112, "std_min_val": 112, "belief": [112, 122, 125, 126], "1912": [112, 159, 160, 161], "01603": [112, 159, 160, 161], "softplu": [112, 121, 151, 152, 153], "out_features_valu": 113, "cnn_kwarg": [113, 236], "mlp_kwarg": [113, 115, 236], "duel": [113, 236], "cnn": [113, 236, 243], "06581": 113, "512": [113, 240], "upscal": [114, 128, 129], "tanh_loc": [114, 128, 129], "event_dim": [114, 127, 128], "ultim": [114, 128, 129], "poor": [114, 128, 129], "explos": [114, 128, 129], "switch": [114, 128, 129], "sigma": [114, 128, 129, 135, 138, 237], "formula": [114, 128, 129, 155, 164, 165, 237], "lstm_kwarg": 115, "embedd": 115, "next_observ": [115, 239], "time_step": 115, "2d": 115, "hidden_s": 115, "input_s": 115, "hidden0_in": 115, "hidden1_in": 115, "hidden0_out": 115, "hidden1_out": 115, "single_bias_last_lay": 116, "layer_class": 116, "layer_kwarg": 116, "perceptron": 116, "seamless": 116, "lazylinear": [116, 237, 240, 241, 243], "42": [116, 202, 237, 240], "noisylinear": [116, 119, 229, 236], "noisylazylinear": [116, 229], "At": [117, 237, 239, 240, 241], "mpcplanner": 117, "tensordict_out": [117, 244], "advantage_modul": [118, 154, 237], "temperatur": [118, 163], "mppi": 118, "covari": 118, "william": [118, 167], "aldrich": 118, "theodor": 118, "01149": 118, "hansen": 118, "wang": 118, "su": 118, "04955": 118, "ndunboundedcontinuoustensorspec": [118, 144], "valueoper": [118, 132, 133, 134, 154, 155, 164, 165, 223, 229, 235, 237], "tdlambdaestim": [118, 229], "value_net": [118, 174, 175, 176, 237], "adv": 118, "95": [118, 159, 235, 236, 237, 240], "std_init": [119, 120], "term": [119, 120, 153, 154, 204, 236, 237], "matrix": [119, 120], "initialize_paramet": 119, "isol": [119, 236], "1706": 120, "10295v3": 120, "induc": 120, "aid": 120, "emploi": 120, "scale_map": 121, "biased_softplus_1": 121, "scale_lb": [121, 125, 126], "exp": [121, 153], "module_norm": 121, "decod": 122, "1803": [122, 123], "10122": [122, 123], "rnn_hidden": 122, "latent": 123, "logit": 124, "excacli": 124, "hidden_dim": [125, 126], "posterior": [125, 160], "rssm": [125, 126, 160], "1811": [125, 126, 240], "04551": [125, 126], "obs_embed": 125, "rnn_hidden_dim": 126, "dream": 126, "recurr": [126, 236], "tanhtransform": 128, "tensordict_modul": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "translat": [131, 139], "td_modul": [131, 132, 133, 134, 139, 141, 142, 144, 145, 243], "get_policy_oper": [132, 133, 134, 208, 216], "alon": [132, 133, 134], "tdmodul": [132, 133, 134, 223], "get_critic_oper": 132, "common_oper": [132, 134], "policy_oper": [132, 133, 134], "value_oper": [132, 133, 134], "probabilisticactor": [132, 133, 134, 163, 168, 229, 235, 237], "tanhnorm": [132, 133, 134, 139, 144, 229, 237, 243], "normalparamwrapp": [132, 133, 134, 139, 144, 229, 243], "spec_hidden": [132, 134], "module_hidden": [132, 134], "td_module_hidden": [132, 134], "spec_act": [132, 134], "module_act": [132, 134], "td_module_act": [132, 133, 134], "dist_in_kei": [132, 133, 134, 139, 144], "sample_out_kei": [132, 134, 144], "distribution_class": [132, 133, 134, 139, 142, 144, 235, 237, 243], "return_log_prob": [132, 133, 134, 142, 144, 237, 243], "module_valu": [132, 133, 134], "td_module_valu": [132, 133, 134], "state_action_valu": [132, 145, 173, 211, 218, 221, 223, 235, 243], "td_clone": [132, 133, 134], "sample_log_prob": [132, 133, 134, 142, 144, 208, 216, 218, 237, 243], "tensordictmodulewrapp": [132, 209, 210, 223], "get_value_oper": [132, 133, 134, 208, 216], "action_modul": 133, "state_valu": [133, 134, 145, 174, 175, 176, 177, 178, 179, 181, 182, 208, 216, 221, 235, 237], "safesequenti": [133, 134, 146, 229], "sigma_init": 135, "sigma_end": 135, "annealing_num_step": [135, 137, 138, 235, 236], "po": [135, 137], "epsilon": [135, 137, 138, 169, 200, 236, 237], "recov": [135, 137, 143, 163, 239], "action_spac": [136, 140, 147, 148], "one_hot": [136, 140, 147, 148], "nbin": [136, 147], "qvalue_actor": [136, 140, 147, 148], "eps_init": [137, 138, 236], "eps_end": [137, 138, 236], "greedi": [137, 148, 236], "explorative_polici": [137, 138], "0000": [137, 237, 240, 243], "6986": 137, "9366": 137, "5837": 137, "8596": 137, "grad_fn": [137, 243], "addbackward0": [137, 243], "theta": [138, 237, 240], "15": [138, 159, 236, 237, 240], "mu": [138, 237], "dt": [138, 240], "x0": 138, "sigma_min": 138, "n_steps_ann": 138, "ornstein": [138, 235], "uhlenbeck": [138, 235], "ou": [138, 235], "introduc": 138, "auto": [138, 166, 168], "correl": 138, "sort": 138, "equat": [138, 153, 155, 169, 237, 240], "prev_nois": 138, "current_sigma": 138, "sqrt": 138, "ou_prev_nois": 138, "ou_step": 138, "increas": [138, 236], "anneal": 138, "_ou_prev_nois": 138, "_ou_step": 138, "probabilist": [139, 237, 243], "functional_modul": [139, 140, 141, 144, 145, 147, 148], "make_funct": [139, 140, 141, 144, 145, 147, 148, 149, 236, 243], "functionalmodul": [141, 149], "functionalmodulewithbuff": [141, 149], "obj": [141, 142, 143], "character": 141, "overflow": [141, 142], "grucel": 141, "td_fmodul": 141, "td_function": 141, "td_state": 141, "vmap": [141, 144, 236, 243], "ensembl": [141, 166], "params_repeat": 141, "td_vmap": [141, 144], "irrespect": [141, 142], "random_sampl": [141, 142], "tensor_spec": 142, "default_interaction_mod": 142, "distribution_kwarg": [142, 235, 237], "cache_dist": 142, "n_empirical_estim": 142, "probabilistictensordictmodul": [142, 143, 243], "rule": [142, 237], "interaction_mod": 142, "get_dist": [142, 143], "__call__": [142, 233], "suppli": 142, "fist": 142, "set_interaction_mod": 142, "diverg": [142, 160, 164], "partial_toler": [143, 144, 239], "probabilistictensordictsequenti": [143, 243], "tensordictsequenti": [143, 235, 239, 241, 243], "who": [143, 144], "AND": [143, 144], "scan": [143, 144], "tensordictsequenci": 144, "tensordictsequ": 144, "safeprobabilisticmodul": [144, 229], "spec1": 144, "net1": 144, "module1": 144, "td_module1": 144, "spec2": 144, "module2": 144, "td_module2": 144, "custommodul": [145, 150], "cat": [145, 243], "transition_model": 146, "reward_model": 146, "imaginari": 146, "imagin": 146, "get_reward_oper": 146, "get_transition_model_oper": 146, "var_num": [147, 148], "regard": [147, 154, 158, 165, 237, 240], "perspect": [147, 158, 237], "1707": [147, 158, 165, 208, 216], "06887": [147, 158], "mult_one_hot": [147, 148], "customdistributionalqv": 147, "log_softmax": 147, "_functorch": 149, "wrapper_typ": 149, "mislead": 150, "other_kei": 150, "typeerror": [150, 235], "min_val": [151, 153], "bias": [151, 235, 236], "_bia": 151, "invert": [152, 237], "surject": 153, "expln": 153, "biased_softplu": [153, 229], "beggin": 153, "biased_softplus_": 153, "syntax": [153, 235], "condit": [153, 235, 240], "met": [153, 240], "safeprobabilisticsequenti": [154, 155, 164, 165, 167, 209, 210, 229], "advantage_kei": [154, 155, 164, 165, 167, 174, 175, 176, 237], "value_target_kei": [154, 165, 167, 174, 175, 176, 237], "value_target": [154, 165, 167, 174, 175, 176, 237], "entropy_bonu": [154, 155, 164, 165, 237], "samples_mc_entropi": [154, 155, 164, 165], "entropy_coef": [154, 155, 164, 165, 237], "critic_coef": [154, 155, 164, 165, 237], "loss_critic_typ": [154, 155, 164, 165, 167, 237], "smooth_l1": [154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 170, 237], "1602": 154, "01783v2": 154, "advantage_diff_kei": 154, "advantage_diff": 154, "value_error": [154, 174, 175, 176], "loss_function_typ": 154, "l1": [154, 155, 156, 157, 164, 165, 166, 170, 236], "l2": [154, 155, 156, 157, 160, 161, 164, 165, 166, 170], "tha": 154, "throughout": [154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 237, 244], "essenti": [154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 240], "clip_epsilon": [155, 237], "normalize_advantag": [155, 164, 165], "threshold": [155, 237], "favour": [155, 164, 165], "mont": [155, 164, 165], "carlo": [155, 164, 165], "multipli": [155, 164, 165, 166, 168, 200, 235], "loss_funct": [155, 156, 157, 163, 165, 166, 168, 170], "actor_network": [156, 163, 166, 167, 168], "value_network": [156, 157, 158, 163, 168, 174, 175, 176, 237], "delay_actor": [156, 168], "delay_valu": [156, 157, 158, 167, 168], "input_tensordict": [156, 157, 158], "qvalueactor": [157, 229, 236], "distributionalqvalueactor": [158, 229], "unlik": [158, 165, 236, 243], "disctount": 158, "actor_model": 159, "value_model": [159, 161], "model_based_env": 159, "dreamerenv": [159, 229], "imagination_horizon": 159, "lmbda": [159, 174, 176, 177, 179, 180, 181, 182, 183, 235, 236, 237], "discount_loss": [159, 161], "unrol": 159, "lambda_kl": 160, "lambda_reco": 160, "lambda_reward": 160, "reco_loss": 160, "reward_loss": 160, "free_nat": 160, "delayed_clamp": 160, "global_averag": 160, "kl": [160, 164], "reconstruct": [160, 244], "nat": 160, "clamp": [160, 202, 240], "value_loss": [161, 235], "fake_data": 161, "loss_modul": [162, 169, 202, 222, 223, 233, 237], "dqnloss": [162, 169, 214, 229], "ddpgloss": [162, 169, 212, 223, 229, 243], "sacloss": [162, 169, 220, 229], "td3loss": [162, 169], "value_network_update_interv": 162, "contrast": 162, "06461": 162, "qvalue_network": [163, 166, 168], "num_qvalue_net": [163, 166, 168], "priotity_kei": [163, 166, 168], "expectil": 163, "2110": 163, "06169": 163, "qvalue_network_bi": [163, 168], "tau": [163, 235, 236], "antmaz": 163, "sticht": 163, "loss_value_diff": 163, "diff": 163, "dtarg": 164, "decrement": 164, "samples_mc_kl": 164, "penalti": 164, "old_polici": 164, "new_polici": 164, "adapt": [164, 235, 240], "old": [164, 244], "thu": 164, "distanc": [164, 170, 173, 174], "apart": 164, "proxim": [165, 208, 216, 237], "optimis": [165, 198, 237], "flavour": [165, 243], "constrain": 165, "clipppoloss": [165, 229, 237], "klpenppoloss": [165, 229], "regularis": 165, "06347": [165, 208, 216], "sub_sample_len": 166, "alpha_init": [166, 168], "min_alpha": [166, 168], "max_alpha": [166, 168], "fixed_alpha": [166, 168], "target_entropi": [166, 168], "delay_qvalu": [166, 168], "openreview": [166, 218], "ay8zfzm0tdd": [166, 218], "idea": [166, 233], "subsampl": [166, 193, 233], "connectionist": 167, "1992": 167, "doi": 167, "1007": 167, "bf00992696": 167, "1801": [168, 221], "01290": [168, 221], "applic": [168, 240], "1812": 168, "05905": 168, "prod": 168, "n_action": 168, "redqloss": [169, 229], "999": [169, 200, 236], "prev_param": 169, "new_param": 169, "v2": [170, 179, 180, 182, 183, 208, 211, 216, 218, 221], "strict_shap": 170, "view_a": 170, "next_val_kei": 173, "pred_next_v": 173, "usus": 173, "mse": [173, 236], "q_valu": 173, "target_valu": [173, 243], "n_steps_to_next": 173, "value_next_st": 173, "average_ga": [174, 237], "value_kei": [174, 175, 176], "1506": [174, 177, 178, 181], "02438": [174, 177, 178, 181], "exponenti": [174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 200], "propag": [174, 175, 176, 237], "throught": [174, 175, 176], "advang": 174, "gradient_mod": 174, "sign": 174, "unused_arg": 174, "target_param": [174, 175, 176], "relev": [174, 175, 176, 240], "98": [174, 175, 176, 237, 240, 241, 243], "94": [174, 176, 237, 240], "unpack": [174, 175, 176], "average_reward": [175, 176], "next_state_valu": [177, 178, 179, 180, 181, 182, 183, 229, 243], "old_stat": [177, 178, 179, 181, 182], "new_stat": [177, 178, 179, 180, 181, 182, 183], "rolling_gamma": [179, 180, 182, 183], "ti": [179, 180, 182, 183], "event": [179, 180, 182, 183], "g1": [179, 180, 182, 183], "g2": [179, 180, 182, 183], "g3": [179, 180, 182, 183], "g4": [179, 180, 182, 183], "v3": [179, 180, 182, 183], "v4": [179, 180, 182, 183, 235, 237, 241], "upcom": [179, 180, 182, 183, 235], "out_file_bas": 184, "skip_reset": 184, "dump": 184, "interv": [184, 185, 194, 204, 236, 240], "center_crop": 185, "make_grid": 185, "Will": 185, "grid": 185, "exp_nam": [186, 187, 188, 189, 190, 223, 235], "log_dir": [186, 187, 189, 192], "minim": 186, "dependeci": 186, "csv": [186, 192], "templat": 187, "tracking_uri": 188, "mlflow": [188, 192], "uri": 188, "datastor": 188, "tb_log": 189, "tensoarboard": 189, "tensorboard": [189, 192, 243], "wandb": [190, 192, 243], "experiment_nam": [191, 192], "uuid": [191, 244], "date": 191, "logger_typ": 192, "logger_nam": 192, "might": [192, 230, 235, 244], "wandb_kwarg": 192, "mlflow_kwarg": 192, "sub_traj_len": 193, "min_sub_traj_len": 193, "full": [193, 235, 236, 237, 239, 240, 241, 243, 244], "20": [193, 237, 240, 241, 242, 243, 244], "register_op": [193, 194, 195, 196, 197, 199, 200, 201, 204, 233], "process_optim_batch": [193, 199, 200, 233], "td_out": [193, 201], "_process_optim_batch_hook": [193, 233], "clear_cuda": 194, "pre_optim_step": [194, 233], "counter": [195, 233], "log_pbar": [195, 196, 198, 200, 233], "progress": [195, 196, 198, 202, 233, 244], "bar": [195, 196, 198, 202, 233], "count_fram": 195, "pre_steps_log": [195, 196, 233], "lognam": 196, "r_train": 196, "log_reward": 196, "loss_compon": 197, "appl": 197, "omit": [197, 235, 237, 240], "loss_": 197, "optimizer_hook": 197, "loss_actor": 197, "record_interv": [198, 235], "record_fram": [198, 205, 235], "policy_explor": [198, 223, 235], "log_kei": 198, "suffix": 198, "underestim": 198, "suppos": [198, 233, 244], "set_exploration_mod": [198, 229, 235, 236, 237, 243], "reward_evalu": 198, "tensordictreplaybuff": [199, 223, 229, 235, 236], "flatten_tensordict": 199, "max_dim": 199, "rb_trainer": 199, "batch_process": [199, 200, 201, 233], "post_loss": [199, 233], "jitter": 200, "finfo": 200, "default_dtyp": 200, "get_default_dtyp": 200, "reward_norm": 200, "update_reward_stat": 200, "normalize_reward": 200, "make_train": [201, 229], "_process_batch_hook": [201, 233], "versatil": 202, "lossmodul": [202, 222, 223], "optim_steps_per_batch": [202, 233], "epoch": [202, 237], "clip_grad_norm": 202, "partial": 202, "deriv": 202, "clip_norm": 202, "progress_bar": 202, "tqdm": [202, 235, 236, 237, 240], "save_trainer_interv": 202, "disk": [202, 233, 236], "10000": [202, 236, 237], "save_trainer_fil": [202, 233], "_datacollector": [204, 209, 210, 223], "update_weights_interv": 204, "sit": [204, 236], "update_weight": 204, "post_step": [204, 233], "cfg": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227], "dictconfig": [205, 206, 208, 209, 210, 211, 213, 216, 218, 219, 221, 222, 223, 224, 227], "divid": [205, 235], "unknowingli": 205, "annealing_fram": [205, 235], "init_env_step": [205, 206, 235], "proof_environ": [206, 208, 211, 213, 216, 218, 221, 235], "sta": 206, "ot": 206, "a2closs": [207, 229], "in_keys_actor": [208, 216], "observation_kei": [208, 216, 218, 221], "actorvalueoper": [208, 216, 229], "dummi": [208, 211, 213, 216, 218, 221, 235, 244], "actorcriticoper": [208, 216, 229], "parser_env_arg": [208, 216, 218], "make_ppo_model": [208, 229], "parser_model_args_continu": [208, 216, 218, 221], "cattensor": [208, 211, 216, 218, 221, 235, 236, 239, 240, 244], "hydra": [208, 211, 213, 216, 218, 221], "config_stor": [208, 211, 213, 216, 218, 221], "configstor": [208, 211, 213, 216, 218, 221], "dataclass": [208, 211, 213, 216, 218, 221], "halfcheetah": [208, 211, 216, 218, 221, 235], "config_field": [208, 211, 213, 216, 218, 221], "config_cl": [208, 211, 213, 216, 218, 221], "ppomodelconfig": [208, 216], "envconfig": [208, 211, 213, 216, 218, 221], "make_dataclass": [208, 211, 213, 216, 218, 221], "cls_name": [208, 211, 213, 216, 218, 221], "config_path": [208, 211, 213, 216, 218, 221], "config_nam": [208, 211, 213, 216, 218, 221], "actor_valu": [208, 216], "17": [208, 211, 216, 218, 221, 240], "actor_model_explor": [209, 210, 235], "make_env_kwarg": [209, 210], "actor_net_kwarg": [211, 218, 221], "value_net_kwarg": [211, 221], "modulelist": [211, 218, 221, 243], "ddpgcnnactor": [211, 229], "ddpgmlpactor": [211, 229], "ddpgcnnqnet": [211, 229], "ddpgmlpqnet": [211, 229], "ddpgmodelconfig": 211, "targetnetupdat": [212, 214, 217, 220, 222, 223], "discretemodelconfig": 213, "pong": [213, 244], "v5": [213, 244], "pixels_onli": [213, 235, 236, 243, 244], "210": [213, 240, 244], "160": [213, 240, 244], "ppoloss": [215, 229], "redqloss_deprec": 217, "qvalue_net_kwarg": [218, 221], "qvalu": [218, 221, 236], "redqmodelconfig": 218, "replayargsconfig": 219, "sacmodelconfig": 221, "target_net_updat": 223, "constitu": 223, "learnt": [223, 236, 237], "tempfil": 223, "tensorboardlogg": [223, 229], "egreedywrapp": [223, 229, 236], "env_proof": 223, "obs_spec": [223, 240], "net_valu": 223, "dir": [223, 233], "gettempdir": 223, "argpars": [224, 227], "namespac": [224, 227], "parser": [224, 227], "transformed_env_constructor": [224, 229], "env_kwarg": [225, 226, 235], "num_env_per_collector": [225, 226], "num_collector": [225, 226, 236], "video_tag": 227, "norm_obs_onli": 227, "use_env_cr": 227, "custom_env_mak": 227, "custom_env": 227, "return_transformed_env": 227, "action_dim_gsd": 227, "state_dim_gsd": 227, "batch_dim": 227, "obs_norm_state_dict": 227, "wheter": 227, "maker": 227, "overrid": 227, "asyncdatacollector": 229, "tensordictprioritizedreplaybuff": [229, 243], "prioritizedsampl": [229, 235], "sotr": 229, "binarydiscretetensorspec": 229, "unboundeddiscretetensorspec": [229, 237, 244], "tensordictrecord": 229, "videorecord": [229, 237], "get_available_librari": 229, "braxwrapp": 229, "dmcontrolenv": [229, 235, 239, 244], "dmcontrolwrapp": 229, "jumanjienv": 229, "jumanjiwrapp": 229, "vmasenv": 229, "vmaswrapp": 229, "actorcriticwrapp": 229, "additivegaussianwrapp": 229, "ornsteinuhlenbeckprocesswrapp": [229, 235], "is_tensordict_compat": 229, "ensure_tensordict_compat": 229, "qvaluehook": 229, "distributionalqvaluehook": 229, "duelingcnndqnet": [229, 236], "distributionaldqnnet": 229, "lstmnet": 229, "dreameractor": 229, "obsencod": 229, "obsdecod": 229, "rssmprior": 229, "rssmposterior": 229, "reset_nois": 229, "cemplann": 229, "mpcplannerbas": 229, "mppiplann": 229, "independentnorm": 229, "truncatednorm": 229, "tanhdelta": [229, 235], "onehotcategor": 229, "inv_softplu": 229, "distributionaldqnloss": [229, 236], "iqlloss": 229, "reinforceloss": 229, "dreameractorloss": 229, "dreamermodelloss": 229, "dreamervalueloss": 229, "gae": [229, 237], "tdestim": 229, "generalized_advantage_estim": 229, "vec_generalized_advantage_estim": 229, "vec_td_lambda_return_estim": 229, "vec_td_lambda_advantage_estim": [229, 235, 236], "td_lambda_return_estim": 229, "td_lambda_advantage_estim": 229, "td_advantage_estim": 229, "distance_loss": 229, "hold_out_net": [229, 235], "hold_out_param": 229, "softupd": [229, 235], "hardupd": [229, 235], "batchsubsampl": [229, 233], "clearcudacach": 229, "countframeslog": 229, "logreward": [229, 233], "optimizerhook": 229, "replaybuffertrain": [229, 233], "rewardnorm": 229, "selectkei": [229, 233], "trainerhookbas": [229, 233], "updateweight": [229, 233], "make_a2c_loss": 229, "make_a2c_model": 229, "make_collector_offpolici": 229, "make_collector_onpolici": 229, "make_ddpg_actor": [229, 235], "make_ddpg_loss": 229, "make_dqn_actor": 229, "make_dqn_loss": 229, "make_ppo_loss": 229, "make_redq_loss": 229, "make_redq_model": 229, "make_replay_buff": [229, 235], "make_sac_loss": 229, "make_sac_model": 229, "make_target_updat": 229, "parallel_env_constructor": [229, 235], "sync_async_collector": 229, "sync_sync_collector": 229, "correct_for_frame_skip": 229, "get_stats_random_rollout": 229, "csvlogger": 229, "mlflowlogg": 229, "wandblogg": 229, "get_logg": 229, "generate_exp_nam": 229, "journei": 230, "guid": [230, 235, 236], "textbook": 230, "highlight": 230, "readi": [230, 237, 239], "ever": 230, "bump": 230, "think": [230, 237, 244], "benefit": 230, "pr": 230, "resourc": [230, 235, 237], "outer": [233, 235, 236, 244], "believ": 233, "scheme": [233, 244], "substenti": 233, "_pre_steps_log_hook": 233, "_pre_optim_hook": 233, "sub_batch": 233, "_post_loss_hook": 233, "_post_optim_hook": 233, "post_optim": 233, "_post_optim_log": 233, "post_optim_log": 233, "_post_steps_hook": 233, "_post_steps_log_hook": 233, "post_steps_log": 233, "comment": [233, 236, 243], "categori": 233, "extens": 233, "reserv": 233, "three": [233, 237, 240], "logginghook": 233, "logging_hook": 233, "save_dict": 233, "some_valu": 233, "torchsnapshot": 233, "ckpt_backend": 233, "pt": [233, 241], "filepath": 233, "select_kei": 233, "save_train": 233, "load_from_fil": 233, "perfectli": [233, 235, 240], "intern": 234, "author": [235, 236, 237, 240], "vincent": [235, 236, 237, 240], "moen": [235, 236, 237, 240], "topic": 235, "asid": 235, "strongli": 235, "familiar": [235, 236, 244], "transpar": [235, 236], "understood": [235, 236], "sota": [235, 236, 243], "illustr": [235, 236], "deepcopi": 235, "matplotlib": [235, 236, 237, 240, 244], "pyplot": [235, 236, 237, 240, 244], "plt": [235, 236, 237, 240, 244], "environmet": 235, "remaind": 235, "focu": [235, 237], "funciton": 235, "env_librari": 235, "env_task": 235, "env_arg": 235, "elif": [235, 236], "notimplementederror": 235, "friendli": 235, "special": [235, 244], "torchr": 235, "rescal": 235, "presum": 235, "leav": 235, "make_transformed_env": 235, "reward_sc": 235, "double_to_float_list": 235, "double_to_float_inv_list": 235, "dmcontrol": 235, "get_env_stat": 235, "proof_env": 235, "transform_state_dict": 235, "significantli": [235, 236], "leverag": [235, 244], "env_per_collector": 235, "make_t_env": 235, "copy_": 235, "parallel_env": [235, 243, 244], "maxim": [235, 240], "recal": [235, 236, 237], "materi": 235, "small": [235, 237, 244], "env_spec": 235, "actor_net": [235, 237], "num_lay": 235, "actor_modul": [235, 243], "q_net": 235, "qnet": 235, "frequenc": 235, "make_record": 235, "recorder_obj": 235, "flavor": 235, "circular": 235, "pick": [235, 236], "arrai": 235, "buffer_s": [235, 236], "prb": 235, "buffer_scratch_dir": 235, "adjust": [235, 240], "magnitud": 235, "1000000": 235, "device_count": [235, 236, 241, 244], "500k": 235, "meaning": 235, "5000": [235, 236, 237], "myopic": [235, 236], "n_steps_forward": 235, "lr": [235, 236, 237, 240], "5e": 235, "weight_decai": 235, "utd": 235, "update_to_data": 235, "005": [235, 236], "tmp": 235, "semin": 235, "qnet_target": 235, "tight": 235, "natur": 235, "seamlessli": [235, 240], "traceback": [235, 236, 243], "__w": [235, 236, 243], "doc": [235, 236, 243], "coding_ddpg": [235, 236, 242], "677": 235, "1460": [235, 236], "got": 235, "adam": [235, 236, 237, 240], "optimizer_actor": 235, "optimizer_qnet": 235, "total_collection_step": 235, "scheduler1": 235, "lr_schedul": [235, 237, 240], "cosineannealinglr": [235, 237, 240], "t_max": 235, "scheduler2": 235, "temporarili": 235, "explain": [235, 241], "Then": [235, 237, 239], "fed": 235, "hood": [235, 240], "metadata": [235, 237, 244], "coupl": [235, 240], "earli": [235, 243], "rewards_ev": 235, "norm_factor_train": 235, "collected_fram": 235, "pbar": [235, 236, 237, 240], "r0": 235, "numel": [235, 236, 237, 241], "current_fram": [235, 236], "sampled_tensordict": 235, "backprop": 235, "next_valu": [235, 236], "value_est": 235, "pow": [235, 236], "sampled_tensordict_actor": 235, "actor_loss": 235, "p_in": 235, "p_dest": 235, "zip": [235, 238], "b_in": 235, "b_dest": 235, "td_record": 235, "r_evalu": 235, "set_descript": [235, 236, 237, 240], "4f": [235, 236, 237, 240], "plot": [235, 236, 237, 240], "mention": [235, 236, 244], "label": [235, 236], "legend": [235, 236], "xlabel": [235, 236, 240], "ylabel": [235, 236], "tight_layout": 235, "250": [235, 237, 240], "100000": [235, 236], "batch_size_traj": 235, "simplic": [235, 236, 237, 241], "td_lambda": 235, "roughli": [235, 243], "four": [235, 240], "big": [235, 236, 237, 244], "incompat": 235, "rand_idx": 235, "titl": [235, 236, 237, 240], "labmda": 235, "minut": [235, 236, 237, 239, 240, 241, 243, 244], "52": [235, 237, 240, 241, 242], "652": [235, 242], "3721": [235, 240], "mb": [235, 236, 237, 239, 240, 241, 242, 243, 244], "jupyt": [235, 236, 237, 238, 239, 240, 241, 243, 244], "ipynb": [235, 236, 237, 239, 240, 241, 243, 244], "galleri": [235, 236, 237, 238, 239, 240, 241, 243, 244], "sphinx": [235, 236, 237, 238, 239, 240, 241, 243, 244], "cartpol": [236, 244], "tabl": 236, "highest": 236, "lookup": 236, "amort": [236, 237], "seen": 236, "conjunct": 236, "cart": 236, "pole": 236, "un": 236, "actuat": 236, "frictionless": 236, "upright": [236, 244], "balanc": [236, 244], "prerequisit": 236, "flesh": 236, "grayscal": [236, 244], "did": [236, 237, 244], "get_funct": 236, "is_notebook": 236, "shell": 236, "get_ipython": 236, "__class__": 236, "zmqinteractiveshel": 236, "qtconsol": 236, "terminalinteractiveshel": 236, "ipython": [236, 240], "nameerror": 236, "interpret": 236, "hopefulli": 236, "sensit": 236, "variat": 236, "2e": [236, 240], "aka": 236, "upd": 236, "n_optim": 236, "smooth": 236, "harder": [236, 243], "500000": 236, "256": [236, 237, 240], "eps_greedy_v": 236, "eps_greedy_val_env": 236, "predefin": [236, 237], "mandatori": [236, 237, 240], "init_bia": 236, "observation_norm_state_dict": 236, "five": 236, "64x64": 236, "channel": 236, "motion": [236, 240], "simpler": 236, "test_env": 236, "9921": 236, "0784": 236, "0785": 236, "trick": 236, "mathbb": 236, "rightarrow": 236, "concept": 236, "pessimist": [236, 237], "power": 236, "ubiquit": 236, "trainabl": [236, 241], "augment": 236, "make_model": 236, "dummy_env": 236, "output_s": 236, "unflatten_kei": 236, "fairli": 236, "params_target": 236, "actor_explor": 236, "flat": 236, "unflatten": 236, "params_flat": 236, "flatten_kei": 236, "role": [236, 244], "coding_ppo": [236, 237, 242], "themselv": 236, "data_collector": 236, "coding_dqn": [236, 242], "479": [236, 240], "973": 236, "q_": 236, "v_": 236, "defaultdict": [236, 237, 240], "logs_exp1": 236, "prev_traj_count": 236, "traj_length": 236, "enough": 236, "sampled_data": 236, "sampled_data_out": 236, "tdstep": 236, "exp_valu": 236, "mse_loss": 236, "gv": 236, "clip_grad_norm_": [236, 237, 240], "p_target": 236, "p_orig": 236, "grad_val": 236, "traj_count": 236, "eval_rollout": [236, 237], "traj_lengths_ev": 236, "mavg": 236, "05": [236, 240, 241], "traj_count_ev": 236, "figsiz": [236, 237, 240], "subplot": [236, 237, 240, 244], "traj": 236, "savefig": 236, "albeit": [236, 240], "slowli": 236, "dqn_td0": 236, "png": 236, "capac": [236, 237], "logs_exp2": 236, "dqn_tdlambda": 236, "fewer": 236, "plot_both": 236, "frames_td0": 236, "frames_tdlambda": 236, "evals_td0": 236, "evals_tdlambda": 236, "mavgs_td0": 236, "mavgs_tdlambda": 236, "traj_count_td0": 236, "traj_count_tdlambda": 236, "td0": 236, "pixels_sav": 236, "imageio": 236, "mimwrit": 236, "mp4": 236, "fp": 236, "qvaluenetwork": 236, "nth": 236, "noticebli": 236, "collectorclass": 236, "till": 236, "steps_to_next_ob": 236, "worst": 236, "accuraci": 236, "fanci": 236, "756": [236, 242], "3720": [236, 242], "demonstr": [237, 240, 244], "talk": 237, "repetit": 237, "six": 237, "consum": 237, "sophist": 237, "invent": 237, "wheel": 237, "overview": [237, 243], "theta_k": 237, "frac": 237, "pi_": 237, "ratio": 237, "exceed": 237, "discourag": [237, 240], "indispens": 237, "loader": 237, "analyz": 237, "lingua": 237, "franca": 237, "descript": 237, "normalparamextractor": 237, "samplerwithoutreplac": 237, "rest": [237, 243], "has_cuda": [237, 244], "3e": 237, "max_grad_norm": 237, "ourselv": [237, 244], "benefici": 237, "errat": 237, "hamper": 237, "reactiv": 237, "group": 237, "xy": 237, "exce": 237, "budget": 237, "50_000": 237, "sub_batch_s": 237, "num_epoch": 237, "intro": 237, "entropy_ep": 237, "generalist": 237, "interchang": [237, 241], "panel": 237, "charact": 237, "inverteddoublependulum": 237, "transmit": 237, "stai": 237, "thumb": 237, "supplementari": [237, 244], "told": 237, "stringent": 237, "nevertheless": 237, "concret": 237, "everyth": 237, "continuousbox": [237, 240, 243, 244], "environemnt": 237, "confid": 237, "succeed": [237, 240], "pack": [237, 244], "ran": 237, "mutli": 237, "boundari": 237, "f_": 237, "text": 237, "mu_": 237, "difficulti": [237, 244], "brought": 237, "scrictli": 237, "d_ob": 237, "d_action": 237, "extract": 237, "carrier": 237, "policy_modul": 237, "That": 237, "said": 237, "value_modul": [237, 243], "briefli": 237, "simplest": [237, 244], "oblivi": 237, "refil": 237, "conveni": [237, 240], "easiest": 237, "hide": 237, "awai": 237, "mathemat": 237, "deal": 237, "tradeoff": 237, "eval_str": 237, "tensordict_data": 237, "data_view": 237, "subdata": 237, "loss_val": 237, "loss_valu": [237, 243], "loss_object": 237, "loss_crit": 237, "loss_entropi": 237, "cum_reward_str": 237, "stepcount_str": 237, "param_group": 237, "lr_str": 237, "nice": 237, "noth": 237, "50000": 237, "00": [237, 240, 241, 242], "04": [237, 240, 241, 242], "19": [237, 240], "245": [237, 240], "50it": [237, 240], "73": [237, 240, 241], "3754": 237, "0921": 237, "0003": [237, 240], "246": [237, 240], "47it": 237, "1249": 237, "3000": 237, "09": [237, 240], "248": [237, 240], "27it": [237, 240], "1775": 237, "4000": 237, "07": [237, 240, 242], "46it": 237, "1563": 237, "02": [237, 240, 241], "85it": 237, "1679": 237, "6000": 237, "57": [237, 240, 241], "247": [237, 240], "74it": 237, "1661": 237, "7000": 237, "28": [237, 240, 241], "54": [237, 240, 241], "10it": [237, 240], "1831": 237, "8000": 237, "49": [237, 240], "38it": 237, "1662": [237, 240], "9000": 237, "36": [237, 240, 241, 242], "49it": [237, 240], "1985": [237, 244], "31": [237, 240, 241, 242], "40": [237, 240, 242], "249": [237, 240], "20it": 237, "1796": 237, "23": [237, 240, 242, 244], "22": [237, 240, 241], "11000": 237, "37": [237, 240], "35it": [237, 240], "251": [237, 240], "0117": 237, "26": [237, 240, 241], "1836": 237, "12000": 237, "48": [237, 240, 241], "68it": 237, "1976": 237, "13000": 237, "91it": [237, 240], "1887": 237, "25": [237, 240, 242], "14000": 237, "56": [237, 240], "72it": 237, "1878": 237, "15000": 237, "21": [237, 239, 240], "76it": 237, "2086": 237, "0002": [237, 240], "16000": 237, "09it": 237, "2246": [237, 240], "29": [237, 240], "17000": 237, "00it": 237, "2271": 237, "18000": 237, "25it": [237, 240], "2108": 237, "19000": 237, "60it": [237, 240], "2170": [237, 240], "20000": 237, "59": [237, 240], "40it": 237, "2073": 237, "21000": 237, "55": [237, 240], "21it": 237, "185": [237, 240], "8976": [237, 240], "2326": 237, "22000": 237, "71it": 237, "2300": 237, "23000": 237, "86it": 237, "2258": [237, 240], "24000": 237, "43": [237, 240, 241], "05it": 237, "2486": 237, "25000": 237, "58it": [237, 240], "2446": 237, "39": [237, 240, 241, 242, 244], "26000": 237, "96it": [237, 240], "2528": 237, "27000": 237, "2366": 237, "47": [237, 240], "28000": 237, "252": [237, 240], "2630": [237, 240], "107": [237, 240], "58": [237, 240, 241], "29000": 237, "77it": 237, "2565": 237, "60": [237, 240, 241, 243], "30000": 237, "2469": [237, 240], "62": [237, 240, 241], "31000": 237, "57it": [237, 240], "352": [237, 240], "9428": 237, "2447": 237, "45": [237, 240], "32000": 237, "2661": 237, "66": [237, 240, 241], "33000": 237, "89it": 237, "2573": 237, "51": [237, 240], "68": [237, 240], "34000": 237, "88it": 237, "2526": 237, "70": [237, 240, 241], "35000": 237, "2554": 237, "72": [237, 240], "36000": 237, "67it": 237, "2491": 237, "74": [237, 240], "37000": 237, "2442": [237, 240], "76": [237, 240], "38000": 237, "24it": 237, "2566": 237, "78": [237, 240], "39000": 237, "02it": 237, "2531": 237, "80": [237, 240, 241], "40000": 237, "2619": 237, "67": [237, 239, 240, 241], "82": [237, 240, 241], "41000": 237, "324": [237, 240], "8497": 237, "2676": 237, "84": [237, 240, 241], "42000": 237, "14it": [237, 240], "2663": [237, 244], "86": [237, 240, 241], "43000": 237, "30it": 237, "2725": 237, "63": [237, 240], "88": [237, 240, 241], "44000": 237, "32it": 237, "2730": 237, "61": [237, 240, 241], "90": [237, 240], "45000": 237, "18it": 237, "2671": 237, "92": [237, 240, 241], "46000": 237, "61it": [237, 240], "2683": 237, "47000": 237, "84it": 237, "2687": 237, "96": [237, 240, 241], "48000": 237, "78it": 237, "2635": 237, "49000": 237, "2752": 237, "73it": 237, "2786": 237, "cap": 237, "bit": 237, "998": [237, 242], "tutorials_python": 238, "tutorials_jupyt": 238, "distinct": 239, "humanoid": [239, 244], "walk": [239, 244], "env1": 239, "env1_obs_kei": 239, "observation_stand": 239, "env2": 239, "env2_obs_kei": 239, "observation_walk": 239, "tdreset1": 239, "tdreset2": 239, "tdreset": 239, "backbon": [239, 243], "policy_common": 239, "policy_stand": 239, "policy_walk": 239, "seq": 239, "But": 239, "env1_mak": 239, "env2_mak": 239, "_single_task": 239, "td_rollout": 239, "shown": 239, "53": [239, 240, 241, 242], "020": [239, 242], "multi_task": [239, 242], "ground": 240, "freeli": 240, "inspir": 240, "sep": 240, "touch": 240, "undertaken": 240, "broader": 240, "challeng": [240, 241], "wider": 240, "algebra": 240, "acquaint": 240, "avenu": 240, "unsqueezetransform": 240, "_apply_to_composit": 240, "default_x": 240, "pi": 240, "default_i": 240, "_set_se": 240, "torqu": 240, "upward": 240, "angular": 240, "convent": 240, "dot": 240, "_t": 240, "sin": 240, "theta_t": 240, "rad": 240, "sec": 240, "gravit": 240, "theta_": 240, "001": 240, "angl": 240, "deleg": 240, "new_th": 240, "plu": 240, "new_thdot": 240, "thdot": 240, "g_forc": 240, "max_torqu": 240, "angle_norm": 240, "max_spe": 240, "zeros_lik": 240, "is_empti": 240, "gen_param": 240, "high_th": 240, "high_thdot": 240, "low_th": 240, "low_thdot": 240, "rng": 240, "lazili": 240, "shortcut": [240, 244], "characterist": 240, "irrelev": 240, "_make_spec": 240, "td_param": 240, "make_composite_from_td": 240, "commong": 240, "pseudo": 240, "pendulumenv": 240, "homonym": 240, "render_mod": 240, "human": 240, "rgb_arrai": 240, "render_fp": 240, "random_": 240, "_make_step": 240, "staticmethod": 240, "hyperparam": 240, "complic": [240, 244], "showcas": 240, "skeleton": 240, "_apply_transform": [240, 244], "_inv_apply_transform": [240, 244], "eventu": 240, "subset": [240, 241], "unitari": 240, "sine": 240, "cosin": 240, "sintransform": 240, "costransform": 240, "co": 240, "t_sin": 240, "t_co": 240, "cat_transform": 240, "mdp": 240, "convin": 240, "simplifi": 240, "simple_rollout": 240, "_data": 240, "unexplor": 240, "assumpt": 240, "recreat": 240, "20_000": 240, "init_td": 240, "traj_return": 240, "gn": 240, "last_reward": 240, "is_ipython": 240, "inlin": 240, "get_backend": 240, "ion": 240, "gcf": 240, "clear_output": 240, "625": 240, "9981": 240, "3292": 240, "63it": 240, "8997": 240, "7032": 240, "696": 240, "8466": 240, "0202": 240, "807": 240, "2897": 240, "6322": 240, "0338": 240, "4880": 240, "504": 240, "62it": 240, "1698": 240, "9674": 240, "188": 240, "0643": 240, "9703": 240, "127": 240, "3363": 240, "0207": 240, "048": 240, "3501": 240, "5927": 240, "5956": 240, "7665": 240, "732": 240, "3527": 240, "0354": 240, "468": 240, "2219": 240, "2999": 240, "8446": 240, "7448": 240, "961": 240, "7403": 240, "5034": 240, "411": 240, "9381": 240, "7937": 240, "619": 240, "8760": 240, "1022": 240, "79": [240, 241], "6977": 240, "0331": 240, "987": 240, "8657": 240, "4508": 240, "919": 240, "9990": 240, "8757": 240, "921": 240, "9021": 240, "9585": 240, "518": 240, "6612": 240, "6255": 240, "648": 240, "7181": 240, "7913": 240, "089": 240, "0750": 240, "5913": 240, "596": 240, "8299": 240, "4152": 240, "9993": 240, "4527": 240, "2555": 240, "551": 240, "3655": 240, "3651": 240, "41": [240, 241], "6557": 240, "3352": 240, "9137": 240, "7104": 240, "8728": [240, 243], "144": 240, "8547": 240, "6320": 240, "871": 240, "7414": 240, "4717": 240, "211": 240, "7268": 240, "1833": 240, "6634": 240, "3899": 240, "6083": 240, "3508": 240, "5830": 240, "6835": 240, "8209": 240, "3483": 240, "7688": 240, "599": 240, "8693": 240, "3066": 240, "008": 240, "5190": 240, "2003": 240, "5916": 240, "0074": 240, "053": 240, "3596": 240, "3337": 240, "3250": 240, "4695": 240, "556": 240, "4941": 240, "0976": 240, "436": 240, "5073": 240, "5455": 240, "6267": 240, "7900": 240, "7116": 240, "0649": 240, "206": 240, "9751": 240, "0522": 240, "328": 240, "0844": 240, "7387": 240, "845": 240, "5251": 240, "3373": 240, "9479": 240, "2709": 240, "3046": 240, "3977": 240, "3212": 240, "642": 240, "42it": 240, "3854": 240, "9375": 240, "837": 240, "48it": 240, "6287": 240, "6260": 240, "52it": 240, "7219": 240, "8860": 240, "6979": 240, "2648": 240, "54it": 240, "4459": 240, "3500": 240, "56it": 240, "3812": 240, "3433": 240, "222": 240, "4411": 240, "6690": 240, "59it": 240, "3777": 240, "1538": 240, "322": 240, "8743": 240, "4807": 240, "22e": 240, "3545": 240, "0107": 240, "85": [240, 241], "2255": 240, "3131": 240, "1588": 240, "4491": 240, "076": 240, "2080": 240, "2076": 240, "831": 240, "7440": 240, "6878": 240, "102": 240, "65": [240, 241], "2344": 240, "1025": 240, "902": 240, "9207": 240, "3350": 240, "2087": 240, "2254": 240, "9928": 240, "3105": 240, "69": [240, 241], "6532": 240, "8399": 240, "224": 240, "5124": 240, "8030": 240, "71": [240, 241], "6501": 240, "4525": 240, "89": 240, "8541": 240, "8998": 240, "796e": 240, "2027": 240, "1556": 240, "3472": 240, "3081": 240, "396": 240, "75": [240, 241], "3959": 240, "7512": 240, "3240": 240, "8101": 240, "77": [240, 241], "2314": 240, "4188": 240, "295": 240, "9779": 240, "5535": 240, "5627": 240, "6739": 240, "8125": 240, "6816": 240, "755": 240, "6262": 240, "0773": 240, "8989": 240, "1044": 240, "83": [240, 241], "4514": 240, "0407": 240, "0062": 240, "4916": 240, "4074": 240, "0404": 240, "3795": 240, "3577": 240, "122": [240, 244], "3650": 240, "4141": 240, "134": 240, "9704": 240, "9697": 240, "1513": 240, "4501": 240, "285": 240, "2994": 240, "4022": 240, "579": 240, "91": [240, 241], "2008": 240, "9061": 240, "558": 240, "0307": 240, "9752": 240, "93": 240, "5623": 240, "5012": 240, "94it": 240, "2079": 240, "5742": 240, "125": 240, "12it": 240, "2724": 240, "3876": 240, "26it": 240, "2708": 240, "7700": 240, "058": 240, "97": 240, "36it": 240, "1960": 240, "1463": 240, "43it": 240, "3716": 240, "0288": 240, "2872": 240, "0933": 240, "53it": 240, "9320": 240, "1261": 240, "55it": 240, "1747": 240, "4484": 240, "0453": 240, "3530": 240, "209": 240, "103": 240, "3564": 240, "3918": 240, "104": 240, "4985": 240, "105": [240, 242], "5372": 240, "6419": 240, "238": 240, "106": 240, "4172": 240, "1033": 240, "5129": 240, "1738": 240, "982": 240, "108": 240, "2507": 240, "6379": 240, "109": 240, "2202": 240, "9865": 240, "110": 240, "6413": 240, "0470": 240, "111": 240, "7870": 240, "4711": 240, "386": 240, "112": 240, "8113": 240, "5438": 240, "113": 240, "7211": 240, "2379": 240, "054": 240, "4828": 240, "5023": 240, "115": [240, 243], "9169": 240, "8205": 240, "171": 240, "116": 240, "0791": 240, "4240": 240, "117": 240, "0138": 240, "3126": 240, "651": 240, "118": 240, "6676": 240, "3220": 240, "119": 240, "0057": 240, "120": 240, "4148": 240, "9243": 240, "121": [240, 244], "2873": 240, "1979": 240, "1586": 240, "123": 240, "6911": 240, "8230": 240, "124": [240, 242, 244], "7729": 240, "9686": 240, "126": 240, "2032": 240, "0313": 240, "656": 240, "9053": 240, "4081": 240, "9441": 240, "3413": 240, "5864": 240, "006": 240, "129": 240, "0038": 240, "5304": 240, "7869": 240, "2975": 240, "131": 240, "13it": 240, "7712": 240, "1618": 240, "132": 240, "7366": 240, "133": 240, "37it": 240, "4165": 240, "0684": 240, "188e": 240, "44it": 240, "8963": 240, "1896": 240, "135": 240, "7390": 240, "136": 240, "9629": 240, "9319": 240, "169": 240, "137": 240, "3621": 240, "138": 240, "7266": 240, "1210": 240, "139": 240, "8384": 240, "5619": 240, "140": 240, "0575": 240, "5144": 240, "141": 240, "8710": 240, "7681": 240, "142": 240, "8321": 240, "8516": 240, "945": 240, "143": 240, "0932": 240, "2351": 240, "773": 240, "0999": 240, "1744": 240, "145": 240, "2118": 240, "8154": 240, "146": 240, "7484": 240, "4035": 240, "147": 240, "5152": 240, "0088": 240, "148": 240, "5423": 240, "7286": 240, "149": 240, "7692": 240, "1465": 240, "150": 240, "0797": 240, "1392": 240, "151": 240, "9611": 240, "9006": 240, "152": 240, "7773": 240, "6767": 240, "153": 240, "4340": 240, "2778": 240, "154": 240, "5407": 240, "8302": 240, "595": 240, "155": 240, "4597": 240, "1627": 240, "156": 240, "7073": 240, "3922": 240, "157": 240, "7815": 240, "9858": 240, "158": 240, "6953": 240, "7051": 240, "159": 240, "6165": 240, "0605": 240, "3321": 240, "9367": 240, "161": 240, "3238": 240, "1825": 240, "162": 240, "6537": 240, "6867": 240, "163": [240, 241, 243], "8555": 240, "0956": 240, "164": 240, "3248": 240, "0159": 240, "165": 240, "2370": 240, "7480": 240, "166": 240, "8993": 240, "8285": 240, "167": 240, "5465": 240, "3198": 240, "168": 240, "9088": 240, "3417": 240, "2199": 240, "2993": 240, "170": 240, "7042": 240, "1570": 240, "6141": 240, "284": 240, "172": 240, "9925": 240, "2946": 240, "173": 240, "5968": 240, "174": 240, "1712": 240, "175": 240, "6813": 240, "9453": 240, "176": 240, "5664": 240, "177": 240, "3610": 240, "9569": 240, "178": 240, "0602": 240, "9931": 240, "179": 240, "7767": 240, "8155": 240, "180": 240, "0498": 240, "7331": 240, "568": 240, "181": 240, "0781": 240, "1768": 240, "182": 240, "9178": 240, "6354": 240, "183": 240, "1244": 240, "8991": 240, "336": 240, "184": 240, "8262": 240, "2116": 240, "2508": 240, "7676": 240, "186": 240, "0428": 240, "2621": 240, "187": 240, "0812": 240, "9802": 240, "199": 240, "9924": 240, "0870": 240, "189": 240, "3196": 240, "2363": 240, "190": 240, "95it": 240, "9864": 240, "0182": 240, "191": 240, "0345": 240, "9245": 240, "192": 240, "9191": 240, "1752": 240, "491": 240, "193": 240, "1470": 240, "8907": 240, "257": 240, "194": 240, "1925": 240, "676": 240, "195": 240, "1042": 240, "5107": 240, "842": 240, "196": 240, "0179": 240, "2845": 240, "197": 240, "9784": 240, "0536": 240, "198": 240, "8914": 240, "3151": 240, "2599": 240, "7948": 240, "4072": 240, "201": 240, "5997": 240, "8325": 240, "202": 240, "8960": 240, "4193": 240, "203": 240, "0600": 240, "8070": 240, "204": 240, "0523": 240, "0025": 240, "205": 240, "5027": 240, "0148": 240, "736": 240, "0363": 240, "3280": 240, "207": 240, "1871": 240, "1571": 240, "208": 240, "8204": 240, "6373": 240, "9863": 240, "2612": 240, "0748": 240, "9467": 240, "8050": 240, "6954": 240, "291": 240, "212": 240, "4752": 240, "1008": 240, "016": 240, "213": 240, "8463": 240, "1723": 240, "214": 240, "6868": 240, "215": 240, "5380": 240, "1126": 240, "891": 240, "216": 240, "2657": 240, "2562": 240, "217": 240, "5513": 240, "0549": 240, "566": 240, "218": 240, "0561": 240, "1288": 240, "607": 240, "219": 240, "3470": 240, "0052": 240, "220": 240, "4686": 240, "0242": 240, "941": 240, "221": 240, "8202": 240, "9284": 240, "1519": 240, "799": 240, "223": 240, "9705": 240, "0056": 240, "027": 240, "9204": 240, "2680": 240, "991": 240, "225": 240, "0383": 240, "226": 240, "1037": 240, "7906": 240, "227": 240, "3671": 240, "5151": 240, "228": 240, "9767": 240, "9817": 240, "229": 240, "6483": 240, "0955": 240, "230": 240, "6856": 240, "5156": 240, "231": 240, "7647": 240, "4922": 240, "232": 240, "3724": 240, "4932": 240, "233": 240, "3750": 240, "873": 240, "234": 240, "7854": 240, "2685": 240, "839": 240, "235": 240, "2902": 240, "1122": 240, "618": 240, "236": 240, "0771": 240, "428": 240, "237": 240, "0086": 240, "3233": 240, "3264": 240, "239": 240, "4450": 240, "1583": 240, "240": [240, 243, 244], "3840": 240, "3740": 240, "241": 240, "2403": 240, "0024": 240, "569": 240, "242": 240, "1011": [240, 243], "0112": 240, "243": 240, "6538": 240, "0162": 240, "9349": 240, "7379": 240, "8236": 240, "0259": 240, "8227": 240, "4424": 240, "6078": 240, "1075": 240, "2208": 240, "0820": 240, "684": 240, "2719": 240, "7146": 240, "364": 240, "4423": 240, "9679": 240, "4463": 240, "5761": 240, "0347": 240, "0947": 240, "253": 240, "4200": 240, "0638": 240, "254": 240, "4313": 240, "0403": 240, "074": 240, "6630": 240, "0239": 240, "1293": 240, "0677": 240, "638": 240, "0517": 240, "092": 240, "258": 240, "3424": 240, "1411": 240, "259": 240, "0897": 240, "0417": 240, "013": 240, "260": 240, "9226": 240, "0016": 240, "4881": 240, "261": 240, "1743": 240, "0167": 240, "262": 240, "1668": 240, "0481": 240, "608": 240, "263": 240, "1277": 240, "0092": 240, "8715": 240, "264": 240, "0661": 240, "0067": 240, "7747": 240, "265": 240, "2779": 240, "0430": 240, "9998": 240, "266": 240, "9067": 240, "0251": 240, "015": 240, "267": 240, "4558": 240, "0186": 240, "268": 240, "1901": 240, "1413": 240, "269": 240, "1785": 240, "0324": 240, "562": 240, "270": 240, "2759": 240, "826": 240, "271": 240, "1844": 240, "0168": 240, "587": 240, "272": 240, "3009": 240, "0362": 240, "273": 240, "7069": 240, "274": [240, 242, 243], "0793": 240, "5345": 240, "275": 240, "0513": 240, "0211": 240, "088": 240, "276": 240, "4400": 240, "0433": 240, "866": 240, "277": 240, "2846": 240, "0157": 240, "427": 240, "278": 240, "2392": 240, "1046": 240, "408": 240, "279": 240, "1373": 240, "5125": 240, "280": 240, "1448": 240, "0560": 240, "678": 240, "281": 240, "5425": 240, "0506": 240, "282": 240, "5210": 240, "0940": 240, "334": 240, "283": 240, "0558": 240, "876": 240, "2645": 240, "0130": 240, "5357": 240, "7399": 240, "8931": 240, "286": 240, "2394": 240, "9803": 240, "287": 240, "6626": 240, "8780": 240, "288": 240, "2521": 240, "0027": 240, "289": 240, "1452": 240, "0534": 240, "877": 240, "290": 240, "2637": 240, "0477": 240, "519": 240, "2021": 240, "0382": 240, "742": 240, "292": 240, "1473": 240, "0208": 240, "293": 240, "3379": 240, "0450": 240, "294": 240, "2145": 240, "0270": 240, "3688": 240, "7527": 240, "296": 240, "8627": 240, "297": 240, "2180": 240, "0066": 240, "298": 240, "0373": 240, "0055": 240, "299": 240, "5879": 240, "9401": 240, "6223": 240, "8889": 240, "301": 240, "2797": 240, "1580": 240, "302": 240, "9936": 240, "4949": 240, "303": 240, "4579": 240, "9796": 240, "304": 240, "0070": 240, "9057": 240, "305": 240, "2540": 240, "746": 240, "306": 240, "5077": 240, "1406": 240, "307": 240, "7956": 240, "7657": 240, "308": 240, "9119": 240, "1691": 240, "309": 240, "2513": 240, "3036": 240, "310": 240, "0779": 240, "0079": 240, "8692": 240, "311": 240, "9439": 240, "0460": 240, "592": 240, "312": 240, "8099": 240, "0491": 240, "313": 240, "516": 240, "314": 240, "8046": 240, "0147": 240, "404": 240, "315": 240, "0122": 240, "0017": 240, "6365": 240, "316": 240, "1499": 240, "0109": 240, "717": 240, "317": 240, "0034": 240, "4328": 240, "318": 240, "1559": 240, "0010": 240, "3445": 240, "319": 240, "9434": 240, "2862": 240, "320": [240, 244], "9168": 240, "0020": 240, "7494": 240, "321": 240, "7114": 240, "004": 240, "2146": 240, "323": 240, "8207": 240, "0008": 240, "093": 240, "0291": 240, "0036": 240, "733": 240, "325": 240, "0031": 240, "0059": 240, "9693": 240, "326": 240, "4539": 240, "4015": 240, "327": 240, "2260": 240, "0032": 240, "8712": 240, "2449": 240, "0100": 240, "7291": 240, "329": 240, "0009": 240, "5744": 240, "330": 240, "9889": 240, "0205": 240, "563": 240, "331": 240, "9478": 240, "0578": 240, "332": 240, "3117": 240, "3474": 240, "333": 240, "93it": 240, "3562": 240, "2592": 240, "2034": 240, "0292": 240, "335": [240, 243], "6824": 240, "2522": 240, "565": 240, "337": 240, "9085": 240, "0041": 240, "798": 240, "338": 240, "0409": [240, 244], "0278": 240, "339": 240, "0081": 240, "077": 240, "340": 240, "1038": 240, "0184": 240, "341": 240, "5232": 240, "2485": 240, "948": 240, "342": 240, "3397": 240, "343": 240, "1390": 240, "1946": 240, "344": 240, "3108": 240, "9773": 240, "345": 240, "9628": 240, "8776": 240, "346": 240, "2432": 240, "593": 240, "347": 240, "4281": 240, "3059": 240, "348": 240, "9241": 240, "0303": 240, "349": 240, "4747": 240, "3566": 240, "350": 240, "5687": 240, "1356": [240, 244], "351": 240, "9195": 240, "2604": 240, "5555": 240, "353": 240, "4093": 240, "354": 240, "3465": 240, "0412": 240, "498": 240, "355": 240, "4612": 240, "0659": 240, "888": 240, "356": 240, "0915": 240, "6161": 240, "357": 240, "4199": 240, "6984": 240, "358": 240, "1434": 240, "5982": 240, "359": 240, "6443": 240, "8121": 240, "360": 240, "9721": 240, "559": 240, "361": 240, "5386": 240, "0893": 240, "362": 240, "1242": [240, 243], "0828": 240, "507": 240, "363": 240, "8708": 240, "1920": 240, "548": 240, "9075": 240, "4399": 240, "365": 240, "6237": 240, "0761": 240, "929": 240, "366": 240, "1787": 240, "1726": 240, "367": 240, "4725": 240, "368": 240, "0309": 240, "502": 240, "369": 240, "6823": 240, "0098": 240, "370": 240, "2397": 240, "371": 240, "4634": 240, "0099": 240, "699": 240, "372": 240, "9857": 240, "9962": 240, "373": 240, "9991": 240, "2484": 240, "374": 240, "8959": 240, "737": 240, "375": 240, "1581": 240, "376": 240, "8401": 240, "377": 240, "9562": 240, "0272": 240, "378": 240, "9824": 240, "4239": 240, "379": 240, "2841": 240, "380": 240, "9922": 240, "4334": 240, "381": 240, "9613": 240, "6321": 240, "382": 240, "0516": 240, "8370": 240, "383": 240, "9549": 240, "7350": 240, "384": 240, "1794": 240, "4433": 240, "385": 240, "5432": 240, "738": 240, "9084": 240, "387": 240, "8010": 240, "388": 240, "9532": 240, "6513": 240, "389": 240, "8265": 240, "0729": 240, "390": 240, "8901": 240, "391": 240, "8347": 240, "7444": 240, "392": 240, "6952": 240, "7052": 240, "393": 240, "4568": 240, "1346": 240, "394": 240, "2150": 240, "0438": 240, "943": 240, "395": 240, "2904": 240, "9225": 240, "3052": 240, "0075": 240, "8393": 240, "397": 240, "1268": 240, "398": 240, "4296": 240, "1481": 240, "399": 240, "5538": 240, "3458": 240, "2728": 240, "1060": 240, "401": 240, "7887": 240, "2564": 240, "402": 240, "9080": 240, "5411": 240, "403": 240, "1620": 240, "7441": 240, "7703": 240, "405": 240, "6127": 240, "3102": 240, "406": 240, "4175": 240, "5960": 240, "407": 240, "0043": 240, "8779": 240, "409": 240, "6928": 240, "410": 240, "2700": 240, "022": 240, "0357": 240, "0019": 240, "028": 240, "412": 240, "0935": 240, "0060": 240, "7993": 240, "413": 240, "9033": 240, "0065": 240, "6378": 240, "414": 240, "9597": 240, "415": 240, "0110": 240, "0005": 240, "4133": 240, "416": 240, "8585": 240, "0042": 240, "6746": 240, "417": 240, "7328": 240, "1174": 240, "4613": 240, "418": 240, "0233": 240, "419": 240, "3477": 240, "018": 240, "420": 240, "45it": 240, "6869": 240, "0289": 240, "4806": 240, "421": 240, "1528": 240, "0134": 240, "2848": 240, "422": 240, "1684": 240, "2155": 240, "423": 240, "0116": 240, "5719": 240, "424": 240, "0214": 240, "2801": 240, "425": 240, "4760": 240, "0224": 240, "6168": 240, "426": 240, "2511": 240, "0045": 240, "1865": 240, "8317": 240, "1415": 240, "2207": 240, "0841": 240, "429": 240, "0849": 240, "985": 240, "430": 240, "9495": 240, "0372": 240, "9485": 240, "431": 240, "9242": 240, "0039": 240, "4826": 240, "432": 240, "1635": 240, "433": 240, "9218": 240, "1003": 240, "434": 240, "7468": 240, "1522": 240, "435": 240, "7471": 240, "5852": 240, "9354": 240, "0013": 240, "037": 240, "437": 240, "3633": 240, "0187": 240, "061": 240, "438": 240, "7091": 240, "0212": 240, "439": 240, "0950": 240, "6344": 240, "440": 240, "1945": 240, "5790": 240, "441": 240, "6370": 240, "7047": 240, "442": 240, "9447": 240, "0551": 240, "443": 240, "0674": 240, "0146": 240, "046": 240, "444": 240, "0087": 240, "0247": 240, "445": 240, "2640": 240, "0129": 240, "8987": 240, "446": 240, "1670": 240, "5398": 240, "447": 240, "9180": 240, "7940": 240, "448": 240, "2948": 240, "0588": 240, "449": 240, "0486": 240, "0029": 240, "1134": 240, "450": 240, "3267": 240, "5681": 240, "451": 240, "0151": 240, "452": 240, "6647": 240, "0316": 240, "453": 240, "5449": 240, "0209": 240, "097": 240, "454": 240, "9321": 240, "3687": 240, "953": 240, "455": 240, "9511": 240, "2701": 240, "456": 240, "0406": 240, "8281": 240, "457": 240, "0379": 240, "458": 240, "2470": 240, "0437": 240, "459": 240, "5843": 240, "0072": 240, "460": 240, "6838": 240, "3447": 240, "461": 240, "7313": 240, "0355": 240, "462": 240, "9268": 240, "0265": 240, "9834": 240, "463": 240, "8536": 240, "9786": 240, "464": 240, "0696": 240, "7232": 240, "465": 240, "9096": 240, "4422": 240, "466": 240, "3227": 240, "0026": 240, "467": 240, "9565": 240, "9563": 240, "9941": 240, "1284": 240, "469": 240, "1401": 240, "2850": 240, "470": 240, "1807": 240, "8859": 240, "471": 240, "0268": 240, "2992": 240, "472": 240, "7436": 240, "0048": 240, "034": 240, "473": 240, "7046": 240, "0352": 240, "474": 240, "2023": 240, "3258": 240, "515": 240, "475": 240, "0141": 240, "9798": 240, "476": 240, "4474": 240, "0912": 240, "477": 240, "9181": 240, "5476": 240, "478": 240, "1264": 240, "3269": 240, "0714": 240, "0030": 240, "5317": 240, "480": [240, 241], "5477": 240, "0255": 240, "8628": 240, "481": 240, "1258": 240, "0015": 240, "482": 240, "9650": 240, "4266": 240, "483": 240, "8081": 240, "0004": 240, "4455": 240, "484": 240, "5812": 240, "1719": 240, "485": 240, "1741": 240, "486": 240, "1595": 240, "0089": 240, "936": 240, "487": 240, "1667": 240, "3892": 240, "488": 240, "3824": 240, "0093": 240, "6528": 240, "489": 240, "1727": 240, "1435": 240, "059": 240, "490": 240, "0916": 240, "0018": 240, "4518": 240, "9310": 240, "0006": 240, "3553": 240, "492": 240, "9972": 240, "4515": 240, "493": 240, "9493": 240, "8759": 240, "494": 240, "3700": 240, "495": 240, "0269": 240, "4107": 240, "496": 240, "6094": 240, "497": 240, "9116": 240, "1518": 240, "6022": 240, "0047": 240, "2026": 240, "499": 240, "8009": 240, "0007": 240, "1845": 240, "6948": 240, "501": 240, "0971": 240, "0387": 240, "951": 240, "2885": 240, "503": 240, "0894": 240, "2552": 240, "0191": 240, "505": 240, "8276": 240, "506": 240, "9520": 240, "0037": 240, "5835": 240, "0374": 240, "7556": 240, "508": 240, "0579": 240, "0399": 240, "9277": 240, "509": 240, "0094": 240, "7127": 240, "510": 240, "0119": 240, "0121": 240, "511": 240, "6013": 240, "0220": 240, "8064": 240, "2684": 240, "8179": 240, "513": 240, "4730": 240, "0046": 240, "5481": 240, "514": 240, "0234": 240, "4331": 240, "8143": 240, "2915": [240, 243], "9051": 240, "0353": 240, "9127": 240, "517": 240, "0527": 240, "6465": 240, "7579": 240, "2010": 240, "3927": 240, "5383": 240, "862": 240, "520": 240, "7386": 240, "1014": 240, "521": 240, "9163": 240, "4487": 240, "522": 240, "5626": 240, "523": 240, "2899": 240, "0113": 240, "524": 240, "6441": 240, "0044": 240, "3965": 240, "525": 240, "5001": 240, "2060": 240, "526": 240, "8905": 240, "4168": 240, "527": 240, "4458": 240, "0012": 240, "051": 240, "528": 240, "9446": 240, "3096": 240, "529": 240, "2399": 240, "1971": 240, "530": 240, "4471": 240, "531": 240, "1270": 240, "0023": 240, "532": 240, "533": 240, "6550": 240, "583": 240, "534": 240, "1092": 240, "0049": 240, "787": 240, "535": 240, "7641": 240, "6674": 240, "536": 240, "0083": 240, "6375": 240, "537": 240, "1713": 240, "4933": 240, "538": [240, 242], "3557": 240, "3964": 240, "539": 240, "0040": 240, "4129": 240, "540": 240, "7999": 240, "3176": 240, "541": 240, "2613": 240, "4742": 240, "542": 240, "1826": 240, "934": 240, "543": 240, "3158": 240, "544": 240, "3686": 240, "4047": 240, "545": 240, "7943": 240, "0902": 240, "546": 240, "3889": 240, "547": 240, "4309": 240, "4762": 240, "9526": 240, "549": 240, "0520": 240, "4367": 240, "550": 240, "4584": 240, "6931": 240, "0306": 240, "752": 240, "552": 240, "9054": 240, "2062": 240, "553": 240, "9523": 240, "4382": 240, "554": 240, "3534": 240, "0136": 240, "663": 240, "555": 240, "0279": 240, "0171": 240, "5679": 240, "4345": 240, "0145": 240, "4652": 240, "557": 240, "1205": 240, "0091": 240, "4838": 240, "0630": 240, "1721": 240, "3604": 240, "560": 240, "1695": 240, "561": 240, "6994": 240, "3646": 240, "0192": 240, "4547": 240, "564": 240, "2580": 240, "2356": 240, "1397": 240, "8400": 240, "7309": 240, "567": 240, "2400": 240, "0101": 240, "8539": 240, "1256": 240, "4851": 240, "0284": 240, "570": 240, "7214": 240, "2575": 240, "571": 240, "3996": 240, "572": 240, "2542": 240, "4089": 240, "573": 240, "5782": 240, "0071": 240, "7487": 240, "574": 240, "3665": 240, "0050": 240, "7797": 240, "575": 240, "5660": 240, "1355": 240, "932": 240, "576": 240, "8266": 240, "577": 240, "3782": 240, "743": [240, 241, 242, 243], "578": 240, "1228": 240, "2931": 240, "043": 240, "6242": 240, "580": 240, "7491": 240, "6910": 240, "581": 240, "0262": 240, "582": 240, "2386": 240, "0249": 240, "816": 240, "2947": 240, "2122": 240, "584": 240, "0096": 240, "0124": 240, "585": 240, "2979": 240, "0156": 240, "4948": 240, "586": 240, "3268": 240, "0369": 240, "6409": 240, "4034": 240, "4395": 240, "588": 240, "8407": 240, "4432": 240, "589": 240, "0069": 240, "3628": 240, "590": 240, "3101": 240, "591": 240, "3404": 240, "2912": 240, "2964": 240, "2112": 240, "4832": 240, "594": 240, "8374": 240, "4346": 240, "7782": 240, "3826": 240, "7098": 240, "597": 240, "8646": 240, "0526": 240, "598": 240, "7452": 240, "9579": 240, "0991": 240, "889": 240, "600": 240, "0332": 240, "0199": 240, "601": 240, "602": 240, "7237": 240, "3591": 240, "603": 240, "3797": 240, "0022": 240, "6776": 240, "604": 240, "9337": 240, "1918": 240, "605": 240, "6301": 240, "606": 240, "5972": 240, "5044": 240, "2131": 240, "664": 240, "609": 240, "1180": 240, "6142": 240, "610": 240, "5289": 240, "6693": 240, "611": 240, "4947": 240, "612": 240, "2196": 240, "4060": 240, "613": 240, "7377": 240, "3732": 240, "614": 240, "4574": 240, "0997": 240, "3581": 240, "615": 240, "9247": 240, "3012": 240, "616": 240, "3761": 240, "5136": 240, "617": 240, "4771": 240, "894": 240, "0177": 240, "3644": 240, "620": 240, "5914": 240, "1632": 240, "621": 240, "4353": 240, "7637": 240, "622": 240, "7577": 240, "1609": 240, "809": 240, "623": 240, "8873": 240, "624": 240, "6568": 240, "5234": 240, "subject": 240, "saw": 240, "fine": 241, "semat": 241, "r3mtransform": 241, "sake": 241, "embodi": 241, "ai": 241, "env_transform": [241, 244], "s3": 241, "amazonaw": 241, "r3m_50": 241, "374m": 241, "4m": 241, "110mb": 241, "2m": 241, "123mb": 241, "4mb": 241, "5m": 241, "0mb": 241, "101mb": 241, "8m": 241, "8mb": 241, "5mb": 241, "0m": 241, "105m": 241, "9mb": 241, "115m": 241, "6mb": 241, "128m": 241, "135m": 241, "147m": 241, "7mb": 241, "154m": 241, "164m": 241, "179m": 241, "2mb": 241, "186m": 241, "197m": 241, "213m": 241, "1mb": 241, "229m": 241, "246m": 241, "262m": 241, "272m": 241, "280m": 241, "295m": 241, "310m": 241, "3mb": 241, "317m": 241, "328m": 241, "344m": 241, "359m": 241, "369m": 241, "2048": 241, "wiser": 241, "again": [241, 244], "conclud": 241, "haven": 241, "yet": 241, "_storag": 241, "4566": 241, "pretrained_model": [241, 242], "torchrl_demo": [242, 243], "3713": 242, "torchrl_env": [242, 244], "4565": 242, "demo": 243, "icml": 243, "dai": 243, "vmoen": 243, "fb": 243, "question": 243, "team": 243, "decid": 243, "invest": 243, "platform": 243, "media": 243, "truli": 243, "predominantli": 243, "tensordict1": 243, "tensordict2": 243, "tensordict_sampl": 243, "_sampler": 243, "_sum_tre": 243, "modulenotfounderror": 243, "06984968483448029": 243, "28791671991348267": 243, "gym_env": 243, "noopresetenv": [243, 244], "lazyconv2d": 243, "6400": 243, "backbone_modul": 243, "params_expand": 243, "tensordict_exp": 243, "base_modul": 243, "0137": 243, "1524": 243, "0641": 243, "copybackward": 243, "1335": 243, "9833": 243, "3497": 243, "6889": 243, "6433": 243, "clampbackward1": 243, "1131": 243, "1761": 243, "3425": 243, "2665": 243, "6207": 243, "1441": 243, "2375": 243, "1372": 243, "3810": 243, "meanbackward1": 243, "tensordicts_prealloc": 243, "tensordicts_stack": 243, "tensordict_rollout": [243, 244], "disclaim": 243, "concatmodul": 243, "loss_td": 243, "1501": 243, "_call_impl": 243, "forward_cal": 243, "pred_val": 243, "_loss_valu": 243, "_contextlib": 243, "decorate_context": 243, "3241": 243, "_default_get": 243, "keyerror": 243, "year": 243, "roadmap": 243, "compris": 243, "contributor": 243, "curiou": 243, "feedback": 243, "nascent": 243, "pypi": 243, "3714": 243, "supervis": 244, "unsupervis": 244, "rom": 244, "licens": 244, "pygam": 244, "unifi": 244, "insid": 244, "_build_env": 244, "sphinx_gallery_start_ignor": 244, "warn": 244, "filterwarn": 244, "sphinx_gallery_end_ignor": 244, "adventur": 244, "ram": 244, "airraid": 244, "alien": 244, "amidar": 244, "assault": 244, "6596": 244, "exectut": 244, "reproduct": 244, "tensordict_tprim": 244, "quickli": 244, "imshow": 244, "axesimag": 244, "0x7f9772213250": 244, "inconsist": 244, "swingup": 244, "swingup_spars": 244, "ball_in_cup": 244, "catch": 244, "balance_spars": 244, "three_pol": 244, "two_pol": 244, "finger": 244, "turn_easi": 244, "turn_hard": 244, "fish": 244, "swim": 244, "hopper": 244, "hop": 244, "run_pure_st": 244, "bring_bal": 244, "bring_peg": 244, "insert_bal": 244, "insert_peg": 244, "point_mass": 244, "reacher": 244, "swimmer": 244, "swimmer6": 244, "swimmer15": 244, "walker": 244, "dog": 244, "trot": 244, "humanoid_cmu": 244, "lqr": 244, "lqr_2_1": 244, "lqr_6_2": 244, "quadrup": 244, "escap": 244, "stacker": 244, "stack_2": 244, "stack_4": 244, "wrapper1": 244, "wrapper2": 244, "obviou": 244, "truth": 244, "env0": 244, "env_transformed_bi": 244, "stanc": 244, "transformeddistribut": 244, "base_dist": 244, "concat": 244, "mofidi": 244, "transformedenviron": 244, "moderet": 244, "computation": 244, "legitim": 244, "incom": 244, "amongst": 244, "wor": 244, "convention": 244, "scope": 244, "markovian": 244, "3288080526": 244, "sometim": 244, "constain": 244, "uuid1": 244, "foo": 244, "bar_": 244, "get_someth": 244, "bar_f6d3efc0": 244, "c41c": 244, "11ed": 244, "9670": 244, "0242ac120002": 244, "aargh": 244, "foo_list": 244, "vec_env": 244, "_dispatch_caller_parallel": 244, "0x7f9678099ca0": 244, "bar_fe2ab2cc": 244, "8b8d": 244, "bar_fe2dd97a": 244, "a74f": 244, "bar_fe2f903a": 244, "9196": 244, "parallen": 244, "carefulli": 244, "commonli": 244, "approxim": 244, "particularili": 244, "evolv": 244, "steadi": 244, "approx": 244, "1682": 244, "4078": 244, "1757": 244, "0928": 244, "_extra_st": 244, "observation_ssq": 244, "observation_sum": 244, "2077": 244, "2044": 244, "1904": 244, "2770": 244, "dispach": 244, "absor": 244}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "MultiSyncDataCollector"], [13, 0, 1, "", "MultiaSyncDataCollector"], [14, 0, 1, "", "RandomPolicy"], [15, 0, 1, "", "SyncDataCollector"], [16, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[15, 1, 1, "", "iterator"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rollout"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[17, 2, 1, "", "split_trajectories"]], "torchrl.data": [[18, 0, 1, "", "BinaryDiscreteTensorSpec"], [19, 0, 1, "", "BoundedTensorSpec"], [20, 0, 1, "", "CompositeSpec"], [21, 0, 1, "", "DiscreteTensorSpec"], [22, 0, 1, "", "MultiDiscreteTensorSpec"], [23, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [24, 0, 1, "", "MultiStep"], [25, 0, 1, "", "OneHotDiscreteTensorSpec"], [26, 0, 1, "", "PrioritizedReplayBuffer"], [27, 0, 1, "", "ReplayBuffer"], [28, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [29, 0, 1, "", "TensorDictReplayBuffer"], [30, 0, 1, "", "TensorSpec"], [31, 0, 1, "", "UnboundedContinuousTensorSpec"], [32, 0, 1, "", "UnboundedDiscreteTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "expand"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "expand"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "expand"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "keys"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[21, 1, 1, "", "assert_is_in"], [21, 1, 1, "", "encode"], [21, 1, 1, "", "expand"], [21, 1, 1, "", "index"], [21, 1, 1, "", "is_in"], [21, 1, 1, "", "project"], [21, 1, 1, "", "rand"], [21, 1, 1, "", "to_numpy"], [21, 1, 1, "", "to_one_hot"], [21, 1, 1, "", "to_one_hot_spec"], [21, 1, 1, "", "type_check"], [21, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "expand"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "to_one_hot"], [22, 1, 1, "", "to_one_hot_spec"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "expand"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "to_categorical"], [23, 1, 1, "", "to_categorical_spec"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[24, 1, 1, "", "add_module"], [24, 1, 1, "", "apply"], [24, 1, 1, "", "bfloat16"], [24, 1, 1, "", "buffers"], [24, 1, 1, "", "children"], [24, 1, 1, "", "cpu"], [24, 1, 1, "", "cuda"], [24, 1, 1, "", "double"], [24, 1, 1, "", "eval"], [24, 1, 1, "", "extra_repr"], [24, 1, 1, "", "float"], [24, 1, 1, "", "forward"], [24, 1, 1, "", "get_buffer"], [24, 1, 1, "", "get_extra_state"], [24, 1, 1, "", "get_parameter"], [24, 1, 1, "", "get_submodule"], [24, 1, 1, "", "half"], [24, 1, 1, "", "ipu"], [24, 1, 1, "", "load_state_dict"], [24, 1, 1, "", "modules"], [24, 1, 1, "", "named_buffers"], [24, 1, 1, "", "named_children"], [24, 1, 1, "", "named_modules"], [24, 1, 1, "", "named_parameters"], [24, 1, 1, "", "parameters"], [24, 1, 1, "", "register_backward_hook"], [24, 1, 1, "", "register_buffer"], [24, 1, 1, "", "register_forward_hook"], [24, 1, 1, "", "register_forward_pre_hook"], [24, 1, 1, "", "register_full_backward_hook"], [24, 1, 1, "", "register_full_backward_pre_hook"], [24, 1, 1, "", "register_load_state_dict_post_hook"], [24, 1, 1, "", "register_module"], [24, 1, 1, "", "register_parameter"], [24, 1, 1, "", "register_state_dict_pre_hook"], [24, 1, 1, "", "requires_grad_"], [24, 1, 1, "", "set_extra_state"], [24, 1, 1, "", "share_memory"], [24, 1, 1, "", "state_dict"], [24, 1, 1, "", "to"], [24, 1, 1, "", "to_empty"], [24, 1, 1, "", "train"], [24, 1, 1, "", "type"], [24, 1, 1, "", "xpu"], [24, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "append_transform"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "insert_transform"], [26, 1, 1, "", "sample"]], "torchrl.data.ReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "append_transform"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "insert_transform"], [27, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[28, 1, 1, "", "add"], [28, 1, 1, "", "append_transform"], [28, 1, 1, "", "extend"], [28, 1, 1, "", "insert_transform"], [28, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[29, 1, 1, "", "add"], [29, 1, 1, "", "append_transform"], [29, 1, 1, "", "extend"], [29, 1, 1, "", "insert_transform"], [29, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.samplers": [[33, 0, 1, "", "PrioritizedSampler"], [34, 0, 1, "", "RandomSampler"], [35, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[33, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[36, 0, 1, "", "LazyMemmapStorage"], [37, 0, 1, "", "LazyTensorStorage"], [38, 0, 1, "", "ListStorage"], [39, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[36, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[39, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[40, 0, 1, "", "RoundRobinWriter"], [41, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[40, 1, 1, "", "add"], [40, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "extend"]], "torchrl.envs": [[42, 0, 1, "", "EnvBase"], [43, 0, 1, "", "EnvCreator"], [44, 0, 1, "", "EnvMetaData"], [45, 0, 1, "", "GymLikeEnv"], [46, 2, 1, "", "ModelBasedEnvBase"], [47, 0, 1, "", "MultiThreadedEnv"], [48, 0, 1, "", "ParallelEnv"], [49, 0, 1, "", "SerialEnv"], [46, 1, 1, "", "rand_step"], [46, 1, 1, "", "reset"], [46, 1, 1, "", "rollout"], [46, 1, 1, "", "set_seed"], [46, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[42, 1, 1, "", "add_module"], [42, 1, 1, "", "apply"], [42, 3, 1, "", "batch_locked"], [42, 1, 1, "", "bfloat16"], [42, 1, 1, "", "buffers"], [42, 1, 1, "", "children"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 1, 1, "", "double"], [42, 1, 1, "", "eval"], [42, 1, 1, "", "extra_repr"], [42, 1, 1, "", "fake_tensordict"], [42, 1, 1, "", "float"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_buffer"], [42, 1, 1, "", "get_extra_state"], [42, 1, 1, "", "get_parameter"], [42, 1, 1, "", "get_submodule"], [42, 1, 1, "", "half"], [42, 1, 1, "", "ipu"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "modules"], [42, 1, 1, "", "named_buffers"], [42, 1, 1, "", "named_children"], [42, 1, 1, "", "named_modules"], [42, 1, 1, "", "named_parameters"], [42, 1, 1, "", "parameters"], [42, 1, 1, "", "rand_action"], [42, 1, 1, "id0", "rand_step"], [42, 1, 1, "", "register_backward_hook"], [42, 1, 1, "", "register_buffer"], [42, 1, 1, "", "register_forward_hook"], [42, 1, 1, "", "register_forward_pre_hook"], [42, 1, 1, "", "register_full_backward_hook"], [42, 1, 1, "", "register_full_backward_pre_hook"], [42, 1, 1, "", "register_load_state_dict_post_hook"], [42, 1, 1, "", "register_module"], [42, 1, 1, "", "register_parameter"], [42, 1, 1, "", "register_state_dict_pre_hook"], [42, 1, 1, "", "requires_grad_"], [42, 1, 1, "id1", "reset"], [42, 1, 1, "id2", "rollout"], [42, 1, 1, "", "set_extra_state"], [42, 1, 1, "id3", "set_seed"], [42, 1, 1, "", "share_memory"], [42, 3, 1, "", "specs"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "id4", "step"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_empty"], [42, 1, 1, "", "train"], [42, 1, 1, "", "type"], [42, 1, 1, "", "xpu"], [42, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 3, 1, "", "batch_locked"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "close"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "fake_tensordict"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "rand_action"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "read_action"], [45, 1, 1, "", "read_done"], [45, 1, 1, "", "read_obs"], [45, 1, 1, "", "read_reward"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_full_backward_pre_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "register_state_dict_pre_hook"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_info_dict_reader"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "share_memory"], [45, 3, 1, "", "specs"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "step"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[47, 1, 1, "", "add_module"], [47, 1, 1, "", "apply"], [47, 3, 1, "", "batch_locked"], [47, 1, 1, "", "bfloat16"], [47, 1, 1, "", "buffers"], [47, 1, 1, "", "children"], [47, 1, 1, "", "close"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 1, 1, "", "double"], [47, 1, 1, "", "eval"], [47, 1, 1, "", "extra_repr"], [47, 1, 1, "", "fake_tensordict"], [47, 1, 1, "", "float"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_buffer"], [47, 1, 1, "", "get_extra_state"], [47, 1, 1, "", "get_parameter"], [47, 1, 1, "", "get_submodule"], [47, 1, 1, "", "half"], [47, 1, 1, "", "ipu"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "modules"], [47, 1, 1, "", "named_buffers"], [47, 1, 1, "", "named_children"], [47, 1, 1, "", "named_modules"], [47, 1, 1, "", "named_parameters"], [47, 1, 1, "", "parameters"], [47, 1, 1, "", "rand_action"], [47, 1, 1, "", "rand_step"], [47, 1, 1, "", "register_backward_hook"], [47, 1, 1, "", "register_buffer"], [47, 1, 1, "", "register_forward_hook"], [47, 1, 1, "", "register_forward_pre_hook"], [47, 1, 1, "", "register_full_backward_hook"], [47, 1, 1, "", "register_full_backward_pre_hook"], [47, 1, 1, "", "register_load_state_dict_post_hook"], [47, 1, 1, "", "register_module"], [47, 1, 1, "", "register_parameter"], [47, 1, 1, "", "register_state_dict_pre_hook"], [47, 1, 1, "", "requires_grad_"], [47, 1, 1, "", "reset"], [47, 1, 1, "", "rollout"], [47, 1, 1, "", "set_extra_state"], [47, 1, 1, "", "set_seed"], [47, 1, 1, "", "share_memory"], [47, 3, 1, "", "specs"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "step"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_empty"], [47, 1, 1, "", "train"], [47, 1, 1, "", "type"], [47, 1, 1, "", "xpu"], [47, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[48, 1, 1, "", "add_module"], [48, 1, 1, "", "apply"], [48, 3, 1, "", "batch_locked"], [48, 1, 1, "", "bfloat16"], [48, 1, 1, "", "buffers"], [48, 1, 1, "", "children"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 1, 1, "", "double"], [48, 1, 1, "", "eval"], [48, 1, 1, "", "extra_repr"], [48, 1, 1, "", "fake_tensordict"], [48, 1, 1, "", "float"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_buffer"], [48, 1, 1, "", "get_extra_state"], [48, 1, 1, "", "get_parameter"], [48, 1, 1, "", "get_submodule"], [48, 1, 1, "", "half"], [48, 1, 1, "", "ipu"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "modules"], [48, 1, 1, "", "named_buffers"], [48, 1, 1, "", "named_children"], [48, 1, 1, "", "named_modules"], [48, 1, 1, "", "named_parameters"], [48, 1, 1, "", "parameters"], [48, 1, 1, "", "rand_action"], [48, 1, 1, "", "rand_step"], [48, 1, 1, "", "register_backward_hook"], [48, 1, 1, "", "register_buffer"], [48, 1, 1, "", "register_forward_hook"], [48, 1, 1, "", "register_forward_pre_hook"], [48, 1, 1, "", "register_full_backward_hook"], [48, 1, 1, "", "register_full_backward_pre_hook"], [48, 1, 1, "", "register_load_state_dict_post_hook"], [48, 1, 1, "", "register_module"], [48, 1, 1, "", "register_parameter"], [48, 1, 1, "", "register_state_dict_pre_hook"], [48, 1, 1, "", "requires_grad_"], [48, 1, 1, "", "reset"], [48, 1, 1, "", "rollout"], [48, 1, 1, "", "set_extra_state"], [48, 1, 1, "", "set_seed"], [48, 1, 1, "", "share_memory"], [48, 3, 1, "", "specs"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "step"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_empty"], [48, 1, 1, "", "train"], [48, 1, 1, "", "type"], [48, 1, 1, "", "update_kwargs"], [48, 1, 1, "", "xpu"], [48, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[49, 1, 1, "", "add_module"], [49, 1, 1, "", "apply"], [49, 3, 1, "", "batch_locked"], [49, 1, 1, "", "bfloat16"], [49, 1, 1, "", "buffers"], [49, 1, 1, "", "children"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 1, 1, "", "double"], [49, 1, 1, "", "eval"], [49, 1, 1, "", "extra_repr"], [49, 1, 1, "", "fake_tensordict"], [49, 1, 1, "", "float"], [49, 1, 1, "", "forward"], [49, 1, 1, "", "get_buffer"], [49, 1, 1, "", "get_extra_state"], [49, 1, 1, "", "get_parameter"], [49, 1, 1, "", "get_submodule"], [49, 1, 1, "", "half"], [49, 1, 1, "", "ipu"], [49, 1, 1, "", "load_state_dict"], [49, 1, 1, "", "modules"], [49, 1, 1, "", "named_buffers"], [49, 1, 1, "", "named_children"], [49, 1, 1, "", "named_modules"], [49, 1, 1, "", "named_parameters"], [49, 1, 1, "", "parameters"], [49, 1, 1, "", "rand_action"], [49, 1, 1, "", "rand_step"], [49, 1, 1, "", "register_backward_hook"], [49, 1, 1, "", "register_buffer"], [49, 1, 1, "", "register_forward_hook"], [49, 1, 1, "", "register_forward_pre_hook"], [49, 1, 1, "", "register_full_backward_hook"], [49, 1, 1, "", "register_full_backward_pre_hook"], [49, 1, 1, "", "register_load_state_dict_post_hook"], [49, 1, 1, "", "register_module"], [49, 1, 1, "", "register_parameter"], [49, 1, 1, "", "register_state_dict_pre_hook"], [49, 1, 1, "", "requires_grad_"], [49, 1, 1, "", "reset"], [49, 1, 1, "", "rollout"], [49, 1, 1, "", "set_extra_state"], [49, 1, 1, "", "set_seed"], [49, 1, 1, "", "share_memory"], [49, 3, 1, "", "specs"], [49, 1, 1, "", "state_dict"], [49, 1, 1, "", "step"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_empty"], [49, 1, 1, "", "train"], [49, 1, 1, "", "type"], [49, 1, 1, "", "update_kwargs"], [49, 1, 1, "", "xpu"], [49, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.brax": [[50, 2, 1, "", "BraxEnv"], [51, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[52, 2, 1, "", "DMControlEnv"], [53, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[54, 2, 1, "", "GymEnv"], [55, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[56, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[57, 2, 1, "", "JumanjiEnv"], [58, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.vmas": [[59, 2, 1, "", "VmasEnv"], [60, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[61, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[62, 0, 1, "", "BinarizeReward"], [63, 0, 1, "", "CatFrames"], [64, 0, 1, "", "CatTensors"], [65, 0, 1, "", "CenterCrop"], [66, 0, 1, "", "Compose"], [67, 0, 1, "", "DiscreteActionProjection"], [68, 0, 1, "", "DoubleToFloat"], [69, 0, 1, "", "ExcludeTransform"], [70, 0, 1, "", "FiniteTensorDictCheck"], [71, 0, 1, "", "FlattenObservation"], [72, 0, 1, "", "FrameSkipTransform"], [73, 0, 1, "", "GrayScale"], [74, 0, 1, "", "InitTracker"], [75, 0, 1, "", "NoopResetEnv"], [76, 0, 1, "", "ObservationNorm"], [77, 0, 1, "", "ObservationTransform"], [78, 0, 1, "", "PinMemoryTransform"], [79, 0, 1, "", "R3MTransform"], [80, 0, 1, "", "RandomCropTensorDict"], [81, 0, 1, "", "RenameTransform"], [82, 0, 1, "", "Resize"], [83, 0, 1, "", "RewardClipping"], [84, 0, 1, "", "RewardScaling"], [85, 0, 1, "", "RewardSum"], [86, 0, 1, "", "SelectTransform"], [87, 0, 1, "", "SqueezeTransform"], [88, 0, 1, "", "StepCounter"], [89, 0, 1, "", "TensorDictPrimer"], [90, 0, 1, "", "TimeMaxPool"], [91, 0, 1, "", "ToTensorImage"], [92, 0, 1, "", "Transform"], [93, 0, 1, "", "TransformedEnv"], [94, 0, 1, "", "UnsqueezeTransform"], [95, 0, 1, "", "VIPRewardTransform"], [96, 0, 1, "", "VIPTransform"], [97, 0, 1, "", "VecNorm"], [98, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[62, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[63, 1, 1, "", "forward"], [63, 1, 1, "", "reset"], [63, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[64, 1, 1, "", "forward"], [64, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[65, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[66, 1, 1, "", "forward"], [66, 1, 1, "", "reset"], [66, 1, 1, "", "to"], [66, 1, 1, "", "transform_input_spec"], [66, 1, 1, "", "transform_observation_spec"], [66, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[67, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[68, 1, 1, "", "transform_input_spec"], [68, 1, 1, "", "transform_observation_spec"], [68, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[69, 1, 1, "", "forward"], [69, 1, 1, "", "reset"], [69, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[70, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[71, 1, 1, "", "forward"], [71, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[72, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[73, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[74, 1, 1, "", "forward"], [74, 1, 1, "", "reset"], [74, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[75, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[76, 1, 1, "", "init_stats"], [76, 1, 1, "", "transform_input_spec"], [76, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[78, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[79, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[80, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[81, 1, 1, "", "forward"], [81, 1, 1, "", "transform_input_spec"], [81, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[82, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[83, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[84, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[85, 1, 1, "", "forward"], [85, 1, 1, "", "reset"], [85, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[86, 1, 1, "", "forward"], [86, 1, 1, "", "reset"], [86, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[88, 1, 1, "", "forward"], [88, 1, 1, "", "reset"], [88, 1, 1, "", "transform_input_spec"], [88, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[89, 1, 1, "", "forward"], [89, 1, 1, "", "reset"], [89, 1, 1, "", "to"], [89, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[90, 1, 1, "", "forward"], [90, 1, 1, "", "reset"], [90, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[91, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[92, 1, 1, "", "forward"], [92, 1, 1, "", "reset"], [92, 1, 1, "", "transform_done_spec"], [92, 1, 1, "", "transform_input_spec"], [92, 1, 1, "", "transform_observation_spec"], [92, 1, 1, "", "transform_output_spec"], [92, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[93, 3, 1, "", "action_spec"], [93, 3, 1, "", "batch_locked"], [93, 3, 1, "", "done_spec"], [93, 1, 1, "", "eval"], [93, 3, 1, "", "input_spec"], [93, 1, 1, "", "load_state_dict"], [93, 3, 1, "", "observation_spec"], [93, 3, 1, "", "output_spec"], [93, 3, 1, "", "reward_spec"], [93, 1, 1, "", "set_seed"], [93, 1, 1, "", "state_dict"], [93, 1, 1, "", "to"], [93, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[94, 1, 1, "", "transform_input_spec"], [94, 1, 1, "", "transform_observation_spec"], [94, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[95, 1, 1, "", "forward"], [95, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[96, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[97, 1, 1, "", "build_td_for_shared_vecnorm"], [97, 1, 1, "", "forward"], [97, 1, 1, "", "get_extra_state"], [97, 1, 1, "", "set_extra_state"], [97, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[99, 2, 1, "", "check_env_specs"], [100, 2, 1, "", "exploration_mode"], [101, 2, 1, "", "get_available_libraries"], [102, 2, 1, "", "set_exploration_mode"], [103, 2, 1, "", "step_mdp"]], "torchrl.modules": [[104, 0, 1, "", "CEMPlanner"], [105, 0, 1, "", "ConvNet"], [106, 0, 1, "", "DdpgCnnActor"], [107, 0, 1, "", "DdpgCnnQNet"], [108, 0, 1, "", "DdpgMlpActor"], [109, 0, 1, "", "DdpgMlpQNet"], [110, 0, 1, "", "Delta"], [111, 0, 1, "", "DistributionalDQNnet"], [112, 0, 1, "", "DreamerActor"], [113, 0, 1, "", "DuelingCnnDQNet"], [114, 0, 1, "", "IndependentNormal"], [115, 0, 1, "", "LSTMNet"], [116, 0, 1, "", "MLP"], [117, 0, 1, "", "MPCPlannerBase"], [118, 0, 1, "", "MPPIPlanner"], [119, 0, 1, "", "NoisyLazyLinear"], [120, 0, 1, "", "NoisyLinear"], [121, 0, 1, "", "NormalParamWrapper"], [122, 0, 1, "", "ObsDecoder"], [123, 0, 1, "", "ObsEncoder"], [124, 0, 1, "", "OneHotCategorical"], [125, 0, 1, "", "RSSMPosterior"], [126, 0, 1, "", "RSSMPrior"], [127, 0, 1, "", "TanhDelta"], [128, 0, 1, "", "TanhNormal"], [129, 0, 1, "", "TruncatedNormal"], [130, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[104, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[105, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[106, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[107, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[108, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[109, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[110, 1, 1, "", "log_prob"], [110, 3, 1, "", "mean"], [110, 3, 1, "", "mode"], [110, 1, 1, "", "rsample"], [110, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[111, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[112, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[113, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[114, 3, 1, "", "mode"]], "torchrl.modules.LSTMNet": [[115, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[116, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[117, 1, 1, "", "forward"], [117, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[118, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[119, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[121, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[122, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[123, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[124, 1, 1, "", "log_prob"], [124, 3, 1, "", "mode"], [124, 1, 1, "", "rsample"], [124, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[125, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[126, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[127, 3, 1, "", "mean"], [127, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[128, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[129, 1, 1, "", "log_prob"], [129, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module": [[131, 0, 1, "", "Actor"], [132, 0, 1, "", "ActorCriticOperator"], [133, 0, 1, "", "ActorCriticWrapper"], [134, 0, 1, "", "ActorValueOperator"], [135, 0, 1, "", "AdditiveGaussianWrapper"], [136, 0, 1, "", "DistributionalQValueActor"], [137, 0, 1, "", "EGreedyWrapper"], [138, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [139, 0, 1, "", "ProbabilisticActor"], [140, 0, 1, "", "QValueActor"], [141, 0, 1, "", "SafeModule"], [142, 0, 1, "", "SafeProbabilisticModule"], [143, 0, 1, "", "SafeProbabilisticSequential"], [144, 0, 1, "", "SafeSequential"], [145, 0, 1, "", "ValueOperator"], [146, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[132, 1, 1, "", "get_critic_operator"], [132, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[133, 1, 1, "", "get_policy_operator"], [133, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[134, 1, 1, "", "get_policy_operator"], [134, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[137, 1, 1, "", "forward"], [137, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[138, 1, 1, "", "forward"], [138, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.SafeModule": [[141, 1, 1, "", "random"], [141, 1, 1, "", "random_sample"], [141, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[142, 1, 1, "", "random"], [142, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[146, 1, 1, "", "get_reward_operator"], [146, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.tensordict_module.actors": [[147, 0, 1, "", "DistributionalQValueHook"], [148, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[149, 0, 1, "", "ensure_tensordict_compatible"], [150, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[151, 0, 1, "", "biased_softplus"], [152, 0, 1, "", "inv_softplus"], [153, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[151, 1, 1, "", "forward"]], "torchrl.objectives": [[154, 0, 1, "", "A2CLoss"], [155, 0, 1, "", "ClipPPOLoss"], [156, 0, 1, "", "DDPGLoss"], [157, 0, 1, "", "DQNLoss"], [158, 0, 1, "", "DistributionalDQNLoss"], [159, 0, 1, "", "DreamerActorLoss"], [160, 0, 1, "", "DreamerModelLoss"], [161, 0, 1, "", "DreamerValueLoss"], [162, 0, 1, "", "HardUpdate"], [163, 0, 1, "", "IQLLoss"], [164, 0, 1, "", "KLPENPPOLoss"], [165, 0, 1, "", "PPOLoss"], [166, 0, 1, "", "REDQLoss"], [167, 0, 1, "", "ReinforceLoss"], [168, 0, 1, "", "SACLoss"], [169, 0, 1, "", "SoftUpdate"], [170, 0, 1, "", "distance_loss"], [171, 0, 1, "", "hold_out_net"], [172, 0, 1, "", "hold_out_params"], [173, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[154, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[155, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[156, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[157, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[158, 1, 1, "", "forward"]], "torchrl.objectives.DreamerActorLoss": [[159, 1, 1, "", "forward"]], "torchrl.objectives.DreamerModelLoss": [[160, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[161, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[163, 1, 1, "", "forward"], [163, 1, 1, "", "loss_value_diff"]], "torchrl.objectives.KLPENPPOLoss": [[164, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[165, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[166, 1, 1, "", "forward"]], "torchrl.objectives.ReinforceLoss": [[167, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[168, 1, 1, "", "forward"]], "torchrl.objectives.value": [[174, 0, 1, "", "GAE"], [175, 0, 1, "", "TDEstimate"], [176, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[174, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[175, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[176, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[177, 0, 1, "", "generalized_advantage_estimate"], [178, 0, 1, "", "td_advantage_estimate"], [179, 0, 1, "", "td_lambda_advantage_estimate"], [180, 0, 1, "", "td_lambda_return_estimate"], [181, 0, 1, "", "vec_generalized_advantage_estimate"], [182, 0, 1, "", "vec_td_lambda_advantage_estimate"], [183, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[184, 2, 1, "", "TensorDictRecorder"], [185, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[186, 2, 1, "", "CSVLogger"], [187, 2, 1, "", "Logger"], [188, 2, 1, "", "MLFlowLogger"], [189, 2, 1, "", "TensorboardLogger"], [190, 2, 1, "", "WandbLogger"], [191, 2, 1, "", "generate_exp_name"], [192, 2, 1, "", "get_logger"]], "torchrl.trainers": [[193, 0, 1, "", "BatchSubSampler"], [194, 0, 1, "", "ClearCudaCache"], [195, 0, 1, "", "CountFramesLog"], [196, 0, 1, "", "LogReward"], [197, 0, 1, "", "OptimizerHook"], [198, 0, 1, "", "Recorder"], [199, 0, 1, "", "ReplayBufferTrainer"], [200, 0, 1, "", "RewardNormalizer"], [201, 0, 1, "", "SelectKeys"], [202, 0, 1, "", "Trainer"], [203, 0, 1, "", "TrainerHookBase"], [204, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.helpers": [[205, 2, 1, "", "correct_for_frame_skip"], [206, 2, 1, "", "get_stats_random_rollout"], [207, 2, 1, "", "make_a2c_loss"], [208, 2, 1, "", "make_a2c_model"], [209, 2, 1, "", "make_collector_offpolicy"], [210, 2, 1, "", "make_collector_onpolicy"], [211, 2, 1, "", "make_ddpg_actor"], [212, 2, 1, "", "make_ddpg_loss"], [213, 2, 1, "", "make_dqn_actor"], [214, 2, 1, "", "make_dqn_loss"], [215, 2, 1, "", "make_ppo_loss"], [216, 2, 1, "", "make_ppo_model"], [217, 2, 1, "", "make_redq_loss"], [218, 2, 1, "", "make_redq_model"], [219, 2, 1, "", "make_replay_buffer"], [220, 2, 1, "", "make_sac_loss"], [221, 2, 1, "", "make_sac_model"], [222, 2, 1, "", "make_target_updater"], [223, 2, 1, "", "make_trainer"], [224, 2, 1, "", "parallel_env_constructor"], [225, 2, 1, "", "sync_async_collector"], [226, 2, 1, "", "sync_sync_collector"], [227, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 6, 231, 232, 233, 234, 235, 236, 237, 240, 243, 244], "document": [0, 9], "tutori": [0, 237], "basic": 0, "intermedi": [0, 8], "advanc": 0, "refer": [0, 229], "knowledg": [0, 230], "base": [0, 7, 230, 236], "indic": 0, "tabl": 0, "collector": [1, 235, 236, 237, 243], "packag": [1, 2, 3, 231, 232, 233, 234], "data": [1, 2, 4, 235, 236, 237, 243], "helper": [1, 3], "function": [1, 4, 236, 237, 243], "replai": [2, 235, 236, 237, 243], "buffer": [2, 235, 236, 237, 243], "compos": [2, 66], "sotr": 2, "trajectori": [2, 235], "tensorspec": [2, 30], "util": [2, 231, 232, 233], "env": [3, 240, 243, 244], "vector": [3, 243], "transform": [3, 92, 235, 237, 240, 243, 244], "clone": [3, 7], "record": [3, 198, 233, 235], "domain": 3, "specif": [3, 239], "librari": [3, 243], "thing": [4, 240], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 243], "gener": 4, "have": 4, "you": 4, "valid": 4, "your": [4, 6, 235, 240], "algorithm": 4, "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 235, 236], "return": [4, 232], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "agent": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 235, 237, 239, 240], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 243], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "i": [4, 5, 8], "favor": 4, "singl": 4, "compon": 4, "veloc": 4, "v": 4, "l2": 4, "action": [4, 240], "magnitud": 4, "task": [4, 239], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 235, 236, 237], "standard": 4, "explor": [4, 231, 236], "valu": [4, 235, 237], "loss": [4, 237], "earli": 4, "train": [4, 8, 235, 236, 237, 240], "roughli": 4, "uniformli": 4, "random": 4, "intrins": 4, "decai": 4, "learn": [4, 237], "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 236], "increas": 4, "an": [4, 237, 240], "environ": [4, 6, 7, 235, 236, 237, 239, 240, 243, 244], "dynam": 4, "can": 4, "low": 4, "forward": 4, "model": [4, 231, 235, 236, 241, 243], "also": 4, "us": [4, 6, 9, 235, 236, 241, 243], "offlin": 4, "observ": [4, 235], "space": 4, "effect": [4, 240], "dramat": 4, "dure": 4, "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 244], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 243], "from": [6, 7], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 244], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 240], "workaround": 10, "implement_for": 11, "multisyncdatacollector": 12, "multiasyncdatacollector": 13, "randompolici": 14, "syncdatacollector": 15, "asyncdatacollector": 16, "split_trajectori": 17, "binarydiscretetensorspec": 18, "boundedtensorspec": 19, "compositespec": 20, "discretetensorspec": 21, "multidiscretetensorspec": 22, "multionehotdiscretetensorspec": 23, "multistep": 24, "onehotdiscretetensorspec": 25, "prioritizedreplaybuff": 26, "replaybuff": 27, "tensordictprioritizedreplaybuff": 28, "tensordictreplaybuff": 29, "unboundedcontinuoustensorspec": 31, "unboundeddiscretetensorspec": 32, "prioritizedsampl": 33, "randomsampl": 34, "sampler": 35, "lazymemmapstorag": 36, "lazytensorstorag": 37, "liststorag": 38, "storag": 39, "roundrobinwrit": 40, "writer": 41, "envbas": [42, 240], "envcreat": 43, "envmetadata": 44, "gymlikeenv": 45, "modelbasedenvbas": 46, "multithreadedenv": 47, "parallelenv": 48, "serialenv": 49, "braxenv": 50, "braxwrapp": 51, "dmcontrolenv": 52, "dmcontrolwrapp": 53, "gymenv": 54, "gymwrapp": 55, "habitatenv": 56, "jumanjienv": 57, "jumanjiwrapp": 58, "vmasenv": 59, "vmaswrapp": 60, "dreamerenv": 61, "binarizereward": 62, "catfram": 63, "cattensor": 64, "centercrop": 65, "discreteactionproject": 67, "doubletofloat": 68, "excludetransform": 69, "finitetensordictcheck": 70, "flattenobserv": 71, "frameskiptransform": 72, "grayscal": 73, "inittrack": 74, "noopresetenv": 75, "observationnorm": 76, "observationtransform": 77, "pinmemorytransform": 78, "r3mtransform": 79, "randomcroptensordict": 80, "renametransform": 81, "resiz": 82, "rewardclip": 83, "rewardsc": 84, "rewardsum": 85, "selecttransform": 86, "squeezetransform": 87, "stepcount": 88, "tensordictprim": 89, "timemaxpool": 90, "totensorimag": 91, "transformedenv": 93, "unsqueezetransform": 94, "viprewardtransform": 95, "viptransform": 96, "vecnorm": [97, 244], "gsdenois": 98, "check_env_spec": 99, "exploration_mod": 100, "get_available_librari": 101, "set_exploration_mod": 102, "step_mdp": 103, "cemplann": 104, "convnet": 105, "ddpgcnnactor": 106, "ddpgcnnqnet": 107, "ddpgmlpactor": 108, "ddpgmlpqnet": 109, "delta": 110, "distributionaldqnnet": 111, "dreameractor": 112, "duelingcnndqnet": 113, "independentnorm": 114, "lstmnet": 115, "mlp": 116, "mpcplannerbas": 117, "mppiplann": 118, "noisylazylinear": 119, "noisylinear": 120, "normalparamwrapp": 121, "obsdecod": 122, "obsencod": 123, "onehotcategor": 124, "rssmposterior": 125, "rssmprior": 126, "tanhdelta": 127, "tanhnorm": 128, "truncatednorm": 129, "reset_nois": 130, "actor": 131, "actorcriticoper": 132, "actorcriticwrapp": 133, "actorvalueoper": 134, "additivegaussianwrapp": 135, "distributionalqvalueactor": 136, "egreedywrapp": 137, "ornsteinuhlenbeckprocesswrapp": 138, "probabilisticactor": 139, "qvalueactor": 140, "safemodul": 141, "safeprobabilisticmodul": 142, "safeprobabilisticsequenti": 143, "safesequenti": 144, "valueoper": 145, "worldmodelwrapp": 146, "distributionalqvaluehook": 147, "qvaluehook": 148, "ensure_tensordict_compat": 149, "is_tensordict_compat": 150, "biased_softplu": 151, "inv_softplu": 152, "map": 153, "a2closs": 154, "clipppoloss": 155, "ddpgloss": 156, "dqnloss": 157, "distributionaldqnloss": 158, "dreameractorloss": 159, "dreamermodelloss": 160, "dreamervalueloss": 161, "hardupd": 162, "iqlloss": 163, "klpenppoloss": 164, "ppoloss": 165, "redqloss": 166, "reinforceloss": 167, "sacloss": 168, "softupd": 169, "distance_loss": 170, "hold_out_net": 171, "hold_out_param": 172, "next_state_valu": 173, "gae": 174, "tdestim": 175, "tdlambdaestim": 176, "generalized_advantage_estim": 177, "td_advantage_estim": 178, "td_lambda_advantage_estim": 179, "td_lambda_return_estim": 180, "vec_generalized_advantage_estim": 181, "vec_td_lambda_advantage_estim": 182, "vec_td_lambda_return_estim": 183, "tensordictrecord": 184, "videorecord": 185, "csvlogger": 186, "logger": [187, 233], "mlflowlogg": 188, "tensorboardlogg": 189, "wandblogg": 190, "generate_exp_nam": 191, "get_logg": 192, "batchsubsampl": 193, "clearcudacach": 194, "countframeslog": 195, "logreward": 196, "optimizerhook": 197, "replaybuffertrain": 199, "rewardnorm": 200, "selectkei": 201, "trainer": [202, 233], "trainerhookbas": 203, "updateweight": 204, "correct_for_frame_skip": 205, "get_stats_random_rollout": 206, "make_a2c_loss": 207, "make_a2c_model": 208, "make_collector_offpolici": 209, "make_collector_onpolici": 210, "make_ddpg_actor": 211, "make_ddpg_loss": 212, "make_dqn_actor": 213, "make_dqn_loss": 214, "make_ppo_loss": 215, "make_ppo_model": 216, "make_redq_loss": 217, "make_redq_model": 218, "make_replay_buff": 219, "make_sac_loss": 220, "make_sac_model": 221, "make_target_updat": 222, "make_train": 223, "parallel_env_constructor": 224, "sync_async_collector": 225, "sync_sync_collector": 226, "transformed_env_constructor": 227, "readm": [228, 238], "tuto": [228, 238], "api": 229, "contribut": [230, 243], "content": 230, "modul": [231, 236, 243], "tensordict": [231, 243], "hook": [231, 233], "planner": 231, "distribut": 231, "object": [232, 235, 243], "dqn": [232, 236], "ddpg": [232, 235], "sac": 232, "redq": 232, "iql": 232, "ppo": [232, 237], "a2c": 232, "reinforc": [232, 237], "dreamer": 232, "checkpoint": 233, "builder": 233, "_util": 234, "code": [235, 236, 240], "import": 235, "parallel": [235, 239, 244], "execut": [235, 239, 240], "build": [235, 236], "evalu": 235, "hyperparamet": [235, 236, 237], "collect": [235, 236, 237], "initi": 235, "stat": 235, "q": [235, 236], "network": [235, 236, 237], "creation": 235, "time": [235, 242], "experi": [235, 240], "result": [235, 237], "sampl": 235, "td": [235, 236], "lambda": [235, 236], "pixel": 236, "paramet": [236, 237], "comput": [236, 240, 242], "deep": 236, "target": 236, "store": 236, "loop": [236, 237, 240], "regular": 236, "conclus": [236, 237, 240], "possibl": 236, "improv": 236, "defin": 237, "next": 237, "step": [237, 244], "multi": 239, "divers": 239, "rollout": [239, 240, 244], "pendulum": 240, "write": 240, "_step": 240, "reset": [240, 244], "simul": 240, "_reset": 240, "metadata": 240, "_spec": 240, "spec": [240, 244], "shape": 240, "seed": [240, 244], "wrap": 240, "togeth": 240, "class": [240, 243], "test": 240, "our": 240, "custom": 240, "batch": 240, "simpl": 240, "pretrain": 241, "introduct": 243, "config": 243, "tensordictmodul": 243, "sequenc": 243, "program": 243, "ensembl": 243, "meta": 243, "special": 243, "state": 243, "frame_skip": 244, "deepmind": 244, "control": 244, "devic": 244, "run": 244, "close": 244, "access": 244, "attribut": 244, "kwarg": 244}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials": [[0, "tutorials"]], "Basics": [[0, "basics"]], "Intermediate": [[0, "intermediate"]], "Advanced": [[0, "advanced"]], "References": [[0, "references"]], "Knowledge Base": [[0, "knowledge-base"], [230, "knowledge-base"]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers": [[2, "composable-replay-buffers"]], "Sotring trajectories": [[2, "sotring-trajectories"]], "TensorSpec": [[2, "tensorspec"], [30, "tensorspec"]], "Utils": [[2, "utils"], [231, "utils"], [232, "utils"], [233, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [235, "transforms"], [237, "transforms"], [243, "transforms"]], "Cloning transforms": [[3, "cloning-transforms"]], "Recorders": [[3, "recorders"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Things to consider when debugging RL": [[4, "things-to-consider-when-debugging-rl"]], "General": [[4, "general"]], "Have you validated your algorithm implementation on a few small, toy problems with known optimal returns e.g. gridworlds, mountaincar?": [[4, "have-you-validated-your-algorithm-implementation-on-a-few-small-toy-problems-with-known-optimal-returns-e-g-gridworlds-mountaincar"]], "Have you visualized your agents?": [[4, "have-you-visualized-your-agents"]], "Be very careful with any data augmentation.": [[4, "be-very-careful-with-any-data-augmentation"]], "Policy": [[4, "policy"], [237, "policy"], [239, "policy"]], "Does the entropy of your policy converge too quickly, too slowly or change drastically?": [[4, "does-the-entropy-of-your-policy-converge-too-quickly-too-slowly-or-change-drastically"]], "Rewards (beyond \u201cgoing up\u201d)": [[4, "rewards-beyond-going-up"]], "Is the agent favoring a single component of the reward function (i.e. velocity vs L2 action magnitude)?": [[4, "is-the-agent-favoring-a-single-component-of-the-reward-function-i-e-velocity-vs-l2-action-magnitude"]], "Is the task horizon extremely long?": [[4, "is-the-task-horizon-extremely-long"]], "Are your rewards normalized/standardized?": [[4, "are-your-rewards-normalized-standardized"]], "Exploration": [[4, "exploration"], [231, "exploration"]], "Is value loss going up early in training?": [[4, "is-value-loss-going-up-early-in-training"]], "Are actions (roughly) uniformly/normally random early in training?": [[4, "are-actions-roughly-uniformly-normally-random-early-in-training"]], "Are intrinsic rewards decaying as learning progresses in a singleton task?": [[4, "are-intrinsic-rewards-decaying-as-learning-progresses-in-a-singleton-task"]], "Are episodic intrinsic rewards remaining constant or increasing as learning progresses in an episodic task?": [[4, "are-episodic-intrinsic-rewards-remaining-constant-or-increasing-as-learning-progresses-in-an-episodic-task"]], "Environment Dynamics": [[4, "environment-dynamics"]], "Can you train a low entropy forward dynamics and/or reward model (also useful for offline RL)?": [[4, "can-you-train-a-low-entropy-forward-dynamics-and-or-reward-model-also-useful-for-offline-rl"]], "Observation Space": [[4, "observation-space"]], "Are your observations normalized/standardized?": [[4, "are-your-observations-normalized-standardized"]], "Action Space": [[4, "action-space"]], "Is the effect of an action changing dramatically during an episode?": [[4, "is-the-effect-of-an-action-changing-dramatically-during-an-episode"]], "Is the action space too high dimensional?": [[4, "is-the-action-space-too-high-dimensional"]], "Are your actions normalized/standardized?": [[4, "are-your-actions-normalized-standardized"]], "Working with gym": [[5, "working-with-gym"]], "What is OpenAI Gym?": [[5, "what-is-openai-gym"]], "Versioning": [[5, "versioning"]], "Working with habitat-lab": [[6, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[6, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[6, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[6, "installing-torchrl"]], "Using Habitat": [[6, "using-habitat"]], "Common issues": [[6, "common-issues"]], "Working with MuJoCo-based environments": [[7, "working-with-mujoco-based-environments"]], "Installing MuJoCo": [[7, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[7, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[7, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[7, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[7, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[7, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[7, "common-issues-when-rendering-mujoco-environments"]], "Common PyTorch errors and solutions": [[8, "common-pytorch-errors-and-solutions"]], "Gradient-related errors [Newcomers]": [[8, "gradient-related-errors-newcomers"]], "My Training is too slow [Newcomers / intermediate]": [[8, "my-training-is-too-slow-newcomers-intermediate"]], "Common bugs": [[8, "common-bugs"]], "Useful resources": [[9, "useful-resources"]], "Pytorch documentation": [[9, "pytorch-documentation"]], "functorch documentation": [[9, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[9, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[9, "educational-resource"]], "Forums": [[9, "forums"]], "Repos": [[9, "repos"]], "Versioning Issues": [[10, "versioning-issues"]], "Pytorch version": [[10, "pytorch-version"]], "How to reproduce": [[10, "how-to-reproduce"]], "Workarounds": [[10, "workarounds"]], "implement_for": [[11, "implement-for"]], "MultiSyncDataCollector": [[12, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[13, "multiasyncdatacollector"]], "RandomPolicy": [[14, "randompolicy"]], "SyncDataCollector": [[15, "syncdatacollector"]], "aSyncDataCollector": [[16, "asyncdatacollector"]], "split_trajectories": [[17, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[18, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[19, "boundedtensorspec"]], "CompositeSpec": [[20, "compositespec"]], "DiscreteTensorSpec": [[21, "discretetensorspec"]], "MultiDiscreteTensorSpec": [[22, "multidiscretetensorspec"]], "MultiOneHotDiscreteTensorSpec": [[23, "multionehotdiscretetensorspec"]], "MultiStep": [[24, "multistep"]], "OneHotDiscreteTensorSpec": [[25, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[26, "prioritizedreplaybuffer"]], "ReplayBuffer": [[27, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[28, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[29, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[31, "unboundedcontinuoustensorspec"]], "UnboundedDiscreteTensorSpec": [[32, "unboundeddiscretetensorspec"]], "PrioritizedSampler": [[33, "prioritizedsampler"]], "RandomSampler": [[34, "randomsampler"]], "Sampler": [[35, "sampler"]], "LazyMemmapStorage": [[36, "lazymemmapstorage"]], "LazyTensorStorage": [[37, "lazytensorstorage"]], "ListStorage": [[38, "liststorage"]], "Storage": [[39, "storage"]], "RoundRobinWriter": [[40, "roundrobinwriter"]], "Writer": [[41, "writer"]], "EnvBase": [[42, "envbase"]], "EnvCreator": [[43, "envcreator"]], "EnvMetaData": [[44, "envmetadata"]], "GymLikeEnv": [[45, "gymlikeenv"]], "ModelBasedEnvBase": [[46, "modelbasedenvbase"]], "MultiThreadedEnv": [[47, "multithreadedenv"]], "ParallelEnv": [[48, "parallelenv"]], "SerialEnv": [[49, "serialenv"]], "BraxEnv": [[50, "braxenv"]], "BraxWrapper": [[51, "braxwrapper"]], "DMControlEnv": [[52, "dmcontrolenv"]], "DMControlWrapper": [[53, "dmcontrolwrapper"]], "GymEnv": [[54, "gymenv"]], "GymWrapper": [[55, "gymwrapper"]], "HabitatEnv": [[56, "habitatenv"]], "JumanjiEnv": [[57, "jumanjienv"]], "JumanjiWrapper": [[58, "jumanjiwrapper"]], "VmasEnv": [[59, "vmasenv"]], "VmasWrapper": [[60, "vmaswrapper"]], "DreamerEnv": [[61, "dreamerenv"]], "BinarizeReward": [[62, "binarizereward"]], "CatFrames": [[63, "catframes"]], "CatTensors": [[64, "cattensors"]], "CenterCrop": [[65, "centercrop"]], "Compose": [[66, "compose"]], "DiscreteActionProjection": [[67, "discreteactionprojection"]], "DoubleToFloat": [[68, "doubletofloat"]], "ExcludeTransform": [[69, "excludetransform"]], "FiniteTensorDictCheck": [[70, "finitetensordictcheck"]], "FlattenObservation": [[71, "flattenobservation"]], "FrameSkipTransform": [[72, "frameskiptransform"]], "GrayScale": [[73, "grayscale"]], "InitTracker": [[74, "inittracker"]], "NoopResetEnv": [[75, "noopresetenv"]], "ObservationNorm": [[76, "observationnorm"]], "ObservationTransform": [[77, "observationtransform"]], "PinMemoryTransform": [[78, "pinmemorytransform"]], "R3MTransform": [[79, "r3mtransform"]], "RandomCropTensorDict": [[80, "randomcroptensordict"]], "RenameTransform": [[81, "renametransform"]], "Resize": [[82, "resize"]], "RewardClipping": [[83, "rewardclipping"]], "RewardScaling": [[84, "rewardscaling"]], "RewardSum": [[85, "rewardsum"]], "SelectTransform": [[86, "selecttransform"]], "SqueezeTransform": [[87, "squeezetransform"]], "StepCounter": [[88, "stepcounter"]], "TensorDictPrimer": [[89, "tensordictprimer"]], "TimeMaxPool": [[90, "timemaxpool"]], "ToTensorImage": [[91, "totensorimage"]], "Transform": [[92, "transform"]], "TransformedEnv": [[93, "transformedenv"]], "UnsqueezeTransform": [[94, "unsqueezetransform"]], "VIPRewardTransform": [[95, "viprewardtransform"]], "VIPTransform": [[96, "viptransform"]], "VecNorm": [[97, "vecnorm"], [244, "vecnorm"]], "gSDENoise": [[98, "gsdenoise"]], "check_env_specs": [[99, "check-env-specs"]], "exploration_mode": [[100, "exploration-mode"]], "get_available_libraries": [[101, "get-available-libraries"]], "set_exploration_mode": [[102, "set-exploration-mode"]], "step_mdp": [[103, "step-mdp"]], "CEMPlanner": [[104, "cemplanner"]], "ConvNet": [[105, "convnet"]], "DdpgCnnActor": [[106, "ddpgcnnactor"]], "DdpgCnnQNet": [[107, "ddpgcnnqnet"]], "DdpgMlpActor": [[108, "ddpgmlpactor"]], "DdpgMlpQNet": [[109, "ddpgmlpqnet"]], "Delta": [[110, "delta"]], "DistributionalDQNnet": [[111, "distributionaldqnnet"]], "DreamerActor": [[112, "dreameractor"]], "DuelingCnnDQNet": [[113, "duelingcnndqnet"]], "IndependentNormal": [[114, "independentnormal"]], "LSTMNet": [[115, "lstmnet"]], "MLP": [[116, "mlp"]], "MPCPlannerBase": [[117, "mpcplannerbase"]], "MPPIPlanner": [[118, "mppiplanner"]], "NoisyLazyLinear": [[119, "noisylazylinear"]], "NoisyLinear": [[120, "noisylinear"]], "NormalParamWrapper": [[121, "normalparamwrapper"]], "ObsDecoder": [[122, "obsdecoder"]], "ObsEncoder": [[123, "obsencoder"]], "OneHotCategorical": [[124, "onehotcategorical"]], "RSSMPosterior": [[125, "rssmposterior"]], "RSSMPrior": [[126, "rssmprior"]], "TanhDelta": [[127, "tanhdelta"]], "TanhNormal": [[128, "tanhnormal"]], "TruncatedNormal": [[129, "truncatednormal"]], "reset_noise": [[130, "reset-noise"]], "Actor": [[131, "actor"]], "ActorCriticOperator": [[132, "actorcriticoperator"]], "ActorCriticWrapper": [[133, "actorcriticwrapper"]], "ActorValueOperator": [[134, "actorvalueoperator"]], "AdditiveGaussianWrapper": [[135, "additivegaussianwrapper"]], "DistributionalQValueActor": [[136, "distributionalqvalueactor"]], "EGreedyWrapper": [[137, "egreedywrapper"]], "OrnsteinUhlenbeckProcessWrapper": [[138, "ornsteinuhlenbeckprocesswrapper"]], "ProbabilisticActor": [[139, "probabilisticactor"]], "QValueActor": [[140, "qvalueactor"]], "SafeModule": [[141, "safemodule"]], "SafeProbabilisticModule": [[142, "safeprobabilisticmodule"]], "SafeProbabilisticSequential": [[143, "safeprobabilisticsequential"]], "SafeSequential": [[144, "safesequential"]], "ValueOperator": [[145, "valueoperator"]], "WorldModelWrapper": [[146, "worldmodelwrapper"]], "DistributionalQValueHook": [[147, "distributionalqvaluehook"]], "QValueHook": [[148, "qvaluehook"]], "ensure_tensordict_compatible": [[149, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[150, "is-tensordict-compatible"]], "biased_softplus": [[151, "biased-softplus"]], "inv_softplus": [[152, "inv-softplus"]], "mappings": [[153, "mappings"]], "A2CLoss": [[154, "a2closs"]], "ClipPPOLoss": [[155, "clipppoloss"]], "DDPGLoss": [[156, "ddpgloss"]], "DQNLoss": [[157, "dqnloss"]], "DistributionalDQNLoss": [[158, "distributionaldqnloss"]], "DreamerActorLoss": [[159, "dreameractorloss"]], "DreamerModelLoss": [[160, "dreamermodelloss"]], "DreamerValueLoss": [[161, "dreamervalueloss"]], "HardUpdate": [[162, "hardupdate"]], "IQLLoss": [[163, "iqlloss"]], "KLPENPPOLoss": [[164, "klpenppoloss"]], "PPOLoss": [[165, "ppoloss"]], "REDQLoss": [[166, "redqloss"]], "ReinforceLoss": [[167, "reinforceloss"]], "SACLoss": [[168, "sacloss"]], "SoftUpdate": [[169, "softupdate"]], "distance_loss": [[170, "distance-loss"]], "hold_out_net": [[171, "hold-out-net"]], "hold_out_params": [[172, "hold-out-params"]], "next_state_value": [[173, "next-state-value"]], "GAE": [[174, "gae"]], "TDEstimate": [[175, "tdestimate"]], "TDLambdaEstimate": [[176, "tdlambdaestimate"]], "generalized_advantage_estimate": [[177, "generalized-advantage-estimate"]], "td_advantage_estimate": [[178, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[179, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[180, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[181, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[182, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[183, "vec-td-lambda-return-estimate"]], "TensorDictRecorder": [[184, "tensordictrecorder"]], "VideoRecorder": [[185, "videorecorder"]], "CSVLogger": [[186, "csvlogger"]], "Logger": [[187, "logger"]], "MLFlowLogger": [[188, "mlflowlogger"]], "TensorboardLogger": [[189, "tensorboardlogger"]], "WandbLogger": [[190, "wandblogger"]], "generate_exp_name": [[191, "generate-exp-name"]], "get_logger": [[192, "get-logger"]], "BatchSubSampler": [[193, "batchsubsampler"]], "ClearCudaCache": [[194, "clearcudacache"]], "CountFramesLog": [[195, "countframeslog"]], "LogReward": [[196, "logreward"]], "OptimizerHook": [[197, "optimizerhook"]], "Recorder": [[198, "recorder"], [235, "recorder"]], "ReplayBufferTrainer": [[199, "replaybuffertrainer"]], "RewardNormalizer": [[200, "rewardnormalizer"]], "SelectKeys": [[201, "selectkeys"]], "Trainer": [[202, "trainer"]], "TrainerHookBase": [[203, "trainerhookbase"]], "UpdateWeights": [[204, "updateweights"]], "correct_for_frame_skip": [[205, "correct-for-frame-skip"]], "get_stats_random_rollout": [[206, "get-stats-random-rollout"]], "make_a2c_loss": [[207, "make-a2c-loss"]], "make_a2c_model": [[208, "make-a2c-model"]], "make_collector_offpolicy": [[209, "make-collector-offpolicy"]], "make_collector_onpolicy": [[210, "make-collector-onpolicy"]], "make_ddpg_actor": [[211, "make-ddpg-actor"]], "make_ddpg_loss": [[212, "make-ddpg-loss"]], "make_dqn_actor": [[213, "make-dqn-actor"]], "make_dqn_loss": [[214, "make-dqn-loss"]], "make_ppo_loss": [[215, "make-ppo-loss"]], "make_ppo_model": [[216, "make-ppo-model"]], "make_redq_loss": [[217, "make-redq-loss"]], "make_redq_model": [[218, "make-redq-model"]], "make_replay_buffer": [[219, "make-replay-buffer"]], "make_sac_loss": [[220, "make-sac-loss"]], "make_sac_model": [[221, "make-sac-model"]], "make_target_updater": [[222, "make-target-updater"]], "make_trainer": [[223, "make-trainer"]], "parallel_env_constructor": [[224, "parallel-env-constructor"]], "sync_async_collector": [[225, "sync-async-collector"]], "sync_sync_collector": [[226, "sync-sync-collector"]], "transformed_env_constructor": [[227, "transformed-env-constructor"]], "README Tutos": [[228, "readme-tutos"], [238, "readme-tutos"]], "API Reference": [[229, "api-reference"]], "Contributing": [[230, "contributing"], [243, "contributing"]], "Contents:": [[230, null]], "torchrl.modules package": [[231, "torchrl-modules-package"]], "TensorDict modules": [[231, "tensordict-modules"]], "Hooks": [[231, "hooks"]], "Models": [[231, "models"], [243, "models"]], "Planners": [[231, "planners"]], "Distributions": [[231, "distributions"]], "torchrl.objectives package": [[232, "torchrl-objectives-package"]], "DQN": [[232, "dqn"]], "DDPG": [[232, "ddpg"]], "SAC": [[232, "sac"]], "REDQ": [[232, "redq"]], "IQL": [[232, "iql"]], "PPO": [[232, "ppo"]], "A2C": [[232, "a2c"]], "Reinforce": [[232, "reinforce"]], "Dreamer": [[232, "dreamer"]], "Returns": [[232, "returns"]], "torchrl.trainers package": [[233, "torchrl-trainers-package"]], "Checkpointing": [[233, "checkpointing"]], "Trainer and hooks": [[233, "trainer-and-hooks"]], "Builders": [[233, "builders"]], "Loggers": [[233, "loggers"]], "Recording utils": [[233, "recording-utils"]], "torchrl._utils package": [[234, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[235, "coding-ddpg-using-torchrl"]], "Imports": [[235, "imports"]], "Environment": [[235, "environment"], [235, "id1"]], "Normalization of the observations": [[235, "normalization-of-the-observations"]], "Parallel execution": [[235, "parallel-execution"]], "Building the model": [[235, "building-the-model"]], "Evaluator: building your recorder object": [[235, "evaluator-building-your-recorder-object"]], "Replay buffer": [[235, "replay-buffer"], [235, "id2"], [235, "id3"], [237, "replay-buffer"]], "Hyperparameters": [[235, "hyperparameters"], [236, "hyperparameters"]], "Collection": [[235, "collection"]], "Optimizer and optimization": [[235, "optimizer-and-optimization"]], "Model": [[235, "model"]], "Initialization": [[235, "initialization"]], "Normalization stats": [[235, "normalization-stats"]], "Models: policy and q-value network": [[235, "models-policy-and-q-value-network"]], "Parallel environment creation": [[235, "parallel-environment-creation"]], "Data collector": [[235, "data-collector"], [236, "data-collector"], [237, "data-collector"]], "Optimizer": [[235, "optimizer"], [236, "optimizer"]], "Time to train the policy": [[235, "time-to-train-the-policy"]], "Experiment results": [[235, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[235, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[236, "coding-a-pixel-based-dqn-using-torchrl"]], "DQN parameters": [[236, "dqn-parameters"]], "Data collection and replay buffer": [[236, "data-collection-and-replay-buffer"]], "Environment and exploration": [[236, "environment-and-exploration"]], "Building the environment": [[236, "building-the-environment"]], "Compute normalizing constants": [[236, "compute-normalizing-constants"]], "Building the model (Deep Q-network)": [[236, "building-the-model-deep-q-network"]], "Target parameters": [[236, "target-parameters"]], "Functionalizing modules": [[236, "functionalizing-modules"]], "Collecting and storing data": [[236, "collecting-and-storing-data"]], "Replay buffers": [[236, "replay-buffers"], [243, "replay-buffers"]], "Training loop of a regular DQN": [[236, "training-loop-of-a-regular-dqn"]], "DQN with TD(\\lambda)": [[236, "dqn-with-td-lambda"]], "Data: Replay buffer and collector": [[236, "data-replay-buffer-and-collector"]], "Training loop": [[236, "training-loop"], [237, "training-loop"], [240, "training-loop"]], "Conclusion and possible improvements": [[236, "conclusion-and-possible-improvements"]], "Reinforcement Learning (PPO) with TorchRL Tutorial": [[237, "reinforcement-learning-ppo-with-torchrl-tutorial"]], "Define Hyperparameters": [[237, "define-hyperparameters"]], "Data collection parameters": [[237, "data-collection-parameters"]], "PPO parameters": [[237, "ppo-parameters"]], "Define an environment": [[237, "define-an-environment"]], "Normalization": [[237, "normalization"]], "Value network": [[237, "value-network"]], "Loss function": [[237, "loss-function"]], "Results": [[237, "results"]], "Conclusion and next steps": [[237, "conclusion-and-next-steps"]], "Task-specific policy in multi-task environments": [[239, "task-specific-policy-in-multi-task-environments"]], "Executing diverse tasks in parallel": [[239, "executing-diverse-tasks-in-parallel"]], "Rollout": [[239, "rollout"]], "Pendulum: Writing your environment and transforms with TorchRL": [[240, "pendulum-writing-your-environment-and-transforms-with-torchrl"]], "Coding the effect of an action: torchrl.envs.EnvBase._step()": [[240, "coding-the-effect-of-an-action-torchrl-envs-envbase-step"]], "Resetting the simulator: torchrl.envs.EnvBase._reset()": [[240, "resetting-the-simulator-torchrl-envs-envbase-reset"]], "Environment metadata: env.*_spec": [[240, "environment-metadata-env-spec"]], "Specs shape": [[240, "specs-shape"]], "Reproducible experiments: seeding": [[240, "reproducible-experiments-seeding"]], "Wrapping things together: the torchrl.envs.EnvBase class": [[240, "wrapping-things-together-the-torchrl-envs-envbase-class"]], "Testing our environment": [[240, "testing-our-environment"]], "Transforming an environment": [[240, "transforming-an-environment"]], "Writing custom transforms": [[240, "writing-custom-transforms"]], "Executing a rollout": [[240, "executing-a-rollout"]], "Batching computations": [[240, "batching-computations"]], "Training a simple policy": [[240, "training-a-simple-policy"]], "Conclusion": [[240, "conclusion"]], "Using pretrained models": [[241, "using-pretrained-models"]], "Computation times": [[242, "computation-times"]], "Introduction to TorchRL": [[243, "introduction-to-torchrl"]], "Data": [[243, "data"]], "TensorDict": [[243, "tensordict"]], "Envs": [[243, "envs"]], "Changing environments config": [[243, "changing-environments-config"]], "Vectorized Environments": [[243, "vectorized-environments"]], "Modules": [[243, "modules"]], "TensorDictModules": [[243, "tensordictmodules"]], "Sequences of Modules": [[243, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[243, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[243, "specialized-classes"]], "Using Environments and Modules": [[243, "using-environments-and-modules"]], "Collectors": [[243, "collectors"]], "Objectives": [[243, "objectives"]], "State of the Library": [[243, "state-of-the-library"]], "Installing the Library": [[243, "installing-the-library"]], "TorchRL envs": [[244, "torchrl-envs"]], "Gym environments": [[244, "gym-environments"]], "Env Specs": [[244, "env-specs"]], "Seeding, resetting and steps": [[244, "seeding-resetting-and-steps"]], "Rollouts": [[244, "rollouts"]], "frame_skip": [[244, "frame-skip"]], "Rendering": [[244, "rendering"]], "DeepMind Control environments": [[244, "deepmind-control-environments"]], "Transforming envs": [[244, "transforming-envs"]], "Environment device": [[244, "environment-device"]], "Running environments in parallel": [[244, "running-environments-in-parallel"]], "Closing parallel environments": [[244, "closing-parallel-environments"]], "Seeding": [[244, "seeding"]], "Accessing environment attributes": [[244, "accessing-environment-attributes"]], "kwargs for parallel environments": [[244, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[244, "transforming-parallel-environments"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[11, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors.collectors)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors.collectors)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "randompolicy (class in torchrl.collectors.collectors)": [[14, "torchrl.collectors.collectors.RandomPolicy"]], "syncdatacollector (class in torchrl.collectors.collectors)": [[15, "torchrl.collectors.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors.collectors)": [[16, "torchrl.collectors.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[17, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[18, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "expand() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.expand"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[18, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[19, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.encode"]], "expand() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.expand"]], "index() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[19, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[20, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.encode"]], "expand() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.expand"]], "index() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[20, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[21, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.encode"]], "expand() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.expand"]], "index() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "to_one_hot() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.to_one_hot"]], "to_one_hot_spec() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.to_one_hot_spec"]], "type_check() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[21, "torchrl.data.DiscreteTensorSpec.zero"]], "multidiscretetensorspec (class in torchrl.data)": [[22, "torchrl.data.MultiDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.expand"]], "index() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.project"]], "rand() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.to_numpy"]], "to_one_hot() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.to_one_hot"]], "to_one_hot_spec() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.to_one_hot_spec"]], "type_check() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multidiscretetensorspec method)": [[22, "torchrl.data.MultiDiscreteTensorSpec.zero"]], "multionehotdiscretetensorspec (class in torchrl.data)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.expand"]], "index() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.rand"]], "to_categorical() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_categorical"]], "to_categorical_spec() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_categorical_spec"]], "to_numpy() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multionehotdiscretetensorspec method)": [[23, "torchrl.data.MultiOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[24, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_parameter"]], "register_state_dict_pre_hook() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[24, "torchrl.data.MultiStep.zero_grad"]], "onehotdiscretetensorspec (class in torchrl.data)": [[25, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.expand"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_categorical() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.to_categorical"]], "to_categorical_spec() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.to_categorical_spec"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[26, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.sample"]], "replaybuffer (class in torchrl.data)": [[27, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.add"]], "append_transform() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[28, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data)": [[29, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[29, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[30, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.encode"]], "expand() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.expand"]], "index() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[30, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[31, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "expand() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.expand"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[31, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "unboundeddiscretetensorspec (class in torchrl.data)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.encode"]], "expand() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.expand"]], "index() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.index"]], "is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.is_in"]], "project() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.project"]], "rand() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.unboundeddiscretetensorspec method)": [[32, "torchrl.data.UnboundedDiscreteTensorSpec.zero"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[33, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[33, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[35, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[36, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[36, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[37, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[38, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[39, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[39, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[41, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[41, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[41, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[42, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[42, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.parameters"]], "rand_action() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.rand_action"]], "rand_step() (torchrl.envs.envbase method)": [[42, "id0"], [42, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[42, "id1"], [42, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[42, "id2"], [42, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[42, "id3"], [42, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[42, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[42, "id4"], [42, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.zero_grad"]], "envcreator (class in torchrl.envs)": [[43, "torchrl.envs.EnvCreator"]], "envmetadata (class in torchrl.envs)": [[44, "torchrl.envs.EnvMetaData"]], "gymlikeenv (class in torchrl.envs)": [[45, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[45, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.parameters"]], "rand_action() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.rand_action"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[45, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[45, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[46, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[46, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[46, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[46, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[46, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[46, "torchrl.envs.step"]], "multithreadedenv (class in torchrl.envs)": [[47, "torchrl.envs.MultiThreadedEnv"]], "add_module() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.add_module"]], "apply() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.apply"]], "batch_locked (torchrl.envs.multithreadedenv property)": [[47, "torchrl.envs.MultiThreadedEnv.batch_locked"]], "bfloat16() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.bfloat16"]], "buffers() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.buffers"]], "children() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.children"]], "close() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.close"]], "cpu() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.cpu"]], "cuda() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.cuda"]], "double() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.double"]], "eval() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.eval"]], "extra_repr() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.fake_tensordict"]], "float() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.float"]], "forward() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.forward"]], "get_buffer() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.get_buffer"]], "get_extra_state() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.get_extra_state"]], "get_parameter() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.get_parameter"]], "get_submodule() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.get_submodule"]], "half() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.half"]], "ipu() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.ipu"]], "load_state_dict() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.load_state_dict"]], "modules() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.modules"]], "named_buffers() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.named_buffers"]], "named_children() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.named_children"]], "named_modules() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.named_modules"]], "named_parameters() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.named_parameters"]], "parameters() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.parameters"]], "rand_action() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.rand_action"]], "rand_step() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.rand_step"]], "register_backward_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_module"]], "register_parameter() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.requires_grad_"]], "reset() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.reset"]], "rollout() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.rollout"]], "set_extra_state() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.set_extra_state"]], "set_seed() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.set_seed"]], "share_memory() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.share_memory"]], "specs (torchrl.envs.multithreadedenv property)": [[47, "torchrl.envs.MultiThreadedEnv.specs"]], "state_dict() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.state_dict"]], "step() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.step"]], "to() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.to"]], "to_empty() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.to_empty"]], "train() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.train"]], "type() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.type"]], "xpu() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.xpu"]], "zero_grad() (torchrl.envs.multithreadedenv method)": [[47, "torchrl.envs.MultiThreadedEnv.zero_grad"]], "parallelenv (class in torchrl.envs)": [[48, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[48, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.parameters"]], "rand_action() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.rand_action"]], "rand_step() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[48, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[48, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[49, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[49, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.parameters"]], "rand_action() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.rand_action"]], "rand_step() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[49, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[49, "torchrl.envs.SerialEnv.zero_grad"]], "braxenv() (in module torchrl.envs.libs.brax)": [[50, "torchrl.envs.libs.brax.BraxEnv"]], "braxwrapper() (in module torchrl.envs.libs.brax)": [[51, "torchrl.envs.libs.brax.BraxWrapper"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[52, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[53, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[54, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[55, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[56, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[57, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[58, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "vmasenv() (in module torchrl.envs.libs.vmas)": [[59, "torchrl.envs.libs.vmas.VmasEnv"]], "vmaswrapper() (in module torchrl.envs.libs.vmas)": [[60, "torchrl.envs.libs.vmas.VmasWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[61, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[62, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.CatFrames"]], "forward() (torchrl.envs.transforms.catframes method)": [[63, "torchrl.envs.transforms.CatFrames.forward"]], "reset() (torchrl.envs.transforms.catframes method)": [[63, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[63, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.CatTensors"]], "forward() (torchrl.envs.transforms.cattensors method)": [[64, "torchrl.envs.transforms.CatTensors.forward"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[64, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[65, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "discreteactionprojection (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.DiscreteActionProjection"]], "transform_input_spec() (torchrl.envs.transforms.discreteactionprojection method)": [[67, "torchrl.envs.transforms.DiscreteActionProjection.transform_input_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[68, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[68, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[68, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "excludetransform (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.ExcludeTransform"]], "forward() (torchrl.envs.transforms.excludetransform method)": [[69, "torchrl.envs.transforms.ExcludeTransform.forward"]], "reset() (torchrl.envs.transforms.excludetransform method)": [[69, "torchrl.envs.transforms.ExcludeTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.excludetransform method)": [[69, "torchrl.envs.transforms.ExcludeTransform.transform_observation_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "forward() (torchrl.envs.transforms.finitetensordictcheck method)": [[70, "torchrl.envs.transforms.FiniteTensorDictCheck.forward"]], "flattenobservation (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.FlattenObservation"]], "forward() (torchrl.envs.transforms.flattenobservation method)": [[71, "torchrl.envs.transforms.FlattenObservation.forward"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[71, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "frameskiptransform (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.FrameSkipTransform"]], "forward() (torchrl.envs.transforms.frameskiptransform method)": [[72, "torchrl.envs.transforms.FrameSkipTransform.forward"]], "grayscale (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[73, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "inittracker (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.InitTracker"]], "forward() (torchrl.envs.transforms.inittracker method)": [[74, "torchrl.envs.transforms.InitTracker.forward"]], "reset() (torchrl.envs.transforms.inittracker method)": [[74, "torchrl.envs.transforms.InitTracker.reset"]], "transform_observation_spec() (torchrl.envs.transforms.inittracker method)": [[74, "torchrl.envs.transforms.InitTracker.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[75, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[76, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_input_spec() (torchrl.envs.transforms.observationnorm method)": [[76, "torchrl.envs.transforms.ObservationNorm.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[76, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.PinMemoryTransform"]], "forward() (torchrl.envs.transforms.pinmemorytransform method)": [[78, "torchrl.envs.transforms.PinMemoryTransform.forward"]], "r3mtransform (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.R3MTransform"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[79, "torchrl.envs.transforms.R3MTransform.to"]], "randomcroptensordict (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.RandomCropTensorDict"]], "forward() (torchrl.envs.transforms.randomcroptensordict method)": [[80, "torchrl.envs.transforms.RandomCropTensorDict.forward"]], "renametransform (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.RenameTransform"]], "forward() (torchrl.envs.transforms.renametransform method)": [[81, "torchrl.envs.transforms.RenameTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.renametransform method)": [[81, "torchrl.envs.transforms.RenameTransform.transform_input_spec"]], "transform_output_spec() (torchrl.envs.transforms.renametransform method)": [[81, "torchrl.envs.transforms.RenameTransform.transform_output_spec"]], "resize (class in torchrl.envs.transforms)": [[82, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[82, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[83, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[83, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[84, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[84, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "rewardsum (class in torchrl.envs.transforms)": [[85, "torchrl.envs.transforms.RewardSum"]], "forward() (torchrl.envs.transforms.rewardsum method)": [[85, "torchrl.envs.transforms.RewardSum.forward"]], "reset() (torchrl.envs.transforms.rewardsum method)": [[85, "torchrl.envs.transforms.RewardSum.reset"]], "transform_observation_spec() (torchrl.envs.transforms.rewardsum method)": [[85, "torchrl.envs.transforms.RewardSum.transform_observation_spec"]], "selecttransform (class in torchrl.envs.transforms)": [[86, "torchrl.envs.transforms.SelectTransform"]], "forward() (torchrl.envs.transforms.selecttransform method)": [[86, "torchrl.envs.transforms.SelectTransform.forward"]], "reset() (torchrl.envs.transforms.selecttransform method)": [[86, "torchrl.envs.transforms.SelectTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.selecttransform method)": [[86, "torchrl.envs.transforms.SelectTransform.transform_observation_spec"]], "squeezetransform (class in torchrl.envs.transforms)": [[87, "torchrl.envs.transforms.SqueezeTransform"]], "stepcounter (class in torchrl.envs.transforms)": [[88, "torchrl.envs.transforms.StepCounter"]], "forward() (torchrl.envs.transforms.stepcounter method)": [[88, "torchrl.envs.transforms.StepCounter.forward"]], "reset() (torchrl.envs.transforms.stepcounter method)": [[88, "torchrl.envs.transforms.StepCounter.reset"]], "transform_input_spec() (torchrl.envs.transforms.stepcounter method)": [[88, "torchrl.envs.transforms.StepCounter.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.stepcounter method)": [[88, "torchrl.envs.transforms.StepCounter.transform_observation_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[89, "torchrl.envs.transforms.TensorDictPrimer"]], "forward() (torchrl.envs.transforms.tensordictprimer method)": [[89, "torchrl.envs.transforms.TensorDictPrimer.forward"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[89, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[89, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[89, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "timemaxpool (class in torchrl.envs.transforms)": [[90, "torchrl.envs.transforms.TimeMaxPool"]], "forward() (torchrl.envs.transforms.timemaxpool method)": [[90, "torchrl.envs.transforms.TimeMaxPool.forward"]], "reset() (torchrl.envs.transforms.timemaxpool method)": [[90, "torchrl.envs.transforms.TimeMaxPool.reset"]], "transform_observation_spec() (torchrl.envs.transforms.timemaxpool method)": [[90, "torchrl.envs.transforms.TimeMaxPool.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[91, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[91, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[92, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[92, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[92, "torchrl.envs.transforms.Transform.reset"]], "transform_done_spec() (torchrl.envs.transforms.transform method)": [[92, "torchrl.envs.transforms.Transform.transform_done_spec"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[92, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[92, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_output_spec() (torchrl.envs.transforms.transform method)": [[92, "torchrl.envs.transforms.Transform.transform_output_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[92, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[93, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[93, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[93, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "done_spec (torchrl.envs.transforms.transformedenv property)": [[93, "torchrl.envs.transforms.TransformedEnv.done_spec"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[93, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[93, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[93, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[93, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "output_spec (torchrl.envs.transforms.transformedenv property)": [[93, "torchrl.envs.transforms.TransformedEnv.output_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[93, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[93, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[93, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[93, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[93, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[94, "torchrl.envs.transforms.UnsqueezeTransform"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[94, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[94, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[94, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[95, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[95, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[95, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[96, "torchrl.envs.transforms.VIPTransform"]], "to() (torchrl.envs.transforms.viptransform method)": [[96, "torchrl.envs.transforms.VIPTransform.to"]], "vecnorm (class in torchrl.envs.transforms)": [[97, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[97, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "forward() (torchrl.envs.transforms.vecnorm method)": [[97, "torchrl.envs.transforms.VecNorm.forward"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[97, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[97, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[97, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[98, "torchrl.envs.transforms.gSDENoise"]], "check_env_specs() (in module torchrl.envs.utils)": [[99, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[100, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[101, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[102, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[103, "torchrl.envs.utils.step_mdp"]], "cemplanner (class in torchrl.modules)": [[104, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[104, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[105, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[105, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[106, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[106, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[107, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[107, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[108, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[108, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[109, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[109, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[110, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[110, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[110, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[110, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[110, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[110, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[111, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[111, "torchrl.modules.DistributionalDQNnet.forward"]], "dreameractor (class in torchrl.modules)": [[112, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[112, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[113, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[113, "torchrl.modules.DuelingCnnDQNet.forward"]], "independentnormal (class in torchrl.modules)": [[114, "torchrl.modules.IndependentNormal"]], "mode (torchrl.modules.independentnormal property)": [[114, "torchrl.modules.IndependentNormal.mode"]], "lstmnet (class in torchrl.modules)": [[115, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[115, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[116, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[116, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[117, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[117, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[117, "torchrl.modules.MPCPlannerBase.planning"]], "mppiplanner (class in torchrl.modules)": [[118, "torchrl.modules.MPPIPlanner"]], "planning() (torchrl.modules.mppiplanner method)": [[118, "torchrl.modules.MPPIPlanner.planning"]], "noisylazylinear (class in torchrl.modules)": [[119, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[119, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[120, "torchrl.modules.NoisyLinear"]], "normalparamwrapper (class in torchrl.modules)": [[121, "torchrl.modules.NormalParamWrapper"]], "forward() (torchrl.modules.normalparamwrapper method)": [[121, "torchrl.modules.NormalParamWrapper.forward"]], "obsdecoder (class in torchrl.modules)": [[122, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[122, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[123, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[123, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[124, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[124, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[124, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[124, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[124, "torchrl.modules.OneHotCategorical.sample"]], "rssmposterior (class in torchrl.modules)": [[125, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[125, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[126, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[126, "torchrl.modules.RSSMPrior.forward"]], "tanhdelta (class in torchrl.modules)": [[127, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[127, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[127, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[128, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[128, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[129, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[129, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[129, "torchrl.modules.TruncatedNormal.mode"]], "reset_noise (class in torchrl.modules)": [[130, "torchrl.modules.reset_noise"]], "actor (class in torchrl.modules.tensordict_module)": [[131, "torchrl.modules.tensordict_module.Actor"]], "actorcriticoperator (class in torchrl.modules.tensordict_module)": [[132, "torchrl.modules.tensordict_module.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[132, "torchrl.modules.tensordict_module.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[132, "torchrl.modules.tensordict_module.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules.tensordict_module)": [[133, "torchrl.modules.tensordict_module.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[133, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[133, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules.tensordict_module)": [[134, "torchrl.modules.tensordict_module.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[134, "torchrl.modules.tensordict_module.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[134, "torchrl.modules.tensordict_module.ActorValueOperator.get_value_operator"]], "additivegaussianwrapper (class in torchrl.modules.tensordict_module)": [[135, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper"]], "forward() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[135, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.forward"]], "step() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[135, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.step"]], "distributionalqvalueactor (class in torchrl.modules.tensordict_module)": [[136, "torchrl.modules.tensordict_module.DistributionalQValueActor"]], "egreedywrapper (class in torchrl.modules.tensordict_module)": [[137, "torchrl.modules.tensordict_module.EGreedyWrapper"]], "forward() (torchrl.modules.tensordict_module.egreedywrapper method)": [[137, "torchrl.modules.tensordict_module.EGreedyWrapper.forward"]], "step() (torchrl.modules.tensordict_module.egreedywrapper method)": [[137, "torchrl.modules.tensordict_module.EGreedyWrapper.step"]], "ornsteinuhlenbeckprocesswrapper (class in torchrl.modules.tensordict_module)": [[138, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper"]], "forward() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[138, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.forward"]], "step() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[138, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.step"]], "probabilisticactor (class in torchrl.modules.tensordict_module)": [[139, "torchrl.modules.tensordict_module.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules.tensordict_module)": [[140, "torchrl.modules.tensordict_module.QValueActor"]], "safemodule (class in torchrl.modules.tensordict_module)": [[141, "torchrl.modules.tensordict_module.SafeModule"]], "random() (torchrl.modules.tensordict_module.safemodule method)": [[141, "torchrl.modules.tensordict_module.SafeModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safemodule method)": [[141, "torchrl.modules.tensordict_module.SafeModule.random_sample"]], "to() (torchrl.modules.tensordict_module.safemodule method)": [[141, "torchrl.modules.tensordict_module.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules.tensordict_module)": [[142, "torchrl.modules.tensordict_module.SafeProbabilisticModule"]], "random() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[142, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[142, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random_sample"]], "safeprobabilisticsequential (class in torchrl.modules.tensordict_module)": [[143, "torchrl.modules.tensordict_module.SafeProbabilisticSequential"]], "safesequential (class in torchrl.modules.tensordict_module)": [[144, "torchrl.modules.tensordict_module.SafeSequential"]], "valueoperator (class in torchrl.modules.tensordict_module)": [[145, "torchrl.modules.tensordict_module.ValueOperator"]], "worldmodelwrapper (class in torchrl.modules.tensordict_module)": [[146, "torchrl.modules.tensordict_module.WorldModelWrapper"]], "get_reward_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[146, "torchrl.modules.tensordict_module.WorldModelWrapper.get_reward_operator"]], "get_transition_model_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[146, "torchrl.modules.tensordict_module.WorldModelWrapper.get_transition_model_operator"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[147, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[148, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[149, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[150, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[151, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[151, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[152, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[153, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[154, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[154, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[155, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[155, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[156, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[156, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[157, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[157, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[158, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[158, "torchrl.objectives.DistributionalDQNLoss.forward"]], "dreameractorloss (class in torchrl.objectives)": [[159, "torchrl.objectives.DreamerActorLoss"]], "forward() (torchrl.objectives.dreameractorloss method)": [[159, "torchrl.objectives.DreamerActorLoss.forward"]], "dreamermodelloss (class in torchrl.objectives)": [[160, "torchrl.objectives.DreamerModelLoss"]], "forward() (torchrl.objectives.dreamermodelloss method)": [[160, "torchrl.objectives.DreamerModelLoss.forward"]], "dreamervalueloss (class in torchrl.objectives)": [[161, "torchrl.objectives.DreamerValueLoss"]], "forward() (torchrl.objectives.dreamervalueloss method)": [[161, "torchrl.objectives.DreamerValueLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[162, "torchrl.objectives.HardUpdate"]], "iqlloss (class in torchrl.objectives)": [[163, "torchrl.objectives.IQLLoss"]], "forward() (torchrl.objectives.iqlloss method)": [[163, "torchrl.objectives.IQLLoss.forward"]], "loss_value_diff() (torchrl.objectives.iqlloss static method)": [[163, "torchrl.objectives.IQLLoss.loss_value_diff"]], "klpenppoloss (class in torchrl.objectives)": [[164, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[164, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[165, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[165, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[166, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[166, "torchrl.objectives.REDQLoss.forward"]], "reinforceloss (class in torchrl.objectives)": [[167, "torchrl.objectives.ReinforceLoss"]], "forward() (torchrl.objectives.reinforceloss method)": [[167, "torchrl.objectives.ReinforceLoss.forward"]], "sacloss (class in torchrl.objectives)": [[168, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[168, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[169, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[170, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[171, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[172, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[173, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[174, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[174, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[175, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[175, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[176, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[176, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[177, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[178, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[179, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[180, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[181, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[182, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[183, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "tensordictrecorder() (in module torchrl.record)": [[184, "torchrl.record.TensorDictRecorder"]], "videorecorder() (in module torchrl.record)": [[185, "torchrl.record.VideoRecorder"]], "csvlogger() (in module torchrl.record.loggers)": [[186, "torchrl.record.loggers.CSVLogger"]], "logger() (in module torchrl.record.loggers)": [[187, "torchrl.record.loggers.Logger"]], "mlflowlogger() (in module torchrl.record.loggers)": [[188, "torchrl.record.loggers.MLFlowLogger"]], "tensorboardlogger() (in module torchrl.record.loggers)": [[189, "torchrl.record.loggers.TensorboardLogger"]], "wandblogger() (in module torchrl.record.loggers)": [[190, "torchrl.record.loggers.WandbLogger"]], "generate_exp_name() (in module torchrl.record.loggers)": [[191, "torchrl.record.loggers.generate_exp_name"]], "get_logger() (in module torchrl.record.loggers)": [[192, "torchrl.record.loggers.get_logger"]], "batchsubsampler (class in torchrl.trainers)": [[193, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[194, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[195, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[196, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[197, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[198, "torchrl.trainers.Recorder"]], "replaybuffertrainer (class in torchrl.trainers)": [[199, "torchrl.trainers.ReplayBufferTrainer"]], "rewardnormalizer (class in torchrl.trainers)": [[200, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[201, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[202, "torchrl.trainers.Trainer"]], "trainerhookbase (class in torchrl.trainers)": [[203, "torchrl.trainers.TrainerHookBase"]], "updateweights (class in torchrl.trainers)": [[204, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[205, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[206, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[207, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[208, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[209, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[210, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[211, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[212, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[213, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[214, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[215, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[216, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[217, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[218, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[219, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[220, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[221, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[222, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[223, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[224, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[225, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[226, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[227, "torchrl.trainers.helpers.transformed_env_constructor"]]}})