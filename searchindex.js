Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/index", "tutorials/multi_task", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "RSSMPosterior", "RSSMPrior", "TanhDelta", "TanhNormal", "TruncatedNormal", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DistributionalQValueActor", "EGreedyWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticSequential", "SafeSequential", "ValueOperator", "WorldModelWrapper", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "Reinforcement Learning (PPO) with TorchRL Tutorial", "README Tutos", "Task-specific policy in multi-task environments", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"The": [0, 1, 2, 3, 4, 5, 7, 8, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 46, 49, 51, 52, 53, 70, 73, 80, 83, 88, 90, 93, 97, 100, 107, 108, 110, 111, 112, 113, 119, 121, 122, 124, 125, 129, 130, 135, 136, 142, 143, 145, 146, 148, 149, 150, 155, 159, 160, 161, 163, 164, 165, 167, 168, 172, 177, 178, 179, 180, 191, 194, 195, 196, 197, 201, 227, 229, 230, 237, 239, 240, 241, 244, 245, 247, 248], "tensordict": [0, 1, 3, 12, 13, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 31, 32, 33, 37, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 55, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 107, 108, 119, 121, 122, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 188, 197, 201, 203, 205, 206, 212, 215, 217, 220, 222, 225, 233, 237, 239, 240, 241, 243, 244, 245, 248], "class": [0, 1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 229, 230, 231, 237, 239, 240, 241, 248], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 47, 49, 51, 52, 53, 67, 93, 97, 139, 141, 146, 168, 239, 240, 241, 243, 244, 245, 247, 248], "been": [0, 5, 7, 8, 16, 17, 19, 46, 49, 51, 52, 53, 96, 240, 241, 243, 244, 248], "move": [0, 4, 28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 101, 107, 120, 145, 204, 239, 240, 247, 248], "out": [0, 3, 4, 5, 28, 46, 49, 51, 52, 53, 93, 103, 123, 124, 142, 145, 146, 175, 176, 237, 239, 240, 241, 244, 247, 248], "dedic": [0, 1, 17, 18, 19, 136, 137, 138, 239, 243], "librari": [0, 5, 6, 7, 8, 9, 10, 17, 18, 19, 51, 105, 233, 234, 238, 241, 244, 248], "take": [0, 1, 3, 8, 21, 46, 49, 51, 52, 53, 92, 94, 96, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155, 157, 181, 182, 183, 184, 185, 186, 187, 197, 208, 237, 239, 240, 241, 244, 248], "look": [0, 3, 5, 7, 8, 28, 46, 49, 51, 52, 53, 83, 84, 146, 147, 148, 240, 241, 244, 245, 247, 248], "find": [0, 1, 4, 6, 17, 18, 19, 139, 141, 200, 204], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 240, 241, 242, 243, 244, 245, 247, 248], "code": [0, 3, 5, 7, 8, 83, 148, 241, 242, 243, 245, 246, 247, 248], "github": [0, 2, 5, 6, 7, 10, 17, 18, 19, 245, 247], "i": [0, 1, 2, 3, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 46, 47, 49, 50, 51, 52, 53, 56, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 83, 84, 85, 88, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 130, 131, 132, 133, 135, 136, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 197, 199, 200, 201, 202, 203, 204, 206, 209, 210, 212, 215, 220, 222, 225, 227, 231, 234, 237, 239, 240, 241, 243, 244, 245, 247, 248], "an": [0, 1, 2, 3, 5, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 56, 69, 71, 74, 79, 80, 83, 84, 85, 86, 93, 95, 96, 97, 101, 103, 109, 110, 111, 112, 113, 119, 120, 121, 123, 127, 136, 137, 138, 142, 145, 146, 147, 150, 153, 154, 157, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 178, 179, 180, 189, 192, 201, 202, 206, 207, 210, 215, 228, 229, 230, 231, 234, 239, 240, 243, 245, 247, 248], "open": [0, 5, 7, 11, 247], "reinforc": [0, 2, 3, 9, 67, 110, 111, 112, 113, 142, 151, 158, 162, 166, 167, 171, 172, 173, 215, 233, 240, 242, 244, 246, 247], "learn": [0, 2, 3, 7, 8, 9, 17, 28, 67, 110, 111, 112, 113, 122, 124, 142, 151, 158, 162, 166, 167, 170, 171, 172, 173, 215, 239, 240, 242, 243, 244, 246, 247, 248], "rl": [0, 1, 2, 3, 5, 8, 10, 12, 13, 15, 16, 50, 124, 135, 143, 149, 158, 169, 197, 234, 237, 239, 240, 241, 245, 248], "pytorch": [0, 1, 2, 95, 206, 234, 237, 239, 240, 241, 244, 245, 247, 248], "It": [0, 2, 3, 4, 7, 28, 32, 46, 49, 50, 51, 52, 53, 60, 80, 84, 97, 103, 110, 112, 116, 129, 130, 142, 146, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 177, 178, 202, 222, 234, 239, 244, 245, 247, 248], "provid": [0, 1, 2, 3, 5, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 22, 26, 27, 28, 29, 30, 31, 32, 33, 38, 46, 49, 50, 51, 52, 53, 68, 69, 75, 79, 80, 83, 84, 89, 93, 97, 100, 101, 109, 119, 120, 121, 135, 139, 141, 143, 151, 167, 172, 177, 178, 179, 180, 189, 193, 197, 203, 210, 212, 220, 222, 225, 227, 234, 237, 239, 240, 241, 243, 244, 245, 247, 248], "python": [0, 3, 5, 6, 7, 10, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248], "first": [0, 1, 3, 4, 5, 7, 8, 11, 17, 19, 49, 68, 75, 80, 83, 84, 95, 97, 120, 123, 127, 145, 146, 164, 188, 205, 239, 240, 241, 243, 244, 245, 247, 248], "low": [0, 71, 240, 244, 247], "high": [0, 9, 71, 178, 181, 182, 185, 239, 240, 247], "level": [0, 4, 20, 24, 168, 239, 240, 247], "abstract": [0, 8, 23, 24, 25, 26, 34, 35, 36, 45, 46, 81, 121, 207, 237, 241, 244, 247], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 28, 29, 30, 31, 32, 33, 40, 41, 42, 43, 46, 47, 49, 50, 51, 52, 53, 70, 71, 72, 74, 75, 83, 89, 93, 96, 97, 98, 100, 101, 108, 113, 114, 119, 121, 124, 128, 130, 142, 145, 146, 147, 148, 157, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 177, 178, 179, 180, 203, 227, 231, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248], "intend": [0, 7, 12, 13, 15, 16, 17, 18, 19, 71, 247], "effici": [0, 1, 2, 4, 8, 124, 239, 240, 241, 243, 245, 247], "modular": [0, 148, 247], "properli": [0, 241, 244, 247], "test": [0, 3, 5, 103, 119, 202, 227, 240, 241, 247], "aim": [0, 3, 7, 83, 100, 120, 209, 234, 239, 240, 247], "support": [0, 1, 3, 17, 19, 24, 43, 51, 80, 96, 105, 140, 145, 148, 151, 162, 178, 179, 180, 194, 237, 241, 244, 247], "research": [0, 7, 9, 247], "most": [0, 3, 7, 8, 28, 71, 239, 240, 241, 244, 247], "written": [0, 3, 40, 46, 49, 51, 52, 53, 67, 89, 92, 94, 142, 145, 146, 158, 159, 168, 169, 177, 188, 189, 237, 239, 243, 244, 247], "highli": [0, 2, 247, 248], "wai": [0, 3, 4, 83, 85, 100, 169, 239, 240, 241, 243, 245, 247, 248], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 46, 47, 49, 51, 52, 53, 67, 70, 71, 79, 80, 83, 84, 89, 93, 96, 97, 100, 101, 108, 118, 121, 122, 124, 125, 132, 133, 139, 145, 146, 147, 148, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 202, 212, 220, 222, 225, 229, 230, 231, 234, 237, 239, 240, 241, 243, 244, 245, 247, 248], "easili": [0, 3, 7, 212, 220, 222, 225, 240, 241, 247, 248], "swap": [0, 3, 241, 245, 247], "compon": [0, 2, 3, 40, 41, 42, 43, 151, 152, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 201, 206, 239, 241, 243, 244, 245, 247], "transform": [0, 1, 2, 4, 8, 12, 13, 15, 17, 18, 19, 28, 30, 31, 32, 33, 47, 49, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 110, 116, 151, 152, 155, 157, 189, 203, 212, 215, 217, 220, 222, 225, 231, 233, 240, 242, 245, 246], "them": [0, 7, 30, 31, 32, 33, 46, 47, 49, 51, 52, 53, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155, 168, 189, 239, 240, 243, 244, 245, 247, 248], "write": [0, 3, 8, 28, 49, 82, 145, 146, 148, 160, 161, 167, 170, 172, 177, 189, 237, 239, 240, 241, 242, 243, 245, 246, 247], "new": [0, 3, 4, 8, 12, 13, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 35, 36, 37, 46, 49, 51, 52, 53, 89, 96, 101, 107, 142, 145, 146, 150, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 239, 240, 241, 244, 247, 248], "ones": [0, 24, 28, 46, 49, 51, 52, 53, 68, 70, 72, 80, 83, 93, 97, 100, 145, 239, 241, 244, 247, 248], "littl": [0, 3, 241, 247, 248], "effort": [0, 3, 244, 247], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 24, 28, 29, 30, 31, 32, 33, 40, 41, 42, 43, 46, 49, 50, 51, 52, 53, 60, 67, 68, 70, 71, 74, 76, 78, 80, 83, 84, 85, 89, 90, 93, 94, 96, 97, 99, 100, 101, 103, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 148, 150, 151, 152, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 188, 197, 199, 202, 203, 206, 208, 209, 210, 212, 220, 222, 225, 227, 231, 234, 237, 239, 240, 241, 243, 244, 245, 247, 248], "repo": [0, 6, 234, 247], "attempt": [0, 139, 141, 167, 247], "align": [0, 247], "exist": [0, 4, 17, 28, 46, 49, 51, 52, 53, 68, 97, 210, 231, 247, 248], "ecosystem": [0, 247], "dataset": [0, 30, 31, 32, 101, 240, 245, 247, 248], "pillar": [0, 247], "environ": [0, 1, 2, 3, 5, 8, 11, 12, 13, 15, 16, 17, 18, 19, 28, 29, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 71, 72, 76, 79, 80, 83, 84, 96, 97, 101, 103, 108, 119, 121, 122, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 197, 199, 202, 209, 210, 212, 213, 214, 215, 217, 220, 222, 225, 227, 228, 229, 230, 231, 234, 242, 245, 246], "model": [0, 1, 3, 8, 9, 12, 13, 15, 16, 17, 18, 19, 28, 46, 49, 50, 51, 52, 53, 83, 93, 100, 102, 109, 120, 121, 122, 136, 137, 138, 145, 150, 158, 163, 164, 165, 167, 169, 170, 172, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 233, 234, 237, 241, 242, 244, 246, 248], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 80, 92, 103, 108, 119, 122, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 152, 160, 170, 172, 178, 179, 180, 197, 203, 206, 208, 213, 227, 229, 230, 231, 233, 237, 244, 245, 248], "util": [0, 3, 12, 13, 15, 16, 17, 18, 19, 21, 28, 46, 49, 51, 52, 53, 83, 100, 103, 104, 105, 106, 107, 109, 155, 156, 157, 227, 233, 238, 239, 240, 241, 244, 247, 248], "e": [0, 1, 3, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 24, 28, 29, 40, 41, 46, 47, 49, 51, 52, 53, 68, 70, 75, 80, 83, 89, 93, 96, 97, 100, 103, 118, 122, 125, 132, 133, 145, 146, 152, 177, 178, 179, 180, 197, 209, 230, 239, 240, 241, 244, 245, 247, 248], "g": [0, 1, 3, 8, 10, 11, 28, 29, 46, 47, 49, 51, 52, 53, 68, 70, 75, 80, 83, 89, 93, 96, 97, 100, 103, 118, 122, 132, 133, 145, 146, 177, 183, 184, 186, 187, 230, 239, 240, 241, 244, 245, 247, 248], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 92, 142, 203, 206, 208, 213, 214, 227, 229, 230, 233, 237, 248], "contain": [0, 3, 7, 12, 13, 15, 16, 18, 19, 24, 28, 30, 31, 32, 33, 34, 37, 43, 44, 45, 46, 49, 50, 51, 52, 53, 70, 72, 83, 93, 97, 100, 101, 107, 108, 109, 120, 122, 145, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 193, 197, 209, 212, 215, 217, 220, 222, 225, 227, 228, 229, 230, 231, 237, 239, 240, 241, 244, 245, 247, 248], "etc": [0, 3, 7, 8, 11, 28, 35, 36, 46, 49, 51, 52, 53, 97, 120, 239, 241, 247, 248], "have": [0, 1, 3, 5, 6, 7, 8, 12, 13, 16, 17, 19, 24, 26, 28, 43, 46, 49, 51, 52, 53, 67, 79, 80, 93, 96, 97, 101, 103, 109, 119, 120, 147, 148, 159, 168, 169, 174, 197, 206, 237, 239, 240, 241, 243, 244, 245, 247, 248], "few": [0, 2, 8, 197, 240, 241, 247, 248], "depend": [0, 1, 3, 4, 7, 8, 149, 169, 241, 244, 247, 248], "possibl": [0, 3, 4, 25, 28, 29, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145, 202, 206, 239, 241, 244, 247, 248], "standard": [0, 80, 88, 101, 108, 116, 122, 123, 124, 139, 178, 179, 180, 239, 240, 247], "numpi": [0, 11, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 95, 206, 239, 240, 244, 247, 248], "common": [0, 3, 4, 49, 52, 53, 136, 137, 138, 153, 154, 227, 234, 237, 239, 241, 243, 245, 247, 248], "openai": [0, 7, 58, 59, 241, 244, 247, 248], "gym": [0, 3, 4, 8, 11, 12, 13, 15, 20, 47, 49, 58, 59, 78, 80, 85, 93, 101, 212, 215, 217, 220, 222, 225, 227, 234, 239, 240, 241, 244, 245, 247], "onli": [0, 1, 3, 4, 7, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 35, 36, 46, 49, 51, 52, 53, 68, 70, 71, 75, 80, 83, 84, 93, 97, 100, 101, 119, 145, 146, 147, 148, 210, 237, 239, 240, 241, 243, 244, 247, 248], "option": [0, 4, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 46, 47, 49, 50, 51, 52, 53, 56, 67, 68, 69, 71, 72, 75, 76, 78, 79, 80, 83, 84, 85, 88, 92, 93, 94, 95, 97, 98, 100, 101, 103, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 139, 141, 142, 146, 147, 148, 151, 152, 160, 161, 163, 164, 165, 167, 170, 172, 177, 178, 179, 180, 183, 184, 186, 187, 189, 197, 199, 200, 201, 202, 203, 204, 206, 210, 212, 215, 220, 222, 225, 227, 229, 230, 231, 244, 247], "On": [0, 3, 7, 17, 18, 19, 240], "end": [0, 28, 30, 31, 32, 33, 46, 49, 51, 52, 53, 97, 109, 121, 181, 182, 183, 184, 185, 186, 187, 239, 240, 241, 243, 244, 245, 247, 248], "come": [0, 1, 3, 8, 52, 53, 135, 136, 137, 138, 143, 149, 239, 240, 241, 247, 248], "set": [0, 1, 2, 3, 7, 9, 12, 13, 15, 16, 17, 18, 19, 28, 29, 30, 31, 32, 33, 43, 46, 48, 49, 50, 51, 52, 53, 68, 70, 78, 83, 92, 93, 97, 100, 103, 106, 121, 139, 145, 197, 202, 203, 214, 231, 234, 238, 239, 240, 241, 243, 244, 245, 247, 248], "re": [0, 3, 8, 28, 46, 49, 51, 52, 53, 146, 237, 240, 241, 243, 244, 247, 248], "usabl": [0, 237, 247], "function": [0, 3, 8, 11, 21, 28, 40, 41, 42, 43, 46, 47, 49, 51, 52, 53, 72, 97, 101, 103, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 129, 130, 133, 136, 137, 138, 139, 141, 142, 145, 146, 148, 149, 155, 156, 157, 158, 159, 160, 161, 167, 168, 169, 170, 172, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 212, 215, 217, 220, 222, 225, 227, 233, 239, 243, 244, 248], "cost": [0, 2, 25, 240, 244], "return": [0, 3, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 44, 45, 46, 47, 49, 50, 51, 52, 53, 56, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 80, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 107, 108, 110, 111, 112, 113, 114, 118, 119, 120, 121, 122, 125, 128, 129, 130, 131, 132, 133, 136, 137, 138, 140, 144, 145, 146, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 177, 178, 179, 180, 183, 184, 186, 187, 206, 209, 212, 213, 215, 217, 220, 222, 225, 227, 228, 229, 230, 231, 233, 237, 239, 240, 241, 243, 244, 245, 247, 248], "process": [0, 1, 2, 3, 4, 5, 8, 12, 13, 15, 16, 17, 18, 19, 28, 46, 47, 49, 51, 52, 53, 101, 142, 237, 239, 240, 244, 245, 247, 248], "good": [0, 1, 4, 9, 239, 241, 247, 248], "runtim": [0, 3, 28, 46, 49, 51, 52, 53, 244], "perform": [0, 3, 4, 8, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 49, 51, 52, 53, 79, 97, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 122, 125, 126, 127, 129, 130, 139, 141, 142, 155, 164, 169, 202, 206, 239, 240, 241, 243, 244, 248], "ppo": [0, 4, 8, 146, 159, 168, 169, 212, 219, 220, 233, 239, 240, 242, 246], "pendulum": [0, 3, 12, 13, 15, 16, 20, 47, 51, 58, 59, 70, 78, 80, 85, 93, 97, 101, 227, 240, 241, 242, 246, 247, 248], "your": [0, 2, 3, 7, 8, 10, 17, 28, 46, 49, 51, 52, 53, 101, 231, 234, 240, 241, 242, 246, 247], "introduct": [0, 242, 246, 248], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 24, 25, 28, 30, 31, 32, 33, 37, 38, 46, 47, 49, 50, 51, 52, 53, 56, 68, 69, 71, 78, 80, 83, 84, 85, 93, 95, 96, 97, 100, 101, 103, 106, 107, 108, 109, 110, 111, 116, 118, 120, 121, 122, 124, 125, 132, 133, 142, 145, 146, 150, 151, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 177, 178, 179, 180, 181, 182, 185, 192, 193, 202, 203, 204, 206, 208, 210, 213, 214, 215, 223, 227, 231, 234, 237, 238, 241, 242, 243, 244, 246, 248], "pretrain": [0, 242, 246], "task": [0, 9, 52, 53, 56, 83, 100, 167, 239, 240, 241, 242, 244, 246, 247, 248], "specif": [0, 5, 8, 32, 33, 49, 206, 233, 237, 239, 241, 242, 246], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 46, 49, 50, 51, 52, 53, 71, 106, 124, 136, 137, 138, 139, 141, 142, 145, 146, 151, 152, 158, 159, 160, 168, 169, 170, 172, 202, 208, 212, 213, 214, 215, 217, 220, 227, 229, 230, 237, 240, 242, 245, 246, 247, 248], "multi": [0, 3, 7, 9, 28, 46, 49, 51, 52, 53, 119, 120, 239, 240, 242, 244, 246, 247], "ddpg": [0, 110, 111, 112, 113, 160, 166, 173, 215, 216, 233, 240, 242, 246, 247], "pixel": [0, 3, 7, 24, 67, 69, 75, 77, 80, 83, 86, 95, 100, 110, 126, 127, 189, 212, 217, 220, 222, 225, 239, 242, 245, 246, 247, 248], "dqn": [0, 140, 144, 151, 161, 162, 166, 173, 217, 218, 233, 242, 246], "api": [0, 3, 5, 83, 100, 237, 244, 247, 248], "packag": [0, 6, 7, 10, 233, 234, 240, 247, 248], "singl": [0, 3, 16, 17, 18, 19, 28, 30, 31, 32, 33, 46, 49, 51, 52, 53, 67, 68, 83, 95, 100, 109, 119, 120, 148, 162, 170, 183, 184, 186, 187, 222, 231, 233, 239, 240, 241, 243, 244, 245], "node": [0, 2, 17, 18, 19, 20, 212, 215, 217, 220, 222, 225, 233], "distribut": [0, 2, 3, 4, 9, 10, 17, 18, 19, 20, 80, 108, 114, 115, 116, 118, 122, 125, 128, 129, 130, 131, 132, 133, 139, 140, 146, 147, 151, 159, 162, 168, 169, 233, 237, 239, 240, 241, 244, 247, 248], "helper": [0, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 239, 244], "replai": [0, 8, 12, 13, 15, 30, 31, 32, 33, 37, 38, 39, 43, 44, 71, 84, 93, 160, 161, 167, 170, 172, 203, 206, 223, 227, 233, 237, 244, 245], "buffer": [0, 1, 3, 4, 8, 12, 13, 15, 28, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 70, 71, 83, 84, 93, 97, 100, 145, 148, 160, 161, 167, 170, 172, 203, 206, 223, 227, 233, 237, 244, 245, 248], "compos": [0, 3, 28, 30, 31, 32, 38, 39, 44, 46, 49, 51, 52, 53, 96, 97, 101, 164, 212, 215, 217, 220, 222, 225, 233, 239, 240, 241, 243, 247, 248], "tensorspec": [0, 3, 14, 22, 23, 24, 25, 26, 27, 29, 35, 36, 46, 50, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 80, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 130, 135, 139, 141, 142, 143, 145, 146, 147, 233, 244], "env": [0, 1, 2, 5, 6, 7, 8, 12, 13, 15, 17, 18, 19, 20, 28, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 121, 122, 145, 188, 210, 212, 213, 214, 215, 217, 220, 222, 225, 227, 229, 230, 231, 233, 239, 240, 241, 242, 243, 245, 246], "envbas": [0, 3, 12, 13, 15, 16, 17, 18, 19, 47, 49, 51, 52, 53, 79, 85, 96, 97, 101, 103, 108, 121, 122, 202, 210, 212, 213, 214, 215, 217, 220, 222, 225, 227, 229, 230, 231, 233], "gymlikeenv": [0, 233], "envmetadata": [0, 233], "vector": [0, 1, 8, 22, 29, 71, 110, 112, 120, 180, 186, 187, 233, 239, 240, 243, 244, 245, 248], "record": [0, 28, 46, 49, 51, 52, 53, 169, 188, 189, 190, 191, 192, 193, 194, 195, 196, 227, 233, 241], "domain": [0, 2, 8, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 71, 93, 145, 146, 147, 148, 233, 239, 241, 244, 247, 248], "modul": [0, 3, 4, 8, 11, 28, 46, 49, 50, 51, 52, 53, 70, 71, 83, 84, 93, 97, 100, 101, 102, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 166, 170, 171, 173, 175, 178, 179, 180, 206, 211, 216, 218, 219, 221, 224, 227, 233, 237, 239, 241, 243, 244, 245], "hook": [0, 28, 46, 49, 51, 52, 53, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 140, 141, 142, 144, 151, 152, 155, 199, 200, 202, 203, 204, 206, 207, 208, 233, 239], "explor": [0, 1, 102, 124, 139, 141, 142, 145, 146, 158, 202, 213, 214, 227, 233, 239, 241, 244], "planner": [0, 108, 122, 233], "object": [0, 3, 4, 6, 12, 13, 15, 16, 17, 18, 19, 24, 28, 40, 41, 42, 43, 46, 49, 51, 52, 53, 72, 80, 83, 96, 97, 101, 122, 135, 136, 143, 145, 146, 147, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 210, 213, 214, 226, 227, 231, 233, 237, 240, 241, 244, 248], "sac": [0, 167, 170, 172, 224, 225, 233], "redq": [0, 170, 221, 222, 233], "iql": [0, 167, 233], "a2c": [0, 158, 211, 233], "dreamer": [0, 65, 116, 163, 164, 165, 233], "trainer": [0, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 239], "checkpoint": [0, 233, 245], "builder": [0, 233, 240, 248], "logger": [0, 189, 191, 192, 193, 194, 195, 196, 200, 202, 206, 227, 231, 233], "_util": [0, 11, 233], "implement_for": [0, 233], "index": [0, 3, 7, 8, 10, 15, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 71, 107, 239, 243, 247], "search": [0, 240], "page": [0, 7], "somewhat": [1, 248], "equival": [1, 16, 25, 26, 27, 28, 29, 46, 49, 51, 52, 53, 97, 203, 239, 247, 248], "dataload": [1, 240, 241], "except": [1, 3, 12, 13, 15, 17, 18, 19, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 46, 74, 128, 154, 239, 240, 247, 248], "1": [1, 2, 3, 4, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 35, 36, 46, 47, 49, 50, 51, 52, 53, 55, 62, 63, 64, 66, 68, 70, 71, 72, 76, 79, 80, 83, 84, 85, 93, 94, 95, 97, 100, 101, 107, 108, 109, 110, 111, 113, 117, 118, 120, 122, 123, 124, 125, 129, 130, 131, 132, 133, 136, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 151, 155, 158, 159, 164, 167, 168, 169, 170, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 197, 202, 203, 204, 212, 215, 217, 220, 222, 225, 227, 231, 234, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248], "thei": [1, 3, 4, 8, 9, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 49, 51, 52, 53, 72, 74, 83, 96, 97, 100, 119, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 203, 206, 237, 240, 241, 243, 244, 245, 247, 248], "collect": [1, 3, 4, 8, 12, 13, 15, 16, 17, 18, 19, 20, 28, 30, 31, 32, 33, 80, 83, 100, 103, 142, 160, 170, 172, 197, 203, 206, 208, 209, 210, 227, 237, 244, 245, 247, 248], "over": [1, 2, 3, 4, 8, 12, 13, 15, 16, 17, 18, 19, 28, 46, 49, 51, 52, 53, 71, 80, 94, 107, 148, 162, 164, 209, 237, 239, 241, 244, 248], "non": [1, 8, 28, 31, 46, 49, 51, 52, 53, 66, 70, 75, 83, 93, 97, 98, 100, 107, 145, 146, 164, 178, 179, 180, 239, 244, 248], "static": [1, 101, 167, 244], "2": [1, 3, 8, 10, 11, 12, 13, 15, 20, 26, 27, 28, 46, 47, 49, 51, 52, 53, 63, 64, 68, 70, 71, 80, 83, 93, 97, 100, 101, 109, 110, 111, 112, 117, 119, 120, 125, 140, 141, 142, 145, 149, 151, 159, 160, 167, 168, 170, 172, 177, 178, 179, 180, 183, 184, 186, 187, 189, 197, 239, 240, 241, 243, 244, 245, 247, 248], "like": [1, 4, 7, 28, 46, 49, 51, 52, 53, 60, 95, 103, 170, 239, 241, 244, 245, 248], "version": [1, 6, 11, 28, 46, 49, 51, 52, 53, 167, 172, 180, 234, 239, 240, 241, 244, 245, 248], "being": [1, 3, 8, 16, 17, 19, 28, 46, 49, 51, 52, 53, 71, 72, 85, 97, 106, 142, 159, 168, 169, 189, 203, 208, 229, 230, 231, 239, 240, 241, 244], "train": [1, 12, 13, 15, 16, 17, 18, 19, 20, 28, 46, 49, 51, 52, 53, 76, 83, 97, 100, 103, 110, 112, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 178, 206, 208, 227, 237, 245, 248], "": [1, 3, 6, 7, 8, 28, 30, 31, 32, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 101, 103, 109, 124, 139, 145, 146, 167, 172, 178, 179, 180, 222, 225, 239, 240, 241, 243, 244, 245, 247, 248], "accept": [1, 12, 13, 15, 16, 17, 18, 19, 28, 46, 49, 50, 51, 52, 53, 70, 75, 83, 89, 93, 97, 98, 100, 145, 146, 147, 237, 239, 241, 248], "two": [1, 4, 8, 10, 28, 46, 49, 51, 52, 53, 80, 83, 100, 113, 146, 167, 168, 172, 174, 202, 206, 212, 220, 222, 225, 239, 240, 241, 243, 244, 247, 248], "main": [1, 2, 5, 19, 20, 47, 146, 206, 239, 243, 248], "argument": [1, 3, 12, 13, 15, 16, 17, 18, 19, 24, 28, 46, 49, 51, 52, 53, 70, 83, 93, 96, 97, 100, 107, 109, 120, 123, 145, 146, 147, 149, 188, 199, 209, 212, 215, 217, 220, 222, 225, 227, 228, 231, 239, 240, 241, 244, 248], "list": [1, 6, 7, 8, 9, 12, 13, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 46, 49, 50, 51, 52, 53, 67, 72, 80, 83, 85, 89, 97, 100, 120, 148, 149, 176, 178, 180, 188, 202, 203, 229, 230, 239, 240, 241, 243, 244, 245, 247, 248], "constructor": [1, 15, 17, 18, 19, 96, 178, 179, 180, 212, 215, 217, 220, 222, 225, 228, 231, 239, 240, 241], "iter": [1, 12, 13, 15, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 46, 49, 51, 52, 53, 73, 80, 90, 101, 109, 120, 145, 146, 147, 148, 153, 176, 202, 205, 206, 212, 220, 222, 225, 237, 239, 241, 244], "execut": [1, 3, 6, 7, 8, 12, 13, 15, 17, 18, 19, 28, 30, 31, 32, 33, 46, 47, 49, 50, 51, 52, 53, 93, 147, 148, 210, 231, 237, 240, 241, 246, 248], "step": [1, 3, 4, 8, 12, 13, 15, 16, 17, 18, 19, 28, 46, 47, 49, 50, 51, 52, 53, 55, 62, 75, 78, 79, 80, 92, 94, 97, 107, 108, 116, 119, 121, 122, 139, 141, 142, 146, 158, 163, 169, 177, 188, 197, 202, 206, 237, 239, 240, 243, 244, 245, 247], "queri": [1, 12, 13, 15, 16, 28, 46, 49, 51, 52, 53, 83, 96, 101, 148, 244, 247], "defin": [1, 2, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 49, 51, 52, 53, 84, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155, 178, 179, 180, 188, 228, 240, 244, 248], "number": [1, 3, 8, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 28, 29, 30, 31, 32, 37, 40, 41, 42, 46, 49, 50, 51, 52, 53, 67, 71, 76, 79, 80, 88, 92, 94, 101, 108, 109, 114, 115, 116, 117, 118, 120, 122, 125, 126, 127, 129, 130, 131, 132, 133, 139, 141, 142, 145, 146, 157, 163, 167, 170, 172, 197, 199, 202, 206, 208, 209, 210, 229, 230, 231, 239, 240, 241, 244, 245, 248], "befor": [1, 3, 4, 6, 7, 10, 12, 13, 15, 16, 17, 18, 19, 28, 46, 49, 51, 52, 53, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 80, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 98, 120, 123, 124, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 179, 180, 203, 239, 241, 244, 248], "deliv": [1, 17, 18, 19, 247], "stack": [1, 7, 8, 17, 19, 52, 53, 101, 147, 148, 188, 197, 240, 243, 244, 247], "user": [1, 2, 5, 8, 28, 46, 49, 51, 52, 53, 97, 119, 228, 237, 240, 244, 247, 248], "reset": [1, 3, 8, 12, 13, 15, 16, 17, 18, 19, 28, 46, 47, 49, 50, 51, 52, 53, 55, 62, 67, 70, 73, 75, 78, 79, 83, 89, 90, 92, 93, 94, 96, 99, 101, 103, 134, 142, 188, 212, 215, 217, 220, 222, 225, 239, 240, 241, 243, 247], "whenev": [1, 3, 28, 78, 208], "reach": [1, 3, 12, 13, 15, 16, 17, 18, 19, 46, 49, 51, 52, 53, 139, 141, 142, 241, 247, 248], "done": [1, 3, 4, 7, 8, 12, 13, 15, 17, 18, 19, 20, 24, 28, 46, 47, 49, 50, 51, 52, 53, 55, 62, 63, 64, 80, 85, 88, 90, 92, 93, 96, 97, 101, 107, 108, 122, 160, 161, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 212, 215, 217, 220, 222, 225, 239, 240, 241, 243, 244, 245, 247, 248], "state": [1, 3, 4, 12, 13, 15, 16, 28, 46, 49, 50, 51, 52, 53, 55, 62, 67, 68, 70, 73, 78, 80, 85, 90, 92, 96, 97, 99, 101, 107, 108, 116, 119, 120, 122, 126, 129, 130, 136, 145, 150, 170, 177, 178, 179, 180, 231, 239, 240, 241, 244, 248], "after": [1, 8, 12, 13, 17, 19, 24, 28, 46, 49, 51, 52, 53, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 107, 123, 139, 141, 164, 239, 240, 241, 244, 245, 248], "predefin": [1, 240, 241], "becaus": [1, 3, 4, 7, 96, 113, 119, 145, 146, 239, 240, 243, 244, 248], "potenti": [1, 244], "comput": [1, 3, 4, 8, 12, 15, 25, 28, 46, 49, 51, 52, 53, 80, 97, 99, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 125, 126, 127, 129, 130, 132, 133, 136, 139, 141, 142, 146, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 210, 239, 241, 243, 245], "heavi": [1, 8], "crucial": [1, 167, 239, 240, 241, 244, 248], "configur": [1, 8, 12, 13, 15, 16, 20, 169, 212, 220, 222, 225, 240, 241, 244], "hyperparamet": [1, 167, 244], "appropri": [1, 3, 4, 7, 12, 13, 15, 16, 44, 45, 93, 228, 231, 239, 240], "paramet": [1, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 46, 47, 49, 50, 51, 52, 53, 56, 57, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 141, 142, 145, 146, 147, 148, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 217, 220, 222, 225, 227, 228, 229, 230, 231, 239, 244, 245, 247], "consider": [1, 3, 8, 239, 240], "whether": [1, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 46, 49, 50, 51, 52, 53, 97, 109, 120, 149, 160, 161, 162, 170, 172, 180, 239, 240, 241, 244, 248], "should": [1, 3, 4, 5, 7, 8, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 43, 46, 49, 50, 51, 52, 53, 67, 75, 80, 84, 85, 89, 90, 92, 96, 97, 101, 103, 107, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 145, 146, 155, 166, 168, 169, 170, 173, 177, 178, 179, 180, 189, 201, 202, 203, 206, 227, 229, 230, 231, 237, 239, 240, 241, 243, 244, 245, 247, 248], "occur": [1, 8, 13, 68, 80, 84, 145, 146, 164, 248], "serial": [1, 3, 28, 46, 49, 51, 52, 53, 101], "optim": [1, 8, 28, 46, 49, 51, 52, 53, 108, 122, 123, 124, 169, 172, 201, 206, 212, 220, 227, 237, 241, 244], "parallel": [1, 3, 8, 16, 103, 158, 228, 229, 230, 231, 240, 241], "syncdatacollector": [1, 12, 13, 16, 17, 18, 19, 227, 230, 233, 241], "worker": [1, 12, 13, 15, 16, 17, 18, 19, 20, 47, 51, 52, 53, 101, 229, 230, 231, 239, 241, 247, 248], "multisyncdatacollector": [1, 17, 18, 19, 230, 233, 241, 247], "split": [1, 3, 12, 13, 15, 16, 17, 18, 19, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 237, 241, 247], "workload": 1, "across": [1, 8, 17, 18, 19, 101, 142, 208, 239, 244], "aggreg": [1, 109, 110, 111, 148], "result": [1, 3, 7, 12, 13, 15, 16, 17, 18, 19, 28, 30, 31, 32, 33, 46, 47, 49, 51, 52, 53, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 80, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 101, 103, 107, 120, 152, 178, 181, 182, 183, 184, 185, 186, 187, 188, 208, 240, 244, 245, 247, 248], "final": [1, 3, 4, 139, 141, 142, 147, 178, 202, 239, 240, 241, 244, 248], "multiasyncdatacollector": [1, 16, 17, 18, 19, 229, 233, 239, 240, 241, 247], "sever": [1, 8, 26, 28, 46, 49, 51, 52, 53, 68, 97, 169, 241, 248], "batch": [1, 3, 12, 13, 15, 16, 17, 18, 19, 21, 25, 28, 29, 30, 31, 32, 33, 38, 46, 49, 50, 51, 52, 53, 75, 80, 84, 93, 97, 98, 114, 115, 119, 123, 128, 131, 142, 145, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 197, 200, 203, 204, 205, 206, 208, 229, 230, 231, 237, 239, 240, 241, 243, 245, 247, 248], "gather": [1, 3, 17, 19, 84, 177, 210, 234, 239, 240, 241, 244, 248], "continu": [1, 9, 23, 35, 110, 111, 112, 113, 142, 146, 148, 173, 178, 181, 182, 185, 215, 239, 241, 244, 247, 248], "concomitantli": 1, "network": [1, 4, 8, 28, 46, 49, 51, 52, 53, 109, 110, 111, 112, 113, 115, 116, 117, 120, 124, 126, 127, 129, 130, 136, 137, 138, 145, 160, 161, 162, 166, 167, 170, 172, 173, 175, 178, 179, 180, 212, 215, 220, 226, 227, 237, 243, 244, 248], "impli": [1, 248], "weight": [1, 4, 9, 12, 13, 15, 16, 17, 18, 19, 28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 124, 145, 158, 159, 164, 208, 226, 237, 239, 240, 241, 243, 244, 247], "mai": [1, 2, 3, 4, 5, 7, 8, 12, 13, 15, 16, 17, 19, 28, 46, 49, 51, 52, 53, 80, 90, 97, 98, 101, 103, 120, 237, 239, 240, 241, 244, 245, 247, 248], "slightli": [1, 239, 244, 245, 248], "lag": [1, 12, 13, 15, 16, 240, 241], "therefor": [1, 3, 7, 169, 248], "although": [1, 8, 46, 49, 51, 52, 53, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155, 237, 239, 240], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 4, 7, 8, 12, 13, 15, 16, 17, 18, 19, 30, 31, 32, 33, 40, 41, 46, 49, 50, 51, 52, 53, 67, 83, 89, 92, 94, 96, 98, 100, 139, 141, 145, 146, 157, 158, 159, 160, 162, 166, 167, 168, 169, 170, 172, 173, 177, 178, 179, 180, 188, 189, 200, 203, 204, 206, 208, 237, 239, 240, 241, 243, 244, 248], "asynchron": [1, 9, 13, 28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145, 158, 229, 240, 241], "off": [1, 2, 4, 118, 132, 133, 172, 202, 213, 237, 240, 241, 245, 248], "curriculum": [1, 4], "For": [1, 3, 4, 7, 8, 9, 10, 12, 13, 15, 16, 17, 19, 28, 46, 49, 51, 52, 53, 75, 80, 123, 151, 158, 162, 167, 169, 202, 215, 237, 239, 240, 241, 244, 245, 248], "remot": [1, 17, 18, 19, 52, 53, 248], "rollout": [1, 3, 13, 15, 46, 49, 50, 51, 52, 53, 63, 64, 85, 103, 108, 122, 142, 158, 210, 239, 240, 241, 245, 247], "necessari": [1, 4, 6, 8, 12, 13, 15, 16, 90, 170, 178, 179, 180, 239, 240, 241], "synchronis": [1, 47], "from": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 46, 47, 49, 50, 51, 52, 53, 68, 71, 73, 78, 80, 83, 84, 85, 90, 92, 93, 95, 96, 97, 98, 100, 101, 107, 108, 110, 111, 112, 113, 118, 120, 121, 122, 123, 125, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 159, 160, 161, 168, 169, 170, 172, 177, 178, 179, 180, 188, 189, 197, 203, 206, 209, 210, 212, 215, 217, 220, 222, 223, 225, 227, 228, 231, 234, 237, 239, 240, 241, 243, 244, 245, 247, 248], "either": [1, 5, 20, 28, 46, 49, 51, 52, 53, 150, 193, 215, 237, 239, 240, 245, 247, 248], "update_policy_weights_": [1, 12, 13, 15, 16, 17, 18, 19, 239, 240, 247], "update_at_each_batch": [1, 12, 13, 16, 239], "true": [1, 3, 4, 8, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63, 64, 68, 70, 71, 75, 78, 79, 80, 83, 84, 85, 88, 92, 93, 95, 97, 98, 100, 101, 103, 107, 108, 109, 110, 111, 112, 113, 117, 118, 120, 122, 123, 124, 132, 133, 136, 137, 138, 139, 142, 145, 146, 147, 148, 154, 158, 159, 163, 164, 165, 168, 169, 170, 172, 174, 178, 179, 180, 183, 184, 186, 187, 188, 189, 199, 200, 202, 203, 206, 217, 231, 237, 239, 240, 241, 243, 244, 245, 247, 248], "second": [1, 8, 167, 172, 205, 239, 240, 241, 243, 244, 245, 247, 248], "consid": [1, 8, 19, 28, 46, 49, 51, 52, 53, 71, 114, 131, 234, 239, 244], "devic": [1, 2, 3, 7, 8, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 40, 41, 46, 48, 49, 50, 51, 52, 53, 55, 62, 63, 64, 70, 82, 83, 85, 93, 95, 97, 100, 107, 108, 109, 110, 111, 112, 113, 117, 119, 120, 122, 123, 124, 136, 137, 138, 140, 142, 143, 144, 145, 148, 149, 151, 152, 160, 203, 208, 212, 215, 217, 220, 222, 223, 225, 239, 240, 241, 243, 244, 245, 247], "oper": [1, 3, 4, 7, 8, 12, 13, 16, 28, 46, 49, 51, 52, 53, 75, 96, 125, 136, 137, 138, 145, 150, 151, 158, 159, 160, 161, 162, 168, 169, 177, 178, 179, 180, 206, 215, 217, 222, 225, 237, 239, 240, 241, 243, 244, 248], "instanc": [1, 3, 4, 7, 8, 12, 13, 15, 16, 17, 18, 19, 28, 34, 46, 47, 49, 50, 51, 52, 53, 57, 67, 80, 93, 96, 101, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 125, 126, 127, 129, 130, 139, 141, 142, 146, 147, 148, 155, 189, 193, 202, 210, 212, 213, 214, 215, 217, 220, 222, 225, 227, 229, 230, 237, 239, 241, 244, 248], "cpu": [1, 3, 8, 10, 12, 13, 15, 17, 18, 19, 22, 28, 34, 40, 41, 46, 49, 50, 51, 52, 53, 55, 62, 63, 64, 70, 83, 85, 93, 97, 100, 107, 108, 122, 124, 143, 145, 148, 203, 212, 215, 217, 220, 222, 225, 239, 240, 241, 243, 244, 245, 247, 248], "slower": 1, "than": [1, 4, 8, 12, 13, 15, 16, 85, 113, 120, 125, 139, 141, 145, 203, 208, 234, 239, 240, 241, 244, 247, 248], "one": [1, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 25, 26, 27, 29, 30, 31, 32, 33, 37, 43, 44, 45, 46, 47, 49, 51, 52, 53, 71, 79, 80, 83, 91, 97, 98, 100, 101, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 128, 129, 130, 139, 140, 141, 142, 144, 145, 146, 151, 152, 155, 157, 158, 159, 160, 161, 168, 169, 170, 199, 201, 202, 206, 210, 212, 220, 222, 225, 231, 234, 237, 239, 240, 241, 243, 244, 245, 248], "cuda": [1, 3, 7, 28, 46, 49, 51, 52, 53, 70, 82, 83, 93, 97, 100, 145, 198, 239, 240, 241, 245, 248], "when": [1, 2, 3, 5, 8, 12, 13, 15, 16, 17, 18, 19, 28, 30, 31, 32, 33, 38, 40, 41, 42, 43, 46, 47, 49, 51, 52, 53, 70, 71, 79, 80, 83, 84, 89, 93, 96, 97, 100, 101, 106, 108, 120, 121, 122, 123, 132, 145, 146, 148, 155, 159, 168, 169, 177, 188, 189, 203, 231, 234, 237, 239, 240, 241, 244, 245, 248], "multipl": [1, 3, 5, 8, 12, 13, 15, 16, 17, 18, 19, 25, 52, 53, 68, 71, 89, 96, 101, 119, 123, 124, 145, 146, 170, 222, 231, 237, 239, 240, 241, 244, 247], "infer": [1, 52, 53, 101, 123, 167, 172, 239, 241], "run": [1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 16, 28, 46, 49, 50, 51, 52, 53, 56, 57, 79, 80, 97, 101, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 147, 148, 155, 202, 229, 230, 231, 234, 237, 239, 240, 241, 243, 244, 245, 247], "dispatch": [1, 17, 18, 19], "avail": [1, 4, 6, 146, 151, 152, 229, 230, 239, 240, 241, 248], "speed": [1, 2, 4, 8, 25, 239, 240, 241, 244], "up": [1, 2, 3, 8, 9, 25, 234, 239, 240, 241, 244, 248], "avoid": [1, 28, 46, 49, 51, 52, 53, 97, 101, 145, 209, 241], "oom": 1, "error": [1, 3, 7, 10, 11, 28, 46, 49, 51, 52, 53, 84, 103, 154, 234, 239, 240, 241, 248], "choic": [1, 2, 125], "size": [1, 2, 3, 12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 46, 48, 49, 50, 51, 52, 53, 55, 62, 63, 64, 68, 75, 83, 85, 91, 93, 95, 97, 98, 100, 107, 108, 109, 114, 119, 120, 122, 125, 128, 129, 130, 131, 136, 137, 138, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 177, 178, 179, 180, 189, 197, 203, 212, 215, 217, 220, 222, 225, 239, 240, 241, 243, 244, 245, 247, 248], "pass": [1, 3, 4, 12, 13, 15, 17, 18, 19, 20, 24, 28, 32, 46, 47, 48, 49, 51, 52, 53, 72, 85, 96, 98, 101, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 123, 125, 126, 127, 129, 130, 139, 141, 142, 145, 146, 148, 154, 155, 178, 179, 180, 203, 229, 230, 231, 239, 240, 241, 243, 244, 248], "ie": [1, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 35, 36, 37, 75, 98, 240, 241], "store": [1, 2, 3, 8, 12, 13, 15, 16, 19, 24, 28, 32, 33, 37, 40, 41, 42, 46, 49, 51, 52, 53, 101, 108, 119, 122, 212, 215, 217, 220, 222, 225, 237, 239, 241, 245, 248], "while": [1, 3, 7, 8, 28, 46, 49, 51, 52, 53, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155, 167, 168, 169, 239, 241, 244, 245, 247], "wait": [1, 19, 20, 244], "also": [1, 2, 3, 8, 11, 28, 32, 46, 49, 51, 52, 53, 71, 80, 85, 89, 90, 93, 97, 130, 147, 148, 158, 160, 161, 178, 237, 239, 240, 241, 243, 244, 248], "impact": [1, 240], "memori": [1, 3, 8, 25, 28, 40, 46, 47, 49, 51, 52, 53, 70, 83, 93, 97, 100, 101, 145, 231, 237, 239, 240, 241, 243, 244, 245, 247, 248], "manag": [1, 8, 175, 176, 202, 239], "kei": [1, 3, 7, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 46, 49, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 89, 90, 92, 93, 94, 96, 97, 99, 100, 101, 107, 108, 121, 122, 139, 141, 142, 145, 146, 147, 148, 149, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 189, 200, 201, 202, 204, 205, 206, 210, 212, 220, 222, 225, 237, 239, 240, 241, 243, 244, 247, 248], "control": [1, 3, 5, 8, 56, 57, 71, 107, 110, 111, 112, 113, 121, 122, 130, 142, 145, 146, 147, 159, 168, 169, 173, 178, 181, 182, 185, 215, 237, 239, 240, 241, 244], "which": [1, 3, 4, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 24, 25, 28, 29, 33, 46, 49, 51, 52, 53, 67, 68, 76, 79, 80, 83, 84, 92, 93, 94, 96, 97, 103, 118, 132, 133, 136, 137, 138, 145, 146, 148, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 178, 197, 201, 212, 215, 217, 220, 222, 225, 237, 239, 240, 241, 243, 244, 245, 248], "storing_devic": [1, 12, 13, 15, 16, 17, 18, 19, 239, 240, 247], "dure": [1, 12, 13, 15, 16, 17, 18, 19, 46, 49, 51, 52, 53, 76, 97, 202, 206, 239, 240, 241, 244, 248], "A": [1, 3, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 60, 71, 76, 83, 84, 85, 93, 96, 97, 99, 101, 102, 103, 107, 108, 109, 120, 122, 124, 125, 139, 141, 146, 147, 148, 151, 155, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 190, 191, 194, 199, 206, 208, 212, 217, 220, 222, 225, 227, 240, 241, 244, 248], "heurist": [1, 4, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 142, 239, 248], "usual": [1, 3, 4, 6, 7, 8, 46, 49, 51, 52, 53, 124, 188, 212, 220, 222, 225, 234, 237, 239, 241, 248], "same": [1, 3, 4, 11, 12, 13, 15, 17, 18, 19, 28, 46, 47, 49, 51, 52, 53, 71, 76, 79, 80, 96, 97, 101, 109, 120, 142, 239, 240, 241, 243, 244, 245, 248], "storag": [1, 2, 8, 28, 30, 31, 32, 33, 40, 41, 42, 46, 48, 49, 51, 52, 53, 72, 233, 237, 239, 240, 241, 245], "default": [1, 3, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 24, 25, 28, 29, 30, 31, 32, 37, 40, 41, 46, 49, 51, 52, 53, 56, 67, 68, 71, 75, 79, 80, 83, 84, 88, 92, 93, 94, 95, 97, 98, 100, 101, 103, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 139, 141, 142, 143, 145, 146, 149, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 197, 199, 200, 202, 203, 204, 206, 212, 215, 220, 222, 225, 227, 231, 237, 239, 240, 241, 245, 247, 248], "behaviour": [1, 3, 49, 68, 80, 84, 107, 118, 132, 133, 202, 240, 244], "besid": 1, "those": [1, 5, 7, 24, 52, 53, 80, 93, 146, 147, 148, 208, 229, 230, 239, 240, 244, 248], "choos": [1, 239, 240, 241], "follow": [1, 2, 3, 6, 7, 8, 28, 46, 49, 50, 51, 52, 53, 83, 109, 120, 157, 159, 168, 171, 206, 222, 225, 237, 239, 240, 241, 243, 244, 247, 248], "max_frames_per_traj": [1, 12, 13, 15, 16, 17, 18, 19, 209, 239, 241, 247], "frame": [1, 2, 12, 13, 15, 16, 17, 18, 19, 28, 49, 67, 76, 139, 141, 142, 188, 189, 199, 202, 206, 209, 210, 239, 240, 241, 247, 248], "call": [1, 3, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 28, 30, 31, 32, 33, 38, 40, 41, 42, 43, 46, 49, 51, 52, 53, 67, 70, 71, 72, 75, 78, 80, 82, 83, 89, 92, 93, 97, 100, 101, 103, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 122, 123, 125, 126, 127, 129, 130, 139, 141, 142, 145, 146, 148, 155, 177, 188, 202, 237, 239, 240, 241, 244, 247, 248], "frames_per_batch": [1, 12, 13, 15, 16, 17, 18, 19, 209, 239, 240, 241, 247], "each": [1, 3, 4, 7, 8, 12, 13, 15, 16, 17, 18, 19, 21, 26, 27, 28, 32, 46, 47, 49, 51, 52, 53, 83, 89, 92, 93, 94, 100, 101, 139, 148, 151, 152, 183, 184, 186, 187, 202, 203, 229, 230, 239, 240, 241, 244, 245, 247, 248], "init_random_fram": [1, 12, 13, 15, 16, 17, 18, 19, 209, 239, 240], "random": [1, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 38, 46, 49, 50, 51, 52, 53, 71, 79, 80, 93, 103, 145, 146, 170, 202, 210, 239, 240, 241, 244, 245, 247, 248], "rand_step": [1, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 78, 101, 244, 247, 248], "reset_at_each_it": [1, 12, 13, 15, 16, 17, 18, 19, 239], "split_traj": [1, 12, 13, 15, 16, 17, 18, 19, 239, 240, 241], "trajectori": [1, 3, 12, 13, 15, 16, 17, 18, 19, 21, 28, 32, 37, 46, 49, 51, 52, 53, 84, 96, 108, 122, 142, 169, 178, 180, 181, 182, 183, 184, 185, 186, 187, 197, 233, 240, 241, 244, 247, 248], "pad": [1, 21, 109, 110, 111, 119, 203, 239], "along": [1, 67, 68, 80, 84, 89, 95, 120, 124, 145, 146, 240, 244], "mask": [1, 4, 12, 13, 15, 84, 203, 239, 240, 248], "point": [1, 20, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 44, 45, 46, 49, 51, 52, 53, 67, 70, 83, 93, 95, 97, 100, 121, 145, 157, 162, 206, 234, 240, 241, 243, 244, 248], "boolean": [1, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 49, 84, 139, 181, 182, 183, 184, 185, 186, 187, 237], "repres": [1, 3, 12, 13, 15, 16, 17, 18, 19, 24, 32, 46, 49, 51, 52, 53, 76, 84, 146, 151, 152, 174, 178, 203, 239, 240, 241], "valid": [1, 84, 97, 109, 120, 139, 141, 168, 203, 237, 248], "valu": [1, 3, 8, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 35, 36, 46, 49, 51, 52, 53, 66, 67, 68, 71, 79, 80, 83, 84, 87, 89, 93, 94, 95, 96, 97, 100, 101, 110, 111, 112, 113, 114, 116, 117, 118, 120, 122, 123, 124, 125, 128, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 197, 199, 200, 201, 202, 203, 206, 212, 215, 220, 222, 225, 227, 237, 240, 243, 244, 247, 248], "exploration_mod": [1, 12, 13, 15, 17, 18, 19, 202, 233, 239, 240], "strategi": [1, 237, 239, 240], "reset_when_don": [1, 12, 13, 15, 17, 18, 19], "These": [1, 7, 28, 46, 49, 51, 52, 53, 83, 100, 239, 241, 244, 248], "tool": [1, 5, 244, 248], "backend": [1, 3, 7, 11, 17, 18, 20, 237, 239, 241, 244], "gloo": [1, 17, 18, 20], "nccl": [1, 17, 18], "mpi": [1, 17, 18], "distributeddatacollector": [1, 19, 20, 233], "rpc": [1, 19, 20], "rpcdatacollector": [1, 20, 233], "launcher": [1, 17, 18, 19, 20], "rai": 1, "submitit": [1, 17, 18, 19, 20], "torch": [1, 3, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 40, 41, 46, 47, 49, 50, 51, 52, 53, 55, 62, 63, 64, 68, 70, 71, 72, 80, 83, 85, 88, 93, 95, 97, 100, 101, 107, 108, 109, 114, 116, 118, 119, 120, 122, 123, 124, 125, 128, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 152, 153, 156, 160, 178, 179, 180, 197, 204, 205, 212, 215, 217, 220, 222, 225, 227, 237, 239, 240, 241, 243, 244, 245, 247, 248], "multiprocess": [1, 17, 18, 19, 47, 48, 101, 240, 241, 244, 248], "synchron": [1, 12, 18, 51, 229, 230, 240, 241], "mode": [1, 6, 12, 13, 15, 17, 18, 19, 28, 46, 49, 51, 52, 53, 97, 101, 104, 106, 114, 118, 128, 131, 132, 133, 146, 202, 239, 240, 247, 248], "resourc": [1, 234, 239, 241], "exampl": [1, 2, 3, 4, 9, 10, 11, 12, 13, 15, 16, 17, 20, 22, 24, 25, 26, 27, 28, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 70, 71, 72, 78, 80, 83, 85, 93, 95, 97, 100, 101, 107, 108, 109, 119, 120, 122, 125, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 154, 178, 179, 180, 197, 198, 199, 200, 201, 203, 204, 205, 208, 212, 215, 217, 220, 222, 225, 227, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248], "folder": 1, "sub": [1, 2, 3, 12, 13, 17, 18, 19, 46, 49, 51, 52, 53, 84, 147, 148, 197, 206, 240, 241, 243, 247, 248], "all": [1, 3, 4, 8, 12, 13, 15, 16, 17, 18, 19, 28, 46, 47, 49, 50, 51, 52, 53, 70, 74, 80, 83, 89, 93, 94, 97, 100, 101, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 145, 146, 148, 155, 164, 201, 206, 209, 229, 230, 231, 234, 237, 239, 240, 241, 242, 243, 244, 247, 248], "variou": [1, 3, 12, 13, 15, 16, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 229, 230, 240, 241, 248], "machin": [1, 7, 17, 18, 19, 28], "One": [1, 2, 4, 8, 27, 29, 128, 139, 141, 145, 174, 193, 239, 240, 248], "wonder": 1, "why": [1, 3, 239, 244, 248], "parallelenv": [1, 2, 3, 12, 13, 15, 16, 19, 51, 53, 228, 233, 239, 240, 241, 243, 247, 248], "instead": [1, 4, 7, 8, 11, 25, 28, 46, 49, 51, 52, 53, 75, 93, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155, 231, 239, 244, 248], "In": [1, 3, 4, 5, 7, 8, 10, 11, 16, 20, 28, 46, 49, 51, 52, 53, 70, 83, 90, 93, 96, 97, 100, 118, 120, 130, 132, 133, 145, 148, 157, 208, 229, 230, 231, 239, 240, 241, 243, 244, 245, 248], "gener": [1, 3, 7, 8, 15, 31, 39, 47, 50, 80, 85, 89, 90, 96, 114, 128, 135, 143, 146, 149, 150, 170, 178, 181, 182, 185, 192, 206, 239, 240, 241, 242, 243, 244, 245, 247, 248], "lower": [1, 2, 16, 23, 101, 129, 130, 241, 244], "io": [1, 51], "footprint": 1, "need": [1, 4, 7, 8, 10, 17, 18, 19, 28, 43, 46, 49, 51, 52, 53, 75, 83, 85, 97, 100, 101, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 123, 125, 126, 127, 129, 130, 139, 141, 142, 145, 155, 157, 170, 177, 189, 206, 231, 239, 240, 241, 244, 247, 248], "commun": [1, 2, 3, 234, 241, 248], "yet": [1, 245], "spec": [1, 2, 3, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 46, 48, 49, 50, 51, 52, 53, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 80, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 103, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 152, 212, 215, 217, 220, 222, 225, 239, 240, 241, 243, 247], "plai": [1, 67, 240, 241, 248], "role": [1, 240, 248], "opposit": 1, "direct": [1, 28, 46, 49, 51, 52, 53, 240], "sinc": [1, 3, 4, 5, 7, 28, 46, 49, 51, 52, 53, 107, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155, 239, 240, 241, 244, 245, 247, 248], "faster": [1, 4, 51], "share": [1, 2, 3, 6, 8, 40, 41, 42, 43, 47, 52, 53, 101, 136, 137, 138, 231, 241, 243, 247, 248], "among": 1, "achiev": [1, 3, 4, 28, 46, 49, 51, 52, 53, 203, 237, 239, 241, 244, 248], "via": [1, 3, 4, 7, 8, 52, 83, 96, 100, 160, 237, 240, 241, 248], "capabl": [1, 7, 237, 239, 243, 245, 248], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 46, 202, 240, 241, 248], "gpu": [1, 7, 8, 28, 46, 49, 51, 52, 53, 239, 241, 248], "nativ": [1, 7, 9, 46, 49, 51, 52, 53, 67], "driver": [1, 7], "practic": [1, 4, 5, 8, 118, 132, 133, 157, 234, 239, 240, 241, 245, 248], "mean": [1, 2, 3, 4, 7, 12, 13, 15, 17, 18, 19, 32, 37, 80, 101, 108, 114, 116, 119, 122, 131, 139, 146, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 239, 240, 241, 244, 247, 248], "keyword": [1, 3, 12, 13, 15, 17, 18, 19, 28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145, 146, 228, 239, 240, 241, 248], "build": [1, 3, 7, 21, 24, 28, 46, 49, 51, 52, 53, 101, 108, 122, 146, 206, 211, 216, 218, 219, 221, 223, 224, 226, 237, 241, 244, 245, 247, 248], "central": [2, 239, 240], "part": [2, 4, 8, 28, 46, 49, 51, 52, 53, 80, 89, 149, 197, 231, 239, 240, 241, 244, 248], "algorithm": [2, 8, 9, 12, 13, 50, 76, 158, 169, 170, 171, 172, 197, 212, 213, 220, 237, 239, 240, 241, 245, 247], "implement": [2, 3, 9, 11, 28, 43, 46, 49, 51, 52, 53, 85, 96, 101, 118, 131, 132, 133, 158, 167, 169, 172, 212, 220, 222, 225, 237, 239, 240, 241, 244, 247], "wide": [2, 3, 5, 239], "we": [2, 3, 5, 7, 9, 24, 28, 46, 47, 49, 51, 52, 53, 83, 85, 93, 101, 108, 119, 234, 237, 239, 240, 241, 243, 244, 245, 247, 248], "give": [2, 7, 50, 234, 239, 240, 244, 245, 247], "abil": [2, 244], "veri": [2, 3, 240, 244, 247, 248], "influenti": 2, "sampl": [2, 4, 8, 9, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 46, 49, 50, 51, 52, 53, 84, 104, 106, 108, 114, 118, 122, 128, 129, 132, 133, 139, 141, 142, 145, 146, 159, 160, 161, 168, 169, 197, 203, 206, 209, 240, 241, 245, 247, 248], "latenc": 2, "especi": [2, 3, 7, 8, 68], "larger": [2, 4, 167], "volum": 2, "lazymemmapstorag": [2, 233, 239, 240, 245], "advis": [2, 239, 248], "due": [2, 3, 5, 245, 248], "serialis": 2, "memmaptensor": [2, 245], "well": [2, 3, 8, 16, 28, 43, 46, 49, 51, 52, 53, 129, 130, 239, 240, 245, 247, 248], "specifi": [2, 11, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 49, 51, 52, 53, 89, 91, 98, 108, 145, 146, 239, 241], "file": [2, 6, 7, 8, 188, 237, 239, 240, 246, 247], "locat": [2, 7, 49, 80, 88, 118, 125, 132, 133, 240, 241], "improv": [2, 4, 76, 158], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 30, 31, 32, 233], "were": [2, 7, 52, 53, 239, 241], "found": [2, 6, 7, 10, 24, 28, 32, 46, 49, 51, 52, 53, 101, 146, 160, 169, 239, 240, 247], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 17, 18, 19, 30, 37, 51, 67, 83, 110, 111, 112, 113, 116, 117, 122, 124, 126, 127, 129, 130, 142, 151, 158, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 178, 181, 182, 185, 212, 215, 220, 222, 225, 239, 240, 245, 247], "com": [2, 5, 6, 7, 10, 17, 18, 19, 245, 247], "tree": 2, "type": [2, 3, 13, 17, 18, 19, 28, 30, 32, 34, 46, 49, 50, 51, 52, 53, 70, 83, 85, 93, 96, 97, 100, 101, 109, 120, 124, 139, 141, 145, 146, 153, 212, 215, 217, 220, 222, 225, 229, 240, 241, 244, 248], "1x": 2, "lazytensorstorag": [2, 233, 241], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 12, 13, 15, 24, 25, 26, 27, 28, 29, 46, 49, 51, 52, 53, 70, 71, 80, 83, 85, 93, 95, 97, 100, 108, 109, 110, 111, 117, 119, 120, 122, 125, 135, 136, 137, 138, 140, 143, 145, 148, 149, 151, 154, 164, 178, 179, 180, 183, 184, 186, 187, 189, 205, 217, 237, 239, 240, 241, 244, 245, 247, 248], "44x": 2, "too": [2, 7, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 118, 132, 133, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 178, 179, 180, 239, 240, 241, 244, 248], "difficult": [2, 4], "trajecotri": 2, "element": [2, 12, 13, 15, 17, 18, 19, 26, 27, 29, 30, 31, 32, 33, 37, 40, 41, 42, 84, 109, 139, 145, 146, 197, 241, 248], "pai": [2, 8, 240], "attent": [2, 8, 240], "alwai": [2, 19, 28, 46, 49, 51, 52, 53, 79, 240, 241, 244], "lead": [2, 3, 4, 8, 10, 11, 24, 28, 31, 93, 118, 132, 133, 244, 247], "dimens": [2, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 67, 68, 75, 80, 84, 91, 95, 98, 109, 120, 123, 124, 131, 132, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 178, 179, 180, 231, 240, 241, 244], "other": [2, 3, 4, 7, 8, 20, 28, 31, 40, 41, 42, 43, 46, 49, 50, 51, 52, 53, 71, 90, 101, 124, 125, 146, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 203, 212, 220, 222, 225, 229, 230, 237, 239, 240, 241, 244, 245, 247, 248], "word": [2, 244, 248], "creat": [2, 3, 4, 5, 6, 7, 10, 12, 13, 15, 16, 17, 18, 19, 28, 30, 31, 32, 46, 47, 49, 51, 52, 53, 83, 89, 96, 97, 101, 107, 109, 110, 111, 112, 113, 117, 120, 121, 146, 161, 162, 170, 189, 203, 210, 213, 214, 227, 229, 230, 239, 240, 241, 244, 245, 247, 248], "1m": [2, 209, 239, 241, 245], "multidimension": [2, 32, 37], "doe": [2, 3, 17, 30, 32, 37, 43, 123, 147, 148, 159, 168, 169, 177, 206, 237, 239, 240, 241, 244, 248], "desir": [2, 3, 28, 46, 49, 51, 52, 53, 70, 80, 83, 84, 93, 97, 100, 106, 109, 120, 145, 146, 239, 244], "diversifi": 2, "make": [2, 4, 7, 28, 43, 46, 49, 51, 52, 53, 59, 62, 80, 83, 84, 103, 123, 146, 169, 203, 214, 231, 239, 240, 241, 243, 244, 245, 247, 248], "more": [2, 3, 4, 6, 8, 11, 12, 13, 15, 16, 17, 18, 19, 28, 30, 31, 32, 33, 46, 49, 51, 52, 53, 102, 120, 123, 125, 139, 141, 145, 151, 158, 162, 169, 178, 181, 182, 185, 201, 215, 234, 237, 239, 240, 241, 243, 244, 245, 248], "To": [2, 3, 4, 6, 7, 8, 17, 18, 19, 28, 30, 31, 32, 46, 49, 51, 52, 53, 101, 136, 137, 138, 142, 206, 239, 240, 241, 244, 245, 247, 248], "do": [2, 3, 4, 7, 49, 79, 84, 107, 123, 137, 237, 239, 240, 241, 243, 244, 247, 248], "custom": [2, 3, 5, 28, 46, 49, 51, 52, 53, 231, 240, 241], "name": [2, 6, 7, 11, 28, 46, 49, 51, 52, 53, 56, 71, 73, 85, 89, 90, 97, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 191, 193, 194, 195, 196, 200, 201, 212, 215, 217, 220, 222, 225, 237, 239, 240, 241, 244, 248], "randomcroptensordict": 2, "here": [2, 3, 4, 7, 8, 9, 10, 239, 240, 241, 244, 247, 248], "how": [2, 3, 17, 18, 19, 28, 30, 32, 37, 46, 49, 51, 52, 53, 159, 166, 168, 169, 206, 234, 239, 240, 241, 243, 244, 245, 247, 248], "parent": [2, 3, 34, 46, 68, 75, 76, 80, 83, 93, 96, 98, 136, 169, 244, 247, 248], "subclass": [2, 3, 46, 49, 51, 52, 53, 96, 103, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 140, 141, 142, 144, 145, 146, 147, 155, 169, 239, 244], "basic": [2, 50, 241, 248], "properti": [2, 3, 46, 49, 50, 51, 52, 53, 97, 114, 118, 123, 128, 131, 132, 133, 244], "observ": [2, 3, 8, 12, 13, 15, 28, 34, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 62, 63, 64, 67, 68, 69, 70, 72, 73, 75, 77, 78, 80, 81, 85, 86, 89, 90, 92, 93, 94, 95, 96, 97, 98, 101, 107, 110, 111, 112, 113, 119, 126, 127, 129, 135, 136, 137, 138, 140, 141, 142, 143, 144, 149, 150, 151, 152, 161, 164, 178, 179, 180, 189, 212, 215, 217, 220, 222, 225, 227, 237, 240, 241, 243, 244, 247, 248], "action": [2, 3, 8, 9, 12, 13, 15, 25, 29, 34, 46, 49, 50, 51, 52, 53, 55, 62, 63, 64, 71, 72, 76, 79, 85, 90, 97, 107, 108, 110, 111, 112, 113, 115, 116, 120, 121, 122, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 149, 151, 152, 161, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 212, 215, 217, 220, 222, 225, 227, 231, 237, 239, 240, 241, 243, 245, 247, 248], "shape": [2, 3, 12, 13, 15, 20, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 49, 51, 52, 53, 68, 80, 85, 93, 95, 102, 103, 107, 114, 115, 120, 123, 125, 128, 131, 143, 145, 148, 174, 189, 197, 203, 206, 227, 239, 240, 241, 243, 245, 247, 248], "dtype": [2, 3, 12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 46, 49, 50, 51, 52, 53, 55, 62, 63, 64, 70, 71, 72, 80, 83, 85, 93, 95, 97, 100, 103, 107, 108, 122, 123, 124, 136, 137, 138, 140, 142, 143, 144, 145, 148, 149, 151, 152, 178, 179, 180, 212, 215, 217, 220, 222, 225, 240, 241, 243, 244, 245, 247, 248], "import": [2, 3, 4, 6, 7, 10, 12, 13, 15, 20, 30, 32, 37, 47, 49, 50, 78, 80, 83, 85, 93, 100, 101, 107, 108, 120, 122, 125, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 159, 178, 179, 180, 199, 202, 212, 215, 217, 220, 222, 225, 227, 240, 241, 243, 244, 245, 247, 248], "match": [2, 3, 6, 8, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 47, 49, 51, 52, 53, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 80, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 109, 114, 120, 131, 145, 146, 168, 170, 172, 203, 208, 240, 241, 243, 244, 247, 248], "input": [2, 3, 4, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 49, 50, 51, 52, 53, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 89, 90, 92, 93, 94, 96, 98, 99, 100, 101, 103, 107, 109, 110, 111, 112, 113, 119, 120, 123, 124, 129, 130, 142, 145, 146, 147, 148, 157, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 200, 204, 209, 227, 237, 239, 240, 241, 244, 247, 248], "output": [2, 3, 4, 12, 13, 15, 16, 28, 30, 31, 32, 46, 49, 50, 51, 52, 53, 67, 80, 83, 85, 94, 96, 100, 103, 109, 110, 111, 115, 116, 119, 120, 125, 136, 139, 141, 142, 145, 146, 147, 148, 151, 152, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 178, 189, 197, 239, 240, 241, 243, 244, 245, 247, 248], "send": [2, 3, 8, 240, 247], "receiv": [2, 3, 28, 46, 49, 51, 52, 53, 96, 120, 240, 241, 243, 244], "spawn": [2, 3, 4, 17, 20, 51], "check": [2, 3, 4, 5, 6, 7, 11, 17, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 47, 49, 50, 51, 52, 53, 68, 74, 84, 103, 145, 146, 153, 239, 240, 241, 243, 244, 245, 248], "check_env_spec": [2, 3, 233, 241, 244], "method": [2, 3, 4, 12, 13, 15, 16, 28, 30, 31, 32, 33, 37, 40, 41, 42, 43, 46, 49, 51, 52, 53, 67, 70, 75, 80, 83, 85, 86, 93, 96, 97, 100, 108, 119, 136, 137, 138, 145, 146, 147, 153, 158, 188, 228, 237, 238, 239, 241, 244, 248], "saniti": [2, 3, 7, 103, 240, 241], "offer": [3, 7, 244, 248], "handl": [3, 28, 46, 49, 51, 52, 53, 101, 120, 206, 229, 230, 239, 241], "differ": [3, 4, 11, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 49, 51, 52, 53, 67, 71, 80, 85, 97, 98, 120, 122, 151, 152, 167, 169, 174, 178, 179, 202, 206, 208, 229, 230, 237, 239, 240, 241, 243, 244, 245, 248], "dm": [3, 239, 248], "lab": [3, 56, 57, 234], "base": [3, 4, 8, 9, 12, 13, 15, 16, 17, 18, 19, 39, 45, 50, 51, 93, 99, 136, 163, 206, 212, 220, 222, 225, 237, 239, 242, 244, 246, 248], "goal": [3, 4, 239, 240, 241, 244], "abl": [3, 239, 241, 243, 244, 247], "experi": [3, 30, 37, 103, 191, 192, 193, 194, 195, 196, 234, 240, 241], "even": [3, 4, 8, 13, 17, 19, 40, 41, 42, 43, 47, 239, 241, 244, 248], "simul": [3, 5, 7, 8, 65, 108, 122, 239, 241], "some": [3, 4, 7, 8, 9, 20, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 49, 51, 52, 53, 83, 103, 110, 146, 147, 148, 197, 209, 237, 239, 240, 241, 244, 247, 248], "box": [3, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36], "wrapper": [3, 11, 16, 32, 33, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 125, 139, 141, 142, 146, 150, 178, 194, 195, 196, 231, 239, 241, 245, 248], "under": [3, 4, 28, 46, 49, 51, 52, 53, 145, 146, 239, 244, 248], "lib": [3, 5, 6, 7, 9, 10, 12, 13, 15, 20, 47, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 78, 80, 85, 93, 101, 212, 215, 217, 220, 222, 225, 227, 239, 240, 241, 243, 245, 247, 248], "hope": 3, "imit": 3, "nn": [3, 12, 13, 15, 28, 46, 49, 50, 51, 52, 53, 70, 71, 83, 93, 97, 100, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 122, 125, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 158, 161, 162, 178, 179, 180, 222, 225, 227, 239, 240, 241, 243, 244, 245, 247], "typic": [3, 4, 8, 28, 46, 49, 51, 52, 53, 237, 241, 244], "organis": [3, 244], "allow": [3, 12, 13, 15, 16, 17, 18, 19, 28, 29, 46, 49, 51, 52, 53, 85, 93, 107, 120, 174, 237, 239, 241, 244, 248], "arbitrari": [3, 29, 52, 53, 239, 240, 244], "nest": [3, 24, 28, 46, 49, 51, 52, 53, 178, 179, 180, 237, 240, 241, 244, 247], "structur": [3, 7, 31, 142, 178, 179, 180, 240, 241, 244, 245], "attribut": [3, 4, 28, 46, 49, 51, 52, 53, 83, 92, 146, 244], "batch_siz": [3, 8, 12, 13, 15, 24, 30, 31, 32, 33, 38, 46, 48, 50, 55, 62, 63, 64, 67, 85, 93, 107, 108, 122, 136, 137, 138, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 197, 203, 212, 215, 217, 220, 222, 225, 239, 240, 241, 243, 244, 245, 247, 248], "togeth": [3, 12, 13, 15, 16, 17, 18, 19, 84, 136, 137, 138, 150, 239, 241], "expect": [3, 4, 7, 24, 28, 34, 46, 49, 50, 51, 52, 53, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 80, 83, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 98, 103, 142, 145, 148, 158, 159, 168, 169, 210, 234, 237, 239, 241, 244, 248], "live": [3, 12, 13, 15, 16, 18, 19, 28, 30, 31, 32, 33, 46, 49, 50, 51, 52, 53], "actual": [3, 4, 7, 16, 46, 49, 51, 52, 53, 209, 239, 240, 241, 244], "respons": [3, 8, 206, 248], "just": [3, 4, 197, 237, 239, 240, 241, 244, 247, 248], "retriev": [3, 30, 31, 32, 33, 46, 49, 51, 52, 53, 68, 80, 107, 108, 122, 146, 159, 168, 169, 178, 179, 180, 212, 215, 217, 220, 222, 225, 231, 237, 240, 241, 244, 248], "care": [3, 8, 46, 49, 51, 52, 53, 96, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155, 239, 241, 244], "map": [3, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 40, 46, 49, 51, 52, 53, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 80, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 98, 101, 125, 136, 137, 138, 145, 146, 148, 150, 151, 233, 239, 240, 241, 245], "see": [3, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 102, 109, 118, 120, 123, 132, 133, 145, 146, 203, 239, 240, 241, 244, 248], "below": [3, 7, 12, 13, 15, 16, 17, 18, 19, 28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 109, 118, 120, 132, 133, 145, 203, 240, 241, 244], "parametr": [3, 124, 146, 167, 172, 239, 241], "hardwar": 3, "input_spec": [3, 46, 50, 70, 71, 72, 80, 85, 90, 92, 96, 97, 98, 108, 122, 239, 241, 244, 248], "compositespec": [3, 46, 48, 49, 50, 51, 52, 53, 71, 85, 92, 93, 96, 108, 122, 135, 139, 141, 143, 148, 233, 239, 241, 244, 248], "output_spec": [3, 85, 96, 97, 244], "reward": [3, 12, 13, 15, 28, 34, 46, 49, 50, 51, 52, 53, 55, 62, 63, 64, 66, 70, 72, 85, 87, 88, 89, 90, 96, 97, 98, 99, 100, 101, 107, 108, 122, 150, 160, 161, 164, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 199, 200, 202, 204, 231, 237, 239, 240, 241, 243, 244, 245, 247, 248], "observation_spec": [3, 46, 50, 67, 68, 69, 70, 72, 73, 75, 77, 78, 80, 83, 86, 89, 90, 92, 93, 94, 95, 96, 97, 98, 108, 122, 210, 227, 239, 241, 243, 244, 248], "pair": [3, 28, 46, 49, 51, 52, 53, 93, 136, 146, 239, 240, 241, 243, 244, 248], "pointer": [3, 6, 47], "action_spec": [3, 12, 13, 14, 15, 17, 18, 19, 46, 49, 50, 51, 52, 53, 55, 62, 97, 130, 135, 137, 140, 143, 144, 151, 152, 227, 240, 241, 243, 244, 245, 247, 248], "reward_spec": [3, 46, 50, 66, 70, 72, 87, 88, 89, 96, 97, 98, 108, 122, 241, 244, 248], "done_spec": [3, 96, 97, 244, 248], "flag": [3, 8, 30, 31, 32, 33, 181, 182, 183, 184, 185, 186, 187, 244, 245], "importantli": [3, 146], "4": [3, 7, 12, 13, 15, 22, 25, 29, 50, 56, 57, 58, 61, 101, 108, 109, 110, 111, 116, 117, 119, 120, 122, 125, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 154, 188, 239, 240, 241, 244, 245, 246, 247, 248], "action_s": 3, "help": [3, 4, 28, 46, 49, 51, 52, 53, 234, 239, 240, 241], "prealloc": [3, 244], "tensor": [3, 8, 12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 62, 63, 64, 67, 68, 70, 71, 75, 78, 80, 83, 84, 85, 88, 93, 94, 95, 96, 97, 98, 100, 101, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 128, 131, 132, 133, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 152, 155, 156, 160, 161, 164, 165, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 212, 215, 217, 220, 222, 225, 237, 239, 240, 241, 243, 244, 245, 247, 248], "consist": [3, 28, 46, 49, 51, 52, 53, 109, 120, 239, 240, 241, 244, 245, 248], "With": [3, 237, 239, 248], "necessarili": 3, "requir": [3, 4, 7, 8, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 35, 36, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 120, 145, 147, 148, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 237, 239, 240, 241, 244, 248], "If": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 46, 47, 49, 50, 51, 52, 53, 68, 69, 71, 73, 75, 79, 80, 83, 84, 89, 90, 93, 96, 97, 100, 101, 107, 109, 119, 120, 139, 141, 142, 145, 146, 147, 148, 154, 155, 157, 164, 167, 172, 177, 178, 179, 180, 186, 187, 201, 203, 206, 208, 210, 212, 220, 222, 225, 227, 231, 234, 239, 240, 241, 243, 244, 247, 248], "present": [3, 28, 30, 37, 46, 49, 51, 52, 53, 73, 89, 90, 107, 110, 111, 112, 113, 117, 124, 142, 145, 146, 147, 148, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 231, 237, 239, 243, 247], "instanti": [3, 52, 53, 96, 239, 240, 244, 248], "0": [3, 4, 5, 6, 7, 8, 10, 11, 20, 26, 27, 28, 29, 30, 32, 37, 46, 49, 50, 51, 52, 53, 55, 62, 66, 68, 70, 71, 79, 80, 83, 93, 95, 97, 100, 101, 103, 108, 109, 110, 111, 113, 116, 118, 120, 122, 123, 124, 125, 129, 130, 131, 132, 133, 139, 141, 142, 145, 148, 155, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 197, 204, 206, 227, 231, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248], "stateless": [3, 96, 239, 244, 248], "set_se": [3, 12, 13, 15, 16, 46, 49, 50, 51, 52, 53, 55, 62, 80, 85, 97, 239, 244, 247, 248], "seed": [3, 12, 13, 15, 16, 46, 49, 50, 51, 52, 53, 56, 63, 64, 97, 103, 206, 239], "next": [3, 4, 8, 12, 13, 15, 24, 28, 30, 31, 32, 46, 47, 49, 50, 51, 52, 53, 55, 62, 63, 64, 78, 85, 101, 107, 108, 122, 130, 150, 161, 170, 177, 178, 179, 180, 200, 204, 239, 240, 243, 244, 245, 247, 248], "determinist": [3, 28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 116, 126, 130, 135, 141, 145, 146, 239, 240, 244, 248], "preced": [3, 119, 240], "without": [3, 7, 9, 28, 46, 49, 51, 52, 53, 137, 170, 177, 227, 234, 239, 240, 241, 244, 248], "risk": [3, 84], "overlap": 3, "consecut": [3, 142, 240, 248], "still": [3, 9, 92, 139, 168, 239, 240, 243, 244, 248], "reproduc": [3, 103, 241], "maximum": [3, 4, 12, 13, 15, 16, 17, 18, 19, 23, 28, 40, 41, 42, 46, 49, 51, 52, 53, 71, 87, 92, 94, 131, 132, 133, 143, 167, 172, 203, 239, 240, 241, 244, 247, 248], "max_step": [3, 12, 46, 49, 50, 51, 52, 53, 63, 64, 92, 240, 247, 248], "n": [3, 6, 7, 22, 25, 28, 29, 46, 49, 51, 52, 53, 67, 71, 75, 98, 122, 146, 158, 177, 203, 237, 239, 240, 248], "tensordictmodul": [3, 12, 13, 15, 16, 19, 122, 145, 147, 239, 240, 241, 243, 244, 245], "ani": [3, 5, 8, 24, 28, 30, 31, 32, 33, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 75, 83, 84, 97, 101, 103, 109, 120, 124, 145, 146, 147, 148, 169, 194, 206, 234, 239, 240, 241, 244, 247, 248], "compat": [3, 7, 11, 17, 18, 28, 43, 46, 49, 51, 52, 53, 60, 67, 101, 153, 174, 240, 247], "figur": [3, 239, 240, 241, 244, 248], "summar": [3, 244], "brief": [3, 241, 248], "popul": [3, 78, 93, 241, 244], "entri": [3, 12, 13, 15, 17, 18, 19, 28, 46, 49, 51, 52, 53, 69, 75, 78, 80, 83, 85, 92, 100, 107, 178, 179, 180, 239, 241, 244, 245], "deliveri": 3, "step_mdp": [3, 233, 239, 240, 244, 247, 248], "nasium": 3, "recent": [3, 7, 11, 239, 240, 247, 248], "shift": [3, 28, 155, 241], "termin": [3, 28, 147, 239, 240, 241, 244, 247], "trust": 3, "truncat": [3, 12, 13, 15, 17, 18, 19, 92, 133, 241, 248], "refer": [3, 7, 8, 28, 46, 49, 51, 52, 53, 97, 101, 108, 116, 122, 126, 127, 129, 130, 151, 158, 162, 163, 164, 165, 169, 178, 181, 182, 185, 215, 239, 240, 241, 247], "stepcount": [3, 12, 240, 241, 247], "chosen": [3, 93, 212, 220, 222, 225], "someth": [3, 28, 46, 49, 51, 52, 53, 234, 240, 241, 244, 248], "els": [3, 237, 239, 240, 241, 244, 245], "100": [3, 28, 46, 49, 51, 52, 53, 80, 198, 206, 227, 240, 241, 243, 244, 245, 247, 248], "truncated_kei": [3, 92], "assess": [3, 239], "split_trajectori": [3, 12, 13, 15, 16, 17, 18, 19, 233], "slice": [3, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36], "adjac": [3, 75], "reli": [3, 158, 239, 241, 244, 248], "traj_id": [3, 12, 13, 15, 21, 247], "junction": 3, "miss": [3, 4, 6, 7, 11, 24, 28, 46, 49, 51, 52, 53, 93, 97, 107, 147, 148, 234], "context": [3, 5, 8, 28, 46, 47, 49, 51, 52, 53, 93, 98, 123, 175, 176, 178, 181, 182, 185, 202, 239, 240, 241, 244, 245], "mark": 3, "through": [3, 4, 5, 8, 15, 17, 19, 52, 53, 84, 120, 146, 147, 148, 155, 239, 240, 241, 243, 244, 245, 248], "inittrack": 3, "our": [3, 7, 8, 17, 239, 240, 241, 243, 245, 247], "tutori": [3, 239, 240, 242, 243, 244, 245, 246, 247, 248], "inform": [3, 4, 12, 13, 15, 16, 17, 18, 19, 28, 46, 47, 49, 51, 52, 53, 109, 120, 237, 240, 241, 244], "design": [3, 12, 13, 28, 29, 46, 49, 51, 52, 53, 84, 97, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 239, 240, 241, 243, 244, 248], "scratch": [3, 8, 239, 240, 244], "better": [3, 8, 240, 241, 244], "featur": [3, 4, 12, 13, 15, 16, 17, 18, 19, 29, 46, 49, 51, 52, 53, 67, 75, 93, 98, 109, 116, 117, 120, 123, 124, 146, 178, 179, 180, 231, 239, 240, 241, 244, 248], "intens": [3, 8], "gym3": 3, "envpool": [3, 51], "interfac": [3, 120, 123, 239, 241, 244], "simultan": [3, 19, 52, 53, 244], "often": [3, 8, 166, 206, 240, 244, 248], "competit": 3, "advantag": [3, 8, 117, 158, 159, 168, 169, 171, 178, 179, 180, 181, 182, 183, 185, 186, 237, 239, 240, 241, 244, 248], "scale": [3, 4, 80, 88, 116, 118, 125, 129, 130, 132, 133, 136, 137, 138, 143, 146, 148, 204, 210, 212, 220, 222, 225, 231, 239, 240, 241, 247], "varieti": 3, "its": [3, 4, 5, 7, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 35, 36, 46, 49, 50, 51, 52, 53, 67, 96, 97, 101, 109, 139, 140, 141, 146, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 206, 227, 237, 239, 240, 241, 244, 245, 248], "own": [3, 12, 13, 16, 20, 28, 46, 49, 51, 52, 53, 240, 241, 244], "As": [3, 4, 46, 49, 51, 52, 53, 146, 239, 240, 241, 244, 245, 247, 248], "inherit": [3, 121, 237, 241], "serialenv": [3, 93, 233, 248], "enjoi": 3, "exact": 3, "Of": [3, 7, 234, 244, 248], "cours": [3, 4, 234, 241, 244, 248], "correspond": [3, 4, 12, 13, 15, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 46, 49, 50, 51, 52, 53, 83, 93, 97, 100, 101, 142, 146, 240, 241, 244, 245], "count": [3, 47, 92, 142, 202, 209, 239, 240, 241, 248], "def": [3, 11, 20, 28, 46, 47, 49, 50, 51, 52, 53, 108, 122, 149, 151, 154, 237, 239, 240, 243, 244, 247, 248], "make_env": [3, 64, 101, 213, 214, 239, 240, 248], "gymenv": [3, 5, 12, 13, 15, 16, 20, 47, 60, 70, 78, 80, 85, 93, 97, 101, 212, 215, 217, 220, 222, 225, 227, 233, 239, 240, 241, 245, 247, 248], "v1": [3, 12, 13, 15, 20, 47, 51, 78, 80, 85, 93, 174, 183, 184, 186, 187, 240, 244, 247, 248], "from_pixel": [3, 56, 57, 212, 220, 222, 225, 239, 240, 245, 247, 248], "9": [3, 7, 28, 101, 240, 241, 244, 245], "81": [3, 244], "must": [3, 7, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 40, 41, 42, 43, 46, 47, 49, 51, 52, 53, 76, 80, 93, 97, 98, 109, 120, 145, 146, 151, 152, 181, 182, 183, 184, 185, 186, 187, 197, 202, 203, 206, 208, 212, 215, 217, 220, 222, 225, 239, 240, 241, 243, 244, 247], "work": [3, 4, 8, 11, 28, 46, 49, 51, 52, 53, 68, 83, 101, 109, 120, 206, 234, 239, 240, 241, 243, 244, 245, 247, 248], "print": [3, 6, 7, 12, 13, 15, 20, 22, 24, 25, 28, 29, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 71, 72, 78, 80, 85, 93, 95, 101, 107, 109, 120, 125, 135, 136, 137, 138, 140, 141, 142, 144, 145, 148, 149, 151, 152, 154, 212, 215, 217, 220, 222, 225, 227, 237, 239, 240, 241, 243, 244, 245, 247, 248], "simpli": [3, 6, 73, 90, 239, 240, 241, 248], "b": [3, 7, 8, 21, 24, 123, 124, 178, 179, 180, 189, 240, 245], "c": [3, 6, 7, 24, 80, 212, 215, 217, 220, 222, 225, 240], "d": [3, 30, 37, 146, 247], "get": [3, 4, 6, 7, 8, 43, 47, 52, 53, 68, 71, 72, 80, 84, 95, 101, 135, 141, 146, 181, 182, 185, 193, 239, 240, 241, 244, 247, 248], "forc": [3, 6, 7, 17, 19, 240, 244], "reset_work": 3, "fals": [3, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 62, 63, 64, 68, 70, 75, 78, 79, 80, 83, 84, 85, 88, 93, 95, 97, 98, 100, 101, 103, 107, 108, 109, 110, 120, 122, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 174, 178, 179, 180, 183, 184, 186, 187, 199, 200, 202, 203, 204, 206, 212, 215, 217, 220, 222, 225, 231, 237, 239, 240, 241, 243, 244, 245, 247, 248], "field": [3, 12, 13, 15, 16, 24, 28, 46, 49, 50, 51, 52, 53, 55, 62, 63, 64, 85, 93, 97, 107, 108, 122, 136, 137, 138, 140, 142, 143, 144, 145, 148, 149, 151, 152, 210, 212, 215, 217, 220, 222, 225, 234, 240, 241, 243, 244, 245, 247, 248], "bool": [3, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 62, 63, 64, 68, 71, 75, 78, 79, 80, 83, 85, 88, 93, 95, 97, 98, 100, 101, 103, 107, 108, 109, 110, 111, 118, 120, 122, 123, 124, 132, 133, 139, 142, 145, 146, 147, 148, 153, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 174, 178, 179, 180, 183, 184, 186, 187, 188, 189, 199, 200, 202, 203, 204, 206, 212, 215, 217, 220, 222, 225, 231, 240, 241, 243, 244, 245, 247, 248], "500": [3, 206, 239, 244, 247, 248], "uint8": [3, 36, 95, 240, 245, 247, 248], "none": [3, 8, 11, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 46, 47, 49, 50, 51, 52, 53, 63, 64, 66, 67, 68, 69, 70, 72, 75, 77, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 128, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 152, 153, 164, 165, 167, 171, 172, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 194, 195, 200, 201, 202, 203, 204, 206, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 237, 239, 240, 241, 244, 247, 248], "is_shar": [3, 12, 13, 15, 24, 50, 55, 62, 63, 64, 85, 93, 101, 107, 108, 122, 136, 137, 138, 140, 142, 143, 144, 145, 148, 149, 151, 152, 212, 215, 217, 220, 222, 225, 240, 241, 243, 244, 245, 247, 248], "note": [3, 4, 12, 13, 15, 16, 17, 18, 19, 28, 46, 49, 51, 52, 53, 101, 142, 146, 239, 240, 243, 248], "launch": [3, 17, 18, 19, 20], "quit": [3, 239, 240, 241, 248], "time": [3, 4, 7, 8, 12, 13, 15, 16, 17, 19, 28, 46, 47, 49, 51, 52, 53, 68, 84, 93, 94, 101, 107, 116, 119, 142, 164, 170, 178, 179, 180, 206, 240, 241, 243, 244, 245, 247, 248], "mani": [3, 4, 159, 168, 169, 170, 240, 241, 244, 248], "start": [3, 4, 5, 12, 47, 107, 201, 240, 244, 248], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 28, 46, 49, 51, 52, 53, 93, 101, 147, 148, 239, 241, 244, 248], "onc": [3, 7, 12, 13, 15, 16, 17, 18, 19, 28, 46, 49, 51, 52, 53, 97, 139, 141, 204, 237, 239, 240, 241, 244, 248], "great": [3, 7, 8, 247], "speedup": [3, 8, 248], "precis": [3, 95, 107, 239, 241], "anoth": [3, 8, 46, 49, 51, 52, 53, 96, 120, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 239, 241, 243, 244, 248], "thing": [3, 7, 8, 234, 239, 241, 248], "misspecifi": 3, "caus": [3, 7, 8, 84], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 37, 46, 47, 49, 51, 52, 53, 83, 94, 100, 101, 107, 145, 154, 160, 178, 179, 180, 206, 208, 231, 234, 239, 240, 241, 243, 244, 245, 247, 248], "rais": [3, 12, 13, 15, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 49, 51, 52, 53, 74, 97, 103, 154, 239, 240, 241, 247], "assert": [3, 6, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 49, 85, 101, 103, 125, 178, 179, 180, 197, 205, 239, 240, 243, 248], "mismatch": [3, 240], "mostli": [3, 16, 248], "purpos": [3, 7, 227, 239, 241, 245, 248], "want": [3, 6, 7, 8, 80, 239, 240, 241, 244, 245, 247, 248], "subprocess": [3, 47], "addit": [3, 4, 28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 139, 145, 157, 178], "multithread": [3, 30, 31, 32, 51], "multithreadedenv": [3, 233], "underneath": 3, "higher": [3, 4, 239, 240, 241, 248], "restrict": [3, 240, 245, 248], "flexibl": [3, 9, 51, 237, 239, 248], "cover": [3, 234, 239, 241, 244, 247], "popular": 3, "atari": [3, 4, 67, 248], "classic": [3, 50, 240], "benchmark_batched_env": 3, "py": [3, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248], "case": [3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 24, 28, 30, 32, 37, 46, 49, 51, 52, 53, 93, 97, 103, 120, 145, 146, 148, 157, 197, 208, 229, 230, 231, 237, 239, 241, 244, 248], "raw": [3, 4, 118, 132, 133, 240, 244], "treat": 3, "logic": 3, "torchvis": [3, 83, 100, 247, 248], "transformedenv": [3, 12, 47, 70, 75, 78, 79, 80, 85, 93, 96, 101, 212, 215, 217, 220, 222, 225, 239, 240, 241, 243, 244, 245, 247, 248], "primit": [3, 4, 239, 240], "built": [3, 5, 7, 223, 227, 228, 231, 240, 241, 248], "base_env": [3, 71, 72, 93, 239, 240, 241, 245, 247, 248], "totensorimag": [3, 217, 240, 247, 248], "in_kei": [3, 12, 13, 15, 50, 66, 67, 68, 69, 71, 72, 75, 77, 80, 81, 83, 85, 86, 87, 88, 89, 94, 95, 96, 100, 101, 108, 122, 135, 136, 137, 138, 143, 145, 146, 148, 149, 153, 154, 160, 161, 178, 179, 180, 188, 189, 222, 225, 227, 239, 240, 241, 243, 244, 245, 247, 248], "resiz": [3, 240, 248], "64": [3, 110, 111, 117, 239, 240, 241, 243, 244, 245, 247, 248], "By": [3, 29, 49, 146, 202, 231, 239, 240, 245, 248], "now": [3, 7, 239, 241, 243, 245, 248], "appar": [3, 199], "bring": [3, 241, 248], "signific": [3, 5, 8, 241, 248], "kind": [3, 34, 107], "consult": 3, "interest": [3, 146, 241, 244, 248], "abov": [3, 7, 28, 46, 49, 51, 52, 53, 118, 132, 133, 157, 237, 239, 240, 241, 244, 248], "resize_par": 3, "out_kei": [3, 12, 13, 15, 50, 66, 67, 68, 69, 75, 77, 80, 81, 83, 85, 86, 87, 89, 94, 95, 96, 100, 108, 122, 135, 136, 137, 138, 143, 145, 146, 148, 149, 151, 152, 153, 154, 178, 179, 180, 202, 227, 239, 241, 243, 244, 245, 247, 248], "easi": [3, 5, 239, 240, 241, 245, 248], "root": [3, 24, 107, 118, 132, 133, 244, 248], "graph": [3, 4, 8, 175, 176, 244], "inv": [3, 71, 244], "appli": [3, 4, 28, 30, 31, 32, 33, 46, 49, 51, 52, 53, 67, 68, 70, 71, 73, 74, 75, 76, 78, 82, 84, 85, 89, 90, 92, 93, 94, 96, 97, 99, 101, 132, 178, 201, 237, 239, 240, 241, 244, 247, 248], "revers": 3, "order": [3, 15, 28, 29, 30, 31, 32, 33, 46, 49, 51, 52, 53, 97, 145, 147, 148], "chain": [3, 30, 31, 32, 70, 71, 109, 148, 248], "taken": [3, 46, 49, 51, 52, 53, 239, 240, 241, 244], "includ": [3, 4, 7, 9, 28, 40, 41, 42, 43, 46, 49, 50, 51, 52, 53, 97, 101, 209, 237, 239, 240, 241, 244, 248], "invers": [3, 4, 80, 156, 167, 244], "in_keys_inv": [3, 72, 80, 81, 85, 96, 239, 243, 244, 248], "append_transform": [3, 30, 31, 32, 33, 83, 93, 239, 244, 247, 248], "doubletofloat": [3, 212, 215, 220, 222, 225, 239, 241, 243], "float32": [3, 12, 13, 15, 24, 30, 34, 37, 50, 55, 62, 63, 64, 72, 80, 85, 93, 95, 107, 108, 122, 136, 137, 138, 140, 142, 143, 144, 145, 148, 149, 151, 152, 212, 215, 217, 220, 222, 225, 240, 241, 243, 244, 245, 247, 248], "float64": [3, 28, 46, 49, 51, 52, 53, 63, 64, 70, 83, 93, 97, 100, 145, 243, 248], "append": [3, 8, 30, 31, 32, 33, 47, 93, 239, 240, 241, 244, 245, 247], "regist": [3, 28, 29, 46, 49, 51, 52, 53, 97, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155, 237, 241], "manipul": [3, 4, 8, 83, 248], "keep": [3, 4, 7, 8, 13, 80, 83, 100, 101, 107, 142, 199, 206, 239, 240, 241, 244, 247, 248], "mind": 3, "go": [3, 7, 84, 239, 240, 241, 243, 244, 245, 247, 248], "what": [3, 8, 34, 46, 49, 51, 52, 53, 93, 107, 234, 240, 241, 244, 245, 247, 248], "third_transform": 3, "would": [3, 28, 46, 49, 51, 52, 53, 120, 237, 240, 241, 244, 248], "replac": [3, 6, 7, 28, 71, 107], "unexpect": [3, 28, 46, 49, 51, 52, 53, 97, 239, 248], "behviour": 3, "fortun": 3, "eras": [3, 46, 49, 51, 52, 53], "ident": [3, 12, 13, 15, 28, 52, 53, 229, 230, 239, 240], "alreadi": [3, 8, 28, 46, 49, 51, 52, 53, 146, 239, 240, 241], "place": [3, 12, 13, 15, 16, 24, 28, 46, 47, 49, 51, 52, 53, 70, 83, 93, 97, 100, 101, 145, 203, 208, 209, 240, 241, 244], "chang": [3, 5, 7, 28, 40, 41, 42, 43, 46, 49, 51, 52, 53, 85, 96, 97, 101, 239, 241, 244, 245, 248], "happen": [3, 139, 240, 245, 248], "catfram": [3, 240], "hold": [3, 175, 176, 244], "about": [3, 5, 7, 17, 18, 19, 239, 240, 241, 244, 247, 248], "notic": [3, 241, 244], "loss": [3, 8, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 201, 206, 211, 216, 218, 219, 221, 222, 224, 227, 237, 239, 240, 244, 247], "parenthood": 3, "reason": [3, 4, 8, 28, 46, 49, 51, 52, 53, 83, 239, 240, 241], "henc": [3, 84, 239, 241, 244], "composit": [3, 24, 46, 49, 51, 52, 53, 241, 244], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 244], "log": [3, 4, 8, 114, 128, 133, 146, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 199, 200, 202, 206, 227, 237, 240, 241, 244, 247], "reveal": 4, "bug": [4, 247], "curv": 4, "won": [4, 28, 46, 47, 49, 51, 52, 53, 83, 100, 206, 231, 239, 240, 241], "tell": [4, 7], "exploit": 4, "video": [4, 189, 202, 231, 240], "game": [4, 5], "cannot": [4, 7, 20, 24, 84, 240, 241, 244], "cv": 4, "act": 4, "flip": 4, "imag": [4, 7, 56, 69, 83, 95, 100, 120, 239, 240, 245, 248], "correspondingli": 4, "relat": [4, 10, 75, 240, 244], "prescript": 4, "tune": [4, 245], "coeffici": 4, "bonu": [4, 159, 168, 169], "beta": [4, 30, 32, 37, 167, 168, 239, 240, 247], "altern": [4, 25, 51, 157, 239, 240, 241], "reduc": [4, 6, 25, 240, 241], "downstream": [4, 239], "issu": [4, 5, 8, 84, 145, 146, 234, 247], "formul": 4, "ob": [4, 8, 24, 72, 80, 95, 107, 149, 178, 179, 180, 239, 240, 243, 244, 247, 248], "rate": [4, 101, 177, 239, 240, 241], "gradient": [4, 28, 46, 49, 51, 52, 53, 97, 118, 124, 132, 133, 158, 171, 177, 178, 179, 180, 206, 239, 241, 244], "norm": [4, 8, 206, 240, 241, 244], "easier": [4, 239], "behavior": [4, 28, 46, 49, 51, 52, 53, 97, 167, 241], "local": [4, 7, 10, 15, 28, 46, 49, 51, 52, 53, 97, 194, 247], "optima": 4, "sens": [4, 244], "product": [4, 9, 229, 230], "sum": [4, 27, 29, 49, 164, 177, 239, 240, 241, 244, 248], "track": [4, 12, 13, 15, 16, 17, 18, 19, 89, 101, 142, 194, 199, 239, 240, 244], "stat": [4, 80, 210, 231, 241], "w": [4, 69, 86, 95, 142, 189, 240], "r": [4, 28, 80, 146, 157, 177, 240, 244, 248], "yield": [4, 15, 28, 46, 49, 51, 52, 53], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 12, 13, 160, 161, 241], "futur": [4, 28, 46, 49, 51, 52, 53, 83, 97, 100, 120, 234, 247], "past": [4, 240], "becom": [4, 239, 248], "between": [4, 5, 12, 13, 15, 16, 28, 46, 49, 51, 52, 53, 71, 79, 87, 95, 97, 103, 109, 120, 146, 164, 165, 168, 174, 178, 202, 206, 239, 240, 248], "spars": 4, "ineffici": 4, "interact": [4, 5, 7, 8, 12, 13, 15, 17, 18, 19, 146, 241, 244, 248], "ad": [4, 12, 13, 15, 28, 30, 31, 32, 33, 37, 46, 49, 51, 52, 53, 89, 97, 123, 124, 142, 159, 168, 169, 239, 248], "intermedi": [4, 245], "instrument": 4, "greatli": [4, 240], "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 239], "discov": 4, "score": 4, "undesir": 4, "though": [4, 120, 241], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 49, 51, 52, 53, 68, 71, 80, 107, 108, 119, 141, 142, 155, 178, 179, 180, 247], "subtask": 4, "hierarch": [4, 247], "framework": [4, 9, 20, 50, 247, 248], "individu": [4, 17, 18, 19, 28, 46, 49, 51, 52, 53, 239], "select": [4, 30, 31, 32, 33, 67, 68, 70, 73, 74, 75, 76, 78, 79, 82, 84, 85, 89, 90, 92, 93, 94, 96, 99, 101, 108, 205, 239, 240], "fall": 4, "section": 4, "explicit": [4, 11, 119, 240], "mechan": [4, 28, 46, 49, 51, 52, 53, 97, 244], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 46, 49, 51, 52, 53, 167, 241], "addition": 4, "per": [4, 12, 13, 15, 16, 17, 18, 19, 52, 116, 206, 229, 230, 239, 240, 241, 247], "timestep": [4, 181, 182, 183, 184, 185, 186, 187, 240], "realli": 4, "larg": [4, 25, 241], "target": [4, 8, 28, 46, 47, 49, 51, 52, 53, 96, 145, 146, 160, 161, 162, 165, 166, 168, 170, 172, 173, 177, 178, 179, 180, 209, 226, 227, 237, 239, 244], "huge": 4, "std": [4, 80, 101, 125, 139, 248], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 242, 243, 245, 246], "initi": [4, 7, 12, 13, 15, 16, 17, 18, 19, 28, 46, 49, 51, 52, 53, 80, 83, 93, 96, 97, 102, 108, 122, 123, 124, 139, 141, 142, 168, 170, 172, 212, 215, 217, 220, 222, 225, 231, 240, 244, 248], "estim": [4, 136, 137, 138, 158, 159, 168, 169, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 239, 240, 241, 243, 244, 245, 247, 248], "encount": [4, 52, 53, 234, 240, 244], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 239, 240, 241, 248], "bonus": 4, "denser": 4, "prior": [4, 130, 164], "freshli": 4, "proper": [4, 6, 7, 240, 241], "doesn": [4, 11, 51], "drop": [4, 107], "meant": [4, 50], "encourag": [4, 240], "measur": [4, 240, 241], "novelti": 4, "revisit": 4, "previous": [4, 241, 248], "diminish": 4, "decreas": 4, "ideal": [4, 80, 239, 244], "down": [4, 12, 13, 15, 16, 240], "gone": [4, 5], "anyth": 4, "try": [4, 7, 8, 154, 239, 240, 241, 244, 247, 248], "distil": 4, "add": [4, 6, 28, 30, 31, 32, 33, 44, 45, 46, 49, 51, 52, 53, 123, 158, 201, 239, 240, 241, 244, 247], "nois": [4, 102, 124, 134, 142, 170, 202, 231, 239], "exploratori": [4, 159, 168, 169], "could": [4, 6, 239, 240, 241, 245, 248], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 30, 32, 33, 37, 40, 41, 42, 43, 160, 161, 167, 170, 172, 237, 239, 240], "schedul": [4, 7, 202, 241, 244], "separ": [4, 8, 12, 13, 16, 17, 19, 21, 83, 100, 160, 167, 170, 172, 239, 240, 248], "divers": [4, 52, 53], "clone": [4, 8, 136, 137, 138, 145, 167, 212, 220, 222, 225, 233, 239, 240, 244, 247], "bootstrap": [4, 240], "noisi": [4, 123, 124, 134], "unstabl": [4, 118, 132, 133], "inher": 4, "stochast": [4, 116, 124, 126, 130, 167, 170, 172, 241], "enemi": 4, "variabl": [4, 7, 8, 25, 29, 122, 136, 137, 138, 170, 237], "pomdp": 4, "previou": [4, 10, 28, 130, 239, 241, 244, 248], "loos": [4, 240, 241], "nonexist": 4, "sure": [4, 7, 43, 231, 239, 241, 244, 247, 248], "architectur": [4, 240], "sequenc": [4, 12, 13, 15, 16, 24, 26, 27, 30, 31, 44, 45, 66, 67, 68, 69, 71, 72, 75, 77, 80, 81, 84, 86, 87, 88, 89, 94, 95, 96, 101, 109, 114, 120, 128, 135, 143, 146, 147, 148, 149, 188, 189, 201, 203, 205, 206, 212, 220, 222, 225, 240, 241, 243, 248], "rather": [4, 85, 239, 240, 241], "last": [4, 12, 13, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 75, 80, 84, 94, 109, 119, 120, 126, 139, 141, 239, 240, 241, 244, 245, 247, 248], "lstm": [4, 119, 125], "explicitli": [4, 239], "rel": [4, 93, 114, 131], "tend": 4, "stabl": [4, 9, 10, 239], "don": [4, 6, 7, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 46, 239, 240, 241, 247, 248], "compens": 4, "descent": [4, 124], "1000": [4, 101, 139, 141, 142, 146, 166, 239, 240, 241, 245], "know": [4, 139, 141, 170, 202, 239, 240, 241], "minimum": [4, 23, 87, 116, 125, 131, 132, 133, 143, 155, 157, 167, 172, 197, 239, 241, 244, 247, 248], "rang": [4, 8, 11, 25, 47, 101, 168, 237, 239, 240, 241, 244, 247], "manual": [4, 17, 19], "deviat": [4, 80, 101, 108, 116, 122, 123, 124, 139, 169, 239], "radic": 4, "begin": [4, 12, 13, 15, 17, 18, 19], "updat": [4, 8, 12, 13, 15, 16, 17, 18, 19, 28, 37, 46, 49, 50, 51, 52, 53, 71, 97, 99, 101, 108, 122, 142, 145, 146, 158, 166, 169, 173, 178, 179, 180, 202, 206, 208, 213, 214, 226, 227, 237, 239, 240, 241, 244, 247, 248], "stabil": [4, 76], "stage": [4, 244], "never": 4, "prevent": [4, 118, 132, 133, 168, 169, 204, 239], "solv": [4, 10, 234, 239, 240, 241, 244], "entir": [4, 240, 241, 244], "submit": [4, 234, 247], "suffici": [4, 239, 240], "recommend": [4, 7], "system": [4, 5, 241, 244], "adequ": [4, 103, 241], "infeas": 4, "allevi": 4, "prune": 4, "develop": [4, 7, 239, 247], "filter": [4, 239], "fire": [4, 28, 46, 49, 51, 52, 53], "certain": [4, 17, 19, 28, 46, 49, 51, 52, 53, 76, 92, 97, 168, 239, 240, 241, 248], "illeg": 4, "chess": 4, "combin": [4, 96, 240], "grasp": 4, "releas": [4, 7, 10, 28, 46, 49, 51, 52, 53, 97, 247], "top": [4, 108, 122], "p": [4, 47], "wherein": 4, "cumul": [4, 89, 108, 241], "probabl": [4, 8, 114, 128, 133, 146, 240, 247], "q": [4, 110, 111, 112, 113, 115, 117, 151, 152, 160, 161, 162, 166, 167, 170, 172, 222, 225], "flow": [4, 239, 241, 244], "directli": [4, 8, 50, 231, 241, 244], "reparameter": [4, 114, 128], "soft": [4, 166, 172, 173], "actor": [4, 108, 110, 112, 116, 122, 136, 137, 138, 140, 141, 142, 143, 144, 151, 152, 158, 159, 160, 163, 167, 168, 169, 170, 172, 212, 215, 217, 220, 222, 225, 233, 239, 240, 241, 245, 247], "critic": [4, 8, 136, 158, 159, 168, 169, 171, 172, 241], "clip": [4, 87, 159, 206, 241, 244], "oppos": 4, "incorrect": 4, "thought": 4, "bound": [4, 16, 23, 24, 28, 46, 49, 51, 52, 53, 101, 129, 130, 142, 145, 146, 240, 241, 248], "region": 4, "squash": [4, 247], "tanh": [4, 109, 118, 120, 131, 132, 133, 239, 241, 244, 245, 247], "correct": [4, 209, 240, 241], "prob": [4, 128, 241], "rememb": 4, "remap": 4, "origin": [4, 8, 12, 13, 15, 16, 71, 83, 97, 100, 145, 146, 166, 169, 222, 225, 243, 244, 248], "side": [4, 248], "real": [5, 146, 244], "world": [5, 50, 150, 164, 244, 248], "robot": [5, 7, 83, 100], "adopt": [5, 239, 248], "histor": 5, "wa": [5, 7, 46, 49, 51, 52, 53, 97, 166, 173, 240, 241, 243, 247], "ceas": 5, "maintain": [5, 9, 244], "fork": 5, "gymnasium": [5, 11, 240, 241, 244, 247], "farama": [5, 241, 244], "foundat": [5, 241], "document": [5, 7, 17, 18, 28, 46, 49, 51, 52, 53, 97, 247], "further": [5, 241], "detail": [5, 6, 7, 28, 46, 49, 51, 52, 53, 97, 151, 158, 162, 169, 215, 234, 243], "instal": [5, 10, 17, 18, 19, 206, 234, 241, 248], "usag": [5, 7, 167, 172, 239, 240, 241, 243, 244, 245, 247, 248], "known": [5, 7, 8, 239, 240], "bc": [5, 247], "break": [5, 12, 13, 15, 28, 46, 49, 51, 52, 53, 101, 239, 240, 247], "face": [5, 8, 9, 248], "modif": [5, 24, 28, 46, 49, 51, 52, 53, 75, 239, 241, 244], "against": [5, 7, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 49, 51, 52, 53, 103, 145, 146, 241], "13": [5, 10, 11, 241, 244, 245, 246], "howev": [5, 7, 28, 46, 49, 51, 52, 53, 89, 92, 97, 239, 240, 241, 248], "around": [5, 7, 16, 32, 33, 50, 146, 178, 248], "construct": [5, 28, 31, 46, 49, 51, 52, 53, 103, 130, 146, 206, 212, 220, 239, 241, 244, 248], "automat": [5, 46, 49, 51, 52, 53, 80, 135, 143, 239, 240, 241, 244, 247], "wrap": [5, 12, 13, 15, 16, 17, 18, 19, 28, 46, 49, 51, 52, 53, 103, 136, 137, 138, 150, 239, 240, 241, 248], "best": [5, 9, 240, 247], "gymwrapp": [5, 49, 233, 241, 247], "you": [5, 6, 7, 8, 10, 28, 46, 49, 51, 52, 53, 101, 234, 239, 240, 241, 243, 245, 247, 248], "feel": [5, 234, 247], "free": [5, 7, 158, 164, 169, 237, 241, 247], "gladli": 5, "instruct": [6, 7, 10, 20, 71, 240, 241], "prepar": [6, 241], "conda": [6, 7, 234], "assum": [6, 24, 29, 33, 49, 52, 53, 69, 75, 83, 84, 89, 93, 100, 119, 167, 172, 183, 184, 186, 187, 189, 239, 240, 241, 243, 244], "let": [6, 7, 28, 46, 49, 51, 52, 53, 202, 239, 240, 241, 243, 244, 245, 247, 248], "7": [6, 10, 25, 29, 108, 109, 119, 120, 122, 239, 241, 244, 245, 247], "cmake": 6, "14": [6, 11, 80, 241, 244, 245], "activ": [6, 7, 9, 109, 116, 120, 169, 247], "sim": 6, "bullet": 6, "physic": [6, 7, 237, 239, 244], "headless": [6, 7], "cluster": [6, 7, 8, 17, 234], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": 6, "y": [6, 7, 119, 154, 241], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": 6, "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 28, 46, 49, 51, 52, 53, 91, 248], "command": [6, 7, 10, 239, 241, 244, 248], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 233], "_has_habitat": 6, "_env": [6, 248], "available_env": [6, 54, 55, 56, 57, 58, 59, 61, 62, 248], "startswith": 6, "oserror": 6, "load": [6, 12, 13, 15, 16, 30, 31, 32, 57, 231, 237], "libllvmlit": 6, "solut": [6, 7, 9, 234, 237, 247], "ionstal": 6, "path": [6, 7, 28, 40, 46, 49, 51, 52, 53, 83, 100, 122, 206, 237], "env_nam": [6, 51, 54, 56, 58, 61, 239, 241, 248], "llvmlite": 6, "config": [6, 7, 83, 100, 210, 212, 213, 214, 215, 217, 220, 222, 223, 225, 228], "var": [6, 7, 28, 46, 49, 51, 52, 53, 97], "ld_preload": [6, 7], "python3": [6, 7, 10, 247], "8": [6, 7, 37, 55, 109, 110, 111, 117, 120, 136, 137, 138, 143, 145, 148, 167, 240, 241, 244, 245, 246, 247], "site": [6, 7], "bind": 6, "deactiv": [6, 7], "importerror": [6, 7, 10], "usr": [6, 7, 10, 247], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 28, 46, 49, 51, 52, 53, 97], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco": [6, 8, 234, 241], "debug": [6, 8, 234, 248], "link": [6, 7], "right": [6, 7, 119, 239, 240, 241, 244, 248], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": 7, "repositori": 7, "stand": [7, 136, 137, 138, 243, 244, 248], "joint": [7, 240], "dynam": [7, 167, 241, 244], "contact": 7, "engin": [7, 244], "facilit": [7, 82, 83, 100, 136, 137, 138, 239, 244], "biomechan": 7, "graphic": 7, "anim": 7, "area": 7, "demand": [7, 248], "fast": [7, 9, 55, 85, 170, 239, 240, 241], "accur": [7, 239, 244], "articul": 7, "acquir": [7, 239, 241], "deepmind": [7, 8, 9, 56, 57, 241], "access": [7, 8, 28, 46, 49, 51, 52, 53, 83, 231, 234, 244], "whomev": 7, "licenc": 7, "incorpor": [7, 239, 244], "relianc": 7, "obsolet": 7, "seri": [7, 8, 29, 44, 45, 53, 79, 96, 189, 240, 241, 248], "legaci": 7, "pro": [7, 234], "tip": [7, 234], "glfw": 7, "osmesa": 7, "egl": 7, "hand": [7, 239, 244], "advic": [7, 248], "sudo": [7, 234], "enabl": [7, 8, 142, 202, 241, 244], "apt": 7, "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 40, 41, 42, 43], "fact": [7, 8, 240, 241, 244, 245, 248], "indent": 7, "workflow": [7, 136, 137, 138], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "both": [7, 28, 46, 47, 49, 51, 52, 53, 85, 97, 109, 120, 136, 137, 138, 202, 239, 241, 244, 245, 248], "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 20, 28, 41, 46, 49, 51, 52, 53, 83, 100, 248], "binari": [7, 22, 29, 66, 151, 152], "setup": [7, 239], "mkdir": 7, "cd": 7, "tag": [7, 189, 194, 231], "earlier": [7, 239, 241], "roboti": 7, "u": [7, 10, 239, 241, 244, 245, 247, 248], "download": [7, 10, 83, 100, 239, 240, 241, 242, 243, 244, 245, 247, 248], "html": [7, 51, 240], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 49, 83, 100, 108, 203, 239, 240, 241], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 245], "bin": 7, "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "hard": [7, 166, 240, 248], "later": [7, 113, 146, 239, 241], "modifi": [7, 8, 28, 46, 49, 51, 52, 53, 70, 75, 83, 93, 96, 97, 100, 142, 145, 209, 212, 220, 222, 225, 239, 240, 241], "nvidia": 7, "older": [7, 11], "hack": 7, "line": [7, 28, 46, 49, 51, 52, 53, 239, 240, 247], "adatp": 7, "script": [7, 103, 212, 215, 217, 220, 222, 225, 227, 231, 237, 239, 240, 241, 243, 244, 245, 247, 248], "unnot": [7, 84], "until": [7, 241], "complet": [7, 9, 49, 234, 240, 241, 243], "mujoco_pi": 7, "trigger": 7, "pipelin": [7, 241], "problem": [7, 8, 15, 240, 241, 244, 248], "troubleshoot": 7, "gl": 7, "h": [7, 69, 86, 95, 122, 189, 240], "eglshim": 7, "10": [7, 20, 24, 47, 50, 63, 64, 95, 108, 119, 122, 141, 142, 170, 171, 172, 178, 179, 180, 197, 237, 239, 240, 241, 244, 246, 247, 248], "fatal": 7, "No": 7, "directori": [7, 40, 194, 237], "glu": 7, "38": [7, 241, 244], "disappear": [7, 240, 243], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "__init__": [7, 50, 108, 122, 149, 151, 154, 237, 239, 240, 244, 248], "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": 7, "runtimeerror": [7, 8, 28, 46, 49, 51, 52, 53, 97, 248], "job": [7, 17, 18, 19, 20], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 241, 244], "114": [7, 244], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 244], "offscreenopenglcontext": 7, "fail": [7, 103], "opengl": 7, "global": [7, 28, 46, 49, 51, 52, 53, 146, 237, 239], "cuda_visible_devic": 7, "id": [7, 21, 142, 170, 192, 222], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "read": [7, 16, 40, 41, 42, 43, 49, 67, 68, 70, 71, 73, 74, 75, 76, 78, 82, 84, 85, 89, 90, 92, 93, 94, 96, 99, 101, 128, 136, 137, 138, 145, 146, 148, 150, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 178, 179, 180, 189, 206, 212, 220, 222, 225, 239, 240, 241, 243, 244, 245, 248], "onscreen": 7, "101": [7, 244], "displai": [7, 206, 237, 240, 244], "correctli": [7, 28, 46, 49, 51, 52, 53], "loop": [8, 12, 13, 15, 16, 49, 107, 206, 237, 239, 243], "sketch": [8, 237], "_": [8, 47, 68, 71, 72, 80, 85, 95, 101, 145, 157, 178, 179, 180, 239, 240, 241, 244, 247], "n_training_step": 8, "datapoint": 8, "onlin": [8, 12, 16, 158, 169, 197, 231, 241], "n_data_per_train": 8, "no_grad": [8, 28, 46, 49, 51, 52, 53, 239, 240, 241], "replay_buff": [8, 37, 38, 39, 40, 41, 42, 43, 44, 45, 203, 227, 239, 240, 241], "extend": [8, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 44, 45, 203, 237, 239, 240, 241, 245, 247], "offlin": [8, 12, 13, 15, 16, 17, 18, 19, 103, 167, 237, 245, 247], "loss_fn": [8, 247], "backward": [8, 28, 46, 49, 51, 52, 53, 101, 239, 240, 241, 244], "zero_grad": [8, 28, 46, 49, 51, 52, 53, 237, 239, 240, 241, 244], "backpropag": [8, 158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 244], "decor": [8, 11], "differenti": [8, 178, 179, 180, 239, 244], "understand": [8, 239, 240], "denomin": 8, "artifact": 8, "numer": [8, 101, 118, 132, 133, 145, 146, 204, 241, 248], "misconcept": 8, "save": [8, 28, 46, 49, 51, 52, 53, 188, 206, 237, 240], "freed": 8, "appear": [8, 29, 244], "compuat": 8, "twice": [8, 167, 172], "fix": [8, 93, 172, 244, 248], "retain_graph": 8, "discuss": [8, 9], "inplac": [8, 28, 46, 49, 51, 52, 53, 239, 240], "accumul": 8, "onto": [8, 29, 139, 141, 145, 146, 240, 244], "exclud": [8, 73, 107, 239], "forward": [8, 28, 46, 49, 51, 52, 53, 67, 68, 70, 71, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 89, 90, 92, 93, 94, 96, 99, 101, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 129, 130, 139, 141, 142, 145, 146, 149, 151, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 178, 179, 180, 239, 240, 244, 247], "submodul": [8, 28, 46, 49, 51, 52, 53], "param": [8, 28, 46, 49, 50, 51, 52, 53, 85, 96, 114, 131, 143, 144, 145, 148, 149, 151, 152, 173, 176, 178, 179, 180, 215, 239, 240, 244, 245, 247], "grad": [8, 28, 46, 49, 51, 52, 53, 240, 241], "whose": [8, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 125, 145, 239], "strictli": [8, 28, 46, 49, 51, 52, 53, 97, 239, 241], "neg": [8, 12, 13, 15, 16, 17, 18, 19, 30, 32, 37, 67, 75, 84, 98, 163, 239, 241, 244], "ask": [8, 239, 241, 245, 248], "core": [8, 212, 215, 217, 220, 222, 225, 237, 247], "much": [8, 30, 32, 37, 168, 169, 240, 241, 244, 248], "render": [8, 202, 239, 240, 241], "upon": [8, 244], "factor": [8, 28, 118, 124, 132, 133, 142, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 239, 240, 248], "fit": [8, 11, 80, 237], "everi": [8, 16, 24, 28, 29, 43, 46, 49, 51, 52, 53, 101, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155, 206, 237, 239, 240, 241, 244], "bottlneck": 8, "affect": [8, 28, 46, 49, 51, 52, 53, 96, 97, 103], "brax": [8, 54, 55, 85, 248], "jax": [8, 11], "improperli": 8, "item": [8, 12, 74, 160, 161, 197, 237, 239, 240, 241, 244], "underli": [8, 244], "tedeiou": 8, "priorit": [8, 30, 32, 37, 160, 161, 167, 170, 172, 239, 240], "amount": [8, 142, 240], "isn": [8, 145], "contigu": [8, 241, 244, 247, 248], "costli": [8, 244], "concaten": [8, 26, 27, 67, 68, 80, 96, 120, 148, 239, 240, 244, 248], "constitut": [8, 240, 244], "plain": 8, "profil": 8, "indic": [8, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 44, 45, 46, 49, 51, 52, 53, 68, 92, 93, 109, 120, 142, 155, 210, 231, 234, 237, 239, 241, 244, 248], "fulli": [8, 28, 46, 49, 51, 52, 53, 240, 244], "frequent": 8, "techniqu": [8, 240], "program": [8, 167, 248], "functorch": [8, 10, 145, 148, 240, 247], "incl": 8, "suit": [8, 57, 241, 248], "mujoco_instal": 8, "valueerror": [8, 240], "bad": 8, "fds_to_keep": 8, "view": [8, 25, 28, 29, 46, 49, 51, 52, 53, 120, 151, 239, 240, 244, 247, 248], "expand": [8, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 145, 148, 239, 244, 247], "new_shap": 8, "content": [8, 12, 13, 15, 31, 51, 109, 120, 240, 241, 244, 247], "lost": 8, "permut": [8, 247, 248], "spin": [9, 248], "deep": [9, 67, 110, 111, 112, 113, 115, 142, 158, 166, 172, 173, 215, 239], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 80, 101, 239, 240, 241], "reddit": 9, "reagent": 9, "orient": [9, 248], "baselines3": 9, "tf": 9, "agent": [9, 124, 244], "bandit": 9, "tensorflow": 9, "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "simpl": [9, 28, 29, 46, 49, 51, 52, 53, 110, 146, 171, 178, 239, 240, 241, 248], "sequenti": [9, 28, 46, 49, 51, 52, 53, 147, 148, 241, 244, 245, 248], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 247], "grade": 9, "factori": 9, "throughput": [9, 239], "cherri": 9, "jaxrl": 9, "space": [9, 29, 34, 71, 127, 139, 141, 142, 145, 146, 148, 151, 152, 239, 240, 241, 244, 247, 248], "mbrl": [9, 50], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "dist": [10, 247], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 241], "notebook": [10, 239, 240, 241, 242, 243, 244, 245, 247, 248], "24": [10, 241, 244], "11": [10, 25, 29, 47, 95, 108, 122, 241, 244], "2022": [10, 247], "12": [10, 241, 244], "pip": [10, 247, 248], "pip3": [10, 241], "extra": [10, 28, 46, 49, 51, 52, 53, 101, 107, 240, 241], "url": 10, "org": [10, 30, 37, 67, 83, 110, 111, 112, 113, 116, 117, 122, 124, 126, 127, 129, 130, 142, 151, 158, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 178, 181, 182, 185, 212, 215, 220, 225, 239, 240, 245], "whl": 10, "latest": [10, 51, 203, 241, 244, 247], "There": [10, 237, 240, 241, 244, 248], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": 11, "str": [11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 40, 46, 48, 49, 51, 52, 53, 56, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 100, 101, 104, 106, 108, 109, 110, 111, 112, 113, 117, 119, 120, 121, 122, 123, 124, 125, 135, 139, 140, 141, 142, 143, 145, 146, 149, 151, 152, 153, 157, 158, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 174, 177, 178, 179, 180, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 210, 212, 215, 220, 222, 223, 225, 231, 241], "from_vers": 11, "to_vers": 11, "intersect": 11, "eg": [11, 40, 41, 42, 43, 71], "v": [11, 101, 119, 167, 172, 240, 247], "longer": [11, 240], "fun": [11, 241], "self": [11, 28, 46, 49, 50, 51, 52, 53, 70, 83, 93, 97, 100, 108, 122, 139, 141, 145, 149, 151, 154, 237, 244, 247], "x": [11, 21, 24, 28, 95, 109, 115, 117, 119, 120, 122, 151, 154, 155, 157, 181, 182, 183, 184, 185, 186, 187, 189, 206, 240, 241, 244, 247], "27": [11, 241, 244], "create_env_fn": [12, 13, 15, 16, 17, 18, 19, 47, 52, 53, 239, 247], "callabl": [12, 13, 15, 16, 17, 18, 19, 28, 30, 31, 32, 46, 47, 49, 50, 51, 52, 53, 157, 213, 214, 229, 230, 231], "tensordictbas": [12, 13, 15, 16, 17, 18, 19, 21, 24, 28, 32, 33, 46, 48, 49, 51, 52, 53, 67, 68, 70, 73, 74, 75, 78, 79, 82, 84, 85, 89, 90, 92, 93, 94, 96, 99, 101, 107, 108, 121, 122, 139, 141, 142, 145, 146, 158, 159, 160, 161, 162, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 206, 244], "int": [12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 56, 67, 68, 69, 70, 71, 75, 76, 79, 80, 83, 84, 86, 91, 92, 94, 97, 98, 100, 103, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 129, 130, 131, 132, 139, 141, 142, 144, 145, 146, 151, 152, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 172, 188, 189, 197, 198, 199, 202, 203, 206, 208, 212, 215, 220, 222, 223, 225, 229, 230, 231, 244], "200": [12, 13, 15, 16, 28, 46, 49, 51, 52, 53, 63, 64, 110, 111, 116, 129, 130, 244], "total_fram": [12, 13, 15, 16, 17, 18, 19, 206, 209, 227, 237, 239, 240, 241, 247], "create_env_kwarg": [12, 13, 15, 16, 47, 51, 52, 53, 239], "dict": [12, 13, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 46, 47, 49, 51, 52, 53, 93, 97, 101, 109, 110, 111, 112, 113, 117, 119, 120, 146, 193, 194, 202, 213, 214, 215, 222, 225, 229, 230, 231, 241, 248], "postproc": [12, 13, 15, 16, 17, 18, 19, 239, 240], "given": [12, 13, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 49, 50, 51, 52, 53, 70, 71, 80, 83, 93, 97, 100, 107, 108, 116, 122, 142, 145, 146, 147, 148, 151, 152, 157, 160, 161, 177, 178, 179, 180, 198, 202, 227, 237, 239, 240, 241, 244, 248], "datacollector": [12, 13, 15, 16, 146, 241], "recept": 12, "safe": [12, 13, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 139, 142, 145, 146, 153, 239, 247], "env_mak": [12, 13, 15, 227, 248], "lambda": [12, 13, 15, 16, 20, 47, 163, 165, 180, 183, 184, 186, 187, 227, 247, 248], "50": [12, 13, 15, 241, 244], "linear": [12, 13, 15, 28, 46, 49, 50, 51, 52, 53, 70, 83, 93, 97, 100, 108, 109, 120, 122, 123, 124, 125, 129, 130, 135, 136, 137, 138, 141, 142, 143, 144, 145, 148, 149, 151, 152, 154, 178, 179, 180, 227, 239, 240, 243, 245, 247], "2000": [12, 13, 15, 241], "enumer": [12, 13, 15, 28, 46, 49, 51, 52, 53, 239, 240, 241, 247], "step_count": [12, 13, 15, 92, 240, 241, 247], "int64": [12, 13, 15, 22, 25, 26, 27, 29, 140, 142, 144, 151, 152, 217, 240, 241, 244, 247, 248], "shutdown": [12, 13, 15, 16, 239, 240, 247], "del": [12, 13, 15, 239, 240, 241, 243, 247, 248], "randompolici": [12, 13, 15, 17, 18, 19, 20, 233], "total": [12, 13, 15, 16, 17, 18, 19, 22, 26, 27, 29, 49, 159, 168, 169, 197, 199, 202, 206, 209, 210, 239, 240, 241, 243, 244, 245, 246, 247, 248], "lifespan": [12, 13, 15, 17, 18, 19], "divis": [12, 13, 15, 17, 18, 19, 240], "endless": [12, 13, 15, 17, 18, 19], "accommod": [12, 13, 15, 16], "kept": [12, 13, 15, 16, 52, 53, 71, 96, 103, 107, 118, 132, 133], "long": [12, 13, 15, 16, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 71, 240], "dictionari": [12, 13, 15, 16, 17, 18, 19, 24, 28, 46, 49, 51, 52, 53, 93, 97, 146, 229, 230, 231, 237, 239, 241, 244, 248], "span": [12, 13, 15, 16, 17, 18, 19], "unless": [12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 49, 51, 52, 53, 241], "n_step": [12, 13, 15, 16, 17, 18, 19, 28, 142, 239, 241], "independ": [12, 13, 15, 16, 17, 18, 19, 96, 98, 167, 172, 237, 239, 240, 247], "ignor": [12, 13, 15, 16, 17, 18, 19, 28, 46, 49, 51, 52, 53, 71, 73, 90, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155, 248], "mainli": [12, 13, 15, 16, 17, 18, 19, 244], "post": [12, 13, 15, 17, 18, 19, 28, 46, 49, 51, 52, 53, 239, 240], "multistep": [12, 13, 15, 17, 18, 19, 233, 239, 240], "accord": [12, 13, 15, 16, 17, 18, 19, 80, 88, 118, 123, 129, 132, 133, 244], "return_same_td": [12, 13, 15], "cautious": [12, 13, 15, 169], "whole": [12, 13, 15, 24, 28, 46, 49, 51, 52, 53, 97, 197, 240, 241], "boolm": [12, 13], "update_policy_weight_": [12, 13], "sync": [12, 13, 17, 18, 19, 208, 227, 237, 239, 247], "async": [12, 13, 17, 18, 19, 239, 247], "load_state_dict": [12, 13, 15, 16, 28, 46, 49, 51, 52, 53, 97, 101, 237, 239], "state_dict": [12, 13, 15, 16, 28, 46, 49, 51, 52, 53, 97, 101, 231, 237, 239, 240, 248], "ordereddict": [12, 13, 15, 16, 28, 46, 49, 51, 52, 53, 97, 101, 240], "form": [12, 13, 16, 28, 30, 31, 32, 46, 49, 51, 52, 53, 101, 157, 159, 168, 169, 206], "worker0": [12, 13, 16], "state_dict0": [12, 13, 16], "worker1": [12, 13, 16], "state_dict1": [12, 13, 16], "reset_idx": [12, 13, 16], "static_se": [12, 13, 15, 16, 46, 49, 51, 52, 53, 97], "integ": [12, 13, 15, 16, 26, 27, 28, 29, 36, 43, 46, 49, 51, 52, 53, 76, 80, 92, 109, 120], "increment": [12, 13, 15, 16, 46, 49, 51, 52, 53, 92, 168], "env_fn": [12, 13, 15, 16, 47, 229, 230], "v0": [12, 13, 16, 49, 58, 59, 61, 62, 70, 97, 101, 227], "env_fn_parallel": [12, 13, 15, 16], "6": [12, 13, 15, 16, 62, 80, 109, 114, 119, 120, 131, 149, 212, 215, 217, 220, 222, 225, 240, 241, 244, 245, 246, 247, 248], "out_se": [12, 13, 15, 16, 248], "shut": [12, 13, 15, 16, 240], "irrevers": [12, 13, 16], "policy_weight": [12, 13, 15, 16, 18, 19], "udpdat": [12, 13, 15, 16, 18, 19], "arg": [13, 24, 28, 33, 40, 41, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 83, 91, 97, 98, 99, 100, 109, 120, 135, 136, 140, 144, 196, 199, 203, 206, 231, 239, 240, 247], "kwarg": [13, 15, 16, 24, 28, 40, 41, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 83, 91, 93, 97, 98, 99, 100, 109, 110, 111, 112, 113, 117, 118, 120, 121, 128, 131, 133, 135, 136, 140, 143, 144, 146, 159, 168, 177, 189, 193, 194, 196, 199, 206, 212, 213, 214, 215, 220, 222, 225, 228, 229, 230, 239, 240, 241, 247], "envcreat": [15, 20, 227, 228, 231, 233, 239, 240, 247, 248], "chunk": 15, "policy_state_dict": 15, "env_state_dict": 15, "close": [15, 16, 49, 51, 159, 168, 169, 239, 243, 244, 247], "pin_memori": [16, 30, 31, 32, 52, 53, 82, 239, 247], "paradigm": 16, "regular": [16, 145, 146, 152, 162, 208, 237, 239, 248], "prefer": [16, 19, 84, 90, 241], "mere": 16, "greater": [16, 239, 240, 247], "signal": [16, 92, 239, 241], "sent": [16, 40, 41, 101], "server": 16, "length": [16, 19, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 52, 53, 84, 108, 109, 110, 112, 115, 120, 122, 145, 197, 203, 239, 240, 241, 244, 248], "postprocessor": 16, "format": [16, 27, 28, 29, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145, 240, 248], "collector_class": [17, 18, 19], "collector_kwarg": [17, 18, 19], "num_workers_per_collector": [17, 18, 19], "slurm_kwarg": [17, 18, 19], "update_after_each_batch": [17, 19], "max_weight_update_interv": [17, 18, 19], "tcp_port": [17, 18, 19, 20], "deriv": [17, 18, 19, 206], "string": [17, 18, 19, 28, 46, 49, 51, 52, 53, 83, 100, 146, 157, 188, 205, 212, 220, 222, 225, 241], "respect": [17, 18, 19, 28, 46, 49, 51, 52, 53, 66, 70, 83, 84, 93, 97, 100, 130, 145, 149, 201, 241], "copi": [17, 18, 19, 28, 46, 49, 51, 52, 53, 85, 97, 107, 239, 240], "subnod": [17, 18, 19], "readi": [17, 19, 234, 241, 243], "serv": [17, 19, 60, 248], "fashion": [17, 19], "executor": [17, 18, 19], "distributed_back": [17, 18], "ucc": [17, 18], "overwritten": [17, 19, 46, 49, 51, 52, 53, 75], "seen": [17, 19, 240], "turn": [17, 19, 77, 98, 202, 239, 240, 244, 245], "mp": [17, 18, 19, 47, 101], "submitit_delai": [17, 20], "former": [17, 18, 19, 46, 49, 51, 52, 53, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155], "whilst": [17, 18, 19], "latter": [17, 18, 19, 28, 46, 49, 51, 52, 53, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155, 229, 230], "homonym": [17, 18, 19, 244], "visit": [17, 18, 19], "facebookincub": [17, 18, 19], "tcp": [17, 18, 19, 20], "port": [17, 18, 19, 20], "10003": [17, 18, 19, 20], "worker_rank": [17, 18], "update_interv": 18, "frequenc": [18, 239], "visible_devic": 19, "tensorpipe_opt": 19, "experiment": [19, 29, 146], "union": [19, 49, 109, 170], "tensorpiperpcbackendopt": 19, "num_job": 20, "tcpport": 20, "submitit_main_conf": 20, "slurm_cpus_per_task": 20, "32": [20, 24, 63, 64, 109, 110, 111, 117, 120, 126, 127, 239, 240, 241, 244, 245, 247, 248], "slurm_gpus_per_nod": 20, "slurm_partit": 20, "timeout_min": 20, "submitit_collection_conf": 20, "delai": 20, "jump": 20, "host": [20, 28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "wherea": [20, 71, 237, 239], "default_config": 20, "default_slurm_conf_main": 20, "default_slurm_conf": 20, "boundedtensorspec": [20, 24, 136, 137, 138, 141, 142, 143, 233, 241, 244, 247, 248], "__name__": [20, 47, 240], "__main__": [20, 47], "rollout_tensordict": 21, "max": [21, 29, 32, 37, 71, 94, 131, 132, 133, 159, 170, 172, 239, 241], "durat": [21, 240], "discret": [22, 25, 26, 27, 29, 36, 71, 128, 151, 152, 162, 240, 248], "5": [22, 47, 51, 62, 63, 64, 108, 109, 116, 118, 119, 120, 122, 132, 133, 140, 144, 151, 152, 167, 168, 239, 240, 244, 245, 246, 247, 248], "assert_is_in": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36], "belong": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36], "otherwis": [22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 49, 51, 52, 53, 71, 80, 93, 97, 101, 118, 132, 133, 164, 172, 202, 203, 237, 239, 240, 241, 244, 248], "encod": [22, 23, 24, 25, 26, 27, 29, 31, 34, 35, 36, 71, 127, 128, 129, 140, 144, 151, 152, 157, 240, 241, 244], "val": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 240, 247], "ndarrai": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 49, 142], "np": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 49, 239, 244], "tupl": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 46, 49, 51, 52, 53, 80, 85, 110, 119, 120, 125, 160, 163, 178, 179, 180, 200, 204, 216, 218, 221, 224], "compli": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36], "current": [22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 46, 49, 51, 52, 53, 60, 84, 97, 104, 107, 116, 119, 130, 142, 151, 152, 192, 212, 220, 237, 240, 241, 244, 247, 248], "least": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36], "complient": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36], "singleton": [22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 109, 120], "tensor_to_index": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36], "is_in": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 248], "project": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 71, 139, 141, 142, 145, 146, 240, 247, 248], "back": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 145, 146, 239, 241, 244], "rand": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 50, 55, 62, 108, 122, 244, 247, 248], "uniform": [22, 23, 24, 25, 26, 27, 29, 30, 32, 34, 35, 36, 37], "unbound": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 93, 244], "to_numpi": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36], "transformed_in": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 96, 97, 125, 131, 231], "type_check": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36], "fill": [22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 93, 244, 245], "float": [23, 25, 28, 29, 30, 32, 35, 37, 46, 49, 51, 52, 53, 70, 72, 80, 83, 87, 88, 93, 95, 97, 100, 101, 114, 116, 118, 122, 123, 124, 129, 130, 131, 133, 139, 141, 142, 145, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 204, 239, 240, 248], "upper": 23, "unnam": 24, "effect": [24, 28, 46, 49, 51, 52, 53, 89, 97, 206, 240, 248], "pixels_spec": 24, "observation_vector_spec": 24, "33": [24, 28, 46, 49, 51, 52, 53, 109, 120, 241, 244, 246, 248], "composite_spec": 24, "observation_vector": [24, 68, 212, 215, 220, 222, 225, 239], "td": [24, 54, 55, 56, 57, 58, 59, 61, 62, 68, 71, 72, 78, 80, 95, 97, 101, 107, 108, 121, 122, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 179, 180, 183, 184, 186, 187, 188, 197, 205, 212, 215, 217, 220, 222, 225, 244, 247, 248], "within": [24, 28, 33, 46, 49, 51, 52, 53, 101, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155, 244, 247], "randn": [24, 80, 119, 125, 135, 136, 137, 138, 140, 143, 144, 145, 148, 149, 151, 152, 178, 179, 180, 205, 247, 248], "td_project": 24, "include_nest": 24, "leaves_onli": 24, "keysview": 24, "reflect": [24, 107, 209, 241], "immedi": [24, 28, 46, 49, 51, 52, 53, 177], "children": [24, 28, 46, 49, 51, 52, 53], "selected_kei": [24, 90, 239], "onehottensorspec": 25, "categor": [25, 27, 29, 128, 151, 152], "action_valu": [25, 29, 140, 144, 151, 152, 217, 240], "arang": [25, 29, 140, 151, 197], "argmax": [25, 140, 144, 151, 152], "dim": [25, 67, 68, 93, 98, 119, 231, 240, 244], "chosen_action_valu": [25, 29, 144, 217, 240], "outcom": [25, 29, 114, 131], "to_one_hot": [25, 26], "hot": [25, 26, 27, 29, 71, 128, 140, 144, 151, 152, 240], "to_one_hot_spec": [25, 26], "onehotdiscretetensorspec": [25, 140, 144, 151, 152, 233], "convert": [25, 26, 27, 28, 29, 46, 49, 51, 52, 53, 70, 72, 83, 93, 97, 100, 101, 145, 157, 240, 241, 244], "nvec": [26, 27], "cardin": [26, 27, 151, 152, 241], "ax": [26, 123, 124], "multionehotdiscretetensorspec": [26, 233], "use_regist": [27, 29], "to_categor": [27, 29], "to_categorical_spec": [27, 29], "multidiscretetensorspec": [27, 233], "gamma": [28, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 227, 239, 240, 241, 247], "sutton": 28, "1988": 28, "predict": [28, 116, 121, 122, 150, 162, 164, 165, 167, 172, 177, 240], "tempor": [28, 122, 179, 240], "44": [28, 241, 244], "discount": [28, 47, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 239, 240, 241], "ahead": [28, 248], "add_modul": [28, 46, 49, 51, 52, 53], "child": [28, 46, 49, 51, 52, 53], "fn": [28, 46, 49, 51, 52, 53, 125, 229, 230], "recurs": [28, 46, 49, 51, 52, 53], "init": [28, 46, 49, 51, 52, 53, 239, 240, 241], "init_weight": [28, 46, 49, 51, 52, 53], "m": [28, 46, 49, 51, 52, 53, 71, 146, 244], "fill_": [28, 46, 49, 51, 52, 53, 240, 248], "net": [28, 46, 49, 51, 52, 53, 119, 170, 222, 227, 240, 244, 245, 247], "in_featur": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 109, 110, 111, 112, 113, 119, 120, 123, 124, 136, 145, 247], "out_featur": [28, 46, 49, 50, 51, 52, 53, 70, 83, 93, 97, 100, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 122, 123, 124, 136, 140, 145, 239, 247], "bia": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 109, 116, 120, 123, 124, 125, 141, 142, 145, 155, 156, 157, 240, 241, 247], "requires_grad": [28, 46, 49, 51, 52, 53, 239], "bfloat16": [28, 46, 49, 51, 52, 53], "cast": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 101, 145, 212, 215, 217, 220, 222, 225, 248], "datatyp": [28, 46, 49, 51, 52, 53], "member": [28, 46, 49, 51, 52, 53], "xdoctest": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "skip": [28, 46, 49, 51, 52, 53, 76, 97, 103, 146, 188, 189, 199, 202, 241, 244], "buf": [28, 46, 49, 51, 52, 53], "20l": [28, 46, 49, 51, 52, 53], "1l": [28, 46, 49, 51, 52, 53], "5l": [28, 46, 49, 51, 52, 53], "associ": [28, 46, 49, 51, 52, 53, 129, 231], "doubl": [28, 30, 32, 35, 46, 49, 51, 52, 53, 70, 72, 83, 93, 95, 97, 100, 145, 161, 162, 166, 170, 173, 239, 240, 241, 248], "eval": [28, 46, 49, 51, 52, 53, 97, 101, 239, 240, 241], "evalu": [28, 46, 49, 51, 52, 53, 97, 114, 128, 133, 170, 213, 214, 240, 241], "particular": [28, 46, 49, 51, 52, 53, 97, 237, 240, 243], "dropout": [28, 46, 49, 51, 52, 53, 97], "batchnorm": [28, 46, 49, 51, 52, 53, 97], "disabl": [28, 46, 49, 51, 52, 53, 97, 118, 132, 133, 239], "comparison": [28, 46, 49, 51, 52, 53, 97], "similar": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 99, 100, 101, 145, 146, 239, 240, 241, 244, 248], "confus": [28, 46, 49, 51, 52, 53, 97], "extra_repr": [28, 46, 49, 51, 52, 53], "represent": [28, 46, 49, 51, 52, 53, 83, 100, 239, 244, 245, 248], "nontermin": 28, "original_reward": 28, "newli": 28, "OR": 28, "reshap": [28, 120, 241], "get_buff": [28, 46, 49, 51, 52, 53], "throw": [28, 46, 49, 51, 52, 53, 248], "docstr": [28, 46, 49, 51, 52, 53], "get_submodul": [28, 46, 49, 51, 52, 53], "explan": [28, 46, 49, 51, 52, 53], "qualifi": [28, 46, 49, 51, 52, 53], "referenc": [28, 46, 49, 51, 52, 53], "attributeerror": [28, 46, 49, 51, 52, 53], "invalid": [28, 46, 49, 51, 52, 53], "resolv": [28, 46, 49, 51, 52, 53], "get_extra_st": [28, 46, 49, 51, 52, 53, 101], "set_extra_st": [28, 46, 49, 51, 52, 53, 101], "picklabl": [28, 46, 49, 51, 52, 53, 101], "ensur": [28, 30, 32, 37, 46, 49, 51, 52, 53, 67, 83, 101, 153, 239, 240, 241, 244], "guarante": [28, 40, 41, 42, 43, 46, 49, 51, 52, 53, 101, 247], "pickl": [28, 46, 49, 51, 52, 53, 101], "get_paramet": [28, 46, 49, 51, 52, 53], "sai": [28, 46, 49, 51, 52, 53, 245, 248], "net_b": [28, 46, 49, 51, 52, 53], "net_c": [28, 46, 49, 51, 52, 53], "conv": [28, 46, 49, 51, 52, 53, 109, 240], "conv2d": [28, 46, 49, 51, 52, 53, 109, 247], "16": [28, 46, 49, 51, 52, 53, 241, 244], "kernel_s": [28, 46, 49, 51, 52, 53, 109, 110, 111, 240, 247], "stride": [28, 46, 49, 51, 52, 53, 109, 110, 111, 117, 240, 247], "diagram": [28, 46, 49, 51, 52, 53], "show": [28, 46, 49, 51, 52, 53, 239, 240, 241, 244, 247], "itself": [28, 46, 49, 51, 52, 53, 241], "degre": [28, 46, 49, 51, 52, 53], "named_modul": [28, 46, 49, 51, 52, 53], "o": [28, 46, 49, 51, 52, 53], "transit": [28, 46, 49, 51, 52, 53, 150, 239, 240, 244], "half": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145, 239], "ipu": [28, 46, 49, 51, 52, 53], "strict": [28, 46, 49, 51, 52, 53, 97], "descend": [28, 46, 49, 51, 52, 53, 97], "exactli": [28, 46, 49, 51, 52, 53, 60, 97, 239], "persist": [28, 46, 49, 51, 52, 53, 97, 107], "enforc": [28, 46, 49, 51, 52, 53, 97, 147, 244], "missing_kei": [28, 46, 49, 51, 52, 53, 97], "unexpected_kei": [28, 46, 49, 51, 52, 53, 97], "namedtupl": [28, 46, 49, 51, 52, 53, 97], "duplic": [28, 46, 49, 51, 52, 53, 161, 162], "l": [28, 46, 49, 51, 52, 53, 177, 241, 244], "idx": [28, 46, 49, 51, 52, 53], "named_buff": [28, 46, 49, 51, 52, 53, 240], "prefix": [28, 46, 49, 51, 52, 53, 97, 188, 248], "remove_dupl": [28, 46, 49, 51, 52, 53], "prepend": [28, 46, 49, 51, 52, 53], "running_var": [28, 46, 49, 51, 52, 53], "named_children": [28, 46, 49, 51, 52, 53], "conv4": [28, 46, 49, 51, 52, 53], "conv5": [28, 46, 49, 51, 52, 53], "memo": [28, 46, 49, 51, 52, 53], "named_paramet": [28, 46, 49, 51, 52, 53, 240], "register_backward_hook": [28, 46, 49, 51, 52, 53], "removablehandl": [28, 46, 49, 51, 52, 53], "deprec": [28, 46, 49, 51, 52, 53, 97, 248], "favor": [28, 46, 49, 51, 52, 53, 241], "register_full_backward_hook": [28, 46, 49, 51, 52, 53], "register_buff": [28, 46, 49, 51, 52, 53], "running_mean": [28, 46, 49, 51, 52, 53], "alongsid": [28, 46, 49, 51, 52, 53], "num_featur": [28, 46, 49, 51, 52, 53], "register_forward_hook": [28, 46, 49, 51, 52, 53, 151, 152], "with_kwarg": [28, 46, 49, 51, 52, 53], "posit": [28, 30, 31, 32, 33, 46, 49, 51, 52, 53, 75, 76, 91, 92, 94, 97, 98, 125, 241, 244], "signatur": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145, 154, 244], "possibli": [28, 46, 49, 51, 52, 53, 109, 145, 206, 241, 244, 248], "register_module_forward_hook": [28, 46, 49, 51, 52, 53], "register_forward_pre_hook": [28, 46, 49, 51, 52, 53], "invok": [28, 46, 49, 51, 52, 53], "And": [28, 46, 49, 51, 52, 53], "forward_pr": [28, 46, 49, 51, 52, 53], "register_module_forward_pre_hook": [28, 46, 49, 51, 52, 53], "grad_input": [28, 46, 49, 51, 52, 53], "grad_output": [28, 46, 49, 51, 52, 53], "subsequ": [28, 46, 49, 51, 52, 53], "technic": [28, 46, 49, 51, 52, 53, 240], "similarli": [28, 46, 49, 51, 52, 53, 147, 148, 167, 239, 248], "caller": [28, 46, 49, 51, 52, 53], "register_module_full_backward_hook": [28, 46, 49, 51, 52, 53], "register_full_backward_pre_hook": [28, 46, 49, 51, 52, 53], "backward_pr": [28, 46, 49, 51, 52, 53], "register_module_full_backward_pre_hook": [28, 46, 49, 51, 52, 53], "register_load_state_dict_post_hook": [28, 46, 49, 51, 52, 53], "incompatible_kei": [28, 46, 49, 51, 52, 53], "thrown": [28, 46, 49, 51, 52, 53], "clear": [28, 46, 49, 51, 52, 53, 198], "register_modul": [28, 46, 49, 51, 52, 53, 237], "alia": [28, 46, 49, 51, 52, 53], "register_paramet": [28, 46, 49, 51, 52, 53], "register_state_dict_pre_hook": [28, 46, 49, 51, 52, 53], "keep_var": [28, 46, 49, 51, 52, 53, 97], "made": [28, 40, 41, 42, 43, 46, 49, 51, 52, 53, 142, 239, 245], "requires_grad_": [28, 46, 49, 51, 52, 53, 239], "autograd": [28, 46, 49, 51, 52, 53, 97], "freez": [28, 46, 49, 51, 52, 53], "finetun": [28, 46, 49, 51, 52, 53], "gan": [28, 46, 49, 51, 52, 53], "share_memori": [28, 46, 47, 49, 51, 52, 53, 239], "share_memory_": [28, 46, 49, 51, 52, 53, 247], "destin": [28, 46, 49, 51, 52, 53, 97, 107], "averag": [28, 46, 49, 51, 52, 53, 97, 101, 142, 163, 164, 204, 239, 241], "shallow": [28, 46, 49, 51, 52, 53, 97], "pleas": [28, 46, 49, 51, 52, 53, 97, 234], "detach": [28, 46, 49, 51, 52, 53, 97, 239, 240], "non_block": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145, 240], "memory_format": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "channels_last": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "Its": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "complex": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145, 239, 240], "integr": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 113, 122, 145, 244, 245], "unchang": [28, 46, 49, 51, 52, 53, 70, 71, 83, 93, 97, 100, 145], "tri": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "pin": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "4d": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "ignore_w": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "1913": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "3420": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "5113": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "2325": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "torch_doctest_cuda1": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "gpu1": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "1914": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "5112": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "2324": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "float16": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "cdoubl": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "3741": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "j": [28, 30, 37, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145, 237, 240], "2382": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "5593": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "4443": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "complex128": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "6122": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "1150": [28, 46, 49, 51, 52, 53, 70, 83, 93, 97, 100, 145], "to_empti": [28, 46, 49, 51, 52, 53], "dst_type": [28, 46, 49, 51, 52, 53], "xpu": [28, 46, 49, 51, 52, 53], "set_to_non": [28, 46, 49, 51, 52, 53], "unidimension": 29, "keepdim": 29, "user_regist": 29, "priori": 29, "definit": [29, 43], "uniqu": 29, "discretebox": [29, 248], "discretetensorspec": [29, 233, 248], "alpha": [30, 32, 37, 109, 170, 172, 239, 240, 247], "ep": [30, 32, 37, 101, 142, 159, 173, 204], "1e": [30, 32, 37, 101, 114, 116, 125, 131, 241], "08": [30, 32, 37, 241, 244], "collate_fn": [30, 31, 32, 247], "prefetch": [30, 31, 32, 239, 240], "schaul": [30, 37], "quan": [30, 37], "antonogl": [30, 37], "silver": [30, 37], "2015": [30, 37], "arxiv": [30, 37, 67, 83, 110, 111, 112, 113, 116, 117, 122, 124, 126, 127, 129, 130, 142, 151, 158, 162, 163, 164, 165, 166, 167, 169, 172, 173, 178, 181, 182, 185, 212, 215, 220, 225, 239, 245], "ab": [30, 37, 83, 101, 116, 117, 122, 124, 126, 127, 129, 130, 158, 163, 164, 165, 166, 167, 169, 172, 212, 220, 239, 245], "1511": [30, 37, 117], "05952": [30, 37], "expon": [30, 32, 37], "\u03b1": [30, 32, 37], "determin": [30, 32, 37, 83, 100, 142, 240], "delta": [30, 32, 37, 131, 146, 233], "null": [30, 32, 37, 66, 239], "max_siz": [30, 31, 32, 40, 42, 43, 240], "1_000": [30, 31, 32], "merg": [30, 31, 32, 244], "mini": [30, 31, 32], "style": [30, 31, 32], "rb": [30, 31, 32, 240, 245, 247], "insert_transform": [30, 31, 32, 33], "insert": [30, 31, 32, 33, 44, 45, 98, 240], "return_info": [30, 31, 32, 33], "sampler": [30, 31, 32, 33, 37, 38, 40, 41, 42, 43, 84, 233, 239, 241], "info": [30, 31, 32, 33, 46, 49, 51, 52, 53, 63, 64, 102], "writer": [31, 44, 233, 241], "randomsampl": [31, 233, 239], "roundrobinwrit": [31, 233], "priority_kei": [32, 33, 161, 162, 167, 172, 247], "td_error": [32, 33, 160, 161, 162, 167, 170, 172, 239, 247], "reduct": [32, 37], "prioritizedreplaybuff": [32, 233, 247], "update_tensordict_prior": [32, 239, 247], "min": [32, 37, 131, 132, 133, 159, 170, 172, 239, 240, 241], "median": [32, 37, 146], "include_info": [32, 33], "kw": [33, 44], "replaybuff": [33, 45, 84, 223, 227, 233, 241, 245, 247], "meta": [34, 48, 237, 241], "describ": [34, 68, 96, 131, 132, 192, 212, 220, 241, 244, 248], "max_capac": [37, 239], "update_prior": [37, 203, 237, 247], "uniformli": [38, 248], "scratch_dir": [40, 239], "memmap": [40, 52, 53, 101, 203], "attach": [40, 41, 42, 43, 240], "entiti": [40, 41, 42, 43], "alloc": [41, 239], "__len__": 43, "roundrobin": 44, "piec": [44, 45, 241, 244], "_inplace_upd": [46, 51, 52, 53, 54, 55, 63, 64, 97], "_batch_lock": [46, 51, 52, 53, 54, 55, 63, 64, 97], "run_type_check": [46, 50], "batch_lock": [46, 48, 49, 51, 52, 53, 93, 97, 244], "environn": [46, 49, 50, 51, 52, 53, 97], "immut": [46, 49, 51, 52, 53, 85, 97, 212, 220], "fake_tensordict": [46, 49, 51, 52, 53, 239, 240], "fake": [46, 49, 51, 52, 53, 239, 240], "overridden": [46, 49, 51, 52, 53, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155], "recip": [46, 49, 51, 52, 53, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155], "afterward": [46, 49, 51, 52, 53, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155, 248], "silent": [46, 49, 51, 52, 53, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 125, 126, 127, 129, 130, 139, 141, 142, 155], "rand_act": [46, 49, 51, 52, 53], "_step": [46, 49, 51, 52, 53, 75, 85], "privat": [46, 49, 51, 52, 53, 244, 248], "_reset": [46, 49, 50, 51, 52, 53, 108, 122], "callback": [46, 49, 51, 52, 53], "auto_reset": [46, 49, 51, 52, 53, 240, 244], "auto_cast_to_devic": [46, 49, 51, 52, 53], "break_when_any_don": [46, 49, 51, 52, 53], "return_contigu": [46, 49, 51, 52, 53, 103, 243], "stop": [46, 49, 51, 52, 53, 241, 247, 248], "soon": [46, 49, 51, 52, 53], "lazystackedtensordict": [46, 49, 50, 51, 52, 53, 108, 122, 243, 247, 248], "concomitt": [46, 49, 51, 52, 53], "workspac": [46, 49, 51, 52, 53], "carri": [46, 49, 51, 52, 53, 240, 244], "creator": [47, 213, 214, 229, 230, 231], "substitut": [47, 101], "vecnorm": [47, 231], "env_creat": [47, 239], "test_env1": 47, "_td": 47, "observation_count": [47, 248], "test_env2": 47, "sleep": [47, 248], "p1": 47, "p2": 47, "join": [47, 212, 220, 241], "9934": 47, "env_str": 48, "discard": [49, 107, 188, 248], "info_dict_read": 49, "set_info_dict_read": 49, "put": [49, 101, 231, 240, 241, 244], "f": [49, 157, 178, 179, 180, 239, 240, 241, 244, 248], "read_act": 49, "read_don": 49, "reader": [49, 239, 240], "frame_skip": [49, 56, 57, 58, 61, 76, 199, 202, 209, 237, 239, 241, 247], "broken": [49, 103], "read_ob": 49, "dictat": [49, 146, 244], "inner": [49, 71, 237, 239, 241, 248], "read_reward": 49, "total_reward": 49, "step_reward": 49, "far": [49, 118, 132, 133, 244, 248], "baseinfodictread": 49, "info_dict": 49, "hoc": 49, "manner": [49, 83, 239, 240, 241, 243, 244], "dict_read": 49, "default_info_dict_read": 49, "my_info_kei": 49, "some_env": 49, "limit": [50, 239, 244], "safeti": 50, "constraint": [50, 241], "behav": [50, 60, 128, 167, 245], "unboundedcontinuoustensorspec": [50, 93, 108, 135, 136, 137, 138, 145, 148, 149, 233, 241, 244, 248], "mymbenv": [50, 108, 122], "world_model": [50, 108, 122, 164], "super": [50, 108, 122, 149, 151, 154, 239, 240, 244, 247], "hidden_observ": [50, 108, 122], "mlp": [50, 108, 109, 110, 111, 112, 113, 119, 122, 136, 140, 212, 220, 222, 225, 233, 239, 240, 243, 245, 247], "worldmodelwrapp": [50, 108, 122, 233], "safemodul": [50, 108, 121, 136, 137, 138, 139, 141, 142, 143, 146, 148, 150, 153, 154, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 202, 213, 214, 227, 233, 247], "activation_class": [50, 108, 109, 110, 111, 112, 113, 116, 117, 120, 122, 239, 240, 247], "relu": [50, 108, 122, 125, 157], "activate_last_lay": [50, 108, 113, 120, 122], "depth": [50, 108, 109, 110, 111, 112, 113, 116, 117, 120, 122, 126, 127, 140, 240, 243], "less": [51, 229, 230, 239, 240, 241, 247], "equal": [51, 52, 53, 79, 80, 109, 115, 120, 174, 197, 229, 230, 241, 245], "readthedoc": 51, "en": 51, "python_interfac": 51, "num_work": [51, 52, 53, 239, 240], "thread": 51, "task_id": 51, "my_env_fun": [52, 53], "custom_attribute_list": [52, 53], "custom_attribut": [52, 53], "custom_method_list": [52, 53], "custom_method": [52, 53], "deploi": [52, 53], "creation": [52, 53, 248], "slight": [52, 53, 240], "overhead": [52, 53], "share_individual_td": [52, 53], "lazi": [52, 53, 83, 123, 147, 148, 239, 240, 243, 248], "shared_memori": [52, 53], "policy_proof": [52, 53], "ll": [52, 53, 239, 240, 241, 248], "hidden": [52, 53, 116, 119, 126, 127, 129, 130, 136, 137, 138, 145, 148, 212, 220, 243, 247], "allow_step_when_don": [52, 53], "update_kwarg": [52, 53], "googl": [54, 55, 241], "ant": [54, 55, 245], "get_environ": 55, "87": [55, 244, 245], "acrobot": [55, 248], "fetch": [55, 245, 248], "dm_control": [56, 57, 239, 243, 248], "task_nam": 56, "cheetah": [56, 57, 239, 248], "habitat": [60, 234, 245], "placehold": [60, 97], "secur": 60, "jumanji": [61, 62], "snake": [61, 62], "6x6": [61, 62], "td1": 62, "int32": [62, 247], "12x12": 62, "tsp50": 62, "tsp100": 62, "vma": [63, 64], "scenario_nam": [63, 64], "flock": [63, 64], "num_env": [63, 64], "continuous_act": [63, 64], "scenario": [63, 64, 239, 244], "n_agent": [63, 64], "cohesion_rew": [63, 64], "collision_rew": [63, 64], "separation_rew": [63, 64], "velocity_rew": [63, 64], "18": [63, 64, 241, 244, 248], "model_bas": [65, 108, 122], "transform_reward_spec": [66, 70, 72, 85, 87, 88, 96, 98], "success": [67, 96, 240, 244, 247], "account": [67, 240], "movement": 67, "veloc": [67, 244, 248], "propos": [67, 121, 166, 173, 222, 225], "pdf": [67, 110, 111, 112, 113, 142, 151, 162, 170, 173, 178, 181, 182, 185, 215, 222, 225], "1312": 67, "5602": 67, "_buffer": [67, 94], "transform_observation_spec": [67, 68, 69, 70, 72, 73, 75, 77, 78, 80, 85, 86, 89, 90, 92, 93, 94, 95, 96, 98, 244], "del_kei": [68, 240, 243, 244], "unsqueeze_if_oor": 68, "observation_posit": 68, "observation_veloc": 68, "delet": 68, "unsqueez": [68, 95, 98, 119, 244], "key1": [68, 197, 205], "key2": [68, 197, 205], "crop": [69, 84, 189], "center": [69, 189], "width": [69, 86], "height": [69, 86], "squar": [69, 118, 132, 133, 189], "rewardsc": [70, 97, 239, 240], "rewardclip": 70, "transformed_env": [70, 96, 97], "tranform": [70, 73, 78, 90, 92, 96, 99, 240], "dest": [70, 83, 100, 145], "transform_input_spec": [70, 71, 72, 80, 85, 92, 96, 98], "num_actions_effect": 71, "max_act": 71, "action_kei": [71, 108, 121, 122, 139, 141], "include_forward": 71, "dimension": [71, 178, 181, 182, 185], "num_act": [71, 240], "action_out": 71, "_call": [71, 75, 244], "inde": [71, 241, 244], "remain": [71, 124], "manual_se": [71, 80, 141, 142, 239, 244, 247, 248], "expos": [72, 147], "extern": [72, 248], "excluded_kei": 73, "finit": 74, "first_dim": 75, "last_dim": 75, "allow_positive_dim": [75, 98], "flatten": [75, 203, 239, 240], "th": [75, 98, 244], "permit": [75, 98], "exclus": [75, 231], "frameskip": 75, "repeatedli": [76, 241], "init_kei": 78, "is_init": 78, "tracker": 78, "noop": [79, 247], "30": [79, 129, 130, 240, 241, 244], "op": [79, 139, 141, 208], "randomli": [79, 80, 93, 146, 244], "noop_max": 79, "loc": [80, 88, 118, 125, 132, 133, 136, 137, 138, 143, 146, 148, 210, 212, 220, 222, 225, 231, 239, 240, 241, 247], "out_keys_inv": [80, 81, 85, 96, 244], "standard_norm": [80, 88, 239, 240], "affin": [80, 88], "layer": [80, 101, 109, 110, 111, 116, 120, 123, 124, 126, 127, 134, 239, 240, 241, 245], "normal": [80, 101, 109, 118, 120, 125, 132, 133, 139, 146, 159, 168, 169, 202, 204, 231, 237, 248], "set_default_tensor_typ": 80, "doubletensor": 80, "isclos": 80, "next_ob": [80, 178, 179, 180, 239, 247], "rubric": [80, 148], "init_stat": [80, 239, 240, 241], "3752e": 80, "01": [80, 142, 155, 158, 159, 168, 169, 241, 244, 245, 246], "5087e": 80, "03": [80, 241, 244, 245, 246], "9294e": 80, "9636": 80, "5608": [80, 244], "6408": 80, "num_it": [80, 240, 241], "reduce_dim": [80, 239, 240, 241], "cat_dim": [80, 239, 240, 241], "keep_dim": [80, 240], "constant": [80, 237, 239, 241, 248], "statist": [80, 101, 171, 231, 239, 240, 241, 248], "approach": [80, 239, 241, 248], "gaussian": [80, 93, 108, 122, 123, 124, 139, 241], "empir": [80, 108, 122, 146, 241], "3d": 80, "third": 80, "r3m": [83, 245], "resnet": [83, 100], "visual": [83, 100, 241, 244], "embed": [83, 99, 100, 136, 137, 138, 145, 245], "ego4d": [83, 100], "paper": [83, 100, 166, 222, 225, 239, 241], "univers": [83, 100], "suraj": 83, "nair": 83, "aravind": 83, "rajeswaran": 83, "vikash": [83, 100], "kumar": [83, 100], "chelsea": 83, "finn": 83, "abhinav": 83, "gupta": 83, "2203": [83, 122, 245], "12601": [83, 245], "_init": 83, "snippet": [83, 239], "resnet50": [83, 100, 245], "model_nam": [83, 100, 192], "resnet34": 83, "resnet18": 83, "left": [83, 85, 94, 96, 100, 239, 240, 241], "empti": [83, 94, 97, 100, 239, 244], "r3m_vec": [83, 245], "feed": [83, 100], "244": [83, 100, 241, 244], "stack_imag": [83, 100], "tread": [83, 100], "separet": [83, 100], "hub": [83, 100, 245], "cach": [83, 97, 100, 198, 245], "public": [83, 100], "resnet50_weight": [83, 100], "imagenet1k_v1": [83, 100], "download_path": [83, 100], "tensor_pixels_kei": [83, 100], "sub_seq_len": 84, "sample_dim": 84, "mask_kei": 84, "primarili": 84, "hesit": 84, "request": 84, "robust": 84, "vari": 84, "mix": 84, "NOT": 84, "improp": 84, "create_copi": 85, "renam": [85, 107, 239], "stuff": 85, "braxenv": [85, 233], "newnam": 85, "transform_output_spec": [85, 96], "untouch": [85, 96], "transform_done_spec": [85, 96], "interpol": [86, 240], "bilinear": 86, "clamp_min": [87, 142], "clamp_max": 87, "clip_min": 87, "scalar": [87, 111, 113, 123, 124, 139, 141, 142, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 240, 244], "clip_max": 87, "episod": [89, 108, 181, 182, 183, 184, 185, 186, 187, 240], "episode_": 89, "reward1": 89, "reward2": 89, "ho": 89, "excludetransform": 90, "squeeze_dim": 91, "squeez": [91, 109, 240, 244, 247], "recognis": 92, "primer": 93, "default_valu": 93, "drawn": [93, 146, 241], "unit": [93, 108, 116, 126, 127, 129, 130, 241], "transfomedenv": 93, "lock": [93, 101, 244], "mykei": 93, "dtype_or_devic": 93, "pool": 94, "255": [95, 244], "ri": 95, "randint": [95, 239], "principl": 96, "cattransform": 96, "notabl": 96, "cache_spec": 97, "anymor": [97, 145, 239], "unsqueeze_dim": [98, 244], "danger": 98, "vip": [99, 100, 245], "toward": 100, "implicit": [100, 167], "jason": 100, "ma": 100, "shagun": 100, "sodhani": 100, "dinesh": 100, "jayaraman": 100, "osbert": 100, "bastani": 100, "ami": 100, "zhang": 100, "vip_vec": 100, "shared_td": 101, "decai": [101, 139, 141, 170, 204, 239, 240, 248], "9999": [101, 244], "0001": [101, 116, 125, 241, 244], "fly": [101, 168, 241, 244, 248], "to_observation_norm": 101, "99": [101, 122, 158, 159, 163, 165, 167, 168, 169, 170, 171, 172, 177, 227, 239, 240, 241, 244, 245, 247], "underflow": [101, 204], "build_td_for_shared_vecnorm": 101, "memmori": 101, "memmap_": 101, "queue": 101, "td_share": 101, "observationnorm": [101, 231, 239, 240, 241, 247], "state_dim": [102, 129, 130], "action_dim": [102, 110, 112, 243], "gsde": [102, 170, 231], "func": [102, 247], "gsdemodul": 102, "check_dtyp": 103, "short": [103, 241], "discrep": [103, 158, 159, 160, 161, 168, 169], "imposs": 103, "heterogen": [103, 240], "caution": [103, 248], "probabilistictdmodul": [106, 120, 146, 167, 172, 177, 202], "next_tensordict": [107, 239], "keep_oth": [107, 244], "exclude_reward": 107, "exclude_don": 107, "exclude_act": 107, "THe": 107, "next_": 107, "funtion": [107, 244], "planning_horizon": [108, 122], "optim_step": [108, 122], "num_candid": [108, 122], "top_k": [108, 122], "reward_kei": [108, 122, 200, 204], "cross": 108, "entropi": [108, 158, 159, 168, 169, 170, 172], "botev": 108, "et": 108, "al": [108, 217, 248], "2013": 108, "cem": 108, "plan": [108, 121, 122], "varianc": [108, 118, 125, 132, 133, 241], "rank": 108, "k": [108, 240], "repeat": [108, 241, 244], "maximis": [108, 110, 112, 122, 239, 241, 244], "horizon": [108, 122, 241], "modelbasedenv": [108, 122], "mpc": [108, 121, 122], "candid": [108, 122], "modelbasedenvbas": [108, 121, 122, 233], "next_hidden_observ": 108, "num_cel": [109, 110, 111, 112, 113, 116, 117, 120, 136, 239, 240, 241, 247], "elu": [109, 110, 111, 112, 113, 116, 117, 240, 247], "activation_kwarg": [109, 120], "norm_class": [109, 110, 111, 120], "norm_kwarg": [109, 120], "bias_last_lay": [109, 110, 111, 112, 113, 117, 120], "aggregator_class": [109, 110, 111, 240, 247], "squashdim": [109, 110, 247], "aggregator_kwarg": [109, 110, 111, 240], "squeeze_output": [109, 110, 111, 240], "convolut": [109, 110, 111], "neural": [109, 145, 240, 241, 244, 248], "produc": [109, 120, 128, 136, 138, 189, 241, 248], "len": [109, 120, 239, 240, 244, 245, 247], "cell": [109, 120, 241], "kernel": [109, 117, 119], "device_typ": [109, 110, 111, 112, 113, 117, 120, 123, 124], "cnet": 109, "34": [109, 120, 241, 244], "35": [109, 120, 241, 244, 245, 246], "rectangular": 109, "conv_net_kwarg": [110, 111], "mlp_net_kwarg": [110, 111, 112], "use_avg_pool": [110, 111], "WITH": [110, 111, 112, 113, 142, 173, 215], "1509": [110, 111, 112, 113, 122, 142, 166, 173, 215, 239], "02971": [110, 111, 112, 113, 142, 173, 215, 239], "convnet": [110, 233, 247], "ndims_in": 110, "avgpool": [110, 111], "128": [111, 239, 240, 244, 245], "adaptiveavgpool2d": [111, 240], "400": [112, 113, 244], "300": [112, 113, 212, 220, 244], "mlp_net_kwargs_net1": 113, "mlp_net_kwargs_net2": 113, "atol": [114, 131], "06": [114, 131, 241, 244, 246], "rtol": [114, 131], "batch_shap": [114, 131], "event_shap": [114, 131], "absolut": [114, 131], "toler": [114, 131], "log_prob": [114, 128, 133], "densiti": [114, 128, 133], "mass": [114, 128, 133, 244], "rsampl": [114, 128, 146], "sample_shap": [114, 128], "dqnet": 115, "atom": 115, "std_bia": 116, "std_min_val": 116, "belief": [116, 126, 129, 130], "1912": [116, 163, 164, 165], "01603": [116, 163, 164, 165], "softplu": [116, 125, 155, 156, 157], "out_features_valu": 117, "cnn_kwarg": [117, 240], "mlp_kwarg": [117, 119, 240], "duel": [117, 240], "cnn": [117, 240, 247], "06581": 117, "512": [117, 244], "upscal": [118, 132, 133], "tanh_loc": [118, 132, 133], "event_dim": [118, 131, 132], "ultim": [118, 132, 133], "poor": [118, 132, 133], "explos": [118, 132, 133], "switch": [118, 132, 133], "sigma": [118, 132, 133, 139, 142, 241], "formula": [118, 132, 133, 159, 168, 169, 241], "lstm_kwarg": 119, "embedd": 119, "next_observ": [119, 243], "time_step": 119, "2d": 119, "hidden_s": 119, "input_s": 119, "hidden0_in": 119, "hidden1_in": 119, "hidden0_out": 119, "hidden1_out": 119, "single_bias_last_lay": 120, "layer_class": 120, "layer_kwarg": 120, "perceptron": 120, "seamless": 120, "lazylinear": [120, 241, 244, 245, 247], "42": [120, 206, 241, 244], "noisylinear": [120, 123, 233, 240], "noisylazylinear": [120, 233], "At": [121, 241, 243, 244, 245], "mpcplanner": 121, "tensordict_out": [121, 248], "advantage_modul": [122, 158, 241], "temperatur": [122, 167], "mppi": 122, "covari": 122, "william": [122, 171], "aldrich": 122, "theodor": 122, "01149": 122, "hansen": 122, "wang": 122, "su": 122, "04955": 122, "ndunboundedcontinuoustensorspec": [122, 148], "valueoper": [122, 136, 137, 138, 158, 159, 168, 169, 227, 233, 239, 241], "tdlambdaestim": [122, 233], "value_net": [122, 178, 179, 180, 241], "adv": 122, "95": [122, 163, 239, 240, 241, 244], "std_init": [123, 124], "term": [123, 124, 157, 158, 208, 240, 241], "matrix": [123, 124], "initialize_paramet": 123, "isol": [123, 240], "1706": 124, "10295v3": 124, "induc": 124, "aid": 124, "emploi": 124, "scale_map": 125, "biased_softplus_1": 125, "scale_lb": [125, 129, 130], "exp": [125, 157], "module_norm": 125, "decod": 126, "1803": [126, 127], "10122": [126, 127], "rnn_hidden": 126, "latent": 127, "logit": 128, "excacli": 128, "hidden_dim": [129, 130], "posterior": [129, 164], "rssm": [129, 130, 164], "1811": [129, 130, 244], "04551": [129, 130], "obs_embed": 129, "rnn_hidden_dim": 130, "dream": 130, "recurr": [130, 240], "tanhtransform": 132, "tensordict_modul": [135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "translat": [135, 143], "td_modul": [135, 136, 137, 138, 143, 145, 146, 148, 149, 247], "get_policy_oper": [136, 137, 138, 212, 220], "alon": [136, 137, 138], "tdmodul": [136, 137, 138, 227], "get_critic_oper": 136, "common_oper": [136, 138], "policy_oper": [136, 137, 138], "value_oper": [136, 137, 138], "probabilisticactor": [136, 137, 138, 167, 172, 233, 239, 241], "tanhnorm": [136, 137, 138, 143, 148, 233, 241, 247], "normalparamwrapp": [136, 137, 138, 143, 148, 233, 247], "spec_hidden": [136, 138], "module_hidden": [136, 138], "td_module_hidden": [136, 138], "spec_act": [136, 138], "module_act": [136, 138], "td_module_act": [136, 137, 138], "dist_in_kei": [136, 137, 138, 143, 148], "sample_out_kei": [136, 138, 148], "distribution_class": [136, 137, 138, 143, 146, 148, 239, 241, 247], "return_log_prob": [136, 137, 138, 146, 148, 241, 247], "module_valu": [136, 137, 138], "td_module_valu": [136, 137, 138], "state_action_valu": [136, 149, 177, 215, 222, 225, 227, 239, 247], "td_clone": [136, 137, 138], "sample_log_prob": [136, 137, 138, 146, 148, 212, 220, 222, 241, 247], "tensordictmodulewrapp": [136, 213, 214, 227], "get_value_oper": [136, 137, 138, 212, 220], "action_modul": 137, "state_valu": [137, 138, 149, 178, 179, 180, 181, 182, 183, 185, 186, 212, 220, 225, 239, 241], "safesequenti": [137, 138, 150, 233], "sigma_init": 139, "sigma_end": 139, "annealing_num_step": [139, 141, 142, 239, 240], "po": [139, 141], "epsilon": [139, 141, 142, 173, 204, 240, 241], "recov": [139, 141, 147, 167, 243], "action_spac": [140, 144, 151, 152], "one_hot": [140, 144, 151, 152], "nbin": [140, 151], "qvalue_actor": [140, 144, 151, 152], "eps_init": [141, 142, 240], "eps_end": [141, 142, 240], "greedi": [141, 152, 240], "explorative_polici": [141, 142], "0000": [141, 241, 244, 247], "6986": 141, "9366": 141, "5837": 141, "8596": 141, "grad_fn": [141, 247], "addbackward0": [141, 247], "theta": [142, 241, 244], "15": [142, 163, 240, 241, 243, 244, 246], "mu": [142, 241], "dt": [142, 244], "x0": 142, "sigma_min": 142, "n_steps_ann": 142, "ornstein": [142, 239], "uhlenbeck": [142, 239], "ou": [142, 239], "introduc": 142, "auto": [142, 170, 172], "correl": 142, "sort": 142, "equat": [142, 157, 159, 173, 241, 244], "prev_nois": 142, "current_sigma": 142, "sqrt": 142, "ou_prev_nois": 142, "ou_step": 142, "increas": [142, 240], "anneal": 142, "_ou_prev_nois": 142, "_ou_step": 142, "probabilist": [143, 241, 247], "functional_modul": [143, 144, 145, 148, 149, 151, 152], "make_funct": [143, 144, 145, 148, 149, 151, 152, 153, 240, 247], "functionalmodul": [145, 153], "functionalmodulewithbuff": [145, 153], "obj": [145, 146, 147], "character": 145, "overflow": [145, 146], "grucel": 145, "td_fmodul": 145, "td_function": 145, "td_state": 145, "vmap": [145, 148, 240, 247], "ensembl": [145, 170], "params_repeat": 145, "td_vmap": [145, 148], "irrespect": [145, 146], "random_sampl": [145, 146], "tensor_spec": 146, "default_interaction_mod": 146, "distribution_kwarg": [146, 239, 241], "cache_dist": 146, "n_empirical_estim": 146, "probabilistictensordictmodul": [146, 147, 247], "rule": [146, 241], "interaction_mod": 146, "get_dist": [146, 147], "__call__": [146, 237], "suppli": 146, "fist": 146, "set_interaction_mod": 146, "diverg": [146, 164, 168], "partial_toler": [147, 148, 243], "probabilistictensordictsequenti": [147, 247], "tensordictsequenti": [147, 239, 243, 245, 247], "who": [147, 148], "AND": [147, 148], "scan": [147, 148], "tensordictsequenci": 148, "tensordictsequ": 148, "safeprobabilisticmodul": [148, 233], "spec1": 148, "net1": 148, "module1": 148, "td_module1": 148, "spec2": 148, "module2": 148, "td_module2": 148, "custommodul": [149, 154], "cat": [149, 247], "transition_model": 150, "reward_model": 150, "imaginari": 150, "imagin": 150, "get_reward_oper": 150, "get_transition_model_oper": 150, "var_num": [151, 152], "regard": [151, 158, 162, 169, 241, 244], "perspect": [151, 162, 241], "1707": [151, 162, 169, 212, 220], "06887": [151, 162], "mult_one_hot": [151, 152], "customdistributionalqv": 151, "log_softmax": 151, "_functorch": 153, "wrapper_typ": 153, "mislead": 154, "other_kei": 154, "typeerror": [154, 239], "min_val": [155, 157], "bias": [155, 239, 240], "_bia": 155, "invert": [156, 241], "surject": 157, "expln": 157, "biased_softplu": [157, 233], "beggin": 157, "biased_softplus_": 157, "syntax": [157, 239], "condit": [157, 239, 244], "met": [157, 244], "safeprobabilisticsequenti": [158, 159, 168, 169, 171, 213, 214, 233], "advantage_kei": [158, 159, 168, 169, 171, 178, 179, 180, 241], "value_target_kei": [158, 169, 171, 178, 179, 180, 241], "value_target": [158, 169, 171, 178, 179, 180, 241], "entropy_bonu": [158, 159, 168, 169, 241], "samples_mc_entropi": [158, 159, 168, 169], "entropy_coef": [158, 159, 168, 169, 241], "critic_coef": [158, 159, 168, 169, 241], "loss_critic_typ": [158, 159, 168, 169, 171, 241], "smooth_l1": [158, 159, 160, 161, 167, 168, 169, 170, 171, 172, 174, 241], "1602": 158, "01783v2": 158, "advantage_diff_kei": 158, "advantage_diff": 158, "value_error": [158, 178, 179, 180], "loss_function_typ": 158, "l1": [158, 159, 160, 161, 168, 169, 170, 174, 240], "l2": [158, 159, 160, 161, 164, 165, 168, 169, 170, 174], "tha": 158, "throughout": [158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 241, 248], "essenti": [158, 159, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 244], "clip_epsilon": [159, 241], "normalize_advantag": [159, 168, 169], "threshold": [159, 241], "favour": [159, 168, 169], "mont": [159, 168, 169], "carlo": [159, 168, 169], "multipli": [159, 168, 169, 170, 172, 204, 239], "loss_funct": [159, 160, 161, 167, 169, 170, 172, 174], "actor_network": [160, 167, 170, 171, 172], "value_network": [160, 161, 162, 167, 172, 178, 179, 180, 241], "delay_actor": [160, 172], "delay_valu": [160, 161, 162, 171, 172], "input_tensordict": [160, 161, 162], "qvalueactor": [161, 233, 240], "distributionalqvalueactor": [162, 233], "unlik": [162, 169, 240, 247], "disctount": 162, "actor_model": 163, "value_model": [163, 165], "model_based_env": 163, "dreamerenv": [163, 233], "imagination_horizon": 163, "lmbda": [163, 178, 180, 181, 183, 184, 185, 186, 187, 239, 240, 241], "discount_loss": [163, 165], "unrol": 163, "lambda_kl": 164, "lambda_reco": 164, "lambda_reward": 164, "reco_loss": 164, "reward_loss": 164, "free_nat": 164, "delayed_clamp": 164, "global_averag": 164, "kl": [164, 168], "reconstruct": [164, 248], "nat": 164, "clamp": [164, 206, 244], "value_loss": [165, 239], "fake_data": 165, "loss_modul": [166, 173, 206, 226, 227, 237, 241], "dqnloss": [166, 173, 218, 233], "ddpgloss": [166, 173, 216, 227, 233, 247], "sacloss": [166, 173, 224, 233], "td3loss": [166, 173], "value_network_update_interv": 166, "contrast": 166, "06461": 166, "qvalue_network": [167, 170, 172], "num_qvalue_net": [167, 170, 172], "priotity_kei": [167, 170, 172], "expectil": 167, "2110": 167, "06169": 167, "qvalue_network_bi": [167, 172], "tau": [167, 239, 240], "antmaz": 167, "sticht": 167, "loss_value_diff": 167, "diff": 167, "dtarg": 168, "decrement": 168, "samples_mc_kl": 168, "penalti": 168, "old_polici": 168, "new_polici": 168, "adapt": [168, 239, 244], "old": [168, 248], "thu": 168, "distanc": [168, 174, 177, 178], "apart": 168, "proxim": [169, 212, 220, 241], "optimis": [169, 202, 241], "flavour": [169, 247], "constrain": 169, "clipppoloss": [169, 233, 241], "klpenppoloss": [169, 233], "regularis": 169, "06347": [169, 212, 220], "sub_sample_len": 170, "alpha_init": [170, 172], "min_alpha": [170, 172], "max_alpha": [170, 172], "fixed_alpha": [170, 172], "target_entropi": [170, 172], "delay_qvalu": [170, 172], "openreview": [170, 222], "ay8zfzm0tdd": [170, 222], "idea": [170, 237], "subsampl": [170, 197, 237], "connectionist": 171, "1992": 171, "doi": 171, "1007": 171, "bf00992696": 171, "1801": [172, 225], "01290": [172, 225], "applic": [172, 244], "1812": 172, "05905": 172, "prod": 172, "n_action": 172, "redqloss": [173, 233], "999": [173, 204, 240], "prev_param": 173, "new_param": 173, "v2": [174, 183, 184, 186, 187, 212, 215, 220, 222, 225], "strict_shap": 174, "view_a": 174, "next_val_kei": 177, "pred_next_v": 177, "usus": 177, "mse": [177, 240], "q_valu": 177, "target_valu": [177, 247], "n_steps_to_next": 177, "value_next_st": 177, "average_ga": [178, 241], "value_kei": [178, 179, 180], "1506": [178, 181, 182, 185], "02438": [178, 181, 182, 185], "exponenti": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 204], "propag": [178, 179, 180, 241], "throught": [178, 179, 180], "advang": 178, "gradient_mod": 178, "sign": 178, "unused_arg": 178, "target_param": [178, 179, 180], "relev": [178, 179, 180, 244], "98": [178, 179, 180, 241, 244, 247], "94": [178, 180, 241, 244, 245], "unpack": [178, 179, 180], "average_reward": [179, 180], "next_state_valu": [181, 182, 183, 184, 185, 186, 187, 233, 247], "old_stat": [181, 182, 183, 185, 186], "new_stat": [181, 182, 183, 184, 185, 186, 187], "rolling_gamma": [183, 184, 186, 187], "ti": [183, 184, 186, 187], "event": [183, 184, 186, 187], "g1": [183, 184, 186, 187], "g2": [183, 184, 186, 187], "g3": [183, 184, 186, 187], "g4": [183, 184, 186, 187], "v3": [183, 184, 186, 187], "v4": [183, 184, 186, 187, 239, 241, 245], "upcom": [183, 184, 186, 187, 239], "out_file_bas": 188, "skip_reset": 188, "dump": 188, "interv": [188, 189, 198, 208, 240, 244], "center_crop": 189, "make_grid": 189, "Will": 189, "grid": 189, "exp_nam": [190, 191, 194, 195, 196, 227, 239], "log_dir": [190, 191, 193, 195], "templat": 190, "csv": [191, 193], "minim": 191, "dependeci": 191, "experiment_nam": [192, 193], "uuid": [192, 248], "date": 192, "logger_typ": 193, "logger_nam": 193, "tensorboard": [193, 195, 247], "wandb": [193, 196, 247], "mlflow": [193, 194], "might": [193, 234, 239, 248], "wandb_kwarg": 193, "mlflow_kwarg": 193, "tracking_uri": 194, "uri": 194, "datastor": 194, "tb_log": 195, "tensoarboard": 195, "sub_traj_len": 197, "min_sub_traj_len": 197, "full": [197, 239, 240, 241, 243, 244, 245, 247, 248], "20": [197, 241, 244, 245, 247, 248], "register_op": [197, 198, 199, 200, 201, 203, 204, 205, 208, 237], "process_optim_batch": [197, 203, 204, 237], "td_out": [197, 205], "_process_optim_batch_hook": [197, 237], "clear_cuda": 198, "pre_optim_step": [198, 237], "counter": [199, 237], "log_pbar": [199, 200, 202, 204, 237], "progress": [199, 200, 202, 206, 237, 248], "bar": [199, 200, 202, 206, 237], "count_fram": 199, "pre_steps_log": [199, 200, 237], "lognam": 200, "r_train": 200, "log_reward": 200, "loss_compon": 201, "appl": 201, "omit": [201, 239, 241, 244], "loss_": 201, "optimizer_hook": 201, "loss_actor": 201, "record_interv": [202, 239], "record_fram": [202, 209, 239], "policy_explor": [202, 227, 239], "log_kei": 202, "suffix": 202, "underestim": 202, "suppos": [202, 237, 248], "set_exploration_mod": [202, 233, 239, 240, 241, 247], "reward_evalu": 202, "tensordictreplaybuff": [203, 227, 233, 239, 240], "flatten_tensordict": 203, "max_dim": 203, "rb_trainer": 203, "batch_process": [203, 204, 205, 237], "post_loss": [203, 237], "jitter": 204, "finfo": 204, "default_dtyp": 204, "get_default_dtyp": 204, "reward_norm": 204, "update_reward_stat": 204, "normalize_reward": 204, "make_train": [205, 233], "_process_batch_hook": [205, 237], "versatil": 206, "lossmodul": [206, 226, 227], "optim_steps_per_batch": [206, 237], "epoch": [206, 241], "clip_grad_norm": 206, "partial": 206, "clip_norm": 206, "progress_bar": 206, "tqdm": [206, 239, 240, 241, 244], "save_trainer_interv": 206, "disk": [206, 237, 240], "10000": [206, 240, 241], "save_trainer_fil": [206, 237], "_datacollector": [208, 213, 214, 227], "update_weights_interv": 208, "sit": [208, 240], "update_weight": 208, "post_step": [208, 237], "cfg": [209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231], "dictconfig": [209, 210, 212, 213, 214, 215, 217, 220, 222, 223, 225, 226, 227, 228, 231], "divid": [209, 239], "unknowingli": 209, "annealing_fram": [209, 239], "init_env_step": [209, 210, 239], "proof_environ": [210, 212, 215, 217, 220, 222, 225, 239], "sta": 210, "ot": 210, "a2closs": [211, 233], "in_keys_actor": [212, 220], "observation_kei": [212, 220, 222, 225], "actorvalueoper": [212, 220, 233], "dummi": [212, 215, 217, 220, 222, 225, 239, 248], "actorcriticoper": [212, 220, 233], "parser_env_arg": [212, 220, 222], "make_ppo_model": [212, 233], "parser_model_args_continu": [212, 220, 222, 225], "cattensor": [212, 215, 220, 222, 225, 239, 240, 243, 244, 248], "hydra": [212, 215, 217, 220, 222, 225], "config_stor": [212, 215, 217, 220, 222, 225], "configstor": [212, 215, 217, 220, 222, 225], "dataclass": [212, 215, 217, 220, 222, 225], "halfcheetah": [212, 215, 220, 222, 225, 239], "config_field": [212, 215, 217, 220, 222, 225], "config_cl": [212, 215, 217, 220, 222, 225], "ppomodelconfig": [212, 220], "envconfig": [212, 215, 217, 220, 222, 225], "make_dataclass": [212, 215, 217, 220, 222, 225], "cls_name": [212, 215, 217, 220, 222, 225], "config_path": [212, 215, 217, 220, 222, 225], "config_nam": [212, 215, 217, 220, 222, 225], "actor_valu": [212, 220], "17": [212, 215, 220, 222, 225, 241, 244, 245], "actor_model_explor": [213, 214, 239], "make_env_kwarg": [213, 214], "actor_net_kwarg": [215, 222, 225], "value_net_kwarg": [215, 225], "modulelist": [215, 222, 225, 247], "ddpgcnnactor": [215, 233], "ddpgmlpactor": [215, 233], "ddpgcnnqnet": [215, 233], "ddpgmlpqnet": [215, 233], "ddpgmodelconfig": 215, "targetnetupdat": [216, 218, 221, 224, 226, 227], "discretemodelconfig": 217, "pong": [217, 248], "v5": [217, 248], "pixels_onli": [217, 239, 240, 247, 248], "210": [217, 244, 248], "160": [217, 244, 248], "ppoloss": [219, 233], "redqloss_deprec": 221, "qvalue_net_kwarg": [222, 225], "qvalu": [222, 225, 240], "redqmodelconfig": 222, "replayargsconfig": 223, "sacmodelconfig": 225, "target_net_updat": 227, "constitu": 227, "learnt": [227, 240, 241], "tempfil": 227, "tensorboardlogg": [227, 233], "egreedywrapp": [227, 233, 240], "env_proof": 227, "obs_spec": [227, 244], "net_valu": 227, "dir": [227, 237], "gettempdir": 227, "argpars": [228, 231], "namespac": [228, 231], "parser": [228, 231], "transformed_env_constructor": [228, 233], "env_kwarg": [229, 230, 239], "num_env_per_collector": [229, 230], "num_collector": [229, 230, 240], "video_tag": 231, "norm_obs_onli": 231, "use_env_cr": 231, "custom_env_mak": 231, "custom_env": 231, "return_transformed_env": 231, "action_dim_gsd": 231, "state_dim_gsd": 231, "batch_dim": 231, "obs_norm_state_dict": 231, "wheter": 231, "maker": 231, "overrid": 231, "asyncdatacollector": 233, "distributedsyncdatacollector": 233, "submitit_delayed_launch": 233, "tensordictprioritizedreplaybuff": [233, 247], "prioritizedsampl": [233, 239], "sotr": 233, "binarydiscretetensorspec": 233, "unboundeddiscretetensorspec": [233, 241, 248], "tensordictrecord": 233, "videorecord": [233, 241], "get_available_librari": 233, "braxwrapp": 233, "dmcontrolenv": [233, 239, 243, 248], "dmcontrolwrapp": 233, "jumanjienv": 233, "jumanjiwrapp": 233, "vmasenv": 233, "vmaswrapp": 233, "actorcriticwrapp": 233, "additivegaussianwrapp": 233, "ornsteinuhlenbeckprocesswrapp": [233, 239], "is_tensordict_compat": 233, "ensure_tensordict_compat": 233, "qvaluehook": 233, "distributionalqvaluehook": 233, "duelingcnndqnet": [233, 240], "distributionaldqnnet": 233, "lstmnet": 233, "dreameractor": 233, "obsencod": 233, "obsdecod": 233, "rssmprior": 233, "rssmposterior": 233, "reset_nois": 233, "cemplann": 233, "mpcplannerbas": 233, "mppiplann": 233, "independentnorm": 233, "truncatednorm": 233, "tanhdelta": [233, 239], "onehotcategor": 233, "inv_softplu": 233, "distributionaldqnloss": [233, 240], "iqlloss": 233, "reinforceloss": 233, "dreameractorloss": 233, "dreamermodelloss": 233, "dreamervalueloss": 233, "gae": [233, 241], "tdestim": 233, "generalized_advantage_estim": 233, "vec_generalized_advantage_estim": 233, "vec_td_lambda_return_estim": 233, "vec_td_lambda_advantage_estim": [233, 239, 240], "td_lambda_return_estim": 233, "td_lambda_advantage_estim": 233, "td_advantage_estim": 233, "distance_loss": 233, "hold_out_net": [233, 239], "hold_out_param": 233, "softupd": [233, 239], "hardupd": [233, 239], "batchsubsampl": [233, 237], "clearcudacach": 233, "countframeslog": 233, "logreward": [233, 237], "optimizerhook": 233, "replaybuffertrain": [233, 237], "rewardnorm": 233, "selectkei": [233, 237], "trainerhookbas": [233, 237], "updateweight": [233, 237], "make_a2c_loss": 233, "make_a2c_model": 233, "make_collector_offpolici": 233, "make_collector_onpolici": 233, "make_ddpg_actor": [233, 239], "make_ddpg_loss": 233, "make_dqn_actor": 233, "make_dqn_loss": 233, "make_ppo_loss": 233, "make_redq_loss": 233, "make_redq_model": 233, "make_replay_buff": [233, 239], "make_sac_loss": 233, "make_sac_model": 233, "make_target_updat": 233, "parallel_env_constructor": [233, 239], "sync_async_collector": 233, "sync_sync_collector": 233, "correct_for_frame_skip": 233, "get_stats_random_rollout": 233, "csvlogger": 233, "mlflowlogg": 233, "wandblogg": 233, "get_logg": 233, "generate_exp_nam": 233, "journei": 234, "guid": [234, 239, 240], "textbook": 234, "highlight": 234, "ever": 234, "bump": 234, "think": [234, 241, 248], "benefit": 234, "pr": 234, "outer": [237, 239, 240, 248], "believ": 237, "scheme": [237, 248], "substenti": 237, "_pre_steps_log_hook": 237, "_pre_optim_hook": 237, "sub_batch": 237, "_post_loss_hook": 237, "_post_optim_hook": 237, "post_optim": 237, "_post_optim_log": 237, "post_optim_log": 237, "_post_steps_hook": 237, "_post_steps_log_hook": 237, "post_steps_log": 237, "comment": [237, 240, 247], "categori": 237, "extens": 237, "reserv": 237, "three": [237, 241, 244], "logginghook": 237, "logging_hook": 237, "save_dict": 237, "some_valu": 237, "torchsnapshot": 237, "ckpt_backend": 237, "pt": [237, 245], "filepath": 237, "select_kei": 237, "save_train": 237, "load_from_fil": 237, "perfectli": [237, 239, 244], "intern": 238, "author": [239, 240, 241, 244], "vincent": [239, 240, 241, 244], "moen": [239, 240, 241, 244], "topic": 239, "asid": 239, "strongli": 239, "familiar": [239, 240, 248], "transpar": [239, 240], "understood": [239, 240], "sota": [239, 240, 247], "illustr": [239, 240], "deepcopi": 239, "matplotlib": [239, 240, 241, 244, 248], "pyplot": [239, 240, 241, 244, 248], "plt": [239, 240, 241, 244, 248], "environmet": 239, "remaind": 239, "focu": [239, 241], "funciton": 239, "env_librari": 239, "env_task": 239, "env_arg": 239, "elif": [239, 240], "notimplementederror": 239, "friendli": 239, "special": [239, 248], "torchr": 239, "rescal": 239, "presum": 239, "leav": 239, "make_transformed_env": 239, "reward_sc": 239, "double_to_float_list": 239, "double_to_float_inv_list": 239, "dmcontrol": 239, "get_env_stat": 239, "proof_env": 239, "transform_state_dict": 239, "significantli": [239, 240], "leverag": [239, 248], "env_per_collector": 239, "make_t_env": 239, "copy_": 239, "parallel_env": [239, 247, 248], "maxim": [239, 244], "recal": [239, 240, 241], "materi": 239, "small": [239, 241, 248], "env_spec": 239, "actor_net": [239, 241], "num_lay": 239, "actor_modul": [239, 247], "q_net": 239, "qnet": 239, "make_record": 239, "recorder_obj": 239, "flavor": 239, "circular": 239, "pick": [239, 240], "arrai": 239, "buffer_s": [239, 240], "prb": 239, "buffer_scratch_dir": 239, "adjust": [239, 244], "magnitud": 239, "1000000": 239, "device_count": [239, 240, 245, 248], "500k": 239, "meaning": 239, "5000": [239, 240, 241], "myopic": [239, 240], "n_steps_forward": 239, "lr": [239, 240, 241, 244], "5e": 239, "weight_decai": 239, "utd": 239, "update_to_data": 239, "005": [239, 240], "tmp": 239, "semin": 239, "qnet_target": 239, "tight": 239, "natur": 239, "seamlessli": [239, 244], "traceback": [239, 240, 247], "__w": [239, 240, 247], "doc": [239, 240, 247], "coding_ddpg": [239, 240, 246], "677": 239, "1553": [239, 240], "got": 239, "adam": [239, 240, 241, 244], "optimizer_actor": 239, "optimizer_qnet": 239, "total_collection_step": 239, "scheduler1": 239, "lr_schedul": [239, 241, 244], "cosineannealinglr": [239, 241, 244], "t_max": 239, "scheduler2": 239, "temporarili": 239, "explain": [239, 245], "Then": [239, 241, 243], "fed": 239, "hood": [239, 244], "metadata": [239, 241, 248], "coupl": [239, 244], "earli": [239, 247], "rewards_ev": 239, "norm_factor_train": 239, "collected_fram": 239, "pbar": [239, 240, 241, 244], "r0": 239, "numel": [239, 240, 241, 245], "current_fram": [239, 240], "sampled_tensordict": 239, "backprop": 239, "next_valu": [239, 240], "value_est": 239, "pow": [239, 240], "sampled_tensordict_actor": 239, "actor_loss": 239, "p_in": 239, "p_dest": 239, "zip": [239, 242], "b_in": 239, "b_dest": 239, "td_record": 239, "r_evalu": 239, "set_descript": [239, 240, 241, 244], "4f": [239, 240, 241, 244], "plot": [239, 240, 241, 244], "mention": [239, 240, 248], "label": [239, 240], "legend": [239, 240], "xlabel": [239, 240, 244], "ylabel": [239, 240], "tight_layout": 239, "250": [239, 244], "100000": [239, 240], "batch_size_traj": 239, "simplic": [239, 240, 241, 245], "td_lambda": 239, "roughli": [239, 247], "four": [239, 244], "big": [239, 240, 241, 248], "incompat": 239, "rand_idx": 239, "titl": [239, 240, 241, 244], "labmda": 239, "minut": [239, 240, 241, 243, 244, 245, 247, 248], "51": [239, 241, 243, 244, 245, 246], "321": [239, 244, 246], "2479": [239, 240, 246], "mb": [239, 240, 241, 243, 244, 245, 246, 247, 248], "jupyt": [239, 240, 241, 242, 243, 244, 245, 247, 248], "ipynb": [239, 240, 241, 243, 244, 245, 247, 248], "galleri": [239, 240, 241, 242, 243, 244, 245, 247, 248], "sphinx": [239, 240, 241, 242, 243, 244, 245, 247, 248], "cartpol": [240, 248], "tabl": 240, "highest": 240, "lookup": 240, "amort": [240, 241], "conjunct": 240, "cart": 240, "pole": 240, "un": 240, "actuat": 240, "frictionless": 240, "upright": [240, 248], "balanc": [240, 248], "prerequisit": 240, "flesh": 240, "grayscal": [240, 248], "did": [240, 241, 248], "get_funct": 240, "is_notebook": 240, "shell": 240, "get_ipython": 240, "__class__": 240, "zmqinteractiveshel": 240, "qtconsol": 240, "terminalinteractiveshel": 240, "ipython": [240, 244], "nameerror": 240, "interpret": 240, "hopefulli": 240, "sensit": 240, "variat": 240, "2e": [240, 244], "aka": 240, "upd": 240, "n_optim": 240, "smooth": 240, "harder": [240, 247], "500000": 240, "256": [240, 241, 244], "eps_greedy_v": 240, "eps_greedy_val_env": 240, "mandatori": [240, 241, 244], "init_bia": 240, "observation_norm_state_dict": 240, "five": 240, "64x64": 240, "channel": 240, "motion": [240, 244], "simpler": 240, "test_env": 240, "9921": 240, "0786": 240, "trick": 240, "mathbb": 240, "rightarrow": 240, "concept": 240, "pessimist": [240, 241], "power": 240, "ubiquit": 240, "trainabl": [240, 245], "augment": 240, "make_model": 240, "dummy_env": 240, "output_s": 240, "unflatten_kei": 240, "fairli": 240, "params_target": 240, "actor_explor": 240, "flat": 240, "unflatten": 240, "params_flat": 240, "flatten_kei": 240, "coding_ppo": [240, 241, 246], "themselv": 240, "data_collector": 240, "coding_dqn": [240, 246], "479": [240, 244], "1031": 240, "q_": 240, "v_": 240, "defaultdict": [240, 241, 244], "logs_exp1": 240, "prev_traj_count": 240, "traj_length": 240, "enough": 240, "sampled_data": 240, "sampled_data_out": 240, "tdstep": 240, "exp_valu": 240, "mse_loss": 240, "gv": 240, "clip_grad_norm_": [240, 241, 244], "p_target": 240, "p_orig": 240, "grad_val": 240, "traj_count": 240, "eval_rollout": [240, 241], "traj_lengths_ev": 240, "mavg": 240, "05": [240, 241, 244, 245], "traj_count_ev": 240, "figsiz": [240, 241, 244], "subplot": [240, 241, 244, 248], "traj": 240, "savefig": 240, "albeit": [240, 244], "slowli": 240, "dqn_td0": 240, "png": 240, "capac": [240, 241], "logs_exp2": 240, "dqn_tdlambda": 240, "fewer": 240, "plot_both": 240, "frames_td0": 240, "frames_tdlambda": 240, "evals_td0": 240, "evals_tdlambda": 240, "mavgs_td0": 240, "mavgs_tdlambda": 240, "traj_count_td0": 240, "traj_count_tdlambda": 240, "td0": 240, "pixels_sav": 240, "imageio": 240, "mimwrit": 240, "mp4": 240, "fp": 240, "qvaluenetwork": 240, "nth": 240, "noticebli": 240, "collectorclass": 240, "till": 240, "steps_to_next_ob": 240, "worst": 240, "accuraci": 240, "fanci": 240, "148": [240, 244, 246], "demonstr": [241, 244, 248], "talk": 241, "repetit": 241, "six": 241, "consum": 241, "sophist": 241, "invent": 241, "wheel": 241, "overview": [241, 247], "theta_k": 241, "frac": 241, "pi_": 241, "ratio": 241, "exceed": 241, "discourag": [241, 244], "indispens": 241, "loader": 241, "analyz": 241, "lingua": 241, "franca": 241, "descript": 241, "normalparamextractor": 241, "samplerwithoutreplac": 241, "rest": [241, 247], "has_cuda": [241, 248], "3e": 241, "max_grad_norm": 241, "ourselv": [241, 248], "benefici": 241, "errat": 241, "hamper": 241, "reactiv": 241, "group": 241, "xy": 241, "exce": 241, "budget": 241, "50_000": 241, "sub_batch_s": 241, "num_epoch": 241, "intro": 241, "entropy_ep": 241, "generalist": 241, "interchang": [241, 245], "panel": 241, "charact": 241, "inverteddoublependulum": 241, "transmit": 241, "stai": 241, "thumb": 241, "supplementari": [241, 248], "told": 241, "stringent": 241, "nevertheless": 241, "concret": 241, "everyth": 241, "continuousbox": [241, 244, 247, 248], "environemnt": 241, "confid": 241, "succeed": [241, 244], "pack": [241, 248], "ran": 241, "mutli": 241, "boundari": 241, "f_": 241, "text": 241, "mu_": 241, "difficulti": [241, 248], "brought": 241, "scrictli": 241, "d_ob": 241, "d_action": 241, "extract": 241, "carrier": 241, "policy_modul": 241, "That": 241, "said": 241, "value_modul": [241, 247], "briefli": 241, "simplest": [241, 248], "oblivi": 241, "refil": 241, "conveni": [241, 244], "easiest": 241, "hide": 241, "awai": 241, "mathemat": 241, "deal": 241, "tradeoff": 241, "eval_str": 241, "tensordict_data": 241, "data_view": 241, "subdata": 241, "loss_val": 241, "loss_valu": [241, 247], "loss_object": 241, "loss_crit": 241, "loss_entropi": 241, "cum_reward_str": 241, "stepcount_str": 241, "param_group": 241, "lr_str": 241, "nice": 241, "noth": 241, "50000": 241, "00": [241, 244, 245, 246], "04": [241, 244, 245, 246], "218": [241, 244], "67it": [241, 244], "92": [241, 244, 245], "4619": 241, "0947": [241, 244], "0003": [241, 244], "231": [241, 244], "11it": [241, 244], "1648": 241, "19": [241, 244, 246], "3000": 241, "237": [241, 244], "64it": [241, 244], "1639": 241, "4000": 241, "84it": 241, "1847": 241, "21": [241, 243, 244], "07": [241, 244], "239": [241, 244], "39it": [241, 244], "0913": 241, "6000": 241, "25": [241, 244], "00it": 241, "0121": [241, 244], "7000": 241, "29": [241, 244], "02": [241, 244, 245], "236": [241, 244], "19it": 241, "9753": 241, "8000": 241, "56": [241, 244], "61it": [241, 244], "0160": 241, "9000": 241, "37": [241, 244], "238": [241, 244], "0696": [241, 244], "77it": 241, "1118": 241, "22": [241, 244, 245], "11000": 241, "43": [241, 244, 245], "70it": 241, "110": [241, 244], "6052": 241, "1285": 241, "12000": 241, "83it": 241, "1523": 241, "26": [241, 244, 245], "13000": 241, "54": [241, 244], "241": [241, 244], "05it": 241, "1439": 241, "28": [241, 244, 245], "14000": 241, "58": [241, 244, 246], "242": [241, 244], "1613": 241, "15000": 241, "41it": 241, "1871": [241, 244], "0002": [241, 244], "16000": 241, "86it": 241, "2108": 241, "23": [241, 244, 245, 246], "17000": 241, "243": [241, 244], "44it": [241, 244], "1971": [241, 244], "36": [241, 244], "18000": 241, "09it": 241, "1938": 241, "19000": 241, "22it": 241, "1983": 241, "40": [241, 244], "20000": 241, "96it": [241, 244], "1879": 241, "21000": 241, "75it": 241, "269": [241, 244], "0117": 241, "1901": [241, 244], "22000": 241, "31": [241, 244, 245], "55": [241, 244, 245], "56it": [241, 244], "23000": 241, "2106": 241, "48": [241, 244, 245], "24000": 241, "39": [241, 244, 245, 246], "45": [241, 244, 245], "245": [241, 244], "73it": 241, "2471": 241, "61": [241, 244, 245], "25000": 241, "2232": 241, "52": [241, 244], "26000": 241, "47": [241, 244], "65it": [241, 244], "2330": 241, "41": [241, 244, 245], "27000": 241, "246": [241, 244], "94it": [241, 244], "2600": 241, "28000": 241, "247": [241, 244], "63it": [241, 244], "2499": 241, "29000": 241, "59": [241, 244, 245], "87it": 241, "2428": 241, "60": [241, 244, 245, 247], "30000": 241, "240": [241, 244, 247, 248], "06it": 241, "2512": 241, "62": [241, 244], "31000": 241, "335": [241, 244, 247], "3509": 241, "2530": 241, "32000": 241, "40it": 241, "2455": 241, "66": [241, 244, 245], "33000": 241, "2506": 241, "68": [241, 244, 245], "34000": 241, "2581": 241, "70": [241, 244, 245], "35000": 241, "2441": 241, "72": [241, 244, 245], "36000": 241, "57": [241, 244, 245, 246, 247], "85it": 241, "2558": 241, "74": [241, 244, 245], "37000": 241, "53": [241, 244, 245], "34it": 241, "2615": 241, "76": [241, 244, 245], "38000": 241, "2664": 241, "78": [241, 244, 245, 246], "39000": 241, "2565": 241, "80": [241, 244, 245], "40000": 241, "2616": 241, "82": [241, 244, 245], "41000": 241, "49": [241, 244, 245], "138": [241, 244], "6461": 241, "2625": 241, "84": [241, 244, 245], "42000": 241, "12it": 241, "2702": 241, "86": [241, 244], "43000": 241, "49it": [241, 244], "2748": 241, "88": [241, 244, 245], "44000": 241, "35it": [241, 244], "2750": 241, "90": [241, 244], "45000": 241, "27it": [241, 244], "2796": 241, "46000": 241, "09": [241, 244], "69it": 241, "2696": 241, "47000": 241, "97it": [241, 244], "2725": 241, "65": [241, 244, 245], "96": [241, 244, 245], "48000": 241, "04it": [241, 244], "2795": 241, "49000": 241, "2716": 241, "45it": [241, 244], "2746": 241, "cap": 241, "bit": 241, "325": [241, 244, 246], "tutorials_python": 242, "tutorials_jupyt": 242, "distinct": 243, "humanoid": [243, 248], "walk": [243, 248], "env1": 243, "env1_obs_kei": 243, "observation_stand": 243, "env2": 243, "env2_obs_kei": 243, "observation_walk": 243, "tdreset1": 243, "tdreset2": 243, "tdreset": 243, "67": [243, 244], "backbon": [243, 247], "policy_common": 243, "policy_stand": 243, "policy_walk": 243, "seq": 243, "But": 243, "env1_mak": 243, "env2_mak": 243, "_single_task": 243, "td_rollout": 243, "shown": 243, "579": [243, 244, 246], "multi_task": [243, 246], "ground": 244, "freeli": 244, "inspir": 244, "sep": 244, "touch": 244, "undertaken": 244, "broader": 244, "challeng": [244, 245], "wider": 244, "algebra": 244, "acquaint": 244, "avenu": 244, "unsqueezetransform": 244, "_apply_to_composit": 244, "default_x": 244, "pi": 244, "default_i": 244, "_set_se": 244, "torqu": 244, "upward": 244, "angular": 244, "convent": 244, "dot": 244, "_t": 244, "sin": 244, "theta_t": 244, "rad": 244, "sec": 244, "gravit": 244, "theta_": 244, "001": 244, "angl": 244, "deleg": 244, "new_th": 244, "plu": 244, "new_thdot": 244, "thdot": 244, "g_forc": 244, "max_torqu": 244, "angle_norm": 244, "max_spe": 244, "zeros_lik": 244, "is_empti": 244, "gen_param": 244, "high_th": 244, "high_thdot": 244, "low_th": 244, "low_thdot": 244, "rng": 244, "lazili": 244, "shortcut": [244, 248], "characterist": 244, "irrelev": 244, "_make_spec": 244, "td_param": 244, "make_composite_from_td": 244, "commong": 244, "pseudo": 244, "pendulumenv": 244, "render_mod": 244, "human": 244, "rgb_arrai": 244, "render_fp": 244, "random_": 244, "_make_step": 244, "staticmethod": 244, "hyperparam": 244, "complic": [244, 248], "showcas": 244, "skeleton": 244, "_apply_transform": [244, 248], "_inv_apply_transform": [244, 248], "eventu": 244, "subset": [244, 245], "unitari": 244, "sine": 244, "cosin": 244, "sintransform": 244, "costransform": 244, "co": 244, "t_sin": 244, "t_co": 244, "cat_transform": 244, "mdp": 244, "convin": 244, "simplifi": 244, "simple_rollout": 244, "_data": 244, "unexplor": 244, "assumpt": 244, "recreat": 244, "20_000": 244, "init_td": 244, "traj_return": 244, "gn": 244, "last_reward": 244, "is_ipython": 244, "inlin": 244, "get_backend": 244, "ion": 244, "gcf": 244, "clear_output": 244, "625": 244, "9981": 244, "3292": 244, "48it": 244, "8997": 244, "7032": 244, "696": 244, "57it": 244, "8466": 244, "0202": 244, "807": 244, "62it": 244, "2897": 244, "6322": 244, "0338": 244, "4880": 244, "504": 244, "1698": 244, "9674": 244, "188": 244, "0643": 244, "9703": 244, "127": 244, "3363": 244, "0207": 244, "048": 244, "3501": 244, "5927": 244, "5956": 244, "7665": 244, "732": 244, "3527": 244, "0354": 244, "468": 244, "2219": 244, "2999": 244, "66it": 244, "8446": 244, "7448": 244, "961": 244, "7403": 244, "5034": 244, "411": 244, "9381": 244, "7937": 244, "619": 244, "8760": 244, "1022": 244, "79": [244, 245, 248], "6977": 244, "0331": 244, "987": 244, "8657": 244, "4508": 244, "919": 244, "9990": 244, "8757": 244, "921": 244, "9021": 244, "9585": 244, "518": 244, "6612": 244, "6255": 244, "648": 244, "7181": 244, "7913": 244, "089": 244, "0750": 244, "5913": 244, "596": 244, "8299": 244, "4152": 244, "9993": 244, "4527": 244, "2555": 244, "551": 244, "3655": 244, "3651": 244, "6557": 244, "3352": 244, "9137": 244, "7104": 244, "8728": [244, 247], "144": 244, "8547": 244, "6320": 244, "871": 244, "7414": 244, "4717": 244, "211": 244, "7268": 244, "1833": 244, "6634": 244, "3899": 244, "6083": 244, "3508": 244, "5830": 244, "6835": 244, "8209": 244, "3483": 244, "7688": 244, "599": 244, "8693": 244, "3066": 244, "008": 244, "5190": 244, "2003": 244, "5916": 244, "0074": 244, "053": 244, "3596": 244, "3337": 244, "3250": 244, "4695": 244, "556": 244, "4941": 244, "0976": 244, "436": 244, "5073": 244, "5455": 244, "6267": 244, "7900": 244, "7116": 244, "0649": 244, "206": 244, "9751": 244, "0522": 244, "328": 244, "0844": 244, "7387": 244, "845": 244, "92it": 244, "2246": 244, "5251": 244, "3373": 244, "9479": 244, "25it": 244, "2709": 244, "3046": 244, "36it": 244, "3977": 244, "3212": 244, "642": 244, "3854": 244, "9375": 244, "837": 244, "50it": 244, "6287": 244, "6260": 244, "54it": 244, "7219": 244, "8860": 244, "58it": 244, "6979": 244, "2648": 244, "59it": 244, "4459": 244, "3500": 244, "3812": 244, "3433": 244, "222": 244, "4411": 244, "6690": 244, "3777": 244, "1538": 244, "322": 244, "8743": 244, "4807": 244, "22e": 244, "3545": 244, "0107": 244, "85": [244, 245], "2255": 244, "3131": 244, "1588": 244, "4491": 244, "076": 244, "63": 244, "2080": 244, "2076": 244, "831": 244, "7440": 244, "6878": 244, "102": 244, "2344": 244, "1025": 244, "902": 244, "9207": 244, "3350": 244, "2087": 244, "2254": 244, "9928": 244, "3105": 244, "69": [244, 245], "6532": 244, "8399": 244, "224": 244, "5124": 244, "8030": 244, "71": [244, 245], "6501": 244, "4525": 244, "89": 244, "8541": 244, "8998": 244, "796e": 244, "73": [244, 245], "2027": 244, "1556": 244, "3472": 244, "3081": 244, "396": 244, "75": 244, "3959": 244, "7512": 244, "3240": 244, "8101": 244, "77": 244, "2314": 244, "4188": 244, "295": 244, "9779": 244, "5535": 244, "5627": 244, "6739": 244, "8125": 244, "6816": 244, "755": 244, "6262": 244, "0773": 244, "8989": 244, "1044": 244, "83": [244, 245], "4514": 244, "0407": 244, "0062": 244, "4916": 244, "4074": 244, "0404": 244, "3795": 244, "3577": 244, "122": [244, 248], "3650": 244, "4141": 244, "134": 244, "9704": 244, "9697": 244, "1513": 244, "4501": 244, "285": 244, "2994": 244, "4022": 244, "91": 244, "2008": 244, "9061": 244, "558": 244, "0307": 244, "9752": 244, "93": 244, "5623": 244, "5012": 244, "95it": 244, "2079": 244, "5742": 244, "125": 244, "13it": 244, "2724": 244, "3876": 244, "2708": 244, "7700": 244, "058": 244, "97": 244, "37it": 244, "1960": 244, "1463": 244, "3716": 244, "0288": 244, "2872": 244, "0933": 244, "53it": 244, "9320": 244, "1261": 244, "1747": 244, "4484": 244, "0453": 244, "3530": 244, "209": 244, "103": 244, "3564": 244, "3918": 244, "104": 244, "60it": 244, "4985": 244, "105": 244, "5372": 244, "6419": 244, "106": 244, "4172": 244, "1033": 244, "107": 244, "5129": 244, "1738": 244, "982": 244, "108": 244, "2507": 244, "6379": 244, "109": 244, "2202": 244, "9865": 244, "6413": 244, "0470": 244, "111": 244, "7870": 244, "4711": 244, "386": 244, "112": 244, "8113": 244, "5438": 244, "113": 244, "7211": 244, "2379": 244, "054": 244, "4828": 244, "5023": 244, "115": [244, 247], "9169": 244, "8205": 244, "171": 244, "116": 244, "0791": 244, "4240": 244, "117": 244, "0138": 244, "3126": 244, "651": 244, "118": 244, "6676": 244, "3220": 244, "119": 244, "0057": 244, "120": 244, "4148": 244, "9243": 244, "121": [244, 248], "2873": 244, "2469": 244, "1979": 244, "1586": 244, "123": 244, "6911": 244, "8230": 244, "124": 244, "7729": 244, "9686": 244, "126": 244, "2032": 244, "0313": 244, "656": 244, "9053": 244, "4081": 244, "9441": 244, "3413": 244, "5864": 244, "006": 244, "129": 244, "0038": 244, "5304": 244, "7869": 244, "2975": 244, "131": 244, "14it": 244, "7712": 244, "1618": 244, "132": 244, "28it": 244, "7366": 244, "133": 244, "38it": 244, "4165": 244, "0684": 244, "188e": 244, "46it": 244, "8963": 244, "1896": 244, "135": 244, "51it": 244, "7390": 244, "136": 244, "9629": 244, "9319": 244, "169": 244, "137": 244, "3621": 244, "7266": 244, "1210": 244, "139": 244, "8384": 244, "5619": 244, "140": 244, "0575": 244, "5144": 244, "141": 244, "8710": 244, "7681": 244, "142": 244, "8321": 244, "8516": 244, "945": 244, "143": 244, "0932": 244, "2351": 244, "773": 244, "0999": 244, "1744": 244, "145": 244, "2118": 244, "8154": 244, "146": 244, "7484": 244, "4035": 244, "147": 244, "5152": 244, "0088": 244, "5423": 244, "7286": 244, "149": 244, "7692": 244, "1465": 244, "150": 244, "0797": 244, "1392": 244, "151": 244, "9611": 244, "9006": 244, "152": 244, "7773": 244, "6767": 244, "153": 244, "4340": 244, "2778": 244, "154": 244, "5407": 244, "8302": 244, "595": 244, "155": 244, "4597": 244, "1627": 244, "156": 244, "7073": 244, "3922": 244, "157": 244, "7815": 244, "9858": 244, "158": 244, "6953": 244, "7051": 244, "159": 244, "6165": 244, "0605": 244, "3321": 244, "9367": 244, "161": 244, "3238": 244, "1825": 244, "162": 244, "6537": 244, "6867": 244, "163": [244, 245, 247], "8555": 244, "0956": 244, "164": 244, "3248": 244, "0159": 244, "165": 244, "2370": 244, "7480": 244, "166": 244, "8993": 244, "8285": 244, "167": 244, "5465": 244, "3198": 244, "168": 244, "9088": 244, "3417": 244, "2199": 244, "2993": 244, "170": 244, "7042": 244, "1570": 244, "6141": 244, "284": 244, "172": 244, "9925": 244, "2946": 244, "173": 244, "5968": 244, "174": 244, "1712": 244, "175": 244, "6813": 244, "9453": 244, "176": 244, "5664": 244, "177": 244, "3610": 244, "9569": 244, "178": 244, "0602": 244, "9931": 244, "179": 244, "7767": 244, "8155": 244, "180": 244, "0498": 244, "7331": 244, "568": 244, "181": 244, "0781": 244, "1768": 244, "182": 244, "9178": 244, "6354": 244, "183": 244, "1244": 244, "8991": 244, "336": 244, "184": 244, "8262": 244, "2116": 244, "185": 244, "2508": 244, "7676": 244, "186": 244, "0428": 244, "2621": 244, "187": 244, "0812": 244, "9802": 244, "199": 244, "9924": 244, "0870": 244, "189": 244, "3196": 244, "2363": 244, "190": 244, "9864": 244, "0182": 244, "191": 244, "0345": 244, "9245": 244, "192": 244, "9191": 244, "1752": 244, "491": 244, "193": 244, "1470": 244, "8907": 244, "257": 244, "194": 244, "1925": 244, "676": 244, "195": 244, "1042": 244, "5107": 244, "842": 244, "196": 244, "0179": 244, "2845": 244, "197": 244, "9784": 244, "0536": 244, "198": 244, "8914": 244, "3151": 244, "2599": 244, "7948": 244, "4072": 244, "201": 244, "5997": 244, "8325": 244, "202": 244, "8960": 244, "4193": 244, "203": 244, "0600": 244, "8070": 244, "204": 244, "0523": 244, "0025": 244, "205": 244, "5027": 244, "0148": 244, "736": 244, "0363": 244, "3280": 244, "207": 244, "1571": 244, "208": 244, "8204": 244, "6373": 244, "9863": 244, "2612": 244, "0748": 244, "9467": 244, "8050": 244, "6954": 244, "291": 244, "212": 244, "4752": 244, "1008": 244, "016": 244, "213": 244, "8463": 244, "1723": 244, "214": 244, "6868": 244, "215": 244, "5380": 244, "1126": 244, "891": 244, "216": 244, "2657": 244, "2562": 244, "217": 244, "5513": 244, "0549": 244, "566": 244, "0561": 244, "1288": 244, "607": 244, "219": 244, "3470": 244, "0052": 244, "220": 244, "4686": 244, "0242": 244, "941": 244, "221": 244, "8202": 244, "9284": 244, "1519": 244, "799": 244, "223": 244, "9705": 244, "0056": 244, "027": 244, "9204": 244, "2680": 244, "991": 244, "225": 244, "0383": 244, "226": 244, "1037": 244, "7906": 244, "227": 244, "3671": 244, "5151": 244, "228": 244, "9767": 244, "9817": 244, "229": 244, "6483": 244, "0955": 244, "230": 244, "6856": 244, "5156": 244, "7647": 244, "4922": 244, "232": 244, "3724": 244, "4932": 244, "233": 244, "3750": 244, "873": 244, "234": 244, "7854": 244, "2685": 244, "839": 244, "235": 244, "2902": 244, "1122": 244, "618": 244, "0771": 244, "428": 244, "0086": 244, "324": 244, "3233": 244, "3264": 244, "4450": 244, "1583": 244, "3840": 244, "3740": 244, "2403": 244, "0024": 244, "569": 244, "1011": [244, 247], "0112": 244, "251": 244, "6538": 244, "0162": 244, "9349": 244, "7379": 244, "8236": 244, "0259": 244, "8227": 244, "15it": 244, "4424": 244, "6078": 244, "1075": 244, "2630": 244, "248": 244, "78it": 244, "2208": 244, "0820": 244, "684": 244, "249": 244, "2719": 244, "7146": 244, "364": 244, "82it": 244, "4423": 244, "9679": 244, "4463": 244, "5761": 244, "252": 244, "0347": 244, "253": 244, "76it": 244, "4200": 244, "0638": 244, "254": 244, "99it": 244, "4313": 244, "0403": 244, "074": 244, "16it": 244, "6630": 244, "0239": 244, "29it": 244, "1293": 244, "0677": 244, "638": 244, "8976": 244, "0517": 244, "092": 244, "258": 244, "3424": 244, "1411": 244, "259": 244, "0897": 244, "0417": 244, "013": 244, "260": 244, "9226": 244, "0016": 244, "4881": 244, "261": 244, "1743": 244, "0167": 244, "262": 244, "1668": 244, "0481": 244, "608": 244, "263": 244, "1277": 244, "0092": 244, "8715": 244, "264": 244, "0661": 244, "0067": 244, "7747": 244, "265": 244, "2779": 244, "0430": 244, "9998": 244, "266": 244, "9067": 244, "0251": 244, "015": 244, "267": 244, "4558": 244, "0186": 244, "268": 244, "1413": 244, "1785": 244, "0324": 244, "562": 244, "270": 244, "2759": 244, "826": 244, "271": 244, "1844": 244, "0168": 244, "587": 244, "272": 244, "3009": 244, "0362": 244, "273": 244, "7069": 244, "274": 244, "0793": 244, "5345": 244, "275": 244, "0513": 244, "0211": 244, "088": 244, "276": 244, "4400": 244, "0433": 244, "866": 244, "277": 244, "2846": 244, "0157": 244, "427": 244, "278": 244, "2392": 244, "1046": 244, "408": 244, "279": 244, "1373": 244, "5125": 244, "280": 244, "1448": 244, "0560": 244, "678": 244, "281": 244, "5425": 244, "0506": 244, "282": 244, "5210": 244, "0940": 244, "334": 244, "283": 244, "0558": 244, "876": 244, "2645": 244, "0130": 244, "5357": 244, "7399": 244, "8931": 244, "286": 244, "2394": 244, "9803": 244, "287": [244, 246], "6626": 244, "8780": 244, "288": 244, "2521": 244, "0027": 244, "289": 244, "1452": 244, "0534": 244, "877": 244, "290": 244, "2637": 244, "0477": 244, "519": 244, "2021": 244, "0382": 244, "742": 244, "292": 244, "1473": 244, "0208": 244, "293": 244, "3379": 244, "0450": 244, "294": 244, "2145": 244, "0270": 244, "3688": 244, "7527": 244, "296": 244, "8627": 244, "297": 244, "2180": 244, "0066": 244, "298": 244, "0373": 244, "0055": 244, "299": 244, "5879": 244, "9401": 244, "6223": 244, "8889": 244, "301": 244, "2797": 244, "1580": 244, "302": 244, "9936": 244, "4949": 244, "303": 244, "4579": 244, "9796": 244, "304": 244, "0070": 244, "9057": 244, "305": 244, "2540": [244, 248], "746": 244, "306": 244, "5077": 244, "1406": 244, "307": 244, "7956": 244, "7657": 244, "308": 244, "9119": 244, "1691": 244, "309": 244, "2513": 244, "3036": 244, "310": 244, "0779": 244, "0079": 244, "8692": 244, "311": 244, "9439": 244, "0460": 244, "592": 244, "312": 244, "8099": 244, "0491": 244, "313": 244, "516": 244, "314": 244, "8046": 244, "0147": 244, "404": 244, "315": 244, "0122": 244, "0017": 244, "6365": 244, "316": 244, "1499": 244, "0109": 244, "717": 244, "317": 244, "0034": 244, "4328": 244, "318": 244, "1559": 244, "0010": 244, "3445": 244, "319": 244, "9434": 244, "2862": 244, "320": [244, 248], "9168": 244, "0020": 244, "7494": 244, "7114": 244, "004": 244, "2146": 244, "323": 244, "8207": 244, "0008": 244, "093": 244, "0291": 244, "0036": 244, "733": 244, "0031": 244, "0059": 244, "9693": 244, "326": 244, "4539": 244, "4015": 244, "327": 244, "2260": 244, "0032": 244, "8712": 244, "2449": 244, "0100": 244, "7291": 244, "329": 244, "0009": 244, "5744": 244, "330": 244, "9889": 244, "0205": 244, "563": 244, "331": 244, "9478": 244, "0578": 244, "332": 244, "3117": 244, "3474": 244, "333": 244, "3562": 244, "2592": 244, "2034": 244, "0292": 244, "6824": 244, "2522": 244, "565": 244, "337": 244, "9085": 244, "0041": 244, "798": 244, "338": 244, "0409": 244, "0278": 244, "339": 244, "0081": 244, "077": 244, "340": 244, "1038": 244, "0184": 244, "341": 244, "5232": 244, "2485": 244, "948": 244, "342": 244, "3397": 244, "343": 244, "1390": 244, "1946": 244, "344": 244, "3108": 244, "9773": 244, "345": 244, "9628": 244, "8776": 244, "346": 244, "2432": 244, "593": 244, "347": 244, "4281": 244, "3059": 244, "348": 244, "9241": 244, "0303": 244, "349": 244, "4747": 244, "3566": 244, "350": 244, "5687": 244, "1356": 244, "351": 244, "9195": 244, "2604": 244, "352": 244, "5555": 244, "353": 244, "4093": 244, "354": 244, "3465": 244, "0412": 244, "498": 244, "355": 244, "4612": 244, "0659": 244, "888": 244, "356": 244, "0915": 244, "6161": 244, "357": 244, "4199": 244, "6984": 244, "358": 244, "1434": 244, "5982": 244, "359": 244, "6443": 244, "8121": 244, "360": 244, "9721": 244, "559": 244, "361": 244, "5386": 244, "0893": 244, "362": 244, "1242": [244, 247], "0828": 244, "507": 244, "363": 244, "8708": 244, "1920": 244, "548": 244, "9075": 244, "4399": 244, "365": 244, "6237": 244, "0761": 244, "929": 244, "366": 244, "1787": 244, "1726": 244, "367": 244, "4725": 244, "368": 244, "0309": 244, "502": 244, "369": 244, "6823": 244, "0098": 244, "370": 244, "2397": 244, "371": 244, "4634": 244, "0099": 244, "699": 244, "372": 244, "9857": 244, "9962": 244, "373": 244, "9991": 244, "2484": 244, "374": 244, "8959": 244, "737": 244, "375": 244, "1581": 244, "376": 244, "8401": 244, "377": 244, "9562": 244, "0272": 244, "378": 244, "9824": 244, "4239": 244, "379": 244, "2841": 244, "380": 244, "93it": 244, "9922": 244, "4334": 244, "381": 244, "9613": 244, "6321": 244, "382": 244, "0516": 244, "8370": 244, "383": 244, "9549": 244, "7350": 244, "384": 244, "43it": 244, "1794": 244, "4433": 244, "385": 244, "5432": 244, "738": 244, "52it": 244, "9084": 244, "387": 244, "55it": 244, "8010": 244, "388": 244, "9532": 244, "6513": 244, "389": 244, "8265": 244, "0729": 244, "390": 244, "8901": 244, "3721": 244, "391": 244, "8347": 244, "7444": 244, "392": 244, "6952": 244, "7052": 244, "393": 244, "4568": 244, "1346": 244, "394": 244, "2150": 244, "0438": 244, "943": 244, "395": 244, "2904": 244, "9225": 244, "3052": 244, "0075": 244, "8393": 244, "397": 244, "1268": 244, "398": 244, "4296": 244, "1481": 244, "399": 244, "5538": 244, "3458": 244, "2728": [244, 248], "1060": 244, "401": 244, "7887": 244, "2564": 244, "402": 244, "9080": 244, "5411": 244, "403": 244, "1620": 244, "7441": 244, "7703": 244, "405": 244, "6127": 244, "3102": 244, "406": 244, "4175": 244, "5960": 244, "407": 244, "0043": 244, "8779": 244, "409": 244, "6928": 244, "410": 244, "2700": 244, "022": 244, "0357": 244, "0019": 244, "028": 244, "412": 244, "0935": 244, "0060": 244, "7993": 244, "413": 244, "9033": 244, "0065": 244, "6378": 244, "414": 244, "9597": 244, "415": 244, "0110": 244, "0005": 244, "4133": 244, "416": 244, "8585": 244, "0042": 244, "6746": 244, "417": 244, "7328": 244, "1174": 244, "4613": 244, "418": 244, "2442": 244, "0233": 244, "419": 244, "74it": 244, "3477": 244, "018": 244, "420": 244, "6869": 244, "0289": 244, "4806": 244, "421": 244, "1528": 244, "0134": 244, "2848": 244, "422": 244, "1684": 244, "2155": 244, "423": 244, "0116": 244, "5719": 244, "424": 244, "0214": 244, "2801": 244, "425": 244, "4760": 244, "0224": 244, "6168": 244, "426": 244, "2511": 244, "0045": 244, "1865": 244, "8317": 244, "1415": 244, "2207": 244, "0841": 244, "429": 244, "0849": 244, "985": 244, "430": 244, "9495": 244, "0372": 244, "9485": 244, "431": 244, "9242": 244, "0039": 244, "4826": 244, "432": 244, "1635": 244, "433": 244, "9218": 244, "1003": 244, "434": 244, "7468": 244, "1522": 244, "435": 244, "7471": 244, "5852": 244, "9354": 244, "0013": 244, "037": 244, "437": 244, "3633": 244, "0187": 244, "061": 244, "438": 244, "7091": 244, "0212": 244, "439": 244, "0950": 244, "6344": 244, "440": 244, "1945": 244, "5790": 244, "441": 244, "6370": 244, "7047": 244, "442": 244, "9447": 244, "0551": 244, "443": 244, "0674": 244, "0146": 244, "046": 244, "444": 244, "0087": 244, "0247": 244, "445": 244, "2640": 244, "0129": 244, "8987": 244, "446": 244, "1670": 244, "5398": 244, "447": 244, "9180": 244, "7940": 244, "448": 244, "2948": 244, "0588": 244, "449": 244, "0486": 244, "0029": 244, "1134": 244, "450": 244, "3267": 244, "5681": 244, "451": 244, "0151": 244, "452": 244, "6647": 244, "0316": 244, "453": 244, "5449": 244, "0209": 244, "097": 244, "454": 244, "9321": 244, "3687": 244, "953": 244, "455": 244, "9511": 244, "2701": 244, "456": 244, "0406": 244, "8281": 244, "457": 244, "0379": 244, "458": 244, "2470": 244, "0437": 244, "459": 244, "5843": 244, "0072": 244, "460": 244, "6838": 244, "3447": 244, "461": 244, "7313": 244, "0355": 244, "462": 244, "9268": 244, "0265": 244, "9834": 244, "463": 244, "8536": 244, "9786": 244, "464": 244, "7232": 244, "465": 244, "9096": 244, "4422": 244, "466": 244, "3227": 244, "0026": 244, "467": 244, "9565": 244, "9563": 244, "9941": 244, "1284": 244, "469": 244, "1401": 244, "2850": 244, "470": 244, "1807": 244, "8859": 244, "471": 244, "0268": 244, "2992": 244, "472": 244, "7436": 244, "0048": 244, "034": 244, "473": 244, "7046": 244, "0352": [244, 248], "474": 244, "2023": 244, "3258": 244, "515": 244, "475": 244, "0141": 244, "9798": 244, "476": 244, "4474": 244, "0912": 244, "477": 244, "9181": 244, "5476": 244, "478": 244, "26it": 244, "1264": 244, "3269": 244, "0714": 244, "0030": 244, "5317": 244, "480": [244, 245], "5477": 244, "0255": 244, "8628": 244, "481": 244, "1258": 244, "0015": 244, "482": 244, "9650": 244, "4266": 244, "483": 244, "8081": 244, "0004": 244, "4455": 244, "484": 244, "5812": 244, "1719": 244, "485": 244, "1741": 244, "486": 244, "1595": 244, "0089": 244, "936": 244, "487": 244, "1667": 244, "3892": 244, "488": 244, "3824": 244, "0093": 244, "6528": 244, "489": 244, "1727": 244, "1435": 244, "059": 244, "490": 244, "0916": 244, "0018": 244, "4518": 244, "9310": 244, "0006": 244, "3553": 244, "492": 244, "9972": 244, "4515": 244, "493": 244, "9493": 244, "8759": 244, "494": 244, "3700": 244, "495": 244, "0269": 244, "4107": 244, "496": 244, "6094": 244, "497": 244, "9116": 244, "1518": 244, "6022": 244, "0047": 244, "2026": 244, "499": 244, "8009": 244, "0007": 244, "1845": 244, "6948": 244, "501": 244, "0971": 244, "0387": 244, "951": 244, "2885": 244, "503": 244, "0894": 244, "2552": 244, "0191": 244, "505": 244, "8276": 244, "506": 244, "9520": 244, "0037": 244, "5835": 244, "0374": 244, "7556": 244, "508": 244, "0579": 244, "0399": 244, "9277": 244, "509": 244, "0094": 244, "7127": 244, "510": 244, "0119": 244, "511": 244, "6013": 244, "0220": 244, "8064": 244, "2684": 244, "8179": 244, "513": 244, "4730": 244, "0046": 244, "5481": 244, "514": 244, "0234": 244, "4331": 244, "8143": 244, "2915": [244, 247], "9051": 244, "0353": 244, "9127": 244, "517": 244, "0527": 244, "6465": 244, "7579": 244, "2010": 244, "3927": 244, "5383": 244, "862": 244, "520": 244, "7386": 244, "1014": 244, "521": 244, "9163": 244, "4487": 244, "522": 244, "5626": 244, "523": 244, "91it": 244, "2899": 244, "0113": 244, "524": 244, "10it": 244, "6441": 244, "0044": 244, "3965": 244, "525": 244, "5001": 244, "2060": 244, "526": 244, "8905": 244, "4168": 244, "527": 244, "42it": 244, "4458": 244, "0012": 244, "051": 244, "528": 244, "9446": 244, "3096": 244, "529": 244, "2399": 244, "530": 244, "4471": 244, "531": 244, "1270": [244, 248], "0023": 244, "532": 244, "533": 244, "6550": 244, "583": 244, "534": 244, "1092": 244, "0049": 244, "787": 244, "535": 244, "7641": 244, "6674": 244, "536": 244, "0083": 244, "6375": 244, "537": 244, "1713": 244, "4933": 244, "538": 244, "3557": 244, "3964": 244, "539": 244, "0040": 244, "4129": 244, "540": 244, "7999": 244, "3176": 244, "541": 244, "2613": 244, "4742": 244, "542": 244, "1826": 244, "934": 244, "543": 244, "3158": 244, "544": 244, "3686": 244, "4047": 244, "545": 244, "7943": 244, "0902": 244, "546": 244, "3889": 244, "547": 244, "4309": 244, "4762": 244, "1662": 244, "9526": 244, "549": 244, "2170": 244, "0520": 244, "4367": 244, "550": 244, "4584": 244, "6931": 244, "0306": 244, "752": 244, "552": 244, "9054": 244, "2062": 244, "553": 244, "9523": 244, "4382": 244, "554": 244, "3534": 244, "0136": 244, "663": 244, "555": 244, "0279": 244, "0171": 244, "5679": 244, "4345": 244, "0145": 244, "4652": 244, "557": 244, "1205": 244, "0091": 244, "4838": 244, "0630": 244, "1721": 244, "3604": 244, "560": 244, "1695": 244, "561": 244, "6994": 244, "3646": 244, "0192": 244, "4547": 244, "564": 244, "2580": 244, "2356": 244, "1397": 244, "8400": 244, "7309": 244, "567": 244, "2400": 244, "0101": 244, "8539": 244, "1256": 244, "4851": 244, "0284": 244, "570": 244, "7214": 244, "2575": 244, "571": 244, "3996": 244, "572": 244, "2542": 244, "4089": 244, "573": [244, 245, 246], "5782": 244, "0071": 244, "7487": 244, "574": 244, "3665": 244, "0050": 244, "7797": 244, "575": 244, "5660": 244, "1355": 244, "932": 244, "576": 244, "8266": 244, "577": 244, "3782": 244, "743": [244, 247], "578": 244, "1228": 244, "2931": 244, "043": 244, "6242": 244, "580": 244, "7491": 244, "6910": 244, "581": 244, "2258": 244, "0262": 244, "582": 244, "2386": 244, "0249": 244, "816": 244, "2947": 244, "2122": 244, "584": 244, "0096": 244, "0124": 244, "585": 244, "2979": 244, "0156": 244, "4948": 244, "586": 244, "3268": 244, "0369": 244, "6409": 244, "4034": 244, "4395": 244, "588": 244, "8407": 244, "4432": 244, "589": 244, "0069": 244, "3628": 244, "590": 244, "3101": 244, "591": 244, "3404": 244, "2912": 244, "2964": 244, "2112": 244, "4832": 244, "594": 244, "8374": 244, "4346": 244, "7782": 244, "3826": 244, "7098": 244, "597": 244, "8646": 244, "0526": 244, "598": 244, "7452": 244, "9579": 244, "0991": 244, "889": 244, "600": 244, "0332": 244, "0199": 244, "601": 244, "602": 244, "7237": 244, "3591": 244, "603": 244, "3797": 244, "0022": 244, "6776": 244, "604": 244, "9337": 244, "1918": 244, "605": 244, "6301": 244, "606": 244, "5972": 244, "5044": 244, "2131": 244, "664": 244, "609": 244, "1180": 244, "6142": 244, "610": 244, "5289": 244, "6693": 244, "611": 244, "4947": 244, "612": 244, "2196": 244, "4060": 244, "613": 244, "7377": 244, "3732": 244, "614": 244, "4574": 244, "0997": 244, "3581": 244, "615": 244, "9247": 244, "3012": 244, "616": 244, "3761": 244, "5136": 244, "617": 244, "4771": 244, "894": 244, "0177": 244, "3644": 244, "620": 244, "5914": 244, "1632": 244, "621": 244, "4353": 244, "7637": 244, "622": 244, "7577": 244, "1609": 244, "809": 244, "623": 244, "8873": 244, "624": 244, "6568": 244, "5234": 244, "subject": 244, "saw": 244, "fine": 245, "semat": 245, "r3mtransform": 245, "sake": 245, "embodi": 245, "ai": 245, "env_transform": [245, 248], "s3": 245, "amazonaw": 245, "r3m_50": 245, "374m": 245, "8m": 245, "121mb": 245, "4m": 245, "8mb": 245, "5mb": 245, "9mb": 245, "0m": 245, "7mb": 245, "5m": 245, "6mb": 245, "4mb": 245, "105m": 245, "115m": 245, "3mb": 245, "131m": 245, "147m": 245, "0mb": 245, "160m": 245, "169m": 245, "180m": 245, "1mb": 245, "197m": 245, "213m": 245, "229m": 245, "2mb": 245, "246m": 245, "259m": 245, "268m": 245, "277m": 245, "285m": 245, "295m": 245, "305m": 245, "313m": 245, "328m": 245, "342m": 245, "351m": 245, "360m": 245, "373m": 245, "2048": 245, "wiser": 245, "again": [245, 248], "conclud": 245, "haven": 245, "_storag": 245, "2241": [245, 246], "pretrained_model": [245, 246], "846": 246, "torchrl_demo": [246, 247], "858": [246, 247], "2527": [246, 247], "torchrl_env": [246, 248], "754": [246, 248], "2478": 246, "demo": 247, "icml": 247, "dai": 247, "vmoen": 247, "fb": 247, "question": 247, "team": 247, "decid": 247, "invest": 247, "platform": 247, "media": 247, "truli": 247, "predominantli": 247, "tensordict1": 247, "tensordict2": 247, "tensordict_sampl": 247, "_sampler": 247, "_sum_tre": 247, "modulenotfounderror": 247, "28791671991348267": 247, "06984968483448029": 247, "gym_env": 247, "noopresetenv": [247, 248], "lazyconv2d": 247, "6400": 247, "backbone_modul": 247, "params_expand": 247, "tensordict_exp": 247, "base_modul": 247, "0137": 247, "1524": 247, "0641": 247, "copybackward": 247, "1335": 247, "9833": 247, "3497": 247, "6889": 247, "6433": 247, "clampbackward1": 247, "1131": 247, "1761": 247, "3425": 247, "2665": 247, "6207": 247, "1441": 247, "2375": 247, "1372": 247, "3810": 247, "meanbackward1": 247, "tensordicts_prealloc": 247, "tensordicts_stack": 247, "tensordict_rollout": [247, 248], "disclaim": 247, "concatmodul": 247, "loss_td": 247, "1501": 247, "_call_impl": 247, "forward_cal": 247, "pred_val": 247, "_loss_valu": 247, "_contextlib": 247, "decorate_context": 247, "3241": 247, "_default_get": 247, "keyerror": 247, "year": 247, "roadmap": 247, "compris": 247, "contributor": 247, "curiou": 247, "feedback": 247, "nascent": 247, "pypi": 247, "supervis": 248, "unsupervis": 248, "rom": 248, "licens": 248, "pygam": 248, "unifi": 248, "insid": 248, "_build_env": 248, "sphinx_gallery_start_ignor": 248, "warn": 248, "filterwarn": 248, "sphinx_gallery_end_ignor": 248, "adventur": 248, "ram": 248, "airraid": 248, "alien": 248, "amidar": 248, "assault": 248, "5285": 248, "exectut": 248, "reproduct": 248, "tensordict_tprim": 248, "quickli": 248, "imshow": 248, "axesimag": 248, "0x7f1c3d398bb0": 248, "inconsist": 248, "swingup": 248, "swingup_spars": 248, "ball_in_cup": 248, "catch": 248, "balance_spars": 248, "three_pol": 248, "two_pol": 248, "finger": 248, "turn_easi": 248, "turn_hard": 248, "fish": 248, "swim": 248, "hopper": 248, "hop": 248, "run_pure_st": 248, "bring_bal": 248, "bring_peg": 248, "insert_bal": 248, "insert_peg": 248, "point_mass": 248, "reacher": 248, "swimmer": 248, "swimmer6": 248, "swimmer15": 248, "walker": 248, "dog": 248, "trot": 248, "humanoid_cmu": 248, "lqr": 248, "lqr_2_1": 248, "lqr_6_2": 248, "quadrup": 248, "escap": 248, "stacker": 248, "stack_2": 248, "stack_4": 248, "wrapper1": 248, "wrapper2": 248, "obviou": 248, "truth": 248, "env0": 248, "env_transformed_bi": 248, "stanc": 248, "transformeddistribut": 248, "base_dist": 248, "concat": 248, "mofidi": 248, "transformedenviron": 248, "moderet": 248, "computation": 248, "legitim": 248, "incom": 248, "amongst": 248, "wor": 248, "convention": 248, "scope": 248, "markovian": 248, "3288080526": 248, "sometim": 248, "constain": 248, "uuid1": 248, "foo": 248, "bar_": 248, "get_someth": 248, "bar_f26cf9c8": 248, "c42a": 248, "11ed": 248, "a431": 248, "0242ac120002": 248, "aargh": 248, "foo_list": 248, "vec_env": 248, "_dispatch_caller_parallel": 248, "0x7f1c33e17a00": 248, "bar_f9b4bf68": 248, "b0bb": 248, "bar_f9b2b984": 248, "9398": 248, "bar_f9b5fce8": 248, "8d62": 248, "parallen": 248, "carefulli": 248, "commonli": 248, "approxim": 248, "particularili": 248, "evolv": 248, "steadi": 248, "approx": 248, "4305": 248, "2674": 248, "4505": 248, "3249": 248, "_extra_st": 248, "observation_ssq": 248, "observation_sum": 248, "0631": 248, "2313": 248, "0547": 248, "3114": 248, "dispach": 248, "absor": 248}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "MultiSyncDataCollector"], [13, 0, 1, "", "MultiaSyncDataCollector"], [14, 0, 1, "", "RandomPolicy"], [15, 0, 1, "", "SyncDataCollector"], [16, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[15, 1, 1, "", "iterator"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rollout"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[17, 0, 1, "", "DistributedDataCollector"], [18, 0, 1, "", "DistributedSyncDataCollector"], [19, 0, 1, "", "RPCDataCollector"], [20, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[21, 2, 1, "", "split_trajectories"]], "torchrl.data": [[22, 0, 1, "", "BinaryDiscreteTensorSpec"], [23, 0, 1, "", "BoundedTensorSpec"], [24, 0, 1, "", "CompositeSpec"], [25, 0, 1, "", "DiscreteTensorSpec"], [26, 0, 1, "", "MultiDiscreteTensorSpec"], [27, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [28, 0, 1, "", "MultiStep"], [29, 0, 1, "", "OneHotDiscreteTensorSpec"], [30, 0, 1, "", "PrioritizedReplayBuffer"], [31, 0, 1, "", "ReplayBuffer"], [32, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [33, 0, 1, "", "TensorDictReplayBuffer"], [34, 0, 1, "", "TensorSpec"], [35, 0, 1, "", "UnboundedContinuousTensorSpec"], [36, 0, 1, "", "UnboundedDiscreteTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "expand"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "expand"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "keys"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "to_categorical"], [27, 1, 1, "", "to_categorical_spec"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[28, 1, 1, "", "add_module"], [28, 1, 1, "", "apply"], [28, 1, 1, "", "bfloat16"], [28, 1, 1, "", "buffers"], [28, 1, 1, "", "children"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 1, 1, "", "double"], [28, 1, 1, "", "eval"], [28, 1, 1, "", "extra_repr"], [28, 1, 1, "", "float"], [28, 1, 1, "", "forward"], [28, 1, 1, "", "get_buffer"], [28, 1, 1, "", "get_extra_state"], [28, 1, 1, "", "get_parameter"], [28, 1, 1, "", "get_submodule"], [28, 1, 1, "", "half"], [28, 1, 1, "", "ipu"], [28, 1, 1, "", "load_state_dict"], [28, 1, 1, "", "modules"], [28, 1, 1, "", "named_buffers"], [28, 1, 1, "", "named_children"], [28, 1, 1, "", "named_modules"], [28, 1, 1, "", "named_parameters"], [28, 1, 1, "", "parameters"], [28, 1, 1, "", "register_backward_hook"], [28, 1, 1, "", "register_buffer"], [28, 1, 1, "", "register_forward_hook"], [28, 1, 1, "", "register_forward_pre_hook"], [28, 1, 1, "", "register_full_backward_hook"], [28, 1, 1, "", "register_full_backward_pre_hook"], [28, 1, 1, "", "register_load_state_dict_post_hook"], [28, 1, 1, "", "register_module"], [28, 1, 1, "", "register_parameter"], [28, 1, 1, "", "register_state_dict_pre_hook"], [28, 1, 1, "", "requires_grad_"], [28, 1, 1, "", "set_extra_state"], [28, 1, 1, "", "share_memory"], [28, 1, 1, "", "state_dict"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_empty"], [28, 1, 1, "", "train"], [28, 1, 1, "", "type"], [28, 1, 1, "", "xpu"], [28, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "to_categorical"], [29, 1, 1, "", "to_categorical_spec"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[30, 1, 1, "", "add"], [30, 1, 1, "", "append_transform"], [30, 1, 1, "", "extend"], [30, 1, 1, "", "insert_transform"], [30, 1, 1, "", "sample"]], "torchrl.data.ReplayBuffer": [[31, 1, 1, "", "add"], [31, 1, 1, "", "append_transform"], [31, 1, 1, "", "extend"], [31, 1, 1, "", "insert_transform"], [31, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[32, 1, 1, "", "add"], [32, 1, 1, "", "append_transform"], [32, 1, 1, "", "extend"], [32, 1, 1, "", "insert_transform"], [32, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[33, 1, 1, "", "add"], [33, 1, 1, "", "append_transform"], [33, 1, 1, "", "extend"], [33, 1, 1, "", "insert_transform"], [33, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.samplers": [[37, 0, 1, "", "PrioritizedSampler"], [38, 0, 1, "", "RandomSampler"], [39, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[37, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[40, 0, 1, "", "LazyMemmapStorage"], [41, 0, 1, "", "LazyTensorStorage"], [42, 0, 1, "", "ListStorage"], [43, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[40, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[41, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[42, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[43, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[44, 0, 1, "", "RoundRobinWriter"], [45, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[44, 1, 1, "", "add"], [44, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[45, 1, 1, "", "add"], [45, 1, 1, "", "extend"]], "torchrl.envs": [[46, 0, 1, "", "EnvBase"], [47, 0, 1, "", "EnvCreator"], [48, 0, 1, "", "EnvMetaData"], [49, 0, 1, "", "GymLikeEnv"], [50, 2, 1, "", "ModelBasedEnvBase"], [51, 0, 1, "", "MultiThreadedEnv"], [52, 0, 1, "", "ParallelEnv"], [53, 0, 1, "", "SerialEnv"], [50, 1, 1, "", "rand_step"], [50, 1, 1, "", "reset"], [50, 1, 1, "", "rollout"], [50, 1, 1, "", "set_seed"], [50, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[46, 1, 1, "", "add_module"], [46, 1, 1, "", "apply"], [46, 3, 1, "", "batch_locked"], [46, 1, 1, "", "bfloat16"], [46, 1, 1, "", "buffers"], [46, 1, 1, "", "children"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 1, 1, "", "double"], [46, 1, 1, "", "eval"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "fake_tensordict"], [46, 1, 1, "", "float"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_buffer"], [46, 1, 1, "", "get_extra_state"], [46, 1, 1, "", "get_parameter"], [46, 1, 1, "", "get_submodule"], [46, 1, 1, "", "half"], [46, 1, 1, "", "ipu"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "modules"], [46, 1, 1, "", "named_buffers"], [46, 1, 1, "", "named_children"], [46, 1, 1, "", "named_modules"], [46, 1, 1, "", "named_parameters"], [46, 1, 1, "", "parameters"], [46, 1, 1, "", "rand_action"], [46, 1, 1, "id0", "rand_step"], [46, 1, 1, "", "register_backward_hook"], [46, 1, 1, "", "register_buffer"], [46, 1, 1, "", "register_forward_hook"], [46, 1, 1, "", "register_forward_pre_hook"], [46, 1, 1, "", "register_full_backward_hook"], [46, 1, 1, "", "register_full_backward_pre_hook"], [46, 1, 1, "", "register_load_state_dict_post_hook"], [46, 1, 1, "", "register_module"], [46, 1, 1, "", "register_parameter"], [46, 1, 1, "", "register_state_dict_pre_hook"], [46, 1, 1, "", "requires_grad_"], [46, 1, 1, "id1", "reset"], [46, 1, 1, "id2", "rollout"], [46, 1, 1, "", "set_extra_state"], [46, 1, 1, "id3", "set_seed"], [46, 1, 1, "", "share_memory"], [46, 3, 1, "", "specs"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "id4", "step"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_empty"], [46, 1, 1, "", "train"], [46, 1, 1, "", "type"], [46, 1, 1, "", "xpu"], [46, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[49, 1, 1, "", "add_module"], [49, 1, 1, "", "apply"], [49, 3, 1, "", "batch_locked"], [49, 1, 1, "", "bfloat16"], [49, 1, 1, "", "buffers"], [49, 1, 1, "", "children"], [49, 1, 1, "", "close"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 1, 1, "", "double"], [49, 1, 1, "", "eval"], [49, 1, 1, "", "extra_repr"], [49, 1, 1, "", "fake_tensordict"], [49, 1, 1, "", "float"], [49, 1, 1, "", "forward"], [49, 1, 1, "", "get_buffer"], [49, 1, 1, "", "get_extra_state"], [49, 1, 1, "", "get_parameter"], [49, 1, 1, "", "get_submodule"], [49, 1, 1, "", "half"], [49, 1, 1, "", "ipu"], [49, 1, 1, "", "load_state_dict"], [49, 1, 1, "", "modules"], [49, 1, 1, "", "named_buffers"], [49, 1, 1, "", "named_children"], [49, 1, 1, "", "named_modules"], [49, 1, 1, "", "named_parameters"], [49, 1, 1, "", "parameters"], [49, 1, 1, "", "rand_action"], [49, 1, 1, "", "rand_step"], [49, 1, 1, "", "read_action"], [49, 1, 1, "", "read_done"], [49, 1, 1, "", "read_obs"], [49, 1, 1, "", "read_reward"], [49, 1, 1, "", "register_backward_hook"], [49, 1, 1, "", "register_buffer"], [49, 1, 1, "", "register_forward_hook"], [49, 1, 1, "", "register_forward_pre_hook"], [49, 1, 1, "", "register_full_backward_hook"], [49, 1, 1, "", "register_full_backward_pre_hook"], [49, 1, 1, "", "register_load_state_dict_post_hook"], [49, 1, 1, "", "register_module"], [49, 1, 1, "", "register_parameter"], [49, 1, 1, "", "register_state_dict_pre_hook"], [49, 1, 1, "", "requires_grad_"], [49, 1, 1, "", "reset"], [49, 1, 1, "", "rollout"], [49, 1, 1, "", "set_extra_state"], [49, 1, 1, "", "set_info_dict_reader"], [49, 1, 1, "", "set_seed"], [49, 1, 1, "", "share_memory"], [49, 3, 1, "", "specs"], [49, 1, 1, "", "state_dict"], [49, 1, 1, "", "step"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_empty"], [49, 1, 1, "", "train"], [49, 1, 1, "", "type"], [49, 1, 1, "", "xpu"], [49, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[51, 1, 1, "", "add_module"], [51, 1, 1, "", "apply"], [51, 3, 1, "", "batch_locked"], [51, 1, 1, "", "bfloat16"], [51, 1, 1, "", "buffers"], [51, 1, 1, "", "children"], [51, 1, 1, "", "close"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 1, 1, "", "double"], [51, 1, 1, "", "eval"], [51, 1, 1, "", "extra_repr"], [51, 1, 1, "", "fake_tensordict"], [51, 1, 1, "", "float"], [51, 1, 1, "", "forward"], [51, 1, 1, "", "get_buffer"], [51, 1, 1, "", "get_extra_state"], [51, 1, 1, "", "get_parameter"], [51, 1, 1, "", "get_submodule"], [51, 1, 1, "", "half"], [51, 1, 1, "", "ipu"], [51, 1, 1, "", "load_state_dict"], [51, 1, 1, "", "modules"], [51, 1, 1, "", "named_buffers"], [51, 1, 1, "", "named_children"], [51, 1, 1, "", "named_modules"], [51, 1, 1, "", "named_parameters"], [51, 1, 1, "", "parameters"], [51, 1, 1, "", "rand_action"], [51, 1, 1, "", "rand_step"], [51, 1, 1, "", "register_backward_hook"], [51, 1, 1, "", "register_buffer"], [51, 1, 1, "", "register_forward_hook"], [51, 1, 1, "", "register_forward_pre_hook"], [51, 1, 1, "", "register_full_backward_hook"], [51, 1, 1, "", "register_full_backward_pre_hook"], [51, 1, 1, "", "register_load_state_dict_post_hook"], [51, 1, 1, "", "register_module"], [51, 1, 1, "", "register_parameter"], [51, 1, 1, "", "register_state_dict_pre_hook"], [51, 1, 1, "", "requires_grad_"], [51, 1, 1, "", "reset"], [51, 1, 1, "", "rollout"], [51, 1, 1, "", "set_extra_state"], [51, 1, 1, "", "set_seed"], [51, 1, 1, "", "share_memory"], [51, 3, 1, "", "specs"], [51, 1, 1, "", "state_dict"], [51, 1, 1, "", "step"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_empty"], [51, 1, 1, "", "train"], [51, 1, 1, "", "type"], [51, 1, 1, "", "xpu"], [51, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[52, 1, 1, "", "add_module"], [52, 1, 1, "", "apply"], [52, 3, 1, "", "batch_locked"], [52, 1, 1, "", "bfloat16"], [52, 1, 1, "", "buffers"], [52, 1, 1, "", "children"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 1, 1, "", "double"], [52, 1, 1, "", "eval"], [52, 1, 1, "", "extra_repr"], [52, 1, 1, "", "fake_tensordict"], [52, 1, 1, "", "float"], [52, 1, 1, "", "forward"], [52, 1, 1, "", "get_buffer"], [52, 1, 1, "", "get_extra_state"], [52, 1, 1, "", "get_parameter"], [52, 1, 1, "", "get_submodule"], [52, 1, 1, "", "half"], [52, 1, 1, "", "ipu"], [52, 1, 1, "", "load_state_dict"], [52, 1, 1, "", "modules"], [52, 1, 1, "", "named_buffers"], [52, 1, 1, "", "named_children"], [52, 1, 1, "", "named_modules"], [52, 1, 1, "", "named_parameters"], [52, 1, 1, "", "parameters"], [52, 1, 1, "", "rand_action"], [52, 1, 1, "", "rand_step"], [52, 1, 1, "", "register_backward_hook"], [52, 1, 1, "", "register_buffer"], [52, 1, 1, "", "register_forward_hook"], [52, 1, 1, "", "register_forward_pre_hook"], [52, 1, 1, "", "register_full_backward_hook"], [52, 1, 1, "", "register_full_backward_pre_hook"], [52, 1, 1, "", "register_load_state_dict_post_hook"], [52, 1, 1, "", "register_module"], [52, 1, 1, "", "register_parameter"], [52, 1, 1, "", "register_state_dict_pre_hook"], [52, 1, 1, "", "requires_grad_"], [52, 1, 1, "", "reset"], [52, 1, 1, "", "rollout"], [52, 1, 1, "", "set_extra_state"], [52, 1, 1, "", "set_seed"], [52, 1, 1, "", "share_memory"], [52, 3, 1, "", "specs"], [52, 1, 1, "", "state_dict"], [52, 1, 1, "", "step"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_empty"], [52, 1, 1, "", "train"], [52, 1, 1, "", "type"], [52, 1, 1, "", "update_kwargs"], [52, 1, 1, "", "xpu"], [52, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[53, 1, 1, "", "add_module"], [53, 1, 1, "", "apply"], [53, 3, 1, "", "batch_locked"], [53, 1, 1, "", "bfloat16"], [53, 1, 1, "", "buffers"], [53, 1, 1, "", "children"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 1, 1, "", "double"], [53, 1, 1, "", "eval"], [53, 1, 1, "", "extra_repr"], [53, 1, 1, "", "fake_tensordict"], [53, 1, 1, "", "float"], [53, 1, 1, "", "forward"], [53, 1, 1, "", "get_buffer"], [53, 1, 1, "", "get_extra_state"], [53, 1, 1, "", "get_parameter"], [53, 1, 1, "", "get_submodule"], [53, 1, 1, "", "half"], [53, 1, 1, "", "ipu"], [53, 1, 1, "", "load_state_dict"], [53, 1, 1, "", "modules"], [53, 1, 1, "", "named_buffers"], [53, 1, 1, "", "named_children"], [53, 1, 1, "", "named_modules"], [53, 1, 1, "", "named_parameters"], [53, 1, 1, "", "parameters"], [53, 1, 1, "", "rand_action"], [53, 1, 1, "", "rand_step"], [53, 1, 1, "", "register_backward_hook"], [53, 1, 1, "", "register_buffer"], [53, 1, 1, "", "register_forward_hook"], [53, 1, 1, "", "register_forward_pre_hook"], [53, 1, 1, "", "register_full_backward_hook"], [53, 1, 1, "", "register_full_backward_pre_hook"], [53, 1, 1, "", "register_load_state_dict_post_hook"], [53, 1, 1, "", "register_module"], [53, 1, 1, "", "register_parameter"], [53, 1, 1, "", "register_state_dict_pre_hook"], [53, 1, 1, "", "requires_grad_"], [53, 1, 1, "", "reset"], [53, 1, 1, "", "rollout"], [53, 1, 1, "", "set_extra_state"], [53, 1, 1, "", "set_seed"], [53, 1, 1, "", "share_memory"], [53, 3, 1, "", "specs"], [53, 1, 1, "", "state_dict"], [53, 1, 1, "", "step"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_empty"], [53, 1, 1, "", "train"], [53, 1, 1, "", "type"], [53, 1, 1, "", "update_kwargs"], [53, 1, 1, "", "xpu"], [53, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.brax": [[54, 2, 1, "", "BraxEnv"], [55, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[56, 2, 1, "", "DMControlEnv"], [57, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[58, 2, 1, "", "GymEnv"], [59, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[60, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[61, 2, 1, "", "JumanjiEnv"], [62, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.vmas": [[63, 2, 1, "", "VmasEnv"], [64, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[65, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[66, 0, 1, "", "BinarizeReward"], [67, 0, 1, "", "CatFrames"], [68, 0, 1, "", "CatTensors"], [69, 0, 1, "", "CenterCrop"], [70, 0, 1, "", "Compose"], [71, 0, 1, "", "DiscreteActionProjection"], [72, 0, 1, "", "DoubleToFloat"], [73, 0, 1, "", "ExcludeTransform"], [74, 0, 1, "", "FiniteTensorDictCheck"], [75, 0, 1, "", "FlattenObservation"], [76, 0, 1, "", "FrameSkipTransform"], [77, 0, 1, "", "GrayScale"], [78, 0, 1, "", "InitTracker"], [79, 0, 1, "", "NoopResetEnv"], [80, 0, 1, "", "ObservationNorm"], [81, 0, 1, "", "ObservationTransform"], [82, 0, 1, "", "PinMemoryTransform"], [83, 0, 1, "", "R3MTransform"], [84, 0, 1, "", "RandomCropTensorDict"], [85, 0, 1, "", "RenameTransform"], [86, 0, 1, "", "Resize"], [87, 0, 1, "", "RewardClipping"], [88, 0, 1, "", "RewardScaling"], [89, 0, 1, "", "RewardSum"], [90, 0, 1, "", "SelectTransform"], [91, 0, 1, "", "SqueezeTransform"], [92, 0, 1, "", "StepCounter"], [93, 0, 1, "", "TensorDictPrimer"], [94, 0, 1, "", "TimeMaxPool"], [95, 0, 1, "", "ToTensorImage"], [96, 0, 1, "", "Transform"], [97, 0, 1, "", "TransformedEnv"], [98, 0, 1, "", "UnsqueezeTransform"], [99, 0, 1, "", "VIPRewardTransform"], [100, 0, 1, "", "VIPTransform"], [101, 0, 1, "", "VecNorm"], [102, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[66, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[67, 1, 1, "", "forward"], [67, 1, 1, "", "reset"], [67, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[68, 1, 1, "", "forward"], [68, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[69, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[70, 1, 1, "", "forward"], [70, 1, 1, "", "reset"], [70, 1, 1, "", "to"], [70, 1, 1, "", "transform_input_spec"], [70, 1, 1, "", "transform_observation_spec"], [70, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[71, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[72, 1, 1, "", "transform_input_spec"], [72, 1, 1, "", "transform_observation_spec"], [72, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[73, 1, 1, "", "forward"], [73, 1, 1, "", "reset"], [73, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[74, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[75, 1, 1, "", "forward"], [75, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[76, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[77, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[78, 1, 1, "", "forward"], [78, 1, 1, "", "reset"], [78, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[79, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[80, 1, 1, "", "init_stats"], [80, 1, 1, "", "transform_input_spec"], [80, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[82, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[83, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[84, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[85, 1, 1, "", "forward"], [85, 1, 1, "", "transform_input_spec"], [85, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[86, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[87, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[88, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[89, 1, 1, "", "forward"], [89, 1, 1, "", "reset"], [89, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[90, 1, 1, "", "forward"], [90, 1, 1, "", "reset"], [90, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[92, 1, 1, "", "forward"], [92, 1, 1, "", "reset"], [92, 1, 1, "", "transform_input_spec"], [92, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[93, 1, 1, "", "forward"], [93, 1, 1, "", "reset"], [93, 1, 1, "", "to"], [93, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[94, 1, 1, "", "forward"], [94, 1, 1, "", "reset"], [94, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[95, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[96, 1, 1, "", "forward"], [96, 1, 1, "", "reset"], [96, 1, 1, "", "transform_done_spec"], [96, 1, 1, "", "transform_input_spec"], [96, 1, 1, "", "transform_observation_spec"], [96, 1, 1, "", "transform_output_spec"], [96, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[97, 3, 1, "", "action_spec"], [97, 3, 1, "", "batch_locked"], [97, 3, 1, "", "done_spec"], [97, 1, 1, "", "eval"], [97, 3, 1, "", "input_spec"], [97, 1, 1, "", "load_state_dict"], [97, 3, 1, "", "observation_spec"], [97, 3, 1, "", "output_spec"], [97, 3, 1, "", "reward_spec"], [97, 1, 1, "", "set_seed"], [97, 1, 1, "", "state_dict"], [97, 1, 1, "", "to"], [97, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[98, 1, 1, "", "transform_input_spec"], [98, 1, 1, "", "transform_observation_spec"], [98, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[99, 1, 1, "", "forward"], [99, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[100, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[101, 1, 1, "", "build_td_for_shared_vecnorm"], [101, 1, 1, "", "forward"], [101, 1, 1, "", "get_extra_state"], [101, 1, 1, "", "set_extra_state"], [101, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[103, 2, 1, "", "check_env_specs"], [104, 2, 1, "", "exploration_mode"], [105, 2, 1, "", "get_available_libraries"], [106, 2, 1, "", "set_exploration_mode"], [107, 2, 1, "", "step_mdp"]], "torchrl.modules": [[108, 0, 1, "", "CEMPlanner"], [109, 0, 1, "", "ConvNet"], [110, 0, 1, "", "DdpgCnnActor"], [111, 0, 1, "", "DdpgCnnQNet"], [112, 0, 1, "", "DdpgMlpActor"], [113, 0, 1, "", "DdpgMlpQNet"], [114, 0, 1, "", "Delta"], [115, 0, 1, "", "DistributionalDQNnet"], [116, 0, 1, "", "DreamerActor"], [117, 0, 1, "", "DuelingCnnDQNet"], [118, 0, 1, "", "IndependentNormal"], [119, 0, 1, "", "LSTMNet"], [120, 0, 1, "", "MLP"], [121, 0, 1, "", "MPCPlannerBase"], [122, 0, 1, "", "MPPIPlanner"], [123, 0, 1, "", "NoisyLazyLinear"], [124, 0, 1, "", "NoisyLinear"], [125, 0, 1, "", "NormalParamWrapper"], [126, 0, 1, "", "ObsDecoder"], [127, 0, 1, "", "ObsEncoder"], [128, 0, 1, "", "OneHotCategorical"], [129, 0, 1, "", "RSSMPosterior"], [130, 0, 1, "", "RSSMPrior"], [131, 0, 1, "", "TanhDelta"], [132, 0, 1, "", "TanhNormal"], [133, 0, 1, "", "TruncatedNormal"], [134, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[108, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[109, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[110, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[111, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[112, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[113, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[114, 1, 1, "", "log_prob"], [114, 3, 1, "", "mean"], [114, 3, 1, "", "mode"], [114, 1, 1, "", "rsample"], [114, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[115, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[116, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[117, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[118, 3, 1, "", "mode"]], "torchrl.modules.LSTMNet": [[119, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[120, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[121, 1, 1, "", "forward"], [121, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[122, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[123, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[125, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[126, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[127, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[128, 1, 1, "", "log_prob"], [128, 3, 1, "", "mode"], [128, 1, 1, "", "rsample"], [128, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[129, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[130, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[131, 3, 1, "", "mean"], [131, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[132, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[133, 1, 1, "", "log_prob"], [133, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module": [[135, 0, 1, "", "Actor"], [136, 0, 1, "", "ActorCriticOperator"], [137, 0, 1, "", "ActorCriticWrapper"], [138, 0, 1, "", "ActorValueOperator"], [139, 0, 1, "", "AdditiveGaussianWrapper"], [140, 0, 1, "", "DistributionalQValueActor"], [141, 0, 1, "", "EGreedyWrapper"], [142, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [143, 0, 1, "", "ProbabilisticActor"], [144, 0, 1, "", "QValueActor"], [145, 0, 1, "", "SafeModule"], [146, 0, 1, "", "SafeProbabilisticModule"], [147, 0, 1, "", "SafeProbabilisticSequential"], [148, 0, 1, "", "SafeSequential"], [149, 0, 1, "", "ValueOperator"], [150, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[136, 1, 1, "", "get_critic_operator"], [136, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[137, 1, 1, "", "get_policy_operator"], [137, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[138, 1, 1, "", "get_policy_operator"], [138, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[139, 1, 1, "", "forward"], [139, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[141, 1, 1, "", "forward"], [141, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[142, 1, 1, "", "forward"], [142, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.SafeModule": [[145, 1, 1, "", "random"], [145, 1, 1, "", "random_sample"], [145, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[146, 1, 1, "", "random"], [146, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[150, 1, 1, "", "get_reward_operator"], [150, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.tensordict_module.actors": [[151, 0, 1, "", "DistributionalQValueHook"], [152, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[153, 0, 1, "", "ensure_tensordict_compatible"], [154, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[155, 0, 1, "", "biased_softplus"], [156, 0, 1, "", "inv_softplus"], [157, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[155, 1, 1, "", "forward"]], "torchrl.objectives": [[158, 0, 1, "", "A2CLoss"], [159, 0, 1, "", "ClipPPOLoss"], [160, 0, 1, "", "DDPGLoss"], [161, 0, 1, "", "DQNLoss"], [162, 0, 1, "", "DistributionalDQNLoss"], [163, 0, 1, "", "DreamerActorLoss"], [164, 0, 1, "", "DreamerModelLoss"], [165, 0, 1, "", "DreamerValueLoss"], [166, 0, 1, "", "HardUpdate"], [167, 0, 1, "", "IQLLoss"], [168, 0, 1, "", "KLPENPPOLoss"], [169, 0, 1, "", "PPOLoss"], [170, 0, 1, "", "REDQLoss"], [171, 0, 1, "", "ReinforceLoss"], [172, 0, 1, "", "SACLoss"], [173, 0, 1, "", "SoftUpdate"], [174, 0, 1, "", "distance_loss"], [175, 0, 1, "", "hold_out_net"], [176, 0, 1, "", "hold_out_params"], [177, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[158, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[159, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[160, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[161, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[162, 1, 1, "", "forward"]], "torchrl.objectives.DreamerActorLoss": [[163, 1, 1, "", "forward"]], "torchrl.objectives.DreamerModelLoss": [[164, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[165, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[167, 1, 1, "", "forward"], [167, 1, 1, "", "loss_value_diff"]], "torchrl.objectives.KLPENPPOLoss": [[168, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[169, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[170, 1, 1, "", "forward"]], "torchrl.objectives.ReinforceLoss": [[171, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[172, 1, 1, "", "forward"]], "torchrl.objectives.value": [[178, 0, 1, "", "GAE"], [179, 0, 1, "", "TDEstimate"], [180, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[178, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[179, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[180, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[181, 0, 1, "", "generalized_advantage_estimate"], [182, 0, 1, "", "td_advantage_estimate"], [183, 0, 1, "", "td_lambda_advantage_estimate"], [184, 0, 1, "", "td_lambda_return_estimate"], [185, 0, 1, "", "vec_generalized_advantage_estimate"], [186, 0, 1, "", "vec_td_lambda_advantage_estimate"], [187, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[188, 2, 1, "", "TensorDictRecorder"], [189, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[190, 2, 1, "", "Logger"], [192, 2, 1, "", "generate_exp_name"], [193, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[191, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[194, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[195, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[196, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[197, 0, 1, "", "BatchSubSampler"], [198, 0, 1, "", "ClearCudaCache"], [199, 0, 1, "", "CountFramesLog"], [200, 0, 1, "", "LogReward"], [201, 0, 1, "", "OptimizerHook"], [202, 0, 1, "", "Recorder"], [203, 0, 1, "", "ReplayBufferTrainer"], [204, 0, 1, "", "RewardNormalizer"], [205, 0, 1, "", "SelectKeys"], [206, 0, 1, "", "Trainer"], [207, 0, 1, "", "TrainerHookBase"], [208, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.helpers": [[209, 2, 1, "", "correct_for_frame_skip"], [210, 2, 1, "", "get_stats_random_rollout"], [211, 2, 1, "", "make_a2c_loss"], [212, 2, 1, "", "make_a2c_model"], [213, 2, 1, "", "make_collector_offpolicy"], [214, 2, 1, "", "make_collector_onpolicy"], [215, 2, 1, "", "make_ddpg_actor"], [216, 2, 1, "", "make_ddpg_loss"], [217, 2, 1, "", "make_dqn_actor"], [218, 2, 1, "", "make_dqn_loss"], [219, 2, 1, "", "make_ppo_loss"], [220, 2, 1, "", "make_ppo_model"], [221, 2, 1, "", "make_redq_loss"], [222, 2, 1, "", "make_redq_model"], [223, 2, 1, "", "make_replay_buffer"], [224, 2, 1, "", "make_sac_loss"], [225, 2, 1, "", "make_sac_model"], [226, 2, 1, "", "make_target_updater"], [227, 2, 1, "", "make_trainer"], [228, 2, 1, "", "parallel_env_constructor"], [229, 2, 1, "", "sync_async_collector"], [230, 2, 1, "", "sync_sync_collector"], [231, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 6, 235, 236, 237, 238, 239, 240, 241, 244, 247, 248], "document": [0, 9], "tutori": [0, 241], "basic": 0, "intermedi": [0, 8], "advanc": 0, "refer": [0, 233], "knowledg": [0, 234], "base": [0, 7, 234, 240], "indic": 0, "tabl": 0, "collector": [1, 239, 240, 241, 247], "packag": [1, 2, 3, 235, 236, 237, 238], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 239, 240, 241, 247], "distribut": [1, 235], "helper": [1, 3], "function": [1, 4, 240, 241, 247], "replai": [2, 239, 240, 241, 247], "buffer": [2, 239, 240, 241, 247], "compos": [2, 70], "sotr": 2, "trajectori": [2, 239], "tensorspec": [2, 34], "util": [2, 235, 236, 237], "env": [3, 244, 247, 248], "vector": [3, 247], "transform": [3, 96, 239, 241, 244, 247, 248], "clone": [3, 7], "record": [3, 202, 237, 239], "domain": 3, "specif": [3, 243], "librari": [3, 247], "thing": [4, 244], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 247], "gener": 4, "have": 4, "you": 4, "valid": 4, "your": [4, 6, 239, 244], "algorithm": 4, "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 239, 240], "return": [4, 236], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "agent": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 239, 241, 243, 244], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 247], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "i": [4, 5, 8], "favor": 4, "compon": 4, "veloc": 4, "v": 4, "l2": 4, "action": [4, 244], "magnitud": 4, "task": [4, 243], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 239, 240, 241], "standard": 4, "explor": [4, 235, 240], "valu": [4, 239, 241], "loss": [4, 241], "earli": 4, "train": [4, 8, 239, 240, 241, 244], "roughli": 4, "uniformli": 4, "random": 4, "intrins": 4, "decai": 4, "learn": [4, 241], "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 240], "increas": 4, "an": [4, 241, 244], "environ": [4, 6, 7, 239, 240, 241, 243, 244, 247, 248], "dynam": 4, "can": 4, "low": 4, "forward": 4, "model": [4, 235, 239, 240, 245, 247], "also": 4, "us": [4, 6, 9, 239, 240, 245, 247], "offlin": 4, "observ": [4, 239], "space": 4, "effect": [4, 244], "dramat": 4, "dure": 4, "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 248], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 247], "from": [6, 7], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 248], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 244], "workaround": 10, "implement_for": 11, "multisyncdatacollector": 12, "multiasyncdatacollector": 13, "randompolici": 14, "syncdatacollector": 15, "asyncdatacollector": 16, "distributeddatacollector": 17, "distributedsyncdatacollector": 18, "rpcdatacollector": 19, "submitit_delayed_launch": 20, "split_trajectori": 21, "binarydiscretetensorspec": 22, "boundedtensorspec": 23, "compositespec": 24, "discretetensorspec": 25, "multidiscretetensorspec": 26, "multionehotdiscretetensorspec": 27, "multistep": 28, "onehotdiscretetensorspec": 29, "prioritizedreplaybuff": 30, "replaybuff": 31, "tensordictprioritizedreplaybuff": 32, "tensordictreplaybuff": 33, "unboundedcontinuoustensorspec": 35, "unboundeddiscretetensorspec": 36, "prioritizedsampl": 37, "randomsampl": 38, "sampler": 39, "lazymemmapstorag": 40, "lazytensorstorag": 41, "liststorag": 42, "storag": 43, "roundrobinwrit": 44, "writer": 45, "envbas": [46, 244], "envcreat": 47, "envmetadata": 48, "gymlikeenv": 49, "modelbasedenvbas": 50, "multithreadedenv": 51, "parallelenv": 52, "serialenv": 53, "braxenv": 54, "braxwrapp": 55, "dmcontrolenv": 56, "dmcontrolwrapp": 57, "gymenv": 58, "gymwrapp": 59, "habitatenv": 60, "jumanjienv": 61, "jumanjiwrapp": 62, "vmasenv": 63, "vmaswrapp": 64, "dreamerenv": 65, "binarizereward": 66, "catfram": 67, "cattensor": 68, "centercrop": 69, "discreteactionproject": 71, "doubletofloat": 72, "excludetransform": 73, "finitetensordictcheck": 74, "flattenobserv": 75, "frameskiptransform": 76, "grayscal": 77, "inittrack": 78, "noopresetenv": 79, "observationnorm": 80, "observationtransform": 81, "pinmemorytransform": 82, "r3mtransform": 83, "randomcroptensordict": 84, "renametransform": 85, "resiz": 86, "rewardclip": 87, "rewardsc": 88, "rewardsum": 89, "selecttransform": 90, "squeezetransform": 91, "stepcount": 92, "tensordictprim": 93, "timemaxpool": 94, "totensorimag": 95, "transformedenv": 97, "unsqueezetransform": 98, "viprewardtransform": 99, "viptransform": 100, "vecnorm": [101, 248], "gsdenois": 102, "check_env_spec": 103, "exploration_mod": 104, "get_available_librari": 105, "set_exploration_mod": 106, "step_mdp": 107, "cemplann": 108, "convnet": 109, "ddpgcnnactor": 110, "ddpgcnnqnet": 111, "ddpgmlpactor": 112, "ddpgmlpqnet": 113, "delta": 114, "distributionaldqnnet": 115, "dreameractor": 116, "duelingcnndqnet": 117, "independentnorm": 118, "lstmnet": 119, "mlp": 120, "mpcplannerbas": 121, "mppiplann": 122, "noisylazylinear": 123, "noisylinear": 124, "normalparamwrapp": 125, "obsdecod": 126, "obsencod": 127, "onehotcategor": 128, "rssmposterior": 129, "rssmprior": 130, "tanhdelta": 131, "tanhnorm": 132, "truncatednorm": 133, "reset_nois": 134, "actor": 135, "actorcriticoper": 136, "actorcriticwrapp": 137, "actorvalueoper": 138, "additivegaussianwrapp": 139, "distributionalqvalueactor": 140, "egreedywrapp": 141, "ornsteinuhlenbeckprocesswrapp": 142, "probabilisticactor": 143, "qvalueactor": 144, "safemodul": 145, "safeprobabilisticmodul": 146, "safeprobabilisticsequenti": 147, "safesequenti": 148, "valueoper": 149, "worldmodelwrapp": 150, "distributionalqvaluehook": 151, "qvaluehook": 152, "ensure_tensordict_compat": 153, "is_tensordict_compat": 154, "biased_softplu": 155, "inv_softplu": 156, "map": 157, "a2closs": 158, "clipppoloss": 159, "ddpgloss": 160, "dqnloss": 161, "distributionaldqnloss": 162, "dreameractorloss": 163, "dreamermodelloss": 164, "dreamervalueloss": 165, "hardupd": 166, "iqlloss": 167, "klpenppoloss": 168, "ppoloss": 169, "redqloss": 170, "reinforceloss": 171, "sacloss": 172, "softupd": 173, "distance_loss": 174, "hold_out_net": 175, "hold_out_param": 176, "next_state_valu": 177, "gae": 178, "tdestim": 179, "tdlambdaestim": 180, "generalized_advantage_estim": 181, "td_advantage_estim": 182, "td_lambda_advantage_estim": 183, "td_lambda_return_estim": 184, "vec_generalized_advantage_estim": 185, "vec_td_lambda_advantage_estim": 186, "vec_td_lambda_return_estim": 187, "tensordictrecord": 188, "videorecord": 189, "logger": [190, 237], "csvlogger": 191, "generate_exp_nam": 192, "get_logg": 193, "mlflowlogg": 194, "tensorboardlogg": 195, "wandblogg": 196, "batchsubsampl": 197, "clearcudacach": 198, "countframeslog": 199, "logreward": 200, "optimizerhook": 201, "replaybuffertrain": 203, "rewardnorm": 204, "selectkei": 205, "trainer": [206, 237], "trainerhookbas": 207, "updateweight": 208, "correct_for_frame_skip": 209, "get_stats_random_rollout": 210, "make_a2c_loss": 211, "make_a2c_model": 212, "make_collector_offpolici": 213, "make_collector_onpolici": 214, "make_ddpg_actor": 215, "make_ddpg_loss": 216, "make_dqn_actor": 217, "make_dqn_loss": 218, "make_ppo_loss": 219, "make_ppo_model": 220, "make_redq_loss": 221, "make_redq_model": 222, "make_replay_buff": 223, "make_sac_loss": 224, "make_sac_model": 225, "make_target_updat": 226, "make_train": 227, "parallel_env_constructor": 228, "sync_async_collector": 229, "sync_sync_collector": 230, "transformed_env_constructor": 231, "readm": [232, 242], "tuto": [232, 242], "api": 233, "contribut": [234, 247], "content": 234, "modul": [235, 240, 247], "tensordict": [235, 247], "hook": [235, 237], "planner": 235, "object": [236, 239, 247], "dqn": [236, 240], "ddpg": [236, 239], "sac": 236, "redq": 236, "iql": 236, "ppo": [236, 241], "a2c": 236, "reinforc": [236, 241], "dreamer": 236, "checkpoint": 237, "builder": 237, "_util": 238, "code": [239, 240, 244], "import": 239, "parallel": [239, 243, 248], "execut": [239, 243, 244], "build": [239, 240], "evalu": 239, "hyperparamet": [239, 240, 241], "collect": [239, 240, 241], "initi": 239, "stat": 239, "q": [239, 240], "network": [239, 240, 241], "creation": 239, "time": [239, 246], "experi": [239, 244], "result": [239, 241], "sampl": 239, "td": [239, 240], "lambda": [239, 240], "pixel": 240, "paramet": [240, 241], "comput": [240, 244, 246], "deep": 240, "target": 240, "store": 240, "loop": [240, 241, 244], "regular": 240, "conclus": [240, 241, 244], "possibl": 240, "improv": 240, "defin": 241, "next": 241, "step": [241, 248], "multi": 243, "divers": 243, "rollout": [243, 244, 248], "pendulum": 244, "write": 244, "_step": 244, "reset": [244, 248], "simul": 244, "_reset": 244, "metadata": 244, "_spec": 244, "spec": [244, 248], "shape": 244, "seed": [244, 248], "wrap": 244, "togeth": 244, "class": [244, 247], "test": 244, "our": 244, "custom": 244, "batch": 244, "simpl": 244, "pretrain": 245, "introduct": 247, "config": 247, "tensordictmodul": 247, "sequenc": 247, "program": 247, "ensembl": 247, "meta": 247, "special": 247, "state": 247, "frame_skip": 248, "deepmind": 248, "control": 248, "devic": 248, "run": 248, "close": 248, "access": 248, "attribut": 248, "kwarg": 248}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials": [[0, "tutorials"]], "Basics": [[0, "basics"]], "Intermediate": [[0, "intermediate"]], "Advanced": [[0, "advanced"]], "References": [[0, "references"]], "Knowledge Base": [[0, "knowledge-base"], [234, "knowledge-base"]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Single node data collectors": [[1, "single-node-data-collectors"]], "Distributed data collectors": [[1, "distributed-data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers": [[2, "composable-replay-buffers"]], "Sotring trajectories": [[2, "sotring-trajectories"]], "TensorSpec": [[2, "tensorspec"], [34, "tensorspec"]], "Utils": [[2, "utils"], [235, "utils"], [236, "utils"], [237, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [239, "transforms"], [241, "transforms"], [247, "transforms"]], "Cloning transforms": [[3, "cloning-transforms"]], "Recorders": [[3, "recorders"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Things to consider when debugging RL": [[4, "things-to-consider-when-debugging-rl"]], "General": [[4, "general"]], "Have you validated your algorithm implementation on a few small, toy problems with known optimal returns e.g. gridworlds, mountaincar?": [[4, "have-you-validated-your-algorithm-implementation-on-a-few-small-toy-problems-with-known-optimal-returns-e-g-gridworlds-mountaincar"]], "Have you visualized your agents?": [[4, "have-you-visualized-your-agents"]], "Be very careful with any data augmentation.": [[4, "be-very-careful-with-any-data-augmentation"]], "Policy": [[4, "policy"], [241, "policy"], [243, "policy"]], "Does the entropy of your policy converge too quickly, too slowly or change drastically?": [[4, "does-the-entropy-of-your-policy-converge-too-quickly-too-slowly-or-change-drastically"]], "Rewards (beyond \u201cgoing up\u201d)": [[4, "rewards-beyond-going-up"]], "Is the agent favoring a single component of the reward function (i.e. velocity vs L2 action magnitude)?": [[4, "is-the-agent-favoring-a-single-component-of-the-reward-function-i-e-velocity-vs-l2-action-magnitude"]], "Is the task horizon extremely long?": [[4, "is-the-task-horizon-extremely-long"]], "Are your rewards normalized/standardized?": [[4, "are-your-rewards-normalized-standardized"]], "Exploration": [[4, "exploration"], [235, "exploration"]], "Is value loss going up early in training?": [[4, "is-value-loss-going-up-early-in-training"]], "Are actions (roughly) uniformly/normally random early in training?": [[4, "are-actions-roughly-uniformly-normally-random-early-in-training"]], "Are intrinsic rewards decaying as learning progresses in a singleton task?": [[4, "are-intrinsic-rewards-decaying-as-learning-progresses-in-a-singleton-task"]], "Are episodic intrinsic rewards remaining constant or increasing as learning progresses in an episodic task?": [[4, "are-episodic-intrinsic-rewards-remaining-constant-or-increasing-as-learning-progresses-in-an-episodic-task"]], "Environment Dynamics": [[4, "environment-dynamics"]], "Can you train a low entropy forward dynamics and/or reward model (also useful for offline RL)?": [[4, "can-you-train-a-low-entropy-forward-dynamics-and-or-reward-model-also-useful-for-offline-rl"]], "Observation Space": [[4, "observation-space"]], "Are your observations normalized/standardized?": [[4, "are-your-observations-normalized-standardized"]], "Action Space": [[4, "action-space"]], "Is the effect of an action changing dramatically during an episode?": [[4, "is-the-effect-of-an-action-changing-dramatically-during-an-episode"]], "Is the action space too high dimensional?": [[4, "is-the-action-space-too-high-dimensional"]], "Are your actions normalized/standardized?": [[4, "are-your-actions-normalized-standardized"]], "Working with gym": [[5, "working-with-gym"]], "What is OpenAI Gym?": [[5, "what-is-openai-gym"]], "Versioning": [[5, "versioning"]], "Working with habitat-lab": [[6, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[6, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[6, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[6, "installing-torchrl"]], "Using Habitat": [[6, "using-habitat"]], "Common issues": [[6, "common-issues"]], "Working with MuJoCo-based environments": [[7, "working-with-mujoco-based-environments"]], "Installing MuJoCo": [[7, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[7, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[7, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[7, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[7, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[7, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[7, "common-issues-when-rendering-mujoco-environments"]], "Common PyTorch errors and solutions": [[8, "common-pytorch-errors-and-solutions"]], "Gradient-related errors [Newcomers]": [[8, "gradient-related-errors-newcomers"]], "My Training is too slow [Newcomers / intermediate]": [[8, "my-training-is-too-slow-newcomers-intermediate"]], "Common bugs": [[8, "common-bugs"]], "Useful resources": [[9, "useful-resources"]], "Pytorch documentation": [[9, "pytorch-documentation"]], "functorch documentation": [[9, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[9, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[9, "educational-resource"]], "Forums": [[9, "forums"]], "Repos": [[9, "repos"]], "Versioning Issues": [[10, "versioning-issues"]], "Pytorch version": [[10, "pytorch-version"]], "How to reproduce": [[10, "how-to-reproduce"]], "Workarounds": [[10, "workarounds"]], "implement_for": [[11, "implement-for"]], "MultiSyncDataCollector": [[12, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[13, "multiasyncdatacollector"]], "RandomPolicy": [[14, "randompolicy"]], "SyncDataCollector": [[15, "syncdatacollector"]], "aSyncDataCollector": [[16, "asyncdatacollector"]], "DistributedDataCollector": [[17, "distributeddatacollector"]], "DistributedSyncDataCollector": [[18, "distributedsyncdatacollector"]], "RPCDataCollector": [[19, "rpcdatacollector"]], "submitit_delayed_launcher": [[20, "submitit-delayed-launcher"]], "split_trajectories": [[21, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[22, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[23, "boundedtensorspec"]], "CompositeSpec": [[24, "compositespec"]], "DiscreteTensorSpec": [[25, "discretetensorspec"]], "MultiDiscreteTensorSpec": [[26, "multidiscretetensorspec"]], "MultiOneHotDiscreteTensorSpec": [[27, "multionehotdiscretetensorspec"]], "MultiStep": [[28, "multistep"]], "OneHotDiscreteTensorSpec": [[29, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[30, "prioritizedreplaybuffer"]], "ReplayBuffer": [[31, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[32, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[33, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[35, "unboundedcontinuoustensorspec"]], "UnboundedDiscreteTensorSpec": [[36, "unboundeddiscretetensorspec"]], "PrioritizedSampler": [[37, "prioritizedsampler"]], "RandomSampler": [[38, "randomsampler"]], "Sampler": [[39, "sampler"]], "LazyMemmapStorage": [[40, "lazymemmapstorage"]], "LazyTensorStorage": [[41, "lazytensorstorage"]], "ListStorage": [[42, "liststorage"]], "Storage": [[43, "storage"]], "RoundRobinWriter": [[44, "roundrobinwriter"]], "Writer": [[45, "writer"]], "EnvBase": [[46, "envbase"]], "EnvCreator": [[47, "envcreator"]], "EnvMetaData": [[48, "envmetadata"]], "GymLikeEnv": [[49, "gymlikeenv"]], "ModelBasedEnvBase": [[50, "modelbasedenvbase"]], "MultiThreadedEnv": [[51, "multithreadedenv"]], "ParallelEnv": [[52, "parallelenv"]], "SerialEnv": [[53, "serialenv"]], "BraxEnv": [[54, "braxenv"]], "BraxWrapper": [[55, "braxwrapper"]], "DMControlEnv": [[56, "dmcontrolenv"]], "DMControlWrapper": [[57, "dmcontrolwrapper"]], "GymEnv": [[58, "gymenv"]], "GymWrapper": [[59, "gymwrapper"]], "HabitatEnv": [[60, "habitatenv"]], "JumanjiEnv": [[61, "jumanjienv"]], "JumanjiWrapper": [[62, "jumanjiwrapper"]], "VmasEnv": [[63, "vmasenv"]], "VmasWrapper": [[64, "vmaswrapper"]], "DreamerEnv": [[65, "dreamerenv"]], "BinarizeReward": [[66, "binarizereward"]], "CatFrames": [[67, "catframes"]], "CatTensors": [[68, "cattensors"]], "CenterCrop": [[69, "centercrop"]], "Compose": [[70, "compose"]], "DiscreteActionProjection": [[71, "discreteactionprojection"]], "DoubleToFloat": [[72, "doubletofloat"]], "ExcludeTransform": [[73, "excludetransform"]], "FiniteTensorDictCheck": [[74, "finitetensordictcheck"]], "FlattenObservation": [[75, "flattenobservation"]], "FrameSkipTransform": [[76, "frameskiptransform"]], "GrayScale": [[77, "grayscale"]], "InitTracker": [[78, "inittracker"]], "NoopResetEnv": [[79, "noopresetenv"]], "ObservationNorm": [[80, "observationnorm"]], "ObservationTransform": [[81, "observationtransform"]], "PinMemoryTransform": [[82, "pinmemorytransform"]], "R3MTransform": [[83, "r3mtransform"]], "RandomCropTensorDict": [[84, "randomcroptensordict"]], "RenameTransform": [[85, "renametransform"]], "Resize": [[86, "resize"]], "RewardClipping": [[87, "rewardclipping"]], "RewardScaling": [[88, "rewardscaling"]], "RewardSum": [[89, "rewardsum"]], "SelectTransform": [[90, "selecttransform"]], "SqueezeTransform": [[91, "squeezetransform"]], "StepCounter": [[92, "stepcounter"]], "TensorDictPrimer": [[93, "tensordictprimer"]], "TimeMaxPool": [[94, "timemaxpool"]], "ToTensorImage": [[95, "totensorimage"]], "Transform": [[96, "transform"]], "TransformedEnv": [[97, "transformedenv"]], "UnsqueezeTransform": [[98, "unsqueezetransform"]], "VIPRewardTransform": [[99, "viprewardtransform"]], "VIPTransform": [[100, "viptransform"]], "VecNorm": [[101, "vecnorm"], [248, "vecnorm"]], "gSDENoise": [[102, "gsdenoise"]], "check_env_specs": [[103, "check-env-specs"]], "exploration_mode": [[104, "exploration-mode"]], "get_available_libraries": [[105, "get-available-libraries"]], "set_exploration_mode": [[106, "set-exploration-mode"]], "step_mdp": [[107, "step-mdp"]], "CEMPlanner": [[108, "cemplanner"]], "ConvNet": [[109, "convnet"]], "DdpgCnnActor": [[110, "ddpgcnnactor"]], "DdpgCnnQNet": [[111, "ddpgcnnqnet"]], "DdpgMlpActor": [[112, "ddpgmlpactor"]], "DdpgMlpQNet": [[113, "ddpgmlpqnet"]], "Delta": [[114, "delta"]], "DistributionalDQNnet": [[115, "distributionaldqnnet"]], "DreamerActor": [[116, "dreameractor"]], "DuelingCnnDQNet": [[117, "duelingcnndqnet"]], "IndependentNormal": [[118, "independentnormal"]], "LSTMNet": [[119, "lstmnet"]], "MLP": [[120, "mlp"]], "MPCPlannerBase": [[121, "mpcplannerbase"]], "MPPIPlanner": [[122, "mppiplanner"]], "NoisyLazyLinear": [[123, "noisylazylinear"]], "NoisyLinear": [[124, "noisylinear"]], "NormalParamWrapper": [[125, "normalparamwrapper"]], "ObsDecoder": [[126, "obsdecoder"]], "ObsEncoder": [[127, "obsencoder"]], "OneHotCategorical": [[128, "onehotcategorical"]], "RSSMPosterior": [[129, "rssmposterior"]], "RSSMPrior": [[130, "rssmprior"]], "TanhDelta": [[131, "tanhdelta"]], "TanhNormal": [[132, "tanhnormal"]], "TruncatedNormal": [[133, "truncatednormal"]], "reset_noise": [[134, "reset-noise"]], "Actor": [[135, "actor"]], "ActorCriticOperator": [[136, "actorcriticoperator"]], "ActorCriticWrapper": [[137, "actorcriticwrapper"]], "ActorValueOperator": [[138, "actorvalueoperator"]], "AdditiveGaussianWrapper": [[139, "additivegaussianwrapper"]], "DistributionalQValueActor": [[140, "distributionalqvalueactor"]], "EGreedyWrapper": [[141, "egreedywrapper"]], "OrnsteinUhlenbeckProcessWrapper": [[142, "ornsteinuhlenbeckprocesswrapper"]], "ProbabilisticActor": [[143, "probabilisticactor"]], "QValueActor": [[144, "qvalueactor"]], "SafeModule": [[145, "safemodule"]], "SafeProbabilisticModule": [[146, "safeprobabilisticmodule"]], "SafeProbabilisticSequential": [[147, "safeprobabilisticsequential"]], "SafeSequential": [[148, "safesequential"]], "ValueOperator": [[149, "valueoperator"]], "WorldModelWrapper": [[150, "worldmodelwrapper"]], "DistributionalQValueHook": [[151, "distributionalqvaluehook"]], "QValueHook": [[152, "qvaluehook"]], "ensure_tensordict_compatible": [[153, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[154, "is-tensordict-compatible"]], "biased_softplus": [[155, "biased-softplus"]], "inv_softplus": [[156, "inv-softplus"]], "mappings": [[157, "mappings"]], "A2CLoss": [[158, "a2closs"]], "ClipPPOLoss": [[159, "clipppoloss"]], "DDPGLoss": [[160, "ddpgloss"]], "DQNLoss": [[161, "dqnloss"]], "DistributionalDQNLoss": [[162, "distributionaldqnloss"]], "DreamerActorLoss": [[163, "dreameractorloss"]], "DreamerModelLoss": [[164, "dreamermodelloss"]], "DreamerValueLoss": [[165, "dreamervalueloss"]], "HardUpdate": [[166, "hardupdate"]], "IQLLoss": [[167, "iqlloss"]], "KLPENPPOLoss": [[168, "klpenppoloss"]], "PPOLoss": [[169, "ppoloss"]], "REDQLoss": [[170, "redqloss"]], "ReinforceLoss": [[171, "reinforceloss"]], "SACLoss": [[172, "sacloss"]], "SoftUpdate": [[173, "softupdate"]], "distance_loss": [[174, "distance-loss"]], "hold_out_net": [[175, "hold-out-net"]], "hold_out_params": [[176, "hold-out-params"]], "next_state_value": [[177, "next-state-value"]], "GAE": [[178, "gae"]], "TDEstimate": [[179, "tdestimate"]], "TDLambdaEstimate": [[180, "tdlambdaestimate"]], "generalized_advantage_estimate": [[181, "generalized-advantage-estimate"]], "td_advantage_estimate": [[182, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[183, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[184, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[185, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[186, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[187, "vec-td-lambda-return-estimate"]], "TensorDictRecorder": [[188, "tensordictrecorder"]], "VideoRecorder": [[189, "videorecorder"]], "Logger": [[190, "logger"]], "CSVLogger": [[191, "csvlogger"]], "generate_exp_name": [[192, "generate-exp-name"]], "get_logger": [[193, "get-logger"]], "MLFlowLogger": [[194, "mlflowlogger"]], "TensorboardLogger": [[195, "tensorboardlogger"]], "WandbLogger": [[196, "wandblogger"]], "BatchSubSampler": [[197, "batchsubsampler"]], "ClearCudaCache": [[198, "clearcudacache"]], "CountFramesLog": [[199, "countframeslog"]], "LogReward": [[200, "logreward"]], "OptimizerHook": [[201, "optimizerhook"]], "Recorder": [[202, "recorder"], [239, "recorder"]], "ReplayBufferTrainer": [[203, "replaybuffertrainer"]], "RewardNormalizer": [[204, "rewardnormalizer"]], "SelectKeys": [[205, "selectkeys"]], "Trainer": [[206, "trainer"]], "TrainerHookBase": [[207, "trainerhookbase"]], "UpdateWeights": [[208, "updateweights"]], "correct_for_frame_skip": [[209, "correct-for-frame-skip"]], "get_stats_random_rollout": [[210, "get-stats-random-rollout"]], "make_a2c_loss": [[211, "make-a2c-loss"]], "make_a2c_model": [[212, "make-a2c-model"]], "make_collector_offpolicy": [[213, "make-collector-offpolicy"]], "make_collector_onpolicy": [[214, "make-collector-onpolicy"]], "make_ddpg_actor": [[215, "make-ddpg-actor"]], "make_ddpg_loss": [[216, "make-ddpg-loss"]], "make_dqn_actor": [[217, "make-dqn-actor"]], "make_dqn_loss": [[218, "make-dqn-loss"]], "make_ppo_loss": [[219, "make-ppo-loss"]], "make_ppo_model": [[220, "make-ppo-model"]], "make_redq_loss": [[221, "make-redq-loss"]], "make_redq_model": [[222, "make-redq-model"]], "make_replay_buffer": [[223, "make-replay-buffer"]], "make_sac_loss": [[224, "make-sac-loss"]], "make_sac_model": [[225, "make-sac-model"]], "make_target_updater": [[226, "make-target-updater"]], "make_trainer": [[227, "make-trainer"]], "parallel_env_constructor": [[228, "parallel-env-constructor"]], "sync_async_collector": [[229, "sync-async-collector"]], "sync_sync_collector": [[230, "sync-sync-collector"]], "transformed_env_constructor": [[231, "transformed-env-constructor"]], "README Tutos": [[232, "readme-tutos"], [242, "readme-tutos"]], "API Reference": [[233, "api-reference"]], "Contributing": [[234, "contributing"], [247, "contributing"]], "Contents:": [[234, null]], "torchrl.modules package": [[235, "torchrl-modules-package"]], "TensorDict modules": [[235, "tensordict-modules"]], "Hooks": [[235, "hooks"]], "Models": [[235, "models"], [247, "models"]], "Planners": [[235, "planners"]], "Distributions": [[235, "distributions"]], "torchrl.objectives package": [[236, "torchrl-objectives-package"]], "DQN": [[236, "dqn"]], "DDPG": [[236, "ddpg"]], "SAC": [[236, "sac"]], "REDQ": [[236, "redq"]], "IQL": [[236, "iql"]], "PPO": [[236, "ppo"]], "A2C": [[236, "a2c"]], "Reinforce": [[236, "reinforce"]], "Dreamer": [[236, "dreamer"]], "Returns": [[236, "returns"]], "torchrl.trainers package": [[237, "torchrl-trainers-package"]], "Checkpointing": [[237, "checkpointing"]], "Trainer and hooks": [[237, "trainer-and-hooks"]], "Builders": [[237, "builders"]], "Loggers": [[237, "loggers"]], "Recording utils": [[237, "recording-utils"]], "torchrl._utils package": [[238, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[239, "coding-ddpg-using-torchrl"]], "Imports": [[239, "imports"]], "Environment": [[239, "environment"], [239, "id1"]], "Normalization of the observations": [[239, "normalization-of-the-observations"]], "Parallel execution": [[239, "parallel-execution"]], "Building the model": [[239, "building-the-model"]], "Evaluator: building your recorder object": [[239, "evaluator-building-your-recorder-object"]], "Replay buffer": [[239, "replay-buffer"], [239, "id2"], [239, "id3"], [241, "replay-buffer"]], "Hyperparameters": [[239, "hyperparameters"], [240, "hyperparameters"]], "Collection": [[239, "collection"]], "Optimizer and optimization": [[239, "optimizer-and-optimization"]], "Model": [[239, "model"]], "Initialization": [[239, "initialization"]], "Normalization stats": [[239, "normalization-stats"]], "Models: policy and q-value network": [[239, "models-policy-and-q-value-network"]], "Parallel environment creation": [[239, "parallel-environment-creation"]], "Data collector": [[239, "data-collector"], [240, "data-collector"], [241, "data-collector"]], "Optimizer": [[239, "optimizer"], [240, "optimizer"]], "Time to train the policy": [[239, "time-to-train-the-policy"]], "Experiment results": [[239, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[239, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[240, "coding-a-pixel-based-dqn-using-torchrl"]], "DQN parameters": [[240, "dqn-parameters"]], "Data collection and replay buffer": [[240, "data-collection-and-replay-buffer"]], "Environment and exploration": [[240, "environment-and-exploration"]], "Building the environment": [[240, "building-the-environment"]], "Compute normalizing constants": [[240, "compute-normalizing-constants"]], "Building the model (Deep Q-network)": [[240, "building-the-model-deep-q-network"]], "Target parameters": [[240, "target-parameters"]], "Functionalizing modules": [[240, "functionalizing-modules"]], "Collecting and storing data": [[240, "collecting-and-storing-data"]], "Replay buffers": [[240, "replay-buffers"], [247, "replay-buffers"]], "Training loop of a regular DQN": [[240, "training-loop-of-a-regular-dqn"]], "DQN with TD(\\lambda)": [[240, "dqn-with-td-lambda"]], "Data: Replay buffer and collector": [[240, "data-replay-buffer-and-collector"]], "Training loop": [[240, "training-loop"], [241, "training-loop"], [244, "training-loop"]], "Conclusion and possible improvements": [[240, "conclusion-and-possible-improvements"]], "Reinforcement Learning (PPO) with TorchRL Tutorial": [[241, "reinforcement-learning-ppo-with-torchrl-tutorial"]], "Define Hyperparameters": [[241, "define-hyperparameters"]], "Data collection parameters": [[241, "data-collection-parameters"]], "PPO parameters": [[241, "ppo-parameters"]], "Define an environment": [[241, "define-an-environment"]], "Normalization": [[241, "normalization"]], "Value network": [[241, "value-network"]], "Loss function": [[241, "loss-function"]], "Results": [[241, "results"]], "Conclusion and next steps": [[241, "conclusion-and-next-steps"]], "Task-specific policy in multi-task environments": [[243, "task-specific-policy-in-multi-task-environments"]], "Executing diverse tasks in parallel": [[243, "executing-diverse-tasks-in-parallel"]], "Rollout": [[243, "rollout"]], "Pendulum: Writing your environment and transforms with TorchRL": [[244, "pendulum-writing-your-environment-and-transforms-with-torchrl"]], "Coding the effect of an action: torchrl.envs.EnvBase._step()": [[244, "coding-the-effect-of-an-action-torchrl-envs-envbase-step"]], "Resetting the simulator: torchrl.envs.EnvBase._reset()": [[244, "resetting-the-simulator-torchrl-envs-envbase-reset"]], "Environment metadata: env.*_spec": [[244, "environment-metadata-env-spec"]], "Specs shape": [[244, "specs-shape"]], "Reproducible experiments: seeding": [[244, "reproducible-experiments-seeding"]], "Wrapping things together: the torchrl.envs.EnvBase class": [[244, "wrapping-things-together-the-torchrl-envs-envbase-class"]], "Testing our environment": [[244, "testing-our-environment"]], "Transforming an environment": [[244, "transforming-an-environment"]], "Writing custom transforms": [[244, "writing-custom-transforms"]], "Executing a rollout": [[244, "executing-a-rollout"]], "Batching computations": [[244, "batching-computations"]], "Training a simple policy": [[244, "training-a-simple-policy"]], "Conclusion": [[244, "conclusion"]], "Using pretrained models": [[245, "using-pretrained-models"]], "Computation times": [[246, "computation-times"]], "Introduction to TorchRL": [[247, "introduction-to-torchrl"]], "Data": [[247, "data"]], "TensorDict": [[247, "tensordict"]], "Envs": [[247, "envs"]], "Changing environments config": [[247, "changing-environments-config"]], "Vectorized Environments": [[247, "vectorized-environments"]], "Modules": [[247, "modules"]], "TensorDictModules": [[247, "tensordictmodules"]], "Sequences of Modules": [[247, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[247, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[247, "specialized-classes"]], "Using Environments and Modules": [[247, "using-environments-and-modules"]], "Collectors": [[247, "collectors"]], "Objectives": [[247, "objectives"]], "State of the Library": [[247, "state-of-the-library"]], "Installing the Library": [[247, "installing-the-library"]], "TorchRL envs": [[248, "torchrl-envs"]], "Gym environments": [[248, "gym-environments"]], "Env Specs": [[248, "env-specs"]], "Seeding, resetting and steps": [[248, "seeding-resetting-and-steps"]], "Rollouts": [[248, "rollouts"]], "frame_skip": [[248, "frame-skip"]], "Rendering": [[248, "rendering"]], "DeepMind Control environments": [[248, "deepmind-control-environments"]], "Transforming envs": [[248, "transforming-envs"]], "Environment device": [[248, "environment-device"]], "Running environments in parallel": [[248, "running-environments-in-parallel"]], "Closing parallel environments": [[248, "closing-parallel-environments"]], "Seeding": [[248, "seeding"]], "Accessing environment attributes": [[248, "accessing-environment-attributes"]], "kwargs for parallel environments": [[248, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[248, "transforming-parallel-environments"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[11, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors.collectors)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multisyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors.collectors)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[13, "torchrl.collectors.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "randompolicy (class in torchrl.collectors.collectors)": [[14, "torchrl.collectors.collectors.RandomPolicy"]], "syncdatacollector (class in torchrl.collectors.collectors)": [[15, "torchrl.collectors.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.syncdatacollector method)": [[15, "torchrl.collectors.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors.collectors)": [[16, "torchrl.collectors.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.asyncdatacollector method)": [[16, "torchrl.collectors.collectors.aSyncDataCollector.update_policy_weights_"]], "distributeddatacollector (class in torchrl.collectors.distributed)": [[17, "torchrl.collectors.distributed.DistributedDataCollector"]], "update_policy_weights_() (torchrl.collectors.distributed.distributeddatacollector method)": [[17, "torchrl.collectors.distributed.DistributedDataCollector.update_policy_weights_"]], "distributedsyncdatacollector (class in torchrl.collectors.distributed)": [[18, "torchrl.collectors.distributed.DistributedSyncDataCollector"]], "update_policy_weights_() (torchrl.collectors.distributed.distributedsyncdatacollector method)": [[18, "torchrl.collectors.distributed.DistributedSyncDataCollector.update_policy_weights_"]], "rpcdatacollector (class in torchrl.collectors.distributed)": [[19, "torchrl.collectors.distributed.RPCDataCollector"]], "update_policy_weights_() (torchrl.collectors.distributed.rpcdatacollector method)": [[19, "torchrl.collectors.distributed.RPCDataCollector.update_policy_weights_"]], "submitit_delayed_launcher (class in torchrl.collectors.distributed)": [[20, "torchrl.collectors.distributed.submitit_delayed_launcher"]], "split_trajectories() (in module torchrl.collectors.utils)": [[21, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[22, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[22, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[22, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "expand() (torchrl.data.binarydiscretetensorspec method)": [[22, "torchrl.data.BinaryDiscreteTensorSpec.expand"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[22, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[22, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[22, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[22, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[22, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[22, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[22, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[23, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[23, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[23, "torchrl.data.BoundedTensorSpec.encode"]], "expand() (torchrl.data.boundedtensorspec method)": [[23, "torchrl.data.BoundedTensorSpec.expand"]], "index() (torchrl.data.boundedtensorspec method)": [[23, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[23, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[23, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[23, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[23, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[23, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[23, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[24, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[24, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[24, "torchrl.data.CompositeSpec.encode"]], "expand() (torchrl.data.compositespec method)": [[24, "torchrl.data.CompositeSpec.expand"]], "index() (torchrl.data.compositespec method)": [[24, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[24, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[24, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[24, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[24, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[24, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[24, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[24, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[25, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[25, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[25, "torchrl.data.DiscreteTensorSpec.encode"]], "expand() (torchrl.data.discretetensorspec method)": [[25, "torchrl.data.DiscreteTensorSpec.expand"]], "index() (torchrl.data.discretetensorspec method)": [[25, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[25, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[25, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[25, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[25, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "to_one_hot() (torchrl.data.discretetensorspec method)": [[25, "torchrl.data.DiscreteTensorSpec.to_one_hot"]], "to_one_hot_spec() (torchrl.data.discretetensorspec method)": [[25, "torchrl.data.DiscreteTensorSpec.to_one_hot_spec"]], "type_check() (torchrl.data.discretetensorspec method)": [[25, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[25, "torchrl.data.DiscreteTensorSpec.zero"]], "multidiscretetensorspec (class in torchrl.data)": [[26, "torchrl.data.MultiDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multidiscretetensorspec method)": [[26, "torchrl.data.MultiDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multidiscretetensorspec method)": [[26, "torchrl.data.MultiDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multidiscretetensorspec method)": [[26, "torchrl.data.MultiDiscreteTensorSpec.expand"]], "index() (torchrl.data.multidiscretetensorspec method)": [[26, "torchrl.data.MultiDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multidiscretetensorspec method)": [[26, "torchrl.data.MultiDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multidiscretetensorspec method)": [[26, "torchrl.data.MultiDiscreteTensorSpec.project"]], "rand() (torchrl.data.multidiscretetensorspec method)": [[26, "torchrl.data.MultiDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multidiscretetensorspec method)": [[26, "torchrl.data.MultiDiscreteTensorSpec.to_numpy"]], "to_one_hot() (torchrl.data.multidiscretetensorspec method)": [[26, "torchrl.data.MultiDiscreteTensorSpec.to_one_hot"]], "to_one_hot_spec() (torchrl.data.multidiscretetensorspec method)": [[26, "torchrl.data.MultiDiscreteTensorSpec.to_one_hot_spec"]], "type_check() (torchrl.data.multidiscretetensorspec method)": [[26, "torchrl.data.MultiDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multidiscretetensorspec method)": [[26, "torchrl.data.MultiDiscreteTensorSpec.zero"]], "multionehotdiscretetensorspec (class in torchrl.data)": [[27, "torchrl.data.MultiOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[27, "torchrl.data.MultiOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multionehotdiscretetensorspec method)": [[27, "torchrl.data.MultiOneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multionehotdiscretetensorspec method)": [[27, "torchrl.data.MultiOneHotDiscreteTensorSpec.expand"]], "index() (torchrl.data.multionehotdiscretetensorspec method)": [[27, "torchrl.data.MultiOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[27, "torchrl.data.MultiOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multionehotdiscretetensorspec method)": [[27, "torchrl.data.MultiOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multionehotdiscretetensorspec method)": [[27, "torchrl.data.MultiOneHotDiscreteTensorSpec.rand"]], "to_categorical() (torchrl.data.multionehotdiscretetensorspec method)": [[27, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_categorical"]], "to_categorical_spec() (torchrl.data.multionehotdiscretetensorspec method)": [[27, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_categorical_spec"]], "to_numpy() (torchrl.data.multionehotdiscretetensorspec method)": [[27, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multionehotdiscretetensorspec method)": [[27, "torchrl.data.MultiOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multionehotdiscretetensorspec method)": [[27, "torchrl.data.MultiOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[28, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.register_parameter"]], "register_state_dict_pre_hook() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[28, "torchrl.data.MultiStep.zero_grad"]], "onehotdiscretetensorspec (class in torchrl.data)": [[29, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.expand"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_categorical() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.to_categorical"]], "to_categorical_spec() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.to_categorical_spec"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[29, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[30, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[30, "torchrl.data.PrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.prioritizedreplaybuffer method)": [[30, "torchrl.data.PrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[30, "torchrl.data.PrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.prioritizedreplaybuffer method)": [[30, "torchrl.data.PrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[30, "torchrl.data.PrioritizedReplayBuffer.sample"]], "replaybuffer (class in torchrl.data)": [[31, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[31, "torchrl.data.ReplayBuffer.add"]], "append_transform() (torchrl.data.replaybuffer method)": [[31, "torchrl.data.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replaybuffer method)": [[31, "torchrl.data.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replaybuffer method)": [[31, "torchrl.data.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replaybuffer method)": [[31, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[32, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[32, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[32, "torchrl.data.TensorDictPrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[32, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[32, "torchrl.data.TensorDictPrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[32, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data)": [[33, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[33, "torchrl.data.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictreplaybuffer method)": [[33, "torchrl.data.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[33, "torchrl.data.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictreplaybuffer method)": [[33, "torchrl.data.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[33, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[34, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.encode"]], "expand() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.expand"]], "index() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[34, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[35, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "expand() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.expand"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[35, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "unboundeddiscretetensorspec (class in torchrl.data)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.encode"]], "expand() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.expand"]], "index() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.index"]], "is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.is_in"]], "project() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.project"]], "rand() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.unboundeddiscretetensorspec method)": [[36, "torchrl.data.UnboundedDiscreteTensorSpec.zero"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[37, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[37, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[38, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[39, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[40, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[40, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[41, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[41, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[42, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[42, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[43, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[43, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[44, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[44, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[44, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[45, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[45, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[45, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[46, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[46, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.parameters"]], "rand_action() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.rand_action"]], "rand_step() (torchrl.envs.envbase method)": [[46, "id0"], [46, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[46, "id1"], [46, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[46, "id2"], [46, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[46, "id3"], [46, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[46, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[46, "id4"], [46, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[46, "torchrl.envs.EnvBase.zero_grad"]], "envcreator (class in torchrl.envs)": [[47, "torchrl.envs.EnvCreator"]], "envmetadata (class in torchrl.envs)": [[48, "torchrl.envs.EnvMetaData"]], "gymlikeenv (class in torchrl.envs)": [[49, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[49, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.parameters"]], "rand_action() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.rand_action"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[49, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[50, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[50, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[50, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[50, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[50, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[50, "torchrl.envs.step"]], "multithreadedenv (class in torchrl.envs)": [[51, "torchrl.envs.MultiThreadedEnv"]], "add_module() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.add_module"]], "apply() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.apply"]], "batch_locked (torchrl.envs.multithreadedenv property)": [[51, "torchrl.envs.MultiThreadedEnv.batch_locked"]], "bfloat16() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.bfloat16"]], "buffers() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.buffers"]], "children() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.children"]], "close() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.close"]], "cpu() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.cpu"]], "cuda() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.cuda"]], "double() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.double"]], "eval() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.eval"]], "extra_repr() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.fake_tensordict"]], "float() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.float"]], "forward() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.forward"]], "get_buffer() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.get_buffer"]], "get_extra_state() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.get_extra_state"]], "get_parameter() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.get_parameter"]], "get_submodule() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.get_submodule"]], "half() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.half"]], "ipu() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.ipu"]], "load_state_dict() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.load_state_dict"]], "modules() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.modules"]], "named_buffers() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.named_buffers"]], "named_children() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.named_children"]], "named_modules() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.named_modules"]], "named_parameters() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.named_parameters"]], "parameters() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.parameters"]], "rand_action() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.rand_action"]], "rand_step() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.rand_step"]], "register_backward_hook() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.register_module"]], "register_parameter() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.requires_grad_"]], "reset() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.reset"]], "rollout() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.rollout"]], "set_extra_state() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.set_extra_state"]], "set_seed() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.set_seed"]], "share_memory() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.share_memory"]], "specs (torchrl.envs.multithreadedenv property)": [[51, "torchrl.envs.MultiThreadedEnv.specs"]], "state_dict() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.state_dict"]], "step() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.step"]], "to() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.to"]], "to_empty() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.to_empty"]], "train() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.train"]], "type() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.type"]], "xpu() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.xpu"]], "zero_grad() (torchrl.envs.multithreadedenv method)": [[51, "torchrl.envs.MultiThreadedEnv.zero_grad"]], "parallelenv (class in torchrl.envs)": [[52, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[52, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.parameters"]], "rand_action() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.rand_action"]], "rand_step() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[52, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[52, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[53, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[53, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.parameters"]], "rand_action() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.rand_action"]], "rand_step() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.register_parameter"]], "register_state_dict_pre_hook() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.register_state_dict_pre_hook"]], "requires_grad_() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[53, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[53, "torchrl.envs.SerialEnv.zero_grad"]], "braxenv() (in module torchrl.envs.libs.brax)": [[54, "torchrl.envs.libs.brax.BraxEnv"]], "braxwrapper() (in module torchrl.envs.libs.brax)": [[55, "torchrl.envs.libs.brax.BraxWrapper"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[56, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[57, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[58, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[59, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[60, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[61, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[62, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "vmasenv() (in module torchrl.envs.libs.vmas)": [[63, "torchrl.envs.libs.vmas.VmasEnv"]], "vmaswrapper() (in module torchrl.envs.libs.vmas)": [[64, "torchrl.envs.libs.vmas.VmasWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[65, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[66, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.CatFrames"]], "forward() (torchrl.envs.transforms.catframes method)": [[67, "torchrl.envs.transforms.CatFrames.forward"]], "reset() (torchrl.envs.transforms.catframes method)": [[67, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[67, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.CatTensors"]], "forward() (torchrl.envs.transforms.cattensors method)": [[68, "torchrl.envs.transforms.CatTensors.forward"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[68, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[69, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[70, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[70, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[70, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[70, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[70, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[70, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "discreteactionprojection (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.DiscreteActionProjection"]], "transform_input_spec() (torchrl.envs.transforms.discreteactionprojection method)": [[71, "torchrl.envs.transforms.DiscreteActionProjection.transform_input_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[72, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[72, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[72, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "excludetransform (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.ExcludeTransform"]], "forward() (torchrl.envs.transforms.excludetransform method)": [[73, "torchrl.envs.transforms.ExcludeTransform.forward"]], "reset() (torchrl.envs.transforms.excludetransform method)": [[73, "torchrl.envs.transforms.ExcludeTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.excludetransform method)": [[73, "torchrl.envs.transforms.ExcludeTransform.transform_observation_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "forward() (torchrl.envs.transforms.finitetensordictcheck method)": [[74, "torchrl.envs.transforms.FiniteTensorDictCheck.forward"]], "flattenobservation (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.FlattenObservation"]], "forward() (torchrl.envs.transforms.flattenobservation method)": [[75, "torchrl.envs.transforms.FlattenObservation.forward"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[75, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "frameskiptransform (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.FrameSkipTransform"]], "forward() (torchrl.envs.transforms.frameskiptransform method)": [[76, "torchrl.envs.transforms.FrameSkipTransform.forward"]], "grayscale (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[77, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "inittracker (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.InitTracker"]], "forward() (torchrl.envs.transforms.inittracker method)": [[78, "torchrl.envs.transforms.InitTracker.forward"]], "reset() (torchrl.envs.transforms.inittracker method)": [[78, "torchrl.envs.transforms.InitTracker.reset"]], "transform_observation_spec() (torchrl.envs.transforms.inittracker method)": [[78, "torchrl.envs.transforms.InitTracker.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[79, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[80, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_input_spec() (torchrl.envs.transforms.observationnorm method)": [[80, "torchrl.envs.transforms.ObservationNorm.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[80, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[82, "torchrl.envs.transforms.PinMemoryTransform"]], "forward() (torchrl.envs.transforms.pinmemorytransform method)": [[82, "torchrl.envs.transforms.PinMemoryTransform.forward"]], "r3mtransform (class in torchrl.envs.transforms)": [[83, "torchrl.envs.transforms.R3MTransform"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[83, "torchrl.envs.transforms.R3MTransform.to"]], "randomcroptensordict (class in torchrl.envs.transforms)": [[84, "torchrl.envs.transforms.RandomCropTensorDict"]], "forward() (torchrl.envs.transforms.randomcroptensordict method)": [[84, "torchrl.envs.transforms.RandomCropTensorDict.forward"]], "renametransform (class in torchrl.envs.transforms)": [[85, "torchrl.envs.transforms.RenameTransform"]], "forward() (torchrl.envs.transforms.renametransform method)": [[85, "torchrl.envs.transforms.RenameTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.renametransform method)": [[85, "torchrl.envs.transforms.RenameTransform.transform_input_spec"]], "transform_output_spec() (torchrl.envs.transforms.renametransform method)": [[85, "torchrl.envs.transforms.RenameTransform.transform_output_spec"]], "resize (class in torchrl.envs.transforms)": [[86, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[86, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[87, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[87, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[88, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[88, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "rewardsum (class in torchrl.envs.transforms)": [[89, "torchrl.envs.transforms.RewardSum"]], "forward() (torchrl.envs.transforms.rewardsum method)": [[89, "torchrl.envs.transforms.RewardSum.forward"]], "reset() (torchrl.envs.transforms.rewardsum method)": [[89, "torchrl.envs.transforms.RewardSum.reset"]], "transform_observation_spec() (torchrl.envs.transforms.rewardsum method)": [[89, "torchrl.envs.transforms.RewardSum.transform_observation_spec"]], "selecttransform (class in torchrl.envs.transforms)": [[90, "torchrl.envs.transforms.SelectTransform"]], "forward() (torchrl.envs.transforms.selecttransform method)": [[90, "torchrl.envs.transforms.SelectTransform.forward"]], "reset() (torchrl.envs.transforms.selecttransform method)": [[90, "torchrl.envs.transforms.SelectTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.selecttransform method)": [[90, "torchrl.envs.transforms.SelectTransform.transform_observation_spec"]], "squeezetransform (class in torchrl.envs.transforms)": [[91, "torchrl.envs.transforms.SqueezeTransform"]], "stepcounter (class in torchrl.envs.transforms)": [[92, "torchrl.envs.transforms.StepCounter"]], "forward() (torchrl.envs.transforms.stepcounter method)": [[92, "torchrl.envs.transforms.StepCounter.forward"]], "reset() (torchrl.envs.transforms.stepcounter method)": [[92, "torchrl.envs.transforms.StepCounter.reset"]], "transform_input_spec() (torchrl.envs.transforms.stepcounter method)": [[92, "torchrl.envs.transforms.StepCounter.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.stepcounter method)": [[92, "torchrl.envs.transforms.StepCounter.transform_observation_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[93, "torchrl.envs.transforms.TensorDictPrimer"]], "forward() (torchrl.envs.transforms.tensordictprimer method)": [[93, "torchrl.envs.transforms.TensorDictPrimer.forward"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[93, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[93, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[93, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "timemaxpool (class in torchrl.envs.transforms)": [[94, "torchrl.envs.transforms.TimeMaxPool"]], "forward() (torchrl.envs.transforms.timemaxpool method)": [[94, "torchrl.envs.transforms.TimeMaxPool.forward"]], "reset() (torchrl.envs.transforms.timemaxpool method)": [[94, "torchrl.envs.transforms.TimeMaxPool.reset"]], "transform_observation_spec() (torchrl.envs.transforms.timemaxpool method)": [[94, "torchrl.envs.transforms.TimeMaxPool.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[95, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[95, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[96, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[96, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[96, "torchrl.envs.transforms.Transform.reset"]], "transform_done_spec() (torchrl.envs.transforms.transform method)": [[96, "torchrl.envs.transforms.Transform.transform_done_spec"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[96, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[96, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_output_spec() (torchrl.envs.transforms.transform method)": [[96, "torchrl.envs.transforms.Transform.transform_output_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[96, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[97, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[97, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[97, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "done_spec (torchrl.envs.transforms.transformedenv property)": [[97, "torchrl.envs.transforms.TransformedEnv.done_spec"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[97, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[97, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[97, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[97, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "output_spec (torchrl.envs.transforms.transformedenv property)": [[97, "torchrl.envs.transforms.TransformedEnv.output_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[97, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[97, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[97, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[97, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[97, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[98, "torchrl.envs.transforms.UnsqueezeTransform"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[98, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[98, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[98, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[99, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[99, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[99, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[100, "torchrl.envs.transforms.VIPTransform"]], "to() (torchrl.envs.transforms.viptransform method)": [[100, "torchrl.envs.transforms.VIPTransform.to"]], "vecnorm (class in torchrl.envs.transforms)": [[101, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[101, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "forward() (torchrl.envs.transforms.vecnorm method)": [[101, "torchrl.envs.transforms.VecNorm.forward"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[101, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[101, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[101, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[102, "torchrl.envs.transforms.gSDENoise"]], "check_env_specs() (in module torchrl.envs.utils)": [[103, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[104, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[105, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[106, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[107, "torchrl.envs.utils.step_mdp"]], "cemplanner (class in torchrl.modules)": [[108, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[108, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[109, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[109, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[110, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[110, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[111, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[111, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[112, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[112, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[113, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[113, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[114, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[114, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[114, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[114, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[114, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[114, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[115, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[115, "torchrl.modules.DistributionalDQNnet.forward"]], "dreameractor (class in torchrl.modules)": [[116, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[116, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[117, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[117, "torchrl.modules.DuelingCnnDQNet.forward"]], "independentnormal (class in torchrl.modules)": [[118, "torchrl.modules.IndependentNormal"]], "mode (torchrl.modules.independentnormal property)": [[118, "torchrl.modules.IndependentNormal.mode"]], "lstmnet (class in torchrl.modules)": [[119, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[119, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[120, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[120, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[121, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[121, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[121, "torchrl.modules.MPCPlannerBase.planning"]], "mppiplanner (class in torchrl.modules)": [[122, "torchrl.modules.MPPIPlanner"]], "planning() (torchrl.modules.mppiplanner method)": [[122, "torchrl.modules.MPPIPlanner.planning"]], "noisylazylinear (class in torchrl.modules)": [[123, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[123, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[124, "torchrl.modules.NoisyLinear"]], "normalparamwrapper (class in torchrl.modules)": [[125, "torchrl.modules.NormalParamWrapper"]], "forward() (torchrl.modules.normalparamwrapper method)": [[125, "torchrl.modules.NormalParamWrapper.forward"]], "obsdecoder (class in torchrl.modules)": [[126, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[126, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[127, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[127, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[128, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[128, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[128, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[128, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[128, "torchrl.modules.OneHotCategorical.sample"]], "rssmposterior (class in torchrl.modules)": [[129, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[129, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[130, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[130, "torchrl.modules.RSSMPrior.forward"]], "tanhdelta (class in torchrl.modules)": [[131, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[131, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[131, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[132, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[132, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[133, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[133, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[133, "torchrl.modules.TruncatedNormal.mode"]], "reset_noise (class in torchrl.modules)": [[134, "torchrl.modules.reset_noise"]], "actor (class in torchrl.modules.tensordict_module)": [[135, "torchrl.modules.tensordict_module.Actor"]], "actorcriticoperator (class in torchrl.modules.tensordict_module)": [[136, "torchrl.modules.tensordict_module.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[136, "torchrl.modules.tensordict_module.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[136, "torchrl.modules.tensordict_module.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules.tensordict_module)": [[137, "torchrl.modules.tensordict_module.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[137, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[137, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules.tensordict_module)": [[138, "torchrl.modules.tensordict_module.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[138, "torchrl.modules.tensordict_module.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[138, "torchrl.modules.tensordict_module.ActorValueOperator.get_value_operator"]], "additivegaussianwrapper (class in torchrl.modules.tensordict_module)": [[139, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper"]], "forward() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[139, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.forward"]], "step() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[139, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.step"]], "distributionalqvalueactor (class in torchrl.modules.tensordict_module)": [[140, "torchrl.modules.tensordict_module.DistributionalQValueActor"]], "egreedywrapper (class in torchrl.modules.tensordict_module)": [[141, "torchrl.modules.tensordict_module.EGreedyWrapper"]], "forward() (torchrl.modules.tensordict_module.egreedywrapper method)": [[141, "torchrl.modules.tensordict_module.EGreedyWrapper.forward"]], "step() (torchrl.modules.tensordict_module.egreedywrapper method)": [[141, "torchrl.modules.tensordict_module.EGreedyWrapper.step"]], "ornsteinuhlenbeckprocesswrapper (class in torchrl.modules.tensordict_module)": [[142, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper"]], "forward() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[142, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.forward"]], "step() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[142, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.step"]], "probabilisticactor (class in torchrl.modules.tensordict_module)": [[143, "torchrl.modules.tensordict_module.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules.tensordict_module)": [[144, "torchrl.modules.tensordict_module.QValueActor"]], "safemodule (class in torchrl.modules.tensordict_module)": [[145, "torchrl.modules.tensordict_module.SafeModule"]], "random() (torchrl.modules.tensordict_module.safemodule method)": [[145, "torchrl.modules.tensordict_module.SafeModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safemodule method)": [[145, "torchrl.modules.tensordict_module.SafeModule.random_sample"]], "to() (torchrl.modules.tensordict_module.safemodule method)": [[145, "torchrl.modules.tensordict_module.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules.tensordict_module)": [[146, "torchrl.modules.tensordict_module.SafeProbabilisticModule"]], "random() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[146, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[146, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random_sample"]], "safeprobabilisticsequential (class in torchrl.modules.tensordict_module)": [[147, "torchrl.modules.tensordict_module.SafeProbabilisticSequential"]], "safesequential (class in torchrl.modules.tensordict_module)": [[148, "torchrl.modules.tensordict_module.SafeSequential"]], "valueoperator (class in torchrl.modules.tensordict_module)": [[149, "torchrl.modules.tensordict_module.ValueOperator"]], "worldmodelwrapper (class in torchrl.modules.tensordict_module)": [[150, "torchrl.modules.tensordict_module.WorldModelWrapper"]], "get_reward_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[150, "torchrl.modules.tensordict_module.WorldModelWrapper.get_reward_operator"]], "get_transition_model_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[150, "torchrl.modules.tensordict_module.WorldModelWrapper.get_transition_model_operator"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[151, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[152, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[153, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[154, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[155, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[155, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[156, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[157, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[158, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[158, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[159, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[159, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[160, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[160, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[161, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[161, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[162, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[162, "torchrl.objectives.DistributionalDQNLoss.forward"]], "dreameractorloss (class in torchrl.objectives)": [[163, "torchrl.objectives.DreamerActorLoss"]], "forward() (torchrl.objectives.dreameractorloss method)": [[163, "torchrl.objectives.DreamerActorLoss.forward"]], "dreamermodelloss (class in torchrl.objectives)": [[164, "torchrl.objectives.DreamerModelLoss"]], "forward() (torchrl.objectives.dreamermodelloss method)": [[164, "torchrl.objectives.DreamerModelLoss.forward"]], "dreamervalueloss (class in torchrl.objectives)": [[165, "torchrl.objectives.DreamerValueLoss"]], "forward() (torchrl.objectives.dreamervalueloss method)": [[165, "torchrl.objectives.DreamerValueLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[166, "torchrl.objectives.HardUpdate"]], "iqlloss (class in torchrl.objectives)": [[167, "torchrl.objectives.IQLLoss"]], "forward() (torchrl.objectives.iqlloss method)": [[167, "torchrl.objectives.IQLLoss.forward"]], "loss_value_diff() (torchrl.objectives.iqlloss static method)": [[167, "torchrl.objectives.IQLLoss.loss_value_diff"]], "klpenppoloss (class in torchrl.objectives)": [[168, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[168, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[169, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[169, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[170, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[170, "torchrl.objectives.REDQLoss.forward"]], "reinforceloss (class in torchrl.objectives)": [[171, "torchrl.objectives.ReinforceLoss"]], "forward() (torchrl.objectives.reinforceloss method)": [[171, "torchrl.objectives.ReinforceLoss.forward"]], "sacloss (class in torchrl.objectives)": [[172, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[172, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[173, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[174, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[175, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[176, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[177, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[178, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[178, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[179, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[179, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[180, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[180, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[181, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[182, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[183, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[184, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[185, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[186, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[187, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "tensordictrecorder() (in module torchrl.record)": [[188, "torchrl.record.TensorDictRecorder"]], "videorecorder() (in module torchrl.record)": [[189, "torchrl.record.VideoRecorder"]], "logger() (in module torchrl.record.loggers)": [[190, "torchrl.record.loggers.Logger"]], "csvlogger() (in module torchrl.record.loggers.csv)": [[191, "torchrl.record.loggers.csv.CSVLogger"]], "generate_exp_name() (in module torchrl.record.loggers)": [[192, "torchrl.record.loggers.generate_exp_name"]], "get_logger() (in module torchrl.record.loggers)": [[193, "torchrl.record.loggers.get_logger"]], "mlflowlogger() (in module torchrl.record.loggers.mlflow)": [[194, "torchrl.record.loggers.mlflow.MLFlowLogger"]], "tensorboardlogger() (in module torchrl.record.loggers.tensorboard)": [[195, "torchrl.record.loggers.tensorboard.TensorboardLogger"]], "wandblogger() (in module torchrl.record.loggers.wandb)": [[196, "torchrl.record.loggers.wandb.WandbLogger"]], "batchsubsampler (class in torchrl.trainers)": [[197, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[198, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[199, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[200, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[201, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[202, "torchrl.trainers.Recorder"]], "replaybuffertrainer (class in torchrl.trainers)": [[203, "torchrl.trainers.ReplayBufferTrainer"]], "rewardnormalizer (class in torchrl.trainers)": [[204, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[205, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[206, "torchrl.trainers.Trainer"]], "trainerhookbase (class in torchrl.trainers)": [[207, "torchrl.trainers.TrainerHookBase"]], "updateweights (class in torchrl.trainers)": [[208, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[209, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[210, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[211, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[212, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[213, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[214, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[215, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[216, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[217, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[218, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[219, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[220, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[221, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[222, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[223, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[224, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[225, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[226, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[227, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[228, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[229, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[230, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[231, "torchrl.trainers.helpers.transformed_env_constructor"]]}})