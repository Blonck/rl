Search.setIndex({"docnames": ["auto_examples/index", "index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.NdBoundedTensorSpec", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.Actor", "reference/generated/torchrl.modules.ActorCriticOperator", "reference/generated/torchrl.modules.ActorCriticWrapper", "reference/generated/torchrl.modules.ActorValueOperator", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueActor", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.ProbabilisticActor", "reference/generated/torchrl.modules.ProbabilisticTensorDictModule", "reference/generated/torchrl.modules.QValueActor", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TensorDictModule", "reference/generated/torchrl.modules.TensorDictModuleWrapper", "reference/generated/torchrl.modules.TensorDictSequential", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.ValueOperator", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBuffer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils"], "filenames": ["auto_examples/index.rst", "index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.NdBoundedTensorSpec.rst", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.Actor.rst", "reference/generated/torchrl.modules.ActorCriticOperator.rst", "reference/generated/torchrl.modules.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.ActorValueOperator.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.ProbabilisticActor.rst", "reference/generated/torchrl.modules.ProbabilisticTensorDictModule.rst", "reference/generated/torchrl.modules.QValueActor.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TensorDictModule.rst", "reference/generated/torchrl.modules.TensorDictModuleWrapper.rst", "reference/generated/torchrl.modules.TensorDictSequential.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.ValueOperator.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBuffer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst"], "titles": ["Example gallery", "Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips", "Useful resources", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultOneHotDiscreteTensorSpec", "MultiStep", "NdBoundedTensorSpec", "NdUnboundedContinuousTensorSpec", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "TensorDictReplayBuffer", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "GymLikeEnv", "ModelBasedEnvBase", "ParallelEnv", "SerialEnv", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DoubleToFloat", "FiniteTensorDictCheck", "FlattenObservation", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "TensorDictPrimer", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPTransform", "VecNorm", "gSDENoise", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DistributionalQValueActor", "DreamerActor", "DuelingCnnDQNet", "LSTMNet", "MLP", "MPCPlannerBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "ProbabilisticActor", "ProbabilisticTensorDictModule", "QValueActor", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TensorDictModule", "TensorDictModuleWrapper", "TensorDictSequential", "TruncatedNormal", "ValueOperator", "reset_noise", "DistributionalQValueHook", "QValueHook", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "Recorder", "ReplayBuffer", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package"], "terms": {"below": [0, 4, 7, 11, 12, 13, 14, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 90, 101, 116, 117, 120], "i": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 63, 65, 66, 69, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 89, 90, 91, 92, 93, 95, 98, 99, 100, 101, 103, 104, 108, 109, 112, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 138, 139, 140, 141, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 157, 159, 160, 163, 168, 170, 173, 175, 179, 181, 184], "download": [0, 7, 69, 78], "all": [0, 1, 4, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 60, 62, 66, 69, 73, 75, 76, 77, 78, 79, 82, 83, 84, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119, 157, 159, 177, 178, 179, 181, 184], "python": [0, 1, 4, 6, 7, 117, 184], "sourc": [0, 1, 7, 157], "code": [0, 1, 4, 7, 69, 119], "auto_examples_python": 0, "zip": 0, "jupyt": 0, "notebook": 0, "auto_examples_jupyt": 0, "gener": [0, 4, 7, 13, 32, 36, 45, 66, 85, 95, 107, 108, 109, 121, 132, 139, 142, 143, 146, 157], "sphinx": 0, "an": [1, 3, 4, 5, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 62, 65, 66, 69, 70, 74, 75, 76, 79, 86, 87, 88, 90, 91, 92, 93, 94, 100, 101, 103, 106, 109, 113, 114, 125, 128, 130, 131, 132, 133, 139, 140, 141, 153, 154, 157, 160, 163, 176, 177, 178, 179, 181], "open": [1, 5, 7, 10], "reinforc": [1, 3, 4, 9, 57, 91, 92, 93, 94, 123, 128, 129, 133, 134, 163], "learn": [1, 3, 4, 7, 9, 21, 57, 91, 92, 93, 94, 104, 123, 128, 129, 132, 133, 134, 163], "rl": [1, 3, 8, 11, 12, 13, 14, 45, 85, 104, 108, 121, 131, 149, 181, 184], "librari": [1, 7, 9, 82, 181, 185], "pytorch": [1, 3, 74, 157, 184], "It": [1, 4, 7, 21, 27, 43, 44, 45, 46, 47, 52, 76, 91, 93, 98, 109, 111, 112, 125, 128, 130, 131, 132, 133, 138, 153, 170, 181], "provid": [1, 3, 4, 9, 13, 21, 25, 26, 27, 32, 43, 44, 45, 46, 47, 58, 65, 66, 69, 73, 76, 78, 79, 85, 90, 100, 101, 102, 108, 123, 138, 149, 154, 160, 168, 170, 173, 175, 181, 184], "first": [1, 4, 7, 10, 11, 12, 13, 14, 44, 58, 63, 66, 69, 74, 76, 101, 103, 106, 109, 117, 156], "low": 1, "high": [1, 9, 139, 142, 143, 146], "level": [1, 18, 130], "abstract": [1, 17, 18, 19, 22, 23, 29, 30, 42, 43, 67, 102, 184], "ar": [1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 21, 24, 37, 38, 39, 40, 43, 44, 45, 46, 47, 60, 61, 62, 69, 73, 75, 76, 78, 79, 84, 89, 94, 95, 100, 104, 107, 109, 112, 117, 118, 119, 125, 128, 130, 131, 132, 133, 135, 138, 139, 140, 141, 175, 179, 184, 185], "intend": [1, 7, 11, 12, 13, 14], "effici": [1, 3, 104], "modular": [1, 119], "properli": 1, "test": [1, 4, 5, 100, 153, 175], "The": [1, 3, 4, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 40, 43, 44, 46, 47, 60, 66, 69, 72, 73, 76, 78, 85, 86, 89, 91, 92, 93, 94, 100, 102, 104, 108, 109, 111, 112, 117, 119, 121, 125, 126, 127, 130, 133, 138, 149, 175, 177, 178, 184], "aim": [1, 4, 7, 69, 78, 101, 159, 181], "support": [1, 4, 18, 40, 75, 82, 97, 109, 117, 119, 123, 128, 184], "research": [1, 7, 9], "most": [1, 4, 7, 21], "written": [1, 27, 37, 43, 44, 46, 47, 109, 117, 125, 130, 131, 138, 184], "highli": [1, 3], "wai": [1, 131], "can": [1, 4, 6, 7, 8, 10, 11, 12, 13, 14, 18, 19, 21, 27, 29, 31, 43, 44, 46, 47, 57, 60, 65, 66, 69, 73, 75, 76, 78, 79, 89, 102, 104, 109, 116, 117, 118, 119, 120, 125, 126, 127, 128, 130, 131, 132, 133, 138, 153, 168, 170, 173, 177, 178, 179, 181, 184], "easili": [1, 4, 7, 46, 47, 168, 170, 173], "swap": [1, 4], "compon": [1, 4, 37, 38, 39, 40, 123, 124, 125, 128, 130, 131, 132, 133, 157], "transform": [1, 21, 44, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 91, 98, 109, 117, 119, 123, 124, 163, 165, 168, 170, 173, 179], "them": [1, 7, 31, 32, 33, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119, 130], "write": [1, 21, 44, 68, 109, 117, 119, 126, 127, 132, 133, 138, 184], "new": [1, 4, 11, 12, 13, 14, 21, 25, 27, 34, 43, 44, 46, 47, 75, 79, 84, 117, 119, 125, 127, 128, 130, 131, 132, 133], "ones": [1, 18, 21, 43, 44, 46, 47, 58, 60, 61, 66, 69, 73, 76, 78, 117], "littl": [1, 4], "effort": [1, 4], "thi": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 18, 21, 24, 27, 33, 37, 38, 39, 40, 43, 44, 45, 46, 47, 52, 57, 58, 60, 62, 66, 69, 73, 75, 76, 77, 78, 79, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 149, 151, 153, 157, 158, 159, 160, 168, 170, 173, 175, 179, 181, 184], "repo": [1, 6, 181], "attempt": 1, "align": 1, "exist": [1, 21, 43, 44, 46, 47, 58, 76, 160, 179], "ecosystem": 1, "ha": [1, 7, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 45, 46, 47, 73, 76, 109, 117, 119, 130], "dataset": [1, 25, 26, 27, 32, 79, 154], "pillar": 1, "environ": [1, 4, 8, 10, 11, 12, 13, 14, 21, 24, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 61, 65, 66, 69, 75, 76, 79, 89, 100, 102, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 159, 160, 161, 162, 163, 165, 168, 170, 173, 175, 176, 177, 178, 179, 181], "model": [1, 4, 9, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 69, 78, 80, 86, 87, 88, 90, 101, 102, 109, 117, 131, 132, 133, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 181, 184], "data": [1, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 66, 85, 86, 87, 88, 89, 97, 100, 108, 109, 110, 117, 118, 119, 121, 123, 124, 126, 132, 133, 139, 140, 141, 149, 154, 157, 158, 161, 175, 177, 178, 179, 180, 184], "util": [1, 11, 12, 13, 14, 15, 21, 43, 44, 46, 47, 69, 78, 81, 82, 83, 84, 90, 118, 175, 185], "e": [1, 4, 10, 11, 12, 13, 14, 18, 21, 24, 37, 38, 43, 44, 46, 47, 58, 60, 69, 73, 75, 76, 78, 109, 116, 117, 120, 124, 138, 149, 159, 178], "g": [1, 4, 10, 21, 24, 43, 44, 46, 47, 58, 60, 69, 73, 75, 76, 78, 109, 116, 117, 120, 138, 144, 145, 147, 148, 178], "collector": [1, 11, 12, 13, 14, 15, 157, 158, 161, 162, 175, 177, 178, 180, 184], "contain": [1, 4, 7, 11, 12, 13, 14, 18, 21, 25, 26, 27, 28, 29, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 79, 84, 89, 90, 101, 117, 118, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 140, 141, 149, 154, 159, 163, 165, 168, 170, 173, 175, 176, 177, 178, 179, 184], "etc": [1, 4, 7, 21, 23, 30, 43, 44, 46, 47, 76, 101], "have": [1, 4, 6, 7, 11, 12, 14, 18, 21, 40, 43, 44, 46, 47, 57, 65, 75, 76, 79, 90, 100, 101, 119, 125, 130, 131, 135, 149, 157, 184], "few": [1, 3, 8, 149], "depend": [1, 4, 7, 121, 131], "possibl": [1, 4, 19, 21, 24, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117, 153, 157], "standard": [1, 66, 72, 79, 89, 98, 103, 104, 139, 140, 141], "numpi": [1, 13, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 74, 157], "common": [1, 4, 44, 46, 47, 86, 87, 88, 109, 175, 181, 184], "openai": [1, 7, 50, 51], "gym": [1, 4, 10, 44, 50, 51, 66, 73, 79, 163, 165, 168, 170, 173, 175, 181], "onli": [1, 5, 7, 11, 12, 14, 18, 21, 27, 43, 44, 46, 47, 58, 60, 69, 73, 76, 78, 79, 100, 109, 117, 119, 160, 184], "option": [1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 37, 38, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 84, 85, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 115, 116, 117, 119, 120, 121, 123, 124, 126, 127, 131, 132, 133, 138, 139, 140, 141, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 157, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179], "On": [1, 7], "end": [1, 21, 43, 44, 46, 47, 76, 90, 102, 142, 143, 144, 145, 146, 147, 148], "come": [1, 46, 47, 85, 86, 87, 88, 108, 121], "set": [1, 3, 4, 7, 9, 11, 12, 13, 14, 21, 24, 40, 43, 44, 45, 46, 47, 58, 60, 69, 73, 76, 78, 81, 83, 117, 118, 149, 153, 162, 179, 181, 185], "re": [1, 4, 8, 21, 43, 44, 46, 47, 109, 184], "usabl": [1, 184], "function": [1, 10, 15, 21, 37, 38, 39, 40, 43, 44, 46, 47, 60, 69, 75, 76, 77, 78, 79, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 105, 106, 107, 109, 111, 112, 114, 117, 118, 119, 120, 121, 125, 126, 127, 130, 131, 132, 133, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 163, 165, 168, 170, 173, 175], "cost": [1, 3, 19], "return": [1, 4, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 100, 101, 102, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 138, 139, 140, 141, 144, 145, 147, 148, 154, 157, 159, 161, 163, 165, 168, 170, 173, 175, 176, 177, 178, 179, 184], "process": [1, 4, 11, 12, 14, 46, 47, 79, 184], "good": [1, 9], "runtim": [1, 21, 43, 44, 46, 47], "perform": [1, 4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 60, 65, 69, 75, 76, 77, 78, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119, 131, 153, 157], "api": [1, 4, 69, 78, 184], "refer": [1, 7, 21, 43, 44, 46, 47, 76, 79, 89, 98, 105, 106, 111, 112, 123, 128, 131, 139, 142, 143, 146, 163], "packag": [1, 6, 180, 181], "helper": [1, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "replai": [1, 13, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 40, 41, 46, 47, 126, 127, 132, 133, 154, 157, 171, 175, 184], "buffer": [1, 13, 21, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 108, 109, 110, 117, 118, 119, 121, 123, 124, 126, 127, 132, 133, 139, 140, 141, 154, 157, 171, 175, 184], "compos": [1, 4, 21, 32, 35, 36, 41, 43, 44, 46, 47, 75, 76, 79, 163, 165, 168, 170, 173], "prototyp": [1, 9], "tensorspec": [1, 4, 16, 17, 18, 19, 20, 22, 23, 24, 30, 43, 45, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 85, 108, 109, 112, 117], "env": [1, 6, 7, 21, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 89, 102, 117, 160, 161, 162, 163, 165, 168, 170, 173, 175, 177, 178, 179, 180], "envbas": [1, 4, 11, 12, 13, 14, 44, 46, 47, 65, 75, 76, 79, 89, 102, 153, 160, 161, 162, 163, 165, 168, 170, 173, 175, 177, 178, 179], "gymlikeenv": 1, "vector": [1, 16, 24, 46, 47, 91, 93, 101, 141, 147, 148], "domain": [1, 3, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 73, 109, 117, 119], "specif": [1, 5, 27, 28, 33, 44, 157, 184], "modul": [1, 4, 10, 21, 43, 44, 45, 46, 47, 60, 69, 73, 75, 76, 77, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 132, 134, 136, 157, 164, 166, 167, 169, 172, 175, 180, 184], "tensordict": [1, 4, 11, 12, 13, 14, 15, 18, 19, 21, 27, 28, 31, 33, 37, 38, 43, 44, 45, 46, 47, 57, 58, 60, 61, 62, 65, 66, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 97, 100, 102, 108, 109, 110, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 140, 141, 149, 156, 157, 163, 165, 168, 170, 173, 184], "hook": [1, 21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 109, 110, 111, 112, 114, 117, 118, 119, 123, 124, 151, 152, 153, 155, 157, 158], "explor": [1, 80, 81, 83, 104, 109, 117, 118, 153, 161, 162, 175], "planner": [1, 89], "distribut": [1, 3, 4, 9, 25, 27, 66, 89, 95, 96, 97, 98, 107, 109, 111, 112, 115, 116, 120, 123, 125, 128, 130, 131, 184], "object": [1, 4, 11, 12, 13, 14, 18, 21, 37, 38, 39, 40, 43, 44, 46, 47, 69, 75, 76, 79, 85, 86, 108, 109, 117, 118, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 160, 161, 162, 174, 175, 179, 180, 184], "dqn": [1, 97, 110, 123, 127, 128, 129, 134, 165, 166], "ddpg": [1, 91, 92, 93, 94, 126, 129, 134, 163, 164], "sac": [1, 132, 133, 172, 173], "redq": [1, 132, 169, 170], "ppo": [1, 109, 125, 130, 131, 167, 168], "trainer": [1, 125, 128, 130, 131, 132, 133, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "checkpoint": 1, "builder": 1, "_util": [1, 10, 180], "implement_for": 1, "knowledg": 1, "base": [1, 4, 9, 11, 12, 13, 14, 36, 42, 45, 86, 157, 168, 170, 173, 184], "contribut": 1, "work": [1, 7, 8, 21, 43, 44, 46, 47, 58, 69, 79, 90, 101, 157, 181], "version": [1, 10, 21, 43, 44, 46, 47, 141], "habitat": [1, 52, 181], "lab": [1, 4, 48, 49, 181], "up": [1, 3, 4, 8, 9, 19, 181], "your": [1, 7, 8, 21, 43, 44, 46, 47, 79, 179, 181], "issu": [1, 5, 109, 117, 181], "about": [1, 181], "mujoco": [1, 6, 181], "instal": [1, 157, 181], "prerequisit": 1, "render": [1, 8, 153, 181], "bindindg": 1, "2": [1, 20, 21, 43, 44, 46, 47, 58, 60, 66, 69, 73, 76, 78, 79, 90, 91, 92, 93, 97, 99, 101, 117, 121, 123, 125, 126, 130, 132, 133, 138, 144, 145, 147, 148, 149], "1": [1, 3, 4, 11, 12, 13, 14, 19, 20, 21, 24, 43, 44, 45, 46, 47, 56, 58, 60, 61, 65, 66, 69, 73, 74, 76, 78, 79, 84, 86, 87, 88, 89, 90, 91, 92, 94, 99, 101, 103, 104, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 130, 131, 132, 133, 134, 138, 142, 143, 144, 145, 146, 147, 148, 149, 153, 155, 163, 165, 168, 170, 173, 175, 179, 181, 184], "old": [1, 130], "bind": 1, "py": [1, 184], "when": [1, 4, 5, 8, 11, 12, 13, 14, 21, 25, 26, 27, 32, 37, 38, 39, 40, 43, 44, 46, 47, 60, 65, 69, 73, 75, 76, 78, 79, 83, 89, 101, 103, 109, 116, 117, 119, 125, 130, 131, 138, 154, 179, 181, 184], "pro": [1, 7, 181], "tip": [1, 7, 181], "train": [1, 11, 12, 13, 14, 21, 43, 44, 46, 47, 69, 76, 78, 91, 93, 125, 128, 130, 131, 132, 133, 157, 158, 175, 184], "cluster": [1, 6, 7, 181], "us": [1, 3, 4, 7, 10, 11, 12, 13, 14, 18, 19, 21, 25, 26, 27, 31, 32, 33, 34, 43, 44, 45, 46, 47, 48, 58, 59, 66, 69, 73, 74, 75, 76, 78, 79, 83, 84, 89, 90, 91, 92, 98, 101, 104, 109, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 133, 135, 138, 139, 140, 141, 142, 143, 146, 153, 154, 157, 158, 160, 161, 162, 163, 171, 175, 179, 181, 184, 185], "resourc": [1, 181], "functorch": [1, 97, 108, 109, 110, 117, 118, 119, 121, 123, 124], "blog": 1, "websit": 1, "index": [1, 7, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 41, 42, 84, 154], "search": 1, "page": [1, 7], "central": 3, "part": [3, 21, 43, 44, 46, 47, 109, 121, 149, 179], "off": [3, 109, 116, 117, 119, 120, 133, 153, 161, 184], "polici": [3, 4, 11, 12, 13, 14, 43, 44, 45, 46, 47, 83, 84, 86, 87, 88, 104, 109, 117, 123, 124, 125, 126, 130, 131, 132, 133, 153, 158, 161, 162, 163, 165, 168, 175, 177, 178, 184], "algorithm": [3, 9, 11, 12, 45, 131, 132, 149, 161, 168, 184], "implement": [3, 4, 9, 10, 21, 40, 43, 44, 46, 47, 79, 115, 116, 120, 131, 133, 168, 170, 173, 184], "wide": [3, 4], "we": [3, 4, 5, 7, 9, 18, 21, 43, 44, 46, 47, 69, 79, 89, 100, 119, 181, 184], "also": [3, 4, 8, 21, 27, 43, 44, 46, 47, 76, 112, 119, 126, 127, 184], "storag": [3, 21, 25, 26, 27, 28, 31, 32, 33, 37, 38, 39, 43, 44, 46, 47, 154, 184], "choic": 3, "veri": [3, 4], "influenti": 3, "sampl": [3, 9, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 43, 45, 89, 95, 107, 109, 111, 116, 117, 120, 125, 126, 127, 130, 131, 149, 154, 157, 159], "latenc": 3, "especi": [3, 4, 7, 8, 58], "larger": 3, "volum": 3, "lazymemmapstorag": 3, "advis": 3, "share": [3, 37, 38, 39, 40, 46, 47, 79, 86, 87, 88, 117, 121, 123, 124, 179], "due": [3, 4], "lower": [3, 11, 12, 13, 14, 17, 22, 79, 111, 112], "serialis": 3, "memmaptensor": 3, "well": [3, 4, 11, 12, 14, 21, 40, 43, 44, 46, 47, 111, 112], "abil": 3, "specifi": [3, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 77, 89, 109, 117], "file": [3, 6, 7, 184], "locat": [3, 7, 44, 66, 72, 116, 120], "improv": 3, "node": [3, 163, 165, 168, 170, 173], "failur": 3, "recoveri": 3, "follow": [3, 4, 6, 7, 21, 43, 44, 45, 46, 47, 69, 90, 101, 125, 130, 157, 170, 173, 184], "mean": [3, 4, 7, 13, 66, 79, 89, 95, 98, 100, 109, 115, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "over": [3, 4, 11, 12, 13, 14, 21, 43, 44, 46, 47, 66, 119, 128, 159, 184], "liststorag": [3, 25, 26, 27, 32, 154], "were": [3, 7, 46, 47], "found": [3, 6, 7, 18, 21, 27, 43, 44, 46, 47, 79, 126, 131], "from": [3, 4, 9, 10, 11, 12, 13, 14, 15, 21, 24, 25, 26, 27, 28, 31, 32, 33, 37, 38, 39, 40, 43, 44, 45, 46, 47, 58, 66, 69, 73, 74, 75, 76, 78, 79, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 97, 101, 102, 103, 108, 109, 110, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 138, 149, 154, 157, 159, 160, 163, 165, 168, 170, 171, 173, 175, 176, 179, 181, 184], "rough": 3, "benchmark": [3, 9], "http": [3, 6, 7, 25, 34, 57, 69, 91, 92, 93, 94, 98, 99, 104, 105, 106, 111, 112, 123, 128, 129, 131, 132, 133, 134, 139, 142, 143, 146, 163, 168, 170, 173], "github": [3, 6, 7], "com": [3, 6, 7], "tree": 3, "main": [3, 109, 157], "type": [3, 21, 29, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 79, 90, 101, 104, 109, 117, 163, 165, 168, 170, 173, 177], "speed": [3, 8, 19], "1x": 3, "lazytensorstorag": 3, "83x": 3, "3": [3, 4, 6, 7, 18, 19, 20, 21, 24, 43, 44, 46, 47, 57, 60, 63, 66, 69, 73, 74, 76, 78, 85, 86, 87, 88, 89, 90, 91, 92, 97, 99, 101, 108, 109, 117, 119, 121, 123, 144, 145, 147, 148, 156, 165, 184], "44x": 3, "parent": [3, 4, 29, 43, 58, 66, 69, 75, 86, 131], "class": [3, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 177, 178, 179, 184], "subclass": [3, 4, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 109, 110, 111, 112, 114, 117, 118, 119, 131], "defin": [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119, 176], "basic": [3, 45], "properti": [3, 43, 44, 45, 46, 47, 76, 95, 103, 107, 115, 116, 120], "observ": [3, 4, 29, 43, 44, 45, 46, 47, 48, 49, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 70, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 91, 92, 93, 94, 97, 100, 105, 106, 108, 110, 111, 121, 123, 124, 139, 140, 141, 163, 165, 168, 170, 173, 175, 184], "action": [3, 4, 9, 19, 24, 29, 43, 44, 45, 46, 47, 61, 65, 76, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 101, 102, 108, 109, 110, 112, 115, 116, 121, 123, 124, 127, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 163, 165, 168, 170, 173, 175, 179, 184], "shape": [3, 4, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43, 44, 46, 47, 58, 74, 95, 96, 101, 103, 107, 108, 109, 115, 117, 118, 119, 135, 149, 157, 175], "devic": [3, 4, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 37, 38, 43, 44, 45, 46, 47, 60, 68, 69, 73, 74, 76, 78, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 103, 104, 108, 109, 110, 117, 118, 119, 121, 123, 124, 126, 158, 163, 165, 168, 170, 171, 173], "dtype": [3, 4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 43, 44, 45, 46, 47, 60, 61, 66, 69, 73, 74, 76, 78, 86, 87, 88, 89, 97, 103, 104, 108, 109, 110, 117, 118, 119, 121, 123, 124, 163, 165, 168, 170, 173], "offer": [4, 7], "handl": [4, 21, 43, 44, 46, 47, 79, 101, 157, 177, 178], "differ": [4, 11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 101, 123, 124, 131, 135, 140, 153, 157, 158, 177, 178, 184], "backend": [4, 7, 184], "dm": 4, "control": [4, 46, 47, 48, 49, 91, 92, 93, 94, 102, 112, 125, 130, 131, 134, 139, 142, 143, 146, 163, 184], "custom": [4, 21, 43, 44, 46, 47, 179], "goal": 4, "abl": 4, "experi": [4, 25, 34, 181], "even": [4, 8, 12, 37, 38, 39, 40], "simul": [4, 7, 55, 89], "some": [4, 7, 8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 69, 91, 109, 114, 119, 149, 159, 184], "out": [4, 21, 43, 44, 46, 47, 103, 104, 109, 117, 136, 137, 184], "box": [4, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "wrapper": [4, 14, 27, 28, 33, 45, 48, 49, 50, 51, 52, 53, 54, 109, 117, 118, 139, 179], "under": [4, 21, 43, 44, 46, 47, 109, 117], "lib": [4, 6, 7, 9, 48, 49, 50, 51, 52, 53, 54, 66, 73, 79, 163, 165, 168, 170, 173, 175], "which": [4, 7, 10, 11, 12, 13, 14, 18, 19, 21, 24, 33, 43, 44, 46, 47, 57, 58, 65, 69, 75, 76, 86, 87, 88, 109, 116, 117, 119, 120, 125, 128, 130, 131, 132, 133, 135, 149, 163, 165, 168, 170, 173, 184], "hope": 4, "imit": 4, "other": [4, 7, 21, 37, 38, 39, 40, 43, 44, 45, 46, 47, 79, 104, 109, 125, 128, 130, 131, 132, 133, 168, 170, 173, 177, 178, 184], "torch": [4, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 34, 37, 38, 43, 44, 45, 46, 47, 58, 60, 61, 66, 69, 72, 73, 74, 76, 78, 79, 84, 85, 86, 87, 88, 89, 90, 95, 97, 98, 100, 101, 103, 104, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 149, 156, 163, 165, 168, 170, 173, 175, 184], "nn": [4, 21, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 108, 109, 110, 117, 118, 119, 121, 123, 124, 127, 128, 170, 173, 175], "typic": [4, 21, 43, 44, 46, 47, 184], "method": [4, 11, 12, 13, 14, 21, 27, 31, 37, 38, 39, 40, 43, 44, 46, 47, 57, 60, 66, 69, 70, 73, 76, 78, 86, 87, 88, 89, 100, 109, 117, 118, 119, 176, 184, 185], "organis": 4, "allow": [4, 11, 12, 13, 14, 21, 24, 43, 44, 46, 47, 84, 101, 135, 184], "arbitrari": [4, 24, 46, 47], "number": [4, 8, 11, 12, 13, 14, 17, 19, 21, 22, 24, 25, 26, 27, 32, 34, 37, 38, 39, 43, 44, 45, 46, 47, 57, 65, 66, 72, 79, 89, 90, 95, 96, 98, 99, 101, 105, 106, 109, 111, 112, 115, 116, 117, 120, 132, 133, 149, 151, 153, 154, 157, 158, 159, 160, 177, 178, 179], "input": [4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 43, 44, 45, 46, 47, 58, 60, 61, 69, 75, 77, 78, 84, 90, 91, 92, 93, 94, 100, 101, 103, 104, 109, 111, 112, 113, 114, 117, 118, 119, 125, 128, 130, 131, 132, 133, 138, 142, 143, 144, 145, 146, 147, 148, 159, 175, 184], "output": [4, 11, 12, 13, 14, 21, 25, 26, 27, 32, 43, 44, 45, 46, 47, 69, 75, 78, 86, 90, 91, 92, 96, 98, 100, 101, 109, 117, 118, 119, 123, 124, 125, 128, 130, 131, 132, 133, 149, 154], "nest": [4, 18, 21, 43, 44, 46, 47, 184], "batch": [4, 11, 12, 13, 14, 15, 19, 21, 24, 25, 26, 27, 28, 31, 32, 33, 43, 44, 45, 46, 47, 76, 95, 96, 100, 103, 107, 109, 115, 117, 125, 128, 130, 131, 132, 133, 142, 143, 144, 145, 146, 147, 148, 149, 154, 156, 157, 158, 177, 178, 179, 184], "structur": [4, 7], "each": [4, 7, 11, 12, 13, 14, 15, 20, 21, 25, 27, 43, 44, 46, 47, 73, 79, 119, 123, 124, 144, 145, 147, 148, 153, 177, 178], "attribut": [4, 21, 43, 44, 46, 47, 69, 109], "batch_siz": [4, 18, 25, 26, 28, 31, 32, 33, 43, 45, 73, 86, 87, 88, 89, 97, 108, 109, 110, 117, 119, 121, 123, 124, 149, 154, 163, 165, 168, 170, 173], "size": [4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 40, 43, 44, 45, 46, 47, 58, 69, 73, 74, 76, 77, 78, 86, 87, 88, 89, 90, 95, 97, 100, 101, 107, 108, 109, 110, 111, 112, 115, 117, 119, 121, 123, 124, 138, 149, 154, 163, 165, 168, 170, 173], "repres": [4, 11, 12, 13, 14, 27, 43, 44, 46, 47, 123, 124, 135], "togeth": [4, 11, 12, 13, 14, 86, 87, 88], "where": [4, 7, 11, 12, 13, 14, 25, 26, 27, 28, 31, 32, 33, 37, 38, 43, 44, 45, 46, 47, 69, 75, 78, 109, 117, 125, 126, 128, 129, 130, 131, 132, 133, 134, 138, 154, 157, 158, 184], "expect": [4, 7, 18, 21, 29, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 77, 78, 109, 117, 119, 125, 130, 131, 160, 181, 184], "live": [4, 11, 12, 13, 14, 21, 25, 26, 27, 28, 31, 32, 33, 43, 44, 45, 46, 47, 154], "doe": [4, 25, 27, 34, 40, 103, 119, 125, 130, 131, 138, 157, 184], "actual": [4, 7, 11, 12, 14, 43, 44, 46, 47, 159], "step": [4, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 65, 66, 76, 84, 89, 98, 100, 102, 109, 131, 138, 149, 153, 157, 184], "oper": [4, 7, 11, 12, 14, 21, 43, 44, 46, 47, 75, 86, 87, 88, 117, 118, 123, 125, 126, 127, 128, 130, 131, 138, 139, 140, 141, 157, 163, 165, 170, 173, 184], "comput": [4, 11, 13, 19, 21, 25, 27, 43, 44, 46, 47, 60, 66, 69, 75, 76, 77, 78, 86, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 116, 117, 118, 119, 120, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 160], "respons": [4, 109, 157], "do": [4, 7, 11, 12, 13, 14, 44, 65, 84, 87, 103, 184], "just": [4, 149, 184], "retriev": [4, 31, 32, 33, 43, 44, 46, 47, 58, 66, 84, 89, 109, 125, 130, 131, 139, 140, 141, 163, 165, 168, 170, 173, 179, 184], "take": [4, 15, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119, 142, 143, 144, 145, 146, 147, 148, 149, 158, 184], "care": [4, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119], "map": [4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 37, 43, 44, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 86, 87, 88, 109, 117, 119, 123, 154], "desir": [4, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 83, 90, 101, 109, 117], "see": [4, 6, 7, 8, 9, 11, 12, 13, 14, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 80, 90, 101, 103, 116, 117, 120], "For": [4, 7, 9, 11, 12, 13, 14, 21, 43, 44, 46, 47, 103, 123, 128, 131, 153, 163, 184], "parametr": [4, 104, 133], "hardwar": 4, "observation_spec": [4, 43, 45, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 73, 74, 75, 76, 77, 78, 89, 160, 175], "compositespec": [4, 43, 45, 73, 85, 89, 108, 119], "kei": [4, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 33, 43, 44, 46, 47, 57, 58, 66, 69, 73, 75, 76, 78, 79, 84, 89, 102, 109, 117, 118, 119, 121, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 140, 141, 153, 156, 157, 160, 168, 170, 173, 184], "spec": [4, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 97, 108, 109, 110, 112, 117, 118, 119, 123, 124, 163, 165, 168, 170, 173], "pair": [4, 21, 27, 43, 44, 46, 47, 86, 109], "input_spec": [4, 43, 45, 46, 47, 60, 61, 69, 75, 76, 77, 78, 89], "action_spec": [4, 43, 44, 45, 46, 47, 76, 83, 85, 97, 108, 110, 112, 123, 124, 175], "reward_spec": [4, 43, 45, 56, 60, 61, 69, 71, 72, 75, 76, 77, 78, 89], "reward": [4, 21, 29, 43, 44, 45, 46, 47, 56, 60, 61, 69, 71, 72, 75, 76, 77, 78, 79, 84, 89, 126, 127, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 155, 179, 184], "importantli": [4, 109], "should": [4, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 40, 43, 44, 45, 46, 47, 60, 66, 69, 75, 76, 77, 78, 79, 84, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119, 129, 130, 131, 132, 134, 138, 153, 154, 157, 175, 177, 178, 179, 184], "4": [4, 7, 19, 24, 45, 48, 49, 50, 53, 57, 79, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 108, 109, 110, 117, 118, 119, 121, 123, 124], "action_s": 4, "simpli": [4, 6], "With": [4, 184], "reset": [4, 11, 12, 13, 14, 43, 44, 45, 46, 47, 54, 57, 60, 65, 69, 73, 75, 78, 79, 80, 84, 122, 163, 165, 168, 170, 173], "mai": [4, 5, 7, 11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 79, 101, 184], "necessarili": 4, "requir": [4, 7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 43, 44, 46, 47, 60, 69, 73, 76, 78, 101, 117, 119, 125, 128, 130, 131, 132, 133, 184], "rollout": [4, 11, 12, 13, 14, 43, 44, 45, 46, 47, 83, 89, 160], "usual": [4, 6, 43, 44, 46, 47, 104, 168, 170, 173, 181, 184], "done": [4, 7, 18, 21, 43, 44, 45, 46, 47, 66, 72, 73, 79, 84, 89, 126, 127, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 163, 165, 168, 170, 173], "state": [4, 11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 57, 58, 60, 69, 73, 75, 76, 78, 79, 80, 86, 89, 98, 100, 101, 105, 109, 111, 112, 117, 119, 132, 138, 139, 140, 141, 179], "stateless": [4, 46, 47, 75], "instanc": [4, 7, 8, 11, 12, 13, 14, 21, 29, 43, 44, 45, 46, 47, 49, 57, 60, 69, 73, 75, 77, 78, 79, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119, 153, 160, 161, 162, 163, 165, 168, 170, 173, 175, 177, 178, 184], "set_se": [4, 11, 12, 13, 14, 43, 44, 45, 46, 47, 66, 76], "integ": [4, 11, 12, 13, 14, 20, 21, 24, 25, 26, 27, 40, 43, 44, 46, 47, 90, 101, 154], "seed": [4, 11, 12, 13, 14, 43, 44, 45, 46, 47, 48, 76, 157], "next": [4, 11, 12, 18, 21, 25, 26, 27, 32, 43, 44, 45, 46, 47, 79, 84, 112, 132, 138, 154], "multi": [4, 7, 9, 21, 22, 23, 43, 44, 46, 47, 100, 101], "determinist": [4, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 85, 98, 105, 109, 112, 117], "preced": [4, 100], "one": [4, 7, 10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 28, 31, 32, 33, 40, 41, 42, 43, 44, 46, 47, 60, 65, 69, 75, 76, 77, 78, 79, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 109, 110, 111, 112, 114, 117, 118, 119, 123, 124, 125, 126, 127, 130, 131, 132, 151, 153, 154, 157, 160, 168, 170, 173, 179, 181, 184], "multipl": [4, 11, 12, 13, 14, 19, 46, 47, 58, 75, 79, 100, 103, 104, 117, 132, 170, 179, 184], "without": [4, 7, 9, 21, 43, 44, 46, 47, 87, 132, 138, 175, 181], "risk": 4, "overlap": 4, "consecut": 4, "while": [4, 7, 21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119, 130, 131], "still": [4, 9, 130], "reproduc": 4, "result": [4, 7, 11, 12, 13, 14, 21, 43, 44, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 101, 124, 142, 143, 144, 145, 146, 147, 148, 158], "max_step": [4, 43, 44, 45, 46, 47, 83, 84], "execut": [4, 7, 13, 21, 43, 44, 45, 46, 47, 119, 160, 179, 184], "maximum": [4, 11, 12, 13, 14, 17, 21, 22, 25, 26, 27, 37, 38, 39, 43, 44, 46, 47, 71, 108, 115, 116, 120, 133, 154], "tensordictmodul": [4, 45, 86, 87, 88, 89, 102, 108, 109, 118, 119, 125, 126, 130, 131, 132, 133, 138, 139, 140, 141, 153, 161, 162, 175], "ani": [4, 18, 21, 25, 26, 27, 28, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 69, 76, 79, 90, 101, 104, 117, 119, 131, 154, 157, 181], "compat": [4, 5, 7, 10, 21, 40, 43, 44, 46, 47, 52, 79, 135], "better": 4, "parallel": [4, 8, 11, 12, 14, 176, 177, 178, 179], "featur": [4, 11, 12, 13, 14, 24, 43, 44, 46, 47, 57, 90, 98, 99, 101, 103, 104, 109, 179], "cpu": [4, 8, 21, 29, 37, 38, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 86, 87, 88, 89, 97, 104, 108, 109, 110, 117, 119, 121, 123, 124, 163, 165, 168, 170, 173], "intens": [4, 8], "gym3": 4, "envpool": 4, "interfac": [4, 101, 103], "simultan": [4, 46, 47], "thei": [4, 8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 61, 62, 75, 76, 100, 125, 128, 130, 131, 132, 133, 157, 184], "often": [4, 129, 157], "competit": 4, "advantag": [4, 99, 125, 130, 131, 139, 140, 141, 142, 143, 144, 146, 147, 184], "scale": [4, 66, 72, 86, 88, 98, 108, 109, 111, 112, 116, 119, 120, 155, 160, 168, 170, 173, 179], "varieti": 4, "therefor": [4, 7, 131], "its": [4, 7, 11, 12, 13, 14, 21, 27, 43, 44, 45, 46, 47, 57, 75, 76, 79, 90, 97, 109, 117, 119, 125, 128, 130, 131, 132, 133, 157, 175, 184], "own": [4, 11, 12, 14, 21, 43, 44, 46, 47], "parallelenv": [4, 11, 12, 13, 14, 47, 176], "run": [4, 5, 6, 7, 8, 11, 12, 14, 21, 43, 44, 45, 46, 47, 48, 49, 60, 65, 66, 69, 75, 76, 77, 78, 79, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119, 153, 177, 178, 179, 181, 184], "As": [4, 43, 44, 46, 47, 109], "inherit": [4, 102, 184], "enjoi": 4, "exact": 4, "same": [4, 13, 21, 43, 44, 46, 47, 65, 75, 76, 79, 90, 101], "Of": [4, 7, 181], "cours": [4, 181], "correspond": [4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 34, 43, 44, 45, 46, 47, 73, 76, 79, 109], "count": [4, 153, 159], "def": [4, 10, 21, 43, 44, 45, 46, 47, 89, 118, 121, 123, 184], "make_env": [4, 79, 84, 161, 162], "gymenv": [4, 11, 12, 13, 14, 52, 60, 66, 73, 76, 79, 163, 165, 168, 170, 173, 175], "pendulum": [4, 11, 12, 13, 14, 50, 51, 60, 66, 73, 76, 79, 175], "v1": [4, 13, 66, 73, 135, 144, 145, 147, 148], "from_pixel": [4, 48, 49, 168, 170, 173], "true": [4, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 43, 44, 45, 46, 47, 48, 49, 58, 60, 65, 66, 69, 72, 73, 74, 76, 78, 79, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 101, 103, 104, 109, 116, 117, 119, 120, 125, 130, 131, 132, 133, 135, 139, 140, 141, 144, 145, 147, 148, 151, 152, 153, 157, 165, 179, 184], "9": [4, 7, 21, 79, 184], "81": 4, "cuda": [4, 7, 21, 43, 44, 46, 47, 60, 68, 69, 73, 76, 78, 117, 150], "0": [4, 6, 7, 10, 20, 21, 24, 25, 27, 34, 43, 44, 45, 46, 47, 56, 58, 60, 63, 65, 66, 69, 73, 74, 76, 78, 79, 84, 89, 90, 91, 92, 94, 98, 101, 103, 104, 109, 111, 112, 115, 116, 117, 118, 119, 120, 125, 130, 131, 132, 133, 134, 138, 149, 155, 157, 175, 179, 184], "print": [4, 6, 7, 18, 19, 21, 24, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 58, 61, 66, 73, 74, 79, 84, 85, 86, 87, 88, 90, 97, 101, 109, 110, 117, 118, 119, 121, 123, 124, 163, 165, 168, 170, 173, 175, 184], "call": [4, 7, 10, 11, 12, 13, 14, 21, 25, 26, 27, 31, 32, 37, 38, 39, 40, 43, 44, 46, 47, 57, 60, 61, 68, 69, 73, 75, 76, 77, 78, 79, 83, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 105, 106, 109, 111, 112, 114, 117, 118, 119, 138, 153, 154, 184], "b": [4, 15, 18, 103, 104, 109, 119], "c": [4, 6, 7, 18, 163, 165, 168, 170, 173], "d": [4, 25, 34, 109], "get": [4, 6, 7, 40, 46, 47, 58, 61, 66, 74, 79, 85, 109, 118, 142, 143, 146], "forc": [4, 6, 7], "variou": [4, 11, 12, 13, 14, 125, 128, 130, 131, 132, 133, 177, 178], "befor": [4, 7, 11, 12, 13, 14, 21, 43, 44, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 77, 78, 101, 103, 104, 109, 117, 119, 125, 128, 130, 131, 132, 133, 139, 140, 141], "reset_work": 4, "fals": [4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 44, 45, 46, 47, 48, 58, 60, 65, 66, 69, 72, 73, 74, 76, 78, 79, 86, 87, 88, 89, 90, 91, 97, 101, 108, 109, 110, 117, 118, 119, 121, 123, 124, 126, 127, 128, 132, 133, 135, 139, 140, 141, 144, 145, 147, 148, 151, 152, 153, 154, 155, 157, 163, 165, 168, 170, 173, 179, 184], "field": [4, 11, 12, 13, 14, 18, 21, 43, 44, 45, 46, 47, 73, 76, 86, 87, 88, 89, 97, 108, 109, 110, 117, 119, 121, 123, 124, 160, 163, 165, 168, 170, 173, 181], "tensor": [4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 57, 58, 60, 63, 66, 69, 72, 73, 74, 75, 76, 78, 79, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 163, 165, 168, 170, 173, 184], "bool": [4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 44, 45, 46, 47, 48, 49, 58, 65, 66, 69, 72, 73, 74, 76, 78, 79, 84, 89, 90, 91, 92, 101, 103, 104, 109, 116, 117, 119, 120, 125, 126, 127, 128, 130, 131, 132, 133, 135, 139, 140, 141, 144, 145, 147, 148, 151, 152, 153, 154, 155, 157, 163, 165, 168, 170, 173, 179], "pixel": [4, 7, 18, 64, 69, 70, 74, 78, 91, 105, 106, 165, 168, 170, 173], "500": [4, 157], "uint8": [4, 74], "none": [4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 38, 39, 40, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 84, 85, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 107, 108, 109, 117, 119, 121, 123, 124, 131, 138, 139, 140, 141, 144, 145, 147, 148, 153, 154, 157, 160, 161, 162, 163, 165, 168, 170, 173, 175, 177, 178, 179, 184], "is_shar": [4, 18, 45, 73, 79, 86, 89, 97, 108, 109, 110, 117, 119, 163, 165, 168, 170, 173], "A": [4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 52, 69, 73, 75, 76, 79, 80, 84, 89, 90, 101, 104, 109, 117, 119, 123, 125, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 151, 154, 157, 158, 165, 168, 170, 173, 175], "note": [4, 11, 12, 13, 14, 21, 43, 44, 46, 47, 79, 109], "launch": 4, "quit": 4, "time": [4, 5, 7, 11, 12, 13, 14, 21, 43, 44, 46, 47, 58, 73, 79, 84, 98, 100, 132, 157], "mani": [4, 125, 130, 131, 132], "import": [4, 6, 7, 25, 27, 34, 44, 45, 46, 47, 66, 73, 79, 85, 86, 87, 88, 89, 97, 101, 108, 109, 110, 117, 118, 119, 121, 123, 124, 125, 151, 153, 163, 165, 168, 170, 173, 175], "start": [4, 11, 84], "bottleneck": 4, "why": 4, "so": [4, 6, 7, 21, 43, 44, 46, 47, 79, 119], "slow": 4, "onc": [4, 7, 11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 118, 184], "great": [4, 7, 8], "speedup": 4, "serialenv": 4, "serial": [4, 21, 43, 44, 46, 47, 79], "mostli": [4, 14], "purpos": [4, 7, 175], "want": [4, 6, 7, 119], "assess": 4, "behaviour": [4, 44, 58, 116, 120, 153], "subprocess": 4, "In": [4, 7, 10, 11, 12, 14, 21, 43, 44, 46, 47, 60, 69, 73, 75, 76, 78, 101, 109, 112, 116, 117, 119, 120, 158, 177, 178, 179], "case": [4, 7, 10, 11, 12, 13, 14, 18, 25, 27, 34, 43, 44, 46, 47, 76, 101, 109, 117, 119, 149, 158, 177, 178, 179, 184], "raw": [4, 116, 120], "must": [4, 7, 11, 12, 13, 14, 18, 21, 37, 38, 39, 40, 43, 44, 46, 47, 73, 76, 90, 101, 109, 117, 123, 124, 142, 143, 144, 145, 146, 147, 148, 149, 153, 157, 158, 163, 165, 168, 170, 173], "treat": 4, "being": [4, 14, 21, 43, 44, 46, 47, 76, 83, 158, 177, 178, 179], "pass": [4, 13, 18, 21, 27, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 105, 106, 109, 111, 112, 114, 117, 118, 119, 177, 178, 179], "anoth": [4, 43, 44, 46, 47, 75, 101, 109, 125, 128, 130, 131, 132, 133], "valu": [4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 43, 44, 45, 46, 47, 56, 58, 65, 69, 71, 73, 74, 75, 76, 78, 79, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103, 104, 107, 108, 109, 110, 115, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 157, 163, 168, 170, 173, 175, 184], "To": [4, 6, 7, 21, 43, 44, 46, 47, 79, 86, 87, 88, 157], "logic": 4, "torchvis": 4, "build": [4, 7, 15, 18, 21, 43, 44, 46, 47, 79, 89, 109, 157, 164, 166, 167, 169, 171, 172, 174, 184], "transformedenv": [4, 60, 65, 66, 73, 75, 79, 163, 165, 168, 170, 173], "primit": 4, "built": [4, 7, 171, 175, 176, 179], "base_env": [4, 73], "totensorimag": [4, 165], "in_kei": [4, 45, 56, 57, 58, 59, 61, 63, 64, 66, 67, 69, 70, 71, 72, 74, 75, 78, 79, 85, 86, 87, 88, 89, 108, 109, 117, 118, 119, 121, 126, 127, 170, 173, 175], "resiz": 4, "64": [4, 91, 92, 99], "By": [4, 24, 44, 46, 47, 109, 153, 179], "default": [4, 11, 12, 13, 14, 18, 19, 21, 24, 27, 32, 37, 38, 43, 44, 46, 47, 48, 57, 58, 63, 65, 66, 69, 72, 73, 74, 76, 78, 79, 84, 85, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 103, 104, 105, 106, 108, 109, 111, 112, 114, 115, 116, 117, 119, 120, 121, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 147, 148, 149, 151, 152, 153, 155, 157, 163, 168, 170, 173, 175, 179, 184], "now": [4, 7], "appar": [4, 151], "bring": 4, "signific": 4, "kind": [4, 29, 84], "consult": 4, "achiev": [4, 21, 43, 44, 46, 47, 184], "interest": [4, 46, 47, 109], "exampl": [4, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 58, 60, 61, 66, 69, 73, 74, 76, 78, 79, 83, 84, 85, 86, 87, 88, 89, 90, 97, 100, 101, 108, 109, 110, 117, 118, 119, 121, 123, 124, 149, 150, 151, 152, 155, 156, 158, 163, 165, 168, 170, 173, 175, 184], "abov": [4, 7, 21, 43, 44, 46, 47, 116, 120, 184], "resize_par": 4, "sinc": [4, 7, 21, 43, 44, 45, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119], "out_kei": [4, 45, 46, 47, 56, 58, 67, 69, 70, 71, 74, 75, 78, 85, 86, 88, 89, 108, 109, 117, 118, 119, 121, 123, 124, 153, 175], "keyword": [4, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 109, 117, 176], "argument": [4, 11, 12, 13, 14, 18, 21, 43, 44, 46, 47, 60, 69, 73, 75, 76, 78, 90, 101, 103, 109, 117, 121, 151, 159, 163, 165, 168, 170, 173, 175, 176, 179], "easi": 4, "root": [4, 116, 120], "graph": [4, 136, 137], "inv": 4, "appli": [4, 21, 43, 44, 46, 47, 76, 116, 184], "revers": 4, "order": [4, 13, 21, 24, 43, 44, 46, 47, 76, 117, 119], "chain": [4, 60, 90, 119], "taken": [4, 43, 44, 46, 47], "includ": [4, 7, 9, 21, 37, 38, 39, 40, 43, 44, 45, 46, 47, 76, 79, 159, 184], "invers": 4, "through": [4, 13, 46, 47, 101, 109, 119], "in_keys_inv": [4, 61, 75], "append_transform": [4, 69, 73], "doubletofloat": [4, 163, 168, 170, 173], "float32": [4, 18, 25, 29, 34, 45, 61, 66, 73, 74, 86, 87, 88, 89, 97, 108, 109, 110, 117, 119, 121, 123, 124, 163, 165, 168, 170, 173], "float64": [4, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "torchrl": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "against": [5, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 109, 117], "latest": 5, "guarante": [5, 21, 37, 38, 39, 40, 43, 44, 46, 47, 79], "wa": [5, 7, 43, 44, 46, 47, 76, 129, 134], "avail": [5, 6, 109, 123, 124, 177, 178], "releas": [5, 7, 21, 43, 44, 46, 47, 76], "howev": [5, 7, 21, 43, 44, 46, 47, 76], "project": [5, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 109, 117], "willing": 5, "keep": [5, 7, 12, 69, 78, 79, 151, 157], "backward": [5, 21, 43, 44, 46, 47, 79], "older": [5, 7], "If": [5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 43, 44, 45, 46, 47, 58, 59, 65, 69, 75, 76, 78, 79, 90, 100, 101, 109, 117, 119, 138, 147, 148, 154, 157, 158, 160, 168, 170, 173, 175, 179, 181], "you": [5, 6, 7, 8, 21, 43, 44, 46, 47, 79, 181], "feel": [5, 181], "free": [5, 7, 131, 184], "gladli": 5, "look": [5, 7, 21, 43, 44, 46, 47, 69, 109, 119], "instruct": 6, "prepar": 6, "conda": [6, 7, 181], "assum": [6, 18, 24, 33, 44, 46, 47, 69, 73, 78, 100, 144, 145, 147, 148], "let": [6, 7, 21, 43, 44, 46, 47, 153], "": [6, 7, 21, 25, 26, 27, 32, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 79, 90, 104, 109, 117, 119, 133, 154, 170, 173], "creat": [6, 7, 11, 12, 14, 21, 32, 43, 44, 46, 47, 69, 75, 76, 79, 84, 90, 91, 92, 93, 94, 99, 101, 109, 117, 118, 119, 127, 128, 132, 160, 161, 162, 175, 177, 178], "n": [6, 7, 16, 19, 21, 24, 43, 44, 46, 47, 57, 109, 138, 184], "7": [6, 19, 24, 89, 90, 100, 101], "cmake": 6, "14": [6, 10, 66], "activ": [6, 7, 9, 90, 98, 101, 131], "sim": 6, "bullet": 6, "physic": [6, 7, 184], "headless": [6, 7], "mode": [6, 13, 21, 43, 44, 46, 47, 76, 79, 81, 83, 95, 107, 109, 115, 116, 120, 153], "necessari": [6, 11, 12, 13, 14, 119, 132, 139, 140, 141], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": 6, "y": [6, 7, 100], "git": [6, 7], "facebookresearch": 6, "subdirectori": 6, "reduc": [6, 19], "verbos": 6, "export": 6, "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "don": [6, 7, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43], "t": [6, 7, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 43, 44, 46, 47, 69, 78, 79, 84, 117, 126, 157, 158, 179, 181], "remov": [6, 21, 43, 44, 46, 47], "command": [6, 7], "more": [6, 8, 11, 12, 13, 14, 21, 25, 26, 27, 28, 31, 32, 33, 43, 44, 46, 47, 80, 101, 103, 117, 123, 128, 131, 139, 142, 143, 146, 154, 163, 181, 184], "detail": [6, 7, 21, 43, 44, 46, 47, 76, 123, 128, 131, 163, 181], "readm": [6, 7], "md": [6, 7], "list": [6, 7, 9, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 39, 40, 43, 44, 45, 46, 47, 57, 69, 76, 78, 101, 109, 117, 119, 121, 137, 139, 140, 141, 153, 154, 177, 178], "habitatenv": 6, "_has_habitat": 6, "assert": [6, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 44, 79, 84, 149, 156], "check": [6, 7, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 45, 46, 47, 58, 62, 109, 117], "_env": 6, "available_env": [6, 48, 49, 50, 51, 53, 54], "startswith": 6, "importerror": [6, 7], "usr": [6, 7], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 21, 43, 44, 46, 47, 76], "symbol": [6, 7], "_glapi_tls_curr": [6, 7], "solut": [6, 7, 9, 181, 184], "debug": 6, "link": [6, 7], "right": [6, 7, 100], "replac": [6, 7, 21], "path": [6, 7, 21, 37, 43, 44, 46, 47, 69, 78, 157, 184], "mujoco_env": [6, 7], "proper": [6, 7], "name": [6, 7, 10, 21, 43, 44, 46, 47, 48, 76, 125, 128, 130, 131, 132, 133, 152, 163, 165, 168, 170, 173, 184], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "config": [6, 7, 160, 161, 162, 163, 165, 168, 170, 171, 173, 176], "var": [6, 7, 21, 43, 44, 46, 47, 76], "ld_preload": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": 7, "repositori": 7, "stand": [7, 86, 87, 88], "joint": 7, "dynam": 7, "contact": 7, "engin": 7, "facilit": [7, 27, 68, 69, 78, 86, 87, 88], "develop": 7, "robot": [7, 69, 78], "biomechan": 7, "graphic": 7, "anim": 7, "machin": [7, 21], "area": 7, "demand": 7, "fast": [7, 9, 132], "accur": 7, "articul": 7, "interact": [7, 13, 83, 109], "recent": 7, "acquir": 7, "deepmind": [7, 9, 48, 49], "access": [7, 21, 43, 44, 46, 47, 69, 179, 181], "whomev": 7, "licenc": 7, "incorpor": 7, "make": [7, 21, 40, 43, 44, 46, 47, 51, 54, 66, 69, 84, 103, 109, 131, 162, 179], "relianc": 7, "obsolet": 7, "seri": [7, 24, 41, 42, 47, 65, 75], "legaci": 7, "document": [7, 21, 43, 44, 46, 47, 76], "capabl": [7, 184], "glfw": 7, "osmesa": 7, "egl": 7, "hand": 7, "gpu": [7, 8, 21, 43, 44, 46, 47], "our": 7, "advic": 7, "sudo": [7, 181], "enabl": [7, 153], "apt": 7, "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "via": [7, 46, 75, 78, 126, 184], "awar": [7, 37, 38, 39, 40], "fact": 7, "indent": 7, "workflow": [7, 86, 87, 88], "thing": 7, "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "both": [7, 21, 43, 44, 46, 47, 76, 86, 87, 88, 90, 101, 153], "tell": 7, "appropri": [7, 11, 12, 13, 14, 41, 42, 176, 179], "variabl": [7, 19, 24, 86, 87, 88, 132, 184], "mujoco_gl": 7, "pyopengl_platform": 7, "deactiv": 7, "pre": [7, 21, 38, 43, 44, 46, 47, 69, 78], "binari": [7, 16, 24, 56, 123, 124], "need": [7, 21, 40, 43, 44, 46, 47, 60, 69, 75, 76, 77, 78, 79, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 105, 106, 109, 111, 112, 114, 117, 118, 119, 132, 138, 157, 179], "These": 7, "instead": [7, 19, 21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119, 179], "becaus": [7, 75, 94, 100, 109, 117], "setup": 7, "like": [7, 21, 43, 44, 46, 47, 52, 74, 132], "mkdir": 7, "cd": 7, "here": [7, 9], "tag": [7, 179], "earlier": [7, 11, 12, 13, 14], "roboti": 7, "u": 7, "html": 7, "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 44, 89], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": 7, "bin": 7, "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "too": [7, 116, 120, 125, 128, 130, 131, 132, 133], "mujoco_py_mjkey_path": 7, "reload": 7, "recommend": 7, "hard": [7, 129], "chang": [7, 21, 37, 38, 39, 40, 43, 44, 46, 47, 76, 79], "later": [7, 94, 109], "known": [7, 8], "try": 7, "nativ": [7, 9, 43, 44, 46, 47, 57, 109, 117, 119], "usag": [7, 133], "local": [7, 13, 21, 31, 43, 44, 46, 47, 76], "modifi": [7, 21, 43, 44, 46, 47, 60, 69, 73, 75, 76, 78, 117, 159, 168, 170, 173], "nvidia": 7, "driver": 7, "those": [7, 46, 47, 66, 109, 119, 158, 177, 178], "hack": 7, "line": [7, 21, 43, 44, 46, 47], "adatp": 7, "script": [7, 163, 165, 168, 170, 173, 175, 179, 184], "go": 7, "unnot": 7, "until": 7, "complet": [7, 9, 44, 181], "mujoco_pi": 7, "trigger": 7, "pipelin": 7, "caus": 7, "problem": [7, 13], "give": [7, 45, 181], "troubleshoot": 7, "gl": 7, "h": [7, 59, 70, 74], "eglshim": 7, "10": [7, 18, 45, 74, 89, 118, 132, 133, 149, 184], "fatal": 7, "error": [7, 10, 21, 43, 44, 46, 47], "No": 7, "directori": [7, 37, 184], "sure": [7, 40, 84, 179], "glu": 7, "38": 7, "disappear": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "_solution_": 7, "saniti": 7, "been": [7, 11, 12, 14, 43, 44, 46, 47, 75, 109, 117, 119], "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": 7, "runtimeerror": [7, 21, 43, 44, 46, 47, 76], "stack": [7, 27, 46, 47, 79, 84, 119, 149], "job": 7, "schedul": [7, 153], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": 7, "__init__": [7, 45, 89, 121, 123, 184], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "fail": 7, "initi": [7, 11, 12, 13, 14, 21, 43, 44, 46, 47, 66, 69, 73, 75, 76, 80, 89, 103, 104, 109, 117, 119, 130, 132, 133, 163, 165, 168, 170, 173, 179], "opengl": 7, "global": [7, 21, 43, 44, 46, 47, 109, 184], "cuda_visible_devic": 7, "id": [7, 15, 132, 170], "around": [7, 14, 27, 28, 33, 45, 109, 117, 139], "slurm_step_gpu": 7, "enviro": 7, "imag": [7, 48, 59, 69, 74, 78, 101], "black": 7, "read": [7, 11, 12, 13, 14, 37, 38, 39, 40, 44, 46, 47, 75, 86, 87, 88, 107, 109, 117, 119, 125, 128, 130, 131, 132, 133, 157, 168, 170, 173], "miss": [7, 10, 18, 21, 43, 44, 46, 47, 76, 119, 181], "onscreen": 7, "101": 7, "displai": [7, 157, 184], "correctli": [7, 21, 43, 44, 46, 47], "ask": 8, "core": [8, 163, 165, 168, 170, 173, 184], "than": [8, 11, 12, 13, 14, 94, 101, 117, 158, 181], "twice": [8, 133], "much": [8, 25, 27, 34, 130, 131], "spin": 9, "deep": [9, 57, 91, 92, 93, 94, 96, 129, 133, 134, 163], "hug": 9, "face": 9, "syllabu": 9, "lectur": 9, "best": 9, "awesom": 9, "curat": 9, "discuss": 9, "reddit": 9, "maintain": 9, "reagent": 9, "product": [9, 177, 178], "orient": 9, "stabl": 9, "baselines3": 9, "tf": 9, "agent": [9, 31, 104], "bandit": 9, "tensorflow": 9, "kera": 9, "acm": 9, "framework": [9, 45], "dopamin": 9, "salina": 9, "flexibl": [9, 184], "simpl": [9, 21, 24, 43, 44, 46, 47, 91, 109], "sequenti": [9, 21, 43, 44, 46, 47, 119], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": 9, "grade": 9, "factori": 9, "throughput": 9, "asynchron": [9, 12, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117, 177], "cherri": 9, "jaxrl": 9, "continu": [9, 17, 22, 23, 30, 91, 92, 93, 94, 109, 119, 134, 139, 142, 143, 146, 163], "space": [9, 24, 29, 106, 109, 117, 119, 123, 124], "mbrl": [9, 45], "rlmeta": 9, "light": 9, "weight": [9, 11, 12, 13, 14, 21, 25, 27, 43, 44, 46, 47, 60, 69, 73, 76, 78, 104, 117, 125, 158, 174, 184], "elegantrl": 9, "cloud": 9, "mtrl": 9, "task": [9, 46, 47, 48, 69, 78], "baselin": 9, "module_nam": 10, "str": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 33, 37, 43, 44, 46, 47, 48, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 83, 85, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 102, 103, 104, 108, 109, 117, 119, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 138, 140, 141, 152, 153, 156, 160, 163, 168, 170, 171, 173, 179], "from_vers": 10, "to_vers": 10, "decor": 10, "fit": [10, 66, 184], "lead": [10, 18, 116, 120], "explicit": [10, 100], "intersect": 10, "rang": [10, 19, 79, 84, 130, 184], "paramet": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 170, 173, 175, 176, 177, 178, 179], "longer": 10, "13": 10, "fun": 10, "self": [10, 21, 27, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 89, 117, 118, 121, 123, 184], "x": [10, 15, 18, 21, 74, 90, 96, 99, 100, 101, 123, 142, 143, 144, 145, 146, 147, 148, 157], "indic": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 46, 47, 58, 73, 90, 101, 154, 160, 179, 181, 184], "doesn": 10, "create_env_fn": [11, 12, 13, 14, 46, 47], "sequenc": [11, 12, 13, 14, 18, 20, 25, 26, 28, 32, 41, 42, 56, 57, 58, 59, 61, 63, 64, 66, 67, 70, 71, 72, 74, 75, 79, 85, 90, 95, 101, 107, 108, 109, 114, 119, 121, 154, 156, 157, 168, 170, 173], "callabl": [11, 12, 13, 14, 21, 25, 26, 27, 28, 32, 43, 44, 45, 46, 47, 131, 154, 161, 162, 177, 178, 179], "union": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 33, 34, 43, 44, 46, 47, 60, 66, 69, 72, 76, 78, 79, 90, 91, 92, 93, 94, 95, 99, 100, 101, 103, 104, 107, 108, 109, 115, 116, 117, 119, 120, 127, 128, 129, 132, 133, 134, 139, 140, 141, 161, 162, 163, 168, 170, 171, 173, 175, 176, 177, 178, 179], "probabilistictensordictmodul": [11, 12, 13, 14, 119, 125, 130, 131, 161, 162], "tensordictbas": [11, 12, 13, 14, 15, 18, 21, 27, 31, 33, 43, 44, 46, 47, 57, 60, 65, 73, 75, 77, 79, 80, 84, 89, 102, 109, 117, 119, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 140, 141, 157], "total_fram": [11, 12, 13, 14, 157, 159, 175, 184], "int": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 57, 58, 59, 60, 63, 65, 66, 69, 70, 76, 77, 78, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 123, 124, 125, 126, 130, 131, 132, 133, 149, 150, 151, 153, 154, 157, 158, 163, 168, 170, 171, 173, 177, 178, 179], "create_env_kwarg": [11, 12, 13, 14, 46, 47], "dict": [11, 12, 13, 14, 18, 19, 21, 32, 43, 44, 46, 47, 76, 79, 90, 91, 92, 93, 94, 99, 100, 101, 109, 153, 161, 162, 163, 170, 173, 177, 178, 179], "max_frames_per_traj": [11, 12, 13, 14, 159], "frames_per_batch": [11, 12, 13, 14, 159], "200": [11, 12, 13, 14, 21, 43, 44, 46, 47, 91, 92, 98, 111, 112], "init_random_fram": [11, 12, 13, 14, 159], "reset_at_each_it": [11, 12, 13, 14], "postproc": [11, 12, 13, 14], "split_traj": [11, 12, 13, 14], "pin_memori": [11, 13, 14, 25, 26, 27, 28, 32, 46, 47, 68, 154], "passing_devic": [11, 12, 13, 14], "update_at_each_batch": [11, 12, 14], "init_with_lag": [11, 12, 13, 14], "exploration_mod": [11, 13, 109, 153], "random": [11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 29, 30, 35, 43, 44, 45, 46, 47, 65, 66, 73, 83, 109, 117, 118, 132, 153, 160], "reset_when_don": [11, 13], "given": [11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 45, 46, 47, 60, 66, 69, 73, 76, 78, 84, 89, 98, 109, 114, 117, 119, 123, 124, 126, 127, 138, 139, 140, 141, 150, 153, 175, 184], "datacollector": [11, 12, 13, 14, 109], "separ": [11, 12, 14, 15, 126, 132, 133], "synchron": [11, 177, 178], "collect": [11, 12, 13, 14, 21, 25, 26, 27, 28, 31, 32, 33, 69, 78, 126, 132, 133, 149, 154, 157, 158, 159, 160, 175, 184], "item": [11, 27, 62, 126, 127, 149, 184], "queri": [11, 12, 13, 14, 21, 43, 44, 46, 47, 69, 75, 79, 119], "between": [11, 12, 13, 14, 21, 43, 44, 46, 47, 65, 71, 74, 76, 90, 101, 109, 130, 135, 153, 157], "recept": 11, "trajectori": [11, 12, 13, 14, 15, 21, 43, 44, 46, 47, 75, 89, 131, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149], "safe": [11, 12, 16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 109, 117], "onlin": [11, 14, 131, 149, 179], "accept": [11, 12, 13, 14, 21, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 117, 184], "bound": [11, 12, 13, 14, 17, 18, 21, 22, 43, 44, 46, 47, 79, 109, 111, 112, 117], "total": [11, 12, 13, 14, 44, 125, 130, 131, 149, 151, 153, 157, 159, 160], "frame": [11, 12, 13, 14, 21, 44, 57, 151, 153, 157, 159, 160], "greater": [11, 12, 14], "close": [11, 12, 13, 14, 44, 125, 130, 131], "signal": [11, 12, 14], "sent": [11, 12, 14, 37, 38, 46, 47, 79], "worker": [11, 12, 13, 14, 46, 47, 79, 177, 178, 179], "server": [11, 12, 14], "dictionari": [11, 12, 13, 14, 18, 21, 43, 44, 46, 47, 76, 109, 177, 178, 179, 184], "per": [11, 12, 13, 14, 46, 98, 157, 177, 178], "span": [11, 12, 13, 14], "unless": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47], "reach": [11, 12, 13, 14, 43, 44, 45, 46, 47], "n_steps_max": [11, 12, 13, 14, 21], "wrap": [11, 12, 13, 14, 21, 43, 44, 46, 47, 86, 87, 88, 118], "track": [11, 12, 13, 14, 79, 151], "independ": [11, 12, 13, 14, 75, 133, 184], "neg": [11, 12, 13, 14, 25, 27, 34], "ignor": [11, 12, 13, 14, 21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119], "length": [11, 12, 13, 14, 16, 46, 47, 89, 90, 91, 93, 96, 101, 117, 149], "equival": [11, 12, 13, 14, 21, 43, 44, 46, 47, 76], "configur": [11, 12, 13, 14, 131, 168, 170, 173], "mainli": [11, 12, 13, 14], "offlin": [11, 12, 13, 14, 184], "whether": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 43, 44, 45, 46, 47, 76, 90, 101, 121, 126, 127, 128, 132, 133, 141, 154], "postprocessor": [11, 12, 14], "format": [11, 12, 13, 14, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "boolean": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 45, 142, 143, 144, 145, 146, 147, 148, 184], "split": [11, 12, 13, 14, 125, 128, 130, 131, 132, 133, 184], "accord": [11, 12, 13, 14, 25, 27, 66, 72, 103, 111, 116, 120], "split_trajectori": [11, 12, 13, 14], "inform": [11, 12, 13, 14, 21, 43, 44, 46, 47, 90, 101, 184], "place": [11, 12, 13, 14, 18, 21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 79, 117, 158, 159], "update_policy_weights_": [11, 12, 13, 14], "dure": [11, 12, 13, 14, 43, 44, 46, 47, 76, 153, 157], "loop": [11, 12, 13, 14, 44, 84, 157, 184], "accommod": [11, 12, 13, 14], "lag": [11, 12, 13, 14], "kept": [11, 12, 13, 14, 46, 47, 75, 84, 116, 120], "origin": [11, 12, 13, 14, 69, 76, 78, 109, 117, 119, 129, 131, 170, 173], "store": [11, 12, 13, 14, 18, 21, 27, 33, 37, 38, 39, 43, 44, 46, 47, 79, 89, 100, 163, 165, 168, 170, 173, 184], "long": [11, 12, 13, 14, 19, 24], "updat": [11, 12, 13, 14, 21, 25, 27, 34, 43, 44, 45, 46, 47, 76, 79, 89, 109, 117, 129, 131, 134, 139, 140, 141, 153, 157, 158, 161, 162, 174, 175, 184], "everi": [11, 12, 14, 18, 21, 24, 40, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119, 157, 184], "truncat": [11, 12, 13, 14, 120], "help": [11, 12, 13, 14, 21, 43, 44, 46, 47, 181], "desynchron": [11, 12, 13, 14], "match": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 90, 95, 101, 109, 115, 117, 130, 132, 133, 158], "load_state_dict": [11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 79, 184], "state_dict": [11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 79, 184], "ordereddict": [11, 12, 13, 14, 21, 43, 44, 46, 47, 76, 79], "load": [11, 12, 13, 14, 25, 26, 27, 32, 49, 154, 184], "form": [11, 12, 14, 21, 25, 26, 27, 32, 43, 44, 46, 47, 79, 125, 130, 131, 154, 157], "worker0": [11, 12, 14], "state_dict0": [11, 12, 14], "worker1": [11, 12, 14], "state_dict1": [11, 12, 14], "reset_idx": [11, 12, 14], "static_se": [11, 12, 13, 14, 43, 44, 46, 47, 76], "increment": [11, 12, 13, 14, 43, 44, 46, 47, 130], "last": [11, 12, 13, 14, 21, 43, 45, 63, 90, 100, 101, 105, 113], "env_fn": [11, 12, 13, 14, 177, 178], "lambda": [11, 12, 13, 14, 141, 144, 145, 147, 148, 175], "v0": [11, 12, 14, 44, 50, 51, 53, 54, 60, 76, 79, 175], "env_fn_parallel": [11, 12, 13, 14], "6": [11, 12, 13, 14, 66, 90, 95, 100, 101, 115, 121, 163, 165, 168, 170, 173], "syncdatacollector": [11, 12, 14, 175, 178], "out_se": [11, 12, 13, 14], "shutdown": [11, 12, 13, 14], "shut": [11, 12, 13, 14], "down": [11, 12, 13, 14], "irrevers": [11, 12, 14], "arg": [12, 18, 21, 31, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 76, 77, 78, 85, 86, 90, 97, 101, 110, 118, 151, 157, 179], "kwarg": [12, 13, 14, 18, 21, 31, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 73, 76, 77, 78, 85, 86, 90, 91, 92, 93, 94, 97, 99, 101, 102, 107, 108, 109, 110, 115, 117, 118, 119, 120, 125, 130, 138, 151, 157, 161, 162, 163, 168, 170, 173, 176, 177, 178], "occur": [12, 58, 109, 117], "iter": [12, 13, 20, 21, 25, 26, 27, 28, 31, 32, 33, 43, 44, 46, 47, 66, 79, 90, 101, 109, 114, 117, 119, 137, 153, 154, 156, 157, 168, 170, 173, 184], "envcreat": [13, 175, 176, 179], "return_in_plac": 13, "return_same_td": 13, "constructor": [13, 75, 163, 165, 168, 170, 173, 176, 179], "stop": [13, 43, 44, 46, 47], "equat": [13, 125, 134], "exce": 13, "batcher": 13, "yield": [13, 21, 43, 44, 46, 47], "cautious": [13, 131], "ad": [13, 21, 25, 26, 27, 28, 31, 32, 33, 34, 43, 44, 46, 47, 76, 103, 104, 125, 130, 131, 154], "whole": [13, 21, 43, 44, 46, 47, 76, 149], "content": [13, 90, 101], "ident": [13, 46, 47, 177, 178], "chunk": 13, "policy_state_dict": 13, "env_state_dict": 13, "singl": [14, 21, 25, 26, 27, 28, 31, 32, 33, 43, 44, 46, 47, 57, 58, 74, 90, 100, 101, 119, 128, 132, 144, 145, 147, 148, 154, 170, 179], "paradigm": 14, "regular": [14, 109, 117, 124, 128, 158, 184], "prefer": 14, "mere": 14, "multiasyncdatacollector": [14, 177], "rollout_tensordict": 15, "traj_id": 15, "zero": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 58, 66, 89, 100, 118], "pad": [15, 90, 91, 92, 100], "max": [15, 24, 115, 116, 120, 125, 132, 133], "durat": 15, "int64": [16, 19, 20, 24, 97, 110, 123, 124, 165], "discret": [16, 19, 20, 24, 107, 123, 124, 128], "assert_is_in": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "belong": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "rais": [16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 62, 76], "except": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 43, 62, 107, 118], "otherwis": [16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 66, 73, 76, 79, 116, 120, 133, 153, 184], "encod": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 97, 106, 107, 110, 111, 123, 124], "val": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "ndarrai": [16, 17, 18, 19, 20, 22, 23, 24, 25, 29, 30, 44], "np": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 44], "slice": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "tensor_to_index": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "is_in": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "back": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 109, 117], "heurist": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "rand": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 45, 89, 118], "uniform": [16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 34], "unbound": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "to_numpi": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "transformed_in": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 75, 76, 115, 179], "type_check": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30], "whose": [16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "point": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 41, 42, 43, 44, 46, 47, 57, 60, 69, 73, 74, 76, 78, 102, 117, 128, 140, 141, 157, 181], "fill": [16, 17, 18, 19, 20, 22, 23, 24, 29, 30, 73], "minimum": [17, 22, 71, 98, 108, 115, 116, 120, 133, 149], "float": [17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 43, 44, 46, 47, 60, 61, 66, 69, 71, 72, 73, 74, 76, 78, 79, 95, 98, 103, 104, 111, 112, 115, 117, 120, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 154, 155], "unidimension": [17, 24, 30], "upper": [17, 22], "composit": 18, "unnam": 18, "tupl": [18, 21, 25, 32, 43, 44, 46, 47, 66, 91, 100, 101, 109, 117, 119, 126, 164, 166, 169, 172], "effect": [18, 21, 43, 44, 46, 47, 76, 157], "cannot": 18, "pixels_spec": 18, "ndboundedtensorspec": [18, 86, 87, 88, 108], "32": [18, 90, 91, 92, 99, 101, 105, 106], "observation_vector_spec": 18, "33": [18, 21, 43, 44, 46, 47, 90, 101], "composite_spec": 18, "observation_vector": [18, 58, 163, 168, 170, 173], "td": [18, 48, 49, 50, 51, 53, 58, 61, 66, 74, 76, 79, 84, 85, 86, 87, 88, 89, 97, 102, 108, 109, 110, 117, 118, 119, 121, 123, 124, 140, 141, 144, 145, 147, 148, 149, 156, 163, 165, 168, 170, 173], "within": [18, 21, 33, 43, 44, 46, 47, 60, 69, 75, 77, 78, 79, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119], "randn": [18, 66, 85, 86, 87, 88, 97, 100, 108, 109, 110, 117, 119, 121, 123, 124, 156], "td_project": 18, "modif": [18, 21, 43, 44, 46, 47], "after": [18, 21, 43, 44, 46, 47, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 103], "ob": [18, 61, 66, 74, 121], "yield_nesting_kei": 18, "keysview": 18, "selected_kei": [18, 46, 47], "altern": 19, "onehottensorspec": 19, "categor": [19, 24, 107, 123, 124], "memori": [19, 21, 37, 43, 44, 46, 47, 60, 69, 73, 76, 78, 79, 117, 179, 184], "larg": 19, "action_valu": [19, 24, 97, 110, 123, 124, 165], "arang": [19, 24, 97, 123, 149], "view": [19, 21, 24, 43, 44, 46, 47, 101, 123], "argmax": [19, 97, 110, 123, 124], "dim": [19, 58, 114, 179], "chosen_action_valu": [19, 24, 110, 165], "11": [19, 24, 74, 89], "outcom": [19, 24, 95, 115], "nvec": 20, "use_regist": [20, 24], "concaten": [20, 57, 58, 75, 101, 119], "hot": [20, 24, 97, 107, 110, 123, 124], "cardin": [20, 123, 124], "element": [20, 24, 25, 26, 27, 28, 31, 32, 33, 34, 37, 38, 39, 90, 117, 149, 154], "gamma": [21, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 175], "present": [21, 25, 34, 43, 44, 46, 47, 91, 92, 93, 94, 99, 104, 117, 119, 125, 128, 130, 131, 132, 133, 179, 184], "sutton": 21, "r": [21, 66, 109, 138], "1988": 21, "predict": [21, 98, 102, 128, 133, 138], "tempor": [21, 140], "44": 21, "discount": [21, 125, 126, 127, 128, 130, 131, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "factor": [21, 104, 116, 120, 125, 126, 127, 128, 130, 131, 132], "ahead": 21, "add_modul": [21, 43, 44, 46, 47], "add": [21, 25, 26, 27, 28, 31, 32, 33, 41, 42, 43, 44, 46, 47, 103, 154], "child": [21, 43, 44, 46, 47], "current": [21, 43, 44, 46, 47, 52, 76, 81, 98, 100, 112, 123, 124, 168, 184], "fn": [21, 43, 44, 46, 47, 177, 178], "recurs": [21, 43, 44, 46, 47], "submodul": [21, 43, 44, 46, 47], "children": [21, 43, 44, 46, 47], "init": [21, 43, 44, 46, 47], "no_grad": [21, 43, 44, 46, 47], "init_weight": [21, 43, 44, 46, 47], "m": [21, 43, 44, 46, 47, 109], "linear": [21, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 85, 86, 87, 88, 89, 90, 101, 103, 104, 108, 110, 111, 112, 117, 118, 119, 121, 123, 124, 175], "fill_": [21, 43, 44, 46, 47], "net": [21, 43, 44, 46, 47, 100, 109, 132, 170, 175], "in_featur": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 86, 90, 91, 92, 93, 94, 100, 101, 103, 104, 117], "out_featur": [21, 43, 44, 45, 46, 47, 60, 69, 73, 76, 78, 86, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 103, 104, 117], "bia": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 90, 98, 101, 103, 104, 117, 118], "requires_grad": [21, 43, 44, 46, 47], "bfloat16": [21, 43, 44, 46, 47], "cast": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 79, 117, 163, 165, 168, 170, 173], "datatyp": [21, 43, 44, 46, 47], "direct": [21, 43, 44, 46, 47], "member": [21, 43, 44, 46, 47], "xdoctest": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "skip": [21, 43, 44, 46, 47, 76, 109, 151, 153], "buf": [21, 43, 44, 46, 47], "20l": [21, 43, 44, 46, 47], "1l": [21, 43, 44, 46, 47], "5l": [21, 43, 44, 46, 47], "immedi": [21, 43, 44, 46, 47, 138], "move": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 79, 101, 117, 155], "associ": [21, 43, 44, 46, 47, 111, 179], "construct": [21, 43, 44, 46, 47, 109, 112, 157, 168], "optim": [21, 43, 44, 46, 47, 89, 103, 104, 131, 133, 157, 168, 175, 184], "copi": [21, 43, 44, 46, 47, 76], "doubl": [21, 23, 30, 43, 44, 46, 47, 60, 61, 69, 73, 74, 76, 78, 117, 127, 128, 129, 132, 134], "eval": [21, 43, 44, 46, 47, 76, 79], "evalu": [21, 43, 44, 46, 47, 76, 95, 107, 120, 132, 161, 162], "certain": [21, 43, 44, 46, 47, 76, 130], "particular": [21, 43, 44, 46, 47, 76, 184], "behavior": [21, 43, 44, 46, 47, 76], "affect": [21, 43, 44, 46, 47, 75, 76], "dropout": [21, 43, 44, 46, 47, 76], "batchnorm": [21, 43, 44, 46, 47, 76], "disabl": [21, 43, 44, 46, 47, 76, 116, 120], "gradient": [21, 43, 44, 46, 47, 76, 104, 116, 120, 138, 139, 140, 141, 157], "comparison": [21, 43, 44, 46, 47, 76], "sever": [21, 43, 44, 46, 47, 58, 76, 131], "similar": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 79, 84, 109, 117], "mechan": [21, 43, 44, 46, 47, 76], "confus": [21, 43, 44, 46, 47, 76], "extra_repr": [21, 43, 44, 46, 47], "extra": [21, 43, 44, 46, 47, 79], "represent": [21, 43, 44, 46, 47, 69, 78], "string": [21, 43, 44, 46, 47, 109, 156, 168, 170, 173], "forward": [21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 105, 106, 109, 111, 112, 114, 117, 118, 119, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 139, 140, 141], "tennsordict": 21, "dimens": [21, 57, 58, 63, 66, 74, 77, 90, 101, 103, 104, 113, 114, 115, 116, 125, 128, 130, 131, 132, 133, 179], "shift": 21, "nontermin": 21, "non": [21, 25, 27, 43, 44, 46, 47, 56, 60, 69, 73, 76, 78, 117], "termin": 21, "original_reward": 21, "previou": [21, 112], "newli": 21, "get_buff": [21, 43, 44, 46, 47], "target": [21, 43, 44, 46, 47, 75, 109, 117, 126, 127, 128, 129, 130, 132, 133, 134, 138, 159, 174, 175, 184], "throw": [21, 43, 44, 46, 47], "docstr": [21, 43, 44, 46, 47], "get_submodul": [21, 43, 44, 46, 47], "explan": [21, 43, 44, 46, 47], "how": [21, 25, 27, 34, 43, 44, 46, 47, 125, 129, 130, 131, 157, 181], "fulli": [21, 43, 44, 46, 47], "qualifi": [21, 43, 44, 46, 47], "referenc": [21, 43, 44, 46, 47], "attributeerror": [21, 43, 44, 46, 47], "invalid": [21, 43, 44, 46, 47], "resolv": [21, 43, 44, 46, 47], "someth": [21, 43, 44, 46, 47, 181], "get_extra_st": [21, 43, 44, 46, 47, 79], "set_extra_st": [21, 43, 44, 46, 47, 79], "picklabl": [21, 43, 44, 46, 47, 79], "ensur": [21, 25, 27, 34, 43, 44, 46, 47, 69, 79], "break": [21, 43, 44, 46, 47, 79], "pickl": [21, 43, 44, 46, 47, 79], "get_paramet": [21, 43, 44, 46, 47], "sai": [21, 43, 44, 46, 47], "net_b": [21, 43, 44, 46, 47], "net_c": [21, 43, 44, 46, 47], "conv": [21, 43, 44, 46, 47, 90], "conv2d": [21, 43, 44, 46, 47, 90], "16": [21, 43, 44, 46, 47], "kernel_s": [21, 43, 44, 46, 47, 90, 91, 92], "stride": [21, 43, 44, 46, 47, 90, 91, 92, 99], "100": [21, 43, 44, 46, 47, 66, 83, 150, 157, 175], "diagram": [21, 43, 44, 46, 47], "show": [21, 43, 44, 46, 47], "itself": [21, 43, 44, 46, 47], "two": [21, 43, 44, 46, 47, 94, 109, 113, 130, 133, 135, 153, 157, 168, 170, 173], "would": [21, 43, 44, 46, 47, 101, 184], "degre": [21, 43, 44, 46, 47], "named_modul": [21, 43, 44, 46, 47], "o": [21, 43, 44, 46, 47], "transit": [21, 43, 44, 46, 47], "alwai": [21, 43, 44, 46, 47, 65], "half": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "ipu": [21, 43, 44, 46, 47], "strict": [21, 43, 44, 46, 47, 76], "descend": [21, 43, 44, 46, 47, 76], "exactli": [21, 43, 44, 46, 47, 52, 76, 118], "persist": [21, 43, 44, 46, 47, 76], "strictli": [21, 43, 44, 46, 47, 76], "enforc": [21, 43, 44, 46, 47, 76], "missing_kei": [21, 43, 44, 46, 47, 76], "unexpected_kei": [21, 43, 44, 46, 47, 76], "unexpect": [21, 43, 44, 46, 47, 76], "namedtupl": [21, 43, 44, 46, 47, 76], "regist": [21, 24, 43, 44, 46, 47, 60, 69, 75, 76, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119, 184], "network": [21, 43, 44, 46, 47, 83, 86, 87, 88, 90, 91, 92, 93, 94, 96, 98, 99, 101, 104, 105, 106, 111, 112, 113, 117, 126, 127, 128, 129, 132, 133, 134, 136, 163, 168, 174, 175, 184], "duplic": [21, 43, 44, 46, 47, 127, 128], "l": [21, 43, 44, 46, 47, 138], "idx": [21, 43, 44, 46, 47], "enumer": [21, 43, 44, 46, 47], "named_buff": [21, 43, 44, 46, 47], "prefix": [21, 43, 44, 46, 47, 76], "remove_dupl": [21, 43, 44, 46, 47], "prepend": [21, 43, 44, 46, 47], "running_var": [21, 43, 44, 46, 47], "named_children": [21, 43, 44, 46, 47], "conv4": [21, 43, 44, 46, 47], "conv5": [21, 43, 44, 46, 47], "memo": [21, 43, 44, 46, 47], "alreadi": [21, 43, 44, 46, 47, 109], "named_paramet": [21, 43, 44, 46, 47], "param": [21, 43, 44, 45, 46, 47, 95, 108, 109, 110, 115, 117, 118, 119, 121, 123, 124, 134, 137, 139, 140, 141, 163], "register_backward_hook": [21, 43, 44, 46, 47], "removablehandl": [21, 43, 44, 46, 47], "deprec": [21, 43, 44, 46, 47, 76, 87], "favor": [21, 43, 44, 46, 47], "register_full_backward_hook": [21, 43, 44, 46, 47], "futur": [21, 43, 44, 46, 47, 69, 76, 78, 101, 181], "register_buff": [21, 43, 44, 46, 47], "consid": [21, 43, 44, 46, 47, 95, 115], "running_mean": [21, 43, 44, 46, 47], "save": [21, 43, 44, 46, 47, 157, 184], "alongsid": [21, 43, 44, 46, 47], "latter": [21, 43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119, 177, 178], "num_featur": [21, 43, 44, 46, 47], "register_forward_hook": [21, 43, 44, 46, 47, 123, 124], "signatur": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "posit": [21, 43, 44, 46, 47, 76, 77], "won": [21, 43, 44, 46, 47, 69, 78, 157, 179], "inplac": [21, 43, 44, 46, 47], "user": [21, 43, 44, 46, 47, 76, 100, 176, 184], "fire": [21, 43, 44, 46, 47], "register_module_forward_hook": [21, 43, 44, 46, 47], "register_forward_pre_hook": [21, 43, 44, 46, 47], "invok": [21, 31, 43, 44, 46, 47], "either": [21, 43, 44, 46, 47, 163, 184], "forward_pr": [21, 43, 44, 46, 47], "register_module_forward_pre_hook": [21, 43, 44, 46, 47], "respect": [21, 43, 44, 46, 47, 56, 60, 69, 73, 76, 78, 112, 117, 121], "grad_input": [21, 43, 44, 46, 47], "grad_output": [21, 43, 44, 46, 47], "subsequ": [21, 43, 44, 46, 47, 119], "entri": [21, 43, 44, 46, 47], "technic": [21, 43, 44, 46, 47], "reason": [21, 43, 44, 46, 47, 69], "receiv": [21, 43, 44, 46, 47, 75, 101], "similarli": [21, 43, 44, 46, 47, 119], "caller": [21, 43, 44, 46, 47], "register_module_full_backward_hook": [21, 43, 44, 46, 47], "register_full_backward_pre_hook": [21, 43, 44, 46, 47], "backward_pr": [21, 43, 44, 46, 47], "register_module_full_backward_pre_hook": [21, 43, 44, 46, 47], "register_load_state_dict_post_hook": [21, 43, 44, 46, 47], "post": [21, 43, 44, 46, 47], "incompatible_kei": [21, 43, 44, 46, 47], "consist": [21, 43, 44, 46, 47, 90, 101, 109], "addit": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "thrown": [21, 43, 44, 46, 47], "clear": [21, 43, 44, 46, 47, 150], "avoid": [21, 43, 44, 46, 47, 76, 79, 117, 159], "register_modul": [21, 43, 44, 46, 47, 184], "alia": [21, 43, 44, 46, 47], "register_paramet": [21, 43, 44, 46, 47], "requires_grad_": [21, 43, 44, 46, 47], "autograd": [21, 43, 44, 46, 47, 76], "record": [21, 43, 44, 46, 47, 131, 175, 184], "freez": [21, 43, 44, 46, 47], "finetun": [21, 43, 44, 46, 47], "individu": [21, 43, 44, 46, 47], "gan": [21, 43, 44, 46, 47], "share_memori": [21, 43, 44, 46, 47], "share_memory_": [21, 43, 44, 46, 47], "destin": [21, 43, 44, 46, 47, 76, 84], "keep_var": [21, 43, 44, 46, 47, 76], "averag": [21, 43, 44, 46, 47, 76, 79, 155], "shallow": [21, 43, 44, 46, 47, 76], "pleas": [21, 43, 44, 46, 47, 76, 181], "design": [21, 24, 43, 44, 46, 47, 76, 125, 128, 130, 131, 132, 133], "detach": [21, 43, 44, 46, 47, 76], "non_block": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "memory_format": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "channels_last": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "Its": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "complex": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "integr": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 94, 117], "unchang": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "tri": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "convert": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 79, 117], "host": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "pin": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "4d": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "ignore_w": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "1913": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "3420": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "5113": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "2325": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "torch_doctest_cuda1": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "gpu1": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "1914": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "5112": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "2324": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "float16": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "cdoubl": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "3741": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "j": [21, 25, 34, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117, 184], "2382": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "5593": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "4443": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "complex128": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "6122": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "1150": [21, 43, 44, 46, 47, 60, 69, 73, 76, 78, 117], "to_empti": [21, 43, 44, 46, 47], "dst_type": [21, 43, 44, 46, 47], "xpu": [21, 43, 44, 46, 47], "zero_grad": [21, 43, 44, 46, 47, 184], "set_to_non": [21, 43, 44, 46, 47], "context": [21, 43, 44, 46, 47, 103, 136, 137, 139, 142, 143, 146, 153], "grad": [21, 43, 44, 46, 47], "dimension": [22, 23, 139, 142, 143, 146], "keepdim": 24, "sum": [24, 44, 138], "user_regist": 24, "experiment": [24, 109], "onto": [24, 109, 117], "appear": 24, "priori": 24, "definit": [24, 40], "uniqu": 24, "discretebox": 24, "alpha": [25, 27, 34, 90, 132, 133], "beta": [25, 27, 34, 130], "ep": [25, 27, 34, 79, 118, 125, 134, 155], "1e": [25, 27, 34, 79, 95, 98, 115], "08": [25, 27, 34], "collate_fn": [25, 26, 27, 28, 32, 154], "prefetch": [25, 26, 27, 28, 32, 154], "priorit": [25, 27, 34, 126, 127, 132, 133], "schaul": [25, 34], "quan": [25, 34], "antonogl": [25, 34], "silver": [25, 34], "2015": [25, 34], "arxiv": [25, 34, 57, 69, 91, 92, 93, 94, 98, 99, 104, 105, 106, 111, 112, 123, 128, 129, 131, 133, 134, 139, 142, 143, 146, 163, 168, 173], "org": [25, 34, 57, 69, 91, 92, 93, 94, 98, 99, 104, 105, 106, 111, 112, 123, 128, 129, 131, 133, 134, 139, 142, 143, 146, 163, 168, 173], "ab": [25, 34, 69, 79, 98, 99, 104, 105, 106, 111, 112, 129, 131, 168], "1511": [25, 34, 99], "05952": [25, 34], "expon": [25, 27, 34], "\u03b1": [25, 27, 34], "determin": [25, 27, 34, 69, 78], "delta": [25, 27, 34, 109, 115], "prioriti": [25, 27, 33, 34, 37, 38, 39, 40, 126, 127, 132, 133, 184], "null": [25, 27, 34, 56], "merg": [25, 26, 27, 32, 154], "mini": [25, 26, 27, 32, 154], "style": [25, 26, 27, 32, 154], "rb": [25, 26, 27, 32, 154], "multithread": [25, 26, 27, 32, 154], "instanti": [25, 26, 27, 46, 47, 75, 154], "extend": [25, 26, 27, 28, 31, 32, 33, 41, 42, 154, 184], "gather": [25, 27, 138, 160, 181], "multinomi": [25, 27], "update_prior": [25, 27, 34, 184], "circular": [26, 154], "randomli": [26, 28, 65, 66, 73, 109, 154], "select": [26, 27, 28, 31, 32, 33, 46, 47, 65, 89, 119, 154, 156], "priority_kei": [27, 33, 127, 128, 133], "td_error": [27, 33, 126, 127, 128, 132, 133], "prioritizedreplaybuff": 27, "flaot": 27, "return_weight": 27, "_weight": 27, "replaybuff": [28, 31, 33, 42, 171, 175], "meta": [29, 184], "describ": [29, 58, 75, 115, 116, 168], "what": [29, 43, 44, 46, 47, 73, 181], "replay_buff": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 175], "rb_prototyp": [31, 32, 33], "remot": [31, 46, 47], "invoc": 31, "friendli": 31, "public": 31, "rpc": 31, "normal": [31, 66, 79, 90, 101, 109, 116, 120, 153, 155, 179, 184], "include_info": [31, 33], "sampler": [31, 32, 33, 34, 35, 37, 38, 39, 40], "writer": [32, 41], "max_siz": [32, 37, 39, 40], "1_000": 32, "randomsampl": 32, "roundrobinwrit": 32, "kw": [33, 41], "max_capac": 34, "uniformli": 35, "scratch_dir": 37, "memmap": [37, 46, 47, 79], "attach": [37, 38, 39, 40], "entiti": [37, 38, 39, 40], "made": [37, 38, 39, 40], "eg": [37, 38, 39, 40], "alloc": 38, "__len__": 40, "roundrobin": 41, "insert": [41, 42, 77], "piec": [41, 42], "_inplace_upd": [43, 46, 47, 76], "_batch_lock": [43, 46, 47, 76], "is_don": [43, 45], "run_type_check": [43, 45], "compar": [43, 153], "rand_step": [43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 79], "batch_lock": [43, 44, 46, 47, 76], "environn": [43, 44, 45, 46, 47, 76], "immut": [43, 44, 46, 47, 76, 168], "fake_tensordict": [43, 44, 46, 47], "fake": [43, 44, 46, 47], "overridden": [43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119], "although": [43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119, 184], "recip": [43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119], "afterward": [43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119], "former": [43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119], "silent": [43, 44, 46, 47, 60, 69, 75, 77, 78, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 119], "info": [43, 44, 46, 47, 80], "_step": [43, 44, 46, 47], "privat": [43, 44, 46, 47], "_reset": [43, 44, 45, 46, 47, 89], "overwritten": [43, 44, 46, 47, 84, 118], "callback": [43, 44, 46, 47], "auto_reset": [43, 44, 46, 47], "auto_cast_to_devic": [43, 44, 46, 47], "break_when_any_don": [43, 44, 46, 47], "return_contigu": [43, 44, 46, 47], "soon": [43, 44, 46, 47], "smaller": [43, 44, 46, 47], "automat": [43, 44, 46, 47, 66, 85, 108], "lazystackedtensordict": [43, 44, 45, 46, 47], "concomitt": [43, 44, 46, 47], "eras": [43, 44, 46, 47], "workspac": [43, 44, 46, 47], "carri": [43, 44, 46, 47], "discard": [44, 84], "info_dict_read": 44, "set_info_dict_read": 44, "put": [44, 79, 179], "f": [44, 109], "read_act": 44, "read_don": 44, "reader": 44, "frame_skip": [44, 48, 49, 50, 53, 151, 153, 159, 184], "broken": 44, "read_ob": 44, "dictat": [44, 109], "inner": [44, 109, 184], "read_reward": 44, "total_reward": 44, "step_reward": 44, "far": [44, 116, 120], "baseinfodictread": 44, "info_dict": 44, "hoc": 44, "manner": [44, 69], "dict_read": 44, "gymwrapp": 44, "default_info_dict_read": 44, "my_info_kei": 44, "some_env": 44, "meant": 45, "world": 45, "limit": [45, 46, 47], "safeti": 45, "constraint": 45, "behav": [45, 52, 107, 118], "classic": 45, "directli": [45, 179], "ndunboundedcontinuoustensorspec": [45, 73, 85, 86, 87, 88, 89, 109, 117, 118, 119, 121], "mymbenv": [45, 89], "world_model": [45, 89], "super": [45, 89, 121, 123], "hidden_observ": [45, 89], "mlp": [45, 86, 89, 90, 91, 92, 93, 94, 97, 100, 168, 170, 173], "worldmodelwrapp": [45, 89], "activation_class": [45, 89, 90, 91, 92, 93, 94, 98, 99, 101], "relu": [45, 89], "activate_last_lay": [45, 89, 94, 101], "depth": [45, 89, 90, 91, 92, 93, 94, 97, 98, 99, 101, 105, 106], "equal": [46, 47, 65, 90, 96, 101, 135, 149, 177, 178], "my_env_fun": [46, 47], "custom_attribute_list": [46, 47], "custom_attribut": [46, 47], "custom_method_list": [46, 47], "custom_method": [46, 47], "num_work": [46, 47], "deploi": [46, 47], "creation": [46, 47], "divers": [46, 47], "slight": [46, 47], "overhead": [46, 47], "env_input_kei": [46, 47], "permit": [46, 47], "drastic": [46, 47], "decreas": [46, 47], "io": [46, 47], "burden": [46, 47], "_batchedenv": [46, 47], "might": [46, 47, 181], "next_pixel": [46, 47], "next_vector": [46, 47], "amount": [46, 47], "occupi": [46, 47], "excluded_kei": [46, 47], "exclud": [46, 47], "share_individual_td": [46, 47], "lazi": [46, 47, 69, 103, 109, 117, 119], "shared_memori": [46, 47], "policy_proof": [46, 47], "ll": [46, 47], "hidden": [46, 47, 86, 87, 88, 98, 100, 105, 106, 109, 111, 112, 117, 119, 168], "infer": [46, 47, 79, 103, 133], "allow_step_when_don": [46, 47], "encount": [46, 47, 181], "update_kwarg": [46, 47], "dm_control": [48, 49], "env_nam": [48, 50, 53], "task_nam": 48, "cheetah": [48, 49], "suit": 49, "serv": 52, "placehold": [52, 76], "secur": 52, "jumanji": [53, 54], "snake": [53, 54], "6x6": [53, 54], "jumanju": 54, "td0": 54, "td1": 54, "model_bas": [55, 89], "dreamer": [55, 98], "transform_reward_spec": [56, 60, 61, 69, 71, 72, 75, 77, 78], "cat_dim": 57, "success": [57, 75], "account": 57, "movement": 57, "veloc": 57, "propos": [57, 102, 129, 134, 170, 173], "plai": 57, "atari": 57, "pdf": [57, 91, 92, 93, 94, 123, 128, 132, 133, 134, 139, 142, 143, 146, 163, 170, 173], "1312": 57, "5602": 57, "along": [57, 58, 74, 101, 104, 109, 117], "tranform": [57, 60, 69, 73, 75, 78, 80], "transform_observation_spec": [57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 73, 74, 75, 77, 78], "del_kei": 58, "unsqueeze_if_oor": 58, "observation_posit": 58, "observation_veloc": 58, "delet": 58, "unsqueez": [58, 74, 77, 100], "key1": [58, 149, 156], "key2": [58, 149, 156], "_": [58, 61, 66, 74, 79, 97, 109, 110, 117, 119, 123, 124], "w": [59, 70, 74], "crop": 59, "center": 59, "width": [59, 70], "height": [59, 70], "squar": [59, 116, 120], "rewardsc": [60, 76], "rewardclip": 60, "transformed_env": [60, 75, 76], "dest": [60, 69, 78, 117], "transform_input_spec": [60, 61, 69, 75, 77, 78], "finit": 62, "first_dim": 63, "last_dim": 63, "flatten": 63, "adjac": 63, "turn": [64, 153], "noop": 65, "30": [65, 111, 112], "op": [65, 158], "noop_max": 65, "loc": [66, 72, 86, 88, 108, 109, 116, 119, 120, 160, 168, 170, 173, 179], "standard_norm": [66, 72], "affin": [66, 72], "layer": [66, 79, 90, 91, 92, 98, 101, 103, 104, 105, 106, 113, 114, 122], "set_default_tensor_typ": 66, "doubletensor": 66, "std": [66, 79], "isclos": 66, "next_ob": 66, "normalis": 66, "stat": [66, 160, 179], "rubric": [66, 119], "manual_se": 66, "init_stat": 66, "3752e": 66, "01": [66, 125, 130, 131], "5087e": 66, "03": 66, "9294e": 66, "9636": 66, "5608": 66, "6408": 66, "num_it": 66, "reduce_dim": 66, "constant": [66, 184], "ideal": 66, "statist": [66, 79, 179], "approach": 66, "gaussian": [66, 89, 103, 104], "empir": [66, 89, 109], "deviat": [66, 79, 89, 98, 103, 104, 131], "summari": [66, 79], "r3m": 69, "resnet": [69, 78], "visual": [69, 78], "embed": [69, 78, 86, 87, 88, 117], "ego4d": [69, 78], "paper": [69, 78, 129, 170, 173], "univers": [69, 78], "manipul": 69, "suraj": 69, "nair": 69, "aravind": 69, "rajeswaran": 69, "vikash": [69, 78], "kumar": [69, 78], "chelsea": 69, "finn": 69, "abhinav": 69, "gupta": 69, "2203": 69, "12601": 69, "_init": 69, "snippet": 69, "resenet50": 69, "model_nam": [69, 78], "resnet50": [69, 78], "resnet34": 69, "resnet18": 69, "left": [69, 78], "empti": [69, 76, 78], "r3m_vec": 69, "feed": [69, 78], "244": [69, 78], "hub": [69, 78], "cach": [69, 76, 78, 150], "download_path": [69, 78], "tensor_pixels_kei": [69, 78], "interpol": 70, "bilinear": 70, "clamp_min": 71, "clamp_max": 71, "clip": [71, 125, 157], "clip_min": 71, "scalar": [71, 92, 94, 103, 104, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "clip_max": 71, "default_valu": 73, "primer": 73, "popul": 73, "drawn": [73, 109], "rel": [73, 95, 115], "fix": [73, 133], "chosen": [73, 168, 170, 173], "mykei": 73, "dtype_or_devic": 73, "255": 74, "precis": 74, "ri": 74, "randint": 74, "out_keys_inv": 75, "principl": 75, "combin": 75, "cattransform": 75, "notabl": 75, "cache_spec": 76, "valid": [76, 90, 101, 130, 184], "anymor": [76, 117], "unsqueeze_dim": 77, "vip": 78, "toward": 78, "implicit": 78, "jason": 78, "ma": 78, "shagun": 78, "sodhani": 78, "dinesh": 78, "jayaraman": 78, "osbert": 78, "bastani": 78, "ami": 78, "zhang": 78, "vip_vec": 78, "shared_td": 79, "lock": 79, "decai": [79, 132, 155], "9999": 79, "0001": [79, 98, 155], "fly": [79, 130], "substitut": 79, "to_observation_norm": 79, "rate": [79, 138], "99": [79, 125, 130, 131, 132, 133, 138, 175], "numer": [79, 109, 116, 117, 120], "underflow": 79, "1000": [79, 109, 129, 175], "static": 79, "build_td_for_shared_vecnorm": 79, "across": [79, 158], "memmori": 79, "memmap_": 79, "multiprocess": 79, "mp": 79, "queue": 79, "td_share": 79, "v": [79, 100, 133], "observationnorm": [79, 179], "state_dim": [80, 111, 112], "action_dim": [80, 91, 93], "gsde": [80, 132, 179], "nois": [80, 104, 122, 132, 153, 179], "func": 80, "gsdemodul": 80, "probabilistictdmodul": [83, 101, 109, 133, 138, 153], "actor": [83, 86, 87, 88, 89, 91, 93, 97, 98, 108, 110, 123, 124, 125, 126, 130, 131, 132, 133, 163, 165, 168, 170, 173], "default_interaction_mod": [83, 109], "next_tensordict": 84, "keep_oth": 84, "exclude_reward": 84, "exclude_don": 84, "exclude_act": 84, "_run_check": 84, "reflect": [84, 159], "renam": 84, "next_": 84, "funtion": 84, "td_out": [84, 149, 156], "make_polici": 84, "next_td": 84, "append": 84, "next_observ": [84, 100], "translat": [85, 108], "td_modul": [85, 86, 87, 88, 108, 109, 117, 118, 119, 121], "critic": [86, 125, 130, 131, 133], "get_policy_oper": [86, 87, 88, 168], "alon": [86, 87, 88], "tdmodul": [86, 87, 88, 109, 175], "dedic": [86, 87, 88], "get_critic_oper": 86, "common_oper": [86, 88], "produc": [86, 88, 90, 101, 107, 109], "policy_oper": [86, 87, 88], "value_oper": [86, 87, 88], "tensordict_modul": [86, 87, 88, 108, 109, 110, 118, 119, 123, 124], "probabilisticactor": [86, 88, 133], "valueoper": [86, 87, 88, 125, 130, 131, 175], "tanhnorm": [86, 87, 88, 108, 109, 119], "normalparamwrapp": [86, 88, 108, 109, 119], "spec_hidden": [86, 88], "module_hidden": [86, 88], "td_module_hidden": [86, 88], "spec_act": [86, 87, 88], "8": [86, 87, 88, 90, 91, 92, 99, 101, 108, 109, 117, 119], "module_act": [86, 87, 88], "td_module_act": [86, 87, 88], "dist_in_kei": [86, 88, 108, 109, 119], "sample_out_kei": [86, 88, 108, 109, 119], "distribution_class": [86, 87, 88, 108, 109, 119], "return_log_prob": [86, 87, 88, 109, 119], "module_valu": [86, 87, 88], "num_cel": [86, 90, 91, 92, 93, 94, 98, 99, 101], "td_module_valu": [86, 87, 88], "state_action_valu": [86, 121, 138, 163, 170, 173, 175], "td_clone": [86, 87, 88], "clone": [86, 87, 88, 109, 117, 118, 119, 168, 170, 173], "sample_log_prob": [86, 87, 88, 109, 119, 168, 170], "tensordictmodulewrapp": [86, 161, 162, 175], "estim": [86, 87, 88, 125, 130, 131, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "get_value_oper": [86, 87, 88, 168], "probabilisticactor_deprec": 87, "state_valu": [87, 88, 121, 140, 141, 142, 143, 144, 146, 147, 168, 173], "tensordictsequenti": [87, 88], "planning_horizon": 89, "optim_step": 89, "num_candid": 89, "num_top_k_candid": 89, "reward_kei": 89, "action_kei": [89, 102], "cross": 89, "entropi": [89, 125, 130, 131, 132, 133], "botev": 89, "et": 89, "al": [89, 165], "2013": 89, "cem": 89, "plan": [89, 102], "unit": [89, 98, 105, 106, 111, 112], "varianc": [89, 116, 120], "cumul": 89, "rank": 89, "top": 89, "k": 89, "episod": [89, 142, 143, 144, 145, 146, 147, 148], "repeat": 89, "maximis": [89, 91, 93], "horizon": 89, "modelbasedenv": 89, "mpc": [89, 102], "candid": 89, "modelbasedenvbas": [89, 102], "next_hidden_observ": 89, "5": [89, 90, 97, 98, 101, 110, 116, 118, 120, 123, 124, 130], "elu": [90, 91, 92, 93, 94, 98, 99], "activation_kwarg": [90, 101], "norm_class": [90, 91, 92, 101], "norm_kwarg": [90, 101], "bias_last_lay": [90, 91, 92, 93, 94, 99, 101], "aggregator_class": [90, 91, 92], "squashdim": [90, 91], "aggregator_kwarg": [90, 91, 92], "squeeze_output": [90, 91, 92], "convolut": [90, 91, 92, 113], "neural": [90, 113, 117], "len": [90, 101], "cell": [90, 101], "kernel": [90, 99, 100], "tanh": [90, 101, 115, 116, 120], "aggreg": [90, 91, 92, 119], "squeez": [90, 113, 114], "singleton": [90, 101, 113, 114], "device_typ": [90, 91, 92, 93, 94, 99, 101, 103, 104], "cnet": 90, "34": [90, 101], "35": [90, 101], "possibli": [90, 109, 117, 157], "rectangular": 90, "conv_net_kwarg": [91, 92], "mlp_net_kwarg": [91, 92, 93], "use_avg_pool": [91, 92], "WITH": [91, 92, 93, 94, 134, 163], "1509": [91, 92, 93, 94, 129, 134, 163], "02971": [91, 92, 93, 94, 134, 163], "q": [91, 92, 93, 94, 96, 99, 123, 124, 126, 127, 128, 129, 132, 133, 170, 173], "convnet": 91, "ndims_in": 91, "avgpool": [91, 92], "128": 92, "adaptiveavgpool2d": 92, "400": [93, 94], "300": [93, 94, 168], "mlp_net_kwargs_net1": 94, "mlp_net_kwargs_net2": 94, "atol": [95, 115], "06": [95, 115], "rtol": [95, 115], "batch_shap": [95, 115], "event_shap": [95, 115], "absolut": [95, 115], "toler": [95, 115], "log_prob": [95, 107, 120], "log": [95, 107, 109, 120, 125, 128, 130, 131, 132, 133, 151, 152, 153, 157, 175, 184], "probabl": [95, 107, 109, 120], "densiti": [95, 107, 120], "mass": [95, 107, 120], "rsampl": [95, 107, 109], "sample_shap": [95, 107], "reparameter": [95, 107], "dqnet": 96, "atom": 96, "action_spac": [97, 110, 123, 124], "one_hot": [97, 110, 123, 124], "onehotdiscretetensorspec": [97, 110, 123, 124], "nbin": [97, 123], "qvalue_actor": [97, 110, 123, 124], "std_bia": 98, "std_min_val": 98, "stochast": [98, 104, 105, 112, 132, 133], "belief": [98, 105, 111, 112], "1912": 98, "016034": 98, "softplu": 98, "out_features_valu": 99, "cnn_kwarg": 99, "mlp_kwarg": [99, 100], "duel": 99, "cnn": 99, "06581": 99, "512": 99, "lstm_kwarg": 100, "embedd": 100, "lstm": 100, "time_step": 100, "2d": 100, "input_s": 100, "hidden_s": 100, "hidden0_in": 100, "hidden1_in": 100, "hidden0_out": 100, "hidden1_out": 100, "single_bias_last_lay": 101, "layer_class": 101, "layer_kwarg": 101, "perceptron": 101, "seamless": 101, "though": 101, "reshap": 101, "lazylinear": [101, 109, 117, 119], "42": [101, 157], "noisylinear": [101, 103], "noisylazylinear": 101, "At": 102, "mpcplanner": 102, "tensordict_out": [102, 109, 117, 119], "std_init": [103, 104], "noisi": [103, 104, 122], "term": [103, 104, 158], "matrix": [103, 104], "ax": [103, 104], "initialize_paramet": 103, "isol": 103, "1706": 104, "10295v3": 104, "induc": 104, "aid": 104, "descent": 104, "remain": 104, "emploi": 104, "decod": 105, "1803": [105, 106], "10122": [105, 106], "rnn_hidden": 105, "latent": 106, "logit": 107, "prob": 107, "One": [107, 117, 135], "excacli": 107, "probabilist": [108, 109], "fmodul": [108, 110, 117, 118, 121, 123, 124], "make_functional_with_buff": [108, 109, 110, 117, 118, 119, 121, 123, 124], "tensor_spec": 109, "distribution_kwarg": 109, "cache_dist": 109, "n_empirical_estim": 109, "special": 109, "rule": 109, "get_dist": 109, "__call__": [109, 184], "real": 109, "median": 109, "functionalmodul": [109, 117], "functionalmodulewithbuff": [109, 117], "overflow": [109, 117], "fist": 109, "set_exploration_mod": [109, 153], "_log_prob": 109, "diverg": [109, 130], "grucel": [109, 117], "fnet": 109, "vmap": [109, 117, 119], "again": 109, "expend": 109, "p": [109, 119], "expand": [109, 117, 119], "contigu": [109, 117, 119], "normal_": [109, 117, 119], "td_vmap": [109, 117, 119], "unlik": [109, 117, 119, 128, 131], "prevent": [109, 116, 117, 119, 120, 130, 131], "scrape": [109, 117, 119], "lazy_modul": [109, 117], "18": [109, 117, 119], "some_input": [109, 117, 119], "some_output": [109, 117, 119], "hidden_dim": [111, 112], "scale_lb": [111, 112], "posterior": 111, "rssm": [111, 112], "1811": [111, 112], "04551": [111, 112], "obs_embed": 111, "rnn_hidden_dim": 112, "prior": 112, "dream": 112, "recurr": 112, "min": [115, 116, 120, 125, 132, 133], "event_dim": [115, 116], "upscal": [116, 120], "tanh_loc": [116, 120], "tanhtransform": 116, "ultim": [116, 120], "unstabl": [116, 120], "poor": [116, 120], "explos": [116, 120], "practic": [116, 120, 181], "switch": [116, 120], "sigma": [116, 120], "formula": [116, 120, 125, 130, 131], "character": 117, "td_fmodul": 117, "td_function": 117, "td_state": 117, "isn": 117, "ensembl": [117, 132], "params_repeat": 117, "buffers_repeat": 117, "irrespect": 117, "random_sampl": 117, "calss": 118, "expand_as_right": 118, "epsilongreedyexplor": 118, "rand_output_clon": 118, "det_output_clon": 118, "rand_output_idx": 118, "_rand_output": 118, "_det_output": 118, "rand_output_idx_expand": 118, "tensordict_module_wrap": 118, "partial_toler": 119, "tensordictsequenci": 119, "who": 119, "AND": 119, "scan": 119, "sub": [119, 149, 157], "tensordictsequ": 119, "spec1": 119, "net1": 119, "fnet1": 119, "params1": 119, "buffers1": 119, "fmodule1": 119, "td_module1": 119, "spec2": 119, "module2": 119, "fmodule2": 119, "params2": 119, "buffers2": 119, "td_module2": 119, "lazy_module1": 119, "lazy_module2": 119, "select_subsequ": 119, "acord": 119, "custommodul": 121, "cat": 121, "var_num": [123, 124], "regard": [123, 128, 131], "perspect": [123, 128], "1707": [123, 128, 131, 168], "06887": [123, 128], "mult_one_hot": [123, 124], "customdistributionalqv": 123, "log_softmax": 123, "greedi": 124, "advantage_kei": [125, 130, 131], "clip_epsilon": 125, "entropy_bonu": [125, 130, 131], "samples_mc_entropi": [125, 130, 131], "entropy_coef": [125, 130, 131], "critic_coef": [125, 130, 131], "loss_critic_typ": [125, 130, 131], "l2": [125, 126, 127, 130, 131, 132, 135], "loss": [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 157, 164, 166, 167, 169, 170, 172, 175, 184], "threshold": 125, "bonu": [125, 130, 131], "favour": [125, 130, 131], "exploratori": [125, 130, 131], "mont": [125, 130, 131], "carlo": [125, 130, 131], "multipli": [125, 130, 131, 132, 133], "loss_funct": [125, 126, 127, 131, 132, 133, 135], "discrep": [125, 126, 127, 130, 131], "l1": [125, 126, 127, 130, 131, 132, 135], "smooth_l1": [125, 126, 127, 130, 131, 132, 133, 135], "throughout": [125, 128, 130, 131, 132, 133], "essenti": [125, 128, 130, 131, 132, 133], "backpropag": [125, 128, 130, 131, 132, 133], "actor_network": [126, 132, 133], "value_network": [126, 127, 128, 133, 139, 140, 141], "delay_actor": [126, 133], "delay_valu": [126, 127, 128, 133], "input_tensordict": [126, 127, 128], "assign": [126, 127], "qvalueactor": 127, "distributionalqvalueactor": 128, "disctount": 128, "loss_modul": [129, 134, 157, 174, 175, 184], "dqnloss": [129, 134, 166], "ddpgloss": [129, 134, 164, 175], "sacloss": [129, 134, 172], "value_network_update_interv": 129, "contrast": 129, "soft": [129, 133, 134], "06461": 129, "dtarg": 130, "decrement": 130, "samples_mc_kl": 130, "kl": 130, "penalti": 130, "old_polici": 130, "new_polici": 130, "adapt": 130, "thu": 130, "distanc": [130, 135, 138], "apart": 130, "advantage_diff_kei": 131, "value_error": [131, 139, 140, 141], "advantage_modul": 131, "proxim": [131, 168], "optimis": [131, 153], "flavour": 131, "constrain": 131, "clipppoloss": 131, "klpenppoloss": 131, "regularis": 131, "06347": [131, 168], "qvalue_network": [132, 133], "num_qvalue_net": [132, 133], "sub_sample_len": 132, "priotity_kei": [132, 133], "alpha_init": [132, 133], "min_alpha": [132, 133], "max_alpha": [132, 133], "fixed_alpha": [132, 133], "target_entropi": [132, 133], "auto": [132, 133], "delay_qvalu": [132, 133], "openreview": [132, 170], "ay8zfzm0tdd": [132, 170], "idea": [132, 184], "subsampl": [132, 149, 184], "know": [132, 153], "1801": [133, 173], "01290": [133, 173], "qvalue_network_bi": 133, "prod": 133, "n_action": 133, "redqloss": 134, "999": [134, 155], "epsilon": 134, "prev_param": 134, "new_param": 134, "v2": [135, 144, 145, 147, 148, 163, 168, 170, 173], "strict_shap": 135, "view_a": 135, "manag": [136, 137, 153], "hold": [136, 137], "next_val_kei": 138, "pred_next_v": 138, "usus": 138, "mse": 138, "q_valu": 138, "target_valu": 138, "n_steps_to_next": 138, "value_next_st": 138, "lmbda": [139, 141, 142, 144, 145, 146, 147, 148], "average_reward": [139, 140, 141], "gradient_mod": [139, 140, 141], "1506": [139, 142, 143, 146], "02438": [139, 142, 143, 146], "exponenti": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 155], "propag": [139, 140, 141], "throught": [139, 140, 141], "unused_arg": [139, 140, 141], "target_param": [139, 140, 141], "target_buff": [139, 140, 141], "value_kei": [140, 141], "gae": [140, 141], "next_state_valu": [142, 143, 144, 145, 146, 147, 148], "old_stat": [142, 143, 144, 146, 147], "timestep": [142, 143, 144, 145, 146, 147, 148], "new_stat": [142, 143, 144, 145, 146, 147, 148], "flag": [142, 143, 144, 145, 146, 147, 148], "rolling_gamma": [144, 145, 147, 148], "ti": [144, 145, 147, 148], "event": [144, 145, 147, 148], "g1": [144, 145, 147, 148], "g2": [144, 145, 147, 148], "g3": [144, 145, 147, 148], "g4": [144, 145, 147, 148], "v3": [144, 145, 147, 148], "v4": [144, 145, 147, 148], "upcom": [144, 145, 147, 148], "sub_traj_len": 149, "min_sub_traj_len": 149, "full": 149, "20": 149, "register_op": [149, 150, 151, 152, 155, 156, 158, 184], "process_optim_batch": [149, 155, 184], "_process_optim_batch_hook": [149, 184], "interv": [150, 158], "clear_cuda": 150, "pre_optim_step": [150, 184], "counter": [151, 184], "log_pbar": [151, 152, 153, 155, 184], "progress": [151, 152, 153, 157, 184], "bar": [151, 152, 153, 157, 184], "count_fram": 151, "pre_steps_log": [151, 152, 184], "lognam": 152, "r_train": 152, "logger": [152, 153, 157, 175, 179, 184], "log_reward": 152, "record_interv": 153, "record_fram": [153, 159], "policy_explor": [153, 175], "log_kei": 153, "suffix": 153, "underestim": 153, "final": 153, "suppos": [153, 184], "reward_evalu": 153, "video": [153, 179], "reward_norm": 155, "batch_process": [155, 156, 184], "update_reward_stat": 155, "normalize_reward": 155, "make_train": 156, "second": 156, "_process_batch_hook": [156, 184], "versatil": 157, "lossmodul": [157, 174, 175], "optim_steps_per_batch": [157, 184], "epoch": 157, "clip_grad_norm": 157, "norm": 157, "partial": 157, "deriv": 157, "clamp": 157, "clip_norm": 157, "progress_bar": 157, "tqdm": 157, "save_trainer_interv": 157, "disk": [157, 184], "10000": 157, "save_trainer_fil": [157, 184], "_datacollector": [158, 161, 162, 175], "update_weights_interv": 158, "whenev": 158, "sit": 158, "sync": [158, 175, 184], "update_weight": 158, "post_step": [158, 184], "cfg": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179], "dictconfig": [159, 160, 161, 162, 163, 165, 168, 170, 171, 173, 174, 175, 176, 179], "correct": 159, "divid": 159, "unknowingli": 159, "1m": 159, "annealing_fram": 159, "init_env_step": [159, 160], "proof_environ": [160, 163, 165, 168, 170, 173], "sta": 160, "ot": 160, "actor_model_explor": [161, 162], "make_env_kwarg": [161, 162], "creator": [161, 162, 177, 178, 179], "actor_net_kwarg": [163, 170, 173], "value_net_kwarg": [163, 173], "modulelist": [163, 170, 173], "dummi": [163, 165, 168, 170, 173], "ddpgcnnactor": 163, "ddpgmlpactor": 163, "ddpgcnnqnet": 163, "ddpgmlpqnet": 163, "cattensor": [163, 168, 170, 173], "hydra": [163, 165, 168, 170, 173], "config_stor": [163, 165, 168, 170, 173], "configstor": [163, 165, 168, 170, 173], "dataclass": [163, 165, 168, 170, 173], "halfcheetah": [163, 168, 170, 173], "config_field": [163, 165, 168, 170, 173], "config_cl": [163, 165, 168, 170, 173], "ddpgmodelconfig": 163, "envconfig": [163, 165, 168, 170, 173], "make_dataclass": [163, 165, 168, 170, 173], "cls_name": [163, 165, 168, 170, 173], "config_path": [163, 165, 168, 170, 173], "config_nam": [163, 165, 168, 170, 173], "17": [163, 168, 170, 173], "targetnetupdat": [164, 166, 169, 172, 174, 175], "discretemodelconfig": 165, "pong": 165, "v5": 165, "pixels_onli": 165, "210": 165, "160": 165, "ppoloss": 167, "in_keys_actor": 168, "observation_kei": [168, 170, 173], "actorvalueoper": 168, "join": 168, "actorcriticoper": 168, "parser_env_arg": [168, 170], "parser_model_args_continu": [168, 170, 173], "ppomodelconfig": 168, "actor_valu": 168, "redqloss_deprec": 169, "qvalue_net_kwarg": [170, 173], "qvalu": [170, 173], "redqmodelconfig": 170, "replayargsconfig": 171, "sacmodelconfig": 173, "target_net_updat": 175, "constitu": 175, "learnt": 175, "tempfil": 175, "tensorboardlogg": 175, "tensordictreplaybuff": 175, "egreedywrapp": 175, "env_mak": 175, "env_proof": 175, "obs_spec": 175, "net_valu": 175, "dir": [175, 184], "gettempdir": 175, "exp_nam": 175, "argpars": [176, 179], "namespac": [176, 179], "parser": [176, 179], "transformed_env_constructor": 176, "env_kwarg": [177, 178], "num_env_per_collector": [177, 178], "num_collector": [177, 178], "less": [177, 178], "multisyncdatacollector": 178, "video_tag": 179, "norm_obs_onli": 179, "use_env_cr": 179, "custom_env_mak": 179, "custom_env": 179, "return_transformed_env": 179, "action_dim_gsd": 179, "state_dim_gsd": 179, "batch_dim": 179, "vecnorm": 179, "wheter": 179, "maker": 179, "overrid": 179, "exclus": 179, "solv": 181, "journei": 181, "guid": 181, "textbook": 181, "highlight": 181, "readi": 181, "ever": 181, "cover": 181, "bump": 181, "think": 181, "commun": 181, "benefit": 181, "submit": 181, "pr": 181, "outer": 184, "believ": 184, "scheme": 184, "substenti": 184, "sketch": 184, "_pre_steps_log_hook": 184, "_pre_optim_hook": 184, "sub_batch": 184, "_post_loss_hook": 184, "post_loss": 184, "_post_optim_hook": 184, "post_optim": 184, "_post_optim_log": 184, "post_optim_log": 184, "_post_steps_hook": 184, "_post_steps_log_hook": 184, "post_steps_log": 184, "There": 184, "comment": 184, "categori": 184, "strategi": 184, "extens": 184, "replaybuffertrain": 184, "batchsubsampl": 184, "logreward": 184, "reserv": 184, "updateweight": 184, "trainerhookbas": 184, "three": 184, "logginghook": 184, "logging_hook": 184, "save_dict": 184, "some_valu": 184, "els": 184, "torchsnapshot": 184, "ckpt_backend": 184, "wherea": 184, "pt": 184, "filepath": 184, "select_kei": 184, "selectkei": 184, "save_train": 184, "load_from_fil": 184, "perfectli": 184, "intern": 185}, "objects": {"torchrl._utils": [[10, 0, 1, "", "implement_for"]], "torchrl.collectors": [[11, 0, 1, "", "MultiSyncDataCollector"], [12, 0, 1, "", "MultiaSyncDataCollector"], [13, 0, 1, "", "SyncDataCollector"], [14, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.MultiSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[13, 1, 1, "", "iterator"], [13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "rollout"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[15, 2, 1, "", "split_trajectories"]], "torchrl.data": [[16, 0, 1, "", "BinaryDiscreteTensorSpec"], [17, 0, 1, "", "BoundedTensorSpec"], [18, 0, 1, "", "CompositeSpec"], [19, 0, 1, "", "DiscreteTensorSpec"], [20, 0, 1, "", "MultOneHotDiscreteTensorSpec"], [21, 0, 1, "", "MultiStep"], [22, 0, 1, "", "NdBoundedTensorSpec"], [23, 0, 1, "", "NdUnboundedContinuousTensorSpec"], [24, 0, 1, "", "OneHotDiscreteTensorSpec"], [25, 0, 1, "", "PrioritizedReplayBuffer"], [26, 0, 1, "", "ReplayBuffer"], [27, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [28, 0, 1, "", "TensorDictReplayBuffer"], [29, 0, 1, "", "TensorSpec"], [30, 0, 1, "", "UnboundedContinuousTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[16, 1, 1, "", "assert_is_in"], [16, 1, 1, "", "encode"], [16, 1, 1, "", "index"], [16, 1, 1, "", "is_in"], [16, 1, 1, "", "project"], [16, 1, 1, "", "rand"], [16, 1, 1, "", "to_numpy"], [16, 1, 1, "", "type_check"], [16, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "keys"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.MultOneHotDiscreteTensorSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[21, 1, 1, "", "add_module"], [21, 1, 1, "", "apply"], [21, 1, 1, "", "bfloat16"], [21, 1, 1, "", "buffers"], [21, 1, 1, "", "children"], [21, 1, 1, "", "cpu"], [21, 1, 1, "", "cuda"], [21, 1, 1, "", "double"], [21, 1, 1, "", "eval"], [21, 1, 1, "", "extra_repr"], [21, 1, 1, "", "float"], [21, 1, 1, "", "forward"], [21, 1, 1, "", "get_buffer"], [21, 1, 1, "", "get_extra_state"], [21, 1, 1, "", "get_parameter"], [21, 1, 1, "", "get_submodule"], [21, 1, 1, "", "half"], [21, 1, 1, "", "ipu"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "modules"], [21, 1, 1, "", "named_buffers"], [21, 1, 1, "", "named_children"], [21, 1, 1, "", "named_modules"], [21, 1, 1, "", "named_parameters"], [21, 1, 1, "", "parameters"], [21, 1, 1, "", "register_backward_hook"], [21, 1, 1, "", "register_buffer"], [21, 1, 1, "", "register_forward_hook"], [21, 1, 1, "", "register_forward_pre_hook"], [21, 1, 1, "", "register_full_backward_hook"], [21, 1, 1, "", "register_full_backward_pre_hook"], [21, 1, 1, "", "register_load_state_dict_post_hook"], [21, 1, 1, "", "register_module"], [21, 1, 1, "", "register_parameter"], [21, 1, 1, "", "requires_grad_"], [21, 1, 1, "", "set_extra_state"], [21, 1, 1, "", "share_memory"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "to"], [21, 1, 1, "", "to_empty"], [21, 1, 1, "", "train"], [21, 1, 1, "", "type"], [21, 1, 1, "", "xpu"], [21, 1, 1, "", "zero_grad"]], "torchrl.data.NdBoundedTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.NdUnboundedContinuousTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[25, 1, 1, "", "add"], [25, 1, 1, "", "extend"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "update_priority"]], "torchrl.data.ReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "sample"], [27, 1, 1, "", "update_priority"]], "torchrl.data.TensorDictReplayBuffer": [[28, 1, 1, "", "add"], [28, 1, 1, "", "extend"], [28, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.rb_prototype": [[31, 0, 1, "", "RemoteTensorDictReplayBuffer"], [32, 0, 1, "", "ReplayBuffer"], [33, 0, 1, "", "TensorDictReplayBuffer"]], "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer": [[31, 1, 1, "", "add"], [31, 1, 1, "", "extend"], [31, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer": [[32, 1, 1, "", "add"], [32, 1, 1, "", "extend"], [32, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer": [[33, 1, 1, "", "add"], [33, 1, 1, "", "extend"], [33, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.samplers": [[34, 0, 1, "", "PrioritizedSampler"], [35, 0, 1, "", "RandomSampler"], [36, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[34, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[37, 0, 1, "", "LazyMemmapStorage"], [38, 0, 1, "", "LazyTensorStorage"], [39, 0, 1, "", "ListStorage"], [40, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[39, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[40, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[41, 0, 1, "", "RoundRobinWriter"], [42, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[41, 1, 1, "", "add"], [41, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "extend"]], "torchrl.envs": [[43, 0, 1, "", "EnvBase"], [44, 0, 1, "", "GymLikeEnv"], [45, 2, 1, "", "ModelBasedEnvBase"], [46, 0, 1, "", "ParallelEnv"], [47, 0, 1, "", "SerialEnv"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[43, 1, 1, "", "add_module"], [43, 1, 1, "", "apply"], [43, 3, 1, "", "batch_locked"], [43, 1, 1, "", "bfloat16"], [43, 1, 1, "", "buffers"], [43, 1, 1, "", "children"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 1, 1, "", "double"], [43, 1, 1, "", "eval"], [43, 1, 1, "", "extra_repr"], [43, 1, 1, "", "fake_tensordict"], [43, 1, 1, "", "float"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "get_buffer"], [43, 1, 1, "", "get_extra_state"], [43, 1, 1, "", "get_parameter"], [43, 1, 1, "", "get_submodule"], [43, 1, 1, "", "half"], [43, 1, 1, "", "ipu"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "modules"], [43, 1, 1, "", "named_buffers"], [43, 1, 1, "", "named_children"], [43, 1, 1, "", "named_modules"], [43, 1, 1, "", "named_parameters"], [43, 1, 1, "", "parameters"], [43, 1, 1, "id0", "rand_step"], [43, 1, 1, "", "register_backward_hook"], [43, 1, 1, "", "register_buffer"], [43, 1, 1, "", "register_forward_hook"], [43, 1, 1, "", "register_forward_pre_hook"], [43, 1, 1, "", "register_full_backward_hook"], [43, 1, 1, "", "register_full_backward_pre_hook"], [43, 1, 1, "", "register_load_state_dict_post_hook"], [43, 1, 1, "", "register_module"], [43, 1, 1, "", "register_parameter"], [43, 1, 1, "", "requires_grad_"], [43, 1, 1, "id1", "reset"], [43, 1, 1, "id2", "rollout"], [43, 1, 1, "", "set_extra_state"], [43, 1, 1, "id3", "set_seed"], [43, 1, 1, "", "share_memory"], [43, 3, 1, "", "specs"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "id4", "step"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_empty"], [43, 1, 1, "", "train"], [43, 1, 1, "", "type"], [43, 1, 1, "", "xpu"], [43, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 3, 1, "", "batch_locked"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "close"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "fake_tensordict"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "rand_step"], [44, 1, 1, "", "read_action"], [44, 1, 1, "", "read_done"], [44, 1, 1, "", "read_obs"], [44, 1, 1, "", "read_reward"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_full_backward_pre_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "reset"], [44, 1, 1, "", "rollout"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_info_dict_reader"], [44, 1, 1, "", "set_seed"], [44, 1, 1, "", "share_memory"], [44, 3, 1, "", "specs"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "step"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[46, 1, 1, "", "add_module"], [46, 1, 1, "", "apply"], [46, 3, 1, "", "batch_locked"], [46, 1, 1, "", "bfloat16"], [46, 1, 1, "", "buffers"], [46, 1, 1, "", "children"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 1, 1, "", "double"], [46, 1, 1, "", "eval"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "fake_tensordict"], [46, 1, 1, "", "float"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_buffer"], [46, 1, 1, "", "get_extra_state"], [46, 1, 1, "", "get_parameter"], [46, 1, 1, "", "get_submodule"], [46, 1, 1, "", "half"], [46, 1, 1, "", "ipu"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "modules"], [46, 1, 1, "", "named_buffers"], [46, 1, 1, "", "named_children"], [46, 1, 1, "", "named_modules"], [46, 1, 1, "", "named_parameters"], [46, 1, 1, "", "parameters"], [46, 1, 1, "", "rand_step"], [46, 1, 1, "", "register_backward_hook"], [46, 1, 1, "", "register_buffer"], [46, 1, 1, "", "register_forward_hook"], [46, 1, 1, "", "register_forward_pre_hook"], [46, 1, 1, "", "register_full_backward_hook"], [46, 1, 1, "", "register_full_backward_pre_hook"], [46, 1, 1, "", "register_load_state_dict_post_hook"], [46, 1, 1, "", "register_module"], [46, 1, 1, "", "register_parameter"], [46, 1, 1, "", "requires_grad_"], [46, 1, 1, "", "reset"], [46, 1, 1, "", "rollout"], [46, 1, 1, "", "set_extra_state"], [46, 1, 1, "", "set_seed"], [46, 1, 1, "", "share_memory"], [46, 3, 1, "", "specs"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "step"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_empty"], [46, 1, 1, "", "train"], [46, 1, 1, "", "type"], [46, 1, 1, "", "update_kwargs"], [46, 1, 1, "", "xpu"], [46, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[47, 1, 1, "", "add_module"], [47, 1, 1, "", "apply"], [47, 3, 1, "", "batch_locked"], [47, 1, 1, "", "bfloat16"], [47, 1, 1, "", "buffers"], [47, 1, 1, "", "children"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 1, 1, "", "double"], [47, 1, 1, "", "eval"], [47, 1, 1, "", "extra_repr"], [47, 1, 1, "", "fake_tensordict"], [47, 1, 1, "", "float"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_buffer"], [47, 1, 1, "", "get_extra_state"], [47, 1, 1, "", "get_parameter"], [47, 1, 1, "", "get_submodule"], [47, 1, 1, "", "half"], [47, 1, 1, "", "ipu"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "modules"], [47, 1, 1, "", "named_buffers"], [47, 1, 1, "", "named_children"], [47, 1, 1, "", "named_modules"], [47, 1, 1, "", "named_parameters"], [47, 1, 1, "", "parameters"], [47, 1, 1, "", "rand_step"], [47, 1, 1, "", "register_backward_hook"], [47, 1, 1, "", "register_buffer"], [47, 1, 1, "", "register_forward_hook"], [47, 1, 1, "", "register_forward_pre_hook"], [47, 1, 1, "", "register_full_backward_hook"], [47, 1, 1, "", "register_full_backward_pre_hook"], [47, 1, 1, "", "register_load_state_dict_post_hook"], [47, 1, 1, "", "register_module"], [47, 1, 1, "", "register_parameter"], [47, 1, 1, "", "requires_grad_"], [47, 1, 1, "", "reset"], [47, 1, 1, "", "rollout"], [47, 1, 1, "", "set_extra_state"], [47, 1, 1, "", "set_seed"], [47, 1, 1, "", "share_memory"], [47, 3, 1, "", "specs"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "step"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_empty"], [47, 1, 1, "", "train"], [47, 1, 1, "", "type"], [47, 1, 1, "", "update_kwargs"], [47, 1, 1, "", "xpu"], [47, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.dm_control": [[48, 2, 1, "", "DMControlEnv"], [49, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[50, 2, 1, "", "GymEnv"], [51, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[52, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[53, 2, 1, "", "JumanjiEnv"], [54, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.model_based.dreamer": [[55, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[56, 0, 1, "", "BinarizeReward"], [57, 0, 1, "", "CatFrames"], [58, 0, 1, "", "CatTensors"], [59, 0, 1, "", "CenterCrop"], [60, 0, 1, "", "Compose"], [61, 0, 1, "", "DoubleToFloat"], [62, 0, 1, "", "FiniteTensorDictCheck"], [63, 0, 1, "", "FlattenObservation"], [64, 0, 1, "", "GrayScale"], [65, 0, 1, "", "NoopResetEnv"], [66, 0, 1, "", "ObservationNorm"], [67, 0, 1, "", "ObservationTransform"], [68, 0, 1, "", "PinMemoryTransform"], [69, 0, 1, "", "R3MTransform"], [70, 0, 1, "", "Resize"], [71, 0, 1, "", "RewardClipping"], [72, 0, 1, "", "RewardScaling"], [73, 0, 1, "", "TensorDictPrimer"], [74, 0, 1, "", "ToTensorImage"], [75, 0, 1, "", "Transform"], [76, 0, 1, "", "TransformedEnv"], [77, 0, 1, "", "UnsqueezeTransform"], [78, 0, 1, "", "VIPTransform"], [79, 0, 1, "", "VecNorm"], [80, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[56, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[57, 1, 1, "", "reset"], [57, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[58, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[59, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[60, 1, 1, "", "forward"], [60, 1, 1, "", "reset"], [60, 1, 1, "", "to"], [60, 1, 1, "", "transform_input_spec"], [60, 1, 1, "", "transform_observation_spec"], [60, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[61, 1, 1, "", "transform_input_spec"], [61, 1, 1, "", "transform_observation_spec"], [61, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.FlattenObservation": [[63, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[64, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[65, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[66, 1, 1, "", "init_stats"], [66, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[69, 1, 1, "", "forward"], [69, 1, 1, "", "reset"], [69, 1, 1, "", "to"], [69, 1, 1, "", "transform_input_spec"], [69, 1, 1, "", "transform_observation_spec"], [69, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Resize": [[70, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[71, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[72, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[73, 1, 1, "", "reset"], [73, 1, 1, "", "to"], [73, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[74, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[75, 1, 1, "", "forward"], [75, 1, 1, "", "reset"], [75, 1, 1, "", "transform_input_spec"], [75, 1, 1, "", "transform_observation_spec"], [75, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[76, 3, 1, "", "action_spec"], [76, 3, 1, "", "batch_locked"], [76, 1, 1, "", "eval"], [76, 3, 1, "", "input_spec"], [76, 1, 1, "", "load_state_dict"], [76, 3, 1, "", "observation_spec"], [76, 3, 1, "", "reward_spec"], [76, 1, 1, "", "set_seed"], [76, 1, 1, "", "state_dict"], [76, 1, 1, "", "to"], [76, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[77, 1, 1, "", "forward"], [77, 1, 1, "", "transform_input_spec"], [77, 1, 1, "", "transform_observation_spec"], [77, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPTransform": [[78, 1, 1, "", "forward"], [78, 1, 1, "", "reset"], [78, 1, 1, "", "to"], [78, 1, 1, "", "transform_input_spec"], [78, 1, 1, "", "transform_observation_spec"], [78, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VecNorm": [[79, 1, 1, "", "build_td_for_shared_vecnorm"], [79, 1, 1, "", "get_extra_state"], [79, 1, 1, "", "set_extra_state"], [79, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[80, 1, 1, "", "reset"]], "torchrl.envs.utils": [[81, 2, 1, "", "exploration_mode"], [82, 2, 1, "", "get_available_libraries"], [83, 2, 1, "", "set_exploration_mode"], [84, 2, 1, "", "step_mdp"]], "torchrl.modules": [[85, 0, 1, "", "Actor"], [86, 0, 1, "", "ActorCriticOperator"], [87, 0, 1, "", "ActorCriticWrapper"], [88, 0, 1, "", "ActorValueOperator"], [89, 0, 1, "", "CEMPlanner"], [90, 0, 1, "", "ConvNet"], [91, 0, 1, "", "DdpgCnnActor"], [92, 0, 1, "", "DdpgCnnQNet"], [93, 0, 1, "", "DdpgMlpActor"], [94, 0, 1, "", "DdpgMlpQNet"], [95, 0, 1, "", "Delta"], [96, 0, 1, "", "DistributionalDQNnet"], [97, 0, 1, "", "DistributionalQValueActor"], [98, 0, 1, "", "DreamerActor"], [99, 0, 1, "", "DuelingCnnDQNet"], [100, 0, 1, "", "LSTMNet"], [101, 0, 1, "", "MLP"], [102, 0, 1, "", "MPCPlannerBase"], [103, 0, 1, "", "NoisyLazyLinear"], [104, 0, 1, "", "NoisyLinear"], [105, 0, 1, "", "ObsDecoder"], [106, 0, 1, "", "ObsEncoder"], [107, 0, 1, "", "OneHotCategorical"], [108, 0, 1, "", "ProbabilisticActor"], [109, 0, 1, "", "ProbabilisticTensorDictModule"], [110, 0, 1, "", "QValueActor"], [111, 0, 1, "", "RSSMPosterior"], [112, 0, 1, "", "RSSMPrior"], [113, 0, 1, "", "Squeeze2dLayer"], [114, 0, 1, "", "SqueezeLayer"], [115, 0, 1, "", "TanhDelta"], [116, 0, 1, "", "TanhNormal"], [117, 0, 1, "", "TensorDictModule"], [118, 0, 1, "", "TensorDictModuleWrapper"], [119, 0, 1, "", "TensorDictSequential"], [120, 0, 1, "", "TruncatedNormal"], [121, 0, 1, "", "ValueOperator"], [122, 0, 1, "", "reset_noise"]], "torchrl.modules.ActorCriticOperator": [[86, 1, 1, "", "get_critic_operator"], [86, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorCriticWrapper": [[87, 1, 1, "", "get_policy_operator"], [87, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorValueOperator": [[88, 1, 1, "", "get_policy_operator"], [88, 1, 1, "", "get_value_operator"]], "torchrl.modules.CEMPlanner": [[89, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[90, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[91, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[92, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[93, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[94, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[95, 1, 1, "", "log_prob"], [95, 3, 1, "", "mean"], [95, 3, 1, "", "mode"], [95, 1, 1, "", "rsample"], [95, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[96, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[98, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[99, 1, 1, "", "forward"]], "torchrl.modules.LSTMNet": [[100, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[101, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[102, 1, 1, "", "forward"], [102, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[103, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[105, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[106, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[107, 1, 1, "", "log_prob"], [107, 3, 1, "", "mode"], [107, 1, 1, "", "rsample"], [107, 1, 1, "", "sample"]], "torchrl.modules.ProbabilisticTensorDictModule": [[109, 1, 1, "", "forward"], [109, 1, 1, "", "make_functional_with_buffers"]], "torchrl.modules.RSSMPosterior": [[111, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[112, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[114, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[115, 3, 1, "", "mean"], [115, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[116, 3, 1, "", "mode"]], "torchrl.modules.TensorDictModule": [[117, 1, 1, "", "forward"], [117, 1, 1, "", "make_functional_with_buffers"], [117, 1, 1, "", "random"], [117, 1, 1, "", "random_sample"], [117, 1, 1, "", "to"]], "torchrl.modules.TensorDictModuleWrapper": [[118, 1, 1, "", "forward"]], "torchrl.modules.TensorDictSequential": [[119, 1, 1, "", "forward"], [119, 1, 1, "", "make_functional_with_buffers"], [119, 1, 1, "", "select_subsequence"]], "torchrl.modules.TruncatedNormal": [[120, 1, 1, "", "log_prob"], [120, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module.actors": [[123, 0, 1, "", "DistributionalQValueHook"], [124, 0, 1, "", "QValueHook"]], "torchrl.objectives": [[125, 0, 1, "", "ClipPPOLoss"], [126, 0, 1, "", "DDPGLoss"], [127, 0, 1, "", "DQNLoss"], [128, 0, 1, "", "DistributionalDQNLoss"], [129, 0, 1, "", "HardUpdate"], [130, 0, 1, "", "KLPENPPOLoss"], [131, 0, 1, "", "PPOLoss"], [132, 0, 1, "", "REDQLoss"], [133, 0, 1, "", "SACLoss"], [134, 0, 1, "", "SoftUpdate"], [135, 0, 1, "", "distance_loss"], [136, 0, 1, "", "hold_out_net"], [137, 0, 1, "", "hold_out_params"], [138, 0, 1, "", "next_state_value"]], "torchrl.objectives.ClipPPOLoss": [[125, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[126, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[127, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[128, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[130, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[131, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[132, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[133, 1, 1, "", "forward"]], "torchrl.objectives.value": [[139, 0, 1, "", "GAE"], [140, 0, 1, "", "TDEstimate"], [141, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[139, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[140, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[141, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[142, 0, 1, "", "generalized_advantage_estimate"], [143, 0, 1, "", "td_advantage_estimate"], [144, 0, 1, "", "td_lambda_advantage_estimate"], [145, 0, 1, "", "td_lambda_return_estimate"], [146, 0, 1, "", "vec_generalized_advantage_estimate"], [147, 0, 1, "", "vec_td_lambda_advantage_estimate"], [148, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.trainers": [[149, 0, 1, "", "BatchSubSampler"], [150, 0, 1, "", "ClearCudaCache"], [151, 0, 1, "", "CountFramesLog"], [152, 0, 1, "", "LogReward"], [153, 0, 1, "", "Recorder"], [154, 0, 1, "", "ReplayBuffer"], [155, 0, 1, "", "RewardNormalizer"], [156, 0, 1, "", "SelectKeys"], [157, 0, 1, "", "Trainer"], [158, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.ReplayBuffer": [[154, 1, 1, "", "add"], [154, 1, 1, "", "extend"], [154, 1, 1, "", "sample"]], "torchrl.trainers.helpers": [[159, 2, 1, "", "correct_for_frame_skip"], [160, 2, 1, "", "get_stats_random_rollout"], [161, 2, 1, "", "make_collector_offpolicy"], [162, 2, 1, "", "make_collector_onpolicy"], [163, 2, 1, "", "make_ddpg_actor"], [164, 2, 1, "", "make_ddpg_loss"], [165, 2, 1, "", "make_dqn_actor"], [166, 2, 1, "", "make_dqn_loss"], [167, 2, 1, "", "make_ppo_loss"], [168, 2, 1, "", "make_ppo_model"], [169, 2, 1, "", "make_redq_loss"], [170, 2, 1, "", "make_redq_model"], [171, 2, 1, "", "make_replay_buffer"], [172, 2, 1, "", "make_sac_loss"], [173, 2, 1, "", "make_sac_model"], [174, 2, 1, "", "make_target_updater"], [175, 2, 1, "", "make_trainer"], [176, 2, 1, "", "parallel_env_constructor"], [177, 2, 1, "", "sync_async_collector"], [178, 2, 1, "", "sync_sync_collector"], [179, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"exampl": 0, "galleri": 0, "welcom": 1, "torchrl": [1, 2, 3, 4, 6, 182, 183, 184, 185], "document": [1, 9], "content": [1, 181], "indic": 1, "tabl": 1, "collector": 2, "packag": [2, 3, 4, 182, 183, 184, 185], "data": [2, 3], "helper": [2, 4], "function": 2, "replai": 3, "buffer": 3, "compos": [3, 60], "prototyp": 3, "tensorspec": [3, 29], "util": [3, 182, 183, 184], "env": 4, "vector": 4, "transform": [4, 75], "domain": 4, "specif": 4, "librari": 4, "work": [5, 6], "gym": 5, "version": [5, 7], "habitat": 6, "lab": 6, "set": 6, "up": 6, "your": 6, "environ": [6, 7], "instal": [6, 7], "from": [6, 7], "pip": [6, 7], "us": [6, 9], "common": [6, 7], "issu": [6, 7], "about": 7, "mujoco": 7, "prerequisit": 7, "render": 7, "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "clone": 7, "repo": [7, 9], "when": 7, "pro": 8, "tip": 8, "train": 8, "cluster": 8, "resourc": 9, "pytorch": 9, "functorch": 9, "rl": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "implement_for": 10, "multisyncdatacollector": 11, "multiasyncdatacollector": 12, "syncdatacollector": 13, "asyncdatacollector": 14, "split_trajectori": 15, "binarydiscretetensorspec": 16, "boundedtensorspec": 17, "compositespec": 18, "discretetensorspec": 19, "multonehotdiscretetensorspec": 20, "multistep": 21, "ndboundedtensorspec": 22, "ndunboundedcontinuoustensorspec": 23, "onehotdiscretetensorspec": 24, "prioritizedreplaybuff": 25, "replaybuff": [26, 32, 154], "tensordictprioritizedreplaybuff": 27, "tensordictreplaybuff": [28, 33], "unboundedcontinuoustensorspec": 30, "remotetensordictreplaybuff": 31, "prioritizedsampl": 34, "randomsampl": 35, "sampler": 36, "lazymemmapstorag": 37, "lazytensorstorag": 38, "liststorag": 39, "storag": 40, "roundrobinwrit": 41, "writer": 42, "envbas": 43, "gymlikeenv": 44, "modelbasedenvbas": 45, "parallelenv": 46, "serialenv": 47, "dmcontrolenv": 48, "dmcontrolwrapp": 49, "gymenv": 50, "gymwrapp": 51, "habitatenv": 52, "jumanjienv": 53, "jumanjiwrapp": 54, "dreamerenv": 55, "binarizereward": 56, "catfram": 57, "cattensor": 58, "centercrop": 59, "doubletofloat": 61, "finitetensordictcheck": 62, "flattenobserv": 63, "grayscal": 64, "noopresetenv": 65, "observationnorm": 66, "observationtransform": 67, "pinmemorytransform": 68, "r3mtransform": 69, "resiz": 70, "rewardclip": 71, "rewardsc": 72, "tensordictprim": 73, "totensorimag": 74, "transformedenv": 76, "unsqueezetransform": 77, "viptransform": 78, "vecnorm": 79, "gsdenois": 80, "exploration_mod": 81, "get_available_librari": 82, "set_exploration_mod": 83, "step_mdp": 84, "actor": 85, "actorcriticoper": 86, "actorcriticwrapp": 87, "actorvalueoper": 88, "cemplann": 89, "convnet": 90, "ddpgcnnactor": 91, "ddpgcnnqnet": 92, "ddpgmlpactor": 93, "ddpgmlpqnet": 94, "delta": 95, "distributionaldqnnet": 96, "distributionalqvalueactor": 97, "dreameractor": 98, "duelingcnndqnet": 99, "lstmnet": 100, "mlp": 101, "mpcplannerbas": 102, "noisylazylinear": 103, "noisylinear": 104, "obsdecod": 105, "obsencod": 106, "onehotcategor": 107, "probabilisticactor": 108, "probabilistictensordictmodul": 109, "qvalueactor": 110, "rssmposterior": 111, "rssmprior": 112, "squeeze2dlay": 113, "squeezelay": 114, "tanhdelta": 115, "tanhnorm": 116, "tensordictmodul": 117, "tensordictmodulewrapp": 118, "tensordictsequenti": 119, "truncatednorm": 120, "valueoper": 121, "reset_nois": 122, "distributionalqvaluehook": 123, "qvaluehook": 124, "clipppoloss": 125, "ddpgloss": 126, "dqnloss": 127, "distributionaldqnloss": 128, "hardupd": 129, "klpenppoloss": 130, "ppoloss": 131, "redqloss": 132, "sacloss": 133, "softupd": 134, "distance_loss": 135, "hold_out_net": 136, "hold_out_param": 137, "next_state_valu": 138, "gae": 139, "tdestim": 140, "tdlambdaestim": 141, "generalized_advantage_estim": 142, "td_advantage_estim": 143, "td_lambda_advantage_estim": 144, "td_lambda_return_estim": 145, "vec_generalized_advantage_estim": 146, "vec_td_lambda_advantage_estim": 147, "vec_td_lambda_return_estim": 148, "batchsubsampl": 149, "clearcudacach": 150, "countframeslog": 151, "logreward": 152, "record": 153, "rewardnorm": 155, "selectkei": 156, "trainer": [157, 184], "updateweight": 158, "correct_for_frame_skip": 159, "get_stats_random_rollout": 160, "make_collector_offpolici": 161, "make_collector_onpolici": 162, "make_ddpg_actor": 163, "make_ddpg_loss": 164, "make_dqn_actor": 165, "make_dqn_loss": 166, "make_ppo_loss": 167, "make_ppo_model": 168, "make_redq_loss": 169, "make_redq_model": 170, "make_replay_buff": 171, "make_sac_loss": 172, "make_sac_model": 173, "make_target_updat": 174, "make_train": 175, "parallel_env_constructor": 176, "sync_async_collector": 177, "sync_sync_collector": 178, "transformed_env_constructor": 179, "api": 180, "refer": 180, "knowledg": 181, "base": 181, "contribut": 181, "modul": 182, "tensordict": 182, "hook": [182, 184], "model": 182, "explor": 182, "planner": 182, "distribut": 182, "object": 183, "dqn": 183, "ddpg": 183, "sac": 183, "redq": 183, "ppo": 183, "return": 183, "checkpoint": 184, "builder": 184, "_util": 185}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Example gallery": [[0, "example-gallery"]], "Welcome to the TorchRL Documentation!": [[1, "welcome-to-the-torchrl-documentation"]], "Contents:": [[1, null], [181, null]], "Indices and tables": [[1, "indices-and-tables"]], "torchrl.collectors package": [[2, "torchrl-collectors-package"]], "Data collectors": [[2, "data-collectors"]], "Helper functions": [[2, "helper-functions"]], "torchrl.data package": [[3, "torchrl-data-package"]], "Replay Buffers": [[3, "replay-buffers"]], "Composable Replay Buffers (Prototype)": [[3, "composable-replay-buffers-prototype"]], "TensorSpec": [[3, "tensorspec"], [29, "tensorspec"]], "Utils": [[3, "utils"], [182, "utils"], [183, "utils"], [184, "utils"]], "torchrl.envs package": [[4, "torchrl-envs-package"]], "Vectorized envs": [[4, "vectorized-envs"]], "Transforms": [[4, "transforms"]], "Helpers": [[4, "helpers"]], "Domain-specific": [[4, "domain-specific"]], "Libraries": [[4, "libraries"]], "Working with gym": [[5, "working-with-gym"]], "Versioning": [[5, "versioning"]], "Working with habitat-lab": [[6, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[6, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[6, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[6, "installing-torchrl"]], "Using Habitat": [[6, "using-habitat"]], "Common issues": [[6, "common-issues"]], "About MuJoCo": [[7, "about-mujoco"]], "Installing MuJoCo": [[7, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[7, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[7, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[7, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[7, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[7, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[7, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips": [[8, "pro-tips"]], "Training on a cluster": [[8, "training-on-a-cluster"]], "Useful resources": [[9, "useful-resources"]], "Pytorch documentation": [[9, "pytorch-documentation"]], "functorch documentation": [[9, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[9, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[9, "educational-resource"]], "Forums": [[9, "forums"]], "Repos": [[9, "repos"]], "implement_for": [[10, "implement-for"]], "MultiSyncDataCollector": [[11, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[12, "multiasyncdatacollector"]], "SyncDataCollector": [[13, "syncdatacollector"]], "aSyncDataCollector": [[14, "asyncdatacollector"]], "split_trajectories": [[15, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[16, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[17, "boundedtensorspec"]], "CompositeSpec": [[18, "compositespec"]], "DiscreteTensorSpec": [[19, "discretetensorspec"]], "MultOneHotDiscreteTensorSpec": [[20, "multonehotdiscretetensorspec"]], "MultiStep": [[21, "multistep"]], "NdBoundedTensorSpec": [[22, "ndboundedtensorspec"]], "NdUnboundedContinuousTensorSpec": [[23, "ndunboundedcontinuoustensorspec"]], "OneHotDiscreteTensorSpec": [[24, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[25, "prioritizedreplaybuffer"]], "ReplayBuffer": [[26, "replaybuffer"], [32, "replaybuffer"], [154, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[27, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[28, "tensordictreplaybuffer"], [33, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[30, "unboundedcontinuoustensorspec"]], "RemoteTensorDictReplayBuffer": [[31, "remotetensordictreplaybuffer"]], "PrioritizedSampler": [[34, "prioritizedsampler"]], "RandomSampler": [[35, "randomsampler"]], "Sampler": [[36, "sampler"]], "LazyMemmapStorage": [[37, "lazymemmapstorage"]], "LazyTensorStorage": [[38, "lazytensorstorage"]], "ListStorage": [[39, "liststorage"]], "Storage": [[40, "storage"]], "RoundRobinWriter": [[41, "roundrobinwriter"]], "Writer": [[42, "writer"]], "EnvBase": [[43, "envbase"]], "GymLikeEnv": [[44, "gymlikeenv"]], "ModelBasedEnvBase": [[45, "modelbasedenvbase"]], "ParallelEnv": [[46, "parallelenv"]], "SerialEnv": [[47, "serialenv"]], "DMControlEnv": [[48, "dmcontrolenv"]], "DMControlWrapper": [[49, "dmcontrolwrapper"]], "GymEnv": [[50, "gymenv"]], "GymWrapper": [[51, "gymwrapper"]], "HabitatEnv": [[52, "habitatenv"]], "JumanjiEnv": [[53, "jumanjienv"]], "JumanjiWrapper": [[54, "jumanjiwrapper"]], "DreamerEnv": [[55, "dreamerenv"]], "BinarizeReward": [[56, "binarizereward"]], "CatFrames": [[57, "catframes"]], "CatTensors": [[58, "cattensors"]], "CenterCrop": [[59, "centercrop"]], "Compose": [[60, "compose"]], "DoubleToFloat": [[61, "doubletofloat"]], "FiniteTensorDictCheck": [[62, "finitetensordictcheck"]], "FlattenObservation": [[63, "flattenobservation"]], "GrayScale": [[64, "grayscale"]], "NoopResetEnv": [[65, "noopresetenv"]], "ObservationNorm": [[66, "observationnorm"]], "ObservationTransform": [[67, "observationtransform"]], "PinMemoryTransform": [[68, "pinmemorytransform"]], "R3MTransform": [[69, "r3mtransform"]], "Resize": [[70, "resize"]], "RewardClipping": [[71, "rewardclipping"]], "RewardScaling": [[72, "rewardscaling"]], "TensorDictPrimer": [[73, "tensordictprimer"]], "ToTensorImage": [[74, "totensorimage"]], "Transform": [[75, "transform"]], "TransformedEnv": [[76, "transformedenv"]], "UnsqueezeTransform": [[77, "unsqueezetransform"]], "VIPTransform": [[78, "viptransform"]], "VecNorm": [[79, "vecnorm"]], "gSDENoise": [[80, "gsdenoise"]], "exploration_mode": [[81, "exploration-mode"]], "get_available_libraries": [[82, "get-available-libraries"]], "set_exploration_mode": [[83, "set-exploration-mode"]], "step_mdp": [[84, "step-mdp"]], "Actor": [[85, "actor"]], "ActorCriticOperator": [[86, "actorcriticoperator"]], "ActorCriticWrapper": [[87, "actorcriticwrapper"]], "ActorValueOperator": [[88, "actorvalueoperator"]], "CEMPlanner": [[89, "cemplanner"]], "ConvNet": [[90, "convnet"]], "DdpgCnnActor": [[91, "ddpgcnnactor"]], "DdpgCnnQNet": [[92, "ddpgcnnqnet"]], "DdpgMlpActor": [[93, "ddpgmlpactor"]], "DdpgMlpQNet": [[94, "ddpgmlpqnet"]], "Delta": [[95, "delta"]], "DistributionalDQNnet": [[96, "distributionaldqnnet"]], "DistributionalQValueActor": [[97, "distributionalqvalueactor"]], "DreamerActor": [[98, "dreameractor"]], "DuelingCnnDQNet": [[99, "duelingcnndqnet"]], "LSTMNet": [[100, "lstmnet"]], "MLP": [[101, "mlp"]], "MPCPlannerBase": [[102, "mpcplannerbase"]], "NoisyLazyLinear": [[103, "noisylazylinear"]], "NoisyLinear": [[104, "noisylinear"]], "ObsDecoder": [[105, "obsdecoder"]], "ObsEncoder": [[106, "obsencoder"]], "OneHotCategorical": [[107, "onehotcategorical"]], "ProbabilisticActor": [[108, "probabilisticactor"]], "ProbabilisticTensorDictModule": [[109, "probabilistictensordictmodule"]], "QValueActor": [[110, "qvalueactor"]], "RSSMPosterior": [[111, "rssmposterior"]], "RSSMPrior": [[112, "rssmprior"]], "Squeeze2dLayer": [[113, "squeeze2dlayer"]], "SqueezeLayer": [[114, "squeezelayer"]], "TanhDelta": [[115, "tanhdelta"]], "TanhNormal": [[116, "tanhnormal"]], "TensorDictModule": [[117, "tensordictmodule"]], "TensorDictModuleWrapper": [[118, "tensordictmodulewrapper"]], "TensorDictSequential": [[119, "tensordictsequential"]], "TruncatedNormal": [[120, "truncatednormal"]], "ValueOperator": [[121, "valueoperator"]], "reset_noise": [[122, "reset-noise"]], "DistributionalQValueHook": [[123, "distributionalqvaluehook"]], "QValueHook": [[124, "qvaluehook"]], "ClipPPOLoss": [[125, "clipppoloss"]], "DDPGLoss": [[126, "ddpgloss"]], "DQNLoss": [[127, "dqnloss"]], "DistributionalDQNLoss": [[128, "distributionaldqnloss"]], "HardUpdate": [[129, "hardupdate"]], "KLPENPPOLoss": [[130, "klpenppoloss"]], "PPOLoss": [[131, "ppoloss"]], "REDQLoss": [[132, "redqloss"]], "SACLoss": [[133, "sacloss"]], "SoftUpdate": [[134, "softupdate"]], "distance_loss": [[135, "distance-loss"]], "hold_out_net": [[136, "hold-out-net"]], "hold_out_params": [[137, "hold-out-params"]], "next_state_value": [[138, "next-state-value"]], "GAE": [[139, "gae"]], "TDEstimate": [[140, "tdestimate"]], "TDLambdaEstimate": [[141, "tdlambdaestimate"]], "generalized_advantage_estimate": [[142, "generalized-advantage-estimate"]], "td_advantage_estimate": [[143, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[144, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[145, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[146, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[147, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[148, "vec-td-lambda-return-estimate"]], "BatchSubSampler": [[149, "batchsubsampler"]], "ClearCudaCache": [[150, "clearcudacache"]], "CountFramesLog": [[151, "countframeslog"]], "LogReward": [[152, "logreward"]], "Recorder": [[153, "recorder"]], "RewardNormalizer": [[155, "rewardnormalizer"]], "SelectKeys": [[156, "selectkeys"]], "Trainer": [[157, "trainer"]], "UpdateWeights": [[158, "updateweights"]], "correct_for_frame_skip": [[159, "correct-for-frame-skip"]], "get_stats_random_rollout": [[160, "get-stats-random-rollout"]], "make_collector_offpolicy": [[161, "make-collector-offpolicy"]], "make_collector_onpolicy": [[162, "make-collector-onpolicy"]], "make_ddpg_actor": [[163, "make-ddpg-actor"]], "make_ddpg_loss": [[164, "make-ddpg-loss"]], "make_dqn_actor": [[165, "make-dqn-actor"]], "make_dqn_loss": [[166, "make-dqn-loss"]], "make_ppo_loss": [[167, "make-ppo-loss"]], "make_ppo_model": [[168, "make-ppo-model"]], "make_redq_loss": [[169, "make-redq-loss"]], "make_redq_model": [[170, "make-redq-model"]], "make_replay_buffer": [[171, "make-replay-buffer"]], "make_sac_loss": [[172, "make-sac-loss"]], "make_sac_model": [[173, "make-sac-model"]], "make_target_updater": [[174, "make-target-updater"]], "make_trainer": [[175, "make-trainer"]], "parallel_env_constructor": [[176, "parallel-env-constructor"]], "sync_async_collector": [[177, "sync-async-collector"]], "sync_sync_collector": [[178, "sync-sync-collector"]], "transformed_env_constructor": [[179, "transformed-env-constructor"]], "API Reference": [[180, "api-reference"]], "Knowledge Base": [[181, "knowledge-base"]], "Contributing": [[181, "contributing"]], "torchrl.modules package": [[182, "torchrl-modules-package"]], "TensorDict modules": [[182, "tensordict-modules"]], "Hooks": [[182, "hooks"]], "Models": [[182, "models"]], "Exploration": [[182, "exploration"]], "Planners": [[182, "planners"]], "Distributions": [[182, "distributions"]], "torchrl.objectives package": [[183, "torchrl-objectives-package"]], "DQN": [[183, "dqn"]], "DDPG": [[183, "ddpg"]], "SAC": [[183, "sac"]], "REDQ": [[183, "redq"]], "PPO": [[183, "ppo"]], "Returns": [[183, "returns"]], "torchrl.trainers package": [[184, "torchrl-trainers-package"]], "Checkpointing": [[184, "checkpointing"]], "Trainer and hooks": [[184, "trainer-and-hooks"]], "Builders": [[184, "builders"]], "torchrl._utils package": [[185, "torchrl-utils-package"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[10, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors)": [[11, "torchrl.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors)": [[12, "torchrl.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "syncdatacollector (class in torchrl.collectors)": [[13, "torchrl.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors)": [[14, "torchrl.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[15, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[16, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[17, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.encode"]], "index() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[18, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.encode"]], "index() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[19, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.encode"]], "index() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.zero"]], "multonehotdiscretetensorspec (class in torchrl.data)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[21, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.zero_grad"]], "ndboundedtensorspec (class in torchrl.data)": [[22, "torchrl.data.NdBoundedTensorSpec"]], "assert_is_in() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.encode"]], "index() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.index"]], "is_in() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.is_in"]], "project() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.project"]], "rand() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.type_check"]], "zero() (torchrl.data.ndboundedtensorspec method)": [[22, "torchrl.data.NdBoundedTensorSpec.zero"]], "ndunboundedcontinuoustensorspec (class in torchrl.data)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[23, "torchrl.data.NdUnboundedContinuousTensorSpec.zero"]], "onehotdiscretetensorspec (class in torchrl.data)": [[24, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[25, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.add"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.update_priority"]], "replaybuffer (class in torchrl.data)": [[26, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.add"]], "extend() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.extend"]], "sample() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.update_priority"]], "tensordictreplaybuffer (class in torchrl.data)": [[28, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[29, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.encode"]], "index() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[30, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "remotetensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.add"]], "extend() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.extend"]], "sample() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.sample"]], "replaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.add"]], "extend() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.extend"]], "sample() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[33, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.sample"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[34, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[35, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[36, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[37, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[38, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[39, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[39, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[40, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[40, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[41, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[41, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[41, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[42, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[42, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[42, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[43, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[43, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[43, "id0"], [43, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[43, "id1"], [43, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[43, "id2"], [43, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[43, "id3"], [43, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[43, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[43, "id4"], [43, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[43, "torchrl.envs.EnvBase.zero_grad"]], "gymlikeenv (class in torchrl.envs)": [[44, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[44, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[44, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[45, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[45, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[45, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[45, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[45, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[45, "torchrl.envs.step"]], "parallelenv (class in torchrl.envs)": [[46, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[46, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[46, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[47, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[47, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[47, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.zero_grad"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[48, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[49, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[50, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[51, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[52, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[53, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[54, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[55, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[56, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[56, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[57, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[57, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[57, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[58, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[58, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[59, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[59, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[60, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[60, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[61, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[61, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[61, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[61, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[63, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "grayscale (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[64, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[65, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[66, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[66, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.R3MTransform"]], "forward() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.forward"]], "reset() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.reset"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.r3mtransform method)": [[69, "torchrl.envs.transforms.R3MTransform.transform_reward_spec"]], "resize (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[70, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[71, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[72, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[73, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[73, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[73, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[74, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[75, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[75, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[75, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[75, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[75, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[76, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[76, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[76, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[76, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[76, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[76, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[77, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[77, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[77, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[77, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viptransform (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.VIPTransform"]], "forward() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.forward"]], "reset() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.reset"]], "to() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.transform_reward_spec"]], "vecnorm (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[79, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[79, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[79, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[79, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[80, "torchrl.envs.transforms.gSDENoise.reset"]], "exploration_mode() (in module torchrl.envs.utils)": [[81, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[82, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[83, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[84, "torchrl.envs.utils.step_mdp"]], "actor (class in torchrl.modules)": [[85, "torchrl.modules.Actor"]], "actorcriticoperator (class in torchrl.modules)": [[86, "torchrl.modules.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.actorcriticoperator method)": [[86, "torchrl.modules.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.actorcriticoperator method)": [[86, "torchrl.modules.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules)": [[87, "torchrl.modules.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.actorcriticwrapper method)": [[87, "torchrl.modules.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorcriticwrapper method)": [[87, "torchrl.modules.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules)": [[88, "torchrl.modules.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.actorvalueoperator method)": [[88, "torchrl.modules.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorvalueoperator method)": [[88, "torchrl.modules.ActorValueOperator.get_value_operator"]], "cemplanner (class in torchrl.modules)": [[89, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[89, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[90, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[90, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[91, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[91, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[92, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[92, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[93, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[93, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[94, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[94, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[95, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[95, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[95, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[95, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[95, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[95, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[96, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[96, "torchrl.modules.DistributionalDQNnet.forward"]], "distributionalqvalueactor (class in torchrl.modules)": [[97, "torchrl.modules.DistributionalQValueActor"]], "dreameractor (class in torchrl.modules)": [[98, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[98, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[99, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[99, "torchrl.modules.DuelingCnnDQNet.forward"]], "lstmnet (class in torchrl.modules)": [[100, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[100, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[101, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[101, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[102, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[102, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[102, "torchrl.modules.MPCPlannerBase.planning"]], "noisylazylinear (class in torchrl.modules)": [[103, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[103, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[104, "torchrl.modules.NoisyLinear"]], "obsdecoder (class in torchrl.modules)": [[105, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[105, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[106, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[106, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[107, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[107, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[107, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[107, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[107, "torchrl.modules.OneHotCategorical.sample"]], "probabilisticactor (class in torchrl.modules)": [[108, "torchrl.modules.ProbabilisticActor"]], "probabilistictensordictmodule (class in torchrl.modules)": [[109, "torchrl.modules.ProbabilisticTensorDictModule"]], "forward() (torchrl.modules.probabilistictensordictmodule method)": [[109, "torchrl.modules.ProbabilisticTensorDictModule.forward"]], "make_functional_with_buffers() (torchrl.modules.probabilistictensordictmodule method)": [[109, "torchrl.modules.ProbabilisticTensorDictModule.make_functional_with_buffers"]], "qvalueactor (class in torchrl.modules)": [[110, "torchrl.modules.QValueActor"]], "rssmposterior (class in torchrl.modules)": [[111, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[111, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[112, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[112, "torchrl.modules.RSSMPrior.forward"]], "squeeze2dlayer (class in torchrl.modules)": [[113, "torchrl.modules.Squeeze2dLayer"]], "squeezelayer (class in torchrl.modules)": [[114, "torchrl.modules.SqueezeLayer"]], "forward() (torchrl.modules.squeezelayer method)": [[114, "torchrl.modules.SqueezeLayer.forward"]], "tanhdelta (class in torchrl.modules)": [[115, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[115, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[115, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[116, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[116, "torchrl.modules.TanhNormal.mode"]], "tensordictmodule (class in torchrl.modules)": [[117, "torchrl.modules.TensorDictModule"]], "forward() (torchrl.modules.tensordictmodule method)": [[117, "torchrl.modules.TensorDictModule.forward"]], "make_functional_with_buffers() (torchrl.modules.tensordictmodule method)": [[117, "torchrl.modules.TensorDictModule.make_functional_with_buffers"]], "random() (torchrl.modules.tensordictmodule method)": [[117, "torchrl.modules.TensorDictModule.random"]], "random_sample() (torchrl.modules.tensordictmodule method)": [[117, "torchrl.modules.TensorDictModule.random_sample"]], "to() (torchrl.modules.tensordictmodule method)": [[117, "torchrl.modules.TensorDictModule.to"]], "tensordictmodulewrapper (class in torchrl.modules)": [[118, "torchrl.modules.TensorDictModuleWrapper"]], "forward() (torchrl.modules.tensordictmodulewrapper method)": [[118, "torchrl.modules.TensorDictModuleWrapper.forward"]], "tensordictsequential (class in torchrl.modules)": [[119, "torchrl.modules.TensorDictSequential"]], "forward() (torchrl.modules.tensordictsequential method)": [[119, "torchrl.modules.TensorDictSequential.forward"]], "make_functional_with_buffers() (torchrl.modules.tensordictsequential method)": [[119, "torchrl.modules.TensorDictSequential.make_functional_with_buffers"]], "select_subsequence() (torchrl.modules.tensordictsequential method)": [[119, "torchrl.modules.TensorDictSequential.select_subsequence"]], "truncatednormal (class in torchrl.modules)": [[120, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[120, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[120, "torchrl.modules.TruncatedNormal.mode"]], "valueoperator (class in torchrl.modules)": [[121, "torchrl.modules.ValueOperator"]], "reset_noise (class in torchrl.modules)": [[122, "torchrl.modules.reset_noise"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[123, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[124, "torchrl.modules.tensordict_module.actors.QValueHook"]], "clipppoloss (class in torchrl.objectives)": [[125, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[125, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[126, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[126, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[127, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[127, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[128, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[128, "torchrl.objectives.DistributionalDQNLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[129, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[130, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[130, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[131, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[131, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[132, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[132, "torchrl.objectives.REDQLoss.forward"]], "sacloss (class in torchrl.objectives)": [[133, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[133, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[134, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[135, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[136, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[137, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[138, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[139, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[139, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[140, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[140, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[141, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[141, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[142, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[143, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[144, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[145, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[146, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[147, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[148, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "batchsubsampler (class in torchrl.trainers)": [[149, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[150, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[151, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[152, "torchrl.trainers.LogReward"]], "recorder (class in torchrl.trainers)": [[153, "torchrl.trainers.Recorder"]], "replaybuffer (class in torchrl.trainers)": [[154, "torchrl.trainers.ReplayBuffer"]], "add() (torchrl.trainers.replaybuffer method)": [[154, "torchrl.trainers.ReplayBuffer.add"]], "extend() (torchrl.trainers.replaybuffer method)": [[154, "torchrl.trainers.ReplayBuffer.extend"]], "sample() (torchrl.trainers.replaybuffer method)": [[154, "torchrl.trainers.ReplayBuffer.sample"]], "rewardnormalizer (class in torchrl.trainers)": [[155, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[156, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[157, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[158, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[159, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[160, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[161, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[162, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[163, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[164, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[165, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[166, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[167, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[168, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[169, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[170, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[171, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[172, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[173, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[174, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[175, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[176, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[177, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[178, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[179, "torchrl.trainers.helpers.transformed_env_constructor"]]}})