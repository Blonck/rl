Search.setIndex({"docnames": ["auto_examples/index", "index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedTensorDict", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.NdBoundedTensorSpec", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.SubTensorDict", "reference/generated/torchrl.data.TensorDict", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.data.utils.expand_as_right", "reference/generated/torchrl.data.utils.expand_right", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.Actor", "reference/generated/torchrl.modules.ActorCriticOperator", "reference/generated/torchrl.modules.ActorCriticWrapper", "reference/generated/torchrl.modules.ActorValueOperator", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueActor", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.ProbabilisticActor", "reference/generated/torchrl.modules.ProbabilisticTensorDictModule", "reference/generated/torchrl.modules.QValueActor", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TensorDictModule", "reference/generated/torchrl.modules.TensorDictModuleWrapper", "reference/generated/torchrl.modules.TensorDictSequential", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.ValueOperator", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBuffer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils"], "filenames": ["auto_examples/index.rst", "index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorDict.rst", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.NdBoundedTensorSpec.rst", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.SubTensorDict.rst", "reference/generated/torchrl.data.TensorDict.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.data.utils.expand_as_right.rst", "reference/generated/torchrl.data.utils.expand_right.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.Actor.rst", "reference/generated/torchrl.modules.ActorCriticOperator.rst", "reference/generated/torchrl.modules.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.ActorValueOperator.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.ProbabilisticActor.rst", "reference/generated/torchrl.modules.ProbabilisticTensorDictModule.rst", "reference/generated/torchrl.modules.QValueActor.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TensorDictModule.rst", "reference/generated/torchrl.modules.TensorDictModuleWrapper.rst", "reference/generated/torchrl.modules.TensorDictSequential.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.ValueOperator.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBuffer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst"], "titles": ["Example gallery", "Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips", "Useful resources", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedTensorDict", "MultOneHotDiscreteTensorSpec", "MultiStep", "NdBoundedTensorSpec", "NdUnboundedContinuousTensorSpec", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "SubTensorDict", "TensorDict", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "TensorDictReplayBuffer", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "expand_as_right", "expand_right", "EnvBase", "GymLikeEnv", "ModelBasedEnvBase", "ParallelEnv", "SerialEnv", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DoubleToFloat", "FiniteTensorDictCheck", "FlattenObservation", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "TensorDictPrimer", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPTransform", "VecNorm", "gSDENoise", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DistributionalQValueActor", "DreamerActor", "DuelingCnnDQNet", "LSTMNet", "MLP", "MPCPlannerBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "ProbabilisticActor", "ProbabilisticTensorDictModule", "QValueActor", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TensorDictModule", "TensorDictModuleWrapper", "TensorDictSequential", "TruncatedNormal", "ValueOperator", "reset_noise", "DistributionalQValueHook", "QValueHook", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "Recorder", "ReplayBuffer", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package"], "terms": {"below": [0, 7, 11, 12, 13, 14, 22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 92, 103, 118, 119, 122], "i": [0, 1, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 65, 67, 68, 71, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 105, 106, 110, 111, 114, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 159, 161, 162, 165, 170, 172, 175, 177, 181, 183], "download": [0, 7, 71, 80], "all": [0, 1, 11, 12, 13, 14, 20, 22, 28, 29, 48, 49, 50, 51, 52, 62, 64, 68, 71, 75, 77, 78, 79, 80, 81, 84, 85, 86, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121, 159, 161, 179, 180, 181, 183], "python": [0, 1, 6, 7, 119], "sourc": [0, 1, 7, 20, 28, 29, 159], "code": [0, 1, 7, 71, 121], "auto_examples_python": 0, "zip": 0, "jupyt": 0, "notebook": 0, "auto_examples_jupyt": 0, "gener": [0, 7, 13, 20, 28, 29, 35, 39, 50, 87, 97, 109, 110, 111, 123, 134, 141, 144, 145, 148, 159], "sphinx": 0, "an": [1, 3, 4, 5, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 61, 64, 67, 68, 71, 72, 76, 77, 78, 81, 88, 89, 90, 92, 93, 94, 95, 96, 102, 103, 105, 108, 111, 115, 116, 127, 130, 132, 133, 134, 135, 141, 142, 143, 155, 156, 159, 162, 165, 178, 179, 180, 181, 183], "open": [1, 5, 7, 10], "reinforc": [1, 3, 9, 59, 93, 94, 95, 96, 125, 130, 131, 135, 136, 165], "learn": [1, 3, 7, 9, 22, 59, 93, 94, 95, 96, 106, 125, 130, 131, 134, 135, 136, 165], "rl": [1, 3, 8, 11, 12, 13, 14, 50, 87, 106, 110, 123, 133, 151, 183], "librari": [1, 7, 9, 84, 183, 187], "pytorch": [1, 3, 76, 159], "It": [1, 7, 22, 30, 48, 49, 50, 51, 52, 78, 93, 95, 100, 111, 113, 114, 127, 130, 132, 133, 134, 135, 140, 155, 172, 183], "provid": [1, 3, 4, 9, 13, 20, 22, 26, 27, 28, 29, 30, 35, 46, 48, 49, 50, 51, 52, 60, 67, 71, 75, 78, 80, 81, 87, 92, 102, 103, 104, 110, 125, 140, 151, 156, 162, 170, 172, 175, 177, 183], "first": [1, 7, 10, 11, 12, 13, 14, 20, 28, 29, 49, 60, 65, 71, 76, 78, 103, 105, 108, 111, 119, 158], "low": 1, "high": [1, 3, 9, 141, 144, 145, 148], "level": [1, 3, 132], "abstract": [1, 17, 18, 19, 23, 24, 32, 33, 45, 48, 69, 104], "ar": [1, 3, 7, 8, 9, 11, 12, 13, 14, 20, 22, 25, 28, 29, 40, 41, 42, 43, 48, 49, 50, 51, 52, 62, 63, 64, 71, 75, 77, 78, 80, 81, 86, 91, 96, 97, 102, 106, 109, 111, 114, 119, 120, 121, 127, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 177, 181, 187], "intend": [1, 7, 11, 12, 13, 14], "effici": [1, 3, 106], "modular": [1, 121], "properli": 1, "test": [1, 5, 102, 155, 177], "The": [1, 3, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 43, 48, 49, 51, 52, 62, 71, 74, 75, 78, 80, 87, 88, 91, 93, 94, 95, 96, 102, 104, 106, 110, 111, 113, 114, 119, 121, 123, 127, 128, 129, 132, 135, 140, 151, 177, 179, 180], "aim": [1, 4, 7, 71, 80, 103, 161, 183], "support": [1, 3, 20, 28, 29, 43, 77, 84, 99, 111, 119, 121, 125, 130], "research": [1, 7, 9], "most": [1, 4, 7, 22], "written": [1, 30, 40, 48, 49, 51, 52, 111, 119, 127, 132, 133, 140], "highli": [1, 3], "wai": [1, 20, 28, 29, 133], "can": [1, 3, 6, 7, 8, 10, 11, 12, 13, 14, 18, 19, 20, 22, 28, 29, 30, 32, 34, 48, 49, 51, 52, 59, 62, 67, 71, 75, 77, 78, 80, 81, 91, 104, 106, 111, 118, 119, 120, 121, 122, 127, 128, 129, 130, 132, 133, 134, 135, 140, 155, 170, 172, 175, 179, 180, 181, 183], "easili": [1, 7, 51, 52, 170, 172, 175], "swap": 1, "compon": [1, 40, 41, 42, 43, 125, 126, 127, 130, 132, 133, 134, 135, 159], "transform": [1, 20, 22, 28, 29, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 93, 100, 111, 119, 121, 125, 126, 165, 167, 170, 172, 175, 181], "them": [1, 7, 20, 28, 29, 34, 35, 36, 48, 49, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121, 132], "write": [1, 20, 22, 28, 29, 49, 70, 111, 119, 121, 128, 129, 134, 135, 140], "new": [1, 11, 12, 13, 14, 20, 22, 26, 28, 29, 30, 37, 48, 49, 51, 52, 77, 81, 86, 119, 121, 127, 129, 130, 132, 133, 134, 135], "ones": [1, 18, 20, 22, 28, 29, 48, 49, 51, 52, 60, 62, 63, 68, 71, 75, 78, 80, 119], "littl": 1, "effort": 1, "thi": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 20, 22, 25, 28, 29, 30, 36, 40, 41, 42, 43, 48, 49, 50, 51, 52, 59, 60, 62, 64, 71, 75, 77, 78, 79, 80, 81, 86, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 151, 153, 155, 159, 160, 161, 162, 170, 172, 175, 177, 181, 183], "repo": [1, 6, 183], "attempt": 1, "align": 1, "exist": [1, 20, 22, 28, 29, 48, 49, 51, 52, 60, 78, 162, 181], "ecosystem": 1, "ha": [1, 7, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 48, 49, 50, 51, 52, 75, 78, 111, 119, 121, 132], "dataset": [1, 26, 27, 30, 35, 81, 156], "pillar": 1, "environ": [1, 4, 8, 10, 11, 12, 13, 14, 22, 25, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 67, 71, 77, 78, 81, 91, 102, 104, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 161, 162, 163, 164, 165, 167, 170, 172, 175, 177, 178, 179, 180, 181, 183], "model": [1, 9, 11, 12, 13, 14, 22, 48, 49, 50, 51, 52, 71, 80, 82, 88, 89, 90, 92, 103, 104, 111, 119, 133, 134, 135, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 183], "data": [1, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 87, 88, 89, 90, 91, 99, 102, 110, 111, 112, 119, 120, 121, 123, 125, 126, 128, 134, 135, 141, 142, 143, 151, 156, 159, 160, 163, 177, 179, 180, 181, 182], "util": [1, 11, 12, 13, 14, 15, 22, 46, 47, 48, 49, 51, 52, 71, 80, 83, 84, 85, 86, 92, 120, 177, 187], "e": [1, 3, 10, 11, 12, 13, 14, 20, 22, 25, 28, 29, 40, 41, 48, 49, 51, 52, 60, 62, 71, 75, 77, 78, 80, 86, 111, 118, 119, 122, 126, 140, 151, 161, 180], "g": [1, 3, 10, 22, 25, 28, 29, 48, 49, 51, 52, 60, 62, 71, 75, 77, 78, 80, 111, 118, 119, 122, 140, 146, 147, 149, 150, 180], "collector": [1, 11, 12, 13, 14, 15, 159, 160, 163, 164, 177, 179, 180, 182], "contain": [1, 7, 11, 12, 13, 14, 20, 22, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 43, 44, 45, 48, 49, 50, 51, 52, 62, 71, 75, 78, 80, 81, 86, 91, 92, 103, 119, 120, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 151, 156, 161, 165, 167, 170, 172, 175, 177, 178, 179, 180, 181], "etc": [1, 3, 7, 22, 24, 29, 33, 48, 49, 51, 52, 78, 103], "have": [1, 6, 7, 11, 12, 14, 18, 20, 22, 28, 29, 43, 48, 49, 51, 52, 59, 67, 77, 78, 81, 92, 102, 103, 121, 127, 132, 133, 137, 151, 159], "few": [1, 3, 8, 151], "depend": [1, 7, 123, 133], "possibl": [1, 19, 20, 22, 25, 28, 29, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119, 155, 159], "standard": [1, 68, 81, 91, 100, 105, 106, 141, 142, 143], "numpi": [1, 13, 16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 76, 159], "common": [1, 20, 28, 29, 49, 51, 52, 88, 89, 90, 111, 177, 183], "openai": [1, 7, 55, 56], "gym": [1, 10, 49, 55, 56, 75, 81, 165, 167, 170, 172, 175, 177, 183], "onli": [1, 5, 7, 11, 12, 14, 20, 22, 28, 29, 30, 48, 49, 51, 52, 60, 62, 71, 75, 78, 80, 81, 102, 111, 119, 121, 162], "option": [1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 86, 87, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 117, 118, 119, 121, 122, 123, 125, 126, 128, 129, 133, 134, 135, 140, 141, 142, 143, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181], "On": [1, 7], "end": [1, 22, 48, 49, 51, 52, 78, 92, 104, 144, 145, 146, 147, 148, 149, 150], "come": [1, 51, 52, 87, 88, 89, 90, 110, 123], "set": [1, 3, 4, 7, 9, 11, 12, 13, 14, 20, 22, 25, 28, 29, 43, 48, 49, 50, 51, 52, 60, 62, 71, 75, 78, 80, 83, 85, 119, 120, 151, 155, 164, 181, 183, 187], "re": [1, 8, 20, 22, 28, 29, 48, 49, 51, 52, 111], "usabl": 1, "function": [1, 10, 15, 20, 22, 28, 29, 40, 41, 42, 43, 48, 49, 51, 52, 71, 77, 78, 79, 80, 81, 88, 89, 90, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 113, 114, 116, 119, 120, 121, 122, 123, 127, 128, 129, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 165, 167, 170, 172, 175, 177], "cost": [1, 3, 19], "return": [1, 3, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 102, 103, 104, 109, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 146, 147, 149, 150, 156, 159, 161, 163, 165, 167, 170, 172, 175, 177, 178, 179, 180, 181], "process": [1, 3, 11, 12, 14, 51, 52, 81], "good": [1, 9], "runtim": [1, 22, 48, 49, 51, 52], "perform": [1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 32, 33, 48, 49, 51, 52, 67, 71, 77, 78, 79, 80, 91, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121, 133, 155, 159], "api": [1, 71, 80], "refer": [1, 7, 22, 48, 49, 51, 52, 78, 81, 91, 100, 107, 108, 113, 114, 125, 130, 133, 141, 144, 145, 148, 165], "packag": [1, 6, 182, 183], "helper": [1, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "replai": [1, 13, 26, 27, 30, 31, 34, 35, 36, 37, 38, 39, 43, 44, 51, 52, 128, 129, 134, 135, 156, 159, 173, 177], "buffer": [1, 13, 22, 26, 27, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 62, 71, 75, 78, 80, 110, 111, 112, 119, 120, 121, 123, 125, 126, 128, 129, 134, 135, 141, 142, 143, 156, 159, 173, 177], "compos": [1, 22, 35, 38, 39, 44, 48, 49, 51, 52, 77, 78, 81, 165, 167, 170, 172, 175], "prototyp": [1, 9], "tensordict": [1, 11, 12, 13, 14, 15, 18, 19, 20, 22, 28, 30, 31, 34, 36, 40, 41, 48, 49, 50, 51, 52, 59, 60, 62, 63, 64, 67, 68, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 99, 102, 104, 110, 111, 112, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 151, 158, 159, 165, 167, 170, 172, 175], "tensorspec": [1, 16, 17, 18, 19, 21, 23, 24, 25, 33, 48, 50, 58, 59, 60, 61, 62, 63, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 87, 110, 111, 114, 119], "env": [1, 6, 7, 22, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 104, 119, 162, 163, 164, 165, 167, 170, 172, 175, 177, 179, 180, 181, 182], "envbas": [1, 11, 12, 13, 14, 49, 51, 52, 67, 77, 78, 81, 91, 104, 155, 162, 163, 164, 165, 167, 170, 172, 175, 177, 179, 180, 181], "gymlikeenv": 1, "serialenv": 1, "parallelenv": [1, 11, 12, 13, 14, 52, 178], "domain": [1, 3, 16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 75, 111, 119, 121], "specif": [1, 5, 30, 31, 36, 49, 159], "modul": [1, 10, 22, 48, 49, 50, 51, 52, 62, 71, 75, 77, 78, 79, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 134, 136, 138, 159, 166, 168, 169, 171, 174, 177, 182], "hook": [1, 22, 48, 49, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 111, 112, 113, 114, 116, 119, 120, 121, 125, 126, 153, 154, 155, 157, 159, 160], "explor": [1, 82, 83, 85, 106, 111, 119, 120, 155, 163, 164, 177], "planner": [1, 91], "distribut": [1, 3, 4, 9, 26, 30, 91, 97, 98, 99, 100, 109, 111, 113, 114, 117, 118, 122, 125, 127, 130, 132, 133], "object": [1, 3, 4, 11, 12, 13, 14, 20, 22, 28, 29, 40, 41, 42, 43, 48, 49, 51, 52, 71, 77, 78, 81, 87, 88, 110, 111, 119, 120, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 162, 163, 164, 176, 177, 181, 182], "dqn": [1, 99, 112, 125, 129, 130, 131, 136, 167, 168], "ddpg": [1, 93, 94, 95, 96, 128, 131, 136, 165, 166], "sac": [1, 134, 135, 174, 175], "redq": [1, 134, 171, 172], "ppo": [1, 111, 127, 132, 133, 169, 170], "trainer": [1, 127, 130, 132, 133, 134, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "builder": 1, "_util": [1, 10, 182], "implement_for": 1, "knowledg": 1, "base": [1, 9, 11, 12, 13, 14, 39, 45, 50, 88, 159, 170, 172, 175], "contribut": 1, "work": [1, 7, 8, 20, 22, 48, 49, 51, 52, 60, 71, 81, 92, 103, 159, 183], "version": [1, 10, 20, 22, 28, 29, 48, 49, 51, 52, 143], "habitat": [1, 183], "lab": [1, 53, 54, 183], "up": [1, 3, 8, 9, 19, 183], "your": [1, 7, 8, 22, 48, 49, 51, 52, 81, 181, 183], "issu": [1, 5, 111, 119, 183], "about": [1, 183], "mujoco": [1, 6, 183], "instal": [1, 159, 183], "prerequisit": 1, "render": [1, 8, 155, 183], "bindindg": 1, "2": [1, 20, 21, 22, 28, 29, 48, 49, 51, 52, 60, 62, 71, 75, 78, 80, 81, 92, 93, 94, 95, 99, 101, 103, 119, 123, 125, 127, 128, 132, 134, 135, 140, 146, 147, 149, 150], "1": [1, 3, 11, 12, 13, 14, 19, 20, 21, 22, 25, 28, 29, 48, 49, 50, 51, 52, 58, 60, 62, 63, 67, 71, 75, 76, 78, 80, 81, 88, 89, 90, 91, 92, 93, 94, 96, 101, 103, 105, 106, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 132, 133, 134, 135, 136, 140, 144, 145, 146, 147, 148, 149, 150, 151, 155, 157, 165, 167, 170, 172, 175, 177, 181, 183], "old": [1, 132], "bind": 1, "py": 1, "when": [1, 3, 5, 8, 11, 12, 13, 14, 20, 22, 26, 27, 28, 29, 30, 35, 40, 41, 42, 43, 48, 49, 51, 52, 62, 67, 71, 75, 77, 78, 80, 81, 85, 91, 103, 105, 111, 118, 119, 121, 127, 132, 133, 140, 156, 181, 183], "pro": [1, 7, 183], "tip": [1, 7, 183], "train": [1, 11, 12, 13, 14, 22, 48, 49, 51, 52, 71, 78, 80, 93, 95, 127, 130, 132, 133, 134, 135, 159, 160, 177], "cluster": [1, 6, 7, 183], "us": [1, 3, 7, 10, 11, 12, 13, 14, 18, 19, 20, 22, 26, 27, 28, 29, 30, 34, 35, 36, 37, 48, 49, 50, 51, 52, 53, 60, 61, 71, 75, 76, 77, 78, 80, 81, 85, 86, 91, 92, 93, 94, 100, 103, 106, 111, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 148, 155, 156, 159, 160, 162, 163, 164, 165, 173, 177, 181, 183, 187], "resourc": [1, 183], "functorch": [1, 99, 110, 111, 112, 119, 120, 121, 123, 125, 126], "blog": 1, "websit": 1, "index": [1, 7, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 156], "search": 1, "page": [1, 7], "central": 3, "part": [3, 22, 48, 49, 51, 52, 111, 123, 151, 181], "off": [3, 111, 118, 119, 121, 122, 135, 155, 163], "polici": [3, 4, 11, 12, 13, 14, 48, 49, 50, 51, 52, 85, 86, 88, 89, 90, 106, 111, 119, 125, 126, 127, 128, 132, 133, 134, 135, 155, 160, 163, 164, 165, 167, 170, 177, 179, 180], "algorithm": [3, 9, 11, 12, 50, 133, 134, 151, 163, 170], "implement": [3, 9, 10, 22, 43, 48, 49, 51, 52, 81, 117, 118, 122, 133, 135, 170, 172, 175], "wide": 3, "we": [3, 5, 7, 9, 22, 48, 49, 51, 52, 71, 81, 91, 102, 121, 183], "also": [3, 8, 22, 30, 48, 49, 51, 52, 78, 114, 121, 128, 129], "storag": [3, 20, 22, 26, 27, 28, 29, 30, 31, 34, 35, 36, 40, 41, 42, 48, 49, 51, 52, 156], "choic": 3, "veri": 3, "influenti": 3, "sampl": [3, 9, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 48, 50, 91, 97, 109, 111, 113, 118, 119, 122, 127, 128, 129, 132, 133, 151, 156, 159, 161], "latenc": 3, "especi": [3, 7, 8, 60], "larger": 3, "volum": 3, "lazymemmapstorag": 3, "advis": 3, "share": [3, 20, 28, 29, 40, 41, 42, 43, 51, 52, 81, 88, 89, 90, 119, 123, 125, 126, 181], "due": 3, "lower": [3, 11, 12, 13, 14, 17, 23, 81, 113, 114], "serialis": 3, "memmaptensor": [3, 20, 28, 29, 46, 47], "well": [3, 11, 12, 14, 22, 43, 48, 49, 51, 52, 113, 114], "abil": 3, "specifi": [3, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 48, 49, 51, 52, 79, 91, 111, 119], "file": [3, 6, 7], "locat": [3, 7, 20, 28, 29, 49, 68, 74, 118, 122], "improv": 3, "node": [3, 165, 167, 170, 172, 175], "failur": 3, "recoveri": 3, "follow": [3, 6, 7, 22, 29, 48, 49, 50, 51, 52, 71, 92, 103, 127, 132, 159, 172, 175], "mean": [3, 7, 13, 68, 81, 91, 97, 100, 102, 111, 117, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "over": [3, 11, 12, 13, 14, 22, 48, 49, 51, 52, 121, 130, 161], "liststorag": [3, 26, 27, 30, 35, 156], "were": [3, 7, 51, 52], "found": [3, 6, 7, 20, 22, 28, 29, 30, 48, 49, 51, 52, 81, 128, 133], "from": [3, 9, 10, 11, 12, 13, 14, 15, 20, 22, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 40, 41, 42, 43, 48, 49, 50, 51, 52, 60, 71, 75, 76, 77, 78, 80, 81, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 103, 104, 105, 110, 111, 112, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 132, 133, 134, 135, 140, 151, 156, 159, 161, 162, 165, 167, 170, 172, 173, 175, 177, 178, 181, 183], "rough": 3, "benchmark": [3, 9], "http": [3, 6, 7, 26, 37, 59, 71, 93, 94, 95, 96, 100, 101, 106, 107, 108, 113, 114, 125, 130, 131, 133, 134, 135, 136, 141, 144, 145, 148, 165, 170, 172, 175], "github": [3, 6, 7], "com": [3, 6, 7], "tree": 3, "main": [3, 111, 159], "type": [3, 20, 22, 28, 29, 32, 48, 49, 50, 51, 52, 62, 71, 75, 78, 80, 81, 92, 103, 106, 111, 119, 165, 167, 170, 172, 175, 179], "speed": [3, 8, 19], "1x": 3, "lazytensorstorag": 3, "83x": 3, "3": [3, 6, 7, 18, 19, 20, 21, 22, 25, 28, 29, 46, 47, 48, 49, 51, 52, 59, 62, 65, 68, 71, 75, 76, 78, 80, 87, 88, 89, 90, 91, 92, 93, 94, 99, 101, 103, 110, 111, 119, 121, 123, 125, 146, 147, 149, 150, 158, 167], "44x": 3, "pass": [3, 4, 13, 22, 30, 48, 49, 51, 52, 71, 77, 79, 80, 81, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 107, 108, 111, 113, 114, 116, 119, 120, 121, 179, 180, 181], "across": [3, 81, 160], "becom": 3, "burdensom": 3, "task": [3, 9, 51, 52, 53, 71, 80], "design": [3, 22, 25, 48, 49, 51, 52, 78, 127, 130, 132, 133, 134, 135], "class": [3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 179, 180, 181], "instanc": [3, 7, 8, 11, 12, 13, 14, 20, 22, 28, 29, 32, 48, 49, 50, 51, 52, 54, 59, 71, 75, 77, 79, 80, 81, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121, 155, 162, 163, 164, 165, 167, 170, 172, 175, 177, 179, 180], "hard": [3, 7, 131], "actor": [3, 85, 88, 89, 90, 91, 93, 95, 99, 100, 110, 112, 125, 126, 127, 128, 132, 133, 134, 135, 165, 167, 170, 172, 175], "take": [3, 15, 48, 49, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121, 144, 145, 146, 147, 148, 149, 150, 151, 160], "arbitrari": [3, 20, 25, 28, 29, 51, 52], "number": [3, 8, 11, 12, 13, 14, 17, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 35, 37, 40, 41, 42, 48, 49, 50, 51, 52, 59, 67, 68, 74, 81, 91, 92, 97, 98, 100, 101, 103, 107, 108, 111, 113, 114, 117, 118, 119, 122, 134, 135, 151, 153, 155, 156, 159, 160, 161, 162, 179, 180, 181], "input": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 46, 48, 49, 50, 51, 52, 60, 62, 63, 71, 77, 79, 80, 86, 92, 93, 94, 95, 96, 102, 103, 105, 106, 111, 113, 114, 115, 116, 119, 120, 121, 127, 130, 132, 133, 134, 135, 140, 144, 145, 146, 147, 148, 149, 150, 161, 177], "simplifi": 3, "pack": 3, "togeth": [3, 11, 12, 13, 14, 20, 88, 89, 90], "bag": 3, "tensor": [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 62, 65, 68, 71, 74, 75, 76, 77, 78, 80, 81, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 165, 167, 170, 172, 175], "dictionari": [3, 11, 12, 13, 14, 18, 20, 22, 28, 29, 48, 49, 51, 52, 78, 111, 179, 180, 181], "like": [3, 7, 22, 48, 49, 51, 52, 76, 134], "basic": [3, 50], "oper": [3, 4, 7, 11, 12, 14, 20, 22, 29, 48, 49, 51, 52, 77, 88, 89, 90, 119, 120, 125, 127, 128, 129, 130, 132, 133, 140, 141, 142, 143, 159, 165, 167, 172, 175], "facilit": [3, 7, 30, 70, 71, 80, 88, 89, 90], "manipul": [3, 71], "entir": 3, "batch": [3, 11, 12, 13, 14, 15, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 48, 49, 50, 51, 52, 78, 97, 98, 102, 105, 109, 111, 117, 119, 127, 130, 132, 133, 134, 135, 144, 145, 146, 147, 148, 149, 150, 151, 156, 158, 159, 160, 179, 180, 181], "torch": [3, 4, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 37, 40, 41, 46, 47, 48, 49, 50, 51, 52, 60, 62, 63, 68, 71, 74, 75, 76, 78, 80, 81, 86, 87, 88, 89, 90, 91, 92, 97, 99, 100, 102, 103, 105, 106, 109, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 151, 158, 165, 167, 170, 172, 175, 177], "cat": [3, 29, 123], "stack": [3, 7, 20, 29, 30, 51, 52, 81, 86, 121, 151], "devic": [3, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 40, 41, 48, 49, 50, 51, 52, 62, 70, 71, 75, 76, 78, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 103, 105, 106, 110, 111, 112, 119, 120, 121, 123, 125, 126, 128, 160, 165, 167, 170, 172, 173, 175], "parent": [3, 32, 48, 60, 71, 77, 88, 133], "subclass": [3, 20, 28, 29, 48, 49, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 111, 112, 113, 114, 116, 119, 120, 121, 133], "defin": [3, 16, 17, 18, 19, 21, 22, 23, 24, 25, 32, 33, 48, 49, 51, 52, 71, 77, 79, 80, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121, 178], "properti": [3, 20, 28, 29, 48, 49, 50, 51, 52, 78, 97, 105, 109, 117, 118, 122], "observ": [3, 32, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 72, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 93, 94, 95, 96, 99, 102, 107, 108, 110, 112, 113, 123, 125, 126, 141, 142, 143, 165, 167, 170, 172, 175, 177], "action": [3, 9, 19, 25, 32, 48, 49, 50, 51, 52, 63, 67, 78, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 103, 104, 110, 111, 112, 114, 117, 118, 123, 125, 126, 129, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 165, 167, 170, 172, 175, 177, 181], "shape": [3, 16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 32, 33, 46, 47, 48, 49, 51, 52, 60, 76, 97, 98, 103, 105, 109, 110, 111, 117, 119, 120, 121, 137, 151, 159, 177], "dtype": [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 37, 48, 49, 50, 51, 52, 62, 63, 71, 75, 76, 78, 80, 88, 89, 90, 91, 99, 105, 106, 110, 111, 112, 119, 120, 121, 123, 125, 126, 165, 167, 170, 172, 175], "In": [4, 7, 10, 11, 12, 14, 20, 22, 28, 48, 49, 51, 52, 62, 71, 75, 77, 78, 80, 103, 111, 114, 118, 119, 121, 122, 160, 179, 180, 181], "case": [4, 7, 10, 11, 12, 13, 14, 18, 26, 30, 37, 48, 49, 51, 52, 78, 103, 111, 119, 121, 151, 160, 179, 180, 181], "raw": [4, 118, 122], "output": [4, 11, 12, 13, 14, 22, 26, 27, 30, 35, 48, 49, 50, 51, 52, 71, 77, 80, 88, 92, 93, 94, 98, 100, 102, 103, 111, 119, 120, 121, 125, 126, 127, 130, 132, 133, 134, 135, 151, 156], "must": [4, 7, 11, 12, 13, 14, 20, 22, 28, 29, 40, 41, 42, 43, 48, 49, 51, 52, 75, 78, 92, 103, 111, 119, 125, 126, 144, 145, 146, 147, 148, 149, 150, 151, 155, 159, 160, 165, 167, 170, 172, 175], "treat": 4, "befor": [4, 7, 11, 12, 13, 14, 20, 22, 28, 29, 48, 49, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 79, 80, 103, 105, 106, 111, 119, 121, 127, 130, 132, 133, 134, 135, 141, 142, 143], "being": [4, 14, 20, 22, 28, 29, 48, 49, 51, 52, 78, 85, 160, 179, 180, 181], "anoth": [4, 20, 28, 29, 46, 48, 49, 51, 52, 77, 86, 103, 111, 127, 130, 132, 133, 134, 135], "valu": [4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33, 48, 49, 50, 51, 52, 58, 60, 67, 71, 73, 75, 76, 77, 78, 80, 81, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 103, 105, 106, 109, 110, 111, 112, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 159, 165, 170, 172, 175, 177], "To": [4, 6, 7, 22, 48, 49, 51, 52, 81, 88, 89, 90, 159], "do": [4, 7, 11, 12, 13, 14, 49, 67, 86, 89, 105], "reproduc": 4, "logic": 4, "torchvis": 4, "torchrl": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "against": [5, 7, 16, 17, 18, 19, 21, 22, 23, 24, 25, 32, 33, 48, 49, 51, 52, 111, 119], "latest": 5, "guarante": [5, 22, 40, 41, 42, 43, 48, 49, 51, 52, 81], "compat": [5, 7, 10, 20, 22, 28, 29, 43, 48, 49, 51, 52, 81, 137], "wa": [5, 7, 29, 48, 49, 51, 52, 78, 131, 136], "avail": [5, 6, 111, 125, 126, 179, 180], "time": [5, 7, 11, 12, 13, 14, 22, 48, 49, 51, 52, 60, 75, 81, 86, 100, 102, 134, 159], "releas": [5, 7, 22, 48, 49, 51, 52, 78], "howev": [5, 7, 22, 48, 49, 51, 52, 78], "project": [5, 16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 111, 119], "mai": [5, 7, 11, 12, 13, 14, 22, 48, 49, 51, 52, 78, 81, 103], "willing": 5, "keep": [5, 7, 12, 20, 28, 29, 71, 80, 81, 153, 159], "backward": [5, 22, 48, 49, 51, 52, 81], "older": [5, 7], "If": [5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 48, 49, 50, 51, 52, 60, 61, 67, 71, 77, 78, 80, 81, 92, 102, 103, 111, 119, 121, 140, 149, 150, 156, 159, 160, 162, 170, 172, 175, 177, 181, 183], "you": [5, 6, 7, 8, 22, 48, 49, 51, 52, 81, 183], "run": [5, 6, 7, 8, 11, 12, 14, 22, 48, 49, 50, 51, 52, 53, 54, 67, 71, 77, 78, 79, 80, 81, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121, 155, 179, 180, 181, 183], "feel": [5, 183], "free": [5, 7, 133], "gladli": 5, "look": [5, 7, 22, 48, 49, 51, 52, 71, 111, 121], "instruct": 6, "prepar": 6, "conda": [6, 7, 183], "assum": [6, 18, 20, 25, 28, 29, 36, 49, 51, 52, 71, 75, 80, 102, 146, 147, 149, 150], "let": [6, 7, 22, 48, 49, 51, 52, 155], "": [6, 7, 22, 26, 27, 30, 35, 48, 49, 50, 51, 52, 62, 71, 75, 78, 80, 81, 92, 106, 111, 119, 121, 135, 156, 172, 175], "creat": [6, 7, 11, 12, 14, 22, 29, 35, 48, 49, 51, 52, 71, 77, 78, 81, 86, 92, 93, 94, 95, 96, 101, 103, 111, 119, 120, 121, 129, 130, 134, 162, 163, 164, 177, 179, 180], "n": [6, 7, 16, 19, 20, 22, 25, 28, 29, 48, 49, 51, 52, 59, 111, 140], "7": [6, 19, 25, 91, 92, 102, 103], "cmake": 6, "14": [6, 10], "0": [6, 7, 10, 20, 21, 22, 25, 26, 28, 29, 30, 37, 48, 49, 50, 51, 52, 58, 60, 62, 65, 67, 68, 71, 75, 76, 78, 80, 81, 86, 91, 92, 93, 94, 96, 100, 103, 105, 106, 111, 113, 114, 117, 118, 119, 120, 121, 122, 127, 132, 133, 134, 135, 136, 140, 151, 157, 159, 177, 181], "activ": [6, 7, 9, 92, 100, 103, 133], "sim": 6, "bullet": 6, "physic": [6, 7], "headless": [6, 7], "mode": [6, 13, 22, 48, 49, 51, 52, 78, 81, 83, 85, 97, 109, 111, 117, 118, 122, 155], "usual": [6, 48, 49, 51, 52, 106, 170, 172, 175, 183], "necessari": [6, 11, 12, 13, 14, 121, 134, 141, 142, 143], "withbullet": 6, "c": [6, 7, 165, 167, 170, 172, 175], "forg": [6, 7], "aihabitat": 6, "nightli": 6, "y": [6, 7, 102], "git": [6, 7], "facebookresearch": 6, "subdirectori": 6, "reduc": [6, 19], "verbos": 6, "export": 6, "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "don": [6, 7, 16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 48], "t": [6, 7, 10, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 32, 33, 37, 48, 49, 51, 52, 71, 80, 81, 119, 128, 159, 160, 181, 183], "want": [6, 7, 121], "simpli": 6, "remov": [6, 22, 48, 49, 51, 52, 86], "command": [6, 7], "see": [6, 7, 8, 9, 11, 12, 13, 14, 20, 22, 28, 29, 48, 49, 51, 52, 62, 71, 75, 78, 80, 82, 92, 103, 105, 118, 119, 122], "more": [6, 8, 11, 12, 13, 14, 22, 26, 27, 30, 31, 34, 35, 36, 48, 49, 51, 52, 82, 103, 105, 119, 125, 130, 133, 141, 144, 145, 148, 156, 165, 183], "detail": [6, 7, 22, 48, 49, 51, 52, 78, 125, 130, 133, 165, 183], "readm": [6, 7], "md": [6, 7], "get": [6, 7, 20, 28, 29, 43, 51, 52, 60, 63, 68, 76, 81, 87, 111, 120, 144, 145, 148], "list": [6, 7, 9, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 42, 43, 48, 49, 50, 51, 52, 59, 71, 78, 80, 103, 111, 119, 121, 123, 139, 141, 142, 143, 155, 156, 179, 180], "lib": [6, 7, 9, 53, 54, 55, 56, 75, 81, 165, 167, 170, 172, 175, 177], "import": [6, 7, 20, 26, 28, 29, 30, 37, 49, 50, 51, 52, 75, 81, 87, 88, 89, 90, 91, 99, 103, 110, 111, 112, 119, 120, 121, 123, 125, 126, 127, 153, 155, 165, 167, 170, 172, 175, 177], "habitatenv": 6, "_has_habitat": 6, "assert": [6, 16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 32, 33, 49, 81, 86, 151, 158], "check": [6, 7, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 48, 49, 50, 51, 52, 60, 64, 111, 119], "print": [6, 7, 18, 19, 20, 22, 25, 28, 29, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 63, 68, 75, 76, 81, 86, 87, 88, 89, 90, 92, 99, 103, 111, 112, 119, 120, 121, 123, 125, 126, 165, 167, 170, 172, 175, 177], "_env": 6, "available_env": [6, 53, 54, 55, 56], "startswith": 6, "importerror": [6, 7], "usr": [6, 7], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "so": [6, 7, 22, 48, 49, 51, 52, 81, 121], "undefin": [6, 7, 22, 48, 49, 51, 52, 78], "symbol": [6, 7], "_glapi_tls_curr": [6, 7], "solut": [6, 7, 9, 183], "debug": 6, "link": [6, 7], "right": [6, 7, 29, 46, 47, 102], "replac": [6, 7, 22], "path": [6, 7, 22, 40, 48, 49, 51, 52, 71, 80, 159], "mujoco_env": [6, 7], "proper": [6, 7], "name": [6, 7, 10, 20, 22, 28, 29, 48, 49, 51, 52, 53, 78, 127, 130, 132, 133, 134, 135, 154, 165, 167, 170, 172, 175], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "forc": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "config": [6, 7, 162, 163, 164, 165, 167, 170, 172, 173, 175, 178], "var": [6, 7, 22, 48, 49, 51, 52, 78], "ld_preload": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "its": [7, 11, 12, 13, 14, 22, 30, 48, 49, 50, 51, 52, 59, 77, 78, 81, 92, 99, 111, 119, 121, 127, 130, 132, 133, 134, 135, 159, 177], "offici": 7, "repositori": 7, "stand": [7, 88, 89, 90], "multi": [7, 9, 22, 23, 24, 48, 49, 51, 52, 102, 103], "joint": 7, "dynam": [7, 20, 28, 29], "contact": 7, "purpos": [7, 177], "engin": 7, "develop": 7, "robot": [7, 71, 80], "biomechan": 7, "graphic": 7, "anim": 7, "machin": [7, 22], "other": [7, 22, 40, 41, 42, 43, 48, 49, 50, 51, 52, 81, 106, 111, 127, 130, 132, 133, 134, 135, 170, 172, 175, 179, 180], "area": 7, "which": [7, 10, 11, 12, 13, 14, 18, 19, 20, 22, 25, 28, 29, 36, 48, 49, 51, 52, 59, 60, 67, 71, 77, 78, 88, 89, 90, 111, 118, 119, 121, 122, 127, 130, 132, 133, 134, 135, 137, 151, 165, 167, 170, 172, 175], "demand": 7, "fast": [7, 9, 134], "accur": 7, "simul": [7, 57, 91], "articul": 7, "structur": 7, "interact": [7, 13, 85, 111], "recent": 7, "acquir": 7, "deepmind": [7, 9, 53, 54], "sinc": [7, 22, 48, 49, 50, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121], "access": [7, 22, 48, 49, 51, 52, 71, 181, 183], "whomev": 7, "without": [7, 9, 22, 48, 49, 51, 52, 86, 89, 134, 140, 177, 183], "licenc": 7, "incorpor": 7, "make": [7, 22, 43, 48, 49, 51, 52, 56, 71, 86, 105, 111, 133, 164, 181], "relianc": 7, "obsolet": 7, "seri": [7, 25, 44, 45, 52, 67, 77], "legaci": 7, "document": [7, 22, 48, 49, 51, 52, 78], "offer": 7, "some": [7, 8, 9, 16, 17, 18, 19, 21, 22, 23, 24, 25, 32, 33, 48, 49, 51, 52, 71, 93, 111, 116, 121, 151, 161], "great": [7, 8], "capabl": 7, "one": [7, 10, 11, 12, 13, 14, 21, 25, 26, 27, 30, 31, 34, 35, 36, 43, 44, 45, 48, 49, 51, 52, 67, 71, 77, 78, 79, 80, 81, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 116, 119, 120, 121, 125, 126, 127, 128, 129, 132, 133, 134, 153, 155, 156, 159, 162, 170, 172, 175, 181, 183], "backend": 7, "glfw": 7, "osmesa": 7, "egl": 7, "Of": [7, 183], "hand": 7, "gpu": [7, 8, 22, 48, 49, 51, 52], "therefor": [7, 133], "our": 7, "advic": 7, "sudo": [7, 183], "enabl": [7, 155], "apt": 7, "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "via": [7, 29, 51, 77, 80, 128], "awar": [7, 40, 41, 42, 43], "fact": 7, "indent": 7, "workflow": [7, 88, 89, 90], "thing": 7, "expect": [7, 22, 32, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 79, 80, 111, 119, 121, 127, 132, 133, 162, 183], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "both": [7, 20, 22, 28, 29, 48, 49, 51, 52, 78, 88, 89, 90, 92, 103, 155], "tell": 7, "done": [7, 18, 22, 28, 29, 48, 49, 50, 51, 52, 68, 75, 81, 86, 91, 128, 129, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 165, 167, 170, 172, 175], "appropri": [7, 11, 12, 13, 14, 44, 45, 178, 181], "variabl": [7, 19, 25, 88, 89, 90, 134], "mujoco_gl": 7, "pyopengl_platform": 7, "deactiv": 7, "pre": [7, 22, 41, 48, 49, 51, 52, 71, 80], "built": [7, 173, 177, 178, 181], "binari": [7, 16, 25, 58, 125, 126], "need": [7, 22, 43, 48, 49, 51, 52, 71, 77, 78, 79, 80, 81, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 107, 108, 111, 113, 114, 116, 119, 120, 121, 134, 140, 159, 181], "These": 7, "9": [7, 22, 81], "For": [7, 9, 11, 12, 13, 14, 22, 48, 49, 51, 52, 105, 125, 130, 133, 155, 165], "instead": [7, 19, 22, 48, 49, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121, 181], "becaus": [7, 77, 96, 102, 111, 119], "requir": [7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33, 48, 49, 51, 52, 62, 71, 75, 78, 80, 103, 119, 121, 127, 130, 132, 133, 134, 135], "setup": 7, "should": [7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 43, 48, 49, 50, 51, 52, 71, 77, 78, 79, 80, 81, 86, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121, 131, 132, 133, 134, 136, 140, 155, 156, 159, 177, 179, 180, 181], "mkdir": 7, "cd": 7, "here": [7, 9], "tag": [7, 181], "earlier": [7, 11, 12, 13, 14], "roboti": 7, "u": 7, "html": 7, "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "now": 7, "charg": 7, "obtain": [7, 49, 91], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": 7, "bin": 7, "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "kei": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33, 36, 48, 49, 51, 52, 59, 60, 71, 75, 77, 78, 80, 81, 86, 91, 104, 111, 119, 120, 121, 123, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 155, 158, 159, 162, 170, 172, 175], "too": [7, 20, 28, 29, 118, 122, 127, 130, 132, 133, 134, 135], "mujoco_py_mjkey_path": 7, "reload": 7, "recommend": 7, "chang": [7, 20, 22, 28, 29, 40, 41, 42, 43, 48, 49, 51, 52, 78, 81], "later": [7, 96, 111], "known": [7, 8], "try": 7, "nativ": [7, 9, 48, 49, 51, 52, 59, 111, 119, 121], "usag": [7, 135], "local": [7, 13, 22, 34, 48, 49, 51, 52, 78], "cuda": [7, 20, 22, 28, 29, 48, 49, 51, 52, 62, 70, 71, 75, 78, 80, 119, 152], "modifi": [7, 20, 22, 28, 29, 48, 49, 51, 52, 62, 71, 75, 77, 78, 80, 119, 161, 170, 172, 175], "nvidia": 7, "driver": 7, "those": [7, 20, 28, 29, 51, 52, 111, 121, 160, 179, 180], "hack": 7, "where": [7, 11, 12, 13, 14, 20, 26, 27, 28, 29, 30, 31, 34, 35, 36, 40, 41, 48, 49, 50, 51, 52, 71, 77, 80, 111, 119, 127, 128, 130, 131, 132, 133, 134, 135, 136, 140, 156, 159, 160], "line": [7, 22, 48, 49, 51, 52], "adatp": 7, "execut": [7, 13, 48, 49, 50, 51, 52, 121, 162, 181], "build": [7, 15, 22, 48, 49, 51, 52, 81, 91, 111, 159, 166, 168, 169, 171, 173, 174, 176], "script": [7, 165, 167, 170, 172, 175, 177, 181], "go": 7, "unnot": 7, "until": 7, "actual": [7, 11, 12, 14, 48, 49, 51, 52, 161], "complet": [7, 9, 49, 183], "mujoco_pi": 7, "trigger": 7, "pipelin": 7, "abov": [7, 22, 48, 49, 51, 52, 118, 122], "caus": 7, "problem": [7, 13], "give": [7, 50, 183], "troubleshoot": 7, "each": [7, 11, 12, 13, 14, 15, 20, 21, 22, 26, 28, 29, 30, 48, 49, 51, 52, 75, 81, 121, 125, 126, 146, 147, 149, 150, 155, 179, 180], "gl": 7, "h": [7, 61, 72, 76], "eglshim": 7, "4": [7, 19, 20, 25, 28, 29, 46, 47, 50, 53, 54, 55, 59, 81, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 110, 111, 112, 119, 120, 121, 123, 125, 126], "10": [7, 18, 20, 28, 29, 50, 76, 91, 120, 134, 135, 151], "fatal": 7, "error": [7, 10, 20, 22, 28, 29, 48, 49, 51, 52], "No": 7, "directori": [7, 20, 28, 29, 40], "includ": [7, 9, 22, 29, 40, 41, 42, 43, 48, 49, 50, 51, 52, 78, 81, 161], "sure": [7, 43, 86, 181], "glu": 7, "38": 7, "disappear": 7, "onc": [7, 11, 12, 13, 14, 22, 48, 49, 51, 52, 78, 120], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "_solution_": 7, "saniti": 7, "been": [7, 11, 12, 14, 29, 48, 49, 51, 52, 77, 111, 119, 121], "cymj": 7, "linuxgpuextensionbuild": 7, "result": [7, 11, 12, 13, 14, 20, 22, 28, 29, 48, 49, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 103, 126, 144, 145, 146, 147, 148, 149, 150, 160], "filenam": 7, "runtimeerror": [7, 22, 48, 49, 51, 52, 78], "job": 7, "schedul": [7, 155], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": 7, "__init__": [7, 50, 91, 123, 125], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "fail": 7, "initi": [7, 11, 12, 13, 14, 20, 22, 28, 29, 48, 49, 51, 52, 71, 75, 77, 78, 82, 91, 105, 106, 111, 119, 121, 132, 134, 135, 165, 167, 170, 172, 175, 181], "opengl": 7, "global": [7, 22, 48, 49, 51, 52, 111], "while": [7, 20, 22, 28, 29, 48, 49, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121, 132, 133], "cuda_visible_devic": 7, "id": [7, 15, 134, 172], "around": [7, 14, 30, 31, 36, 50, 111, 119, 141], "slurm_step_gpu": 7, "enviro": 7, "imag": [7, 53, 61, 71, 76, 80, 103], "black": 7, "call": [7, 10, 11, 12, 13, 14, 20, 22, 26, 27, 28, 29, 30, 34, 35, 40, 41, 42, 43, 48, 49, 51, 52, 59, 62, 63, 70, 71, 75, 77, 78, 79, 80, 81, 85, 91, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 107, 108, 111, 113, 114, 116, 119, 120, 121, 140, 155, 156], "read": [7, 11, 12, 13, 14, 29, 40, 41, 42, 43, 49, 51, 52, 77, 88, 89, 90, 109, 111, 119, 121, 127, 130, 132, 133, 134, 135, 159, 170, 172, 175], "pixel": [7, 18, 66, 72, 93, 107, 108, 167, 170, 172, 175], "miss": [7, 10, 18, 22, 48, 49, 51, 52, 78, 121, 183], "onscreen": 7, "101": 7, "displai": [7, 159], "correctli": [7, 22, 48, 49, 51, 52], "cpu": [8, 18, 20, 22, 28, 29, 32, 40, 41, 48, 49, 50, 51, 52, 62, 71, 75, 78, 80, 88, 89, 90, 91, 99, 106, 110, 111, 112, 119, 121, 123, 125, 126, 165, 167, 170, 172, 175], "intens": 8, "even": [8, 12, 40, 41, 42, 43], "parallel": [8, 11, 12, 14, 178, 179, 180, 181], "ask": 8, "core": [8, 165, 167, 170, 172, 175], "than": [8, 11, 12, 13, 14, 96, 103, 119, 160, 183], "twice": [8, 135], "much": [8, 26, 30, 37, 132, 133], "true": [8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33, 48, 49, 50, 51, 52, 53, 54, 60, 62, 67, 68, 71, 75, 76, 78, 80, 81, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 101, 103, 105, 106, 111, 118, 119, 121, 122, 127, 132, 133, 134, 135, 137, 141, 142, 143, 146, 147, 149, 150, 153, 154, 155, 159, 167, 181], "thei": [8, 9, 16, 17, 18, 19, 21, 22, 23, 24, 25, 29, 32, 33, 48, 49, 51, 52, 63, 64, 77, 78, 102, 127, 130, 132, 133, 134, 135, 159], "spin": 9, "deep": [9, 59, 93, 94, 95, 96, 98, 131, 135, 136, 165], "hug": 9, "face": 9, "syllabu": 9, "lectur": 9, "best": 9, "awesom": 9, "curat": 9, "discuss": 9, "reddit": 9, "maintain": 9, "still": [9, 28, 132], "exampl": [9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 28, 29, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 62, 63, 68, 71, 75, 76, 78, 80, 81, 85, 86, 87, 88, 89, 90, 91, 92, 99, 102, 103, 110, 111, 112, 119, 120, 121, 123, 125, 126, 151, 152, 153, 154, 157, 158, 160, 165, 167, 170, 172, 175, 177], "reagent": 9, "product": [9, 179, 180], "orient": 9, "stabl": 9, "baselines3": 9, "tf": 9, "agent": [9, 34, 106], "bandit": 9, "tensorflow": 9, "kera": 9, "acm": 9, "framework": [9, 50], "dopamin": 9, "salina": 9, "A": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 52, 71, 75, 77, 78, 81, 82, 86, 91, 92, 103, 106, 111, 119, 121, 125, 127, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 153, 156, 159, 160, 167, 170, 172, 175, 177], "flexibl": 9, "simpl": [9, 22, 25, 48, 49, 51, 52, 93, 111], "sequenti": [9, 22, 48, 49, 51, 52, 121], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": 9, "grade": 9, "factori": 9, "throughput": 9, "asynchron": [9, 12, 22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119, 179], "cherri": 9, "jaxrl": 9, "continu": [9, 17, 23, 24, 33, 93, 94, 95, 96, 111, 121, 136, 141, 144, 145, 148, 165], "space": [9, 25, 32, 108, 111, 119, 121, 125, 126], "mbrl": [9, 50], "rlmeta": 9, "light": 9, "weight": [9, 11, 12, 13, 14, 22, 26, 30, 48, 49, 51, 52, 62, 71, 75, 78, 80, 106, 119, 127, 160, 176], "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "module_nam": 10, "str": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33, 36, 40, 48, 49, 51, 52, 53, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 83, 85, 87, 91, 92, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 110, 111, 119, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 142, 143, 154, 155, 158, 162, 165, 170, 172, 173, 175, 181], "from_vers": 10, "none": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 86, 87, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 109, 110, 111, 119, 121, 123, 125, 126, 133, 140, 141, 142, 143, 146, 147, 149, 150, 155, 156, 159, 162, 163, 164, 165, 167, 170, 172, 175, 177, 179, 180, 181], "to_vers": 10, "decor": 10, "fit": 10, "lead": [10, 118, 122], "explicit": [10, 102], "intersect": 10, "rang": [10, 19, 20, 81, 86, 132], "paramet": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 170, 172, 175, 177, 178, 179, 180, 181], "longer": 10, "13": [10, 151], "def": [10, 22, 48, 49, 50, 51, 52, 91, 120, 123, 125], "fun": 10, "self": [10, 20, 22, 28, 29, 30, 48, 49, 50, 51, 52, 62, 71, 75, 78, 80, 91, 119, 120, 123, 125], "x": [10, 15, 22, 76, 92, 98, 101, 102, 103, 125, 144, 145, 146, 147, 148, 149, 150, 159], "indic": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 44, 45, 48, 49, 50, 51, 52, 60, 75, 92, 103, 156, 162, 181, 183], "doesn": 10, "create_env_fn": [11, 12, 13, 14, 51, 52], "sequenc": [11, 12, 13, 14, 18, 20, 21, 26, 27, 28, 29, 31, 35, 44, 45, 47, 58, 59, 60, 61, 63, 65, 66, 68, 69, 72, 73, 74, 76, 77, 81, 87, 92, 97, 103, 109, 110, 111, 116, 121, 123, 156, 158, 159, 170, 172, 175], "callabl": [11, 12, 13, 14, 20, 22, 26, 27, 28, 29, 30, 31, 35, 48, 49, 50, 51, 52, 133, 156, 163, 164, 179, 180, 181], "union": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 46, 47, 48, 49, 51, 52, 62, 68, 71, 74, 78, 80, 81, 92, 93, 94, 95, 96, 97, 101, 102, 103, 105, 106, 109, 110, 111, 117, 118, 119, 121, 122, 129, 130, 131, 134, 135, 136, 141, 142, 143, 163, 164, 165, 170, 172, 173, 175, 177, 178, 179, 180, 181], "probabilistictensordictmodul": [11, 12, 13, 14, 121, 127, 132, 133, 163, 164], "tensordictbas": [11, 12, 13, 14, 15, 18, 20, 22, 28, 29, 30, 34, 36, 46, 48, 49, 51, 52, 59, 62, 67, 75, 77, 79, 81, 82, 86, 91, 104, 111, 119, 121, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 159], "total_fram": [11, 12, 13, 14, 159, 161, 177], "int": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 65, 67, 71, 72, 78, 79, 80, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 125, 126, 127, 128, 132, 133, 134, 135, 151, 152, 153, 155, 156, 159, 160, 165, 170, 172, 173, 175, 179, 180, 181], "create_env_kwarg": [11, 12, 13, 14, 51, 52], "dict": [11, 12, 13, 14, 18, 19, 20, 22, 28, 29, 35, 48, 49, 51, 52, 78, 81, 92, 93, 94, 95, 96, 101, 102, 103, 111, 155, 163, 164, 165, 172, 175, 179, 180, 181], "max_frames_per_traj": [11, 12, 13, 14, 161], "frames_per_batch": [11, 12, 13, 14, 161], "200": [11, 12, 13, 14, 22, 48, 49, 51, 52, 93, 94, 100, 113, 114], "init_random_fram": [11, 12, 13, 14, 161], "reset_at_each_it": [11, 12, 13, 14], "bool": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 48, 49, 50, 51, 52, 53, 54, 60, 67, 68, 71, 75, 76, 78, 80, 81, 86, 91, 92, 93, 94, 103, 105, 106, 111, 118, 119, 121, 122, 127, 128, 129, 130, 132, 133, 134, 135, 137, 141, 142, 143, 146, 147, 149, 150, 153, 154, 155, 156, 157, 159, 165, 167, 170, 172, 175, 181], "fals": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 48, 49, 50, 51, 52, 53, 60, 62, 67, 68, 71, 75, 76, 78, 80, 81, 88, 89, 90, 91, 92, 93, 99, 103, 110, 111, 112, 119, 120, 121, 123, 125, 126, 128, 129, 130, 134, 135, 137, 141, 142, 143, 146, 147, 149, 150, 153, 154, 155, 156, 157, 159, 165, 167, 170, 172, 175, 181], "postproc": [11, 12, 13, 14], "split_traj": [11, 12, 13, 14], "seed": [11, 12, 13, 14, 48, 49, 50, 51, 52, 53, 78, 159], "pin_memori": [11, 13, 14, 20, 26, 27, 28, 29, 30, 31, 35, 51, 52, 70, 156], "passing_devic": [11, 12, 13, 14], "update_at_each_batch": [11, 12, 14], "init_with_lag": [11, 12, 13, 14], "exploration_mod": [11, 13, 111, 155], "random": [11, 12, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 32, 33, 38, 48, 49, 50, 51, 52, 67, 75, 85, 111, 119, 120, 134, 155, 162], "reset_when_don": [11, 13], "given": [11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 48, 49, 50, 51, 52, 62, 71, 75, 78, 80, 86, 91, 100, 111, 116, 119, 121, 125, 126, 128, 129, 140, 141, 142, 143, 152, 155, 177], "datacollector": [11, 12, 13, 14, 111], "separ": [11, 12, 14, 15, 128, 134, 135], "synchron": [11, 179, 180], "collect": [11, 12, 13, 14, 22, 26, 27, 30, 31, 34, 35, 36, 71, 80, 128, 134, 135, 151, 156, 159, 160, 161, 162, 177], "start": [11, 22, 86], "next": [11, 12, 22, 26, 27, 30, 35, 48, 49, 51, 52, 114, 134, 140, 156], "item": [11, 20, 28, 29, 30, 64, 128, 129, 151], "queri": [11, 12, 13, 14, 20, 22, 28, 29, 48, 49, 51, 52, 71, 77, 81, 121], "step": [11, 12, 13, 14, 22, 48, 49, 50, 51, 52, 67, 78, 86, 91, 100, 102, 104, 111, 133, 140, 151, 155, 159], "comput": [11, 13, 19, 22, 26, 30, 48, 49, 51, 52, 71, 77, 78, 79, 80, 88, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 118, 119, 120, 121, 122, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 162], "between": [11, 12, 13, 14, 20, 22, 28, 29, 48, 49, 51, 52, 67, 73, 76, 78, 92, 103, 111, 132, 137, 155, 159], "recept": 11, "trajectori": [11, 12, 13, 14, 15, 22, 48, 49, 51, 52, 77, 91, 133, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151], "safe": [11, 12, 16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 32, 33, 111, 119], "onlin": [11, 14, 133, 151, 181], "accept": [11, 12, 13, 14, 22, 48, 49, 50, 51, 52, 62, 71, 75, 78, 80, 119], "bound": [11, 12, 13, 14, 17, 18, 20, 22, 23, 28, 29, 48, 49, 51, 52, 81, 111, 113, 114, 119], "total": [11, 12, 13, 14, 20, 28, 29, 49, 127, 132, 133, 151, 153, 155, 159, 161, 162], "frame": [11, 12, 13, 14, 22, 49, 59, 153, 155, 159, 161, 162], "greater": [11, 12, 14], "close": [11, 12, 13, 14, 49, 127, 132, 133], "signal": [11, 12, 14], "sent": [11, 12, 14, 40, 41, 51, 52, 81], "worker": [11, 12, 13, 14, 51, 52, 81, 179, 180, 181], "server": [11, 12, 14], "argument": [11, 12, 13, 14, 20, 22, 28, 29, 48, 49, 51, 52, 62, 71, 75, 77, 78, 80, 92, 103, 105, 111, 119, 123, 153, 161, 165, 167, 170, 172, 175, 177, 178, 181], "maximum": [11, 12, 13, 14, 17, 22, 23, 26, 27, 30, 40, 41, 42, 48, 49, 51, 52, 73, 110, 117, 118, 122, 135, 156], "per": [11, 12, 13, 14, 51, 100, 159, 179, 180], "note": [11, 12, 13, 14, 22, 48, 49, 51, 52, 81, 111], "span": [11, 12, 13, 14], "multipl": [11, 12, 13, 14, 19, 29, 51, 52, 60, 77, 81, 102, 105, 106, 119, 134, 172, 181], "unless": [11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 29, 32, 33, 48, 49, 51, 52], "reach": [11, 12, 13, 14, 48, 49, 50, 51, 52], "n_steps_max": [11, 12, 13, 14, 22], "reset": [11, 12, 13, 14, 48, 49, 50, 51, 52, 59, 62, 67, 71, 75, 77, 80, 81, 82, 86, 124, 165, 167, 170, 172, 175], "wrap": [11, 12, 13, 14, 22, 48, 49, 51, 52, 88, 89, 90, 120], "track": [11, 12, 13, 14, 81, 153], "independ": [11, 12, 13, 14, 29, 77, 135], "neg": [11, 12, 13, 14, 26, 30, 37], "allow": [11, 12, 13, 14, 20, 22, 25, 28, 29, 48, 49, 51, 52, 86, 103, 137], "ignor": [11, 12, 13, 14, 22, 48, 49, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121], "default": [11, 12, 13, 14, 19, 20, 22, 25, 28, 29, 30, 35, 40, 41, 48, 49, 51, 52, 53, 59, 60, 65, 67, 68, 71, 75, 76, 78, 80, 81, 86, 87, 91, 92, 93, 94, 95, 96, 97, 100, 101, 103, 105, 106, 107, 108, 110, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 149, 150, 151, 153, 154, 155, 157, 159, 165, 170, 172, 175, 177, 181], "length": [11, 12, 13, 14, 16, 20, 28, 29, 51, 52, 91, 92, 93, 95, 98, 103, 119, 151], "equival": [11, 12, 13, 14, 22, 29, 48, 49, 51, 52, 78], "configur": [11, 12, 13, 14, 133, 170, 172, 175], "featur": [11, 12, 13, 14, 25, 29, 48, 49, 51, 52, 59, 92, 100, 101, 103, 105, 106, 111, 181], "mainli": [11, 12, 13, 14], "offlin": [11, 12, 13, 14], "whether": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 48, 49, 50, 51, 52, 78, 92, 103, 123, 128, 129, 130, 134, 135, 143, 156], "postprocessor": [11, 12, 14], "format": [11, 12, 13, 14, 22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "boolean": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 48, 49, 50, 144, 145, 146, 147, 148, 149, 150], "split": [11, 12, 13, 14, 20, 28, 29, 127, 130, 132, 133, 134, 135], "accord": [11, 12, 13, 14, 20, 26, 28, 29, 30, 68, 74, 105, 113, 118, 122], "split_trajectori": [11, 12, 13, 14], "inform": [11, 12, 13, 14, 22, 48, 49, 51, 52, 92, 103], "place": [11, 12, 13, 14, 18, 20, 22, 28, 29, 48, 49, 51, 52, 62, 71, 75, 78, 80, 81, 119, 160, 161], "differ": [11, 12, 13, 14, 20, 22, 28, 29, 48, 49, 51, 52, 78, 103, 125, 126, 133, 137, 142, 155, 159, 160, 179, 180], "update_policy_weights_": [11, 12, 13, 14], "method": [11, 12, 13, 14, 20, 22, 28, 29, 30, 34, 40, 41, 42, 43, 48, 49, 51, 52, 59, 62, 71, 72, 75, 78, 80, 88, 89, 90, 91, 102, 111, 119, 120, 121, 178, 187], "dure": [11, 12, 13, 14, 48, 49, 51, 52, 78, 155, 159], "loop": [11, 12, 13, 14, 49, 86, 159], "accommod": [11, 12, 13, 14], "lag": [11, 12, 13, 14], "variou": [11, 12, 13, 14, 127, 130, 132, 133, 134, 135, 179, 180], "kept": [11, 12, 13, 14, 51, 52, 77, 86, 118, 122], "origin": [11, 12, 13, 14, 20, 28, 29, 71, 78, 80, 111, 119, 121, 131, 133, 172, 175], "store": [11, 12, 13, 14, 18, 20, 22, 28, 29, 30, 36, 40, 41, 42, 48, 49, 51, 52, 81, 91, 102, 165, 167, 170, 172, 175], "long": [11, 12, 13, 14, 19, 25, 28, 29], "updat": [11, 12, 13, 14, 20, 22, 26, 28, 29, 30, 37, 48, 49, 50, 51, 52, 78, 81, 91, 111, 119, 131, 133, 136, 141, 142, 143, 155, 159, 160, 163, 164, 176, 177], "everi": [11, 12, 14, 22, 25, 29, 43, 48, 49, 51, 52, 71, 77, 79, 80, 81, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121, 159], "truncat": [11, 12, 13, 14, 122], "help": [11, 12, 13, 14, 22, 48, 49, 51, 52, 183], "desynchron": [11, 12, 13, 14], "match": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 46, 47, 48, 49, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 92, 97, 103, 111, 117, 119, 132, 134, 135, 160], "rollout": [11, 12, 13, 14, 48, 49, 50, 51, 52, 85, 91, 162], "load_state_dict": [11, 12, 13, 14, 22, 48, 49, 51, 52, 78, 81], "state_dict": [11, 12, 13, 14, 22, 48, 49, 51, 52, 78, 81], "ordereddict": [11, 12, 13, 14, 22, 48, 49, 51, 52, 78, 81], "load": [11, 12, 13, 14, 26, 27, 30, 35, 54, 156], "form": [11, 12, 14, 22, 26, 27, 30, 35, 48, 49, 51, 52, 81, 127, 132, 133, 156, 159], "worker0": [11, 12, 14], "state_dict0": [11, 12, 14], "worker1": [11, 12, 14], "state_dict1": [11, 12, 14], "reset_idx": [11, 12, 14], "state": [11, 12, 13, 14, 22, 48, 49, 50, 51, 52, 59, 60, 62, 71, 75, 77, 78, 80, 81, 82, 88, 91, 100, 102, 103, 107, 111, 113, 114, 119, 121, 134, 140, 141, 142, 143, 181], "set_se": [11, 12, 13, 14, 48, 49, 50, 51, 52, 78], "static_se": [11, 12, 13, 14, 48, 49, 51, 52, 78], "integ": [11, 12, 13, 14, 20, 21, 22, 25, 26, 27, 28, 29, 30, 43, 48, 49, 51, 52, 92, 103, 156], "repres": [11, 12, 13, 14, 20, 28, 29, 30, 48, 49, 51, 52, 125, 126, 137], "increment": [11, 12, 13, 14, 48, 49, 51, 52, 132], "last": [11, 12, 13, 14, 22, 48, 50, 65, 92, 102, 103, 107, 115], "env_fn": [11, 12, 13, 14, 179, 180], "lambda": [11, 12, 13, 14, 143, 146, 147, 149, 150, 177], "gymenv": [11, 12, 13, 14, 62, 75, 78, 81, 165, 167, 170, 172, 175, 177], "pendulum": [11, 12, 13, 14, 55, 56, 62, 75, 78, 81, 177], "v0": [11, 12, 14, 49, 55, 56, 62, 78, 81, 177], "env_fn_parallel": [11, 12, 13, 14], "6": [11, 12, 13, 14, 28, 92, 97, 102, 103, 117, 123, 165, 167, 170, 172, 175], "syncdatacollector": [11, 12, 14, 177, 180], "out_se": [11, 12, 13, 14], "shutdown": [11, 12, 13, 14], "shut": [11, 12, 13, 14], "down": [11, 12, 13, 14], "irrevers": [11, 12, 14], "field": [11, 12, 13, 14, 18, 20, 22, 28, 29, 48, 49, 50, 51, 52, 75, 78, 88, 89, 90, 91, 99, 110, 111, 112, 119, 121, 123, 125, 126, 162, 165, 167, 170, 172, 175, 183], "own": [11, 12, 14, 22, 48, 49, 51, 52], "live": [11, 12, 13, 14, 20, 22, 26, 27, 28, 30, 31, 34, 35, 36, 48, 49, 50, 51, 52, 156], "arg": [12, 18, 22, 28, 29, 34, 40, 41, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 71, 78, 79, 80, 87, 88, 92, 99, 103, 112, 120, 153, 159, 181], "kwarg": [12, 13, 14, 18, 20, 22, 28, 29, 34, 40, 41, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 71, 75, 78, 79, 80, 87, 88, 92, 93, 94, 95, 96, 99, 101, 103, 104, 109, 110, 111, 112, 117, 119, 120, 121, 122, 127, 132, 140, 153, 159, 163, 164, 165, 170, 172, 175, 178, 179, 180], "occur": [12, 20, 28, 29, 60, 111, 119], "iter": [12, 13, 20, 21, 22, 26, 27, 28, 29, 30, 31, 34, 35, 36, 48, 49, 51, 52, 81, 92, 103, 111, 116, 119, 121, 139, 155, 156, 158, 159, 170, 172, 175], "envcreat": [13, 177, 178, 181], "return_in_plac": 13, "return_same_td": 13, "constructor": [13, 29, 77, 165, 167, 170, 172, 175, 178, 181], "stop": [13, 48, 49, 51, 52], "equat": [13, 127, 136], "exce": 13, "batcher": 13, "yield": [13, 22, 48, 49, 51, 52], "same": [13, 20, 22, 28, 29, 48, 49, 51, 52, 67, 77, 78, 81, 92, 103], "cautious": [13, 133], "ad": [13, 22, 26, 27, 30, 31, 34, 35, 36, 37, 48, 49, 51, 52, 78, 105, 106, 127, 132, 133, 156], "whole": [13, 22, 48, 49, 51, 52, 78, 151], "content": [13, 29, 92, 103], "ident": [13, 51, 52, 179, 180], "through": [13, 51, 52, 103, 111, 121], "chunk": [13, 20, 28, 29], "order": [13, 20, 22, 25, 28, 29, 48, 49, 51, 52, 78, 119, 121], "policy_state_dict": 13, "env_state_dict": 13, "v1": [13, 75, 137, 146, 147, 149, 150], "singl": [14, 20, 22, 26, 27, 28, 29, 30, 31, 34, 35, 36, 48, 49, 51, 52, 59, 60, 76, 92, 102, 103, 121, 130, 134, 146, 147, 149, 150, 156, 172, 181], "mostli": 14, "paradigm": 14, "regular": [14, 20, 28, 29, 111, 119, 126, 130, 160], "prefer": 14, "mere": 14, "wrapper": [14, 30, 31, 36, 50, 53, 54, 55, 56, 111, 119, 120, 141, 181], "multiasyncdatacollector": [14, 179], "rollout_tensordict": 15, "traj_id": 15, "b": [15, 20, 28, 29, 105, 106, 111, 121], "zero": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 46, 47, 48, 49, 51, 52, 60, 68, 91, 102, 120], "pad": [15, 92, 93, 94, 102], "max": [15, 25, 117, 118, 122, 127, 134, 135], "durat": 15, "int64": [16, 19, 21, 25, 99, 112, 125, 126, 167], "discret": [16, 19, 21, 25, 109, 125, 126, 130], "spec": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 99, 110, 111, 112, 114, 119, 120, 121, 125, 126, 165, 167, 170, 172, 175], "vector": [16, 25, 93, 95, 103, 143, 149, 150], "assert_is_in": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "belong": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "box": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "rais": [16, 17, 18, 19, 21, 22, 23, 24, 25, 32, 33, 48, 49, 51, 52, 64, 78], "except": [16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 32, 33, 48, 64, 109, 120], "otherwis": [16, 17, 18, 19, 21, 22, 23, 24, 25, 32, 33, 48, 49, 51, 52, 75, 78, 81, 118, 122, 135, 155], "encod": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 99, 108, 109, 112, 113, 125, 126], "val": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "ndarrai": [16, 17, 18, 19, 21, 23, 24, 25, 26, 32, 33, 49], "correspond": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 37, 48, 49, 50, 51, 52, 75, 78, 81, 111], "np": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 49], "slice": [16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 32, 33], "tensor_to_index": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "is_in": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "map": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 40, 48, 49, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 88, 89, 90, 111, 119, 121, 125, 156], "back": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 111, 119], "heurist": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "rand": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33, 50, 91, 120], "uniform": [16, 17, 18, 19, 21, 23, 24, 25, 26, 30, 32, 33, 37], "unbound": [16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 32, 33], "size": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 60, 71, 75, 76, 78, 79, 80, 88, 89, 90, 91, 92, 97, 99, 102, 103, 109, 110, 111, 112, 113, 114, 117, 119, 121, 123, 125, 126, 140, 151, 156, 165, 167, 170, 172, 175], "to_numpi": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "transformed_in": [16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 32, 33, 77, 78, 117, 181], "type_check": [16, 17, 18, 19, 21, 23, 24, 25, 32, 33], "whose": [16, 17, 18, 19, 21, 22, 23, 24, 25, 32, 33, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "point": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 37, 44, 45, 48, 49, 51, 52, 59, 62, 71, 75, 76, 78, 80, 104, 119, 130, 142, 143, 159, 183], "fill": [16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 32, 33, 75], "minimum": [17, 23, 73, 100, 110, 117, 118, 122, 135, 151], "float": [17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 48, 49, 51, 52, 62, 63, 68, 71, 73, 74, 75, 76, 78, 80, 81, 97, 100, 105, 106, 113, 114, 117, 119, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 156, 157], "unidimension": [17, 25, 33], "upper": [17, 23], "composit": 18, "effect": [18, 22, 48, 49, 51, 52, 78, 159], "cannot": 18, "pixels_spec": 18, "ndboundedtensorspec": [18, 88, 89, 90, 110], "32": [18, 92, 93, 94, 101, 103, 107, 108], "observation_vector_spec": 18, "33": [18, 22, 48, 49, 51, 52, 92, 103], "composite_spec": 18, "observation_vector": [18, 60, 165, 170, 172, 175], "td": [18, 20, 28, 29, 53, 54, 55, 56, 60, 63, 68, 76, 78, 81, 86, 87, 88, 89, 90, 91, 99, 104, 110, 111, 112, 119, 120, 121, 123, 125, 126, 142, 143, 146, 147, 149, 150, 151, 158, 165, 167, 170, 172, 175], "batch_siz": [18, 20, 26, 27, 28, 29, 31, 34, 35, 36, 48, 50, 75, 88, 89, 90, 91, 99, 110, 111, 112, 119, 121, 123, 125, 126, 151, 156, 165, 167, 170, 172, 175], "within": [18, 22, 36, 48, 49, 51, 52, 71, 77, 79, 80, 81, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121], "randn": [18, 20, 28, 29, 68, 87, 88, 89, 90, 99, 102, 110, 111, 112, 119, 121, 123, 125, 126, 158], "td_project": 18, "modif": [18, 20, 22, 28, 29, 48, 49, 51, 52], "after": [18, 20, 22, 28, 29, 48, 49, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 86, 105], "float32": [18, 20, 26, 28, 29, 32, 37, 50, 63, 75, 76, 88, 89, 90, 91, 99, 110, 111, 112, 119, 121, 123, 125, 126, 165, 167, 170, 172, 175], "is_shar": [18, 20, 28, 29, 50, 75, 81, 88, 91, 99, 110, 111, 112, 119, 121, 165, 167, 170, 172, 175], "ani": [18, 20, 22, 26, 27, 28, 29, 30, 31, 34, 35, 36, 40, 41, 42, 43, 44, 45, 48, 49, 51, 52, 71, 78, 81, 92, 103, 106, 119, 121, 133, 156, 159, 183], "selected_kei": [18, 51, 52], "altern": [19, 20, 28, 29], "onehottensorspec": 19, "categor": [19, 25, 109, 125, 126], "memori": [19, 20, 22, 28, 29, 40, 48, 49, 51, 52, 62, 71, 75, 78, 80, 81, 119, 181], "larg": 19, "action_valu": [19, 25, 99, 112, 125, 126, 167], "arang": [19, 25, 99, 125, 151], "view": [19, 20, 22, 25, 28, 29, 48, 49, 51, 52, 103, 125], "argmax": [19, 99, 112, 125, 126], "dim": [19, 20, 28, 29, 60, 116, 181], "chosen_action_valu": [19, 25, 112, 167], "11": [19, 25, 76, 91], "outcom": [19, 25, 97, 117], "stack_dim": 20, "lazi": [20, 51, 52, 71, 105, 111, 119, 121], "behaviour": [20, 49, 60, 118, 122, 155], "put": [20, 49, 81, 181], "instanti": [20, 26, 27, 30, 51, 52, 77, 156], "seamlessli": 20, "affect": [20, 22, 48, 49, 51, 52, 77, 78], "dimens": [20, 22, 28, 29, 59, 60, 65, 76, 79, 92, 103, 105, 106, 115, 116, 117, 118, 127, 130, 132, 133, 134, 135, 181], "ndimens": 20, "along": [20, 28, 29, 59, 60, 76, 103, 106, 111, 119], "_": [20, 28, 29, 60, 63, 68, 76, 81, 99, 111, 112, 119, 121, 125, 126], "td_stack": 20, "non": [20, 22, 26, 28, 29, 30, 48, 49, 51, 52, 58, 62, 71, 75, 78, 80, 119], "null": [20, 26, 28, 29, 30, 37, 58], "upon": [20, 28, 29], "appli": [20, 22, 28, 29, 48, 49, 51, 52, 78, 118], "fn": [20, 22, 28, 29, 48, 49, 51, 52, 179, 180], "inplac": [20, 22, 28, 29, 48, 49, 51, 52], "desir": [20, 22, 28, 29, 47, 48, 49, 51, 52, 62, 71, 75, 78, 80, 85, 92, 103, 111, 119], "made": [20, 28, 29, 40, 41, 42, 43], "apply_": [20, 28, 29], "copi": [20, 22, 28, 29, 48, 49, 51, 52, 78], "batch_dim": [20, 28, 29, 181], "describ": [20, 28, 29, 32, 60, 77, 117, 118, 170], "control": [20, 28, 29, 51, 52, 53, 54, 93, 94, 95, 96, 104, 114, 127, 132, 133, 136, 141, 144, 145, 148, 165], "user": [20, 22, 28, 29, 48, 49, 51, 52, 78, 102, 178], "infer": [20, 28, 29, 51, 52, 81, 105, 135], "tupl": [20, 22, 26, 28, 29, 35, 48, 49, 51, 52, 93, 102, 103, 111, 119, 121, 128, 166, 168, 171, 174], "tendordict": [20, 28, 29], "clone": [20, 28, 29, 88, 89, 90, 111, 119, 120, 121, 170, 172, 175], "recurs": [20, 22, 28, 29, 48, 49, 51, 52], "onto": [20, 25, 28, 29, 86, 111, 119], "contigu": [20, 28, 29, 111, 119, 121], "alreadi": [20, 22, 28, 29, 48, 49, 51, 52, 111], "copy_": [20, 28, 29], "update_": [20, 28, 29], "copy_at_": [20, 28, 29], "idx": [20, 22, 28, 29, 48, 49, 51, 52], "update_at_": [20, 28, 29], "cast": [20, 22, 28, 29, 48, 49, 51, 52, 62, 71, 75, 78, 80, 81, 119, 165, 167, 170, 172, 175], "del_": [20, 28, 29], "delet": [20, 28, 29, 60], "detach": [20, 22, 28, 29, 48, 49, 51, 52, 78], "gradient": [20, 22, 28, 29, 48, 49, 51, 52, 78, 106, 118, 122, 140, 141, 142, 143, 159], "detach_": [20, 28, 29], "doe": [20, 26, 28, 29, 30, 37, 43, 105, 121, 127, 132, 133, 140, 159], "empti": [20, 28, 29, 71, 78, 80], "expand": [20, 28, 29, 46, 47, 111, 119, 121], "practic": [20, 28, 118, 122, 183], "amend": [20, 28], "5": [20, 28, 29, 46, 47, 91, 92, 99, 100, 103, 112, 118, 120, 122, 125, 126, 132], "td_expand": [20, 28], "fill_": [20, 22, 28, 29, 48, 49, 51, 52], "reman": [20, 28, 29], "_no_default_": [20, 28, 29], "get_at": [20, 28, 29], "retriev": [20, 28, 29, 34, 35, 36, 48, 49, 51, 52, 60, 86, 91, 111, 127, 132, 133, 141, 142, 143, 165, 167, 170, 172, 175, 181], "present": [20, 22, 26, 28, 29, 37, 48, 49, 51, 52, 93, 94, 95, 96, 101, 106, 119, 121, 127, 130, 132, 133, 134, 135, 181], "get_sub_tensordict": [20, 28, 29], "subtensordict": [20, 29], "is_contigu": [20, 28, 29], "is_memmap": [20, 28, 29], "no_check": [20, 28, 29], "cach": [20, 28, 29, 71, 78, 80, 152], "alwai": [20, 22, 28, 29, 48, 49, 51, 52, 67], "pair": [20, 22, 28, 29, 30, 48, 49, 51, 52, 88, 111], "items_meta": [20, 28, 29], "make_unset": [20, 28, 29], "metatensor": [20, 28, 29], "masked_fil": [20, 28, 29], "mask": [20, 28, 29], "out": [20, 22, 28, 29, 48, 49, 51, 52, 105, 106, 111, 119, 138, 139], "td1": [20, 28, 29], "masked_fill_": [20, 28, 29], "masked_select": [20, 28, 29], "similar": [20, 22, 28, 29, 48, 49, 51, 52, 62, 71, 75, 78, 80, 81, 86, 111, 119], "td_mask": [20, 28, 29], "memmap_": [20, 28, 29, 81], "prefix": [20, 22, 28, 29, 48, 49, 51, 52, 78, 81, 86], "lock": [20, 28, 29, 81], "memmap": [20, 28, 29, 40, 51, 52, 81], "prevent": [20, 28, 29, 111, 118, 119, 121, 122, 132, 133], "overwrit": [20, 28, 29], "numel": [20, 28, 29], "element": [20, 21, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 92, 119, 151, 156], "permut": [20, 28, 29], "dims_list": [20, 28, 29], "permutedtensordict": [20, 28, 29], "op": [20, 28, 29, 67, 160], "rename_kei": [20, 28, 29], "old_kei": [20, 28, 29], "new_kei": [20, 28, 29], "renam": [20, 28, 29, 86], "string": [20, 22, 28, 29, 48, 49, 51, 52, 111, 158, 170, 172, 175], "thrown": [20, 22, 28, 29, 48, 49, 51, 52], "reshap": [20, 28, 29, 103], "select": [20, 27, 28, 29, 30, 31, 34, 35, 36, 51, 52, 67, 91, 121, 156, 158], "either": [20, 22, 28, 29, 48, 49, 51, 52, 165], "prune": [20, 28, 29], "set_": [20, 28, 29], "set_at_": [20, 28, 29], "share_memory_": [20, 22, 28, 29, 48, 49, 51, 52], "squeez": [20, 28, 29, 92, 115, 116], "compris": [20, 28, 29], "singleton": [20, 28, 29, 92, 103, 115, 116], "dest": [20, 28, 29, 46, 62, 71, 80, 119], "permit": [20, 28, 29, 51, 52], "destin": [20, 22, 28, 29, 48, 49, 51, 52, 78, 86], "to_dict": [20, 28, 29], "to_tensordict": [20, 28, 29], "unbind": [20, 28, 29], "unsqueez": [20, 28, 29, 60, 76, 79, 102], "input_dict_or_td": [20, 28, 29], "keyword": [20, 22, 28, 29, 48, 49, 51, 52, 62, 71, 75, 78, 80, 111, 119, 178], "unlik": [20, 28, 29, 111, 119, 121, 130, 133], "throw": [20, 22, 28, 29, 48, 49, 51, 52], "unknown": [20, 28, 29], "values_meta": [20, 28, 29], "td_view": [20, 28, 29], "12": [20, 28, 29], "zero_": [20, 28, 29], "nvec": 21, "use_regist": [21, 25], "concaten": [21, 59, 60, 77, 103, 121], "hot": [21, 25, 99, 109, 112, 125, 126], "cardin": [21, 125, 126], "gamma": [22, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 177], "reward": [22, 32, 48, 49, 50, 51, 52, 58, 62, 63, 71, 73, 74, 77, 78, 79, 80, 81, 86, 91, 128, 129, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 181], "sutton": 22, "r": [22, 68, 111, 140], "1988": 22, "predict": [22, 100, 104, 130, 135, 140], "tempor": [22, 142], "44": 22, "discount": [22, 127, 128, 129, 130, 132, 133, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "factor": [22, 106, 118, 122, 127, 128, 129, 130, 132, 133, 134], "ahead": 22, "add_modul": [22, 48, 49, 51, 52], "add": [22, 26, 27, 30, 31, 34, 35, 36, 44, 45, 48, 49, 51, 52, 105, 156], "child": [22, 48, 49, 51, 52], "current": [22, 48, 49, 51, 52, 78, 83, 100, 102, 114, 125, 126, 170], "attribut": [22, 48, 49, 51, 52, 71, 111], "submodul": [22, 48, 49, 51, 52], "children": [22, 48, 49, 51, 52], "typic": [22, 48, 49, 51, 52], "nn": [22, 48, 49, 50, 51, 52, 62, 71, 75, 78, 80, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 110, 111, 112, 119, 120, 121, 123, 125, 126, 129, 130, 172, 175, 177], "init": [22, 48, 49, 51, 52], "no_grad": [22, 48, 49, 51, 52], "init_weight": [22, 48, 49, 51, 52], "m": [22, 48, 49, 51, 52, 111], "linear": [22, 48, 49, 50, 51, 52, 62, 71, 75, 78, 80, 87, 88, 89, 90, 91, 92, 103, 105, 106, 110, 112, 113, 114, 119, 120, 121, 123, 125, 126, 177], "net": [22, 48, 49, 51, 52, 102, 111, 134, 172, 177], "in_featur": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 88, 92, 93, 94, 95, 96, 102, 103, 105, 106, 119], "out_featur": [22, 48, 49, 50, 51, 52, 62, 71, 75, 78, 80, 88, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 119], "bia": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 92, 100, 103, 105, 106, 119, 120], "requires_grad": [22, 48, 49, 51, 52], "bfloat16": [22, 48, 49, 51, 52], "datatyp": [22, 48, 49, 51, 52], "direct": [22, 48, 49, 51, 52], "member": [22, 48, 49, 51, 52], "xdoctest": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "skip": [22, 48, 49, 51, 52, 78, 111, 153, 155], "buf": [22, 48, 49, 51, 52], "20l": [22, 48, 49, 51, 52], "1l": [22, 48, 49, 51, 52], "5l": [22, 48, 49, 51, 52], "immedi": [22, 48, 49, 51, 52, 140], "move": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 81, 103, 119, 157], "associ": [22, 48, 49, 51, 52, 113, 181], "construct": [22, 48, 49, 51, 52, 111, 114, 159, 170], "optim": [22, 48, 49, 51, 52, 91, 105, 106, 133, 135, 159, 170, 177], "doubl": [22, 24, 33, 48, 49, 51, 52, 62, 63, 71, 75, 76, 78, 80, 119, 129, 130, 131, 134, 136], "eval": [22, 48, 49, 51, 52, 78, 81], "evalu": [22, 48, 49, 51, 52, 78, 97, 109, 122, 134, 163, 164], "certain": [22, 48, 49, 51, 52, 78, 132], "particular": [22, 48, 49, 51, 52, 78], "behavior": [22, 48, 49, 51, 52, 78], "dropout": [22, 48, 49, 51, 52, 78], "batchnorm": [22, 48, 49, 51, 52, 78], "disabl": [22, 48, 49, 51, 52, 78, 118, 122], "comparison": [22, 48, 49, 51, 52, 78], "sever": [22, 48, 49, 51, 52, 60, 78, 133], "mechan": [22, 48, 49, 51, 52, 78], "confus": [22, 48, 49, 51, 52, 78], "extra_repr": [22, 48, 49, 51, 52], "extra": [22, 48, 49, 51, 52, 81], "represent": [22, 48, 49, 51, 52, 71, 80], "custom": [22, 48, 49, 51, 52, 181], "forward": [22, 48, 49, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 107, 108, 111, 113, 114, 116, 119, 120, 121, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 141, 142, 143], "tennsordict": 22, "next_": [22, 48, 49, 51, 52, 81, 86], "shift": 22, "nontermin": 22, "termin": 22, "original_reward": 22, "previou": [22, 114], "newli": 22, "get_buff": [22, 48, 49, 51, 52], "target": [22, 46, 47, 48, 49, 51, 52, 77, 111, 119, 128, 129, 130, 131, 132, 134, 135, 136, 140, 161, 176, 177], "docstr": [22, 48, 49, 51, 52], "get_submodul": [22, 48, 49, 51, 52], "explan": [22, 48, 49, 51, 52], "how": [22, 26, 30, 37, 48, 49, 51, 52, 127, 131, 132, 133, 159, 183], "fulli": [22, 48, 49, 51, 52], "qualifi": [22, 48, 49, 51, 52], "referenc": [22, 48, 49, 51, 52], "attributeerror": [22, 48, 49, 51, 52], "invalid": [22, 48, 49, 51, 52], "resolv": [22, 48, 49, 51, 52], "someth": [22, 48, 49, 51, 52, 183], "get_extra_st": [22, 48, 49, 51, 52, 81], "set_extra_st": [22, 48, 49, 51, 52, 81], "picklabl": [22, 48, 49, 51, 52, 81], "ensur": [22, 26, 30, 37, 48, 49, 51, 52, 71, 81], "serial": [22, 48, 49, 51, 52, 81], "break": [22, 48, 49, 51, 52, 81], "pickl": [22, 48, 49, 51, 52, 81], "get_paramet": [22, 48, 49, 51, 52], "sai": [22, 48, 49, 51, 52], "net_b": [22, 48, 49, 51, 52], "net_c": [22, 48, 49, 51, 52], "conv": [22, 48, 49, 51, 52, 92], "conv2d": [22, 48, 49, 51, 52, 92], "16": [22, 48, 49, 51, 52], "kernel_s": [22, 48, 49, 51, 52, 92, 93, 94], "stride": [22, 48, 49, 51, 52, 92, 93, 94, 101], "100": [22, 48, 49, 51, 52, 68, 85, 152, 159, 177], "diagram": [22, 48, 49, 51, 52], "show": [22, 48, 49, 51, 52], "nest": [22, 48, 49, 51, 52], "itself": [22, 48, 49, 51, 52], "two": [22, 48, 49, 51, 52, 96, 111, 115, 132, 135, 137, 155, 159, 170, 172, 175], "would": [22, 48, 49, 51, 52, 103], "degre": [22, 48, 49, 51, 52], "named_modul": [22, 48, 49, 51, 52], "achiev": [22, 48, 49, 51, 52], "o": [22, 48, 49, 51, 52], "transit": [22, 48, 49, 51, 52], "half": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "ipu": [22, 48, 49, 51, 52], "strict": [22, 48, 49, 51, 52, 78], "descend": [22, 48, 49, 51, 52, 78], "exactli": [22, 48, 49, 51, 52, 78, 120], "persist": [22, 48, 49, 51, 52, 78], "strictli": [22, 48, 49, 51, 52, 78], "enforc": [22, 48, 49, 51, 52, 78], "missing_kei": [22, 48, 49, 51, 52, 78], "unexpected_kei": [22, 48, 49, 51, 52, 78], "unexpect": [22, 48, 49, 51, 52, 78], "namedtupl": [22, 48, 49, 51, 52, 78], "regist": [22, 25, 48, 49, 51, 52, 71, 77, 78, 79, 80, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121], "network": [22, 48, 49, 51, 52, 85, 88, 89, 90, 92, 93, 94, 95, 96, 98, 100, 101, 103, 106, 107, 108, 113, 114, 115, 119, 128, 129, 130, 131, 134, 135, 136, 138, 165, 170, 176, 177], "duplic": [22, 48, 49, 51, 52, 129, 130], "l": [22, 48, 49, 51, 52, 140], "enumer": [22, 48, 49, 51, 52], "named_buff": [22, 48, 49, 51, 52], "remove_dupl": [22, 48, 49, 51, 52], "prepend": [22, 48, 49, 51, 52], "running_var": [22, 48, 49, 51, 52], "named_children": [22, 48, 49, 51, 52], "conv4": [22, 48, 49, 51, 52], "conv5": [22, 48, 49, 51, 52], "memo": [22, 48, 49, 51, 52], "named_paramet": [22, 48, 49, 51, 52], "param": [22, 48, 49, 50, 51, 52, 97, 110, 111, 112, 117, 119, 120, 121, 123, 125, 126, 136, 139, 141, 142, 143, 165], "register_backward_hook": [22, 48, 49, 51, 52], "removablehandl": [22, 48, 49, 51, 52], "deprec": [22, 48, 49, 51, 52, 78, 89], "favor": [22, 48, 49, 51, 52], "register_full_backward_hook": [22, 48, 49, 51, 52], "futur": [22, 48, 49, 51, 52, 71, 78, 80, 103, 183], "handl": [22, 48, 49, 51, 52, 81, 103, 159, 179, 180], "register_buff": [22, 48, 49, 51, 52], "consid": [22, 48, 49, 51, 52, 97, 117], "running_mean": [22, 48, 49, 51, 52], "save": [22, 29, 48, 49, 51, 52, 159], "alongsid": [22, 48, 49, 51, 52], "latter": [22, 48, 49, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121, 179, 180], "num_featur": [22, 48, 49, 51, 52], "register_forward_hook": [22, 48, 49, 51, 52, 125, 126], "signatur": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "posit": [22, 48, 49, 51, 52, 78, 79], "won": [22, 29, 48, 49, 51, 52, 71, 80, 159, 181], "fire": [22, 48, 49, 51, 52], "register_module_forward_hook": [22, 48, 49, 51, 52], "register_forward_pre_hook": [22, 48, 49, 51, 52], "invok": [22, 34, 48, 49, 51, 52], "forward_pr": [22, 48, 49, 51, 52], "register_module_forward_pre_hook": [22, 48, 49, 51, 52], "respect": [22, 48, 49, 51, 52, 58, 62, 71, 75, 78, 80, 114, 119, 123], "grad_input": [22, 48, 49, 51, 52], "grad_output": [22, 48, 49, 51, 52], "subsequ": [22, 29, 48, 49, 51, 52, 121], "entri": [22, 48, 49, 51, 52], "technic": [22, 48, 49, 51, 52], "reason": [22, 48, 49, 51, 52, 71], "receiv": [22, 48, 49, 51, 52, 77, 103], "similarli": [22, 48, 49, 51, 52, 121], "caller": [22, 48, 49, 51, 52], "register_module_full_backward_hook": [22, 48, 49, 51, 52], "register_full_backward_pre_hook": [22, 48, 49, 51, 52], "backward_pr": [22, 48, 49, 51, 52], "register_module_full_backward_pre_hook": [22, 48, 49, 51, 52], "register_load_state_dict_post_hook": [22, 48, 49, 51, 52], "post": [22, 48, 49, 51, 52], "incompatible_kei": [22, 48, 49, 51, 52], "consist": [22, 48, 49, 51, 52, 92, 103, 111], "addit": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "clear": [22, 48, 49, 51, 52, 152], "avoid": [22, 48, 49, 51, 52, 78, 81, 119, 161], "register_modul": [22, 48, 49, 51, 52], "alia": [22, 48, 49, 51, 52], "register_paramet": [22, 48, 49, 51, 52], "requires_grad_": [22, 48, 49, 51, 52], "autograd": [22, 48, 49, 51, 52, 78], "record": [22, 48, 49, 51, 52, 133, 177], "freez": [22, 48, 49, 51, 52], "finetun": [22, 48, 49, 51, 52], "individu": [22, 48, 49, 51, 52], "gan": [22, 48, 49, 51, 52], "share_memori": [22, 48, 49, 51, 52], "keep_var": [22, 48, 49, 51, 52, 78], "averag": [22, 48, 49, 51, 52, 78, 81, 157], "shallow": [22, 48, 49, 51, 52, 78], "pleas": [22, 48, 49, 51, 52, 78, 183], "non_block": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "memory_format": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "channels_last": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "Its": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "complex": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "integr": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 96, 119], "unchang": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "tri": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "convert": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 81, 119], "host": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "pin": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "4d": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "ignore_w": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "determinist": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 87, 100, 107, 111, 114, 119], "1913": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "3420": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "5113": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "2325": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "float64": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "torch_doctest_cuda1": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "gpu1": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "1914": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "5112": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "2324": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "float16": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "cdoubl": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "3741": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "j": [22, 26, 37, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "2382": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "5593": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "4443": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "complex128": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "6122": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "1150": [22, 48, 49, 51, 52, 62, 71, 75, 78, 80, 119], "to_empti": [22, 48, 49, 51, 52], "dst_type": [22, 48, 49, 51, 52], "xpu": [22, 48, 49, 51, 52], "zero_grad": [22, 48, 49, 51, 52], "set_to_non": [22, 48, 49, 51, 52], "under": [22, 48, 49, 51, 52, 111, 119], "context": [22, 48, 49, 51, 52, 105, 138, 139, 141, 144, 145, 148, 155], "grad": [22, 48, 49, 51, 52], "dimension": [23, 24, 141, 144, 145, 148], "By": [25, 28, 49, 51, 52, 111, 155, 181], "keepdim": 25, "sum": [25, 49, 140], "user_regist": 25, "experiment": [25, 111], "appear": 25, "priori": 25, "definit": [25, 43], "uniqu": 25, "discretebox": 25, "alpha": [26, 30, 37, 92, 134, 135], "beta": [26, 30, 37, 132], "ep": [26, 30, 37, 81, 120, 127, 136, 157], "1e": [26, 30, 37, 81, 97, 100, 117], "08": [26, 30, 37], "collate_fn": [26, 27, 30, 31, 35, 156], "prefetch": [26, 27, 30, 31, 35, 156], "priorit": [26, 30, 37, 128, 129, 134, 135], "schaul": [26, 37], "quan": [26, 37], "antonogl": [26, 37], "silver": [26, 37], "d": [26, 37, 111], "2015": [26, 37], "experi": [26, 37, 183], "arxiv": [26, 37, 59, 71, 93, 94, 95, 96, 100, 101, 106, 107, 108, 113, 114, 125, 130, 131, 133, 135, 136, 141, 144, 145, 148, 165, 170, 175], "org": [26, 37, 59, 71, 93, 94, 95, 96, 100, 101, 106, 107, 108, 113, 114, 125, 130, 131, 133, 135, 136, 141, 144, 145, 148, 165, 170, 175], "ab": [26, 37, 71, 81, 100, 101, 106, 107, 108, 113, 114, 131, 133, 170], "1511": [26, 37, 101], "05952": [26, 37], "expon": [26, 30, 37], "\u03b1": [26, 30, 37], "determin": [26, 30, 37, 71, 80], "delta": [26, 30, 37, 111, 117], "prioriti": [26, 30, 36, 37, 40, 41, 42, 43, 128, 129, 134, 135], "merg": [26, 27, 30, 35, 156], "mini": [26, 27, 30, 35, 156], "style": [26, 27, 30, 35, 156], "rb": [26, 27, 30, 35, 156], "multithread": [26, 27, 30, 35, 156], "extend": [26, 27, 30, 31, 34, 35, 36, 44, 45, 156], "gather": [26, 30, 140, 162, 183], "multinomi": [26, 30], "update_prior": [26, 30, 37], "circular": [27, 156], "randomli": [27, 31, 67, 75, 111, 156], "td_index": 28, "discard_idx_attr": 28, "keysview": [28, 29], "_run_check": [28, 29], "input_dict": 28, "fashion": 29, "least": 29, "arrai": 29, "th": 29, "addition": 29, "mani": [29, 127, 132, 133, 134], "limit": [29, 50, 51, 52], "transpos": 29, "expend": [29, 111], "td_unsqueez": 29, "a_view": 29, "td_cpu": 29, "td_savec": 29, "savedtensordict": 29, "disk": [29, 159], "td_or_dict": 29, "old_nam": 29, "new_nam": 29, "tensordict_list": 29, "td2": 29, "popul": [29, 75], "immut": [29, 48, 49, 51, 52, 78, 170], "td_unqueez": 29, "hasn": 29, "_meta_v": 29, "priority_kei": [30, 36, 129, 130, 135], "td_error": [30, 36, 128, 129, 130, 134, 135], "prioritizedreplaybuff": 30, "flaot": 30, "return_weight": 30, "_weight": 30, "replaybuff": [31, 34, 36, 45, 173, 177], "meta": 32, "what": [32, 48, 49, 51, 52, 75, 183], "kind": [32, 86], "replay_buff": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 177], "rb_prototyp": [34, 35, 36], "remot": [34, 51, 52], "invoc": 34, "friendli": 34, "public": 34, "rpc": 34, "normal": [34, 68, 81, 92, 103, 111, 118, 122, 155, 157, 181], "include_info": [34, 36], "sampler": [34, 35, 36, 37, 38, 40, 41, 42, 43], "writer": [35, 44], "max_siz": [35, 40, 42, 43], "1_000": 35, "randomsampl": 35, "roundrobinwrit": 35, "kw": [36, 44], "max_capac": 37, "uniformli": 38, "scratch_dir": 40, "attach": [40, 41, 42, 43], "entiti": [40, 41, 42, 43], "eg": [40, 41, 42, 43], "alloc": 41, "__len__": 43, "roundrobin": 44, "insert": [44, 45, 79], "piec": [44, 45], "_inplace_upd": [48, 51, 52, 78], "_batch_lock": [48, 51, 52, 78], "observation_spec": [48, 50, 59, 60, 61, 62, 63, 65, 66, 68, 71, 72, 75, 76, 77, 78, 79, 80, 91, 162, 177], "compositespec": [48, 50, 75, 87, 91, 110, 121], "action_spec": [48, 49, 50, 51, 52, 78, 85, 87, 99, 110, 112, 114, 125, 126, 177], "input_spec": [48, 50, 51, 52, 62, 63, 71, 77, 78, 79, 80, 91], "reward_spec": [48, 50, 58, 62, 63, 71, 73, 74, 77, 78, 79, 80, 91], "is_don": [48, 50], "run_type_check": [48, 50], "compar": [48, 155], "rand_step": [48, 49, 50, 51, 52, 53, 54, 55, 56, 81], "batch_lock": [48, 49, 51, 52, 78], "environn": [48, 49, 50, 51, 52, 78], "fake_tensordict": [48, 49, 51, 52], "fake": [48, 49, 51, 52], "overridden": [48, 49, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121], "although": [48, 49, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121], "recip": [48, 49, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121], "afterward": [48, 49, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121], "former": [48, 49, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121], "care": [48, 49, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121], "silent": [48, 49, 51, 52, 71, 77, 79, 80, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121], "info": [48, 49, 51, 52, 82], "execute_step": [48, 49, 51, 52], "As": [48, 49, 51, 52, 111], "_step": [48, 49, 51, 52], "privat": [48, 49, 51, 52], "_reset": [48, 49, 50, 51, 52, 91], "overwritten": [48, 49, 51, 52, 86, 120], "step_mdp": [48, 49, 51, 52], "herebi": [48, 49, 51, 52], "max_step": [48, 49, 50, 51, 52, 85, 86], "callback": [48, 49, 51, 52], "auto_reset": [48, 49, 51, 52], "auto_cast_to_devic": [48, 49, 51, 52], "break_when_any_don": [48, 49, 51, 52], "return_contigu": [48, 49, 51, 52], "soon": [48, 49, 51, 52], "smaller": [48, 49, 51, 52], "automat": [48, 49, 51, 52, 87, 110], "lazystackedtensordict": [48, 49, 51, 52], "concomitt": [48, 49, 51, 52], "eras": [48, 49, 51, 52], "workspac": [48, 49, 51, 52], "carri": [48, 49, 51, 52], "taken": [48, 49, 51, 52], "discard": [49, 86], "info_dict_read": 49, "set_info_dict_read": 49, "next_observ": [49, 81, 86, 102, 165, 170, 172, 175], "next_observation_": 49, "read_act": 49, "read_don": 49, "reader": 49, "frame_skip": [49, 53, 54, 55, 153, 155, 161], "broken": 49, "read_ob": 49, "dictat": [49, 111], "inner": [49, 111], "read_reward": 49, "total_reward": 49, "step_reward": 49, "far": [49, 118, 122], "baseinfodictread": 49, "info_dict": 49, "hoc": 49, "manner": [49, 71], "dict_read": 49, "gymwrapp": 49, "default_info_dict_read": 49, "my_info_kei": 49, "some_env": 49, "meant": 50, "world": 50, "safeti": 50, "constraint": 50, "behav": [50, 109, 120], "classic": 50, "directli": [50, 181], "ndunboundedcontinuoustensorspec": [50, 75, 87, 88, 89, 90, 91, 111, 119, 120, 121, 123], "mymbenv": [50, 91], "world_model": [50, 91], "super": [50, 91, 123, 125], "next_hidden_observ": [50, 91], "hidden_observ": [50, 91], "mlp": [50, 88, 91, 92, 93, 94, 95, 96, 99, 102, 170, 172, 175], "worldmodelwrapp": [50, 91], "tensordictmodul": [50, 88, 89, 90, 91, 104, 110, 111, 120, 121, 127, 128, 132, 133, 134, 135, 140, 141, 142, 143, 155, 163, 164, 177], "activation_class": [50, 91, 92, 93, 94, 95, 96, 100, 101, 103], "relu": [50, 91], "activate_last_lay": [50, 91, 96, 103], "depth": [50, 91, 92, 93, 94, 95, 96, 99, 100, 101, 103, 107, 108], "in_kei": [50, 58, 59, 60, 61, 63, 65, 66, 68, 69, 71, 72, 73, 74, 76, 77, 80, 81, 87, 88, 89, 90, 91, 110, 111, 119, 120, 121, 123, 128, 129, 172, 175, 177], "out_kei": [50, 51, 52, 60, 87, 88, 90, 91, 110, 111, 119, 120, 121, 123, 125, 126, 155, 177], "equal": [51, 52, 67, 92, 98, 103, 137, 151, 179, 180], "my_env_fun": [51, 52], "custom_attribute_list": [51, 52], "custom_attribut": [51, 52], "custom_method_list": [51, 52], "custom_method": [51, 52], "num_work": [51, 52], "deploi": [51, 52], "simultan": [51, 52], "creation": [51, 52], "divers": [51, 52], "slight": [51, 52], "overhead": [51, 52], "env_input_kei": [51, 52], "drastic": [51, 52], "decreas": [51, 52], "io": [51, 52], "burden": [51, 52], "stateless": [51, 52, 77], "_batchedenv": [51, 52], "might": [51, 52, 183], "next_pixel": [51, 52, 71, 76, 80], "next_vector": [51, 52], "interest": [51, 52, 111], "amount": [51, 52], "occupi": [51, 52], "excluded_kei": [51, 52], "exclud": [51, 52], "share_individual_td": [51, 52], "shared_memori": [51, 52], "policy_proof": [51, 52], "ll": [51, 52], "hidden": [51, 52, 88, 89, 90, 100, 102, 107, 108, 111, 113, 114, 119, 121, 170], "allow_step_when_don": [51, 52], "encount": [51, 52, 183], "update_kwarg": [51, 52], "dm_control": [53, 54], "env_nam": [53, 55], "task_nam": 53, "from_pixel": [53, 54, 170, 172, 175], "cheetah": [53, 54], "suit": 54, "model_bas": [57, 91], "dreamer": [57, 100], "keys_out": [58, 69, 71, 72, 73, 76, 77, 80], "transform_reward_spec": [58, 62, 63, 71, 73, 74, 77, 79, 80], "cat_dim": 59, "success": [59, 77], "account": 59, "movement": 59, "veloc": 59, "propos": [59, 104, 131, 136, 172, 175], "plai": 59, "atari": 59, "pdf": [59, 93, 94, 95, 96, 125, 130, 134, 135, 136, 141, 144, 145, 148, 165, 172, 175], "1312": 59, "5602": 59, "tranform": [59, 62, 71, 75, 77, 80, 82], "transform_observation_spec": [59, 60, 61, 62, 63, 65, 66, 68, 71, 72, 75, 76, 77, 79, 80], "next_observation_vector": [60, 165, 170, 172, 175], "del_kei": 60, "unsqueeze_if_oor": 60, "observation_posit": 60, "observation_veloc": 60, "key1": [60, 151, 158], "key2": [60, 151, 158], "w": [61, 72, 76], "crop": 61, "center": 61, "width": [61, 72], "height": [61, 72], "squar": [61, 118, 122], "chain": [62, 92, 121], "rewardsc": [62, 78], "rewardclip": 62, "transformed_env": [62, 77, 78], "transformedenv": [62, 67, 75, 77, 81, 165, 167, 170, 172, 175], "transform_input_spec": [62, 63, 71, 77, 79, 80], "in_keys_inv": [63, 77], "next_ob": [63, 68], "finit": 64, "first_dim": 65, "last_dim": 65, "flatten": 65, "adjac": 65, "turn": [66, 155], "noop": 67, "30": [67, 113, 114], "noop_max": 67, "loc": [68, 74, 88, 90, 110, 111, 118, 121, 122, 162, 170, 172, 175, 181], "scale": [68, 74, 88, 90, 100, 110, 111, 113, 114, 118, 121, 122, 157, 162, 170, 172, 175, 181], "standard_norm": 68, "affin": [68, 74], "layer": [68, 81, 92, 93, 94, 100, 103, 105, 106, 107, 108, 115, 116, 124], "ob": [68, 76, 123], "set_default_tensor_typ": 68, "doubletensor": 68, "std": [68, 81], "isclos": 68, "r3m": 71, "resnet": [71, 80], "visual": [71, 80], "embed": [71, 80, 88, 89, 90, 119], "ego4d": [71, 80], "paper": [71, 80, 131, 172, 175], "univers": [71, 80], "suraj": 71, "nair": 71, "aravind": 71, "rajeswaran": 71, "vikash": [71, 80], "kumar": [71, 80], "chelsea": 71, "finn": 71, "abhinav": 71, "gupta": 71, "2203": 71, "12601": 71, "_init": 71, "snippet": 71, "resenet50": 71, "append_transform": [71, 75], "model_nam": [71, 80], "resnet50": [71, 80], "resnet34": 71, "resnet18": 71, "left": [71, 80], "next_r3m_vec": 71, "feed": [71, 80], "244": [71, 80], "hub": [71, 80], "download_path": [71, 80], "tensor_pixels_kei": [71, 80], "interpol": 72, "bilinear": 72, "clamp_min": 73, "clamp_max": 73, "clip": [73, 127, 159], "clip_min": 73, "scalar": [73, 94, 96, 105, 106, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "clip_max": 73, "default_valu": 75, "primer": 75, "drawn": [75, 111], "rel": [75, 97, 117], "fix": [75, 135], "chosen": [75, 170, 172, 175], "base_env": 75, "mykei": 75, "dtype_or_devic": 75, "255": 76, "uint8": 76, "precis": 76, "ri": 76, "randint": 76, "keys_inv_out": 77, "principl": 77, "combin": 77, "cattransform": 77, "notabl": 77, "placehold": 78, "cache_spec": 78, "valid": [78, 92, 103, 132], "anymor": [78, 119], "unsqueeze_dim": 79, "vip": 80, "toward": 80, "implicit": 80, "jason": 80, "ma": 80, "shagun": 80, "sodhani": 80, "dinesh": 80, "jayaraman": 80, "osbert": 80, "bastani": 80, "ami": 80, "zhang": 80, "next_vip_vec": 80, "shared_td": 81, "decai": [81, 134, 157], "9999": 81, "0001": [81, 100, 157], "summari": 81, "statist": [81, 181], "fly": [81, 132], "substitut": 81, "to_observation_norm": 81, "rate": [81, 140], "99": [81, 127, 132, 133, 134, 135, 140, 177], "deviat": [81, 91, 100, 105, 106, 133], "numer": [81, 111, 118, 119, 122], "underflow": 81, "1000": [81, 111, 131, 177], "static": 81, "build_td_for_shared_vecnorm": 81, "keys_prefix": 81, "memmori": 81, "multiprocess": 81, "mp": 81, "queue": 81, "make_env": [81, 86, 163, 164], "td_share": 81, "v": [81, 102, 135], "observationnorm": [81, 181], "state_dim": [82, 113, 114], "action_dim": [82, 93, 95], "gsde": [82, 134, 181], "nois": [82, 106, 124, 134, 155, 181], "func": 82, "gsdemodul": 82, "probabilistictdmodul": [85, 103, 111, 135, 140, 155], "default_interaction_mod": [85, 111], "next_tensordict": 86, "keep_oth": 86, "exclude_reward": 86, "exclude_don": 86, "exclude_act": 86, "reflect": [86, 161], "next_some_other_str": 86, "some_other_str": 86, "funtion": 86, "td_out": [86, 151, 158], "make_polici": 86, "next_td": 86, "append": 86, "translat": [87, 110], "td_modul": [87, 88, 89, 90, 110, 111, 119, 120, 121, 123], "critic": [88, 127, 132, 133, 135], "get_policy_oper": [88, 89, 90, 170], "alon": [88, 89, 90], "tdmodul": [88, 89, 90, 111, 177], "dedic": [88, 89, 90], "get_critic_oper": 88, "common_oper": [88, 90], "produc": [88, 90, 92, 103, 109, 111], "policy_oper": [88, 89, 90], "value_oper": [88, 89, 90], "tensordict_modul": [88, 89, 90, 110, 111, 112, 120, 121, 125, 126], "probabilisticactor": [88, 90, 135], "valueoper": [88, 89, 90, 127, 132, 133, 177], "tanhnorm": [88, 89, 90, 110, 111, 121], "normalparamwrapp": [88, 90, 110, 111, 121], "spec_hidden": [88, 90], "module_hidden": [88, 90], "td_module_hidden": [88, 90], "spec_act": [88, 89, 90], "8": [88, 89, 90, 92, 93, 94, 101, 103, 110, 111, 119, 121], "module_act": [88, 89, 90], "td_module_act": [88, 89, 90], "dist_in_kei": [88, 90, 110, 111, 121], "sample_out_kei": [88, 90, 110, 111, 121], "distribution_class": [88, 89, 90, 110, 111, 121], "return_log_prob": [88, 89, 90, 111, 121], "module_valu": [88, 89, 90], "num_cel": [88, 92, 93, 94, 95, 96, 100, 101, 103], "td_module_valu": [88, 89, 90], "state_action_valu": [88, 123, 140, 165, 172, 175, 177], "td_clone": [88, 89, 90], "sample_log_prob": [88, 89, 90, 111, 121, 170, 172], "tensordictmodulewrapp": [88, 163, 164, 177], "estim": [88, 89, 90, 127, 132, 133, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "get_value_oper": [88, 89, 90, 170], "probabilisticactor_deprec": 89, "state_valu": [89, 90, 123, 142, 143, 144, 145, 146, 148, 149, 170, 175], "tensordictsequenti": [89, 90], "planning_horizon": 91, "optim_step": 91, "num_candid": 91, "num_top_k_candid": 91, "reward_kei": 91, "action_kei": [91, 104], "cross": 91, "entropi": [91, 127, 132, 133, 134, 135], "botev": 91, "et": 91, "al": [91, 167], "2013": 91, "cem": 91, "plan": [91, 104], "gaussian": [91, 105, 106], "unit": [91, 100, 107, 108, 113, 114], "varianc": [91, 118, 122], "cumul": 91, "rank": 91, "top": 91, "k": 91, "episod": [91, 144, 145, 146, 147, 148, 149, 150], "repeat": 91, "empir": [91, 111], "maximis": [91, 93, 95], "horizon": 91, "modelbasedenv": 91, "mpc": [91, 104], "candid": 91, "modelbasedenvbas": [91, 104], "elu": [92, 93, 94, 95, 96, 100, 101], "activation_kwarg": [92, 103], "norm_class": [92, 93, 94, 103], "norm_kwarg": [92, 103], "bias_last_lay": [92, 93, 94, 95, 96, 101, 103], "aggregator_class": [92, 93, 94], "squashdim": [92, 93], "aggregator_kwarg": [92, 93, 94], "squeeze_output": [92, 93, 94], "convolut": [92, 93, 94, 115], "neural": [92, 115, 119], "len": [92, 103], "cell": [92, 103], "kernel": [92, 101, 102], "tanh": [92, 103, 117, 118, 122], "aggreg": [92, 93, 94, 121], "device_typ": [92, 93, 94, 95, 96, 101, 103, 105, 106], "cnet": 92, "34": [92, 103], "35": [92, 103], "possibli": [92, 111, 119, 159], "rectangular": 92, "conv_net_kwarg": [93, 94], "mlp_net_kwarg": [93, 94, 95], "use_avg_pool": [93, 94], "WITH": [93, 94, 95, 96, 136, 165], "1509": [93, 94, 95, 96, 131, 136, 165], "02971": [93, 94, 95, 96, 136, 165], "q": [93, 94, 95, 96, 98, 101, 125, 126, 128, 129, 130, 131, 134, 135, 172, 175], "convnet": 93, "64": [93, 94, 101], "ndims_in": 93, "avgpool": [93, 94], "128": 94, "adaptiveavgpool2d": 94, "400": [95, 96], "300": [95, 96, 170], "mlp_net_kwargs_net1": 96, "mlp_net_kwargs_net2": 96, "atol": [97, 117], "06": [97, 117], "rtol": [97, 117], "batch_shap": [97, 117], "event_shap": [97, 117], "absolut": [97, 117], "toler": [97, 117], "log_prob": [97, 109, 122], "log": [97, 109, 111, 122, 127, 130, 132, 133, 134, 135, 153, 154, 155, 159, 177], "probabl": [97, 109, 111, 122], "densiti": [97, 109, 122], "mass": [97, 109, 122], "rsampl": [97, 109, 111], "sample_shap": [97, 109], "reparameter": [97, 109], "dqnet": 98, "atom": 98, "action_spac": [99, 112, 125, 126], "one_hot": [99, 112, 125, 126], "onehotdiscretetensorspec": [99, 112, 125, 126], "nbin": [99, 125], "qvalue_actor": [99, 112, 125, 126], "std_bia": 100, "std_min_val": 100, "stochast": [100, 106, 107, 114, 134, 135], "belief": [100, 107, 113, 114], "1912": 100, "016034": 100, "softplu": 100, "out_features_valu": 101, "cnn_kwarg": 101, "mlp_kwarg": [101, 102], "duel": 101, "cnn": 101, "06581": 101, "advantag": [101, 127, 132, 133, 141, 142, 143, 144, 145, 146, 148, 149], "512": 101, "lstm_kwarg": 102, "embedd": 102, "lstm": 102, "preced": 102, "time_step": 102, "2d": 102, "input_s": 102, "hidden_s": 102, "hidden0_in": 102, "hidden1_in": 102, "hidden0_out": 102, "hidden1_out": 102, "single_bias_last_lay": 103, "layer_class": 103, "layer_kwarg": 103, "perceptron": 103, "seamless": 103, "interfac": [103, 105], "though": 103, "lazylinear": [103, 111, 119, 121], "42": [103, 159], "noisylinear": [103, 105], "noisylazylinear": 103, "inherit": 104, "At": 104, "mpcplanner": 104, "tensordict_out": [104, 111, 119, 121], "std_init": [105, 106], "noisi": [105, 106, 124], "term": [105, 106, 160], "matrix": [105, 106], "ax": [105, 106], "initialize_paramet": 105, "isol": 105, "1706": 106, "10295v3": 106, "parametr": [106, 135], "induc": 106, "aid": 106, "descent": 106, "remain": 106, "emploi": 106, "decod": 107, "1803": [107, 108], "10122": [107, 108], "rnn_hidden": 107, "latent": 108, "logit": 109, "prob": 109, "One": [109, 119, 137], "excacli": 109, "probabilist": [110, 111], "fmodul": [110, 112, 119, 120, 123, 125, 126], "make_functional_with_buff": [110, 111, 112, 119, 120, 121, 123, 125, 126], "tensor_spec": 111, "distribution_kwarg": 111, "cache_dist": 111, "n_empirical_estim": 111, "special": 111, "rule": 111, "respons": [111, 159], "get_dist": 111, "__call__": 111, "real": 111, "median": 111, "functionalmodul": [111, 119], "functionalmodulewithbuff": [111, 119], "importantli": 111, "overflow": [111, 119], "fist": 111, "set_exploration_mod": [111, 155], "f": 111, "_log_prob": 111, "diverg": [111, 132], "grucel": [111, 119], "fnet": 111, "vmap": [111, 119, 121], "again": 111, "p": [111, 121], "normal_": [111, 119, 121], "td_vmap": [111, 119, 121], "scrape": [111, 119, 121], "lazy_modul": [111, 119], "18": [111, 119, 121], "some_input": [111, 119, 121], "some_output": [111, 119, 121], "hidden_dim": [113, 114], "scale_lb": [113, 114], "posterior": 113, "rssm": [113, 114], "1811": [113, 114], "04551": [113, 114], "obs_embed": 113, "rnn_hidden_dim": 114, "prior": 114, "dream": 114, "recurr": 114, "min": [117, 118, 122, 127, 134, 135], "event_dim": [117, 118], "upscal": [118, 122], "tanh_loc": [118, 122], "tanhtransform": 118, "ultim": [118, 122], "unstabl": [118, 122], "poor": [118, 122], "explos": [118, 122], "switch": [118, 122], "sigma": [118, 122], "root": [118, 122], "formula": [118, 122, 127, 132, 133], "character": 119, "td_fmodul": 119, "td_function": 119, "td_state": 119, "isn": 119, "ensembl": [119, 134], "params_repeat": 119, "buffers_repeat": 119, "irrespect": 119, "random_sampl": 119, "calss": 120, "expand_as_right": 120, "epsilongreedyexplor": 120, "rand_output_clon": 120, "det_output_clon": 120, "rand_output_idx": 120, "_rand_output": 120, "_det_output": 120, "rand_output_idx_expand": 120, "tensordict_module_wrap": 120, "partial_toler": 121, "tensordictsequenci": 121, "who": 121, "AND": 121, "scan": 121, "sub": [121, 151, 159], "tensordictsequ": 121, "rubric": 121, "spec1": 121, "net1": 121, "fnet1": 121, "params1": 121, "buffers1": 121, "fmodule1": 121, "td_module1": 121, "spec2": 121, "module2": 121, "fmodule2": 121, "params2": 121, "buffers2": 121, "td_module2": 121, "lazy_module1": 121, "lazy_module2": 121, "select_subsequ": 121, "acord": 121, "custommodul": 123, "var_num": [125, 126], "regard": [125, 130, 133], "perspect": [125, 130], "1707": [125, 130, 133, 170], "06887": [125, 130], "mult_one_hot": [125, 126], "customdistributionalqv": 125, "log_softmax": 125, "greedi": 126, "advantage_kei": [127, 132, 133], "clip_epsilon": 127, "entropy_bonu": [127, 132, 133], "samples_mc_entropi": [127, 132, 133], "entropy_coef": [127, 132, 133], "01": [127, 132, 133], "critic_coef": [127, 132, 133], "loss_critic_typ": [127, 132, 133], "l2": [127, 128, 129, 132, 133, 134, 137], "loss": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 159, 166, 168, 169, 171, 172, 174, 177], "threshold": 127, "bonu": [127, 132, 133], "favour": [127, 132, 133], "exploratori": [127, 132, 133], "mont": [127, 132, 133], "carlo": [127, 132, 133], "multipli": [127, 132, 133, 134, 135], "loss_funct": [127, 128, 129, 133, 134, 135, 137], "discrep": [127, 128, 129, 132, 133], "l1": [127, 128, 129, 132, 133, 134, 137], "smooth_l1": [127, 128, 129, 132, 133, 134, 135, 137], "throughout": [127, 130, 132, 133, 134, 135], "essenti": [127, 130, 132, 133, 134, 135], "backpropag": [127, 130, 132, 133, 134, 135], "actor_network": [128, 134, 135], "value_network": [128, 129, 130, 135, 141, 142, 143], "delay_actor": [128, 135], "delay_valu": [128, 129, 130, 135], "input_tensordict": [128, 129, 130], "assign": [128, 129], "qvalueactor": 129, "distributionalqvalueactor": 130, "disctount": 130, "loss_modul": [131, 136, 159, 176, 177], "dqnloss": [131, 136, 168], "ddpgloss": [131, 136, 166, 177], "sacloss": [131, 136, 174], "value_network_update_interv": 131, "contrast": 131, "soft": [131, 135, 136], "06461": 131, "often": [131, 159], "dtarg": 132, "decrement": 132, "samples_mc_kl": 132, "kl": 132, "penalti": 132, "old_polici": 132, "new_polici": 132, "adapt": 132, "thu": 132, "distanc": [132, 137, 140], "apart": 132, "advantage_diff_kei": 133, "value_error": [133, 141, 142, 143], "advantage_modul": 133, "proxim": [133, 170], "optimis": [133, 155], "flavour": 133, "constrain": 133, "clipppoloss": 133, "klpenppoloss": 133, "regularis": 133, "06347": [133, 170], "qvalue_network": [134, 135], "num_qvalue_net": [134, 135], "sub_sample_len": 134, "priotity_kei": [134, 135], "alpha_init": [134, 135], "min_alpha": [134, 135], "max_alpha": [134, 135], "fixed_alpha": [134, 135], "target_entropi": [134, 135], "auto": [134, 135], "delay_qvalu": [134, 135], "openreview": [134, 172], "ay8zfzm0tdd": [134, 172], "idea": 134, "subsampl": [134, 151], "know": [134, 155], "1801": [135, 175], "01290": [135, 175], "qvalue_network_bi": 135, "prod": 135, "n_action": 135, "redqloss": 136, "999": [136, 157], "epsilon": 136, "prev_param": 136, "new_param": 136, "v2": [137, 146, 147, 149, 150, 165, 170, 172, 175], "strict_shap": 137, "view_a": 137, "manag": [138, 139, 155], "hold": [138, 139], "graph": [138, 139], "next_val_kei": 140, "pred_next_v": 140, "usus": 140, "mse": 140, "q_valu": 140, "target_valu": 140, "n_steps_to_next": 140, "value_next_st": 140, "lmbda": [141, 143, 144, 146, 147, 148, 149, 150], "average_reward": [141, 142, 143], "gradient_mod": [141, 142, 143], "1506": [141, 144, 145, 148], "02438": [141, 144, 145, 148], "exponenti": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 157], "propag": [141, 142, 143], "throught": [141, 142, 143], "unused_arg": [141, 142, 143], "target_param": [141, 142, 143], "target_buff": [141, 142, 143], "value_kei": [142, 143], "gae": [142, 143], "next_state_valu": [144, 145, 146, 147, 148, 149, 150], "old_stat": [144, 145, 146, 148, 149], "timestep": [144, 145, 146, 147, 148, 149, 150], "new_stat": [144, 145, 146, 147, 148, 149, 150], "flag": [144, 145, 146, 147, 148, 149, 150], "rolling_gamma": [146, 147, 149, 150], "ti": [146, 147, 149, 150], "event": [146, 147, 149, 150], "g1": [146, 147, 149, 150], "g2": [146, 147, 149, 150], "g3": [146, 147, 149, 150], "g4": [146, 147, 149, 150], "v3": [146, 147, 149, 150], "v4": [146, 147, 149, 150], "upcom": [146, 147, 149, 150], "sub_traj_len": 151, "min_sub_traj_len": 151, "just": 151, "full": 151, "20": 151, "register_op": [151, 152, 153, 154, 157, 158, 160], "process_optim_batch": [151, 157], "_process_optim_batch_hook": 151, "interv": [152, 160], "clear_cuda": 152, "pre_optim_step": 152, "counter": 153, "appar": 153, "log_pbar": [153, 154, 155, 157], "progress": [153, 154, 155, 159], "bar": [153, 154, 155, 159], "count_fram": 153, "pre_steps_log": [153, 154], "lognam": 154, "r_train": 154, "logger": [154, 155, 159, 177, 181], "log_reward": 154, "record_interv": 155, "record_fram": [155, 161], "policy_explor": [155, 177], "log_kei": 155, "suffix": 155, "count": [155, 161], "underestim": 155, "final": 155, "suppos": 155, "reward_evalu": 155, "video": [155, 181], "reward_norm": 157, "batch_process": [157, 158], "update_reward_stat": 157, "normalize_reward": 157, "make_train": 158, "second": 158, "_process_batch_hook": 158, "versatil": 159, "lossmodul": [159, 176, 177], "optim_steps_per_batch": 159, "epoch": 159, "500": 159, "clip_grad_norm": 159, "norm": 159, "partial": 159, "deriv": 159, "clamp": 159, "clip_norm": 159, "progress_bar": 159, "tqdm": 159, "save_trainer_interv": 159, "10000": 159, "save_trainer_fil": 159, "_datacollector": [160, 163, 164, 177], "update_weights_interv": 160, "whenev": 160, "sit": 160, "sync": [160, 177], "update_weight": 160, "post_step": 160, "cfg": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181], "dictconfig": [161, 162, 163, 164, 165, 167, 170, 172, 173, 175, 176, 177, 178, 181], "correct": 161, "divid": 161, "unknowingli": 161, "1m": 161, "annealing_fram": 161, "init_env_step": [161, 162], "proof_environ": [162, 165, 167, 170, 172, 175], "sta": 162, "stat": [162, 181], "ot": 162, "actor_model_explor": [163, 164], "make_env_kwarg": [163, 164], "creator": [163, 164, 179, 180, 181], "actor_net_kwarg": [165, 172, 175], "value_net_kwarg": [165, 175], "modulelist": [165, 172, 175], "dummi": [165, 167, 170, 172, 175], "ddpgcnnactor": 165, "ddpgmlpactor": 165, "ddpgcnnqnet": 165, "ddpgmlpqnet": 165, "cattensor": [165, 170, 172, 175], "doubletofloat": [165, 170, 172, 175], "hydra": [165, 167, 170, 172, 175], "config_stor": [165, 167, 170, 172, 175], "configstor": [165, 167, 170, 172, 175], "dataclass": [165, 167, 170, 172, 175], "halfcheetah": [165, 170, 172, 175], "config_field": [165, 167, 170, 172, 175], "config_cl": [165, 167, 170, 172, 175], "ddpgmodelconfig": 165, "envconfig": [165, 167, 170, 172, 175], "make_dataclass": [165, 167, 170, 172, 175], "cls_name": [165, 167, 170, 172, 175], "config_path": [165, 167, 170, 172, 175], "config_nam": [165, 167, 170, 172, 175], "17": [165, 170, 172, 175], "targetnetupdat": [166, 168, 171, 174, 176, 177], "discretemodelconfig": 167, "totensorimag": 167, "pong": 167, "v5": 167, "pixels_onli": 167, "210": 167, "160": 167, "ppoloss": 169, "in_keys_actor": 170, "observation_kei": [170, 172, 175], "actorvalueoper": 170, "join": 170, "actorcriticoper": 170, "parser_env_arg": [170, 172], "parser_model_args_continu": [170, 172, 175], "ppomodelconfig": 170, "actor_valu": 170, "redqloss_deprec": 171, "qvalue_net_kwarg": [172, 175], "qvalu": [172, 175], "redqmodelconfig": 172, "replayargsconfig": 173, "sacmodelconfig": 175, "target_net_updat": 177, "constitu": 177, "learnt": 177, "tempfil": 177, "tensorboardlogg": 177, "tensordictreplaybuff": 177, "egreedywrapp": 177, "env_mak": 177, "env_proof": 177, "obs_spec": 177, "net_valu": 177, "dir": 177, "gettempdir": 177, "exp_nam": 177, "argpars": [178, 181], "namespac": [178, 181], "parser": [178, 181], "transformed_env_constructor": 178, "env_kwarg": [179, 180], "num_env_per_collector": [179, 180], "num_collector": [179, 180], "less": [179, 180], "multisyncdatacollector": 180, "video_tag": 181, "norm_obs_onli": 181, "use_env_cr": 181, "custom_env_mak": 181, "custom_env": 181, "return_transformed_env": 181, "action_dim_gsd": 181, "state_dim_gsd": 181, "vecnorm": 181, "wheter": 181, "maker": 181, "overrid": 181, "exclus": 181, "solv": 183, "journei": 183, "guid": 183, "textbook": 183, "highlight": 183, "readi": 183, "cours": 183, "ever": 183, "cover": 183, "bump": 183, "think": 183, "commun": 183, "benefit": 183, "submit": 183, "pr": 183, "intern": 187}, "objects": {"torchrl._utils": [[10, 0, 1, "", "implement_for"]], "torchrl.collectors": [[11, 0, 1, "", "MultiSyncDataCollector"], [12, 0, 1, "", "MultiaSyncDataCollector"], [13, 0, 1, "", "SyncDataCollector"], [14, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.MultiSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[13, 1, 1, "", "iterator"], [13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "rollout"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[15, 2, 1, "", "split_trajectories"]], "torchrl.data": [[16, 0, 1, "", "BinaryDiscreteTensorSpec"], [17, 0, 1, "", "BoundedTensorSpec"], [18, 0, 1, "", "CompositeSpec"], [19, 0, 1, "", "DiscreteTensorSpec"], [20, 0, 1, "", "LazyStackedTensorDict"], [21, 0, 1, "", "MultOneHotDiscreteTensorSpec"], [22, 0, 1, "", "MultiStep"], [23, 0, 1, "", "NdBoundedTensorSpec"], [24, 0, 1, "", "NdUnboundedContinuousTensorSpec"], [25, 0, 1, "", "OneHotDiscreteTensorSpec"], [26, 0, 1, "", "PrioritizedReplayBuffer"], [27, 0, 1, "", "ReplayBuffer"], [28, 0, 1, "", "SubTensorDict"], [29, 0, 1, "", "TensorDict"], [30, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [31, 0, 1, "", "TensorDictReplayBuffer"], [32, 0, 1, "", "TensorSpec"], [33, 0, 1, "", "UnboundedContinuousTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[16, 1, 1, "", "assert_is_in"], [16, 1, 1, "", "encode"], [16, 1, 1, "", "index"], [16, 1, 1, "", "is_in"], [16, 1, 1, "", "project"], [16, 1, 1, "", "rand"], [16, 1, 1, "", "to_numpy"], [16, 1, 1, "", "type_check"], [16, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorDict": [[20, 1, 1, "", "all"], [20, 1, 1, "", "any"], [20, 1, 1, "", "apply"], [20, 1, 1, "", "apply_"], [20, 3, 1, "", "batch_dims"], [20, 3, 1, "", "batch_size"], [20, 1, 1, "", "chunk"], [20, 1, 1, "", "clone"], [20, 1, 1, "", "contiguous"], [20, 1, 1, "", "copy_"], [20, 1, 1, "", "copy_at_"], [20, 1, 1, "", "cpu"], [20, 1, 1, "", "cuda"], [20, 1, 1, "", "del_"], [20, 1, 1, "", "detach"], [20, 1, 1, "", "detach_"], [20, 3, 1, "", "device"], [20, 1, 1, "", "empty"], [20, 1, 1, "", "expand"], [20, 1, 1, "", "fill_"], [20, 1, 1, "", "get"], [20, 1, 1, "", "get_at"], [20, 1, 1, "", "get_sub_tensordict"], [20, 1, 1, "", "is_contiguous"], [20, 1, 1, "", "is_memmap"], [20, 1, 1, "", "is_shared"], [20, 1, 1, "", "items"], [20, 1, 1, "", "items_meta"], [20, 1, 1, "", "keys"], [20, 1, 1, "", "masked_fill"], [20, 1, 1, "", "masked_fill_"], [20, 1, 1, "", "masked_select"], [20, 1, 1, "", "memmap_"], [20, 1, 1, "", "numel"], [20, 1, 1, "", "permute"], [20, 1, 1, "", "pin_memory"], [20, 1, 1, "", "rename_key"], [20, 1, 1, "", "reshape"], [20, 1, 1, "", "select"], [20, 1, 1, "", "set"], [20, 1, 1, "", "set_"], [20, 1, 1, "", "set_at_"], [20, 3, 1, "", "shape"], [20, 1, 1, "", "share_memory_"], [20, 1, 1, "", "size"], [20, 1, 1, "", "squeeze"], [20, 1, 1, "", "to"], [20, 1, 1, "", "to_dict"], [20, 1, 1, "", "to_tensordict"], [20, 1, 1, "", "unbind"], [20, 1, 1, "", "unsqueeze"], [20, 1, 1, "", "update"], [20, 1, 1, "", "update_"], [20, 1, 1, "", "update_at_"], [20, 1, 1, "", "values"], [20, 1, 1, "", "values_meta"], [20, 1, 1, "", "view"], [20, 1, 1, "", "zero_"]], "torchrl.data.MultOneHotDiscreteTensorSpec": [[21, 1, 1, "", "assert_is_in"], [21, 1, 1, "", "encode"], [21, 1, 1, "", "index"], [21, 1, 1, "", "is_in"], [21, 1, 1, "", "project"], [21, 1, 1, "", "rand"], [21, 1, 1, "", "to_numpy"], [21, 1, 1, "", "type_check"], [21, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[22, 1, 1, "", "add_module"], [22, 1, 1, "", "apply"], [22, 1, 1, "", "bfloat16"], [22, 1, 1, "", "buffers"], [22, 1, 1, "", "children"], [22, 1, 1, "", "cpu"], [22, 1, 1, "", "cuda"], [22, 1, 1, "", "double"], [22, 1, 1, "", "eval"], [22, 1, 1, "", "extra_repr"], [22, 1, 1, "", "float"], [22, 1, 1, "", "forward"], [22, 1, 1, "", "get_buffer"], [22, 1, 1, "", "get_extra_state"], [22, 1, 1, "", "get_parameter"], [22, 1, 1, "", "get_submodule"], [22, 1, 1, "", "half"], [22, 1, 1, "", "ipu"], [22, 1, 1, "", "load_state_dict"], [22, 1, 1, "", "modules"], [22, 1, 1, "", "named_buffers"], [22, 1, 1, "", "named_children"], [22, 1, 1, "", "named_modules"], [22, 1, 1, "", "named_parameters"], [22, 1, 1, "", "parameters"], [22, 1, 1, "", "register_backward_hook"], [22, 1, 1, "", "register_buffer"], [22, 1, 1, "", "register_forward_hook"], [22, 1, 1, "", "register_forward_pre_hook"], [22, 1, 1, "", "register_full_backward_hook"], [22, 1, 1, "", "register_full_backward_pre_hook"], [22, 1, 1, "", "register_load_state_dict_post_hook"], [22, 1, 1, "", "register_module"], [22, 1, 1, "", "register_parameter"], [22, 1, 1, "", "requires_grad_"], [22, 1, 1, "", "set_extra_state"], [22, 1, 1, "", "share_memory"], [22, 1, 1, "", "state_dict"], [22, 1, 1, "", "to"], [22, 1, 1, "", "to_empty"], [22, 1, 1, "", "train"], [22, 1, 1, "", "type"], [22, 1, 1, "", "xpu"], [22, 1, 1, "", "zero_grad"]], "torchrl.data.NdBoundedTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.NdUnboundedContinuousTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "update_priority"]], "torchrl.data.ReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "sample"]], "torchrl.data.SubTensorDict": [[28, 1, 1, "", "all"], [28, 1, 1, "", "any"], [28, 1, 1, "", "apply"], [28, 1, 1, "", "apply_"], [28, 3, 1, "", "batch_dims"], [28, 3, 1, "", "batch_size"], [28, 1, 1, "", "chunk"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contiguous"], [28, 1, 1, "", "copy_"], [28, 1, 1, "", "copy_at_"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 1, 1, "", "del_"], [28, 1, 1, "", "detach"], [28, 1, 1, "", "detach_"], [28, 3, 1, "", "device"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "fill_"], [28, 1, 1, "", "get"], [28, 1, 1, "", "get_at"], [28, 1, 1, "", "get_sub_tensordict"], [28, 1, 1, "", "is_contiguous"], [28, 1, 1, "", "is_memmap"], [28, 1, 1, "", "is_shared"], [28, 1, 1, "", "items"], [28, 1, 1, "", "items_meta"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "masked_fill"], [28, 1, 1, "", "masked_fill_"], [28, 1, 1, "", "masked_select"], [28, 1, 1, "", "memmap_"], [28, 1, 1, "", "numel"], [28, 1, 1, "", "permute"], [28, 1, 1, "", "pin_memory"], [28, 1, 1, "", "rename_key"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "select"], [28, 1, 1, "", "set"], [28, 1, 1, "", "set_"], [28, 1, 1, "", "set_at_"], [28, 3, 1, "", "shape"], [28, 1, 1, "", "share_memory_"], [28, 1, 1, "", "size"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_dict"], [28, 1, 1, "", "to_tensordict"], [28, 1, 1, "", "unbind"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "update"], [28, 1, 1, "", "update_"], [28, 1, 1, "", "update_at_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "values_meta"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero_"]], "torchrl.data.TensorDict": [[29, 1, 1, "", "all"], [29, 1, 1, "", "any"], [29, 1, 1, "", "apply"], [29, 1, 1, "", "apply_"], [29, 3, 1, "", "batch_dims"], [29, 3, 1, "", "batch_size"], [29, 1, 1, "", "chunk"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contiguous"], [29, 1, 1, "", "copy_"], [29, 1, 1, "", "copy_at_"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 1, 1, "", "del_"], [29, 1, 1, "", "detach"], [29, 1, 1, "", "detach_"], [29, 3, 1, "", "device"], [29, 1, 1, "", "empty"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "fill_"], [29, 1, 1, "", "get"], [29, 1, 1, "", "get_at"], [29, 1, 1, "", "get_sub_tensordict"], [29, 1, 1, "", "is_contiguous"], [29, 1, 1, "", "is_memmap"], [29, 1, 1, "", "is_shared"], [29, 1, 1, "", "items"], [29, 1, 1, "", "items_meta"], [29, 1, 1, "", "keys"], [29, 1, 1, "", "masked_fill"], [29, 1, 1, "", "masked_fill_"], [29, 1, 1, "", "masked_select"], [29, 1, 1, "", "memmap_"], [29, 1, 1, "", "numel"], [29, 1, 1, "", "permute"], [29, 1, 1, "", "pin_memory"], [29, 1, 1, "", "rename_key"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "select"], [29, 1, 1, "", "set"], [29, 1, 1, "", "set_"], [29, 1, 1, "", "set_at_"], [29, 3, 1, "", "shape"], [29, 1, 1, "", "share_memory_"], [29, 1, 1, "", "size"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_dict"], [29, 1, 1, "", "to_tensordict"], [29, 1, 1, "", "unbind"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "update"], [29, 1, 1, "", "update_"], [29, 1, 1, "", "update_at_"], [29, 1, 1, "", "values"], [29, 1, 1, "", "values_meta"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero_"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[30, 1, 1, "", "add"], [30, 1, 1, "", "extend"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "update_priority"]], "torchrl.data.TensorDictReplayBuffer": [[31, 1, 1, "", "add"], [31, 1, 1, "", "extend"], [31, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.rb_prototype": [[34, 0, 1, "", "RemoteTensorDictReplayBuffer"], [35, 0, 1, "", "ReplayBuffer"], [36, 0, 1, "", "TensorDictReplayBuffer"]], "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer": [[34, 1, 1, "", "add"], [34, 1, 1, "", "extend"], [34, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer": [[36, 1, 1, "", "add"], [36, 1, 1, "", "extend"], [36, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.samplers": [[37, 0, 1, "", "PrioritizedSampler"], [38, 0, 1, "", "RandomSampler"], [39, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[37, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[40, 0, 1, "", "LazyMemmapStorage"], [41, 0, 1, "", "LazyTensorStorage"], [42, 0, 1, "", "ListStorage"], [43, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[40, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[41, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[42, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[43, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[44, 0, 1, "", "RoundRobinWriter"], [45, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[44, 1, 1, "", "add"], [44, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[45, 1, 1, "", "add"], [45, 1, 1, "", "extend"]], "torchrl.data.utils": [[46, 0, 1, "", "expand_as_right"], [47, 0, 1, "", "expand_right"]], "torchrl.envs": [[48, 0, 1, "", "EnvBase"], [49, 0, 1, "", "GymLikeEnv"], [50, 2, 1, "", "ModelBasedEnvBase"], [51, 0, 1, "", "ParallelEnv"], [52, 0, 1, "", "SerialEnv"], [50, 1, 1, "", "rand_step"], [50, 1, 1, "", "reset"], [50, 1, 1, "", "rollout"], [50, 1, 1, "", "set_seed"], [50, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[48, 1, 1, "", "add_module"], [48, 1, 1, "", "apply"], [48, 3, 1, "", "batch_locked"], [48, 1, 1, "", "bfloat16"], [48, 1, 1, "", "buffers"], [48, 1, 1, "", "children"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 1, 1, "", "double"], [48, 1, 1, "", "eval"], [48, 1, 1, "", "extra_repr"], [48, 1, 1, "", "fake_tensordict"], [48, 1, 1, "", "float"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_buffer"], [48, 1, 1, "", "get_extra_state"], [48, 1, 1, "", "get_parameter"], [48, 1, 1, "", "get_submodule"], [48, 1, 1, "", "half"], [48, 1, 1, "", "ipu"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "modules"], [48, 1, 1, "", "named_buffers"], [48, 1, 1, "", "named_children"], [48, 1, 1, "", "named_modules"], [48, 1, 1, "", "named_parameters"], [48, 1, 1, "", "parameters"], [48, 1, 1, "id0", "rand_step"], [48, 1, 1, "", "register_backward_hook"], [48, 1, 1, "", "register_buffer"], [48, 1, 1, "", "register_forward_hook"], [48, 1, 1, "", "register_forward_pre_hook"], [48, 1, 1, "", "register_full_backward_hook"], [48, 1, 1, "", "register_full_backward_pre_hook"], [48, 1, 1, "", "register_load_state_dict_post_hook"], [48, 1, 1, "", "register_module"], [48, 1, 1, "", "register_parameter"], [48, 1, 1, "", "requires_grad_"], [48, 1, 1, "id1", "reset"], [48, 1, 1, "id2", "rollout"], [48, 1, 1, "", "set_extra_state"], [48, 1, 1, "id3", "set_seed"], [48, 1, 1, "", "share_memory"], [48, 3, 1, "", "specs"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "id4", "step"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_empty"], [48, 1, 1, "", "train"], [48, 1, 1, "", "type"], [48, 1, 1, "", "xpu"], [48, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[49, 1, 1, "", "add_module"], [49, 1, 1, "", "apply"], [49, 3, 1, "", "batch_locked"], [49, 1, 1, "", "bfloat16"], [49, 1, 1, "", "buffers"], [49, 1, 1, "", "children"], [49, 1, 1, "", "close"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 1, 1, "", "double"], [49, 1, 1, "", "eval"], [49, 1, 1, "", "extra_repr"], [49, 1, 1, "", "fake_tensordict"], [49, 1, 1, "", "float"], [49, 1, 1, "", "forward"], [49, 1, 1, "", "get_buffer"], [49, 1, 1, "", "get_extra_state"], [49, 1, 1, "", "get_parameter"], [49, 1, 1, "", "get_submodule"], [49, 1, 1, "", "half"], [49, 1, 1, "", "ipu"], [49, 1, 1, "", "load_state_dict"], [49, 1, 1, "", "modules"], [49, 1, 1, "", "named_buffers"], [49, 1, 1, "", "named_children"], [49, 1, 1, "", "named_modules"], [49, 1, 1, "", "named_parameters"], [49, 1, 1, "", "parameters"], [49, 1, 1, "", "rand_step"], [49, 1, 1, "", "read_action"], [49, 1, 1, "", "read_done"], [49, 1, 1, "", "read_obs"], [49, 1, 1, "", "read_reward"], [49, 1, 1, "", "register_backward_hook"], [49, 1, 1, "", "register_buffer"], [49, 1, 1, "", "register_forward_hook"], [49, 1, 1, "", "register_forward_pre_hook"], [49, 1, 1, "", "register_full_backward_hook"], [49, 1, 1, "", "register_full_backward_pre_hook"], [49, 1, 1, "", "register_load_state_dict_post_hook"], [49, 1, 1, "", "register_module"], [49, 1, 1, "", "register_parameter"], [49, 1, 1, "", "requires_grad_"], [49, 1, 1, "", "reset"], [49, 1, 1, "", "rollout"], [49, 1, 1, "", "set_extra_state"], [49, 1, 1, "", "set_info_dict_reader"], [49, 1, 1, "", "set_seed"], [49, 1, 1, "", "share_memory"], [49, 3, 1, "", "specs"], [49, 1, 1, "", "state_dict"], [49, 1, 1, "", "step"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_empty"], [49, 1, 1, "", "train"], [49, 1, 1, "", "type"], [49, 1, 1, "", "xpu"], [49, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[51, 1, 1, "", "add_module"], [51, 1, 1, "", "apply"], [51, 3, 1, "", "batch_locked"], [51, 1, 1, "", "bfloat16"], [51, 1, 1, "", "buffers"], [51, 1, 1, "", "children"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 1, 1, "", "double"], [51, 1, 1, "", "eval"], [51, 1, 1, "", "extra_repr"], [51, 1, 1, "", "fake_tensordict"], [51, 1, 1, "", "float"], [51, 1, 1, "", "forward"], [51, 1, 1, "", "get_buffer"], [51, 1, 1, "", "get_extra_state"], [51, 1, 1, "", "get_parameter"], [51, 1, 1, "", "get_submodule"], [51, 1, 1, "", "half"], [51, 1, 1, "", "ipu"], [51, 1, 1, "", "load_state_dict"], [51, 1, 1, "", "modules"], [51, 1, 1, "", "named_buffers"], [51, 1, 1, "", "named_children"], [51, 1, 1, "", "named_modules"], [51, 1, 1, "", "named_parameters"], [51, 1, 1, "", "parameters"], [51, 1, 1, "", "rand_step"], [51, 1, 1, "", "register_backward_hook"], [51, 1, 1, "", "register_buffer"], [51, 1, 1, "", "register_forward_hook"], [51, 1, 1, "", "register_forward_pre_hook"], [51, 1, 1, "", "register_full_backward_hook"], [51, 1, 1, "", "register_full_backward_pre_hook"], [51, 1, 1, "", "register_load_state_dict_post_hook"], [51, 1, 1, "", "register_module"], [51, 1, 1, "", "register_parameter"], [51, 1, 1, "", "requires_grad_"], [51, 1, 1, "", "reset"], [51, 1, 1, "", "rollout"], [51, 1, 1, "", "set_extra_state"], [51, 1, 1, "", "set_seed"], [51, 1, 1, "", "share_memory"], [51, 3, 1, "", "specs"], [51, 1, 1, "", "state_dict"], [51, 1, 1, "", "step"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_empty"], [51, 1, 1, "", "train"], [51, 1, 1, "", "type"], [51, 1, 1, "", "update_kwargs"], [51, 1, 1, "", "xpu"], [51, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[52, 1, 1, "", "add_module"], [52, 1, 1, "", "apply"], [52, 3, 1, "", "batch_locked"], [52, 1, 1, "", "bfloat16"], [52, 1, 1, "", "buffers"], [52, 1, 1, "", "children"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 1, 1, "", "double"], [52, 1, 1, "", "eval"], [52, 1, 1, "", "extra_repr"], [52, 1, 1, "", "fake_tensordict"], [52, 1, 1, "", "float"], [52, 1, 1, "", "forward"], [52, 1, 1, "", "get_buffer"], [52, 1, 1, "", "get_extra_state"], [52, 1, 1, "", "get_parameter"], [52, 1, 1, "", "get_submodule"], [52, 1, 1, "", "half"], [52, 1, 1, "", "ipu"], [52, 1, 1, "", "load_state_dict"], [52, 1, 1, "", "modules"], [52, 1, 1, "", "named_buffers"], [52, 1, 1, "", "named_children"], [52, 1, 1, "", "named_modules"], [52, 1, 1, "", "named_parameters"], [52, 1, 1, "", "parameters"], [52, 1, 1, "", "rand_step"], [52, 1, 1, "", "register_backward_hook"], [52, 1, 1, "", "register_buffer"], [52, 1, 1, "", "register_forward_hook"], [52, 1, 1, "", "register_forward_pre_hook"], [52, 1, 1, "", "register_full_backward_hook"], [52, 1, 1, "", "register_full_backward_pre_hook"], [52, 1, 1, "", "register_load_state_dict_post_hook"], [52, 1, 1, "", "register_module"], [52, 1, 1, "", "register_parameter"], [52, 1, 1, "", "requires_grad_"], [52, 1, 1, "", "reset"], [52, 1, 1, "", "rollout"], [52, 1, 1, "", "set_extra_state"], [52, 1, 1, "", "set_seed"], [52, 1, 1, "", "share_memory"], [52, 3, 1, "", "specs"], [52, 1, 1, "", "state_dict"], [52, 1, 1, "", "step"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_empty"], [52, 1, 1, "", "train"], [52, 1, 1, "", "type"], [52, 1, 1, "", "update_kwargs"], [52, 1, 1, "", "xpu"], [52, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.dm_control": [[53, 2, 1, "", "DMControlEnv"], [54, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[55, 2, 1, "", "GymEnv"], [56, 2, 1, "", "GymWrapper"]], "torchrl.envs.model_based.dreamer": [[57, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[58, 0, 1, "", "BinarizeReward"], [59, 0, 1, "", "CatFrames"], [60, 0, 1, "", "CatTensors"], [61, 0, 1, "", "CenterCrop"], [62, 0, 1, "", "Compose"], [63, 0, 1, "", "DoubleToFloat"], [64, 0, 1, "", "FiniteTensorDictCheck"], [65, 0, 1, "", "FlattenObservation"], [66, 0, 1, "", "GrayScale"], [67, 0, 1, "", "NoopResetEnv"], [68, 0, 1, "", "ObservationNorm"], [69, 0, 1, "", "ObservationTransform"], [70, 0, 1, "", "PinMemoryTransform"], [71, 0, 1, "", "R3MTransform"], [72, 0, 1, "", "Resize"], [73, 0, 1, "", "RewardClipping"], [74, 0, 1, "", "RewardScaling"], [75, 0, 1, "", "TensorDictPrimer"], [76, 0, 1, "", "ToTensorImage"], [77, 0, 1, "", "Transform"], [78, 0, 1, "", "TransformedEnv"], [79, 0, 1, "", "UnsqueezeTransform"], [80, 0, 1, "", "VIPTransform"], [81, 0, 1, "", "VecNorm"], [82, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[58, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[59, 1, 1, "", "reset"], [59, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[60, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[61, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[62, 1, 1, "", "reset"], [62, 1, 1, "", "to"], [62, 1, 1, "", "transform_input_spec"], [62, 1, 1, "", "transform_observation_spec"], [62, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[63, 1, 1, "", "transform_input_spec"], [63, 1, 1, "", "transform_observation_spec"], [63, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.FlattenObservation": [[65, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[66, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[67, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[68, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[71, 1, 1, "", "forward"], [71, 1, 1, "", "reset"], [71, 1, 1, "", "to"], [71, 1, 1, "", "transform_input_spec"], [71, 1, 1, "", "transform_observation_spec"], [71, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Resize": [[72, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[73, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[74, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[75, 1, 1, "", "reset"], [75, 1, 1, "", "to"], [75, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[76, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[77, 1, 1, "", "forward"], [77, 1, 1, "", "reset"], [77, 1, 1, "", "transform_input_spec"], [77, 1, 1, "", "transform_observation_spec"], [77, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[78, 3, 1, "", "action_spec"], [78, 3, 1, "", "batch_locked"], [78, 1, 1, "", "eval"], [78, 3, 1, "", "input_spec"], [78, 1, 1, "", "load_state_dict"], [78, 3, 1, "", "observation_spec"], [78, 3, 1, "", "reward_spec"], [78, 1, 1, "", "set_seed"], [78, 1, 1, "", "state_dict"], [78, 1, 1, "", "to"], [78, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[79, 1, 1, "", "forward"], [79, 1, 1, "", "transform_input_spec"], [79, 1, 1, "", "transform_observation_spec"], [79, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPTransform": [[80, 1, 1, "", "forward"], [80, 1, 1, "", "reset"], [80, 1, 1, "", "to"], [80, 1, 1, "", "transform_input_spec"], [80, 1, 1, "", "transform_observation_spec"], [80, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VecNorm": [[81, 1, 1, "", "build_td_for_shared_vecnorm"], [81, 1, 1, "", "get_extra_state"], [81, 1, 1, "", "set_extra_state"], [81, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[82, 1, 1, "", "reset"]], "torchrl.envs.utils": [[83, 2, 1, "", "exploration_mode"], [84, 2, 1, "", "get_available_libraries"], [85, 2, 1, "", "set_exploration_mode"], [86, 2, 1, "", "step_mdp"]], "torchrl.modules": [[87, 0, 1, "", "Actor"], [88, 0, 1, "", "ActorCriticOperator"], [89, 0, 1, "", "ActorCriticWrapper"], [90, 0, 1, "", "ActorValueOperator"], [91, 0, 1, "", "CEMPlanner"], [92, 0, 1, "", "ConvNet"], [93, 0, 1, "", "DdpgCnnActor"], [94, 0, 1, "", "DdpgCnnQNet"], [95, 0, 1, "", "DdpgMlpActor"], [96, 0, 1, "", "DdpgMlpQNet"], [97, 0, 1, "", "Delta"], [98, 0, 1, "", "DistributionalDQNnet"], [99, 0, 1, "", "DistributionalQValueActor"], [100, 0, 1, "", "DreamerActor"], [101, 0, 1, "", "DuelingCnnDQNet"], [102, 0, 1, "", "LSTMNet"], [103, 0, 1, "", "MLP"], [104, 0, 1, "", "MPCPlannerBase"], [105, 0, 1, "", "NoisyLazyLinear"], [106, 0, 1, "", "NoisyLinear"], [107, 0, 1, "", "ObsDecoder"], [108, 0, 1, "", "ObsEncoder"], [109, 0, 1, "", "OneHotCategorical"], [110, 0, 1, "", "ProbabilisticActor"], [111, 0, 1, "", "ProbabilisticTensorDictModule"], [112, 0, 1, "", "QValueActor"], [113, 0, 1, "", "RSSMPosterior"], [114, 0, 1, "", "RSSMPrior"], [115, 0, 1, "", "Squeeze2dLayer"], [116, 0, 1, "", "SqueezeLayer"], [117, 0, 1, "", "TanhDelta"], [118, 0, 1, "", "TanhNormal"], [119, 0, 1, "", "TensorDictModule"], [120, 0, 1, "", "TensorDictModuleWrapper"], [121, 0, 1, "", "TensorDictSequential"], [122, 0, 1, "", "TruncatedNormal"], [123, 0, 1, "", "ValueOperator"], [124, 0, 1, "", "reset_noise"]], "torchrl.modules.ActorCriticOperator": [[88, 1, 1, "", "get_critic_operator"], [88, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorCriticWrapper": [[89, 1, 1, "", "get_policy_operator"], [89, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorValueOperator": [[90, 1, 1, "", "get_policy_operator"], [90, 1, 1, "", "get_value_operator"]], "torchrl.modules.CEMPlanner": [[91, 1, 1, "", "planning"]], "torchrl.modules.DdpgCnnActor": [[93, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[94, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[95, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[96, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[97, 1, 1, "", "log_prob"], [97, 3, 1, "", "mean"], [97, 3, 1, "", "mode"], [97, 1, 1, "", "rsample"], [97, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[98, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[100, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[101, 1, 1, "", "forward"]], "torchrl.modules.LSTMNet": [[102, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[103, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[104, 1, 1, "", "forward"], [104, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[105, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[107, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[108, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[109, 1, 1, "", "log_prob"], [109, 3, 1, "", "mode"], [109, 1, 1, "", "rsample"], [109, 1, 1, "", "sample"]], "torchrl.modules.ProbabilisticTensorDictModule": [[111, 1, 1, "", "forward"], [111, 1, 1, "", "make_functional_with_buffers"]], "torchrl.modules.RSSMPosterior": [[113, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[114, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[116, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[117, 3, 1, "", "mean"], [117, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[118, 3, 1, "", "mode"]], "torchrl.modules.TensorDictModule": [[119, 1, 1, "", "forward"], [119, 1, 1, "", "make_functional_with_buffers"], [119, 1, 1, "", "random"], [119, 1, 1, "", "random_sample"], [119, 1, 1, "", "to"]], "torchrl.modules.TensorDictModuleWrapper": [[120, 1, 1, "", "forward"]], "torchrl.modules.TensorDictSequential": [[121, 1, 1, "", "forward"], [121, 1, 1, "", "make_functional_with_buffers"], [121, 1, 1, "", "select_subsequence"]], "torchrl.modules.TruncatedNormal": [[122, 1, 1, "", "log_prob"], [122, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module.actors": [[125, 0, 1, "", "DistributionalQValueHook"], [126, 0, 1, "", "QValueHook"]], "torchrl.objectives": [[127, 0, 1, "", "ClipPPOLoss"], [128, 0, 1, "", "DDPGLoss"], [129, 0, 1, "", "DQNLoss"], [130, 0, 1, "", "DistributionalDQNLoss"], [131, 0, 1, "", "HardUpdate"], [132, 0, 1, "", "KLPENPPOLoss"], [133, 0, 1, "", "PPOLoss"], [134, 0, 1, "", "REDQLoss"], [135, 0, 1, "", "SACLoss"], [136, 0, 1, "", "SoftUpdate"], [137, 0, 1, "", "distance_loss"], [138, 0, 1, "", "hold_out_net"], [139, 0, 1, "", "hold_out_params"], [140, 0, 1, "", "next_state_value"]], "torchrl.objectives.ClipPPOLoss": [[127, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[128, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[129, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[130, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[132, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[133, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[134, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[135, 1, 1, "", "forward"]], "torchrl.objectives.value": [[141, 0, 1, "", "GAE"], [142, 0, 1, "", "TDEstimate"], [143, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[141, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[142, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[143, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[144, 0, 1, "", "generalized_advantage_estimate"], [145, 0, 1, "", "td_advantage_estimate"], [146, 0, 1, "", "td_lambda_advantage_estimate"], [147, 0, 1, "", "td_lambda_return_estimate"], [148, 0, 1, "", "vec_generalized_advantage_estimate"], [149, 0, 1, "", "vec_td_lambda_advantage_estimate"], [150, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.trainers": [[151, 0, 1, "", "BatchSubSampler"], [152, 0, 1, "", "ClearCudaCache"], [153, 0, 1, "", "CountFramesLog"], [154, 0, 1, "", "LogReward"], [155, 0, 1, "", "Recorder"], [156, 0, 1, "", "ReplayBuffer"], [157, 0, 1, "", "RewardNormalizer"], [158, 0, 1, "", "SelectKeys"], [159, 0, 1, "", "Trainer"], [160, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.ReplayBuffer": [[156, 1, 1, "", "add"], [156, 1, 1, "", "extend"], [156, 1, 1, "", "sample"]], "torchrl.trainers.helpers": [[161, 2, 1, "", "correct_for_frame_skip"], [162, 2, 1, "", "get_stats_random_rollout"], [163, 2, 1, "", "make_collector_offpolicy"], [164, 2, 1, "", "make_collector_onpolicy"], [165, 2, 1, "", "make_ddpg_actor"], [166, 2, 1, "", "make_ddpg_loss"], [167, 2, 1, "", "make_dqn_actor"], [168, 2, 1, "", "make_dqn_loss"], [169, 2, 1, "", "make_ppo_loss"], [170, 2, 1, "", "make_ppo_model"], [171, 2, 1, "", "make_redq_loss"], [172, 2, 1, "", "make_redq_model"], [173, 2, 1, "", "make_replay_buffer"], [174, 2, 1, "", "make_sac_loss"], [175, 2, 1, "", "make_sac_model"], [176, 2, 1, "", "make_target_updater"], [177, 2, 1, "", "make_trainer"], [178, 2, 1, "", "parallel_env_constructor"], [179, 2, 1, "", "sync_async_collector"], [180, 2, 1, "", "sync_sync_collector"], [181, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"exampl": 0, "galleri": 0, "welcom": 1, "torchrl": [1, 2, 3, 4, 6, 184, 185, 186, 187], "document": [1, 9], "content": [1, 183], "indic": 1, "tabl": 1, "collector": 2, "packag": [2, 3, 4, 184, 185, 186, 187], "data": [2, 3], "helper": [2, 4], "function": 2, "replai": 3, "buffer": 3, "compos": [3, 62], "prototyp": 3, "tensordict": [3, 29, 184], "tensorspec": [3, 32], "util": [3, 184, 185, 186], "env": 4, "domain": 4, "specif": 4, "librari": 4, "transform": [4, 77], "work": [5, 6], "gym": 5, "version": [5, 7], "habitat": 6, "lab": 6, "set": 6, "up": 6, "your": 6, "environ": [6, 7], "instal": [6, 7], "from": [6, 7], "pip": [6, 7], "us": [6, 9], "common": [6, 7], "issu": [6, 7], "about": 7, "mujoco": 7, "prerequisit": 7, "render": 7, "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "clone": 7, "repo": [7, 9], "when": 7, "pro": 8, "tip": 8, "train": 8, "cluster": 8, "resourc": 9, "pytorch": 9, "functorch": 9, "rl": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "implement_for": 10, "multisyncdatacollector": 11, "multiasyncdatacollector": 12, "syncdatacollector": 13, "asyncdatacollector": 14, "split_trajectori": 15, "binarydiscretetensorspec": 16, "boundedtensorspec": 17, "compositespec": 18, "discretetensorspec": 19, "lazystackedtensordict": 20, "multonehotdiscretetensorspec": 21, "multistep": 22, "ndboundedtensorspec": 23, "ndunboundedcontinuoustensorspec": 24, "onehotdiscretetensorspec": 25, "prioritizedreplaybuff": 26, "replaybuff": [27, 35, 156], "subtensordict": 28, "tensordictprioritizedreplaybuff": 30, "tensordictreplaybuff": [31, 36], "unboundedcontinuoustensorspec": 33, "remotetensordictreplaybuff": 34, "prioritizedsampl": 37, "randomsampl": 38, "sampler": 39, "lazymemmapstorag": 40, "lazytensorstorag": 41, "liststorag": 42, "storag": 43, "roundrobinwrit": 44, "writer": 45, "expand_as_right": 46, "expand_right": 47, "envbas": 48, "gymlikeenv": 49, "modelbasedenvbas": 50, "parallelenv": 51, "serialenv": 52, "dmcontrolenv": 53, "dmcontrolwrapp": 54, "gymenv": 55, "gymwrapp": 56, "dreamerenv": 57, "binarizereward": 58, "catfram": 59, "cattensor": 60, "centercrop": 61, "doubletofloat": 63, "finitetensordictcheck": 64, "flattenobserv": 65, "grayscal": 66, "noopresetenv": 67, "observationnorm": 68, "observationtransform": 69, "pinmemorytransform": 70, "r3mtransform": 71, "resiz": 72, "rewardclip": 73, "rewardsc": 74, "tensordictprim": 75, "totensorimag": 76, "transformedenv": 78, "unsqueezetransform": 79, "viptransform": 80, "vecnorm": 81, "gsdenois": 82, "exploration_mod": 83, "get_available_librari": 84, "set_exploration_mod": 85, "step_mdp": 86, "actor": 87, "actorcriticoper": 88, "actorcriticwrapp": 89, "actorvalueoper": 90, "cemplann": 91, "convnet": 92, "ddpgcnnactor": 93, "ddpgcnnqnet": 94, "ddpgmlpactor": 95, "ddpgmlpqnet": 96, "delta": 97, "distributionaldqnnet": 98, "distributionalqvalueactor": 99, "dreameractor": 100, "duelingcnndqnet": 101, "lstmnet": 102, "mlp": 103, "mpcplannerbas": 104, "noisylazylinear": 105, "noisylinear": 106, "obsdecod": 107, "obsencod": 108, "onehotcategor": 109, "probabilisticactor": 110, "probabilistictensordictmodul": 111, "qvalueactor": 112, "rssmposterior": 113, "rssmprior": 114, "squeeze2dlay": 115, "squeezelay": 116, "tanhdelta": 117, "tanhnorm": 118, "tensordictmodul": 119, "tensordictmodulewrapp": 120, "tensordictsequenti": 121, "truncatednorm": 122, "valueoper": 123, "reset_nois": 124, "distributionalqvaluehook": 125, "qvaluehook": 126, "clipppoloss": 127, "ddpgloss": 128, "dqnloss": 129, "distributionaldqnloss": 130, "hardupd": 131, "klpenppoloss": 132, "ppoloss": 133, "redqloss": 134, "sacloss": 135, "softupd": 136, "distance_loss": 137, "hold_out_net": 138, "hold_out_param": 139, "next_state_valu": 140, "gae": 141, "tdestim": 142, "tdlambdaestim": 143, "generalized_advantage_estim": 144, "td_advantage_estim": 145, "td_lambda_advantage_estim": 146, "td_lambda_return_estim": 147, "vec_generalized_advantage_estim": 148, "vec_td_lambda_advantage_estim": 149, "vec_td_lambda_return_estim": 150, "batchsubsampl": 151, "clearcudacach": 152, "countframeslog": 153, "logreward": 154, "record": 155, "rewardnorm": 157, "selectkei": 158, "trainer": [159, 186], "updateweight": 160, "correct_for_frame_skip": 161, "get_stats_random_rollout": 162, "make_collector_offpolici": 163, "make_collector_onpolici": 164, "make_ddpg_actor": 165, "make_ddpg_loss": 166, "make_dqn_actor": 167, "make_dqn_loss": 168, "make_ppo_loss": 169, "make_ppo_model": 170, "make_redq_loss": 171, "make_redq_model": 172, "make_replay_buff": 173, "make_sac_loss": 174, "make_sac_model": 175, "make_target_updat": 176, "make_train": 177, "parallel_env_constructor": 178, "sync_async_collector": 179, "sync_sync_collector": 180, "transformed_env_constructor": 181, "api": 182, "refer": 182, "knowledg": 183, "base": 183, "contribut": 183, "modul": 184, "hook": [184, 186], "model": 184, "explor": 184, "planner": 184, "distribut": 184, "object": 185, "dqn": 185, "ddpg": 185, "sac": 185, "redq": 185, "ppo": 185, "return": 185, "builder": 186, "_util": 187}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Example gallery": [[0, "example-gallery"]], "Welcome to the TorchRL Documentation!": [[1, "welcome-to-the-torchrl-documentation"]], "Contents:": [[1, null], [183, null]], "Indices and tables": [[1, "indices-and-tables"]], "torchrl.collectors package": [[2, "torchrl-collectors-package"]], "Data collectors": [[2, "data-collectors"]], "Helper functions": [[2, "helper-functions"]], "torchrl.data package": [[3, "torchrl-data-package"]], "Replay Buffers": [[3, "replay-buffers"]], "Composable Replay Buffers (Prototype)": [[3, "composable-replay-buffers-prototype"]], "TensorDict": [[3, "tensordict"], [29, "tensordict"]], "TensorSpec": [[3, "tensorspec"], [32, "tensorspec"]], "Utils": [[3, "utils"], [184, "utils"], [185, "utils"], [186, "utils"]], "torchrl.envs package": [[4, "torchrl-envs-package"]], "Helpers": [[4, "helpers"]], "Domain-specific": [[4, "domain-specific"]], "Libraries": [[4, "libraries"]], "Transforms": [[4, "transforms"]], "Working with gym": [[5, "working-with-gym"]], "Versioning": [[5, "versioning"]], "Working with habitat-lab": [[6, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[6, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[6, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[6, "installing-torchrl"]], "Using Habitat": [[6, "using-habitat"]], "Common issues": [[6, "common-issues"]], "About MuJoCo": [[7, "about-mujoco"]], "Installing MuJoCo": [[7, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[7, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[7, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[7, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[7, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[7, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[7, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips": [[8, "pro-tips"]], "Training on a cluster": [[8, "training-on-a-cluster"]], "Useful resources": [[9, "useful-resources"]], "Pytorch documentation": [[9, "pytorch-documentation"]], "functorch documentation": [[9, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[9, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[9, "educational-resource"]], "Forums": [[9, "forums"]], "Repos": [[9, "repos"]], "implement_for": [[10, "implement-for"]], "MultiSyncDataCollector": [[11, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[12, "multiasyncdatacollector"]], "SyncDataCollector": [[13, "syncdatacollector"]], "aSyncDataCollector": [[14, "asyncdatacollector"]], "split_trajectories": [[15, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[16, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[17, "boundedtensorspec"]], "CompositeSpec": [[18, "compositespec"]], "DiscreteTensorSpec": [[19, "discretetensorspec"]], "LazyStackedTensorDict": [[20, "lazystackedtensordict"]], "MultOneHotDiscreteTensorSpec": [[21, "multonehotdiscretetensorspec"]], "MultiStep": [[22, "multistep"]], "NdBoundedTensorSpec": [[23, "ndboundedtensorspec"]], "NdUnboundedContinuousTensorSpec": [[24, "ndunboundedcontinuoustensorspec"]], "OneHotDiscreteTensorSpec": [[25, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[26, "prioritizedreplaybuffer"]], "ReplayBuffer": [[27, "replaybuffer"], [35, "replaybuffer"], [156, "replaybuffer"]], "SubTensorDict": [[28, "subtensordict"]], "TensorDictPrioritizedReplayBuffer": [[30, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[31, "tensordictreplaybuffer"], [36, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[33, "unboundedcontinuoustensorspec"]], "RemoteTensorDictReplayBuffer": [[34, "remotetensordictreplaybuffer"]], "PrioritizedSampler": [[37, "prioritizedsampler"]], "RandomSampler": [[38, "randomsampler"]], "Sampler": [[39, "sampler"]], "LazyMemmapStorage": [[40, "lazymemmapstorage"]], "LazyTensorStorage": [[41, "lazytensorstorage"]], "ListStorage": [[42, "liststorage"]], "Storage": [[43, "storage"]], "RoundRobinWriter": [[44, "roundrobinwriter"]], "Writer": [[45, "writer"]], "expand_as_right": [[46, "expand-as-right"]], "expand_right": [[47, "expand-right"]], "EnvBase": [[48, "envbase"]], "GymLikeEnv": [[49, "gymlikeenv"]], "ModelBasedEnvBase": [[50, "modelbasedenvbase"]], "ParallelEnv": [[51, "parallelenv"]], "SerialEnv": [[52, "serialenv"]], "DMControlEnv": [[53, "dmcontrolenv"]], "DMControlWrapper": [[54, "dmcontrolwrapper"]], "GymEnv": [[55, "gymenv"]], "GymWrapper": [[56, "gymwrapper"]], "DreamerEnv": [[57, "dreamerenv"]], "BinarizeReward": [[58, "binarizereward"]], "CatFrames": [[59, "catframes"]], "CatTensors": [[60, "cattensors"]], "CenterCrop": [[61, "centercrop"]], "Compose": [[62, "compose"]], "DoubleToFloat": [[63, "doubletofloat"]], "FiniteTensorDictCheck": [[64, "finitetensordictcheck"]], "FlattenObservation": [[65, "flattenobservation"]], "GrayScale": [[66, "grayscale"]], "NoopResetEnv": [[67, "noopresetenv"]], "ObservationNorm": [[68, "observationnorm"]], "ObservationTransform": [[69, "observationtransform"]], "PinMemoryTransform": [[70, "pinmemorytransform"]], "R3MTransform": [[71, "r3mtransform"]], "Resize": [[72, "resize"]], "RewardClipping": [[73, "rewardclipping"]], "RewardScaling": [[74, "rewardscaling"]], "TensorDictPrimer": [[75, "tensordictprimer"]], "ToTensorImage": [[76, "totensorimage"]], "Transform": [[77, "transform"]], "TransformedEnv": [[78, "transformedenv"]], "UnsqueezeTransform": [[79, "unsqueezetransform"]], "VIPTransform": [[80, "viptransform"]], "VecNorm": [[81, "vecnorm"]], "gSDENoise": [[82, "gsdenoise"]], "exploration_mode": [[83, "exploration-mode"]], "get_available_libraries": [[84, "get-available-libraries"]], "set_exploration_mode": [[85, "set-exploration-mode"]], "step_mdp": [[86, "step-mdp"]], "Actor": [[87, "actor"]], "ActorCriticOperator": [[88, "actorcriticoperator"]], "ActorCriticWrapper": [[89, "actorcriticwrapper"]], "ActorValueOperator": [[90, "actorvalueoperator"]], "CEMPlanner": [[91, "cemplanner"]], "ConvNet": [[92, "convnet"]], "DdpgCnnActor": [[93, "ddpgcnnactor"]], "DdpgCnnQNet": [[94, "ddpgcnnqnet"]], "DdpgMlpActor": [[95, "ddpgmlpactor"]], "DdpgMlpQNet": [[96, "ddpgmlpqnet"]], "Delta": [[97, "delta"]], "DistributionalDQNnet": [[98, "distributionaldqnnet"]], "DistributionalQValueActor": [[99, "distributionalqvalueactor"]], "DreamerActor": [[100, "dreameractor"]], "DuelingCnnDQNet": [[101, "duelingcnndqnet"]], "LSTMNet": [[102, "lstmnet"]], "MLP": [[103, "mlp"]], "MPCPlannerBase": [[104, "mpcplannerbase"]], "NoisyLazyLinear": [[105, "noisylazylinear"]], "NoisyLinear": [[106, "noisylinear"]], "ObsDecoder": [[107, "obsdecoder"]], "ObsEncoder": [[108, "obsencoder"]], "OneHotCategorical": [[109, "onehotcategorical"]], "ProbabilisticActor": [[110, "probabilisticactor"]], "ProbabilisticTensorDictModule": [[111, "probabilistictensordictmodule"]], "QValueActor": [[112, "qvalueactor"]], "RSSMPosterior": [[113, "rssmposterior"]], "RSSMPrior": [[114, "rssmprior"]], "Squeeze2dLayer": [[115, "squeeze2dlayer"]], "SqueezeLayer": [[116, "squeezelayer"]], "TanhDelta": [[117, "tanhdelta"]], "TanhNormal": [[118, "tanhnormal"]], "TensorDictModule": [[119, "tensordictmodule"]], "TensorDictModuleWrapper": [[120, "tensordictmodulewrapper"]], "TensorDictSequential": [[121, "tensordictsequential"]], "TruncatedNormal": [[122, "truncatednormal"]], "ValueOperator": [[123, "valueoperator"]], "reset_noise": [[124, "reset-noise"]], "DistributionalQValueHook": [[125, "distributionalqvaluehook"]], "QValueHook": [[126, "qvaluehook"]], "ClipPPOLoss": [[127, "clipppoloss"]], "DDPGLoss": [[128, "ddpgloss"]], "DQNLoss": [[129, "dqnloss"]], "DistributionalDQNLoss": [[130, "distributionaldqnloss"]], "HardUpdate": [[131, "hardupdate"]], "KLPENPPOLoss": [[132, "klpenppoloss"]], "PPOLoss": [[133, "ppoloss"]], "REDQLoss": [[134, "redqloss"]], "SACLoss": [[135, "sacloss"]], "SoftUpdate": [[136, "softupdate"]], "distance_loss": [[137, "distance-loss"]], "hold_out_net": [[138, "hold-out-net"]], "hold_out_params": [[139, "hold-out-params"]], "next_state_value": [[140, "next-state-value"]], "GAE": [[141, "gae"]], "TDEstimate": [[142, "tdestimate"]], "TDLambdaEstimate": [[143, "tdlambdaestimate"]], "generalized_advantage_estimate": [[144, "generalized-advantage-estimate"]], "td_advantage_estimate": [[145, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[146, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[147, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[148, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[149, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[150, "vec-td-lambda-return-estimate"]], "BatchSubSampler": [[151, "batchsubsampler"]], "ClearCudaCache": [[152, "clearcudacache"]], "CountFramesLog": [[153, "countframeslog"]], "LogReward": [[154, "logreward"]], "Recorder": [[155, "recorder"]], "RewardNormalizer": [[157, "rewardnormalizer"]], "SelectKeys": [[158, "selectkeys"]], "Trainer": [[159, "trainer"]], "UpdateWeights": [[160, "updateweights"]], "correct_for_frame_skip": [[161, "correct-for-frame-skip"]], "get_stats_random_rollout": [[162, "get-stats-random-rollout"]], "make_collector_offpolicy": [[163, "make-collector-offpolicy"]], "make_collector_onpolicy": [[164, "make-collector-onpolicy"]], "make_ddpg_actor": [[165, "make-ddpg-actor"]], "make_ddpg_loss": [[166, "make-ddpg-loss"]], "make_dqn_actor": [[167, "make-dqn-actor"]], "make_dqn_loss": [[168, "make-dqn-loss"]], "make_ppo_loss": [[169, "make-ppo-loss"]], "make_ppo_model": [[170, "make-ppo-model"]], "make_redq_loss": [[171, "make-redq-loss"]], "make_redq_model": [[172, "make-redq-model"]], "make_replay_buffer": [[173, "make-replay-buffer"]], "make_sac_loss": [[174, "make-sac-loss"]], "make_sac_model": [[175, "make-sac-model"]], "make_target_updater": [[176, "make-target-updater"]], "make_trainer": [[177, "make-trainer"]], "parallel_env_constructor": [[178, "parallel-env-constructor"]], "sync_async_collector": [[179, "sync-async-collector"]], "sync_sync_collector": [[180, "sync-sync-collector"]], "transformed_env_constructor": [[181, "transformed-env-constructor"]], "API Reference": [[182, "api-reference"]], "Knowledge Base": [[183, "knowledge-base"]], "Contributing": [[183, "contributing"]], "torchrl.modules package": [[184, "torchrl-modules-package"]], "TensorDict modules": [[184, "tensordict-modules"]], "Hooks": [[184, "hooks"]], "Models": [[184, "models"]], "Exploration": [[184, "exploration"]], "Planners": [[184, "planners"]], "Distributions": [[184, "distributions"]], "torchrl.objectives package": [[185, "torchrl-objectives-package"]], "DQN": [[185, "dqn"]], "DDPG": [[185, "ddpg"]], "SAC": [[185, "sac"]], "REDQ": [[185, "redq"]], "PPO": [[185, "ppo"]], "Returns": [[185, "returns"]], "torchrl.trainers package": [[186, "torchrl-trainers-package"]], "Trainer and hooks": [[186, "trainer-and-hooks"]], "Builders": [[186, "builders"]], "torchrl._utils package": [[187, "torchrl-utils-package"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[10, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors)": [[11, "torchrl.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors)": [[12, "torchrl.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "syncdatacollector (class in torchrl.collectors)": [[13, "torchrl.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors)": [[14, "torchrl.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[15, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[16, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[17, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.encode"]], "index() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[18, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.encode"]], "index() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.is_in"]], "project() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[19, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.encode"]], "index() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.zero"]], "lazystackedtensordict (class in torchrl.data)": [[20, "torchrl.data.LazyStackedTensorDict"]], "all() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.all"]], "any() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.any"]], "apply() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.apply"]], "apply_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.apply_"]], "batch_dims (torchrl.data.lazystackedtensordict property)": [[20, "torchrl.data.LazyStackedTensorDict.batch_dims"]], "batch_size (torchrl.data.lazystackedtensordict property)": [[20, "torchrl.data.LazyStackedTensorDict.batch_size"]], "chunk() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.chunk"]], "clone() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.clone"]], "contiguous() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.contiguous"]], "copy_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.copy_"]], "copy_at_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.copy_at_"]], "cpu() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.cpu"]], "cuda() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.cuda"]], "del_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.del_"]], "detach() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.detach"]], "detach_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.detach_"]], "device (torchrl.data.lazystackedtensordict property)": [[20, "torchrl.data.LazyStackedTensorDict.device"]], "empty() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.empty"]], "expand() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.expand"]], "fill_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.fill_"]], "get() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.get"]], "get_at() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.get_at"]], "get_sub_tensordict() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.get_sub_tensordict"]], "is_contiguous() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.is_contiguous"]], "is_memmap() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.is_memmap"]], "is_shared() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.is_shared"]], "items() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.items"]], "items_meta() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.items_meta"]], "keys() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.keys"]], "masked_fill() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.masked_fill"]], "masked_fill_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.masked_fill_"]], "masked_select() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.masked_select"]], "memmap_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.memmap_"]], "numel() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.numel"]], "permute() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.permute"]], "pin_memory() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.pin_memory"]], "rename_key() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.rename_key"]], "reshape() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.reshape"]], "select() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.select"]], "set() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.set"]], "set_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.set_"]], "set_at_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.set_at_"]], "shape (torchrl.data.lazystackedtensordict property)": [[20, "torchrl.data.LazyStackedTensorDict.shape"]], "share_memory_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.share_memory_"]], "size() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.size"]], "squeeze() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.squeeze"]], "to() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.to"]], "to_dict() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.to_dict"]], "to_tensordict() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.to_tensordict"]], "unbind() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.unbind"]], "unsqueeze() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.unsqueeze"]], "update() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.update"]], "update_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.update_"]], "update_at_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.update_at_"]], "values() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.values"]], "values_meta() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.values_meta"]], "view() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.view"]], "zero_() (torchrl.data.lazystackedtensordict method)": [[20, "torchrl.data.LazyStackedTensorDict.zero_"]], "multonehotdiscretetensorspec (class in torchrl.data)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multonehotdiscretetensorspec method)": [[21, "torchrl.data.MultOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[22, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[22, "torchrl.data.MultiStep.zero_grad"]], "ndboundedtensorspec (class in torchrl.data)": [[23, "torchrl.data.NdBoundedTensorSpec"]], "assert_is_in() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.encode"]], "index() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.index"]], "is_in() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.is_in"]], "project() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.project"]], "rand() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.type_check"]], "zero() (torchrl.data.ndboundedtensorspec method)": [[23, "torchrl.data.NdBoundedTensorSpec.zero"]], "ndunboundedcontinuoustensorspec (class in torchrl.data)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[24, "torchrl.data.NdUnboundedContinuousTensorSpec.zero"]], "onehotdiscretetensorspec (class in torchrl.data)": [[25, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[25, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[26, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.add"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.prioritizedreplaybuffer method)": [[26, "torchrl.data.PrioritizedReplayBuffer.update_priority"]], "replaybuffer (class in torchrl.data)": [[27, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.add"]], "extend() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.extend"]], "sample() (torchrl.data.replaybuffer method)": [[27, "torchrl.data.ReplayBuffer.sample"]], "subtensordict (class in torchrl.data)": [[28, "torchrl.data.SubTensorDict"]], "all() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.all"]], "any() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.any"]], "apply() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.apply"]], "apply_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.apply_"]], "batch_dims (torchrl.data.subtensordict property)": [[28, "torchrl.data.SubTensorDict.batch_dims"]], "batch_size (torchrl.data.subtensordict property)": [[28, "torchrl.data.SubTensorDict.batch_size"]], "chunk() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.chunk"]], "clone() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.clone"]], "contiguous() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.contiguous"]], "copy_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.copy_"]], "copy_at_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.copy_at_"]], "cpu() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.cpu"]], "cuda() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.cuda"]], "del_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.del_"]], "detach() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.detach"]], "detach_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.detach_"]], "device (torchrl.data.subtensordict property)": [[28, "torchrl.data.SubTensorDict.device"]], "empty() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.empty"]], "expand() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.expand"]], "fill_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.fill_"]], "get() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.get"]], "get_at() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.get_at"]], "get_sub_tensordict() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.get_sub_tensordict"]], "is_contiguous() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.is_contiguous"]], "is_memmap() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.is_memmap"]], "is_shared() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.is_shared"]], "items() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.items"]], "items_meta() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.items_meta"]], "keys() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.keys"]], "masked_fill() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.masked_fill"]], "masked_fill_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.masked_fill_"]], "masked_select() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.masked_select"]], "memmap_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.memmap_"]], "numel() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.numel"]], "permute() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.permute"]], "pin_memory() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.pin_memory"]], "rename_key() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.rename_key"]], "reshape() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.reshape"]], "select() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.select"]], "set() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.set"]], "set_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.set_"]], "set_at_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.set_at_"]], "shape (torchrl.data.subtensordict property)": [[28, "torchrl.data.SubTensorDict.shape"]], "share_memory_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.share_memory_"]], "size() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.size"]], "squeeze() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.squeeze"]], "to() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.to"]], "to_dict() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.to_dict"]], "to_tensordict() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.to_tensordict"]], "unbind() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.unbind"]], "unsqueeze() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.unsqueeze"]], "update() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.update"]], "update_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.update_"]], "update_at_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.update_at_"]], "values() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.values"]], "values_meta() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.values_meta"]], "view() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.view"]], "zero_() (torchrl.data.subtensordict method)": [[28, "torchrl.data.SubTensorDict.zero_"]], "tensordict (class in torchrl.data)": [[29, "torchrl.data.TensorDict"]], "all() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.all"]], "any() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.any"]], "apply() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.apply"]], "apply_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.apply_"]], "batch_dims (torchrl.data.tensordict property)": [[29, "torchrl.data.TensorDict.batch_dims"]], "batch_size (torchrl.data.tensordict property)": [[29, "torchrl.data.TensorDict.batch_size"]], "chunk() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.chunk"]], "clone() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.clone"]], "contiguous() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.contiguous"]], "copy_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.copy_"]], "copy_at_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.copy_at_"]], "cpu() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.cpu"]], "cuda() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.cuda"]], "del_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.del_"]], "detach() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.detach"]], "detach_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.detach_"]], "device (torchrl.data.tensordict property)": [[29, "torchrl.data.TensorDict.device"]], "empty() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.empty"]], "expand() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.expand"]], "fill_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.fill_"]], "get() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.get"]], "get_at() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.get_at"]], "get_sub_tensordict() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.get_sub_tensordict"]], "is_contiguous() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.is_contiguous"]], "is_memmap() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.is_memmap"]], "is_shared() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.is_shared"]], "items() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.items"]], "items_meta() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.items_meta"]], "keys() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.keys"]], "masked_fill() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.masked_fill"]], "masked_fill_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.masked_fill_"]], "masked_select() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.masked_select"]], "memmap_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.memmap_"]], "numel() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.numel"]], "permute() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.permute"]], "pin_memory() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.pin_memory"]], "rename_key() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.rename_key"]], "reshape() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.reshape"]], "select() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.select"]], "set() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.set"]], "set_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.set_"]], "set_at_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.set_at_"]], "shape (torchrl.data.tensordict property)": [[29, "torchrl.data.TensorDict.shape"]], "share_memory_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.share_memory_"]], "size() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.size"]], "squeeze() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.squeeze"]], "to() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.to"]], "to_dict() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.to_dict"]], "to_tensordict() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.to_tensordict"]], "unbind() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.unbind"]], "unsqueeze() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.unsqueeze"]], "update() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.update"]], "update_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.update_"]], "update_at_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.update_at_"]], "values() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.values"]], "values_meta() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.values_meta"]], "view() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.view"]], "zero_() (torchrl.data.tensordict method)": [[29, "torchrl.data.TensorDict.zero_"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[30, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[30, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[30, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[30, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[30, "torchrl.data.TensorDictPrioritizedReplayBuffer.update_priority"]], "tensordictreplaybuffer (class in torchrl.data)": [[31, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[31, "torchrl.data.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[31, "torchrl.data.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[31, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[32, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.encode"]], "index() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[32, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[33, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[33, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "remotetensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[34, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[34, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.add"]], "extend() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[34, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.extend"]], "sample() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[34, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.sample"]], "replaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[35, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[35, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.add"]], "extend() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[35, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.extend"]], "sample() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[35, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[36, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[36, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[36, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[36, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.sample"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[37, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[37, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[38, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[39, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[40, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[40, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[41, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[41, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[42, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[42, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[43, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[43, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[44, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[44, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[44, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[45, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[45, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[45, "torchrl.data.replay_buffers.writers.Writer.extend"]], "expand_as_right (class in torchrl.data.utils)": [[46, "torchrl.data.utils.expand_as_right"]], "expand_right (class in torchrl.data.utils)": [[47, "torchrl.data.utils.expand_right"]], "envbase (class in torchrl.envs)": [[48, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[48, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[48, "id0"], [48, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[48, "id1"], [48, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[48, "id2"], [48, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[48, "id3"], [48, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[48, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[48, "id4"], [48, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[48, "torchrl.envs.EnvBase.zero_grad"]], "gymlikeenv (class in torchrl.envs)": [[49, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[49, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[49, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[49, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[50, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[50, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[50, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[50, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[50, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[50, "torchrl.envs.step"]], "parallelenv (class in torchrl.envs)": [[51, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[51, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[51, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[51, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[52, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[52, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_full_backward_pre_hook() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[52, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[52, "torchrl.envs.SerialEnv.zero_grad"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[53, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[54, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[55, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[56, "torchrl.envs.libs.gym.GymWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[57, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[58, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[58, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[59, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[59, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[59, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[60, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[60, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[61, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[61, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.Compose"]], "reset() (torchrl.envs.transforms.compose method)": [[62, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[62, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[62, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[62, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[62, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[63, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[63, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[63, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[65, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "grayscale (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[66, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[67, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.ObservationNorm"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[68, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.R3MTransform"]], "forward() (torchrl.envs.transforms.r3mtransform method)": [[71, "torchrl.envs.transforms.R3MTransform.forward"]], "reset() (torchrl.envs.transforms.r3mtransform method)": [[71, "torchrl.envs.transforms.R3MTransform.reset"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[71, "torchrl.envs.transforms.R3MTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.r3mtransform method)": [[71, "torchrl.envs.transforms.R3MTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.r3mtransform method)": [[71, "torchrl.envs.transforms.R3MTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.r3mtransform method)": [[71, "torchrl.envs.transforms.R3MTransform.transform_reward_spec"]], "resize (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[72, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[73, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[74, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[75, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[75, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[75, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[76, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[77, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[77, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[77, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[77, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[77, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[78, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[78, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[78, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[78, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[78, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[78, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[78, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[78, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[78, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[78, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[78, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[79, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[79, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[79, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[79, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viptransform (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.VIPTransform"]], "forward() (torchrl.envs.transforms.viptransform method)": [[80, "torchrl.envs.transforms.VIPTransform.forward"]], "reset() (torchrl.envs.transforms.viptransform method)": [[80, "torchrl.envs.transforms.VIPTransform.reset"]], "to() (torchrl.envs.transforms.viptransform method)": [[80, "torchrl.envs.transforms.VIPTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.viptransform method)": [[80, "torchrl.envs.transforms.VIPTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.viptransform method)": [[80, "torchrl.envs.transforms.VIPTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.viptransform method)": [[80, "torchrl.envs.transforms.VIPTransform.transform_reward_spec"]], "vecnorm (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[81, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[81, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[81, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[81, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[82, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[82, "torchrl.envs.transforms.gSDENoise.reset"]], "exploration_mode() (in module torchrl.envs.utils)": [[83, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[84, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[85, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[86, "torchrl.envs.utils.step_mdp"]], "actor (class in torchrl.modules)": [[87, "torchrl.modules.Actor"]], "actorcriticoperator (class in torchrl.modules)": [[88, "torchrl.modules.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.actorcriticoperator method)": [[88, "torchrl.modules.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.actorcriticoperator method)": [[88, "torchrl.modules.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules)": [[89, "torchrl.modules.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.actorcriticwrapper method)": [[89, "torchrl.modules.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorcriticwrapper method)": [[89, "torchrl.modules.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules)": [[90, "torchrl.modules.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.actorvalueoperator method)": [[90, "torchrl.modules.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorvalueoperator method)": [[90, "torchrl.modules.ActorValueOperator.get_value_operator"]], "cemplanner (class in torchrl.modules)": [[91, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[91, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[92, "torchrl.modules.ConvNet"]], "ddpgcnnactor (class in torchrl.modules)": [[93, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[93, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[94, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[94, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[95, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[95, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[96, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[96, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[97, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[97, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[97, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[97, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[97, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[97, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[98, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[98, "torchrl.modules.DistributionalDQNnet.forward"]], "distributionalqvalueactor (class in torchrl.modules)": [[99, "torchrl.modules.DistributionalQValueActor"]], "dreameractor (class in torchrl.modules)": [[100, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[100, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[101, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[101, "torchrl.modules.DuelingCnnDQNet.forward"]], "lstmnet (class in torchrl.modules)": [[102, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[102, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[103, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[103, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[104, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[104, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[104, "torchrl.modules.MPCPlannerBase.planning"]], "noisylazylinear (class in torchrl.modules)": [[105, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[105, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[106, "torchrl.modules.NoisyLinear"]], "obsdecoder (class in torchrl.modules)": [[107, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[107, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[108, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[108, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[109, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[109, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[109, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[109, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[109, "torchrl.modules.OneHotCategorical.sample"]], "probabilisticactor (class in torchrl.modules)": [[110, "torchrl.modules.ProbabilisticActor"]], "probabilistictensordictmodule (class in torchrl.modules)": [[111, "torchrl.modules.ProbabilisticTensorDictModule"]], "forward() (torchrl.modules.probabilistictensordictmodule method)": [[111, "torchrl.modules.ProbabilisticTensorDictModule.forward"]], "make_functional_with_buffers() (torchrl.modules.probabilistictensordictmodule method)": [[111, "torchrl.modules.ProbabilisticTensorDictModule.make_functional_with_buffers"]], "qvalueactor (class in torchrl.modules)": [[112, "torchrl.modules.QValueActor"]], "rssmposterior (class in torchrl.modules)": [[113, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[113, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[114, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[114, "torchrl.modules.RSSMPrior.forward"]], "squeeze2dlayer (class in torchrl.modules)": [[115, "torchrl.modules.Squeeze2dLayer"]], "squeezelayer (class in torchrl.modules)": [[116, "torchrl.modules.SqueezeLayer"]], "forward() (torchrl.modules.squeezelayer method)": [[116, "torchrl.modules.SqueezeLayer.forward"]], "tanhdelta (class in torchrl.modules)": [[117, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[117, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[117, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[118, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[118, "torchrl.modules.TanhNormal.mode"]], "tensordictmodule (class in torchrl.modules)": [[119, "torchrl.modules.TensorDictModule"]], "forward() (torchrl.modules.tensordictmodule method)": [[119, "torchrl.modules.TensorDictModule.forward"]], "make_functional_with_buffers() (torchrl.modules.tensordictmodule method)": [[119, "torchrl.modules.TensorDictModule.make_functional_with_buffers"]], "random() (torchrl.modules.tensordictmodule method)": [[119, "torchrl.modules.TensorDictModule.random"]], "random_sample() (torchrl.modules.tensordictmodule method)": [[119, "torchrl.modules.TensorDictModule.random_sample"]], "to() (torchrl.modules.tensordictmodule method)": [[119, "torchrl.modules.TensorDictModule.to"]], "tensordictmodulewrapper (class in torchrl.modules)": [[120, "torchrl.modules.TensorDictModuleWrapper"]], "forward() (torchrl.modules.tensordictmodulewrapper method)": [[120, "torchrl.modules.TensorDictModuleWrapper.forward"]], "tensordictsequential (class in torchrl.modules)": [[121, "torchrl.modules.TensorDictSequential"]], "forward() (torchrl.modules.tensordictsequential method)": [[121, "torchrl.modules.TensorDictSequential.forward"]], "make_functional_with_buffers() (torchrl.modules.tensordictsequential method)": [[121, "torchrl.modules.TensorDictSequential.make_functional_with_buffers"]], "select_subsequence() (torchrl.modules.tensordictsequential method)": [[121, "torchrl.modules.TensorDictSequential.select_subsequence"]], "truncatednormal (class in torchrl.modules)": [[122, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[122, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[122, "torchrl.modules.TruncatedNormal.mode"]], "valueoperator (class in torchrl.modules)": [[123, "torchrl.modules.ValueOperator"]], "reset_noise (class in torchrl.modules)": [[124, "torchrl.modules.reset_noise"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[125, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[126, "torchrl.modules.tensordict_module.actors.QValueHook"]], "clipppoloss (class in torchrl.objectives)": [[127, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[127, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[128, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[128, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[129, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[129, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[130, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[130, "torchrl.objectives.DistributionalDQNLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[131, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[132, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[132, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[133, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[133, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[134, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[134, "torchrl.objectives.REDQLoss.forward"]], "sacloss (class in torchrl.objectives)": [[135, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[135, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[136, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[137, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[138, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[139, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[140, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[141, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[141, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[142, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[142, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[143, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[143, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[144, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[145, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[146, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[147, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[148, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[149, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[150, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "batchsubsampler (class in torchrl.trainers)": [[151, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[152, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[153, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[154, "torchrl.trainers.LogReward"]], "recorder (class in torchrl.trainers)": [[155, "torchrl.trainers.Recorder"]], "replaybuffer (class in torchrl.trainers)": [[156, "torchrl.trainers.ReplayBuffer"]], "add() (torchrl.trainers.replaybuffer method)": [[156, "torchrl.trainers.ReplayBuffer.add"]], "extend() (torchrl.trainers.replaybuffer method)": [[156, "torchrl.trainers.ReplayBuffer.extend"]], "sample() (torchrl.trainers.replaybuffer method)": [[156, "torchrl.trainers.ReplayBuffer.sample"]], "rewardnormalizer (class in torchrl.trainers)": [[157, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[158, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[159, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[160, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[161, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[162, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[163, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[164, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[165, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[166, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[167, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[168, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[169, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[170, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[171, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[172, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[173, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[174, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[175, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[176, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[177, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[178, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[179, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[180, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[181, "torchrl.trainers.helpers.transformed_env_constructor"]]}})