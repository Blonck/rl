Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.NdBoundedTensorSpec", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.Actor", "reference/generated/torchrl.modules.ActorCriticOperator", "reference/generated/torchrl.modules.ActorCriticWrapper", "reference/generated/torchrl.modules.ActorValueOperator", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueActor", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.ProbabilisticActor", "reference/generated/torchrl.modules.ProbabilisticTensorDictModule", "reference/generated/torchrl.modules.QValueActor", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TensorDictModule", "reference/generated/torchrl.modules.TensorDictModuleWrapper", "reference/generated/torchrl.modules.TensorDictSequential", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.ValueOperator", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBuffer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/index", "tutorials/multi_task", "tutorials/sg_execution_times", "tutorials/tensordict_module", "tutorials/tensordict_tutorial", "tutorials/torch_envs", "tutorials/torchrl_demo"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.NdBoundedTensorSpec.rst", "reference/generated/torchrl.data.NdUnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.Actor.rst", "reference/generated/torchrl.modules.ActorCriticOperator.rst", "reference/generated/torchrl.modules.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.ActorValueOperator.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.ProbabilisticActor.rst", "reference/generated/torchrl.modules.ProbabilisticTensorDictModule.rst", "reference/generated/torchrl.modules.QValueActor.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TensorDictModule.rst", "reference/generated/torchrl.modules.TensorDictModuleWrapper.rst", "reference/generated/torchrl.modules.TensorDictSequential.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.ValueOperator.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBuffer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/sg_execution_times.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_tutorial.rst", "tutorials/torch_envs.rst", "tutorials/torchrl_demo.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips", "Useful resources", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultOneHotDiscreteTensorSpec", "MultiStep", "NdBoundedTensorSpec", "NdUnboundedContinuousTensorSpec", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "TensorDictReplayBuffer", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "GymLikeEnv", "ModelBasedEnvBase", "ParallelEnv", "SerialEnv", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DoubleToFloat", "FiniteTensorDictCheck", "FlattenObservation", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "TensorDictPrimer", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPTransform", "VecNorm", "gSDENoise", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DistributionalQValueActor", "DreamerActor", "DuelingCnnDQNet", "LSTMNet", "MLP", "MPCPlannerBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "ProbabilisticActor", "ProbabilisticTensorDictModule", "QValueActor", "RSSMPosterior", "RSSMPrior", "TanhDelta", "TanhNormal", "TensorDictModule", "TensorDictModuleWrapper", "TensorDictSequential", "TruncatedNormal", "ValueOperator", "reset_noise", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "Recorder", "ReplayBuffer", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Demos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "README Demos", "Task-specific policy in multi-task environments", "Computation times", "TensorDictModule", "TensorDict", "TorchRL envs", "Introduction to TorchRL"], "terms": {"The": [0, 2, 3, 6, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31, 32, 39, 42, 43, 45, 46, 59, 65, 68, 71, 72, 75, 77, 84, 85, 88, 90, 91, 92, 93, 99, 101, 103, 107, 108, 110, 111, 114, 116, 118, 124, 127, 128, 129, 132, 135, 140, 151, 177, 179, 180, 187, 189, 194, 195, 196, 197], "tensordict": [0, 3, 10, 11, 12, 13, 14, 17, 18, 20, 26, 27, 30, 32, 36, 37, 42, 43, 44, 45, 46, 56, 57, 59, 60, 61, 64, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 88, 96, 99, 101, 107, 108, 109, 114, 115, 116, 118, 120, 121, 122, 123, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 151, 158, 159, 165, 167, 170, 172, 175, 183, 187, 189, 190, 191, 192, 193, 194, 196], "class": [0, 2, 3, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 179, 180, 181, 187, 189, 190, 194, 195, 196], "ha": [0, 6, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 44, 45, 46, 72, 75, 108, 114, 116, 132, 189, 190, 192, 194, 195, 196, 197], "been": [0, 6, 10, 11, 13, 42, 43, 45, 46, 74, 108, 114, 116, 190, 192, 196], "move": [0, 20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 78, 100, 114, 157, 190, 196, 197], "out": [0, 3, 20, 42, 43, 45, 46, 102, 103, 108, 114, 138, 139, 187, 194, 195, 196, 197], "dedic": [0, 85, 86, 87, 189, 192], "librari": [0, 6, 8, 81, 183, 184, 188, 189, 196], "take": [0, 3, 14, 42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 126, 144, 145, 146, 147, 148, 149, 150, 151, 160, 187, 189, 190, 194, 196], "look": [0, 4, 6, 20, 42, 43, 45, 46, 68, 108, 116, 190, 196, 197], "find": [0, 194], "sourc": [0, 6, 159, 189, 190, 191, 192, 194, 195, 196, 197], "code": [0, 3, 6, 68, 116, 191, 192, 193, 194, 196, 197], "github": [0, 2, 5, 6, 189, 196, 197], "i": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 55, 56, 57, 58, 59, 62, 64, 65, 68, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 159, 161, 162, 165, 170, 172, 175, 177, 181, 184, 187, 189, 190, 192, 194, 196, 197], "an": [0, 2, 3, 4, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 58, 61, 64, 65, 68, 69, 73, 74, 75, 78, 85, 86, 87, 89, 90, 91, 92, 93, 99, 100, 102, 105, 108, 122, 123, 126, 127, 130, 132, 133, 134, 135, 141, 142, 143, 155, 156, 159, 162, 165, 178, 179, 180, 181, 184, 189, 190, 192, 194, 195, 196, 197], "open": [0, 4, 6, 9, 197], "reinforc": [0, 2, 3, 8, 56, 90, 91, 92, 93, 120, 130, 131, 135, 136, 165, 190, 197], "learn": [0, 2, 3, 6, 8, 20, 56, 90, 91, 92, 93, 103, 120, 130, 131, 134, 135, 136, 165, 189, 190, 192, 196, 197], "rl": [0, 2, 7, 10, 11, 12, 13, 44, 84, 103, 107, 118, 133, 151, 184, 187, 189, 195, 196], "pytorch": [0, 2, 73, 159, 187, 189, 195, 196, 197], "It": [0, 3, 6, 20, 26, 42, 43, 44, 45, 46, 51, 75, 90, 92, 97, 108, 110, 111, 127, 130, 132, 133, 134, 135, 140, 155, 172, 184, 189, 194, 195, 196, 197], "provid": [0, 2, 3, 8, 12, 20, 24, 25, 26, 31, 42, 43, 44, 45, 46, 57, 64, 65, 68, 72, 75, 77, 78, 84, 89, 99, 100, 101, 107, 120, 140, 151, 156, 162, 170, 172, 175, 177, 184, 187, 189, 190, 192, 194, 196, 197], "python": [0, 3, 5, 6, 114, 187, 189, 190, 191, 192, 194, 196, 197], "first": [0, 3, 6, 9, 10, 11, 12, 13, 43, 57, 62, 65, 68, 73, 75, 100, 102, 105, 108, 114, 158, 189, 190, 192, 194, 195, 196, 197], "low": [0, 189, 190, 197], "high": [0, 8, 141, 144, 145, 148, 189, 190, 197], "level": [0, 17, 132, 189, 190, 197], "abstract": [0, 16, 17, 18, 21, 22, 28, 29, 41, 42, 66, 101, 187, 195, 197], "ar": [0, 2, 3, 6, 7, 8, 10, 11, 12, 13, 20, 23, 30, 31, 32, 36, 37, 38, 39, 42, 43, 44, 45, 46, 59, 60, 61, 68, 72, 74, 75, 77, 78, 83, 88, 93, 94, 99, 103, 106, 108, 111, 114, 115, 116, 126, 127, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 177, 181, 182, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197], "intend": [0, 6, 10, 11, 12, 13, 197], "effici": [0, 2, 103, 189, 190, 192, 195, 197], "modular": [0, 116, 197], "properli": [0, 195, 197], "test": [0, 3, 4, 99, 155, 177, 194, 197], "aim": [0, 3, 6, 68, 77, 100, 161, 184, 189, 190, 197], "support": [0, 3, 17, 39, 74, 81, 96, 108, 114, 116, 120, 130, 187, 194, 195, 197], "research": [0, 6, 8, 197], "most": [0, 3, 6, 20, 189, 196, 197], "written": [0, 26, 36, 42, 43, 45, 46, 108, 114, 127, 132, 133, 140, 187, 189, 192, 197], "highli": [0, 2, 196, 197], "wai": [0, 133, 190, 192, 196, 197], "can": [0, 3, 5, 6, 7, 9, 10, 11, 12, 13, 17, 18, 20, 26, 28, 30, 42, 43, 45, 46, 56, 59, 64, 65, 68, 72, 74, 75, 77, 78, 88, 101, 103, 108, 113, 114, 115, 116, 117, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 140, 155, 170, 172, 175, 179, 180, 181, 184, 187, 189, 190, 192, 194, 196, 197], "easili": [0, 3, 6, 45, 46, 170, 172, 175, 190, 195, 196, 197], "swap": [0, 3, 197], "compon": [0, 3, 36, 37, 38, 39, 120, 121, 127, 130, 132, 133, 134, 135, 159, 192, 194, 197], "transform": [0, 20, 30, 31, 32, 43, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 90, 97, 108, 114, 116, 120, 121, 124, 126, 165, 167, 170, 172, 175, 181, 183, 190], "them": [0, 6, 30, 31, 32, 42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 132, 189, 190, 192, 194, 195, 196, 197], "write": [0, 20, 43, 67, 108, 114, 116, 128, 129, 134, 135, 140, 187, 189, 190, 192, 194, 195, 197], "new": [0, 3, 10, 11, 12, 13, 20, 24, 26, 33, 42, 43, 45, 46, 74, 78, 83, 114, 116, 127, 129, 130, 132, 133, 134, 135, 189, 190, 194, 195, 196, 197], "ones": [0, 17, 20, 42, 43, 45, 46, 57, 59, 60, 65, 68, 72, 75, 77, 114, 189, 195, 196, 197], "littl": [0, 3, 196, 197], "effort": [0, 3, 197], "thi": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 17, 20, 23, 26, 32, 36, 37, 38, 39, 42, 43, 44, 45, 46, 51, 56, 57, 59, 61, 65, 68, 72, 74, 75, 76, 77, 78, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 120, 121, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 151, 153, 155, 159, 160, 161, 162, 170, 172, 175, 177, 181, 184, 187, 189, 190, 192, 194, 196, 197], "repo": [0, 5, 184, 197], "attempt": [0, 197], "align": [0, 197], "exist": [0, 20, 42, 43, 45, 46, 57, 75, 162, 181, 194, 196, 197], "ecosystem": [0, 197], "dataset": [0, 24, 25, 26, 31, 78, 156, 195, 196, 197], "pillar": [0, 197], "environ": [0, 3, 7, 9, 10, 11, 12, 13, 20, 23, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 60, 64, 65, 68, 74, 75, 78, 88, 99, 101, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 161, 162, 163, 164, 165, 167, 170, 172, 175, 177, 178, 179, 180, 181, 184, 191, 193], "model": [0, 3, 8, 10, 11, 12, 13, 20, 42, 43, 44, 45, 46, 68, 77, 79, 85, 86, 87, 89, 100, 101, 108, 114, 133, 134, 135, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 183, 184, 187, 194, 196], "data": [0, 3, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 65, 84, 85, 86, 87, 88, 96, 99, 107, 108, 109, 114, 115, 116, 118, 120, 121, 128, 134, 135, 141, 142, 143, 151, 156, 159, 160, 163, 177, 179, 180, 181, 183, 187, 190, 195, 196], "util": [0, 10, 11, 12, 13, 14, 20, 42, 43, 45, 46, 68, 77, 80, 81, 82, 83, 89, 115, 124, 125, 126, 177, 183, 188, 189, 190, 196, 197], "e": [0, 3, 9, 10, 11, 12, 13, 17, 20, 23, 36, 37, 42, 43, 45, 46, 57, 59, 68, 72, 74, 75, 77, 108, 113, 114, 117, 121, 140, 151, 161, 180, 189, 190, 195, 196, 197], "g": [0, 3, 9, 20, 23, 42, 43, 45, 46, 57, 59, 68, 72, 74, 75, 77, 108, 113, 114, 117, 140, 146, 147, 149, 150, 180, 189, 190, 196, 197], "collector": [0, 10, 11, 12, 13, 14, 159, 160, 163, 164, 177, 179, 180, 183, 187, 190, 196, 197], "contain": [0, 3, 6, 10, 11, 12, 13, 17, 20, 24, 25, 26, 27, 28, 30, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 59, 68, 72, 75, 77, 78, 83, 88, 89, 100, 114, 115, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 151, 156, 161, 165, 167, 170, 172, 175, 177, 178, 179, 180, 181, 187, 190, 194, 196, 197], "etc": [0, 3, 6, 20, 22, 29, 42, 43, 45, 46, 75, 100, 189, 195, 196, 197], "have": [0, 3, 5, 6, 10, 11, 13, 17, 20, 39, 42, 43, 45, 46, 56, 64, 74, 75, 78, 89, 99, 100, 116, 127, 132, 133, 137, 151, 159, 187, 189, 190, 192, 194, 195, 196, 197], "few": [0, 2, 7, 151, 190, 194, 196, 197], "depend": [0, 3, 6, 118, 133, 196, 197], "possibl": [0, 3, 18, 20, 23, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114, 155, 159, 189, 194, 195, 196, 197], "standard": [0, 65, 71, 78, 88, 97, 102, 103, 141, 142, 143, 189, 190, 197], "numpi": [0, 12, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 73, 159, 189, 190, 196, 197], "common": [0, 3, 43, 45, 46, 85, 86, 87, 108, 122, 123, 177, 184, 187, 189, 192, 194, 195, 196, 197], "openai": [0, 6, 49, 50, 196, 197], "gym": [0, 3, 9, 43, 49, 50, 65, 72, 78, 165, 167, 170, 172, 175, 177, 184, 189, 190, 197], "onli": [0, 4, 6, 10, 11, 13, 17, 20, 26, 42, 43, 45, 46, 57, 59, 68, 72, 75, 77, 78, 99, 108, 114, 116, 162, 187, 189, 190, 192, 194, 196, 197], "option": [0, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 36, 37, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 83, 84, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 128, 129, 133, 134, 135, 140, 141, 142, 143, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 189, 190, 197], "On": [0, 6, 190, 195], "end": [0, 20, 30, 31, 32, 42, 43, 45, 46, 75, 89, 101, 144, 145, 146, 147, 148, 149, 150, 189, 192, 196, 197], "come": [0, 45, 46, 84, 85, 86, 87, 107, 118, 189, 194, 196], "set": [0, 2, 3, 6, 8, 10, 11, 12, 13, 20, 23, 39, 42, 43, 44, 45, 46, 57, 59, 68, 72, 75, 77, 80, 82, 114, 115, 151, 155, 164, 181, 184, 188, 189, 190, 192, 196, 197], "re": [0, 3, 7, 20, 42, 43, 45, 46, 108, 187, 190, 192, 195, 196, 197], "usabl": [0, 187], "function": [0, 9, 14, 20, 36, 37, 38, 39, 42, 43, 45, 46, 59, 68, 74, 75, 76, 77, 78, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 105, 106, 108, 110, 111, 114, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 165, 167, 170, 172, 175, 177, 183, 189, 190, 192, 194, 195, 196], "cost": [0, 2, 18, 190], "return": [0, 3, 6, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 99, 100, 101, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 146, 147, 149, 150, 156, 159, 161, 163, 165, 167, 170, 172, 175, 177, 178, 179, 180, 181, 183, 187, 189, 190, 192, 194, 195, 196, 197], "process": [0, 3, 10, 11, 13, 45, 46, 78, 187, 189, 190, 196, 197], "good": [0, 8, 196, 197], "runtim": [0, 20, 42, 43, 45, 46], "perform": [0, 3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 59, 64, 68, 74, 75, 76, 77, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 133, 155, 159, 189, 190, 192, 195, 196], "introduct": [0, 191, 193, 196], "env": [0, 5, 6, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 101, 114, 162, 163, 164, 165, 167, 170, 172, 175, 177, 179, 180, 181, 183, 189, 190, 191, 192, 193], "modul": [0, 3, 9, 20, 42, 43, 44, 45, 46, 59, 68, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 134, 136, 138, 159, 166, 168, 169, 171, 174, 177, 182, 183, 187, 189, 190, 191, 192, 194, 196], "us": [0, 2, 3, 6, 9, 10, 11, 12, 13, 17, 18, 20, 24, 25, 26, 30, 31, 32, 33, 42, 43, 44, 45, 46, 47, 57, 58, 65, 68, 72, 73, 74, 75, 77, 78, 82, 83, 88, 89, 90, 91, 97, 100, 103, 108, 113, 114, 115, 116, 117, 120, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 148, 155, 156, 159, 160, 162, 163, 164, 165, 173, 177, 181, 182, 184, 187, 188, 191, 192, 193, 195, 196], "object": [0, 3, 10, 11, 12, 13, 17, 20, 36, 37, 38, 39, 42, 43, 45, 46, 68, 74, 75, 78, 84, 85, 107, 108, 114, 115, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 162, 163, 164, 176, 177, 181, 183, 187, 190, 194, 196], "state": [0, 3, 10, 11, 12, 13, 20, 42, 43, 44, 45, 46, 56, 57, 59, 68, 72, 74, 75, 77, 78, 79, 85, 88, 97, 99, 100, 104, 108, 110, 111, 114, 116, 134, 140, 141, 142, 143, 181, 189, 190, 196], "contribut": 0, "instal": [0, 159, 184, 196], "improv": [0, 2], "structur": [0, 3, 6], "dictionari": [0, 10, 11, 12, 13, 17, 20, 42, 43, 45, 46, 75, 108, 179, 180, 181, 187, 189, 196], "featur": [0, 3, 10, 11, 12, 13, 23, 42, 43, 45, 46, 56, 89, 97, 98, 100, 102, 103, 108, 181, 189, 190, 194, 196], "tensor": [0, 3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 43, 44, 45, 46, 56, 57, 59, 62, 65, 68, 71, 72, 73, 74, 75, 77, 78, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 120, 121, 124, 125, 128, 129, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 165, 167, 170, 172, 175, 187, 189, 190, 192, 194, 196, 197], "tensordictmodul": [0, 3, 44, 54, 85, 86, 87, 88, 101, 107, 108, 115, 116, 122, 123, 127, 128, 132, 133, 134, 135, 140, 141, 142, 143, 155, 163, 164, 177, 183, 189, 190, 191, 192, 193], "exampl": [0, 3, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 57, 59, 60, 65, 68, 72, 73, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 96, 99, 100, 107, 108, 109, 114, 115, 116, 118, 120, 121, 123, 151, 152, 153, 154, 157, 158, 160, 165, 167, 170, 172, 175, 177, 182, 187, 189, 190, 191, 192, 195, 196, 197], "do": [0, 3, 6, 10, 11, 12, 13, 43, 64, 83, 86, 102, 187, 189, 190, 192, 196, 197], "": [0, 5, 6, 20, 24, 25, 26, 31, 42, 43, 44, 45, 46, 59, 68, 72, 75, 77, 78, 89, 103, 108, 114, 116, 135, 156, 172, 175, 189, 190, 192, 195, 196, 197], "don": [0, 5, 6, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 42, 189, 190, 195, 196, 197], "t": [0, 5, 6, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 33, 42, 43, 45, 46, 68, 77, 78, 83, 114, 123, 128, 159, 160, 181, 184, 189, 190, 192, 196, 197], "showcas": 0, "implement": [0, 2, 3, 8, 9, 20, 39, 42, 43, 45, 46, 78, 112, 113, 117, 133, 135, 170, 172, 175, 187, 189, 190, 197], "deepmind": [0, 6, 8, 47, 48], "control": [0, 3, 45, 46, 47, 48, 90, 91, 92, 93, 101, 111, 127, 132, 133, 136, 141, 144, 145, 148, 165, 187, 189], "devic": [0, 2, 3, 6, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 36, 37, 42, 43, 44, 45, 46, 54, 59, 67, 68, 72, 73, 75, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 102, 103, 107, 108, 109, 114, 115, 116, 118, 120, 121, 128, 160, 165, 167, 170, 172, 173, 175, 189, 190, 192, 194, 197], "run": [0, 3, 4, 5, 6, 7, 10, 11, 13, 20, 42, 43, 44, 45, 46, 47, 48, 59, 64, 65, 68, 74, 75, 76, 77, 78, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 155, 179, 180, 181, 184, 187, 189, 190, 192, 194, 195, 197], "parallel": [0, 3, 7, 10, 11, 13, 178, 179, 180, 181, 190], "vecnorm": [0, 181, 183], "task": [0, 8, 45, 46, 47, 68, 77, 189, 190, 191, 193, 196, 197], "specif": [0, 4, 26, 27, 32, 43, 159, 183, 187, 191, 193, 194], "polici": [0, 2, 3, 10, 11, 12, 13, 42, 43, 44, 45, 46, 82, 83, 85, 86, 87, 103, 108, 114, 120, 121, 127, 128, 132, 133, 134, 135, 155, 160, 163, 164, 165, 167, 170, 177, 179, 180, 187, 190, 191, 193, 194, 196, 197], "multi": [0, 3, 6, 8, 20, 21, 22, 42, 43, 45, 46, 99, 100, 189, 190, 191, 193, 197], "execut": [0, 3, 6, 12, 30, 31, 32, 42, 43, 44, 45, 46, 116, 162, 181, 187, 190, 193, 194, 196], "divers": [0, 45, 46], "rollout": [0, 3, 10, 11, 12, 13, 42, 43, 44, 45, 46, 82, 88, 162, 189, 190, 197], "ddpg": [0, 90, 91, 92, 93, 128, 131, 136, 165, 166, 183, 191, 193, 197], "normal": [0, 30, 65, 78, 89, 100, 108, 113, 117, 155, 157, 181, 187, 190, 196], "observ": [0, 2, 3, 28, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 99, 104, 105, 107, 109, 110, 118, 120, 121, 141, 142, 143, 165, 167, 170, 172, 175, 177, 187, 190, 192, 194, 195, 196, 197], "build": [0, 3, 6, 14, 17, 20, 42, 43, 45, 46, 78, 88, 108, 159, 166, 168, 169, 171, 173, 174, 176, 187, 194, 195, 196], "evalu": [0, 20, 42, 43, 45, 46, 75, 94, 106, 117, 134, 163, 164, 190], "your": [0, 6, 7, 20, 42, 43, 45, 46, 78, 181, 184, 190, 195, 197], "record": [0, 20, 42, 43, 45, 46, 133, 177, 183, 187, 190, 197], "replai": [0, 12, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 39, 40, 45, 46, 128, 129, 134, 135, 156, 159, 173, 177, 183, 187, 190], "buffer": [0, 12, 20, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 59, 68, 72, 75, 77, 107, 108, 109, 114, 115, 116, 118, 120, 121, 128, 129, 134, 135, 141, 142, 143, 156, 159, 173, 177, 183, 187, 190, 194, 196], "hyperparamet": 0, "initi": [0, 6, 10, 11, 12, 13, 20, 42, 43, 45, 46, 65, 68, 72, 74, 75, 79, 88, 102, 103, 108, 114, 116, 132, 134, 135, 165, 167, 170, 172, 175, 181, 190, 196], "time": [0, 3, 4, 6, 10, 11, 12, 13, 20, 42, 43, 45, 46, 57, 72, 78, 83, 97, 99, 134, 159, 190, 192, 194, 195, 196, 197], "train": [0, 10, 11, 12, 13, 20, 42, 43, 45, 46, 68, 75, 77, 90, 92, 127, 130, 132, 133, 134, 135, 159, 160, 177, 187, 195, 196], "experi": [0, 3, 24, 33, 184], "result": [0, 3, 6, 10, 11, 12, 13, 20, 42, 43, 45, 46, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 100, 121, 144, 145, 146, 147, 148, 149, 150, 160, 190, 195, 196, 197], "sampl": [0, 2, 8, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 42, 44, 88, 94, 106, 108, 110, 113, 114, 117, 127, 128, 129, 132, 133, 151, 156, 159, 161, 190, 194, 196, 197], "trajectori": [0, 10, 11, 12, 13, 14, 20, 42, 43, 45, 46, 74, 88, 133, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 190, 196, 197], "td": [0, 17, 47, 48, 49, 50, 52, 57, 60, 65, 73, 75, 78, 83, 84, 85, 86, 87, 88, 96, 101, 107, 108, 109, 114, 115, 116, 118, 120, 121, 142, 143, 146, 147, 149, 150, 151, 158, 165, 167, 170, 172, 175, 194, 195, 196, 197], "lambda": [0, 10, 11, 12, 13, 143, 146, 147, 149, 150, 177, 195, 196, 197], "pixel": [0, 3, 6, 17, 63, 68, 69, 73, 77, 90, 104, 105, 167, 170, 172, 175, 189, 191, 193, 196, 197], "base": [0, 3, 8, 10, 11, 12, 13, 35, 41, 44, 85, 159, 170, 172, 175, 187, 189, 191, 193, 196], "dqn": [0, 96, 109, 120, 129, 130, 131, 136, 167, 168, 183, 191, 193, 197], "problem": [0, 6, 12, 196], "deep": [0, 8, 56, 90, 91, 92, 93, 95, 131, 135, 136, 165, 189], "q": [0, 90, 91, 92, 93, 95, 98, 120, 121, 128, 129, 130, 131, 134, 135, 172, 175, 194], "network": [0, 20, 42, 43, 45, 46, 82, 85, 86, 87, 89, 90, 91, 92, 93, 95, 97, 98, 100, 103, 104, 105, 110, 111, 114, 128, 129, 130, 131, 134, 135, 136, 138, 165, 170, 176, 177, 187, 189, 192, 194, 196], "regular": [0, 13, 108, 114, 121, 130, 160, 187, 189, 194, 195, 196], "conclus": 0, "api": [0, 3, 68, 77, 187, 196, 197], "packag": [0, 5, 183, 184, 189, 196], "trainer": [0, 127, 130, 132, 133, 134, 135, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 189, 197], "_util": [0, 9, 183], "knowledg": 0, "work": [0, 6, 7, 20, 42, 43, 45, 46, 57, 68, 78, 89, 100, 159, 184, 190, 192, 194, 195, 196, 197], "habitat": [0, 51, 184], "lab": [0, 3, 47, 48, 184], "about": [0, 184, 189, 190, 196, 197], "mujoco": [0, 5, 184], "issu": [0, 4, 108, 114, 184, 197], "when": [0, 3, 4, 7, 10, 11, 12, 13, 20, 24, 25, 26, 30, 31, 32, 36, 37, 38, 39, 42, 43, 45, 46, 59, 64, 68, 72, 74, 75, 77, 78, 82, 88, 100, 102, 108, 113, 114, 116, 124, 127, 132, 133, 140, 156, 181, 184, 187, 189, 190, 194, 195, 196], "render": [0, 7, 155, 184, 189, 190], "pro": [0, 6, 184], "tip": [0, 6, 184], "resourc": [0, 184], "index": [0, 6, 12, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 41, 83, 156, 189, 192, 195, 197], "search": [0, 190], "page": [0, 6], "central": 2, "part": [2, 20, 42, 43, 45, 46, 108, 118, 151, 181, 189, 190, 194, 196], "off": [2, 108, 113, 114, 116, 117, 135, 155, 163, 187, 190, 196], "algorithm": [2, 8, 10, 11, 44, 133, 134, 151, 163, 170, 187, 189, 190, 195, 197], "wide": [2, 3], "we": [2, 3, 4, 6, 8, 17, 20, 42, 43, 45, 46, 68, 78, 88, 99, 116, 184, 187, 189, 190, 192, 194, 195, 196, 197], "also": [2, 3, 7, 20, 26, 42, 43, 45, 46, 75, 111, 116, 128, 129, 187, 189, 190, 192, 194, 195, 196], "storag": [2, 20, 24, 25, 26, 27, 30, 31, 32, 36, 37, 38, 42, 43, 45, 46, 156, 183, 187, 189, 190, 197], "choic": 2, "veri": [2, 3, 189, 190, 196, 197], "influenti": 2, "latenc": 2, "especi": [2, 3, 6, 7, 57], "distribut": [2, 3, 8, 24, 26, 65, 88, 94, 95, 96, 97, 106, 108, 110, 111, 112, 113, 117, 120, 127, 130, 132, 133, 183, 187, 189, 190, 194, 196, 197], "larger": 2, "volum": 2, "lazymemmapstorag": [2, 183, 189, 190], "advis": [2, 196], "share": [2, 36, 37, 38, 39, 45, 46, 78, 85, 86, 87, 114, 118, 120, 121, 181, 192, 194, 196, 197], "due": [2, 3, 196], "lower": [2, 10, 11, 12, 13, 16, 21, 78, 110, 111, 195], "serialis": 2, "memmaptensor": 2, "well": [2, 3, 10, 11, 13, 20, 39, 42, 43, 45, 46, 110, 111, 189, 190, 194, 195, 196, 197], "abil": 2, "specifi": [2, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 76, 88, 108, 114, 189, 194], "file": [2, 5, 6, 187, 189, 193, 196], "locat": [2, 6, 43, 65, 71, 113, 117, 195], "node": [2, 165, 167, 170, 172, 175], "failur": 2, "recoveri": 2, "follow": [2, 3, 5, 6, 20, 42, 43, 44, 45, 46, 68, 89, 100, 126, 127, 132, 159, 172, 175, 187, 189, 190, 192, 194, 195, 196, 197], "mean": [2, 3, 6, 12, 65, 78, 88, 94, 97, 99, 108, 112, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 189, 190, 196, 197], "over": [2, 3, 10, 11, 12, 13, 20, 42, 43, 45, 46, 65, 116, 130, 161, 187, 189, 195, 196], "liststorag": [2, 24, 25, 26, 31, 156, 183], "were": [2, 6, 45, 46, 189], "found": [2, 5, 6, 17, 20, 26, 42, 43, 45, 46, 78, 128, 133, 189, 190, 194, 196], "from": [2, 3, 8, 9, 10, 11, 12, 13, 14, 20, 23, 24, 25, 26, 27, 30, 31, 32, 36, 37, 38, 39, 42, 43, 44, 45, 46, 57, 65, 68, 72, 73, 74, 75, 77, 78, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 100, 101, 102, 107, 108, 109, 113, 114, 115, 116, 117, 118, 120, 121, 127, 128, 129, 132, 133, 134, 135, 140, 151, 156, 159, 161, 162, 165, 167, 170, 172, 173, 175, 177, 178, 181, 184, 187, 189, 190, 192, 194, 195, 196, 197], "rough": 2, "benchmark": [2, 8], "http": [2, 5, 6, 24, 33, 56, 68, 90, 91, 92, 93, 97, 98, 103, 104, 105, 110, 111, 120, 130, 131, 133, 134, 135, 136, 141, 144, 145, 148, 165, 170, 172, 175, 197], "com": [2, 5, 6, 197], "tree": 2, "main": [2, 108, 159, 189, 190, 192, 196], "type": [2, 20, 28, 42, 43, 44, 45, 46, 59, 68, 72, 75, 77, 78, 89, 100, 103, 108, 114, 122, 165, 167, 170, 172, 175, 179, 189, 190, 195, 196], "speed": [2, 7, 18, 189, 190], "up": [2, 3, 7, 8, 18, 184, 189, 190, 194, 196], "1x": 2, "lazytensorstorag": [2, 183], "1": [2, 3, 10, 11, 12, 13, 18, 19, 20, 23, 42, 43, 44, 45, 46, 55, 57, 59, 60, 64, 65, 68, 72, 73, 75, 77, 78, 83, 85, 86, 87, 88, 89, 90, 91, 93, 98, 100, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 124, 127, 132, 133, 134, 135, 136, 140, 144, 145, 146, 147, 148, 149, 150, 151, 155, 157, 165, 167, 170, 172, 175, 177, 181, 184, 187, 189, 190, 192, 195, 196, 197], "83x": 2, "3": [2, 3, 5, 6, 17, 18, 19, 20, 23, 42, 43, 45, 46, 56, 59, 62, 65, 68, 72, 73, 75, 77, 84, 85, 86, 87, 88, 89, 90, 91, 96, 98, 100, 107, 108, 114, 116, 118, 120, 123, 146, 147, 149, 150, 158, 167, 187, 189, 190, 192, 195, 196, 197], "44x": 2, "parent": [2, 3, 28, 42, 57, 65, 68, 74, 85, 133, 190, 195, 196, 197], "subclass": [2, 3, 42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 108, 109, 110, 111, 114, 115, 116, 124, 133, 189], "defin": [2, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 178, 190, 194, 195, 196], "basic": [2, 44, 196], "properti": [2, 42, 43, 44, 45, 46, 75, 94, 102, 106, 112, 113, 117, 194, 195], "action": [2, 3, 8, 18, 23, 28, 42, 43, 44, 45, 46, 60, 64, 75, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 100, 101, 107, 108, 109, 111, 112, 113, 118, 120, 121, 129, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 165, 167, 170, 172, 175, 177, 181, 187, 189, 190, 192, 194, 195, 196, 197], "shape": [2, 3, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 42, 43, 45, 46, 57, 73, 94, 95, 100, 102, 106, 107, 108, 112, 114, 115, 116, 137, 151, 159, 177, 189, 190, 192, 194, 195, 196, 197], "dtype": [2, 3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 33, 42, 43, 44, 45, 46, 54, 59, 60, 65, 68, 72, 73, 75, 77, 85, 86, 87, 88, 96, 102, 103, 107, 108, 109, 114, 115, 116, 118, 120, 121, 165, 167, 170, 172, 175, 189, 190, 192, 194, 195, 196, 197], "domain": [2, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 72, 108, 114, 116, 183, 194, 196, 197], "offer": [3, 6, 196], "handl": [3, 20, 42, 43, 45, 46, 78, 100, 159, 179, 180], "differ": [3, 10, 11, 12, 13, 20, 42, 43, 45, 46, 75, 100, 120, 121, 133, 137, 142, 155, 159, 160, 179, 180, 187, 189, 190, 192, 195, 196], "backend": [3, 6, 187, 189], "dm": [3, 196], "custom": [3, 20, 42, 43, 45, 46, 181], "goal": [3, 189, 190], "abl": [3, 192, 195, 197], "even": [3, 7, 11, 36, 37, 38, 39, 189, 195, 196], "simul": [3, 6, 54, 88, 189], "some": [3, 6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 68, 90, 108, 116, 151, 161, 187, 189, 190, 194, 196, 197], "box": [3, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29], "wrapper": [3, 13, 26, 27, 32, 44, 47, 48, 49, 50, 51, 52, 53, 108, 114, 115, 141, 181, 189, 194, 196], "under": [3, 20, 42, 43, 45, 46, 108, 114, 189, 196], "lib": [3, 5, 6, 8, 47, 48, 49, 50, 51, 52, 53, 65, 72, 78, 165, 167, 170, 172, 175, 177, 189, 190, 192, 196, 197], "which": [3, 6, 9, 10, 11, 12, 13, 17, 18, 20, 23, 32, 42, 43, 45, 46, 56, 57, 64, 68, 74, 75, 85, 86, 87, 108, 113, 114, 116, 117, 127, 130, 132, 133, 134, 135, 137, 151, 165, 167, 170, 172, 175, 187, 189, 190, 192, 194, 195, 196], "hope": 3, "imit": 3, "other": [3, 6, 20, 36, 37, 38, 39, 42, 43, 44, 45, 46, 78, 103, 108, 127, 130, 132, 133, 134, 135, 170, 172, 175, 179, 180, 187, 189, 190, 194, 196, 197], "envbas": [3, 10, 11, 12, 13, 43, 45, 46, 64, 74, 75, 78, 88, 101, 155, 162, 163, 164, 165, 167, 170, 172, 175, 177, 179, 180, 181, 183], "torch": [3, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 33, 36, 37, 42, 43, 44, 45, 46, 57, 59, 60, 65, 68, 71, 72, 73, 75, 77, 78, 83, 84, 85, 86, 87, 88, 89, 94, 96, 97, 99, 100, 102, 103, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 128, 151, 158, 165, 167, 170, 172, 175, 177, 187, 189, 190, 192, 194, 195, 196, 197], "nn": [3, 20, 42, 43, 44, 45, 46, 59, 68, 72, 75, 77, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 107, 108, 109, 114, 115, 116, 118, 120, 121, 122, 123, 129, 130, 172, 175, 177, 189, 190, 192, 194, 197], "typic": [3, 20, 42, 43, 45, 46, 187], "method": [3, 10, 11, 12, 13, 20, 26, 30, 36, 37, 38, 39, 42, 43, 45, 46, 56, 59, 65, 68, 69, 72, 75, 77, 85, 86, 87, 88, 99, 108, 114, 115, 116, 122, 178, 187, 188, 189, 194, 195, 196], "organis": 3, "allow": [3, 10, 11, 12, 13, 20, 23, 42, 43, 45, 46, 83, 100, 137, 187, 189, 194, 195, 196], "gener": [3, 6, 12, 31, 35, 44, 65, 84, 94, 106, 107, 108, 118, 134, 141, 144, 145, 148, 159, 189, 190, 191, 192, 194, 195, 196, 197], "arbitrari": [3, 23, 45, 46, 189, 190], "number": [3, 7, 10, 11, 12, 13, 16, 18, 20, 21, 23, 24, 25, 26, 31, 33, 36, 37, 38, 42, 43, 44, 45, 46, 56, 64, 65, 71, 78, 88, 89, 94, 95, 97, 98, 100, 104, 105, 108, 110, 111, 112, 113, 114, 117, 126, 134, 135, 151, 153, 155, 156, 159, 160, 161, 162, 179, 180, 181, 189, 190, 196], "input": [3, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 42, 43, 44, 45, 46, 57, 59, 60, 68, 74, 76, 77, 83, 89, 90, 91, 92, 93, 99, 100, 102, 103, 108, 110, 111, 114, 115, 116, 126, 127, 130, 132, 133, 134, 135, 140, 144, 145, 146, 147, 148, 149, 150, 161, 177, 187, 190, 195, 196, 197], "output": [3, 10, 11, 12, 13, 20, 24, 25, 26, 31, 42, 43, 44, 45, 46, 68, 74, 77, 85, 89, 90, 91, 95, 97, 99, 100, 108, 114, 115, 116, 120, 121, 127, 130, 132, 133, 134, 135, 151, 156, 189, 190, 192, 195, 196, 197], "nest": [3, 17, 20, 42, 43, 45, 46, 187, 195, 197], "batch": [3, 10, 11, 12, 13, 14, 18, 20, 23, 24, 25, 26, 27, 30, 31, 32, 42, 43, 44, 45, 46, 75, 94, 95, 99, 102, 106, 108, 112, 114, 127, 130, 132, 133, 134, 135, 144, 145, 146, 147, 148, 149, 150, 151, 156, 158, 159, 160, 179, 180, 181, 187, 189, 190, 192, 196, 197], "each": [3, 6, 10, 11, 12, 13, 14, 19, 20, 24, 26, 42, 43, 45, 46, 72, 78, 116, 120, 121, 146, 147, 149, 150, 155, 179, 180, 189, 190, 194, 196], "attribut": [3, 20, 42, 43, 45, 46, 68, 108, 190, 194], "batch_siz": [3, 17, 24, 25, 27, 30, 31, 32, 42, 44, 54, 72, 85, 86, 87, 88, 96, 107, 108, 109, 114, 116, 118, 120, 121, 151, 156, 165, 167, 170, 172, 175, 189, 190, 192, 194, 195, 196, 197], "size": [3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 42, 43, 44, 45, 46, 54, 57, 68, 72, 73, 75, 76, 77, 85, 86, 87, 88, 89, 94, 96, 99, 100, 106, 107, 108, 109, 110, 111, 112, 114, 116, 118, 120, 121, 140, 151, 156, 165, 167, 170, 172, 175, 189, 190, 192, 194, 196, 197], "repres": [3, 10, 11, 12, 13, 26, 42, 43, 45, 46, 120, 121, 137, 195], "togeth": [3, 10, 11, 12, 13, 85, 86, 87, 194], "where": [3, 6, 10, 11, 12, 13, 24, 25, 26, 27, 30, 31, 32, 36, 37, 42, 43, 44, 45, 46, 68, 74, 77, 108, 114, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 140, 156, 159, 160, 187, 189, 190, 192, 194, 196], "expect": [3, 6, 17, 20, 28, 42, 43, 44, 45, 46, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 76, 77, 108, 114, 116, 127, 132, 133, 162, 184, 187, 189, 196], "live": [3, 10, 11, 12, 13, 20, 24, 25, 26, 27, 30, 31, 32, 42, 43, 44, 45, 46, 156], "doe": [3, 24, 26, 33, 39, 102, 116, 127, 132, 133, 140, 159, 187, 189, 195, 196], "actual": [3, 6, 10, 11, 13, 42, 43, 45, 46, 161, 189, 190], "step": [3, 10, 11, 12, 13, 20, 42, 43, 44, 45, 46, 64, 65, 75, 83, 88, 97, 99, 101, 108, 133, 140, 151, 155, 159, 187, 189, 190, 192, 195, 197], "oper": [3, 6, 10, 11, 13, 20, 42, 43, 45, 46, 74, 85, 86, 87, 114, 115, 120, 127, 128, 129, 130, 132, 133, 140, 141, 142, 143, 159, 165, 167, 172, 175, 187, 189, 190, 192, 194, 196], "comput": [3, 10, 12, 18, 20, 24, 26, 42, 43, 45, 46, 59, 65, 68, 74, 75, 76, 77, 85, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 113, 114, 115, 116, 117, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 162, 189, 190, 192, 194], "respons": [3, 108, 159, 194, 196], "just": [3, 151, 187, 190, 194, 195, 196, 197], "retriev": [3, 30, 31, 32, 42, 43, 45, 46, 57, 65, 83, 88, 108, 127, 132, 133, 141, 142, 143, 165, 167, 170, 172, 175, 181, 187, 195, 196], "care": [3, 42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 189, 190], "map": [3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 36, 42, 43, 45, 46, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 85, 86, 87, 108, 114, 116, 120, 156, 183, 189, 190, 194, 195], "desir": [3, 20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 82, 89, 100, 108, 114, 189, 190, 195], "see": [3, 5, 6, 7, 8, 10, 11, 12, 13, 20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 79, 89, 100, 102, 113, 114, 117, 189, 190, 194, 195, 196], "below": [3, 6, 10, 11, 12, 13, 20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 89, 100, 113, 114, 117, 182, 191], "For": [3, 6, 8, 10, 11, 12, 13, 20, 42, 43, 45, 46, 102, 120, 130, 133, 155, 165, 187, 189, 194, 196], "parametr": [3, 103, 135, 189], "hardwar": 3, "observation_spec": [3, 42, 44, 56, 57, 58, 59, 60, 62, 63, 65, 68, 69, 72, 73, 74, 75, 76, 77, 88, 162, 177, 189, 192, 196], "compositespec": [3, 42, 44, 72, 84, 88, 107, 116, 183, 189, 196], "all": [3, 10, 11, 12, 13, 20, 42, 43, 44, 45, 46, 59, 61, 65, 68, 72, 74, 75, 76, 77, 78, 81, 82, 83, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 159, 161, 179, 180, 181, 184, 187, 189, 190, 191, 192, 194, 195, 196, 197], "kei": [3, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 32, 42, 43, 45, 46, 56, 57, 65, 68, 72, 74, 75, 77, 78, 83, 88, 101, 108, 114, 115, 116, 118, 126, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 155, 158, 159, 162, 170, 172, 175, 187, 189, 190, 192, 194, 196, 197], "spec": [3, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 42, 43, 44, 45, 46, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 84, 85, 86, 87, 96, 107, 108, 109, 111, 114, 115, 116, 120, 121, 165, 167, 170, 172, 175, 189, 190, 192, 197], "pair": [3, 20, 26, 42, 43, 45, 46, 85, 108, 189, 190, 192, 195, 196], "input_spec": [3, 42, 44, 45, 46, 59, 60, 68, 74, 75, 76, 77, 88, 196], "action_spec": [3, 42, 43, 44, 45, 46, 75, 82, 84, 96, 107, 109, 111, 120, 121, 177, 189, 190, 192, 196, 197], "tensorspec": [3, 15, 16, 17, 18, 19, 21, 22, 23, 29, 42, 44, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 84, 107, 108, 111, 114, 183], "reward_spec": [3, 42, 44, 55, 59, 60, 68, 70, 71, 74, 75, 76, 77, 88, 196], "reward": [3, 20, 28, 42, 43, 44, 45, 46, 55, 59, 60, 68, 70, 71, 74, 75, 76, 77, 78, 83, 88, 128, 129, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 181, 187, 189, 190, 192, 195, 196, 197], "importantli": [3, 108], "should": [3, 6, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 39, 42, 43, 44, 45, 46, 59, 65, 68, 74, 75, 76, 77, 78, 83, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 131, 132, 133, 134, 136, 140, 155, 156, 159, 177, 179, 180, 181, 187, 189, 190, 192, 194, 195, 196, 197], "4": [3, 6, 18, 23, 44, 47, 48, 49, 52, 56, 78, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 107, 108, 109, 114, 115, 116, 118, 120, 121, 123, 189, 190, 195, 196, 197], "action_s": 3, "simpli": [3, 5, 189, 190, 196], "With": [3, 187, 195, 196], "reset": [3, 10, 11, 12, 13, 42, 43, 44, 45, 46, 53, 56, 59, 64, 68, 72, 74, 77, 78, 79, 83, 119, 165, 167, 170, 172, 175, 189, 190, 192, 197], "mai": [3, 4, 6, 10, 11, 12, 13, 20, 42, 43, 45, 46, 75, 78, 100, 187, 189, 196, 197], "necessarili": 3, "requir": [3, 6, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 42, 43, 45, 46, 59, 68, 72, 75, 77, 100, 114, 116, 127, 130, 132, 133, 134, 135, 187, 189, 190, 194, 196], "usual": [3, 5, 42, 43, 45, 46, 103, 170, 172, 175, 184, 187, 196], "done": [3, 6, 17, 20, 42, 43, 44, 45, 46, 65, 71, 72, 78, 83, 88, 128, 129, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 165, 167, 170, 172, 175, 189, 190, 192, 195, 196, 197], "stateless": [3, 45, 46, 74, 196], "instanc": [3, 6, 7, 10, 11, 12, 13, 20, 28, 42, 43, 44, 45, 46, 48, 56, 59, 68, 72, 74, 76, 77, 78, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 155, 162, 163, 164, 165, 167, 170, 172, 175, 177, 179, 180, 187, 190, 194, 195, 196], "set_se": [3, 10, 11, 12, 13, 42, 43, 44, 45, 46, 65, 75, 189, 196, 197], "integ": [3, 10, 11, 12, 13, 19, 20, 23, 24, 25, 26, 39, 42, 43, 45, 46, 89, 100, 156], "seed": [3, 10, 11, 12, 13, 42, 43, 44, 45, 46, 47, 75, 159, 189], "next": [3, 10, 11, 17, 20, 24, 25, 26, 31, 42, 43, 44, 45, 46, 78, 83, 111, 134, 140, 156, 189, 190, 192, 196, 197], "determinist": [3, 20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 84, 97, 104, 108, 111, 114, 189, 190, 196], "preced": [3, 99, 194], "one": [3, 6, 9, 10, 11, 12, 13, 19, 23, 24, 25, 26, 27, 30, 31, 32, 39, 40, 41, 42, 43, 45, 46, 59, 64, 68, 74, 75, 76, 77, 78, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 108, 109, 110, 111, 114, 115, 116, 120, 121, 124, 126, 127, 128, 129, 132, 133, 134, 153, 155, 156, 159, 162, 170, 172, 175, 181, 184, 187, 189, 190, 192, 194, 195, 196], "multipl": [3, 10, 11, 12, 13, 18, 45, 46, 57, 74, 78, 99, 102, 103, 114, 134, 172, 181, 187, 190, 195, 197], "without": [3, 6, 8, 20, 42, 43, 45, 46, 86, 134, 140, 177, 184, 189, 190, 196], "risk": 3, "overlap": 3, "consecut": [3, 190, 196], "while": [3, 6, 20, 42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 132, 133, 189, 190, 197], "still": [3, 8, 132, 189, 190, 192, 196], "reproduc": 3, "max_step": [3, 42, 43, 44, 45, 46, 82, 83, 189, 190, 196, 197], "maximum": [3, 10, 11, 12, 13, 16, 20, 21, 24, 25, 26, 36, 37, 38, 42, 43, 45, 46, 70, 107, 112, 113, 117, 135, 156, 189, 190, 196, 197], "ani": [3, 17, 20, 24, 25, 26, 27, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 68, 75, 78, 89, 100, 103, 114, 116, 133, 156, 159, 184, 189, 190, 196], "compat": [3, 4, 6, 9, 20, 39, 42, 43, 45, 46, 51, 78, 122, 137, 190, 197], "better": [3, 190], "cpu": [3, 7, 20, 28, 36, 37, 42, 43, 44, 45, 46, 54, 59, 68, 72, 75, 77, 85, 86, 87, 88, 96, 103, 107, 108, 109, 114, 116, 118, 120, 121, 165, 167, 170, 172, 175, 189, 190, 192, 195, 196, 197], "intens": [3, 7], "gym3": 3, "envpool": 3, "interfac": [3, 100, 102, 194], "simultan": [3, 45, 46], "thei": [3, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 60, 61, 74, 75, 99, 127, 130, 132, 133, 134, 135, 159, 187, 189, 190, 192, 194, 195, 196], "often": [3, 131, 159, 196], "competit": 3, "advantag": [3, 98, 127, 132, 133, 141, 142, 143, 144, 145, 146, 148, 149, 187, 189, 190, 196, 197], "scale": [3, 65, 71, 85, 87, 97, 107, 108, 110, 111, 113, 116, 117, 157, 162, 170, 172, 175, 181, 189, 190, 194, 197], "varieti": 3, "therefor": [3, 6, 133, 195, 196], "its": [3, 6, 10, 11, 12, 13, 20, 26, 42, 43, 44, 45, 46, 56, 74, 75, 78, 89, 96, 108, 114, 116, 127, 130, 132, 133, 134, 135, 159, 177, 187, 189, 190, 194, 196], "own": [3, 10, 11, 13, 20, 42, 43, 45, 46, 190, 194], "parallelenv": [3, 10, 11, 12, 13, 46, 178, 183, 189, 190, 192, 196, 197], "As": [3, 42, 43, 45, 46, 108, 189, 190, 196, 197], "inherit": [3, 101, 187, 194, 195], "enjoi": 3, "exact": 3, "same": [3, 12, 20, 42, 43, 45, 46, 64, 74, 75, 78, 89, 100, 189, 190, 192, 194, 195, 196], "Of": [3, 6, 184, 196], "cours": [3, 184, 196], "correspond": [3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 33, 42, 43, 44, 45, 46, 72, 75, 78, 108, 190], "count": [3, 155, 161, 196], "def": [3, 9, 20, 42, 43, 44, 45, 46, 88, 115, 118, 120, 123, 187, 189, 190, 192, 194, 195, 196, 197], "make_env": [3, 78, 83, 163, 164, 189, 190, 196], "gymenv": [3, 10, 11, 12, 13, 51, 59, 65, 72, 75, 78, 165, 167, 170, 172, 175, 177, 183, 189, 190, 196, 197], "pendulum": [3, 10, 11, 12, 13, 49, 50, 59, 65, 72, 75, 78, 177, 190, 196, 197], "v1": [3, 12, 65, 72, 137, 146, 147, 149, 150, 190, 196, 197], "from_pixel": [3, 47, 48, 170, 172, 175, 189, 190, 196, 197], "true": [3, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 42, 43, 44, 45, 46, 47, 48, 57, 59, 64, 65, 68, 71, 72, 73, 75, 77, 78, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 100, 102, 103, 108, 113, 114, 116, 117, 123, 127, 132, 133, 134, 135, 137, 141, 142, 143, 146, 147, 149, 150, 153, 154, 155, 159, 167, 181, 187, 189, 190, 192, 194, 195, 196, 197], "9": [3, 6, 20, 78, 187, 189, 190, 195, 196], "81": 3, "cuda": [3, 6, 20, 42, 43, 45, 46, 59, 67, 68, 72, 75, 77, 114, 152, 189, 190, 195, 196], "0": [3, 5, 6, 9, 19, 20, 23, 24, 26, 33, 42, 43, 44, 45, 46, 55, 57, 59, 62, 64, 65, 68, 72, 73, 75, 77, 78, 83, 88, 89, 90, 91, 93, 97, 100, 102, 103, 108, 110, 111, 112, 113, 114, 115, 116, 117, 124, 127, 132, 133, 134, 135, 136, 140, 151, 157, 159, 177, 181, 187, 189, 190, 192, 193, 194, 195, 196, 197], "print": [3, 5, 6, 17, 18, 20, 23, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 57, 60, 65, 72, 73, 78, 83, 84, 85, 86, 87, 89, 96, 100, 108, 109, 114, 115, 116, 118, 120, 121, 123, 165, 167, 170, 172, 175, 177, 187, 189, 190, 192, 194, 195, 196, 197], "call": [3, 6, 9, 10, 11, 12, 13, 20, 24, 25, 26, 30, 31, 32, 36, 37, 38, 39, 42, 43, 45, 46, 56, 59, 60, 67, 68, 72, 74, 75, 76, 77, 78, 82, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 104, 105, 108, 110, 111, 114, 115, 116, 124, 140, 155, 156, 187, 189, 190, 194, 195, 196], "b": [3, 14, 17, 102, 103, 108, 116, 194, 195, 197], "c": [3, 5, 6, 17, 165, 167, 170, 172, 175, 195], "d": [3, 24, 33, 108, 189, 195, 197], "get": [3, 5, 6, 39, 45, 46, 57, 60, 65, 73, 78, 84, 108, 115, 144, 145, 148, 189, 190, 194, 196, 197], "forc": [3, 5, 6, 190], "variou": [3, 10, 11, 12, 13, 127, 130, 132, 133, 134, 135, 179, 180, 189, 190, 196], "befor": [3, 6, 10, 11, 12, 13, 20, 42, 43, 45, 46, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 76, 77, 100, 102, 103, 108, 114, 116, 127, 130, 132, 133, 134, 135, 141, 142, 143, 189, 190, 194, 195, 196], "reset_work": 3, "fals": [3, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 44, 45, 46, 47, 50, 57, 59, 64, 65, 68, 71, 72, 73, 75, 77, 78, 85, 86, 87, 88, 89, 90, 96, 100, 107, 108, 109, 114, 115, 116, 118, 120, 121, 122, 123, 128, 129, 130, 134, 135, 137, 141, 142, 143, 146, 147, 149, 150, 153, 154, 155, 156, 157, 159, 165, 167, 170, 172, 175, 181, 187, 189, 190, 192, 194, 195, 196, 197], "field": [3, 10, 11, 12, 13, 17, 20, 42, 43, 44, 45, 46, 72, 75, 85, 86, 87, 88, 96, 107, 108, 109, 114, 116, 118, 120, 121, 162, 165, 167, 170, 172, 175, 184, 190, 192, 194, 195, 196, 197], "bool": [3, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 44, 45, 46, 47, 48, 57, 64, 65, 68, 71, 72, 73, 75, 77, 78, 83, 88, 89, 90, 91, 100, 102, 103, 108, 113, 114, 116, 117, 122, 127, 128, 129, 130, 132, 133, 134, 135, 137, 141, 142, 143, 146, 147, 149, 150, 153, 154, 155, 156, 157, 159, 165, 167, 170, 172, 175, 181, 190, 192, 196, 197], "500": [3, 159, 189, 190, 196, 197], "uint8": [3, 73, 190, 196, 197], "none": [3, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 83, 84, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 106, 107, 108, 114, 116, 118, 120, 121, 122, 133, 140, 141, 142, 143, 146, 147, 149, 150, 155, 156, 159, 162, 163, 164, 165, 167, 170, 172, 175, 177, 179, 180, 181, 187, 189, 190, 194, 195, 196, 197], "is_shar": [3, 17, 44, 72, 78, 85, 88, 96, 107, 108, 109, 114, 116, 165, 167, 170, 172, 175, 190, 192, 194, 195, 196, 197], "A": [3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 51, 68, 72, 74, 75, 78, 79, 83, 88, 89, 100, 103, 108, 114, 116, 120, 124, 127, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 153, 156, 159, 160, 167, 170, 172, 175, 177, 190, 195, 196], "note": [3, 10, 11, 12, 13, 20, 42, 43, 45, 46, 78, 108, 189, 190, 192, 194, 195, 196], "launch": 3, "quit": [3, 189, 190, 196], "mani": [3, 127, 132, 133, 134, 195, 196], "import": [3, 5, 6, 24, 26, 33, 43, 44, 45, 46, 65, 72, 78, 84, 85, 86, 87, 88, 96, 100, 107, 108, 109, 114, 115, 116, 118, 120, 121, 127, 153, 155, 165, 167, 170, 172, 175, 177, 189, 190, 192, 194, 195, 196, 197], "start": [3, 10, 83, 189, 190, 196], "bottleneck": 3, "why": [3, 189, 196], "so": [3, 5, 6, 20, 42, 43, 45, 46, 78, 116, 189, 196], "slow": 3, "onc": [3, 6, 10, 11, 12, 13, 20, 42, 43, 45, 46, 75, 115, 187, 189, 190, 196], "great": [3, 6, 7, 195, 197], "speedup": [3, 196], "serialenv": [3, 183, 196], "serial": [3, 20, 42, 43, 45, 46, 78], "mostli": [3, 13, 196, 197], "purpos": [3, 6, 177, 195, 196], "want": [3, 5, 6, 116, 189, 190, 195, 196, 197], "assess": [3, 189], "behaviour": [3, 43, 57, 113, 117, 155, 190], "subprocess": 3, "In": [3, 6, 9, 10, 11, 13, 20, 42, 43, 45, 46, 59, 68, 72, 74, 75, 77, 100, 108, 111, 113, 114, 116, 117, 126, 160, 179, 180, 181, 189, 190, 192, 195, 196], "case": [3, 6, 9, 10, 11, 12, 13, 17, 24, 26, 33, 42, 43, 45, 46, 75, 100, 108, 114, 116, 126, 151, 160, 179, 180, 181, 187, 189, 194, 195, 196], "raw": [3, 113, 117], "must": [3, 6, 10, 11, 12, 13, 17, 20, 36, 37, 38, 39, 42, 43, 45, 46, 72, 75, 89, 100, 108, 114, 120, 121, 144, 145, 146, 147, 148, 149, 150, 151, 155, 159, 160, 165, 167, 170, 172, 175, 189, 190, 192, 194, 195, 197], "treat": 3, "being": [3, 13, 20, 42, 43, 45, 46, 75, 82, 160, 179, 180, 181, 189, 190], "pass": [3, 12, 17, 20, 26, 42, 43, 45, 46, 59, 68, 74, 76, 77, 78, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 104, 105, 108, 110, 111, 114, 115, 116, 123, 124, 179, 180, 181, 189, 190, 192, 196], "anoth": [3, 42, 43, 45, 46, 74, 100, 108, 127, 130, 132, 133, 134, 135, 189, 192, 194, 195, 196], "valu": [3, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 42, 43, 44, 45, 46, 55, 57, 64, 68, 70, 72, 73, 74, 75, 77, 78, 84, 85, 86, 87, 90, 91, 92, 93, 94, 96, 97, 98, 100, 102, 103, 106, 107, 108, 109, 112, 113, 114, 117, 118, 120, 121, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 159, 165, 170, 172, 175, 177, 187, 189, 190, 192, 194, 196, 197], "To": [3, 5, 6, 20, 31, 42, 43, 45, 46, 78, 85, 86, 87, 159, 189, 190, 194, 196, 197], "logic": 3, "torchvis": [3, 196, 197], "transformedenv": [3, 59, 64, 65, 72, 74, 78, 165, 167, 170, 172, 175, 183, 189, 190, 192, 196, 197], "primit": [3, 189, 190], "compos": [3, 20, 31, 34, 35, 40, 42, 43, 45, 46, 74, 75, 78, 165, 167, 170, 172, 175, 183, 190, 192, 196, 197], "built": [3, 6, 173, 177, 178, 181, 196], "base_env": [3, 72, 189, 190, 196, 197], "totensorimag": [3, 167, 183, 190, 196, 197], "in_kei": [3, 44, 55, 56, 57, 58, 60, 62, 63, 65, 66, 68, 69, 70, 71, 73, 74, 77, 78, 84, 85, 86, 87, 88, 107, 108, 114, 115, 116, 118, 122, 123, 128, 129, 172, 175, 177, 189, 190, 192, 194, 196, 197], "resiz": [3, 183, 190, 196], "64": [3, 90, 91, 98, 189, 190, 192, 196, 197], "By": [3, 23, 43, 45, 46, 108, 155, 181, 195, 196], "default": [3, 10, 11, 12, 13, 17, 18, 20, 23, 26, 31, 36, 37, 42, 43, 45, 46, 47, 56, 57, 62, 64, 65, 68, 71, 72, 73, 75, 77, 78, 83, 84, 88, 89, 90, 91, 92, 93, 94, 97, 98, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 124, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 149, 150, 151, 153, 154, 155, 157, 159, 165, 170, 172, 175, 177, 181, 187, 189, 190, 194, 195, 196, 197], "now": [3, 6, 189, 192, 194, 195, 196], "appar": [3, 153], "bring": [3, 196], "signific": [3, 196], "kind": [3, 28, 83], "consult": 3, "achiev": [3, 20, 42, 43, 45, 46, 187, 194, 195, 196], "interest": [3, 45, 46, 108, 196], "abov": [3, 6, 20, 42, 43, 45, 46, 113, 117, 126, 187, 189, 190, 196], "resize_par": 3, "sinc": [3, 6, 20, 42, 43, 44, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 189, 190, 196, 197], "out_kei": [3, 44, 45, 46, 55, 57, 62, 66, 68, 69, 70, 73, 74, 77, 84, 85, 87, 88, 107, 108, 114, 115, 116, 118, 120, 121, 122, 123, 155, 177, 189, 192, 194, 196, 197], "keyword": [3, 20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 108, 114, 178, 189, 194, 196], "argument": [3, 10, 11, 12, 13, 17, 20, 42, 43, 45, 46, 59, 68, 72, 74, 75, 77, 89, 100, 102, 108, 114, 118, 153, 161, 165, 167, 170, 172, 175, 177, 178, 181, 189, 190, 194, 196], "easi": [3, 190, 195, 196], "root": [3, 113, 117, 196], "graph": [3, 138, 139], "inv": 3, "appli": [3, 20, 30, 31, 32, 42, 43, 45, 46, 75, 113, 187, 189, 190, 196, 197], "revers": 3, "order": [3, 12, 20, 23, 30, 31, 32, 42, 43, 45, 46, 75, 114, 116, 194], "chain": [3, 31, 59, 89, 116, 196], "taken": [3, 42, 43, 45, 46, 190], "includ": [3, 6, 8, 20, 36, 37, 38, 39, 42, 43, 44, 45, 46, 75, 78, 161, 187, 189, 190, 195, 196], "invers": [3, 125], "through": [3, 12, 45, 46, 100, 108, 116, 124, 189, 190, 192, 194, 196], "in_keys_inv": [3, 60, 74, 189, 192, 196], "append_transform": [3, 30, 31, 32, 68, 72, 189, 196, 197], "doubletofloat": [3, 165, 170, 172, 175, 183, 189, 192], "float32": [3, 17, 24, 28, 33, 44, 60, 65, 72, 73, 85, 86, 87, 88, 96, 107, 108, 109, 114, 116, 118, 120, 121, 165, 167, 170, 172, 175, 190, 192, 194, 195, 196, 197], "float64": [3, 20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114, 192, 196], "torchrl": [4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 191, 192, 193, 194, 195], "against": [4, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 108, 114], "latest": [4, 197], "guarante": [4, 20, 36, 37, 38, 39, 42, 43, 45, 46, 78, 197], "wa": [4, 6, 42, 43, 45, 46, 75, 131, 136, 189, 190, 192, 197], "avail": [4, 5, 108, 120, 121, 179, 180, 189, 190, 196], "releas": [4, 6, 20, 42, 43, 45, 46, 75, 197], "howev": [4, 6, 20, 42, 43, 45, 46, 75, 189, 190, 195, 196], "project": [4, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 108, 114, 190, 196, 197], "willing": 4, "keep": [4, 6, 11, 68, 77, 78, 153, 159, 190, 195, 196, 197], "backward": [4, 20, 42, 43, 45, 46, 78, 189, 190, 195], "older": [4, 6], "If": [4, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 42, 43, 44, 45, 46, 57, 58, 64, 68, 74, 75, 77, 78, 89, 99, 100, 108, 114, 116, 123, 124, 126, 140, 149, 150, 156, 159, 160, 162, 170, 172, 175, 177, 181, 184, 189, 190, 192, 194, 195, 196, 197], "you": [4, 5, 6, 7, 20, 42, 43, 45, 46, 78, 184, 189, 190, 192, 194, 195, 196, 197], "feel": [4, 184, 197], "free": [4, 6, 133, 187, 197], "gladli": 4, "instruct": 5, "prepar": 5, "conda": [5, 6, 184], "assum": [5, 17, 23, 32, 43, 45, 46, 68, 72, 77, 99, 146, 147, 149, 150, 189, 190, 192], "let": [5, 6, 20, 42, 43, 45, 46, 155, 189, 190, 192, 194, 195, 196, 197], "creat": [5, 6, 10, 11, 13, 20, 31, 42, 43, 45, 46, 68, 74, 75, 78, 83, 89, 90, 91, 92, 93, 98, 100, 108, 114, 115, 116, 129, 130, 134, 162, 163, 164, 177, 179, 180, 189, 190, 194, 195, 196, 197], "n": [5, 6, 15, 18, 20, 23, 42, 43, 45, 46, 56, 108, 140, 187, 189, 190, 195, 196], "7": [5, 18, 23, 88, 89, 99, 100, 189, 190, 197], "cmake": 5, "14": [5, 9, 65, 190], "activ": [5, 6, 8, 89, 97, 100, 133, 197], "sim": 5, "bullet": 5, "physic": [5, 6, 187, 189], "headless": [5, 6], "mode": [5, 12, 20, 42, 43, 45, 46, 75, 78, 80, 82, 94, 106, 108, 112, 113, 117, 155, 189, 190, 196, 197], "necessari": [5, 10, 11, 12, 13, 116, 134, 141, 142, 143, 189], "cluster": [5, 6, 184], "withbullet": 5, "forg": [5, 6], "aihabitat": 5, "nightli": 5, "y": [5, 6, 99, 123], "git": [5, 6], "facebookresearch": 5, "subdirectori": 5, "reduc": [5, 18], "verbos": 5, "export": 5, "magnum_log": 5, "quiet": 5, "habitat_sim_log": 5, "remov": [5, 20, 42, 43, 45, 46, 189, 196], "command": [5, 6, 196], "more": [5, 7, 10, 11, 12, 13, 20, 24, 25, 26, 27, 30, 31, 32, 42, 43, 45, 46, 79, 100, 102, 114, 120, 130, 133, 141, 144, 145, 148, 156, 165, 184, 187, 189, 190, 192, 194, 195, 196], "detail": [5, 6, 20, 42, 43, 45, 46, 75, 120, 130, 133, 165, 184, 192, 194, 195], "readm": [5, 6], "md": [5, 6], "list": [5, 6, 8, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 38, 39, 42, 43, 44, 45, 46, 56, 68, 75, 77, 100, 108, 114, 116, 118, 139, 141, 142, 143, 155, 156, 179, 180, 189, 190, 192, 194, 195, 196, 197], "habitatenv": [5, 183], "_has_habitat": 5, "assert": [5, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 43, 78, 83, 151, 158, 189, 190, 192, 194, 195, 196], "check": [5, 6, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 44, 45, 46, 57, 61, 108, 114, 122, 189, 190, 192, 196], "_env": [5, 196], "available_env": [5, 47, 48, 49, 50, 52, 53, 196], "startswith": 5, "importerror": [5, 6], "usr": [5, 6], "x86_64": [5, 6], "linux": [5, 6], "gnu": [5, 6], "libopengl": [5, 6], "undefin": [5, 6, 20, 42, 43, 45, 46, 75], "symbol": [5, 6], "_glapi_tls_curr": [5, 6], "solut": [5, 6, 8, 184, 187, 197], "debug": [5, 196], "link": [5, 6], "right": [5, 6, 99, 189, 190, 196], "replac": [5, 6, 20, 190], "path": [5, 6, 20, 36, 42, 43, 45, 46, 68, 77, 159, 187], "mujoco_env": [5, 6], "proper": [5, 6], "name": [5, 6, 9, 20, 42, 43, 45, 46, 47, 75, 127, 130, 132, 133, 134, 135, 154, 165, 167, 170, 172, 175, 187, 189, 190, 194, 196], "libglvnd": [5, 6], "glx": [5, 6], "cos7": [5, 6], "reinstal": [5, 6], "xvfbwrapper": [5, 6], "config": [5, 6, 162, 163, 164, 165, 167, 170, 172, 173, 175, 178], "var": [5, 6, 20, 42, 43, 45, 46, 75], "ld_preload": [5, 6], "sysroot": [5, 6], "lib64": [5, 6], "libgldispatch": [5, 6], "offici": 6, "repositori": 6, "stand": [6, 85, 86, 87, 192, 196], "joint": [6, 190], "dynam": 6, "contact": 6, "engin": 6, "facilit": [6, 26, 67, 68, 77, 85, 86, 87, 189], "develop": [6, 197], "robot": [6, 68, 77], "biomechan": 6, "graphic": 6, "anim": 6, "machin": [6, 20], "area": 6, "demand": [6, 196], "fast": [6, 8, 134, 189, 190], "accur": [6, 189], "articul": 6, "interact": [6, 12, 82, 108, 196], "recent": [6, 189, 196], "acquir": [6, 189], "access": [6, 20, 42, 43, 45, 46, 68, 181, 184, 195], "whomev": 6, "licenc": 6, "incorpor": [6, 189], "make": [6, 20, 39, 42, 43, 45, 46, 50, 53, 65, 68, 83, 102, 108, 133, 164, 181, 189, 190, 192, 194, 195, 196, 197], "relianc": 6, "obsolet": 6, "seri": [6, 23, 40, 41, 46, 64, 74, 196], "legaci": 6, "document": [6, 20, 42, 43, 45, 46, 75, 197], "capabl": [6, 187, 189, 192, 196], "glfw": 6, "osmesa": 6, "egl": 6, "hand": [6, 189], "gpu": [6, 7, 20, 42, 43, 45, 46, 196], "our": [6, 189, 190, 192, 194, 195, 197], "advic": [6, 196], "sudo": [6, 184], "enabl": [6, 155], "apt": 6, "libglfw3": 6, "libglew2": 6, "libgl1": 6, "mesa": 6, "libosmesa6": 6, "via": [6, 45, 74, 77, 128, 187, 189, 196], "awar": [6, 36, 37, 38, 39], "fact": [6, 190, 196], "indent": 6, "workflow": [6, 85, 86, 87], "thing": [6, 190, 196], "glew": 6, "mesalib": 6, "anaconda": 6, "libgl": 6, "cos6": 6, "menpo": 6, "glfw3": 6, "both": [6, 20, 42, 43, 45, 46, 75, 85, 86, 87, 89, 100, 155, 189, 194, 196], "tell": 6, "appropri": [6, 10, 11, 12, 13, 40, 41, 178, 181], "variabl": [6, 18, 23, 85, 86, 87, 134, 187, 194], "mujoco_gl": 6, "pyopengl_platform": 6, "deactiv": 6, "pre": [6, 20, 37, 42, 43, 45, 46, 68, 77, 196], "binari": [6, 15, 23, 55, 120, 121], "need": [6, 20, 39, 42, 43, 45, 46, 59, 68, 74, 75, 76, 77, 78, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 104, 105, 108, 110, 111, 114, 115, 116, 124, 126, 134, 140, 159, 181, 189, 194, 195, 196, 197], "These": [6, 196], "instead": [6, 18, 20, 42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 181, 189, 190, 194, 196], "becaus": [6, 74, 93, 99, 108, 114, 189, 190, 192, 195, 196], "refer": [6, 20, 42, 43, 45, 46, 75, 78, 88, 97, 104, 105, 110, 111, 120, 130, 133, 141, 144, 145, 148, 165, 189, 196], "setup": 6, "like": [6, 20, 42, 43, 45, 46, 51, 73, 134, 189, 195, 196], "mkdir": 6, "cd": 6, "here": [6, 8, 189, 190, 192, 194, 195, 196, 197], "tag": [6, 181], "earlier": [6, 10, 11, 12, 13, 189], "roboti": 6, "u": [6, 189, 194, 196, 197], "download": [6, 68, 77, 189, 190, 191, 192, 194, 195, 196, 197], "html": 6, "wget": 6, "mujoco210": 6, "tar": 6, "gz": 6, "xf": 6, "charg": 6, "obtain": [6, 43, 88, 189, 190], "mjkei": 6, "txt": 6, "mjlib_path": 6, "home": [6, 189, 196], "bin": 6, "libmujoco210": 6, "ld_library_path": 6, "mujoco_py_mujoco_path": 6, "too": [6, 113, 117, 127, 130, 132, 133, 134, 135, 189, 190, 196], "mujoco_py_mjkey_path": 6, "reload": 6, "recommend": [6, 195], "hard": [6, 131, 190, 196], "chang": [6, 20, 36, 37, 38, 39, 42, 43, 45, 46, 75, 78, 189, 195, 196], "later": [6, 93, 108, 189, 190], "known": [6, 7, 189], "try": [6, 123, 190, 195, 196, 197], "nativ": [6, 8, 42, 43, 45, 46, 56, 108, 114, 116, 190], "usag": [6, 135], "local": [6, 12, 20, 30, 42, 43, 45, 46, 75], "modifi": [6, 20, 42, 43, 45, 46, 59, 68, 72, 74, 75, 77, 114, 161, 170, 172, 175, 189, 194], "nvidia": 6, "driver": 6, "those": [6, 45, 46, 65, 108, 116, 160, 179, 180, 189, 190, 196], "hack": 6, "line": [6, 20, 42, 43, 45, 46, 189, 196], "adatp": 6, "script": [6, 165, 167, 170, 172, 175, 177, 181, 187, 189, 190, 192, 194, 195, 196, 197], "go": [6, 194, 196], "unnot": 6, "until": 6, "complet": [6, 8, 43, 184, 190, 192], "mujoco_pi": 6, "trigger": 6, "pipelin": 6, "caus": 6, "give": [6, 44, 184, 189, 190, 197], "troubleshoot": 6, "gl": 6, "h": [6, 58, 69, 73], "eglshim": 6, "10": [6, 17, 44, 73, 88, 115, 134, 135, 151, 187, 189, 190, 193, 194, 195, 196, 197], "fatal": 6, "error": [6, 9, 20, 42, 43, 45, 46, 123, 189, 190, 195, 196], "No": 6, "directori": [6, 36, 187], "sure": [6, 39, 83, 181, 189, 194, 195, 196, 197], "glu": 6, "38": [6, 190], "disappear": [6, 192], "filenotfounderror": 6, "errno": 6, "patchelf": 6, "_solution_": 6, "saniti": 6, "cymj": 6, "linuxgpuextensionbuild": 6, "filenam": 6, "runtimeerror": [6, 20, 42, 43, 45, 46, 75, 189, 195, 196], "stack": [6, 26, 45, 46, 78, 83, 116, 151, 190, 192, 195, 197], "job": [6, 195], "schedul": [6, 155], "slurm": 6, "mjrendercontext": 6, "pyx": 6, "46": [6, 190], "__init__": [6, 44, 88, 118, 120, 123, 187, 194, 196], "114": 6, "_setup_opengl_context": 6, "opengl_context": 6, "130": 6, "offscreenopenglcontext": 6, "fail": 6, "opengl": 6, "global": [6, 108, 187, 189, 194], "cuda_visible_devic": 6, "id": [6, 14, 134, 172], "around": [6, 13, 26, 27, 32, 44, 108, 114, 141, 194, 196], "slurm_step_gpu": 6, "enviro": 6, "imag": [6, 47, 58, 68, 73, 77, 100, 190, 195, 196], "black": 6, "read": [6, 10, 11, 12, 13, 36, 37, 38, 39, 43, 45, 46, 74, 85, 86, 87, 106, 108, 114, 116, 127, 130, 132, 133, 134, 135, 159, 170, 172, 175, 189, 190, 192, 194, 196], "miss": [6, 9, 17, 20, 42, 43, 45, 46, 75, 116, 184], "onscreen": 6, "101": 6, "displai": [6, 159, 187, 190], "correctli": [6, 20, 42, 43, 45, 46], "ask": [7, 196], "core": [7, 165, 167, 170, 172, 175, 187, 197], "than": [7, 10, 11, 12, 13, 93, 100, 114, 160, 184, 189, 190, 194, 195, 196, 197], "twice": [7, 135], "much": [7, 24, 26, 33, 132, 133, 195, 196], "spin": [8, 196], "hug": 8, "face": [8, 190, 196], "syllabu": 8, "lectur": 8, "best": [8, 190], "awesom": [8, 195], "curat": 8, "discuss": 8, "reddit": 8, "maintain": 8, "reagent": 8, "product": [8, 179, 180], "orient": [8, 196], "stabl": [8, 189], "baselines3": 8, "tf": 8, "agent": [8, 30, 103], "bandit": 8, "tensorflow": 8, "kera": 8, "acm": 8, "framework": [8, 44, 196, 197], "dopamin": 8, "prototyp": [8, 183], "salina": 8, "flexibl": [8, 187, 194, 196], "simpl": [8, 20, 23, 42, 43, 45, 46, 90, 108, 189, 190, 195, 196], "sequenti": [8, 20, 42, 43, 45, 46, 116, 194, 195, 196], "tianshou": 8, "eleg": 8, "rlpyt": 8, "rllib": 8, "industri": [8, 197], "grade": 8, "factori": 8, "throughput": 8, "asynchron": [8, 11, 20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114, 179], "cherri": 8, "jaxrl": 8, "continu": [8, 16, 21, 22, 29, 90, 91, 92, 93, 108, 116, 136, 141, 144, 145, 148, 165, 189, 196, 197], "space": [8, 23, 28, 105, 108, 114, 116, 120, 121, 189, 196, 197], "mbrl": [8, 44], "rlmeta": 8, "light": 8, "weight": [8, 10, 11, 12, 13, 20, 24, 26, 42, 43, 45, 46, 59, 68, 72, 75, 77, 103, 114, 127, 160, 176, 187, 189, 190, 192, 197], "elegantrl": 8, "cloud": 8, "mtrl": 8, "baselin": [8, 190], "module_nam": 9, "str": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 32, 36, 42, 43, 45, 46, 47, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 69, 70, 71, 73, 74, 75, 77, 78, 80, 82, 84, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 101, 102, 103, 107, 108, 114, 116, 118, 120, 121, 122, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 140, 142, 143, 154, 155, 158, 162, 165, 170, 172, 173, 175, 181, 189], "from_vers": 9, "to_vers": 9, "version": [9, 20, 42, 43, 45, 46, 143, 189, 190, 196], "decor": 9, "fit": [9, 65, 187], "lead": [9, 17, 113, 117, 197], "explicit": [9, 99, 189], "intersect": 9, "rang": [9, 18, 78, 83, 132, 187, 189, 190, 194, 195, 197], "paramet": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 170, 172, 175, 177, 178, 179, 180, 181, 189, 190, 194, 197], "longer": [9, 190], "13": [9, 190, 194], "fun": [9, 194, 195], "self": [9, 20, 26, 42, 43, 44, 45, 46, 59, 68, 72, 75, 77, 88, 114, 115, 118, 120, 123, 187, 189, 194, 195, 196, 197], "x": [9, 14, 17, 20, 73, 89, 95, 98, 99, 100, 120, 123, 124, 126, 144, 145, 146, 147, 148, 149, 150, 159, 189, 190, 194, 197], "indic": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 43, 44, 45, 46, 57, 72, 89, 100, 124, 156, 162, 181, 184, 187, 189, 194, 195, 196], "doesn": 9, "create_env_fn": [10, 11, 12, 13, 45, 46, 189, 197], "sequenc": [10, 11, 12, 13, 17, 19, 24, 25, 27, 31, 40, 41, 55, 56, 57, 58, 60, 62, 63, 65, 66, 69, 70, 71, 73, 74, 78, 84, 89, 94, 100, 106, 107, 108, 116, 118, 156, 158, 159, 170, 172, 175, 190, 192, 194, 196], "callabl": [10, 11, 12, 13, 20, 24, 25, 26, 27, 31, 42, 43, 44, 45, 46, 126, 133, 156, 163, 164, 179, 180, 181], "union": [10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 32, 33, 42, 43, 45, 46, 54, 59, 65, 68, 71, 75, 77, 78, 89, 90, 91, 92, 93, 94, 98, 99, 100, 102, 103, 106, 107, 108, 112, 113, 114, 116, 117, 122, 123, 125, 129, 130, 131, 134, 135, 136, 141, 142, 143, 163, 164, 165, 170, 172, 173, 175, 177, 178, 179, 180, 181], "probabilistictensordictmodul": [10, 11, 12, 13, 116, 127, 132, 133, 163, 164, 183, 197], "tensordictbas": [10, 11, 12, 13, 14, 17, 20, 26, 30, 32, 42, 43, 45, 46, 56, 59, 64, 72, 74, 76, 78, 79, 83, 88, 101, 108, 114, 116, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 159], "total_fram": [10, 11, 12, 13, 159, 161, 177, 187, 189, 190, 197], "int": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 56, 57, 58, 59, 62, 64, 65, 68, 69, 75, 76, 77, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 120, 121, 127, 128, 132, 133, 134, 135, 151, 152, 153, 155, 156, 159, 160, 165, 170, 172, 173, 175, 179, 180, 181], "create_env_kwarg": [10, 11, 12, 13, 45, 46, 189], "dict": [10, 11, 12, 13, 17, 18, 20, 31, 42, 43, 45, 46, 75, 78, 89, 90, 91, 92, 93, 98, 99, 100, 108, 155, 163, 164, 165, 172, 175, 179, 180, 181, 196], "max_frames_per_traj": [10, 11, 12, 13, 161, 189, 197], "frames_per_batch": [10, 11, 12, 13, 161, 189, 190, 197], "200": [10, 11, 12, 13, 20, 42, 43, 45, 46, 90, 91, 97, 110, 111, 189], "init_random_fram": [10, 11, 12, 13, 161, 189, 190], "reset_at_each_it": [10, 11, 12, 13, 189], "postproc": [10, 11, 12, 13, 189, 190, 197], "split_traj": [10, 11, 12, 13, 189], "pin_memori": [10, 12, 13, 24, 25, 26, 27, 31, 45, 46, 67, 156, 189, 197], "passing_devic": [10, 11, 12, 13, 189, 190, 197], "update_at_each_batch": [10, 11, 13, 189], "init_with_lag": [10, 11, 12, 13], "exploration_mod": [10, 12, 108, 155, 183, 189, 190, 194], "random": [10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 28, 29, 34, 42, 43, 44, 45, 46, 64, 65, 72, 82, 108, 114, 115, 134, 155, 162, 189, 190, 196, 197], "reset_when_don": [10, 12], "given": [10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 44, 45, 46, 59, 65, 68, 72, 75, 77, 83, 88, 97, 108, 114, 116, 120, 121, 126, 128, 129, 140, 141, 142, 143, 152, 155, 177, 187, 189, 190, 194, 196], "datacollector": [10, 11, 12, 13, 108], "separ": [10, 11, 13, 14, 128, 134, 135, 189, 196], "synchron": [10, 179, 180], "collect": [10, 11, 12, 13, 20, 24, 25, 26, 27, 30, 31, 32, 68, 77, 128, 134, 135, 151, 156, 159, 160, 161, 162, 177, 187, 189, 190, 195, 196, 197], "item": [10, 26, 61, 128, 129, 151, 187, 189, 190, 195], "queri": [10, 11, 12, 13, 20, 42, 43, 45, 46, 68, 74, 78, 116, 194, 197], "between": [10, 11, 12, 13, 20, 42, 43, 45, 46, 64, 70, 73, 75, 89, 100, 108, 132, 137, 155, 159, 189, 190, 194, 195, 196], "recept": 10, "safe": [10, 11, 15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 108, 114, 122, 189, 197], "onlin": [10, 13, 133, 151, 181], "accept": [10, 11, 12, 13, 20, 42, 43, 44, 45, 46, 59, 68, 72, 75, 77, 114, 187, 196], "bound": [10, 11, 12, 13, 16, 17, 20, 21, 42, 43, 45, 46, 78, 108, 110, 111, 114, 196], "total": [10, 11, 12, 13, 43, 127, 132, 133, 151, 153, 155, 159, 161, 162, 189, 190, 192, 193, 194, 195, 196, 197], "frame": [10, 11, 12, 13, 20, 43, 56, 153, 155, 159, 161, 162, 189, 190, 196, 197], "greater": [10, 11, 13, 189, 190, 197], "close": [10, 11, 12, 13, 43, 127, 132, 133, 189, 197], "signal": [10, 11, 13, 189], "sent": [10, 11, 13, 36, 37, 45, 46, 78, 190, 195], "worker": [10, 11, 12, 13, 45, 46, 78, 179, 180, 181, 196, 197], "server": [10, 11, 13], "per": [10, 11, 12, 13, 45, 97, 159, 179, 180, 189, 190, 197], "span": [10, 11, 12, 13], "unless": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 194], "reach": [10, 11, 12, 13, 42, 43, 44, 45, 46, 196, 197], "n_steps_max": [10, 11, 12, 13, 20, 189], "wrap": [10, 11, 12, 13, 20, 42, 43, 45, 46, 85, 86, 87, 115, 189, 190, 194, 196], "track": [10, 11, 12, 13, 78, 153, 189, 190, 195], "independ": [10, 11, 12, 13, 74, 135, 187, 189, 197], "neg": [10, 11, 12, 13, 24, 26, 33, 189], "ignor": [10, 11, 12, 13, 20, 42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 194, 195], "length": [10, 11, 12, 13, 15, 45, 46, 88, 89, 90, 92, 95, 100, 114, 151, 189, 190, 195, 196], "equival": [10, 11, 12, 13, 20, 42, 43, 45, 46, 75, 196, 197], "configur": [10, 11, 12, 13, 133, 170, 172, 175], "mainli": [10, 11, 12, 13], "offlin": [10, 11, 12, 13, 187, 197], "whether": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 42, 43, 44, 45, 46, 75, 89, 100, 118, 128, 129, 130, 134, 135, 143, 156, 190, 196], "postprocessor": [10, 11, 13], "format": [10, 11, 12, 13, 20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114, 195, 196], "boolean": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 44, 144, 145, 146, 147, 148, 149, 150, 187], "split": [10, 11, 12, 13, 127, 130, 132, 133, 134, 135, 187, 197], "accord": [10, 11, 12, 13, 24, 26, 65, 71, 102, 110, 113, 117, 194, 195], "split_trajectori": [10, 11, 12, 13, 183], "inform": [10, 11, 12, 13, 20, 42, 43, 45, 46, 89, 100, 187, 190], "place": [10, 11, 12, 13, 17, 20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 78, 114, 160, 161, 190, 194], "update_policy_weights_": [10, 11, 12, 13, 189, 190, 197], "dure": [10, 11, 12, 13, 42, 43, 45, 46, 75, 155, 159, 189, 196], "loop": [10, 11, 12, 13, 43, 83, 159, 187, 189, 192, 195], "accommod": [10, 11, 12, 13], "lag": [10, 11, 12, 13], "kept": [10, 11, 12, 13, 45, 46, 74, 83, 113, 117], "origin": [10, 11, 12, 13, 68, 75, 77, 108, 114, 116, 131, 133, 172, 175, 189, 192, 195, 196], "store": [10, 11, 12, 13, 17, 20, 26, 32, 36, 37, 38, 42, 43, 45, 46, 78, 88, 99, 165, 167, 170, 172, 175, 187, 189, 190, 195, 196], "long": [10, 11, 12, 13, 18, 23, 190, 195], "updat": [10, 11, 12, 13, 20, 24, 26, 33, 42, 43, 44, 45, 46, 75, 78, 88, 108, 114, 131, 133, 136, 141, 142, 143, 155, 159, 160, 163, 164, 176, 177, 187, 189, 190, 194, 196, 197], "everi": [10, 11, 13, 17, 20, 23, 39, 42, 43, 45, 46, 59, 68, 74, 76, 77, 78, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 159, 187, 189, 190, 195], "truncat": [10, 11, 12, 13, 117, 196], "help": [10, 11, 12, 13, 20, 42, 43, 45, 46, 184, 189], "desynchron": [10, 11, 12, 13], "match": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 89, 94, 100, 108, 112, 114, 132, 134, 135, 160, 190, 192, 194, 195, 196, 197], "load_state_dict": [10, 11, 12, 13, 20, 42, 43, 45, 46, 75, 78, 187], "state_dict": [10, 11, 12, 13, 20, 42, 43, 45, 46, 75, 78, 187, 196], "ordereddict": [10, 11, 12, 13, 20, 42, 43, 45, 46, 75, 78], "load": [10, 11, 12, 13, 24, 25, 26, 31, 48, 156, 187, 190], "form": [10, 11, 13, 20, 24, 25, 26, 31, 42, 43, 45, 46, 78, 126, 127, 132, 133, 156, 159], "worker0": [10, 11, 13], "state_dict0": [10, 11, 13], "worker1": [10, 11, 13], "state_dict1": [10, 11, 13], "reset_idx": [10, 11, 13], "static_se": [10, 11, 12, 13, 42, 43, 45, 46, 75], "increment": [10, 11, 12, 13, 42, 43, 45, 46, 132], "last": [10, 11, 12, 13, 20, 42, 44, 62, 89, 99, 100, 104, 189, 190, 196, 197], "env_fn": [10, 11, 12, 13, 179, 180], "v0": [10, 11, 13, 43, 49, 50, 52, 53, 59, 75, 78, 177], "env_fn_parallel": [10, 11, 12, 13], "6": [10, 11, 12, 13, 65, 89, 94, 99, 100, 112, 118, 165, 167, 170, 172, 175, 189, 190, 194, 195, 196, 197], "syncdatacollector": [10, 11, 13, 177, 180, 183], "out_se": [10, 11, 12, 13, 196], "shutdown": [10, 11, 12, 13, 189], "shut": [10, 11, 12, 13], "down": [10, 11, 12, 13], "irrevers": [10, 11, 13], "arg": [11, 17, 20, 30, 36, 37, 42, 43, 44, 45, 46, 51, 68, 75, 76, 77, 84, 85, 89, 96, 100, 109, 115, 153, 159, 181], "kwarg": [11, 12, 13, 17, 20, 30, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 68, 72, 75, 76, 77, 84, 85, 89, 90, 91, 92, 93, 96, 98, 100, 101, 106, 107, 108, 109, 112, 114, 115, 116, 117, 127, 132, 140, 153, 159, 163, 164, 165, 170, 172, 175, 178, 179, 180], "occur": [11, 57, 108, 114, 196], "iter": [11, 12, 19, 20, 24, 25, 26, 27, 30, 31, 32, 42, 43, 45, 46, 65, 78, 89, 100, 108, 114, 116, 122, 139, 155, 156, 158, 159, 170, 172, 175, 187, 189], "envcreat": [12, 177, 178, 181, 189, 190, 196, 197], "return_in_plac": 12, "return_same_td": 12, "constructor": [12, 74, 165, 167, 170, 172, 175, 178, 181, 194], "stop": [12, 42, 43, 45, 46, 196, 197], "equat": [12, 126, 127, 136], "exce": 12, "batcher": 12, "yield": [12, 20, 42, 43, 45, 46], "cautious": [12, 133], "ad": [12, 20, 24, 25, 26, 27, 30, 31, 32, 33, 42, 43, 45, 46, 75, 102, 103, 127, 132, 133, 156, 189, 196], "whole": [12, 20, 42, 43, 45, 46, 75, 151, 190], "content": [12, 89, 100, 190, 195, 197], "ident": [12, 45, 46, 179, 180, 189, 194, 195], "chunk": 12, "policy_state_dict": 12, "env_state_dict": 12, "singl": [13, 20, 24, 25, 26, 27, 30, 31, 32, 42, 43, 45, 46, 56, 57, 73, 89, 99, 100, 116, 130, 134, 146, 147, 149, 150, 156, 172, 181, 189, 190, 192, 194], "paradigm": 13, "prefer": 13, "mere": 13, "multiasyncdatacollector": [13, 179, 183, 189, 190, 197], "rollout_tensordict": 14, "traj_id": [14, 189, 190, 197], "zero": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 57, 65, 88, 99, 115, 124, 194, 195, 197], "pad": [14, 89, 90, 91, 99, 189, 190], "max": [14, 23, 112, 113, 117, 127, 134, 135, 189], "durat": [14, 190], "int64": [15, 18, 19, 23, 96, 109, 120, 121, 167, 190], "discret": [15, 18, 19, 23, 106, 120, 121, 130, 197], "vector": [15, 23, 45, 46, 90, 92, 100, 143, 149, 150, 183, 189, 190, 192, 196], "assert_is_in": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29], "belong": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29], "rais": [15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 61, 75, 123, 189, 196], "except": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 42, 61, 106, 115, 123, 189, 190, 195, 196], "otherwis": [15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 65, 72, 75, 78, 113, 117, 135, 155, 187, 189, 196], "encod": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 96, 105, 106, 109, 110, 120, 121, 126, 194], "val": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 197], "ndarrai": [15, 16, 17, 18, 19, 21, 22, 23, 24, 28, 29, 43], "np": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 43, 189], "slice": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 195], "tensor_to_index": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29], "is_in": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 196], "back": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 108, 114, 189], "heurist": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 189, 196], "rand": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 44, 88, 115, 196, 197], "uniform": [15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 28, 29, 33], "unbound": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 195], "to_numpi": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29], "transformed_in": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 74, 75, 112, 181], "type_check": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29], "whose": [15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114, 189], "point": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 33, 40, 41, 42, 43, 45, 46, 56, 59, 68, 72, 73, 75, 77, 101, 114, 126, 130, 142, 143, 159, 184, 192, 196], "fill": [15, 16, 17, 18, 19, 21, 22, 23, 28, 29, 72, 195], "minimum": [16, 21, 70, 97, 107, 112, 113, 117, 124, 126, 135, 151, 189, 196, 197], "float": [16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 33, 42, 43, 45, 46, 59, 60, 65, 68, 70, 71, 72, 73, 75, 77, 78, 94, 97, 102, 103, 110, 111, 112, 114, 117, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 156, 157, 189, 190, 196], "unidimension": [16, 23, 29, 195], "upper": [16, 21], "composit": [17, 196], "unnam": 17, "tupl": [17, 20, 24, 31, 42, 43, 45, 46, 54, 65, 90, 99, 100, 108, 114, 116, 128, 166, 168, 171, 174, 195], "effect": [17, 20, 42, 43, 45, 46, 75, 159, 190, 196], "cannot": [17, 195], "pixels_spec": 17, "ndboundedtensorspec": [17, 85, 86, 87, 107, 183, 196, 197], "32": [17, 89, 90, 91, 98, 100, 104, 105, 189, 190, 196, 197], "observation_vector_spec": 17, "33": [17, 20, 42, 43, 45, 46, 89, 100, 190], "composite_spec": 17, "observation_vector": [17, 57, 165, 170, 172, 175, 189], "within": [17, 20, 32, 42, 43, 45, 46, 59, 68, 74, 76, 77, 78, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 197], "randn": [17, 65, 84, 85, 86, 87, 96, 99, 107, 108, 109, 114, 116, 118, 120, 121, 158, 194, 195, 196, 197], "td_project": 17, "modif": [17, 20, 42, 43, 45, 46, 189, 195], "after": [17, 20, 42, 43, 45, 46, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 102, 189, 190, 194, 195, 196], "ob": [17, 60, 65, 73, 118, 189, 192, 196, 197], "yield_nesting_kei": 17, "keysview": 17, "selected_kei": [17, 45, 46, 189], "altern": [18, 126, 195], "onehottensorspec": 18, "categor": [18, 23, 106, 120, 121], "memori": [18, 20, 36, 42, 43, 45, 46, 59, 68, 72, 75, 77, 78, 114, 181, 187, 189, 197], "larg": 18, "action_valu": [18, 23, 96, 109, 120, 121, 167, 190], "arang": [18, 23, 96, 120, 151], "view": [18, 20, 23, 42, 43, 45, 46, 100, 120, 189, 195, 196, 197], "argmax": [18, 96, 109, 120, 121], "dim": [18, 57, 181, 189, 195], "chosen_action_valu": [18, 23, 109, 167, 190], "11": [18, 23, 73, 88, 189, 190], "outcom": [18, 23, 94, 112], "nvec": 19, "use_regist": [19, 23], "concaten": [19, 56, 57, 74, 100, 116, 189, 190, 195, 196], "hot": [19, 23, 96, 106, 109, 120, 121], "cardin": [19, 120, 121], "element": [19, 23, 24, 25, 26, 27, 30, 31, 32, 33, 36, 37, 38, 89, 114, 151, 156, 189, 196], "2": [19, 20, 42, 43, 45, 46, 57, 59, 65, 68, 72, 75, 77, 78, 89, 90, 91, 92, 96, 98, 100, 114, 118, 120, 127, 128, 132, 134, 135, 140, 146, 147, 149, 150, 151, 189, 190, 192, 195, 196, 197], "gamma": [20, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 177, 189, 190, 197], "present": [20, 24, 33, 42, 43, 45, 46, 90, 91, 92, 93, 98, 103, 114, 116, 127, 130, 132, 133, 134, 135, 181, 187, 189, 192, 197], "sutton": 20, "r": [20, 65, 108, 126, 140, 196], "1988": 20, "predict": [20, 97, 101, 130, 135, 140], "tempor": [20, 142], "44": [20, 190], "discount": [20, 127, 128, 129, 130, 132, 133, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 189, 190], "factor": [20, 103, 113, 117, 127, 128, 129, 130, 132, 133, 134, 189, 190, 196], "ahead": [20, 196], "add_modul": [20, 42, 43, 45, 46], "add": [20, 24, 25, 26, 27, 30, 31, 32, 40, 41, 42, 43, 45, 46, 102, 156, 189, 190, 195, 197], "child": [20, 42, 43, 45, 46, 195], "current": [20, 42, 43, 45, 46, 51, 75, 80, 97, 99, 111, 120, 121, 170, 187, 189, 196, 197], "fn": [20, 42, 43, 45, 46, 179, 180], "recurs": [20, 42, 43, 45, 46], "submodul": [20, 42, 43, 45, 46], "children": [20, 42, 43, 45, 46], "init": [20, 42, 43, 45, 46, 189, 190], "no_grad": [20, 42, 43, 45, 46, 189, 190], "init_weight": [20, 42, 43, 45, 46], "m": [20, 42, 43, 45, 46, 108, 189, 190], "linear": [20, 42, 43, 44, 45, 46, 59, 68, 72, 75, 77, 84, 85, 86, 87, 88, 89, 100, 102, 103, 107, 109, 110, 111, 114, 115, 116, 118, 120, 121, 123, 177, 192, 194, 197], "fill_": [20, 42, 43, 45, 46, 190, 195, 196], "net": [20, 42, 43, 45, 46, 99, 108, 134, 172, 177, 190, 194, 197], "in_featur": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 85, 89, 90, 91, 92, 93, 99, 100, 102, 103, 114, 194, 197], "out_featur": [20, 42, 43, 44, 45, 46, 59, 68, 72, 75, 77, 85, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 102, 103, 114, 189, 190, 194, 197], "bia": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 89, 97, 100, 102, 103, 114, 115, 124, 125, 126, 190, 197], "requires_grad": [20, 42, 43, 45, 46, 189], "bfloat16": [20, 42, 43, 45, 46], "cast": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 78, 114, 165, 167, 170, 172, 175, 195, 196], "datatyp": [20, 42, 43, 45, 46], "direct": [20, 42, 43, 45, 46, 190], "member": [20, 42, 43, 45, 46], "xdoctest": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "skip": [20, 42, 43, 45, 46, 75, 108, 153, 155], "buf": [20, 42, 43, 45, 46], "20l": [20, 42, 43, 45, 46], "1l": [20, 42, 43, 45, 46], "5l": [20, 42, 43, 45, 46], "immedi": [20, 42, 43, 45, 46, 140], "associ": [20, 42, 43, 45, 46, 110, 181, 194], "construct": [20, 42, 43, 45, 46, 108, 111, 159, 170, 194, 196], "optim": [20, 42, 43, 45, 46, 88, 102, 103, 133, 135, 159, 170, 177, 187, 189, 190, 195], "copi": [20, 42, 43, 45, 46, 75, 189, 190, 195], "doubl": [20, 22, 29, 42, 43, 45, 46, 59, 60, 68, 72, 73, 75, 77, 114, 129, 130, 131, 134, 136, 189, 196], "eval": [20, 42, 43, 45, 46, 75, 78, 189, 190], "certain": [20, 42, 43, 45, 46, 75, 132, 189, 190, 195, 196], "particular": [20, 42, 43, 45, 46, 75, 187, 190, 192], "behavior": [20, 42, 43, 45, 46, 75], "affect": [20, 42, 43, 45, 46, 74, 75], "dropout": [20, 42, 43, 45, 46, 75], "batchnorm": [20, 42, 43, 45, 46, 75], "disabl": [20, 42, 43, 45, 46, 75, 113, 117, 189], "gradient": [20, 42, 43, 45, 46, 75, 103, 113, 117, 140, 141, 142, 143, 159, 189, 190], "comparison": [20, 42, 43, 45, 46, 75], "sever": [20, 42, 43, 45, 46, 57, 75, 133, 196], "similar": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 78, 83, 108, 114, 189, 194, 196], "mechan": [20, 42, 43, 45, 46, 75], "confus": [20, 42, 43, 45, 46, 75], "extra_repr": [20, 42, 43, 45, 46], "extra": [20, 42, 43, 45, 46, 78], "represent": [20, 42, 43, 45, 46, 68, 77, 189, 190, 196], "string": [20, 42, 43, 45, 46, 108, 126, 158, 170, 172, 175], "forward": [20, 42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 104, 105, 108, 110, 111, 114, 115, 116, 118, 120, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 141, 142, 143, 189, 190, 194, 197], "tennsordict": 20, "dimens": [20, 56, 57, 62, 65, 73, 76, 89, 100, 102, 103, 112, 113, 127, 130, 132, 133, 134, 135, 181, 189, 195], "shift": [20, 124], "nontermin": [20, 189], "non": [20, 24, 26, 42, 43, 45, 46, 55, 59, 68, 72, 75, 77, 114, 189, 196], "termin": [20, 189, 190, 197], "original_reward": [20, 189], "previou": [20, 111, 189, 194, 196], "newli": 20, "get_buff": [20, 42, 43, 45, 46], "target": [20, 42, 43, 45, 46, 74, 108, 114, 128, 129, 130, 131, 132, 134, 135, 136, 140, 161, 176, 177, 187, 189, 190], "throw": [20, 42, 43, 45, 46, 196], "docstr": [20, 42, 43, 45, 46], "get_submodul": [20, 42, 43, 45, 46], "explan": [20, 42, 43, 45, 46], "how": [20, 24, 26, 33, 42, 43, 45, 46, 127, 131, 132, 133, 159, 184, 189, 190, 192, 196, 197], "fulli": [20, 42, 43, 45, 46, 190], "qualifi": [20, 42, 43, 45, 46], "referenc": [20, 42, 43, 45, 46], "attributeerror": [20, 42, 43, 45, 46], "invalid": [20, 42, 43, 45, 46], "resolv": [20, 42, 43, 45, 46], "someth": [20, 42, 43, 45, 46, 184, 196], "get_extra_st": [20, 42, 43, 45, 46, 78], "set_extra_st": [20, 42, 43, 45, 46, 78], "pickleabl": [20, 42, 43, 45, 46, 78], "ensur": [20, 24, 26, 33, 42, 43, 45, 46, 68, 78, 122, 189], "break": [20, 42, 43, 45, 46, 78, 189, 190, 194, 197], "pickl": [20, 42, 43, 45, 46, 78], "get_paramet": [20, 42, 43, 45, 46], "sai": [20, 42, 43, 45, 46, 196], "net_b": [20, 42, 43, 45, 46], "net_c": [20, 42, 43, 45, 46], "conv": [20, 42, 43, 45, 46, 89], "conv2d": [20, 42, 43, 45, 46, 89, 197], "16": [20, 42, 43, 45, 46, 190], "kernel_s": [20, 42, 43, 45, 46, 89, 90, 91, 190, 197], "stride": [20, 42, 43, 45, 46, 89, 90, 91, 98, 190, 197], "100": [20, 42, 43, 45, 46, 65, 82, 152, 159, 177, 189, 190, 192, 196, 197], "diagram": [20, 42, 43, 45, 46], "show": [20, 42, 43, 45, 46, 190, 194, 197], "itself": [20, 42, 43, 45, 46], "two": [20, 42, 43, 45, 46, 93, 108, 132, 135, 137, 155, 159, 170, 172, 175, 189, 190, 192, 194, 195, 196], "would": [20, 42, 43, 45, 46, 100, 187, 190, 194, 195, 196], "degre": [20, 42, 43, 45, 46], "named_modul": [20, 42, 43, 45, 46], "o": [20, 42, 43, 45, 46], "transit": [20, 42, 43, 45, 46, 189, 190], "alwai": [20, 42, 43, 45, 46, 64, 190], "half": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114, 189], "ipu": [20, 42, 43, 45, 46], "strict": [20, 42, 43, 45, 46, 75], "descend": [20, 42, 43, 45, 46, 75], "exactli": [20, 42, 43, 45, 46, 51, 75, 115], "persist": [20, 42, 43, 45, 46, 75], "strictli": [20, 42, 43, 45, 46, 75], "enforc": [20, 42, 43, 45, 46, 75], "missing_kei": [20, 42, 43, 45, 46, 75], "unexpected_kei": [20, 42, 43, 45, 46, 75], "unexpect": [20, 42, 43, 45, 46, 75, 196], "namedtupl": [20, 42, 43, 45, 46, 75], "regist": [20, 23, 42, 43, 45, 46, 59, 68, 74, 75, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 187, 194], "duplic": [20, 42, 43, 45, 46, 129, 130, 195], "l": [20, 42, 43, 45, 46, 140], "idx": [20, 42, 43, 45, 46, 189, 195, 196], "enumer": [20, 42, 43, 45, 46, 189, 190, 197], "named_buff": [20, 42, 43, 45, 46], "prefix": [20, 42, 43, 45, 46, 75, 196], "prepend": [20, 42, 43, 45, 46], "running_var": [20, 42, 43, 45, 46], "named_children": [20, 42, 43, 45, 46], "conv4": [20, 42, 43, 45, 46], "conv5": [20, 42, 43, 45, 46], "memo": [20, 42, 43, 45, 46], "remove_dupl": [20, 42, 43, 45, 46], "alreadi": [20, 42, 43, 45, 46, 108, 189, 190], "named_paramet": [20, 42, 43, 45, 46, 190], "param": [20, 42, 43, 44, 45, 46, 94, 107, 108, 109, 112, 114, 115, 116, 118, 120, 121, 136, 139, 141, 142, 143, 165, 189, 190, 194, 197], "register_backward_hook": [20, 42, 43, 45, 46], "hook": [20, 42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 108, 109, 110, 111, 114, 115, 116, 120, 121, 124, 153, 154, 155, 157, 159, 160, 183], "removablehandl": [20, 42, 43, 45, 46], "deprec": [20, 42, 43, 45, 46, 75, 86, 196], "favor": [20, 42, 43, 45, 46], "register_full_backward_hook": [20, 42, 43, 45, 46], "futur": [20, 42, 43, 45, 46, 68, 75, 77, 100, 184, 197], "register_buff": [20, 42, 43, 45, 46], "consid": [20, 42, 43, 45, 46, 94, 112, 189, 195], "running_mean": [20, 42, 43, 45, 46], "save": [20, 42, 43, 45, 46, 159, 187, 190], "alongsid": [20, 42, 43, 45, 46], "latter": [20, 42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 179, 180], "num_featur": [20, 42, 43, 45, 46], "register_forward_hook": [20, 42, 43, 45, 46, 120, 121], "signatur": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114, 123], "posit": [20, 30, 31, 32, 42, 43, 45, 46, 75, 76, 194], "won": [20, 42, 43, 45, 46, 68, 77, 159, 181, 189], "inplac": [20, 42, 43, 45, 46, 189], "register_forward_pre_hook": [20, 42, 43, 45, 46], "invok": [20, 30, 42, 43, 45, 46], "user": [20, 42, 43, 45, 46, 75, 99, 178, 187, 190, 194, 196, 197], "either": [20, 42, 43, 45, 46, 165, 187, 195, 196, 197], "respect": [20, 42, 43, 45, 46, 55, 59, 68, 72, 75, 77, 111, 114, 118], "grad_input": [20, 42, 43, 45, 46], "grad_output": [20, 42, 43, 45, 46], "subsequ": [20, 42, 43, 45, 46, 116], "entri": [20, 42, 43, 45, 46, 194], "technic": [20, 42, 43, 45, 46], "reason": [20, 42, 43, 45, 46, 68, 189, 190], "receiv": [20, 42, 43, 45, 46, 74, 100, 190, 192], "similarli": [20, 42, 43, 45, 46, 116, 189, 194, 196], "caller": [20, 42, 43, 45, 46], "register_load_state_dict_post_hook": [20, 42, 43, 45, 46], "post": [20, 42, 43, 45, 46, 190], "incompatible_kei": [20, 42, 43, 45, 46], "consist": [20, 42, 43, 45, 46, 89, 100, 108, 189, 190, 194, 196], "addit": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114, 126, 190], "thrown": [20, 42, 43, 45, 46], "clearn": [20, 42, 43, 45, 46], "avoid": [20, 42, 43, 45, 46, 75, 78, 114, 161, 194], "register_modul": [20, 42, 43, 45, 46, 187], "alia": [20, 42, 43, 45, 46], "register_paramet": [20, 42, 43, 45, 46], "requires_grad_": [20, 42, 43, 45, 46, 189], "autograd": [20, 42, 43, 45, 46, 75], "freez": [20, 42, 43, 45, 46], "finetun": [20, 42, 43, 45, 46], "individu": [20, 42, 43, 45, 46], "gan": [20, 42, 43, 45, 46], "share_memori": [20, 42, 43, 45, 46, 189], "share_memory_": [20, 42, 43, 45, 46, 195, 197], "destin": [20, 42, 43, 45, 46, 75, 83], "keep_var": [20, 42, 43, 45, 46, 75], "averag": [20, 42, 43, 45, 46, 75, 78, 157, 189, 194], "shallow": [20, 42, 43, 45, 46, 75], "pleas": [20, 42, 43, 45, 46, 75, 184], "design": [20, 23, 42, 43, 45, 46, 75, 127, 130, 132, 133, 134, 135, 189, 190, 192, 195, 196], "detach": [20, 42, 43, 45, 46, 75, 189, 190], "non_block": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114, 190], "memory_format": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "channels_last": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "Its": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "complex": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114, 194], "integr": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 93, 114], "unchang": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "tri": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "convert": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 78, 114, 126, 195], "host": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "pin": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "4d": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "ignore_w": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "1913": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "3420": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "5113": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "2325": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "torch_doctest_cuda1": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "gpu1": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "1914": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "5112": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "2324": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "float16": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "cdoubl": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "3741": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "j": [20, 24, 33, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114, 187, 189, 190], "2382": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "5593": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "4443": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "complex128": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "6122": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "1150": [20, 42, 43, 45, 46, 59, 68, 72, 75, 77, 114], "to_empti": [20, 42, 43, 45, 46], "dst_type": [20, 42, 43, 45, 46], "xpu": [20, 42, 43, 45, 46], "zero_grad": [20, 42, 43, 45, 46, 187, 189, 190, 195], "set_to_non": [20, 42, 43, 45, 46], "context": [20, 42, 43, 45, 46, 102, 138, 139, 141, 144, 145, 148, 155, 189, 190, 194], "grad": [20, 42, 43, 45, 46, 190], "dimension": [21, 22, 141, 144, 145, 148], "keepdim": 23, "sum": [23, 43, 140, 189, 190, 196], "user_regist": 23, "experiment": [23, 108], "onto": [23, 108, 114], "appear": 23, "priori": 23, "definit": [23, 39], "uniqu": 23, "discretebox": 23, "alpha": [24, 26, 33, 89, 134, 135, 189, 190, 197], "beta": [24, 26, 33, 132, 189, 190, 197], "ep": [24, 26, 33, 78, 115, 127, 136, 157], "1e": [24, 26, 33, 78, 94, 97, 112], "08": [24, 26, 33, 190], "collate_fn": [24, 25, 26, 27, 31, 156, 189, 190, 195, 197], "prefetch": [24, 25, 26, 27, 31, 156, 189, 190], "priorit": [24, 26, 33, 128, 129, 134, 135, 189, 190], "schaul": [24, 33], "quan": [24, 33], "antonogl": [24, 33], "silver": [24, 33], "2015": [24, 33], "arxiv": [24, 33, 56, 68, 90, 91, 92, 93, 97, 98, 103, 104, 105, 110, 111, 120, 130, 131, 133, 135, 136, 141, 144, 145, 148, 165, 170, 175], "org": [24, 33, 56, 68, 90, 91, 92, 93, 97, 98, 103, 104, 105, 110, 111, 120, 130, 131, 133, 135, 136, 141, 144, 145, 148, 165, 170, 175], "ab": [24, 33, 68, 78, 97, 98, 103, 104, 105, 110, 111, 131, 133, 170], "1511": [24, 33, 98], "05952": [24, 33], "expon": [24, 26, 33], "\u03b1": [24, 26, 33], "determin": [24, 26, 33, 68, 77, 190], "delta": [24, 26, 33, 108, 112, 183], "prioriti": [24, 26, 32, 33, 36, 37, 38, 39, 128, 129, 134, 135, 187, 189, 190], "null": [24, 26, 33, 55, 189], "merg": [24, 25, 26, 31, 156], "mini": [24, 25, 26, 31, 156], "style": [24, 25, 26, 31, 156], "rb": [24, 25, 26, 31, 156, 190, 197], "multithread": [24, 25, 26, 31, 156], "instanti": [24, 25, 26, 45, 46, 74, 156, 189, 190, 195, 196], "extend": [24, 25, 26, 27, 30, 31, 32, 40, 41, 156, 187, 189, 190, 197], "gather": [24, 26, 140, 162, 184, 194, 196], "multinomi": [24, 26], "update_prior": [24, 26, 33, 187, 189, 197], "circular": [25, 156, 189], "randomli": [25, 27, 64, 65, 72, 108, 156], "select": [25, 26, 27, 30, 31, 32, 45, 46, 64, 88, 116, 156, 158, 189, 190], "priority_kei": [26, 32, 129, 130, 135, 197], "td_error": [26, 32, 128, 129, 130, 134, 135, 189, 197], "prioritizedreplaybuff": [26, 183, 189, 197], "flaot": 26, "return_weight": 26, "_weight": 26, "replaybuff": [27, 30, 32, 41, 173, 177, 183, 197], "meta": [28, 187], "describ": [28, 57, 74, 112, 113, 170, 196], "what": [28, 42, 43, 45, 46, 72, 184, 190, 194, 196, 197], "replay_buff": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 177, 189, 190, 197], "rb_prototyp": [30, 31, 32], "remot": [30, 45, 46, 196], "invoc": 30, "friendli": [30, 189], "public": 30, "rpc": 30, "append": [30, 31, 32, 83, 189, 190, 195, 197], "insert_transform": [30, 31, 32], "insert": [30, 31, 32, 40, 41, 76, 190], "include_info": [30, 32], "sampler": [30, 31, 32, 33, 34, 36, 37, 38, 39, 183], "writer": [31, 40, 183], "max_siz": [31, 36, 38, 39, 189, 190], "1_000": 31, "randomsampl": [31, 183], "roundrobinwrit": [31, 183], "kw": [32, 40], "max_capac": 33, "uniformli": [34, 196], "scratch_dir": [36, 189], "memmap": [36, 45, 46, 78], "attach": [36, 37, 38, 39, 190], "entiti": [36, 37, 38, 39], "made": [36, 37, 38, 39, 189], "eg": [36, 37, 38, 39], "alloc": 37, "__len__": 39, "roundrobin": 40, "piec": [40, 41], "_inplace_upd": [42, 45, 46, 75], "_batch_lock": [42, 45, 46, 75], "is_don": [42, 44, 197], "run_type_check": [42, 44], "compar": [42, 155, 190, 196], "rand_step": [42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 78, 196, 197], "batch_lock": [42, 43, 45, 46, 75], "environn": [42, 43, 44, 45, 46, 75], "immut": [42, 43, 45, 46, 75, 170], "fake_tensordict": [42, 43, 45, 46], "fake": [42, 43, 45, 46], "overridden": [42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124], "although": [42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 187, 189, 190], "recip": [42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124], "afterward": [42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124, 196], "former": [42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124], "silent": [42, 43, 45, 46, 59, 68, 74, 76, 77, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 104, 105, 108, 110, 111, 114, 115, 116, 124], "info": [42, 43, 45, 46, 79, 194], "_step": [42, 43, 45, 46], "privat": [42, 43, 45, 46, 196], "_reset": [42, 43, 44, 45, 46, 88], "overwritten": [42, 43, 45, 46, 83, 115, 189], "callback": [42, 43, 45, 46], "auto_reset": [42, 43, 45, 46, 190], "auto_cast_to_devic": [42, 43, 45, 46], "break_when_any_don": [42, 43, 45, 46], "return_contigu": [42, 43, 45, 46, 192], "soon": [42, 43, 45, 46], "smaller": [42, 43, 45, 46], "automat": [42, 43, 45, 46, 65, 84, 107, 190, 197], "lazystackedtensordict": [42, 43, 44, 45, 46, 190, 192, 195, 196, 197], "concomitt": [42, 43, 45, 46], "eras": [42, 43, 45, 46], "workspac": [42, 43, 45, 46], "carri": [42, 43, 45, 46], "discard": [43, 83, 196], "info_dict_read": 43, "set_info_dict_read": 43, "put": [43, 78, 181, 195], "f": [43, 108, 126, 189, 190, 194, 195, 196], "read_act": 43, "read_don": 43, "reader": [43, 189, 190], "frame_skip": [43, 47, 48, 49, 52, 153, 155, 161, 187, 189, 197], "broken": 43, "read_ob": 43, "dictat": [43, 108], "inner": [43, 108, 187, 189, 196], "read_reward": 43, "total_reward": 43, "step_reward": 43, "far": [43, 113, 117, 196], "baseinfodictread": 43, "info_dict": 43, "hoc": 43, "manner": [43, 68, 189, 192], "dict_read": 43, "gymwrapp": [43, 183, 197], "default_info_dict_read": 43, "my_info_kei": 43, "some_env": 43, "meant": 44, "world": [44, 196], "limit": [44, 45, 46, 195], "safeti": 44, "constraint": 44, "behav": [44, 51, 106, 115], "classic": [44, 194, 195], "directli": [44, 181, 190, 194], "ndunboundedcontinuoustensorspec": [44, 72, 84, 85, 86, 87, 88, 108, 114, 115, 116, 118, 183], "mymbenv": [44, 88], "world_model": [44, 54, 88], "super": [44, 88, 118, 120, 123, 189, 194, 197], "hidden_observ": [44, 88], "mlp": [44, 85, 88, 89, 90, 91, 92, 93, 96, 99, 170, 172, 175, 183, 189, 190, 192, 194, 197], "worldmodelwrapp": [44, 88], "activation_class": [44, 88, 89, 90, 91, 92, 93, 97, 98, 100, 189, 190, 197], "relu": [44, 88, 126], "activate_last_lay": [44, 88, 93, 100], "depth": [44, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 104, 105, 190, 192], "equal": [45, 46, 64, 89, 95, 100, 137, 151, 179, 180, 195], "my_env_fun": [45, 46], "custom_attribute_list": [45, 46], "custom_attribut": [45, 46], "custom_method_list": [45, 46], "custom_method": [45, 46], "num_work": [45, 46, 189, 190], "deploi": [45, 46], "creation": [45, 46, 189, 196], "slight": [45, 46, 190], "overhead": [45, 46, 194], "env_input_kei": [45, 46], "permit": [45, 46], "drastic": [45, 46], "decreas": [45, 46], "io": [45, 46], "burden": [45, 46], "_batchedenv": [45, 46], "might": [45, 46, 184, 189, 196], "next_pixel": [45, 46], "next_vector": [45, 46], "amount": [45, 46], "occupi": [45, 46], "excluded_kei": [45, 46], "exclud": [45, 46, 189], "share_individual_td": [45, 46], "lazi": [45, 46, 68, 102, 108, 114, 116, 189, 192, 195, 196], "shared_memori": [45, 46], "policy_proof": [45, 46], "ll": [45, 46, 189, 190, 196], "hidden": [45, 46, 85, 86, 87, 97, 99, 104, 105, 108, 110, 111, 114, 116, 170, 192, 194, 197], "infer": [45, 46, 78, 102, 135, 189, 194, 195], "allow_step_when_don": [45, 46], "encount": [45, 46, 184], "update_kwarg": [45, 46], "dm_control": [47, 48, 189, 192, 196, 197], "env_nam": [47, 49, 52, 189, 196], "task_nam": 47, "cheetah": [47, 48, 189, 196], "suit": [48, 196], "disable_env_check": 49, "categorical_action_encod": 50, "serv": [51, 194, 196], "placehold": [51, 75], "secur": 51, "jumanji": [52, 53], "snake": [52, 53], "6x6": [52, 53], "jumanju": 53, "td0": [53, 190], "td1": 53, "model_bas": [54, 88], "dreamer": [54, 97], "prior_shap": 54, "belief_shap": 54, "obs_decod": 54, "transform_reward_spec": [55, 59, 60, 68, 70, 71, 74, 76, 77], "cat_dim": 56, "success": [56, 74, 197], "account": 56, "movement": 56, "veloc": [56, 196], "propos": [56, 101, 131, 136, 172, 175], "plai": [56, 196], "atari": [56, 196], "pdf": [56, 90, 91, 92, 93, 120, 130, 134, 135, 136, 141, 144, 145, 148, 165, 172, 175], "1312": 56, "5602": 56, "along": [56, 57, 73, 100, 103, 108, 114, 190, 195], "tranform": [56, 59, 68, 72, 74, 77, 79], "transform_observation_spec": [56, 57, 58, 59, 60, 62, 63, 65, 68, 69, 72, 73, 74, 76, 77], "del_kei": [57, 190, 192], "unsqueeze_if_oor": 57, "observation_posit": 57, "observation_veloc": 57, "delet": [57, 195], "unsqueez": [57, 73, 76, 99, 195], "key1": [57, 151, 158], "key2": [57, 151, 158], "_": [57, 60, 65, 73, 78, 96, 108, 109, 114, 116, 120, 121, 126, 190, 194], "w": [58, 69, 73], "crop": 58, "center": 58, "width": [58, 69, 190], "height": [58, 69, 190], "squar": [58, 113, 117], "rewardsc": [59, 75, 183, 189], "rewardclip": [59, 183], "transformed_env": [59, 74, 75], "dest": [59, 68, 77, 114], "transform_input_spec": [59, 60, 68, 74, 76, 77], "finit": [61, 189], "first_dim": 62, "last_dim": 62, "flatten": [62, 189, 190], "adjac": 62, "turn": [63, 155, 190], "noop": [64, 197], "30": [64, 110, 111, 190, 193, 197], "op": [64, 160], "noop_max": 64, "loc": [65, 71, 85, 87, 107, 108, 113, 116, 117, 162, 170, 172, 175, 181, 189, 190, 194, 197], "standard_norm": [65, 71, 189, 190], "affin": [65, 71], "layer": [65, 78, 89, 90, 91, 97, 100, 102, 103, 104, 105, 119, 189, 190, 194], "set_default_tensor_typ": 65, "doubletensor": 65, "std": [65, 78, 189, 190, 196], "isclos": 65, "next_ob": [65, 189, 197], "normalis": 65, "stat": [65, 162, 181, 189], "rubric": [65, 116], "manual_se": [65, 189, 196, 197], "init_stat": 65, "3752e": 65, "01": [65, 124, 127, 132, 133, 189, 190], "5087e": 65, "03": [65, 189, 190, 193], "9294e": 65, "9636": 65, "5608": 65, "6408": 65, "num_it": 65, "reduce_dim": 65, "constant": [65, 187, 189, 190, 196], "ideal": [65, 189], "statist": [65, 78, 181, 189, 196], "approach": [65, 196], "gaussian": [65, 88, 102, 103], "empir": [65, 88, 108], "deviat": [65, 78, 88, 97, 102, 103, 133, 189, 190], "summari": [65, 78], "r3m": 68, "resnet": [68, 77], "visual": [68, 77], "embed": [68, 77, 85, 86, 87, 114, 194], "ego4d": [68, 77], "paper": [68, 77, 131, 172, 175, 189], "univers": [68, 77], "manipul": [68, 196], "suraj": 68, "nair": 68, "aravind": 68, "rajeswaran": 68, "vikash": [68, 77], "kumar": [68, 77], "chelsea": 68, "finn": 68, "abhinav": 68, "gupta": 68, "2203": 68, "12601": 68, "_init": [68, 189], "snippet": [68, 189, 195], "resenet50": 68, "model_nam": [68, 77], "resnet50": [68, 77], "resnet34": 68, "resnet18": 68, "left": [68, 77, 190], "empti": [68, 75, 77, 189], "r3m_vec": 68, "feed": [68, 77], "244": [68, 77], "hub": [68, 77], "cach": [68, 75, 77, 152], "download_path": [68, 77], "tensor_pixels_kei": [68, 77], "interpol": [69, 190], "bilinear": 69, "clamp_min": 70, "clamp_max": 70, "clip": [70, 127, 159], "clip_min": 70, "scalar": [70, 91, 93, 102, 103, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "clip_max": 70, "default_valu": 72, "primer": 72, "popul": 72, "drawn": [72, 108], "rel": [72, 94, 112], "fix": [72, 135, 196], "chosen": [72, 170, 172, 175], "mykei": 72, "dtype_or_devic": 72, "255": [73, 196], "precis": [73, 189], "ri": 73, "randint": [73, 189], "out_keys_inv": 74, "principl": 74, "combin": [74, 195], "cattransform": 74, "notabl": 74, "cache_spec": 75, "valid": [75, 89, 100, 132, 187, 196], "anymor": [75, 114, 189], "unsqueeze_dim": 76, "vip": 77, "toward": 77, "implicit": 77, "jason": 77, "ma": 77, "shagun": 77, "sodhani": 77, "dinesh": 77, "jayaraman": 77, "osbert": 77, "bastani": 77, "ami": 77, "zhang": 77, "vip_vec": 77, "shared_td": 78, "lock": 78, "decai": [78, 134, 157, 189, 190, 196], "9999": [78, 196], "0001": [78, 97, 157], "fly": [78, 132, 196], "substitut": 78, "to_observation_norm": 78, "rate": [78, 140, 189, 190], "99": [78, 127, 132, 133, 134, 135, 140, 177, 189, 190, 197], "numer": [78, 108, 113, 114, 117, 195, 196], "underflow": 78, "1000": [78, 108, 131, 177, 189, 190], "static": 78, "build_td_for_shared_vecnorm": 78, "across": [78, 160, 195], "memmori": 78, "memmap_": [78, 195], "multiprocess": [78, 196], "mp": 78, "queue": 78, "td_share": 78, "v": [78, 99, 135, 190, 194, 197], "observationnorm": [78, 181, 183, 189, 190, 197], "state_dim": [79, 110, 111], "action_dim": [79, 90, 92, 192], "gsde": [79, 134, 181], "nois": [79, 103, 119, 134, 155, 181, 189], "func": [79, 194], "explor": [79, 80, 82, 103, 108, 114, 115, 155, 163, 164, 177, 183, 189, 190, 197], "gsdemodul": 79, "probabilistictdmodul": [82, 100, 108, 135, 140, 155], "actor": [82, 85, 86, 87, 88, 90, 92, 96, 97, 107, 109, 120, 121, 127, 128, 132, 133, 134, 135, 165, 167, 170, 172, 175, 183, 189, 190, 197], "default_interaction_mod": [82, 108, 194], "next_tensordict": [83, 189], "keep_oth": 83, "exclude_reward": 83, "exclude_don": 83, "exclude_act": 83, "_run_check": 83, "reflect": [83, 161], "renam": [83, 189], "next_": 83, "funtion": 83, "td_out": [83, 151, 158], "make_polici": 83, "next_td": 83, "next_observ": [83, 99, 192], "translat": [84, 107], "td_modul": [84, 85, 86, 87, 107, 108, 114, 115, 116, 118, 194, 197], "critic": [85, 127, 132, 133, 135, 194], "get_policy_oper": [85, 86, 87, 170, 194], "alon": [85, 86, 87], "tdmodul": [85, 86, 87, 108, 177], "get_critic_oper": [85, 194], "common_oper": [85, 87], "produc": [85, 87, 89, 100, 106, 108, 196], "policy_oper": [85, 86, 87], "value_oper": [85, 86, 87], "tensordict_modul": [85, 86, 87, 107, 108, 109, 115, 116, 120, 121, 122, 123, 193, 194, 197], "probabilisticactor": [85, 87, 135, 183, 189], "valueoper": [85, 86, 87, 127, 132, 133, 177, 183, 189, 194], "tanhnorm": [85, 86, 87, 107, 108, 116, 183, 194, 197], "normalparamwrapp": [85, 87, 107, 108, 116, 194, 197], "spec_hidden": [85, 87], "module_hidden": [85, 87, 194], "td_module_hidden": [85, 87, 194], "spec_act": [85, 86, 87], "8": [85, 86, 87, 89, 90, 91, 98, 100, 107, 108, 114, 116, 190, 194, 196, 197], "module_act": [85, 86, 87, 194], "td_module_act": [85, 86, 87, 194], "dist_in_kei": [85, 87, 107, 108, 116, 189, 194, 197], "sample_out_kei": [85, 87, 107, 108, 116, 194, 197], "distribution_class": [85, 86, 87, 107, 108, 116, 189, 194, 197], "return_log_prob": [85, 86, 87, 108, 116, 194, 197], "module_valu": [85, 86, 87, 194], "num_cel": [85, 89, 90, 91, 92, 93, 97, 98, 100, 189, 190, 194, 197], "td_module_valu": [85, 86, 87, 194], "state_action_valu": [85, 118, 140, 165, 172, 175, 177, 189, 194, 197], "td_clone": [85, 86, 87, 194], "clone": [85, 86, 87, 108, 114, 115, 116, 170, 172, 175, 189, 190, 194, 195, 197], "sample_log_prob": [85, 86, 87, 108, 116, 170, 172, 194, 197], "tensordictmodulewrapp": [85, 163, 164, 177, 183], "estim": [85, 86, 87, 127, 132, 133, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 189, 190], "get_value_oper": [85, 86, 87, 170], "probabilisticactor_deprec": 86, "state_valu": [86, 87, 118, 142, 143, 144, 145, 146, 148, 149, 170, 175, 189], "tensordictsequenti": [86, 87, 183, 192, 197], "planning_horizon": 88, "optim_step": [88, 195], "num_candid": 88, "num_top_k_candid": 88, "reward_kei": 88, "action_kei": [88, 101], "cross": 88, "entropi": [88, 127, 132, 133, 134, 135], "botev": 88, "et": [88, 194], "al": [88, 167, 194, 196], "2013": 88, "cem": 88, "plan": [88, 101], "unit": [88, 97, 104, 105, 110, 111], "varianc": [88, 113, 117], "cumul": 88, "rank": 88, "top": 88, "k": [88, 190, 194, 195], "episod": [88, 144, 145, 146, 147, 148, 149, 150, 190], "repeat": 88, "maximis": [88, 90, 92, 189], "horizon": 88, "modelbasedenv": 88, "mpc": [88, 101], "planner": [88, 183], "candid": 88, "modelbasedenvbas": [88, 101, 183], "next_hidden_observ": 88, "5": [88, 89, 96, 97, 100, 109, 113, 115, 117, 120, 121, 132, 189, 190, 195, 196, 197], "elu": [89, 90, 91, 92, 93, 97, 98, 190, 197], "activation_kwarg": [89, 100], "norm_class": [89, 90, 91, 100], "norm_kwarg": [89, 100], "bias_last_lay": [89, 90, 91, 92, 93, 98, 100], "aggregator_class": [89, 90, 91, 190, 197], "squashdim": [89, 90, 197], "aggregator_kwarg": [89, 90, 91, 190], "squeeze_output": [89, 90, 91, 190], "convolut": [89, 90, 91], "neural": [89, 114, 190, 194, 196], "len": [89, 100, 189, 190, 195, 197], "cell": [89, 100, 189, 190], "kernel": [89, 98, 99], "tanh": [89, 100, 112, 113, 117, 189, 197], "aggreg": [89, 90, 91, 116, 195], "squeez": [89, 189, 190, 195], "singleton": [89, 100, 189], "device_typ": [89, 90, 91, 92, 93, 98, 100, 102, 103], "cnet": 89, "34": [89, 100, 190], "35": [89, 100, 190], "possibli": [89, 108, 114, 159, 189, 196], "rectangular": 89, "conv_net_kwarg": [90, 91], "mlp_net_kwarg": [90, 91, 92], "use_avg_pool": [90, 91], "WITH": [90, 91, 92, 93, 136, 165], "1509": [90, 91, 92, 93, 131, 136, 165], "02971": [90, 91, 92, 93, 136, 165], "convnet": [90, 183, 197], "ndims_in": 90, "avgpool": [90, 91], "128": [91, 189, 190], "adaptiveavgpool2d": [91, 190], "400": [92, 93, 190], "300": [92, 93, 170], "mlp_net_kwargs_net1": 93, "mlp_net_kwargs_net2": 93, "atol": [94, 112], "06": [94, 112, 189, 190], "rtol": [94, 112], "batch_shap": [94, 112], "event_shap": [94, 112], "absolut": [94, 112], "toler": [94, 112], "log_prob": [94, 106, 117], "log": [94, 106, 108, 117, 127, 130, 132, 133, 134, 135, 153, 154, 155, 159, 177, 187, 190, 194, 197], "probabl": [94, 106, 108, 117, 190, 194, 197], "densiti": [94, 106, 117], "mass": [94, 106, 117], "rsampl": [94, 106, 108], "sample_shap": [94, 106], "reparameter": [94, 106], "dqnet": 95, "atom": 95, "action_spac": [96, 109, 120, 121], "one_hot": [96, 109, 120, 121], "functorch": [96, 107, 108, 109, 114, 115, 116, 118, 120, 121, 122, 197], "onehotdiscretetensorspec": [96, 109, 120, 121, 183], "nbin": [96, 120], "qvalue_actor": [96, 109, 120, 121], "std_bia": 97, "std_min_val": 97, "stochast": [97, 103, 104, 111, 134, 135], "belief": [97, 104, 110, 111], "1912": 97, "016034": 97, "softplu": [97, 124, 125, 126], "out_features_valu": 98, "cnn_kwarg": [98, 190], "mlp_kwarg": [98, 99, 190], "duel": [98, 190], "cnn": [98, 190, 197], "06581": 98, "512": 98, "lstm_kwarg": 99, "embedd": 99, "lstm": 99, "time_step": 99, "2d": 99, "input_s": 99, "hidden_s": 99, "hidden0_in": 99, "hidden1_in": 99, "hidden0_out": 99, "hidden1_out": 99, "single_bias_last_lay": 100, "layer_class": 100, "layer_kwarg": 100, "perceptron": 100, "seamless": 100, "though": 100, "reshap": [100, 195], "lazylinear": [100, 108, 114, 116, 197], "42": [100, 159, 190], "noisylinear": [100, 102, 183, 190], "noisylazylinear": [100, 183], "At": [101, 192], "mpcplanner": 101, "tensordict_out": [101, 108, 114, 116, 194, 196], "std_init": [102, 103], "noisi": [102, 103, 119], "term": [102, 103, 126, 160, 190], "matrix": [102, 103], "ax": [102, 103], "initialize_paramet": 102, "isol": 102, "1706": 103, "10295v3": 103, "induc": 103, "aid": 103, "descent": 103, "remain": 103, "emploi": 103, "decod": [104, 194], "1803": [104, 105], "10122": [104, 105], "rnn_hidden": 104, "latent": 105, "logit": 106, "prob": 106, "One": [106, 114, 137, 189, 194, 195, 196], "excacli": 106, "probabilist": [107, 108, 194, 197], "fmodul": [107, 109, 114, 115, 118, 120, 121], "make_functional_with_buff": [107, 108, 109, 114, 115, 116, 118, 120, 121, 190, 194, 197], "tensor_spec": [108, 197], "distribution_kwarg": [108, 189], "cache_dist": 108, "n_empirical_estim": 108, "special": [108, 189, 194, 196], "rule": [108, 194], "get_dist": [108, 194], "__call__": [108, 187, 194], "real": 108, "median": 108, "functionalmodul": [108, 114, 122], "functionalmodulewithbuff": [108, 114, 122], "overflow": [108, 114], "fist": 108, "set_exploration_mod": [108, 155, 183, 189, 190, 197], "_log_prob": 108, "diverg": [108, 132], "ppo": [108, 127, 132, 133, 169, 170, 183, 197], "grucel": [108, 114, 194], "fnet": 108, "vmap": [108, 114, 116, 190, 194, 197], "again": [108, 196], "expend": 108, "p": [108, 116, 190, 194, 197], "expand": [108, 114, 116, 189, 197], "contigu": [108, 114, 116, 195, 197], "normal_": [108, 114, 116], "td_vmap": [108, 114, 116], "unlik": [108, 114, 116, 130, 133, 194, 195, 197], "prevent": [108, 113, 114, 116, 117, 132, 133, 189], "scrape": [108, 114, 116], "lazy_modul": [108, 114], "18": [108, 114, 116, 190], "some_input": [108, 114, 116], "some_output": [108, 114, 116], "hidden_dim": [110, 111], "scale_lb": [110, 111], "posterior": 110, "rssm": [110, 111], "1811": [110, 111], "04551": [110, 111], "obs_embed": 110, "rnn_hidden_dim": 111, "prior": 111, "dream": 111, "recurr": 111, "min": [112, 113, 117, 127, 134, 135, 189, 190], "event_dim": [112, 113], "upscal": [113, 117], "tanh_loc": [113, 117], "tanhtransform": 113, "ultim": [113, 117], "unstabl": [113, 117], "poor": [113, 117], "explos": [113, 117], "practic": [113, 117, 126, 184, 190, 196], "switch": [113, 117], "sigma": [113, 117], "formula": [113, 117, 127, 132, 133], "character": 114, "td_fmodul": 114, "td_function": 114, "td_state": 114, "isn": 114, "ensembl": [114, 134, 194], "params_repeat": 114, "buffers_repeat": 114, "irrespect": 114, "random_sampl": 114, "calss": 115, "expand_as_right": 115, "epsilongreedyexplor": 115, "rand_output_clon": 115, "det_output_clon": 115, "rand_output_idx": 115, "_rand_output": 115, "_det_output": 115, "rand_output_idx_expand": 115, "tensordict_module_wrap": 115, "partial_toler": [116, 192], "tensordictsequenci": 116, "who": 116, "AND": 116, "scan": 116, "sub": [116, 151, 159, 192, 196, 197], "tensordictsequ": 116, "spec1": 116, "net1": 116, "fnet1": 116, "params1": 116, "buffers1": 116, "fmodule1": 116, "td_module1": 116, "spec2": 116, "module2": 116, "fmodule2": 116, "params2": 116, "buffers2": 116, "td_module2": 116, "lazy_module1": 116, "lazy_module2": 116, "select_subsequ": 116, "acord": 116, "custommodul": [118, 123], "cat": [118, 189, 195, 197], "var_num": [120, 121], "regard": [120, 130, 133, 195], "perspect": [120, 130], "1707": [120, 130, 133, 170], "06887": [120, 130], "mult_one_hot": [120, 121], "customdistributionalqv": 120, "log_softmax": 120, "greedi": [121, 190], "_src": 122, "make_funct": 122, "wrapper_typ": 122, "mislead": 123, "other_kei": 123, "typeerror": 123, "min_val": [124, 126], "bias": [124, 189], "_bia": 124, "invert": 125, "surject": 126, "exp": 126, "expln": 126, "biased_softplu": [126, 183], "beggin": 126, "biased_softplus_": 126, "syntax": [126, 189], "condit": 126, "met": 126, "advantage_kei": [127, 132, 133], "clip_epsilon": 127, "entropy_bonu": [127, 132, 133], "samples_mc_entropi": [127, 132, 133], "entropy_coef": [127, 132, 133], "critic_coef": [127, 132, 133], "loss_critic_typ": [127, 132, 133], "l2": [127, 128, 129, 132, 133, 134, 137], "loss": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 159, 166, 168, 169, 171, 172, 174, 177, 187, 189, 190, 195, 197], "threshold": 127, "bonu": [127, 132, 133], "favour": [127, 132, 133], "exploratori": [127, 132, 133], "mont": [127, 132, 133], "carlo": [127, 132, 133], "multipli": [127, 132, 133, 134, 135, 189], "loss_funct": [127, 128, 129, 133, 134, 135, 137], "discrep": [127, 128, 129, 132, 133], "l1": [127, 128, 129, 132, 133, 134, 137, 190], "smooth_l1": [127, 128, 129, 132, 133, 134, 135, 137], "throughout": [127, 130, 132, 133, 134, 135, 196], "essenti": [127, 130, 132, 133, 134, 135, 189, 195], "backpropag": [127, 130, 132, 133, 134, 135], "actor_network": [128, 134, 135], "value_network": [128, 129, 130, 135, 141, 142, 143], "delay_actor": [128, 135], "delay_valu": [128, 129, 130, 135], "input_tensordict": [128, 129, 130], "assign": [128, 129, 189, 194], "qvalueactor": [129, 183, 190], "distributionalqvalueactor": [130, 183], "disctount": 130, "loss_modul": [131, 136, 159, 176, 177, 187, 195], "dqnloss": [131, 136, 168, 183], "ddpgloss": [131, 136, 166, 177, 183, 197], "sacloss": [131, 136, 174, 183], "value_network_update_interv": 131, "contrast": 131, "soft": [131, 135, 136], "06461": 131, "dtarg": 132, "decrement": 132, "samples_mc_kl": 132, "kl": 132, "penalti": 132, "old_polici": 132, "new_polici": 132, "adapt": 132, "old": [132, 196], "thu": 132, "distanc": [132, 137, 140], "apart": 132, "advantage_diff_kei": 133, "value_error": [133, 141, 142, 143], "advantage_modul": 133, "proxim": [133, 170], "optimis": [133, 155], "flavour": [133, 189], "constrain": 133, "clipppoloss": [133, 183], "klpenppoloss": [133, 183], "regularis": 133, "06347": [133, 170], "qvalue_network": [134, 135], "num_qvalue_net": [134, 135], "sub_sample_len": 134, "priotity_kei": [134, 135], "alpha_init": [134, 135], "min_alpha": [134, 135], "max_alpha": [134, 135], "fixed_alpha": [134, 135], "target_entropi": [134, 135], "auto": [134, 135], "delay_qvalu": [134, 135], "redq": [134, 171, 172, 183, 197], "openreview": [134, 172], "ay8zfzm0tdd": [134, 172], "idea": [134, 187, 190, 195], "sac": [134, 135, 174, 175, 183, 197], "subsampl": [134, 151, 187], "know": [134, 155, 189, 190], "1801": [135, 175], "01290": [135, 175], "qvalue_network_bi": 135, "prod": 135, "n_action": 135, "redqloss": [136, 183], "999": [136, 157, 190], "epsilon": [136, 190], "prev_param": 136, "new_param": 136, "v2": [137, 146, 147, 149, 150, 165, 170, 172, 175], "strict_shap": 137, "view_a": 137, "manag": [138, 139, 155, 189, 194], "hold": [138, 139], "next_val_kei": 140, "pred_next_v": 140, "usus": 140, "mse": [140, 190], "q_valu": 140, "target_valu": [140, 197], "n_steps_to_next": 140, "value_next_st": 140, "lmbda": [141, 143, 144, 146, 147, 148, 149, 150, 189, 190], "average_reward": [141, 142, 143], "gradient_mod": [141, 142, 143], "1506": [141, 144, 145, 148], "02438": [141, 144, 145, 148], "exponenti": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 157], "propag": [141, 142, 143], "throught": [141, 142, 143], "unused_arg": [141, 142, 143], "target_param": [141, 142, 143], "target_buff": [141, 142, 143], "value_kei": [142, 143], "gae": [142, 143, 183], "next_state_valu": [144, 145, 146, 147, 148, 149, 150, 183], "old_stat": [144, 145, 146, 148, 149], "timestep": [144, 145, 146, 147, 148, 149, 150, 190], "new_stat": [144, 145, 146, 147, 148, 149, 150], "flag": [144, 145, 146, 147, 148, 149, 150], "rolling_gamma": [146, 147, 149, 150], "ti": [146, 147, 149, 150], "event": [146, 147, 149, 150], "g1": [146, 147, 149, 150], "g2": [146, 147, 149, 150], "g3": [146, 147, 149, 150], "g4": [146, 147, 149, 150], "v3": [146, 147, 149, 150], "v4": [146, 147, 149, 150, 189], "upcom": [146, 147, 149, 150, 189], "sub_traj_len": 151, "min_sub_traj_len": 151, "full": [151, 189, 190, 192, 194, 195, 196, 197], "20": [151, 189, 190, 196, 197], "register_op": [151, 152, 153, 154, 157, 158, 160, 187], "process_optim_batch": [151, 157, 187], "_process_optim_batch_hook": [151, 187], "interv": [152, 160, 190], "clear": 152, "clear_cuda": 152, "pre_optim_step": [152, 187], "counter": [153, 187], "log_pbar": [153, 154, 155, 157, 187], "progress": [153, 154, 155, 159, 187, 196], "bar": [153, 154, 155, 159, 187], "count_fram": 153, "pre_steps_log": [153, 154, 187], "lognam": 154, "r_train": 154, "logger": [154, 155, 159, 177, 181, 187, 197], "log_reward": 154, "record_interv": [155, 189], "record_fram": [155, 161, 189], "policy_explor": [155, 177, 189], "log_kei": 155, "suffix": 155, "underestim": 155, "final": [155, 189, 190, 196], "suppos": [155, 187, 194, 195, 196], "reward_evalu": 155, "video": [155, 181, 190], "reward_norm": 157, "batch_process": [157, 158, 187], "update_reward_stat": 157, "normalize_reward": 157, "make_train": [158, 183], "second": [158, 189, 190, 192, 194, 195, 196, 197], "_process_batch_hook": [158, 187], "versatil": 159, "lossmodul": [159, 176, 177], "optim_steps_per_batch": [159, 187, 189], "epoch": 159, "clip_grad_norm": 159, "norm": [159, 190], "partial": 159, "deriv": 159, "clamp": 159, "clip_norm": 159, "progress_bar": 159, "tqdm": [159, 189, 190], "save_trainer_interv": 159, "disk": [159, 187, 190], "10000": [159, 190], "save_trainer_fil": [159, 187], "_datacollector": [160, 163, 164, 177], "update_weights_interv": 160, "whenev": 160, "sit": [160, 190], "sync": [160, 177, 187, 189, 197], "update_weight": 160, "post_step": [160, 187], "helper": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 189, 197], "cfg": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181], "dictconfig": [161, 162, 163, 164, 165, 167, 170, 172, 173, 175, 176, 177, 178, 181], "correct": [161, 190], "divid": 161, "unknowingli": 161, "1m": 161, "annealing_fram": [161, 189], "init_env_step": [161, 162, 189], "proof_environ": [162, 165, 167, 170, 172, 175, 189], "sta": 162, "ot": 162, "actor_model_explor": [163, 164, 189], "make_env_kwarg": [163, 164], "creator": [163, 164, 179, 180, 181], "actor_net_kwarg": [165, 172, 175], "value_net_kwarg": [165, 175], "modulelist": [165, 172, 175, 197], "dummi": [165, 167, 170, 172, 175, 196], "ddpgcnnactor": [165, 183], "ddpgmlpactor": [165, 183], "ddpgcnnqnet": [165, 183], "ddpgmlpqnet": [165, 183], "cattensor": [165, 170, 172, 175, 183, 189, 190, 192, 196], "hydra": [165, 167, 170, 172, 175], "config_stor": [165, 167, 170, 172, 175], "configstor": [165, 167, 170, 172, 175], "dataclass": [165, 167, 170, 172, 175], "halfcheetah": [165, 170, 172, 175, 189], "config_field": [165, 167, 170, 172, 175], "config_cl": [165, 167, 170, 172, 175], "ddpgmodelconfig": 165, "envconfig": [165, 167, 170, 172, 175], "make_dataclass": [165, 167, 170, 172, 175], "cls_name": [165, 167, 170, 172, 175], "config_path": [165, 167, 170, 172, 175], "config_nam": [165, 167, 170, 172, 175], "17": [165, 170, 172, 175, 189, 190], "targetnetupdat": [166, 168, 171, 174, 176, 177], "discretemodelconfig": 167, "pong": [167, 196], "v5": [167, 196], "pixels_onli": [167, 189, 190, 196, 197], "210": [167, 196], "160": [167, 190, 196], "ppoloss": [169, 183], "in_keys_actor": 170, "observation_kei": [170, 172, 175], "actorvalueoper": [170, 183, 194], "join": 170, "actorcriticoper": [170, 183], "parser_env_arg": [170, 172], "parser_model_args_continu": [170, 172, 175], "ppomodelconfig": 170, "actor_valu": 170, "redqloss_deprec": 171, "qvalue_net_kwarg": [172, 175], "qvalu": [172, 175, 189, 190], "redqmodelconfig": 172, "replayargsconfig": 173, "sacmodelconfig": 175, "target_net_updat": 177, "constitu": 177, "learnt": [177, 190], "tempfil": 177, "tensorboardlogg": 177, "tensordictreplaybuff": [177, 183, 189, 190], "egreedywrapp": [177, 190], "env_mak": [177, 196], "env_proof": 177, "obs_spec": 177, "net_valu": 177, "dir": [177, 187], "gettempdir": 177, "exp_nam": [177, 189], "argpars": [178, 181], "namespac": [178, 181], "parser": [178, 181], "transformed_env_constructor": [178, 183], "env_kwarg": [179, 180, 189], "num_env_per_collector": [179, 180], "num_collector": [179, 180], "less": [179, 180, 189, 190, 197], "multisyncdatacollector": [180, 183, 197], "video_tag": 181, "norm_obs_onli": 181, "use_env_cr": 181, "custom_env_mak": 181, "custom_env": 181, "return_transformed_env": 181, "action_dim_gsd": 181, "state_dim_gsd": 181, "batch_dim": [181, 195], "wheter": 181, "maker": [181, 189], "overrid": 181, "exclus": 181, "my": [182, 191], "asyncdatacollector": 183, "tensordictprioritizedreplaybuff": [183, 189, 197], "remotetensordictreplaybuff": 183, "prioritizedsampl": 183, "boundedtensorspec": 183, "unboundedcontinuoustensorspec": [183, 196], "binarydiscretetensorspec": 183, "multonehotdiscretetensorspec": 183, "discretetensorspec": 183, "multistep": [183, 189, 190], "gymlikeenv": 183, "centercrop": 183, "grayscal": [183, 190, 196], "flattenobserv": 183, "unsqueezetransform": 183, "observationtransform": 183, "catfram": [183, 190], "finitetensordictcheck": 183, "noopresetenv": [183, 196, 197], "binarizereward": 183, "pinmemorytransform": 183, "gsdenois": 183, "tensordictprim": 183, "r3mtransform": 183, "viptransform": 183, "step_mdp": [183, 189, 190, 196, 197], "get_available_librari": 183, "dreamerenv": 183, "dmcontrolenv": [183, 189, 192, 196], "dmcontrolwrapp": 183, "jumanjienv": 183, "jumanjiwrapp": 183, "actorcriticwrapp": [183, 194], "is_tensordict_compat": 183, "ensure_tensordict_compat": 183, "qvaluehook": 183, "distributionalqvaluehook": 183, "duelingcnndqnet": [183, 190], "distributionaldqnnet": 183, "lstmnet": 183, "dreameractor": 183, "obsencod": 183, "obsdecod": 183, "rssmprior": 183, "rssmposterior": 183, "reset_nois": 183, "cemplann": 183, "mpcplannerbas": 183, "truncatednorm": 183, "tanhdelta": [183, 189], "onehotcategor": 183, "inv_softplu": 183, "distributionaldqnloss": [183, 190], "tdlambdaestim": 183, "tdestim": 183, "generalized_advantage_estim": 183, "vec_generalized_advantage_estim": 183, "vec_td_lambda_return_estim": 183, "vec_td_lambda_advantage_estim": [183, 189, 190], "td_lambda_return_estim": 183, "td_lambda_advantage_estim": 183, "td_advantage_estim": 183, "distance_loss": 183, "hold_out_net": [183, 189], "hold_out_param": 183, "softupd": [183, 189], "hardupd": [183, 189], "checkpoint": 183, "batchsubsampl": [183, 187], "countframeslog": 183, "logreward": [183, 187], "rewardnorm": 183, "selectkei": [183, 187], "updateweight": [183, 187], "clearcudacach": 183, "builder": [183, 190, 196], "sync_sync_collector": 183, "sync_async_collector": 183, "make_collector_offpolici": 183, "make_collector_onpolici": 183, "parallel_env_constructor": [183, 189], "make_sac_loss": 183, "make_dqn_loss": 183, "make_ddpg_loss": 183, "make_target_updat": 183, "make_ppo_loss": 183, "make_redq_loss": 183, "make_dqn_actor": 183, "make_ddpg_actor": [183, 189], "make_ppo_model": 183, "make_sac_model": 183, "make_redq_model": 183, "make_replay_buff": [183, 189], "correct_for_frame_skip": 183, "get_stats_random_rollout": [183, 189], "implement_for": 183, "solv": [184, 189, 190], "journei": 184, "guid": [184, 189, 190], "textbook": 184, "highlight": 184, "readi": [184, 192], "ever": 184, "cover": [184, 197], "bump": 184, "think": [184, 196], "commun": [184, 196], "benefit": 184, "submit": [184, 197], "pr": 184, "outer": [187, 189, 196], "believ": 187, "scheme": [187, 196], "substenti": 187, "sketch": 187, "_pre_steps_log_hook": 187, "_pre_optim_hook": 187, "sub_batch": 187, "_post_loss_hook": 187, "post_loss": 187, "_post_optim_hook": 187, "post_optim": 187, "_post_optim_log": 187, "post_optim_log": 187, "_post_steps_hook": 187, "_post_steps_log_hook": 187, "post_steps_log": 187, "There": [187, 190, 196], "comment": [187, 197], "categori": 187, "strategi": [187, 189], "extens": 187, "replaybuffertrain": 187, "reserv": 187, "trainerhookbas": 187, "three": [187, 190], "logginghook": 187, "logging_hook": 187, "save_dict": 187, "some_valu": 187, "els": [187, 189, 190], "torchsnapshot": 187, "ckpt_backend": 187, "py": [187, 189, 190, 192, 193, 194, 195, 196, 197], "wherea": [187, 189, 194], "pt": [187, 190], "filepath": 187, "select_kei": 187, "save_train": 187, "load_from_fil": 187, "perfectli": 187, "intern": 188, "click": [189, 190, 192, 194, 195, 196, 197], "tutori": [189, 190, 192, 193, 194, 196], "scratch": [189, 190], "familiar": [189, 190, 196], "suffici": [189, 190], "transpar": [189, 190], "understood": [189, 190], "understand": [189, 190], "sota": [189, 190, 197], "rather": [189, 190], "illustr": [189, 190], "deepcopi": 189, "matplotlib": [189, 190, 196], "pyplot": [189, 190, 196], "plt": [189, 190, 196], "ornsteinuhlenbeckprocesswrapp": 189, "reli": [189, 196], "wish": 189, "env_librari": 189, "env_task": 189, "env_arg": 189, "elif": [189, 190], "notimplementederror": 189, "rescal": 189, "leav": 189, "make_transformed_env": 189, "reward_sc": 189, "double_to_float_list": 189, "double_to_float_inv_list": 189, "dmcontrol": 189, "downstream": 189, "_stat": 189, "choos": 189, "leverag": [189, 196], "adopt": [189, 196], "env_per_collector": 189, "env_creat": [189, 197], "parallel_env": [189, 196, 197], "td_stat": 189, "_td_stat": 189, "numel": 189, "_td_stats_select": 189, "to_tensordict": [189, 190, 195], "del": [189, 197], "got": [189, 195], "isfinit": 189, "sd": 189, "get_env_stat": 189, "proof_env": 189, "env_spec": 189, "actor_net": 189, "num_lay": 189, "actor_modul": [189, 197], "q_net": 189, "qnet": 189, "frequenc": 189, "make_record": 189, "recorder_obj": 189, "higher": [189, 190, 196], "likelihood": 189, "arrai": 189, "prb": 189, "buffer_s": [189, 190], "buffer_scratch_dir": 189, "adjust": 189, "device_count": [189, 190, 196], "1000000": 189, "ou": 189, "becom": [189, 196], "lr": [189, 190], "5e": 189, "weight_decai": 189, "5000": 189, "warm": 189, "tau": [189, 190], "005": [189, 190], "tmp": [189, 190], "n_steps_forward": 189, "semin": 189, "ornstein": 189, "uhlenbeck": 189, "qnet_target": 189, "annealing_num_step": [189, 190], "9152e": 189, "3728e": 189, "00": [189, 190, 193], "6790e": 189, "02": [189, 190, 193], "8100e": 189, "0432e": 189, "4661e": 189, "7335e": 189, "6330e": 189, "3439e": 189, "04": [189, 190], "3564e": 189, "1885e": 189, "4405e": 189, "1127e": 189, "9993e": 189, "7058e": 189, "7317e": 189, "3022e": 189, "2335": 189, "3836": 189, "3375": 189, "3587": 189, "3461": 189, "4445": 189, "3917": 189, "3489": 189, "5510": 189, "5761": 189, "1731": 189, "4106": 189, "3918": 189, "0521": 189, "4038": 189, "4419": 189, "9479": 189, "crucial": [189, 190, 196], "coupl": 189, "async": [189, 197], "transmiss": 189, "3018685293": 189, "adam": [189, 190], "optimizer_actor": 189, "optimizer_qnet": 189, "total_collection_step": 189, "scheduler1": 189, "lr_schedul": 189, "cosineannealinglr": 189, "t_max": 189, "scheduler2": 189, "temporarili": 189, "differenti": 189, "henc": [189, 190], "word": [189, 196], "relat": 189, "Then": [189, 192], "fed": 189, "hood": 189, "metadata": [189, 196], "ommit": 189, "earli": [189, 197], "rewards_ev": 189, "norm_factor_train": 189, "collected_fram": 189, "pbar": [189, 190], "r0": 189, "mask": [189, 190, 195, 196, 197], "filter": 189, "current_fram": [189, 190], "sampled_tensordict": 189, "backprop": 189, "next_valu": [189, 190], "value_est": 189, "value_loss": 189, "pow": [189, 190], "sampled_tensordict_actor": 189, "actor_loss": 189, "p_in": 189, "p_dest": 189, "zip": [189, 191], "copy_": 189, "b_in": 189, "b_dest": 189, "td_record": 189, "r_evalu": 189, "set_descript": [189, 190], "4f": [189, 190], "2500": 189, "292": 189, "80it": 189, "memmapstorag": [189, 190], "opslffa5": 189, "057220458984375": 189, "mb": [189, 190, 193], "rzz8ej26": 189, "002384185791015625": 189, "uuitizs7": 189, "0095367431640625": 189, "6nm5vt16": 189, "p1akur56": 189, "tmprc1ibge6": 189, "1621246337890625": 189, "loqsmg_i": 189, "7qj2p71h": 189, "dtotcfnz": 189, "ozud2r1r": 189, "c69gz6y1": 189, "step_count": [189, 190, 197], "txwcj4k4": 189, "steps_to_next_ob": [189, 190], "7mpaf1q3": 189, "019073486328125": 189, "9o1l37oa": 189, "2201": 189, "3075": 189, "7553": 189, "40": [189, 190], "148": 189, "13it": 189, "1951": 189, "07": [189, 190], "60": [189, 197], "1500": 189, "203": 189, "29it": [189, 190], "4095": 189, "09": [189, 190], "80": 189, "2000": 189, "241": 189, "25it": 189, "7092": 189, "273": 189, "54it": 189, "2312": 189, "plot": [189, 190], "mention": [189, 190, 196], "figur": [189, 190, 194, 196], "label": [189, 190, 195], "legend": [189, 190], "xlabel": [189, 190], "ylabel": [189, 190], "tight_layout": [189, 190], "250": 189, "devid": 189, "100000": [189, 190], "batch_size_traj": 189, "simplic": [189, 194], "td_lambda": 189, "95": [189, 190], "roughli": [189, 197], "slightli": [189, 194, 196], "four": 189, "big": [189, 190, 196], "inde": [189, 195], "revert": 189, "compli": [189, 195], "incompat": [189, 195], "bit": 189, "rand_idx": 189, "traceback": [189, 196], "__w": [189, 196], "doc": [189, 196], "coding_ddpg": [189, 193], "895": 189, "676": 189, "452": 189, "_add_or_extend": 189, "428": 189, "238": 189, "_storag": 189, "69": 189, "__setitem__": 189, "ret": 189, "269": 189, "374": 189, "miniconda": [189, 196], "python3": [189, 196], "site": [189, 196], "2331": 189, "2322": 189, "target_shap": 189, "existing_shap": 189, "consider": 189, "titl": [189, 190], "labmda": 189, "minut": [189, 190, 192, 194, 195, 196, 197], "39": [189, 190, 193], "727": [189, 190, 193], "jupyt": [189, 190, 191, 192, 194, 195, 196, 197], "notebook": [189, 190, 191, 192, 194, 195, 196, 197], "ipynb": [189, 190, 192, 194, 195, 196, 197], "galleri": [189, 190, 191, 192, 194, 195, 196, 197], "sphinx": [189, 190, 191, 192, 194, 195, 196, 197], "cartpol": [190, 196], "tabl": 190, "pick": 190, "highest": 190, "discretiz": 190, "amort": 190, "seen": 190, "past": 190, "esitm": 190, "ipython": 190, "is_notebook": 190, "shell": 190, "get_ipython": 190, "__class__": 190, "__name__": 190, "zmqinteractiveshel": 190, "qtconsol": 190, "terminalinteractiveshel": 190, "nameerror": 190, "interpret": 190, "hyperparam": 190, "hopefulli": 190, "sentit": 190, "variat": 190, "2e": 190, "harder": [190, 197], "restrict": [190, 196], "n_optim": 190, "n_worker": 190, "smooth": 190, "loos": 190, "notic": 190, "eps_greedy_v": 190, "eps_greedy_val_env": 190, "05": 190, "predefin": 190, "init_bia": 190, "500000": 190, "techin": 190, "dummy_env": 190, "9927786588668823": 190, "0761081725358963": 190, "pole": 190, "un": 190, "actuat": 190, "cart": 190, "frictionless": 190, "upright": [190, 196], "balanc": [190, 196], "pixels_sav": 190, "omit": 190, "eval_rollout": 190, "imageio": 190, "mimwrit": 190, "cartpole_random": 190, "mp4": 190, "fp": 190, "480": 190, "360": 190, "trick": 190, "num_ob": 190, "num_act": 190, "make_model": 190, "output_s": 190, "unflatten_kei": 190, "fairli": 190, "params_target": 190, "buffers_target": 190, "actor_explor": 190, "eps_init": 190, "eps_end": 190, "pai": 190, "attent": [190, 194], "params_flat": 190, "flatten_kei": 190, "buffers_flat": 190, "params_target_flat": 190, "buffers_target_flat": 190, "600": 190, "bootstrap": 190, "value_next_step": 190, "not_termin": 190, "could": [190, 195, 196], "significantli": 190, "deliv": [190, 197], "data_collector": 190, "traj_lengths_ev": 190, "grad_val": 190, "traj_length": 190, "mavg": 190, "traj_count": 190, "prev_traj_count": 190, "todo": [190, 195, 197], "hide": 190, "small": [190, 196], "enough": 190, "send": [190, 195, 197], "sampled_data": 190, "sampled_data_out": 190, "tdstep": 190, "exp_valu": 190, "mse_loss": 190, "gv": 190, "sqrt": 190, "clip_grad_value_": 190, "p1": 190, "p2": 190, "set_": 190, "clear_output": 190, "wait": 190, "gcf": 190, "clf": 190, "figsiz": 190, "15": 190, "subplot": [190, 196], "traj": 190, "savefig": 190, "dqn_td0": 190, "png": 190, "47it": 190, "tmpu6c4y_xa": 190, "00762939453125": 190, "tmpauwu5chf": 190, "003814697265625": 190, "tmph8k3tpyh": 190, "0019073486328125": 190, "tmpbdg3cco8": 190, "000476837158203125": 190, "tmpfb8vu7w9": 190, "tmphf17dm1u": 190, "31": 190, "25": 190, "tmpvsfd2k8p": 190, "tmp09pligu4": 190, "tmpi_h98g4w": 190, "tmp0nibaqx8": 190, "19": 190, "21": [190, 192], "85it": 190, "96": 190, "23": [190, 193, 196], "94it": 190, "22": 190, "6202": 190, "3506": 190, "26": 190, "44it": 190, "12": [190, 195], "4214": 190, "7055": 190, "57it": 190, "0056": 190, "2973": 190, "192": 190, "60it": 190, "27": 190, "1048": 190, "8055": 190, "45": 190, "224": 190, "75it": 190, "9296": 190, "1674": 190, "51": 190, "256": 190, "52it": 190, "0151": 190, "9544": 190, "58": 190, "288": 190, "98it": 190, "9768": 190, "6466": 190, "320": [190, 196], "3473": 190, "0418": 190, "70": 190, "352": 190, "67it": 190, "6855": 190, "77": 190, "384": 190, "6680": 190, "5094": 190, "28": 190, "83": 190, "416": 190, "3209": 190, "4774": 190, "90": 190, "448": 190, "45it": 190, "41": 190, "7541": 190, "0796": 190, "27it": 190, "5815": 190, "4296": 190, "36": 190, "512it": 190, "91it": 190, "3573": 190, "5477": 190, "imshow": [190, 196], "imread": 190, "axi": 190, "1499": 190, "traj_lengths_train": 190, "saved_results_td0": 190, "entir": 190, "capac": 190, "smooth_l1_loss": 190, "clip_grad_norm_": 190, "dqn_tdlambda": 190, "55": 190, "18it": 190, "49": 190, "tmpkghw1jaf": 190, "244140625": 190, "tmpv3170v00": 190, "1220703125": 190, "tmprwj7mx3b": 190, "06103515625": 190, "tmpb_65k8yl": 190, "0152587890625": 190, "tmpravdh0ek": 190, "tmp1641mepv": 190, "tmpj0tjqs0g": 190, "tmpwt7kqj4a": 190, "tmp74uciq2r": 190, "tmpf4j_4ek6": 190, "43it": 190, "8862": 190, "8448": 190, "09it": 190, "4423": 190, "2070": 190, "24": 190, "9196": 190, "5834": 190, "03it": 190, "2572": 190, "4197": 190, "29": 190, "76it": 190, "4067": 190, "1015": 190, "72it": 190, "4336": 190, "2824": 190, "55it": 190, "6643": 190, "7119": 190, "37": 190, "22it": 190, "2226": 190, "4406": 190, "56it": 190, "4096": 190, "5340": 190, "15it": 190, "8795": 190, "0081": 190, "43": 190, "69it": 190, "3023": 190, "5325": 190, "48": [190, 193], "9041": 190, "5493": 190, "50": 190, "62it": 190, "2348": 190, "6854": 190, "52": 190, "53": 190, "8864": 190, "8133": 190, "saved_results_tdlambda": 190, "fewer": 190, "load_td0": 190, "load_tdlambda": 190, "frames_td0": 190, "frames_tdlambda": 190, "evals_td0": 190, "evals_tdlambda": 190, "mavgs_td0": 190, "mavgs_tdlambda": 190, "losses_td0": 190, "losses_tdlambda": 190, "values_td0": 190, "values_tdlambda": 190, "grad_vals_td0": 190, "grad_vals_tdlambda": 190, "traj_lengths_td0": 190, "traj_lengths_tdlambda": 190, "traj_count_td0": 190, "traj_count_tdlambda": 190, "goe": [190, 196], "greatli": 190, "nth": 190, "noticebli": 190, "myopic": 190, "collectorclass": 190, "till": 190, "worst": 190, "accuraci": 190, "fanci": 190, "techniqu": 190, "coding_dqn": [190, 193], "tutorials_python": 191, "tutorials_jupyt": 191, "distinct": 192, "humanoid": [192, 196], "walk": [192, 196], "env1": 192, "env1_obs_kei": 192, "observation_stand": 192, "env2": 192, "env2_obs_kei": 192, "observation_walk": 192, "tdreset1": 192, "tdreset2": 192, "recov": 192, "tdreset": 192, "67": 192, "backbon": [192, 197], "policy_common": 192, "policy_stand": 192, "policy_walk": 192, "seq": 192, "But": 192, "env1_mak": 192, "env2_mak": 192, "_single_task": 192, "td_rollout": 192, "shown": 192, "874": [192, 193], "multi_task": [192, 193], "287": 193, "torchrl_demo": [193, 197], "169": [193, 197], "torch_env": [193, 196], "648": [193, 196], "118": [193, 194], "tensordict_tutori": [193, 195], "024": [193, 195], "recommand": 194, "conveni": [194, 195], "a_out": 194, "mergelinear": 194, "in_1": 194, "in_2": 194, "linear_1": 194, "linear_2": 194, "x_1": 194, "x_2": 194, "multiheadlinear": 194, "out_1": 194, "out_2": 194, "splitlinear": 194, "output_1": 194, "output_2": 194, "split_and_merge_linear": 194, "num_model": 194, "fmodel": 194, "result_td": 194, "ok": 194, "conflict": 194, "tensordictsequentialand": 194, "block": 194, "demonstr": [194, 196], "architectur": 194, "vaswani": 194, "2017": 194, "asid": 194, "src": 194, "ffn": 194, "skiplayernorm": 194, "splithead": 194, "tokenstoqkv": 194, "attentionblocktensordict": 194, "wire": 194, "connect": 194, "moreov": 194, "complic": [194, 195, 196], "to_nam": 194, "from_nam": 194, "to_dim": 194, "to_len": 194, "from_dim": 194, "latent_dim": 194, "num_head": 194, "x_out": 194, "attn": 194, "thank": 194, "transformerblockencodertensordict": 194, "transformerblockdecodertensordict": 194, "token": 194, "extract": 194, "x_from": 194, "x_to": 194, "transformerencodertensordict": 194, "num_block": 194, "transformerdecodertensordict": 194, "transformertensordict": 194, "from_len": 194, "x_encod": 194, "x_decod": 194, "ve": 194, "operar": 194, "td_token": 194, "tdtransform": 194, "t1": 194, "t2": 194, "015494108200073242": 194, "t3": 194, "t4": 194, "008761167526245117": 194, "minim": 194, "introduc": [194, 195], "margin": 194, "deal": 195, "furthermor": 195, "awai": 195, "organ": 195, "power": 195, "segment": 195, "get_data_a": 195, "get_data_b": 195, "reusabl": 195, "lot": 195, "rewriten": 195, "modal": 195, "get_data": 195, "reus": 195, "argu": 195, "dictdataset": 195, "__getitem__": [195, 196], "collat": 195, "collate_dict_fn": 195, "dict_list": 195, "final_dict": 195, "single_dict": 195, "simpler": 195, "dataload": 195, "collate_tensordict_fn": 195, "furtherdown": 195, "_unsqueezedtensordict": 195, "_viewedtensordict": 195, "_permutedtensordict": 195, "datastructur": 195, "explicitli": 195, "caramba": 195, "int32": [195, 197], "algebra": 195, "foo": [195, 196], "multidimension": 195, "insid": [195, 196], "violat": 195, "err": 195, "mismatch": 195, "resp": 195, "among": 195, "tensordict_clon": 195, "tensodict": 195, "tuple_index": 195, "new_tensordict": 195, "get_sub_tensordict": 195, "subtensordict": 195, "pointer": 195, "subtd": 195, "td2": 195, "booltensor": 195, "fashion": 195, "clonned_tensordict": 195, "staked_tensordict": 195, "isinst": 195, "unbind": 195, "list_tensordict": 195, "comeback": 195, "permut": [195, 196, 197], "unsqueezed_tensordict": 195, "role": 196, "somewhat": 196, "supervis": 196, "unsupervis": 196, "pip": [196, 197], "rom": 196, "licens": 196, "pygam": 196, "unifi": 196, "_build_env": 196, "adventur": 196, "ram": 196, "airraid": 196, "alien": 196, "amidar": 196, "assault": 196, "happen": 196, "continuousbox": [196, 197], "inf": 196, "tool": 196, "4501": 196, "pack": 196, "brief": 196, "exectut": 196, "brax": 196, "reproduct": 196, "did": 196, "shortcut": 196, "tensordict_tprim": 196, "tensordict_rollout": [196, 197], "quickli": 196, "axesimag": 196, "0x7fb8d98dd460": 196, "inconsist": 196, "supplementari": 196, "acrobot": 196, "swingup": 196, "swingup_spars": 196, "ball_in_cup": 196, "catch": 196, "balance_spars": 196, "three_pol": 196, "two_pol": 196, "finger": 196, "turn_easi": 196, "turn_hard": 196, "fish": 196, "swim": 196, "hopper": 196, "hop": 196, "run_pure_st": 196, "bring_bal": 196, "bring_peg": 196, "insert_bal": 196, "insert_peg": 196, "point_mass": 196, "reacher": 196, "swimmer": 196, "swimmer6": 196, "swimmer15": 196, "walker": 196, "dog": 196, "fetch": 196, "trot": 196, "humanoid_cmu": 196, "lqr": 196, "lqr_2_1": 196, "lqr_6_2": 196, "quadrup": 196, "escap": 196, "stacker": 196, "stack_2": 196, "stack_4": 196, "240": [196, 197], "env_transform": 196, "wrapper1": 196, "wrapper2": 196, "obviou": 196, "truth": 196, "extern": 196, "env0": 196, "env_transformed_bi": 196, "stanc": 196, "transformeddistribut": 196, "base_dist": 196, "ndunboundeddiscretetensorspec": 196, "concat": 196, "mofidi": 196, "_inv_apply_transform": 196, "_apply_transform": 196, "transformedenviron": 196, "moderet": 196, "computation": 196, "legitim": 196, "impli": 196, "side": 196, "incom": 196, "amongst": 196, "has_cuda": 196, "simplest": 196, "wor": 196, "convention": 196, "program": 196, "scope": 196, "difficulti": 196, "markovian": 196, "reconstruct": 196, "3288080526": 196, "sometim": 196, "constain": 196, "sleep": 196, "uuid": 196, "uuid1": 196, "bar_": 196, "get_someth": 196, "bar_694438d": 196, "6b27": 196, "11ed": 196, "84a7": 196, "0242ac120002": 196, "aargh": 196, "ourselv": 196, "foo_list": 196, "vec_env": [196, 197], "_dispatch_caller_parallel": 196, "0x7fb8cc7c6340": 196, "bar_6cb773dc": 196, "9285": 196, "bar_6caaf2b0": 196, "aa1d": 196, "bar_6cb9be3a": 196, "b575": 196, "121": 196, "122": 196, "parallen": 196, "carefulli": 196, "commonli": 196, "approxim": 196, "particularili": 196, "evolv": 196, "caution": 196, "previous": 196, "steadi": 196, "approx": 196, "8478": 196, "1434": 196, "2088": 196, "4936": 196, "4523": 196, "3523": 196, "_extra_st": 196, "observation_count": 196, "observation_ssq": 196, "observation_sum": 196, "642": 196, "1806": 196, "2569": 196, "_default_get": 196, "517": 196, "keyerror": 196, "reward_count": 196, "reward_ssq": 196, "reward_sum": 196, "dispach": 196, "absor": 196, "demo": 197, "icml": 197, "2022": 197, "dai": 197, "overview": 197, "vmoen": 197, "fb": 197, "question": 197, "team": 197, "decid": 197, "invest": 197, "platform": 197, "gym_lik": 197, "pg": 197, "vtrace": 197, "media": 197, "truli": 197, "wandb": 197, "tensorboard": 197, "tensordict1": 197, "tensordict2": 197, "tensordict_sampl": 197, "_sum_tre": 197, "28791671991348267": 197, "gym_env": 197, "0000": 197, "squash": 197, "lazyconv2d": 197, "6400": 197, "backbone_modul": 197, "value_modul": 197, "fsequenc": 197, "params_expand": 197, "buffers_expand": 197, "tensordict_exp": 197, "base_modul": 197, "0137": 197, "1524": 197, "0641": 197, "grad_fn": 197, "addbackward0": 197, "indexputbackward0": 197, "8728": 197, "1335": 197, "9833": 197, "3497": 197, "6889": 197, "6433": 197, "clampbackward1": 197, "1131": 197, "1761": 197, "3425": 197, "2665": 197, "2915": 197, "6207": 197, "1441": 197, "2375": 197, "1242": 197, "1372": 197, "3810": 197, "meanbackward1": 197, "tensordicts_prealloc": 197, "tensordicts_stack": 197, "disclaim": 197, "concatmodul": 197, "loss_fn": 197, "loss_td": 197, "loss_actor": 197, "loss_valu": 197, "pred_valu": 197, "pred_value_max": 197, "target_value_max": 197, "bug": 197, "bc": 197, "year": 197, "roadmap": 197, "compris": 197, "hierarch": 197, "contributor": 197, "curiou": 197, "feedback": 197, "nascent": 197, "pypi": 197}, "objects": {"torchrl._utils": [[9, 0, 1, "", "implement_for"]], "torchrl.collectors": [[10, 0, 1, "", "MultiSyncDataCollector"], [11, 0, 1, "", "MultiaSyncDataCollector"], [12, 0, 1, "", "SyncDataCollector"], [13, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.MultiSyncDataCollector": [[10, 1, 1, "", "load_state_dict"], [10, 1, 1, "", "reset"], [10, 1, 1, "", "set_seed"], [10, 1, 1, "", "shutdown"], [10, 1, 1, "", "state_dict"], [10, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[12, 1, 1, "", "iterator"], [12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "rollout"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[14, 2, 1, "", "split_trajectories"]], "torchrl.data": [[15, 0, 1, "", "BinaryDiscreteTensorSpec"], [16, 0, 1, "", "BoundedTensorSpec"], [17, 0, 1, "", "CompositeSpec"], [18, 0, 1, "", "DiscreteTensorSpec"], [19, 0, 1, "", "MultOneHotDiscreteTensorSpec"], [20, 0, 1, "", "MultiStep"], [21, 0, 1, "", "NdBoundedTensorSpec"], [22, 0, 1, "", "NdUnboundedContinuousTensorSpec"], [23, 0, 1, "", "OneHotDiscreteTensorSpec"], [24, 0, 1, "", "PrioritizedReplayBuffer"], [25, 0, 1, "", "ReplayBuffer"], [26, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [27, 0, 1, "", "TensorDictReplayBuffer"], [28, 0, 1, "", "TensorSpec"], [29, 0, 1, "", "UnboundedContinuousTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[15, 1, 1, "", "assert_is_in"], [15, 1, 1, "", "encode"], [15, 1, 1, "", "index"], [15, 1, 1, "", "is_in"], [15, 1, 1, "", "project"], [15, 1, 1, "", "rand"], [15, 1, 1, "", "to_numpy"], [15, 1, 1, "", "type_check"], [15, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[16, 1, 1, "", "assert_is_in"], [16, 1, 1, "", "encode"], [16, 1, 1, "", "index"], [16, 1, 1, "", "is_in"], [16, 1, 1, "", "project"], [16, 1, 1, "", "rand"], [16, 1, 1, "", "to_numpy"], [16, 1, 1, "", "type_check"], [16, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "keys"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.MultOneHotDiscreteTensorSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[20, 1, 1, "", "add_module"], [20, 1, 1, "", "apply"], [20, 1, 1, "", "bfloat16"], [20, 1, 1, "", "buffers"], [20, 1, 1, "", "children"], [20, 1, 1, "", "cpu"], [20, 1, 1, "", "cuda"], [20, 1, 1, "", "double"], [20, 1, 1, "", "eval"], [20, 1, 1, "", "extra_repr"], [20, 1, 1, "", "float"], [20, 1, 1, "", "forward"], [20, 1, 1, "", "get_buffer"], [20, 1, 1, "", "get_extra_state"], [20, 1, 1, "", "get_parameter"], [20, 1, 1, "", "get_submodule"], [20, 1, 1, "", "half"], [20, 1, 1, "", "ipu"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "modules"], [20, 1, 1, "", "named_buffers"], [20, 1, 1, "", "named_children"], [20, 1, 1, "", "named_modules"], [20, 1, 1, "", "named_parameters"], [20, 1, 1, "", "parameters"], [20, 1, 1, "", "register_backward_hook"], [20, 1, 1, "", "register_buffer"], [20, 1, 1, "", "register_forward_hook"], [20, 1, 1, "", "register_forward_pre_hook"], [20, 1, 1, "", "register_full_backward_hook"], [20, 1, 1, "", "register_load_state_dict_post_hook"], [20, 1, 1, "", "register_module"], [20, 1, 1, "", "register_parameter"], [20, 1, 1, "", "requires_grad_"], [20, 1, 1, "", "set_extra_state"], [20, 1, 1, "", "share_memory"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "to"], [20, 1, 1, "", "to_empty"], [20, 1, 1, "", "train"], [20, 1, 1, "", "type"], [20, 1, 1, "", "xpu"], [20, 1, 1, "", "zero_grad"]], "torchrl.data.NdBoundedTensorSpec": [[21, 1, 1, "", "assert_is_in"], [21, 1, 1, "", "encode"], [21, 1, 1, "", "index"], [21, 1, 1, "", "is_in"], [21, 1, 1, "", "project"], [21, 1, 1, "", "rand"], [21, 1, 1, "", "to_numpy"], [21, 1, 1, "", "type_check"], [21, 1, 1, "", "zero"]], "torchrl.data.NdUnboundedContinuousTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[24, 1, 1, "", "add"], [24, 1, 1, "", "extend"], [24, 1, 1, "", "sample"], [24, 1, 1, "", "update_priority"]], "torchrl.data.ReplayBuffer": [[25, 1, 1, "", "add"], [25, 1, 1, "", "extend"], [25, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "update_priority"]], "torchrl.data.TensorDictReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.rb_prototype": [[30, 0, 1, "", "RemoteTensorDictReplayBuffer"], [31, 0, 1, "", "ReplayBuffer"], [32, 0, 1, "", "TensorDictReplayBuffer"]], "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer": [[30, 1, 1, "", "add"], [30, 1, 1, "", "append_transform"], [30, 1, 1, "", "extend"], [30, 1, 1, "", "insert_transform"], [30, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer": [[31, 1, 1, "", "add"], [31, 1, 1, "", "append_transform"], [31, 1, 1, "", "extend"], [31, 1, 1, "", "insert_transform"], [31, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer": [[32, 1, 1, "", "add"], [32, 1, 1, "", "append_transform"], [32, 1, 1, "", "extend"], [32, 1, 1, "", "insert_transform"], [32, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.samplers": [[33, 0, 1, "", "PrioritizedSampler"], [34, 0, 1, "", "RandomSampler"], [35, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[33, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[36, 0, 1, "", "LazyMemmapStorage"], [37, 0, 1, "", "LazyTensorStorage"], [38, 0, 1, "", "ListStorage"], [39, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[36, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[39, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[40, 0, 1, "", "RoundRobinWriter"], [41, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[40, 1, 1, "", "add"], [40, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "extend"]], "torchrl.envs": [[42, 0, 1, "", "EnvBase"], [43, 0, 1, "", "GymLikeEnv"], [44, 2, 1, "", "ModelBasedEnvBase"], [45, 0, 1, "", "ParallelEnv"], [46, 0, 1, "", "SerialEnv"], [44, 1, 1, "", "rand_step"], [44, 1, 1, "", "reset"], [44, 1, 1, "", "rollout"], [44, 1, 1, "", "set_seed"], [44, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[42, 1, 1, "", "add_module"], [42, 1, 1, "", "apply"], [42, 3, 1, "", "batch_locked"], [42, 1, 1, "", "bfloat16"], [42, 1, 1, "", "buffers"], [42, 1, 1, "", "children"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 1, 1, "", "double"], [42, 1, 1, "", "eval"], [42, 1, 1, "", "extra_repr"], [42, 1, 1, "", "fake_tensordict"], [42, 1, 1, "", "float"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_buffer"], [42, 1, 1, "", "get_extra_state"], [42, 1, 1, "", "get_parameter"], [42, 1, 1, "", "get_submodule"], [42, 1, 1, "", "half"], [42, 1, 1, "", "ipu"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "modules"], [42, 1, 1, "", "named_buffers"], [42, 1, 1, "", "named_children"], [42, 1, 1, "", "named_modules"], [42, 1, 1, "", "named_parameters"], [42, 1, 1, "", "parameters"], [42, 1, 1, "id0", "rand_step"], [42, 1, 1, "", "register_backward_hook"], [42, 1, 1, "", "register_buffer"], [42, 1, 1, "", "register_forward_hook"], [42, 1, 1, "", "register_forward_pre_hook"], [42, 1, 1, "", "register_full_backward_hook"], [42, 1, 1, "", "register_load_state_dict_post_hook"], [42, 1, 1, "", "register_module"], [42, 1, 1, "", "register_parameter"], [42, 1, 1, "", "requires_grad_"], [42, 1, 1, "id1", "reset"], [42, 1, 1, "id2", "rollout"], [42, 1, 1, "", "set_extra_state"], [42, 1, 1, "id3", "set_seed"], [42, 1, 1, "", "share_memory"], [42, 3, 1, "", "specs"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "id4", "step"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_empty"], [42, 1, 1, "", "train"], [42, 1, 1, "", "type"], [42, 1, 1, "", "xpu"], [42, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[43, 1, 1, "", "add_module"], [43, 1, 1, "", "apply"], [43, 3, 1, "", "batch_locked"], [43, 1, 1, "", "bfloat16"], [43, 1, 1, "", "buffers"], [43, 1, 1, "", "children"], [43, 1, 1, "", "close"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 1, 1, "", "double"], [43, 1, 1, "", "eval"], [43, 1, 1, "", "extra_repr"], [43, 1, 1, "", "fake_tensordict"], [43, 1, 1, "", "float"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "get_buffer"], [43, 1, 1, "", "get_extra_state"], [43, 1, 1, "", "get_parameter"], [43, 1, 1, "", "get_submodule"], [43, 1, 1, "", "half"], [43, 1, 1, "", "ipu"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "modules"], [43, 1, 1, "", "named_buffers"], [43, 1, 1, "", "named_children"], [43, 1, 1, "", "named_modules"], [43, 1, 1, "", "named_parameters"], [43, 1, 1, "", "parameters"], [43, 1, 1, "", "rand_step"], [43, 1, 1, "", "read_action"], [43, 1, 1, "", "read_done"], [43, 1, 1, "", "read_obs"], [43, 1, 1, "", "read_reward"], [43, 1, 1, "", "register_backward_hook"], [43, 1, 1, "", "register_buffer"], [43, 1, 1, "", "register_forward_hook"], [43, 1, 1, "", "register_forward_pre_hook"], [43, 1, 1, "", "register_full_backward_hook"], [43, 1, 1, "", "register_load_state_dict_post_hook"], [43, 1, 1, "", "register_module"], [43, 1, 1, "", "register_parameter"], [43, 1, 1, "", "requires_grad_"], [43, 1, 1, "", "reset"], [43, 1, 1, "", "rollout"], [43, 1, 1, "", "set_extra_state"], [43, 1, 1, "", "set_info_dict_reader"], [43, 1, 1, "", "set_seed"], [43, 1, 1, "", "share_memory"], [43, 3, 1, "", "specs"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "", "step"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_empty"], [43, 1, 1, "", "train"], [43, 1, 1, "", "type"], [43, 1, 1, "", "xpu"], [43, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 3, 1, "", "batch_locked"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "fake_tensordict"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "share_memory"], [45, 3, 1, "", "specs"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "step"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "update_kwargs"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[46, 1, 1, "", "add_module"], [46, 1, 1, "", "apply"], [46, 3, 1, "", "batch_locked"], [46, 1, 1, "", "bfloat16"], [46, 1, 1, "", "buffers"], [46, 1, 1, "", "children"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 1, 1, "", "double"], [46, 1, 1, "", "eval"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "fake_tensordict"], [46, 1, 1, "", "float"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_buffer"], [46, 1, 1, "", "get_extra_state"], [46, 1, 1, "", "get_parameter"], [46, 1, 1, "", "get_submodule"], [46, 1, 1, "", "half"], [46, 1, 1, "", "ipu"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "modules"], [46, 1, 1, "", "named_buffers"], [46, 1, 1, "", "named_children"], [46, 1, 1, "", "named_modules"], [46, 1, 1, "", "named_parameters"], [46, 1, 1, "", "parameters"], [46, 1, 1, "", "rand_step"], [46, 1, 1, "", "register_backward_hook"], [46, 1, 1, "", "register_buffer"], [46, 1, 1, "", "register_forward_hook"], [46, 1, 1, "", "register_forward_pre_hook"], [46, 1, 1, "", "register_full_backward_hook"], [46, 1, 1, "", "register_load_state_dict_post_hook"], [46, 1, 1, "", "register_module"], [46, 1, 1, "", "register_parameter"], [46, 1, 1, "", "requires_grad_"], [46, 1, 1, "", "reset"], [46, 1, 1, "", "rollout"], [46, 1, 1, "", "set_extra_state"], [46, 1, 1, "", "set_seed"], [46, 1, 1, "", "share_memory"], [46, 3, 1, "", "specs"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "step"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_empty"], [46, 1, 1, "", "train"], [46, 1, 1, "", "type"], [46, 1, 1, "", "update_kwargs"], [46, 1, 1, "", "xpu"], [46, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.dm_control": [[47, 2, 1, "", "DMControlEnv"], [48, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[49, 2, 1, "", "GymEnv"], [50, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[51, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[52, 2, 1, "", "JumanjiEnv"], [53, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.model_based.dreamer": [[54, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[55, 0, 1, "", "BinarizeReward"], [56, 0, 1, "", "CatFrames"], [57, 0, 1, "", "CatTensors"], [58, 0, 1, "", "CenterCrop"], [59, 0, 1, "", "Compose"], [60, 0, 1, "", "DoubleToFloat"], [61, 0, 1, "", "FiniteTensorDictCheck"], [62, 0, 1, "", "FlattenObservation"], [63, 0, 1, "", "GrayScale"], [64, 0, 1, "", "NoopResetEnv"], [65, 0, 1, "", "ObservationNorm"], [66, 0, 1, "", "ObservationTransform"], [67, 0, 1, "", "PinMemoryTransform"], [68, 0, 1, "", "R3MTransform"], [69, 0, 1, "", "Resize"], [70, 0, 1, "", "RewardClipping"], [71, 0, 1, "", "RewardScaling"], [72, 0, 1, "", "TensorDictPrimer"], [73, 0, 1, "", "ToTensorImage"], [74, 0, 1, "", "Transform"], [75, 0, 1, "", "TransformedEnv"], [76, 0, 1, "", "UnsqueezeTransform"], [77, 0, 1, "", "VIPTransform"], [78, 0, 1, "", "VecNorm"], [79, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[55, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[56, 1, 1, "", "reset"], [56, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[57, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[58, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[59, 1, 1, "", "forward"], [59, 1, 1, "", "reset"], [59, 1, 1, "", "to"], [59, 1, 1, "", "transform_input_spec"], [59, 1, 1, "", "transform_observation_spec"], [59, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[60, 1, 1, "", "transform_input_spec"], [60, 1, 1, "", "transform_observation_spec"], [60, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.FlattenObservation": [[62, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[63, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[64, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[65, 1, 1, "", "init_stats"], [65, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[68, 1, 1, "", "forward"], [68, 1, 1, "", "reset"], [68, 1, 1, "", "to"], [68, 1, 1, "", "transform_input_spec"], [68, 1, 1, "", "transform_observation_spec"], [68, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Resize": [[69, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[70, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[71, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[72, 1, 1, "", "reset"], [72, 1, 1, "", "to"], [72, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[73, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[74, 1, 1, "", "forward"], [74, 1, 1, "", "reset"], [74, 1, 1, "", "transform_input_spec"], [74, 1, 1, "", "transform_observation_spec"], [74, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[75, 3, 1, "", "action_spec"], [75, 3, 1, "", "batch_locked"], [75, 1, 1, "", "eval"], [75, 3, 1, "", "input_spec"], [75, 1, 1, "", "load_state_dict"], [75, 3, 1, "", "observation_spec"], [75, 3, 1, "", "reward_spec"], [75, 1, 1, "", "set_seed"], [75, 1, 1, "", "state_dict"], [75, 1, 1, "", "to"], [75, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[76, 1, 1, "", "forward"], [76, 1, 1, "", "transform_input_spec"], [76, 1, 1, "", "transform_observation_spec"], [76, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPTransform": [[77, 1, 1, "", "forward"], [77, 1, 1, "", "reset"], [77, 1, 1, "", "to"], [77, 1, 1, "", "transform_input_spec"], [77, 1, 1, "", "transform_observation_spec"], [77, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VecNorm": [[78, 1, 1, "", "build_td_for_shared_vecnorm"], [78, 1, 1, "", "get_extra_state"], [78, 1, 1, "", "set_extra_state"], [78, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[79, 1, 1, "", "reset"]], "torchrl.envs.utils": [[80, 2, 1, "", "exploration_mode"], [81, 2, 1, "", "get_available_libraries"], [82, 2, 1, "", "set_exploration_mode"], [83, 2, 1, "", "step_mdp"]], "torchrl.modules": [[84, 0, 1, "", "Actor"], [85, 0, 1, "", "ActorCriticOperator"], [86, 0, 1, "", "ActorCriticWrapper"], [87, 0, 1, "", "ActorValueOperator"], [88, 0, 1, "", "CEMPlanner"], [89, 0, 1, "", "ConvNet"], [90, 0, 1, "", "DdpgCnnActor"], [91, 0, 1, "", "DdpgCnnQNet"], [92, 0, 1, "", "DdpgMlpActor"], [93, 0, 1, "", "DdpgMlpQNet"], [94, 0, 1, "", "Delta"], [95, 0, 1, "", "DistributionalDQNnet"], [96, 0, 1, "", "DistributionalQValueActor"], [97, 0, 1, "", "DreamerActor"], [98, 0, 1, "", "DuelingCnnDQNet"], [99, 0, 1, "", "LSTMNet"], [100, 0, 1, "", "MLP"], [101, 0, 1, "", "MPCPlannerBase"], [102, 0, 1, "", "NoisyLazyLinear"], [103, 0, 1, "", "NoisyLinear"], [104, 0, 1, "", "ObsDecoder"], [105, 0, 1, "", "ObsEncoder"], [106, 0, 1, "", "OneHotCategorical"], [107, 0, 1, "", "ProbabilisticActor"], [108, 0, 1, "", "ProbabilisticTensorDictModule"], [109, 0, 1, "", "QValueActor"], [110, 0, 1, "", "RSSMPosterior"], [111, 0, 1, "", "RSSMPrior"], [112, 0, 1, "", "TanhDelta"], [113, 0, 1, "", "TanhNormal"], [114, 0, 1, "", "TensorDictModule"], [115, 0, 1, "", "TensorDictModuleWrapper"], [116, 0, 1, "", "TensorDictSequential"], [117, 0, 1, "", "TruncatedNormal"], [118, 0, 1, "", "ValueOperator"], [119, 0, 1, "", "reset_noise"]], "torchrl.modules.ActorCriticOperator": [[85, 1, 1, "", "get_critic_operator"], [85, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorCriticWrapper": [[86, 1, 1, "", "get_policy_operator"], [86, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorValueOperator": [[87, 1, 1, "", "get_policy_operator"], [87, 1, 1, "", "get_value_operator"]], "torchrl.modules.CEMPlanner": [[88, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[89, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[90, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[91, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[92, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[93, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[94, 1, 1, "", "log_prob"], [94, 3, 1, "", "mean"], [94, 3, 1, "", "mode"], [94, 1, 1, "", "rsample"], [94, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[95, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[97, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[98, 1, 1, "", "forward"]], "torchrl.modules.LSTMNet": [[99, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[100, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[101, 1, 1, "", "forward"], [101, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[102, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[104, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[105, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[106, 1, 1, "", "log_prob"], [106, 3, 1, "", "mode"], [106, 1, 1, "", "rsample"], [106, 1, 1, "", "sample"]], "torchrl.modules.ProbabilisticTensorDictModule": [[108, 1, 1, "", "forward"], [108, 1, 1, "", "make_functional_with_buffers"]], "torchrl.modules.RSSMPosterior": [[110, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[111, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[112, 3, 1, "", "mean"], [112, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[113, 3, 1, "", "mode"]], "torchrl.modules.TensorDictModule": [[114, 1, 1, "", "forward"], [114, 1, 1, "", "make_functional_with_buffers"], [114, 1, 1, "", "random"], [114, 1, 1, "", "random_sample"], [114, 1, 1, "", "to"]], "torchrl.modules.TensorDictModuleWrapper": [[115, 1, 1, "", "forward"]], "torchrl.modules.TensorDictSequential": [[116, 1, 1, "", "forward"], [116, 1, 1, "", "make_functional_with_buffers"], [116, 1, 1, "", "select_subsequence"]], "torchrl.modules.TruncatedNormal": [[117, 1, 1, "", "log_prob"], [117, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module.actors": [[120, 0, 1, "", "DistributionalQValueHook"], [121, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[122, 0, 1, "", "ensure_tensordict_compatible"], [123, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[124, 0, 1, "", "biased_softplus"], [125, 0, 1, "", "inv_softplus"], [126, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[124, 1, 1, "", "forward"]], "torchrl.objectives": [[127, 0, 1, "", "ClipPPOLoss"], [128, 0, 1, "", "DDPGLoss"], [129, 0, 1, "", "DQNLoss"], [130, 0, 1, "", "DistributionalDQNLoss"], [131, 0, 1, "", "HardUpdate"], [132, 0, 1, "", "KLPENPPOLoss"], [133, 0, 1, "", "PPOLoss"], [134, 0, 1, "", "REDQLoss"], [135, 0, 1, "", "SACLoss"], [136, 0, 1, "", "SoftUpdate"], [137, 0, 1, "", "distance_loss"], [138, 0, 1, "", "hold_out_net"], [139, 0, 1, "", "hold_out_params"], [140, 0, 1, "", "next_state_value"]], "torchrl.objectives.ClipPPOLoss": [[127, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[128, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[129, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[130, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[132, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[133, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[134, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[135, 1, 1, "", "forward"]], "torchrl.objectives.value": [[141, 0, 1, "", "GAE"], [142, 0, 1, "", "TDEstimate"], [143, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[141, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[142, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[143, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[144, 0, 1, "", "generalized_advantage_estimate"], [145, 0, 1, "", "td_advantage_estimate"], [146, 0, 1, "", "td_lambda_advantage_estimate"], [147, 0, 1, "", "td_lambda_return_estimate"], [148, 0, 1, "", "vec_generalized_advantage_estimate"], [149, 0, 1, "", "vec_td_lambda_advantage_estimate"], [150, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.trainers": [[151, 0, 1, "", "BatchSubSampler"], [152, 0, 1, "", "ClearCudaCache"], [153, 0, 1, "", "CountFramesLog"], [154, 0, 1, "", "LogReward"], [155, 0, 1, "", "Recorder"], [156, 0, 1, "", "ReplayBuffer"], [157, 0, 1, "", "RewardNormalizer"], [158, 0, 1, "", "SelectKeys"], [159, 0, 1, "", "Trainer"], [160, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.ReplayBuffer": [[156, 1, 1, "", "add"], [156, 1, 1, "", "extend"], [156, 1, 1, "", "sample"]], "torchrl.trainers.helpers": [[161, 2, 1, "", "correct_for_frame_skip"], [162, 2, 1, "", "get_stats_random_rollout"], [163, 2, 1, "", "make_collector_offpolicy"], [164, 2, 1, "", "make_collector_onpolicy"], [165, 2, 1, "", "make_ddpg_actor"], [166, 2, 1, "", "make_ddpg_loss"], [167, 2, 1, "", "make_dqn_actor"], [168, 2, 1, "", "make_dqn_loss"], [169, 2, 1, "", "make_ppo_loss"], [170, 2, 1, "", "make_ppo_model"], [171, 2, 1, "", "make_redq_loss"], [172, 2, 1, "", "make_redq_model"], [173, 2, 1, "", "make_replay_buffer"], [174, 2, 1, "", "make_sac_loss"], [175, 2, 1, "", "make_sac_model"], [176, 2, 1, "", "make_target_updater"], [177, 2, 1, "", "make_trainer"], [178, 2, 1, "", "parallel_env_constructor"], [179, 2, 1, "", "sync_async_collector"], [180, 2, 1, "", "sync_sync_collector"], [181, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 5, 185, 186, 187, 188, 189, 190, 196, 197], "document": [0, 8], "tutori": 0, "refer": [0, 183], "indic": 0, "tabl": 0, "collector": [1, 189], "packag": [1, 2, 3, 185, 186, 187, 188], "data": [1, 2, 189, 197], "helper": [1, 3], "function": [1, 197], "replai": [2, 189, 197], "buffer": [2, 189, 197], "compos": [2, 59], "prototyp": 2, "tensorspec": [2, 28], "util": [2, 185, 186, 187], "env": [3, 196, 197], "vector": [3, 197], "transform": [3, 74, 189, 194, 196, 197], "domain": 3, "specif": [3, 192], "librari": [3, 197], "work": [4, 5], "gym": [4, 196], "version": [4, 6], "habitat": 5, "lab": 5, "set": [5, 195], "up": 5, "your": [5, 189], "environ": [5, 6, 189, 190, 192, 196, 197], "instal": [5, 6, 197], "from": [5, 6], "pip": [5, 6], "us": [5, 8, 189, 190, 194, 197], "common": [5, 6], "issu": [5, 6], "about": 6, "mujoco": 6, "prerequisit": 6, "render": [6, 196], "all": 6, "new": 6, "bindindg": 6, "2": [6, 194], "1": [6, 194], "old": 6, "bind": 6, "py": 6, "option": 6, "clone": 6, "repo": [6, 8], "when": 6, "pro": 7, "tip": 7, "train": [7, 189, 190], "cluster": 7, "resourc": 8, "pytorch": 8, "functorch": [8, 194], "rl": [8, 194, 197], "blog": 8, "websit": 8, "educ": 8, "forum": 8, "implement_for": 9, "multisyncdatacollector": 10, "multiasyncdatacollector": 11, "syncdatacollector": 12, "asyncdatacollector": 13, "split_trajectori": 14, "binarydiscretetensorspec": 15, "boundedtensorspec": 16, "compositespec": 17, "discretetensorspec": 18, "multonehotdiscretetensorspec": 19, "multistep": 20, "ndboundedtensorspec": 21, "ndunboundedcontinuoustensorspec": 22, "onehotdiscretetensorspec": 23, "prioritizedreplaybuff": 24, "replaybuff": [25, 31, 156], "tensordictprioritizedreplaybuff": 26, "tensordictreplaybuff": [27, 32], "unboundedcontinuoustensorspec": 29, "remotetensordictreplaybuff": 30, "prioritizedsampl": 33, "randomsampl": 34, "sampler": 35, "lazymemmapstorag": 36, "lazytensorstorag": 37, "liststorag": 38, "storag": 39, "roundrobinwrit": 40, "writer": 41, "envbas": 42, "gymlikeenv": 43, "modelbasedenvbas": 44, "parallelenv": 45, "serialenv": 46, "dmcontrolenv": 47, "dmcontrolwrapp": 48, "gymenv": 49, "gymwrapp": 50, "habitatenv": 51, "jumanjienv": 52, "jumanjiwrapp": 53, "dreamerenv": 54, "binarizereward": 55, "catfram": 56, "cattensor": 57, "centercrop": 58, "doubletofloat": 60, "finitetensordictcheck": 61, "flattenobserv": 62, "grayscal": 63, "noopresetenv": 64, "observationnorm": 65, "observationtransform": 66, "pinmemorytransform": 67, "r3mtransform": 68, "resiz": 69, "rewardclip": 70, "rewardsc": 71, "tensordictprim": 72, "totensorimag": 73, "transformedenv": 75, "unsqueezetransform": 76, "viptransform": 77, "vecnorm": [78, 196], "gsdenois": 79, "exploration_mod": 80, "get_available_librari": 81, "set_exploration_mod": 82, "step_mdp": 83, "actor": [84, 194], "actorcriticoper": [85, 194], "actorcriticwrapp": 86, "actorvalueoper": 87, "cemplann": 88, "convnet": 89, "ddpgcnnactor": 90, "ddpgcnnqnet": 91, "ddpgmlpactor": 92, "ddpgmlpqnet": 93, "delta": 94, "distributionaldqnnet": 95, "distributionalqvalueactor": 96, "dreameractor": 97, "duelingcnndqnet": 98, "lstmnet": 99, "mlp": 100, "mpcplannerbas": 101, "noisylazylinear": 102, "noisylinear": 103, "obsdecod": 104, "obsencod": 105, "onehotcategor": 106, "probabilisticactor": [107, 194], "probabilistictensordictmodul": [108, 194], "qvalueactor": 109, "rssmposterior": 110, "rssmprior": 111, "tanhdelta": 112, "tanhnorm": 113, "tensordictmodul": [114, 194, 197], "tensordictmodulewrapp": 115, "tensordictsequenti": [116, 194], "truncatednorm": 117, "valueoper": 118, "reset_nois": 119, "distributionalqvaluehook": 120, "qvaluehook": 121, "ensure_tensordict_compat": 122, "is_tensordict_compat": 123, "biased_softplu": 124, "inv_softplu": 125, "map": 126, "clipppoloss": 127, "ddpgloss": 128, "dqnloss": 129, "distributionaldqnloss": 130, "hardupd": 131, "klpenppoloss": 132, "ppoloss": 133, "redqloss": 134, "sacloss": 135, "softupd": 136, "distance_loss": 137, "hold_out_net": 138, "hold_out_param": 139, "next_state_valu": 140, "gae": 141, "tdestim": 142, "tdlambdaestim": 143, "generalized_advantage_estim": 144, "td_advantage_estim": 145, "td_lambda_advantage_estim": 146, "td_lambda_return_estim": 147, "vec_generalized_advantage_estim": 148, "vec_td_lambda_advantage_estim": 149, "vec_td_lambda_return_estim": 150, "batchsubsampl": 151, "clearcudacach": 152, "countframeslog": 153, "logreward": 154, "record": [155, 189], "rewardnorm": 157, "selectkei": 158, "trainer": [159, 187], "updateweight": 160, "correct_for_frame_skip": 161, "get_stats_random_rollout": 162, "make_collector_offpolici": 163, "make_collector_onpolici": 164, "make_ddpg_actor": 165, "make_ddpg_loss": 166, "make_dqn_actor": 167, "make_dqn_loss": 168, "make_ppo_loss": 169, "make_ppo_model": 170, "make_redq_loss": 171, "make_redq_model": 172, "make_replay_buff": 173, "make_sac_loss": 174, "make_sac_model": 175, "make_target_updat": 176, "make_train": 177, "parallel_env_constructor": 178, "sync_async_collector": 179, "sync_sync_collector": 180, "transformed_env_constructor": 181, "readm": [182, 191], "demo": [182, 191], "api": 183, "knowledg": 184, "base": [184, 190], "contribut": [184, 197], "content": 184, "modul": [185, 197], "tensordict": [185, 195, 197], "hook": [185, 187], "model": [185, 189, 190, 197], "explor": 185, "planner": 185, "distribut": 185, "object": [186, 189, 197], "dqn": [186, 190], "ddpg": [186, 189], "sac": 186, "redq": 186, "ppo": 186, "return": 186, "checkpoint": 187, "builder": 187, "_util": 188, "code": [189, 190, 195], "parallel": [189, 192, 196], "execut": [189, 192], "normal": 189, "observ": 189, "build": [189, 190], "evalu": 189, "hyperparamet": [189, 190], "initi": 189, "time": [189, 193], "polici": [189, 192], "experi": 189, "result": 189, "sampl": 189, "trajectori": 189, "td": [189, 190], "lambda": [189, 190], "pixel": 190, "The": 190, "problem": 190, "deep": 190, "q": 190, "network": 190, "regular": 190, "loop": 190, "conclus": 190, "possibl": 190, "improv": [190, 195], "task": 192, "multi": 192, "divers": 192, "rollout": [192, 196], "comput": 193, "exampl": 194, "simpl": 194, "usag": [194, 195], "multipl": 194, "input": 194, "3": 194, "output": 194, "4": 194, "combin": 194, "5": 194, "compat": 194, "do": [194, 195], "": 194, "don": 194, "t": [194, 195], "showcas": 194, "implement": 194, "benchmark": 194, "modular": 195, "can": 195, "i": 195, "thi": 195, "python": 195, "dict": 195, "structur": 195, "dictionari": 195, "featur": 195, "get": 195, "kei": 195, "valu": 195, "updat": 195, "tensordict_or_dict": 195, "del": 195, "tensor": 195, "batch": 195, "size": 195, "devic": [195, 196], "memori": 195, "share": 195, "via": 195, "physic": 195, "oper": 195, "spec": 196, "seed": 196, "reset": 196, "step": 196, "frame_skip": 196, "deepmind": 196, "control": 196, "run": 196, "close": 196, "access": 196, "attribut": 196, "kwarg": 196, "introduct": 197, "chang": 197, "config": 197, "sequenc": 197, "program": 197, "ensembl": 197, "meta": 197, "special": 197, "class": 197, "state": 197}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials:": [[0, null]], "References:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers (Prototype)": [[2, "composable-replay-buffers-prototype"]], "TensorSpec": [[2, "tensorspec"], [28, "tensorspec"]], "Utils": [[2, "utils"], [185, "utils"], [186, "utils"], [187, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [189, "transforms"], [197, "transforms"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Working with gym": [[4, "working-with-gym"]], "Versioning": [[4, "versioning"]], "Working with habitat-lab": [[5, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[5, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[5, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[5, "installing-torchrl"]], "Using Habitat": [[5, "using-habitat"]], "Common issues": [[5, "common-issues"]], "About MuJoCo": [[6, "about-mujoco"]], "Installing MuJoCo": [[6, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[6, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[6, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[6, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[6, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[6, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[6, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips": [[7, "pro-tips"]], "Training on a cluster": [[7, "training-on-a-cluster"]], "Useful resources": [[8, "useful-resources"]], "Pytorch documentation": [[8, "pytorch-documentation"]], "functorch documentation": [[8, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[8, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[8, "educational-resource"]], "Forums": [[8, "forums"]], "Repos": [[8, "repos"]], "implement_for": [[9, "implement-for"]], "MultiSyncDataCollector": [[10, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[11, "multiasyncdatacollector"]], "SyncDataCollector": [[12, "syncdatacollector"]], "aSyncDataCollector": [[13, "asyncdatacollector"]], "split_trajectories": [[14, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[15, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[16, "boundedtensorspec"]], "CompositeSpec": [[17, "compositespec"]], "DiscreteTensorSpec": [[18, "discretetensorspec"]], "MultOneHotDiscreteTensorSpec": [[19, "multonehotdiscretetensorspec"]], "MultiStep": [[20, "multistep"]], "NdBoundedTensorSpec": [[21, "ndboundedtensorspec"]], "NdUnboundedContinuousTensorSpec": [[22, "ndunboundedcontinuoustensorspec"]], "OneHotDiscreteTensorSpec": [[23, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[24, "prioritizedreplaybuffer"]], "ReplayBuffer": [[25, "replaybuffer"], [31, "replaybuffer"], [156, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[26, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[27, "tensordictreplaybuffer"], [32, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[29, "unboundedcontinuoustensorspec"]], "RemoteTensorDictReplayBuffer": [[30, "remotetensordictreplaybuffer"]], "PrioritizedSampler": [[33, "prioritizedsampler"]], "RandomSampler": [[34, "randomsampler"]], "Sampler": [[35, "sampler"]], "LazyMemmapStorage": [[36, "lazymemmapstorage"]], "LazyTensorStorage": [[37, "lazytensorstorage"]], "ListStorage": [[38, "liststorage"]], "Storage": [[39, "storage"]], "RoundRobinWriter": [[40, "roundrobinwriter"]], "Writer": [[41, "writer"]], "EnvBase": [[42, "envbase"]], "GymLikeEnv": [[43, "gymlikeenv"]], "ModelBasedEnvBase": [[44, "modelbasedenvbase"]], "ParallelEnv": [[45, "parallelenv"]], "SerialEnv": [[46, "serialenv"]], "DMControlEnv": [[47, "dmcontrolenv"]], "DMControlWrapper": [[48, "dmcontrolwrapper"]], "GymEnv": [[49, "gymenv"]], "GymWrapper": [[50, "gymwrapper"]], "HabitatEnv": [[51, "habitatenv"]], "JumanjiEnv": [[52, "jumanjienv"]], "JumanjiWrapper": [[53, "jumanjiwrapper"]], "DreamerEnv": [[54, "dreamerenv"]], "BinarizeReward": [[55, "binarizereward"]], "CatFrames": [[56, "catframes"]], "CatTensors": [[57, "cattensors"]], "CenterCrop": [[58, "centercrop"]], "Compose": [[59, "compose"]], "DoubleToFloat": [[60, "doubletofloat"]], "FiniteTensorDictCheck": [[61, "finitetensordictcheck"]], "FlattenObservation": [[62, "flattenobservation"]], "GrayScale": [[63, "grayscale"]], "NoopResetEnv": [[64, "noopresetenv"]], "ObservationNorm": [[65, "observationnorm"]], "ObservationTransform": [[66, "observationtransform"]], "PinMemoryTransform": [[67, "pinmemorytransform"]], "R3MTransform": [[68, "r3mtransform"]], "Resize": [[69, "resize"]], "RewardClipping": [[70, "rewardclipping"]], "RewardScaling": [[71, "rewardscaling"]], "TensorDictPrimer": [[72, "tensordictprimer"]], "ToTensorImage": [[73, "totensorimage"]], "Transform": [[74, "transform"]], "TransformedEnv": [[75, "transformedenv"]], "UnsqueezeTransform": [[76, "unsqueezetransform"]], "VIPTransform": [[77, "viptransform"]], "VecNorm": [[78, "vecnorm"], [196, "vecnorm"]], "gSDENoise": [[79, "gsdenoise"]], "exploration_mode": [[80, "exploration-mode"]], "get_available_libraries": [[81, "get-available-libraries"]], "set_exploration_mode": [[82, "set-exploration-mode"]], "step_mdp": [[83, "step-mdp"]], "Actor": [[84, "actor"], [194, "actor"]], "ActorCriticOperator": [[85, "actorcriticoperator"], [194, "actorcriticoperator"]], "ActorCriticWrapper": [[86, "actorcriticwrapper"]], "ActorValueOperator": [[87, "actorvalueoperator"]], "CEMPlanner": [[88, "cemplanner"]], "ConvNet": [[89, "convnet"]], "DdpgCnnActor": [[90, "ddpgcnnactor"]], "DdpgCnnQNet": [[91, "ddpgcnnqnet"]], "DdpgMlpActor": [[92, "ddpgmlpactor"]], "DdpgMlpQNet": [[93, "ddpgmlpqnet"]], "Delta": [[94, "delta"]], "DistributionalDQNnet": [[95, "distributionaldqnnet"]], "DistributionalQValueActor": [[96, "distributionalqvalueactor"]], "DreamerActor": [[97, "dreameractor"]], "DuelingCnnDQNet": [[98, "duelingcnndqnet"]], "LSTMNet": [[99, "lstmnet"]], "MLP": [[100, "mlp"]], "MPCPlannerBase": [[101, "mpcplannerbase"]], "NoisyLazyLinear": [[102, "noisylazylinear"]], "NoisyLinear": [[103, "noisylinear"]], "ObsDecoder": [[104, "obsdecoder"]], "ObsEncoder": [[105, "obsencoder"]], "OneHotCategorical": [[106, "onehotcategorical"]], "ProbabilisticActor": [[107, "probabilisticactor"], [194, "probabilisticactor"]], "ProbabilisticTensorDictModule": [[108, "probabilistictensordictmodule"], [194, "probabilistictensordictmodule"]], "QValueActor": [[109, "qvalueactor"]], "RSSMPosterior": [[110, "rssmposterior"]], "RSSMPrior": [[111, "rssmprior"]], "TanhDelta": [[112, "tanhdelta"]], "TanhNormal": [[113, "tanhnormal"]], "TensorDictModule": [[114, "tensordictmodule"], [194, "tensordictmodule"]], "TensorDictModuleWrapper": [[115, "tensordictmodulewrapper"]], "TensorDictSequential": [[116, "tensordictsequential"]], "TruncatedNormal": [[117, "truncatednormal"]], "ValueOperator": [[118, "valueoperator"]], "reset_noise": [[119, "reset-noise"]], "DistributionalQValueHook": [[120, "distributionalqvaluehook"]], "QValueHook": [[121, "qvaluehook"]], "ensure_tensordict_compatible": [[122, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[123, "is-tensordict-compatible"]], "biased_softplus": [[124, "biased-softplus"]], "inv_softplus": [[125, "inv-softplus"]], "mappings": [[126, "mappings"]], "ClipPPOLoss": [[127, "clipppoloss"]], "DDPGLoss": [[128, "ddpgloss"]], "DQNLoss": [[129, "dqnloss"]], "DistributionalDQNLoss": [[130, "distributionaldqnloss"]], "HardUpdate": [[131, "hardupdate"]], "KLPENPPOLoss": [[132, "klpenppoloss"]], "PPOLoss": [[133, "ppoloss"]], "REDQLoss": [[134, "redqloss"]], "SACLoss": [[135, "sacloss"]], "SoftUpdate": [[136, "softupdate"]], "distance_loss": [[137, "distance-loss"]], "hold_out_net": [[138, "hold-out-net"]], "hold_out_params": [[139, "hold-out-params"]], "next_state_value": [[140, "next-state-value"]], "GAE": [[141, "gae"]], "TDEstimate": [[142, "tdestimate"]], "TDLambdaEstimate": [[143, "tdlambdaestimate"]], "generalized_advantage_estimate": [[144, "generalized-advantage-estimate"]], "td_advantage_estimate": [[145, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[146, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[147, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[148, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[149, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[150, "vec-td-lambda-return-estimate"]], "BatchSubSampler": [[151, "batchsubsampler"]], "ClearCudaCache": [[152, "clearcudacache"]], "CountFramesLog": [[153, "countframeslog"]], "LogReward": [[154, "logreward"]], "Recorder": [[155, "recorder"]], "RewardNormalizer": [[157, "rewardnormalizer"]], "SelectKeys": [[158, "selectkeys"]], "Trainer": [[159, "trainer"]], "UpdateWeights": [[160, "updateweights"]], "correct_for_frame_skip": [[161, "correct-for-frame-skip"]], "get_stats_random_rollout": [[162, "get-stats-random-rollout"]], "make_collector_offpolicy": [[163, "make-collector-offpolicy"]], "make_collector_onpolicy": [[164, "make-collector-onpolicy"]], "make_ddpg_actor": [[165, "make-ddpg-actor"]], "make_ddpg_loss": [[166, "make-ddpg-loss"]], "make_dqn_actor": [[167, "make-dqn-actor"]], "make_dqn_loss": [[168, "make-dqn-loss"]], "make_ppo_loss": [[169, "make-ppo-loss"]], "make_ppo_model": [[170, "make-ppo-model"]], "make_redq_loss": [[171, "make-redq-loss"]], "make_redq_model": [[172, "make-redq-model"]], "make_replay_buffer": [[173, "make-replay-buffer"]], "make_sac_loss": [[174, "make-sac-loss"]], "make_sac_model": [[175, "make-sac-model"]], "make_target_updater": [[176, "make-target-updater"]], "make_trainer": [[177, "make-trainer"]], "parallel_env_constructor": [[178, "parallel-env-constructor"]], "sync_async_collector": [[179, "sync-async-collector"]], "sync_sync_collector": [[180, "sync-sync-collector"]], "transformed_env_constructor": [[181, "transformed-env-constructor"]], "README Demos": [[182, "readme-demos"], [191, "readme-demos"]], "API Reference": [[183, "api-reference"]], "Knowledge Base": [[184, "knowledge-base"]], "Contributing": [[184, "contributing"], [197, "contributing"]], "Contents:": [[184, null]], "torchrl.modules package": [[185, "torchrl-modules-package"]], "TensorDict modules": [[185, "tensordict-modules"]], "Hooks": [[185, "hooks"]], "Models": [[185, "models"], [197, "models"]], "Exploration": [[185, "exploration"]], "Planners": [[185, "planners"]], "Distributions": [[185, "distributions"]], "torchrl.objectives package": [[186, "torchrl-objectives-package"]], "DQN": [[186, "dqn"]], "DDPG": [[186, "ddpg"]], "SAC": [[186, "sac"]], "REDQ": [[186, "redq"]], "PPO": [[186, "ppo"]], "Returns": [[186, "returns"]], "torchrl.trainers package": [[187, "torchrl-trainers-package"]], "Checkpointing": [[187, "checkpointing"]], "Trainer and hooks": [[187, "trainer-and-hooks"]], "Builders": [[187, "builders"]], "torchrl._utils package": [[188, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[189, "coding-ddpg-using-torchrl"]], "Environment": [[189, "environment"]], "Parallel execution": [[189, "parallel-execution"]], "Normalization of the observations": [[189, "normalization-of-the-observations"]], "Building the model": [[189, "building-the-model"]], "Evaluator: building your recorder object": [[189, "evaluator-building-your-recorder-object"]], "Replay buffer": [[189, "replay-buffer"]], "Hyperparameters": [[189, "hyperparameters"], [190, "hyperparameters"]], "Initialization": [[189, "initialization"]], "Data collector": [[189, "data-collector"]], "Time to train the policy!": [[189, "time-to-train-the-policy"]], "Experiment results": [[189, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[189, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[190, "coding-a-pixel-based-dqn-using-torchrl"]], "Building the environment": [[190, "building-the-environment"]], "The problem": [[190, "the-problem"]], "Building the model (Deep Q-network)": [[190, "building-the-model-deep-q-network"]], "Regular DQN": [[190, "regular-dqn"]], "Training loop": [[190, "training-loop"], [190, "id1"]], "TD-lambda": [[190, "td-lambda"]], "Conclusion and possible improvements": [[190, "conclusion-and-possible-improvements"]], "Task-specific policy in multi-task environments": [[192, "task-specific-policy-in-multi-task-environments"]], "Policy": [[192, "policy"]], "Executing diverse tasks in parallel": [[192, "executing-diverse-tasks-in-parallel"]], "Rollout": [[192, "rollout"]], "Computation times": [[193, "computation-times"]], "TensorDictModule by examples": [[194, "tensordictmodule-by-examples"]], "Example 1: Simple usage": [[194, "example-1-simple-usage"]], "Example 2: Multiple inputs": [[194, "example-2-multiple-inputs"]], "Example 3: Multiple outputs": [[194, "example-3-multiple-outputs"]], "Example 4: Combining multiple TensorDictModule with TensorDictSequential": [[194, "example-4-combining-multiple-tensordictmodule-with-tensordictsequential"]], "Example 5: Compatibility with functorch": [[194, "example-5-compatibility-with-functorch"]], "Do\u2019s and don\u2019t with TensorDictModule": [[194, "do-s-and-don-t-with-tensordictmodule"]], "TensorDictModule for RL": [[194, "tensordictmodule-for-rl"]], "Showcase: Implementing a transformer using TensorDictModule": [[194, "showcase-implementing-a-transformer-using-tensordictmodule"]], "Benchmarking": [[194, "benchmarking"]], "TensorDict": [[195, "tensordict"], [197, "tensordict"]], "Improving the modularity of codes": [[195, "improving-the-modularity-of-codes"]], "Can\u2019t I do this with a python dict?": [[195, "can-t-i-do-this-with-a-python-dict"]], "TensorDict structure": [[195, "tensordict-structure"]], "TensorDict Dictionary Features": [[195, "tensordict-dictionary-features"]], "get(key)": [[195, "get-key"]], "set(key, value)": [[195, "set-key-value"]], "keys()": [[195, "keys"]], "values()": [[195, "values"]], "update(tensordict_or_dict)": [[195, "update-tensordict-or-dict"]], "del": [[195, "del"]], "TensorDict tensor features": [[195, "tensordict-tensor-features"]], "Batch size": [[195, "batch-size"]], "Devices": [[195, "devices"]], "Memory sharing via physical memory usage": [[195, "memory-sharing-via-physical-memory-usage"]], "Tensor operations": [[195, "tensor-operations"]], "TorchRL envs": [[196, "torchrl-envs"]], "Gym environments": [[196, "gym-environments"]], "Env Specs": [[196, "env-specs"]], "Seeding, resetting and steps": [[196, "seeding-resetting-and-steps"]], "Rollouts": [[196, "rollouts"]], "frame_skip": [[196, "frame-skip"]], "Rendering": [[196, "rendering"]], "DeepMind Control environments": [[196, "deepmind-control-environments"]], "Transforming envs": [[196, "transforming-envs"]], "Environment device": [[196, "environment-device"]], "Running environments in parallel": [[196, "running-environments-in-parallel"]], "Closing parallel environments": [[196, "closing-parallel-environments"]], "Seeding": [[196, "seeding"]], "Accessing environment attributes": [[196, "accessing-environment-attributes"]], "kwargs for parallel environments": [[196, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[196, "transforming-parallel-environments"]], "Introduction to TorchRL": [[197, "introduction-to-torchrl"]], "Data": [[197, "data"]], "Replay buffers": [[197, "replay-buffers"]], "Envs": [[197, "envs"]], "Changing environments config": [[197, "changing-environments-config"]], "Vectorized Environments": [[197, "vectorized-environments"]], "Modules": [[197, "modules"]], "TensorDictModules": [[197, "tensordictmodules"]], "Sequences of Modules": [[197, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[197, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[197, "specialized-classes"]], "Using Environments and Modules": [[197, "using-environments-and-modules"]], "Objectives": [[197, "objectives"]], "State of the Library": [[197, "state-of-the-library"]], "Installing the Library": [[197, "installing-the-library"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[9, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors)": [[10, "torchrl.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multisyncdatacollector method)": [[10, "torchrl.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multisyncdatacollector method)": [[10, "torchrl.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multisyncdatacollector method)": [[10, "torchrl.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multisyncdatacollector method)": [[10, "torchrl.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multisyncdatacollector method)": [[10, "torchrl.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multisyncdatacollector method)": [[10, "torchrl.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors)": [[11, "torchrl.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[11, "torchrl.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multiasyncdatacollector method)": [[11, "torchrl.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multiasyncdatacollector method)": [[11, "torchrl.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multiasyncdatacollector method)": [[11, "torchrl.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[11, "torchrl.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multiasyncdatacollector method)": [[11, "torchrl.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "syncdatacollector (class in torchrl.collectors)": [[12, "torchrl.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.syncdatacollector method)": [[12, "torchrl.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.syncdatacollector method)": [[12, "torchrl.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.syncdatacollector method)": [[12, "torchrl.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.syncdatacollector method)": [[12, "torchrl.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.syncdatacollector method)": [[12, "torchrl.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.syncdatacollector method)": [[12, "torchrl.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.syncdatacollector method)": [[12, "torchrl.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.syncdatacollector method)": [[12, "torchrl.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors)": [[13, "torchrl.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.asyncdatacollector method)": [[13, "torchrl.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.asyncdatacollector method)": [[13, "torchrl.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.asyncdatacollector method)": [[13, "torchrl.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.asyncdatacollector method)": [[13, "torchrl.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.asyncdatacollector method)": [[13, "torchrl.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.asyncdatacollector method)": [[13, "torchrl.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[14, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[15, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[15, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[16, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.encode"]], "index() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[16, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[17, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.encode"]], "index() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[17, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[18, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.encode"]], "index() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[18, "torchrl.data.DiscreteTensorSpec.zero"]], "multonehotdiscretetensorspec (class in torchrl.data)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multonehotdiscretetensorspec method)": [[19, "torchrl.data.MultOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[20, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[20, "torchrl.data.MultiStep.zero_grad"]], "ndboundedtensorspec (class in torchrl.data)": [[21, "torchrl.data.NdBoundedTensorSpec"]], "assert_is_in() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.encode"]], "index() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.index"]], "is_in() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.is_in"]], "project() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.project"]], "rand() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.type_check"]], "zero() (torchrl.data.ndboundedtensorspec method)": [[21, "torchrl.data.NdBoundedTensorSpec.zero"]], "ndunboundedcontinuoustensorspec (class in torchrl.data)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.ndunboundedcontinuoustensorspec method)": [[22, "torchrl.data.NdUnboundedContinuousTensorSpec.zero"]], "onehotdiscretetensorspec (class in torchrl.data)": [[23, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[23, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[24, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.add"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.prioritizedreplaybuffer method)": [[24, "torchrl.data.PrioritizedReplayBuffer.update_priority"]], "replaybuffer (class in torchrl.data)": [[25, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.add"]], "extend() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.extend"]], "sample() (torchrl.data.replaybuffer method)": [[25, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[26, "torchrl.data.TensorDictPrioritizedReplayBuffer.update_priority"]], "tensordictreplaybuffer (class in torchrl.data)": [[27, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[27, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[28, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.encode"]], "index() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[28, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[29, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[29, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "remotetensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[30, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.sample"]], "replaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[31, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[32, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[32, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.sample"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[33, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[33, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[35, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[36, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[36, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[37, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[38, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[39, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[39, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[40, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[41, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[41, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[41, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[42, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[42, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[42, "id0"], [42, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[42, "id1"], [42, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[42, "id2"], [42, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[42, "id3"], [42, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[42, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[42, "id4"], [42, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[42, "torchrl.envs.EnvBase.zero_grad"]], "gymlikeenv (class in torchrl.envs)": [[43, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[43, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[43, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[43, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[44, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[44, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[44, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[44, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[44, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[44, "torchrl.envs.step"]], "parallelenv (class in torchrl.envs)": [[45, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[45, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[45, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[45, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[46, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[46, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[46, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[46, "torchrl.envs.SerialEnv.zero_grad"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[47, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[48, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[49, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[50, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[51, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[52, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[53, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[54, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[55, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[55, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[56, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[56, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[56, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[57, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[57, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[58, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[58, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[59, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[59, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[59, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[59, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[59, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[59, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[59, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[60, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[60, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[60, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[60, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[61, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[62, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "grayscale (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[63, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[64, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[65, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[65, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.R3MTransform"]], "forward() (torchrl.envs.transforms.r3mtransform method)": [[68, "torchrl.envs.transforms.R3MTransform.forward"]], "reset() (torchrl.envs.transforms.r3mtransform method)": [[68, "torchrl.envs.transforms.R3MTransform.reset"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[68, "torchrl.envs.transforms.R3MTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.r3mtransform method)": [[68, "torchrl.envs.transforms.R3MTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.r3mtransform method)": [[68, "torchrl.envs.transforms.R3MTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.r3mtransform method)": [[68, "torchrl.envs.transforms.R3MTransform.transform_reward_spec"]], "resize (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[69, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[70, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[71, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[72, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[72, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[72, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[73, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[74, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[74, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[74, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[74, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[74, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[75, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[75, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[75, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[75, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[75, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[75, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[75, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[75, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[75, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[75, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[75, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[76, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[76, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[76, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[76, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viptransform (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.VIPTransform"]], "forward() (torchrl.envs.transforms.viptransform method)": [[77, "torchrl.envs.transforms.VIPTransform.forward"]], "reset() (torchrl.envs.transforms.viptransform method)": [[77, "torchrl.envs.transforms.VIPTransform.reset"]], "to() (torchrl.envs.transforms.viptransform method)": [[77, "torchrl.envs.transforms.VIPTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.viptransform method)": [[77, "torchrl.envs.transforms.VIPTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.viptransform method)": [[77, "torchrl.envs.transforms.VIPTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.viptransform method)": [[77, "torchrl.envs.transforms.VIPTransform.transform_reward_spec"]], "vecnorm (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[78, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[78, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[78, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[78, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[79, "torchrl.envs.transforms.gSDENoise.reset"]], "exploration_mode() (in module torchrl.envs.utils)": [[80, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[81, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[82, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[83, "torchrl.envs.utils.step_mdp"]], "actor (class in torchrl.modules)": [[84, "torchrl.modules.Actor"]], "actorcriticoperator (class in torchrl.modules)": [[85, "torchrl.modules.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.actorcriticoperator method)": [[85, "torchrl.modules.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.actorcriticoperator method)": [[85, "torchrl.modules.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules)": [[86, "torchrl.modules.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.actorcriticwrapper method)": [[86, "torchrl.modules.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorcriticwrapper method)": [[86, "torchrl.modules.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules)": [[87, "torchrl.modules.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.actorvalueoperator method)": [[87, "torchrl.modules.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorvalueoperator method)": [[87, "torchrl.modules.ActorValueOperator.get_value_operator"]], "cemplanner (class in torchrl.modules)": [[88, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[88, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[89, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[89, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[90, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[90, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[91, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[91, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[92, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[92, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[93, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[93, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[94, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[94, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[94, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[94, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[94, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[94, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[95, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[95, "torchrl.modules.DistributionalDQNnet.forward"]], "distributionalqvalueactor (class in torchrl.modules)": [[96, "torchrl.modules.DistributionalQValueActor"]], "dreameractor (class in torchrl.modules)": [[97, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[97, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[98, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[98, "torchrl.modules.DuelingCnnDQNet.forward"]], "lstmnet (class in torchrl.modules)": [[99, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[99, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[100, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[100, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[101, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[101, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[101, "torchrl.modules.MPCPlannerBase.planning"]], "noisylazylinear (class in torchrl.modules)": [[102, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[102, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[103, "torchrl.modules.NoisyLinear"]], "obsdecoder (class in torchrl.modules)": [[104, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[104, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[105, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[105, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[106, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[106, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[106, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[106, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[106, "torchrl.modules.OneHotCategorical.sample"]], "probabilisticactor (class in torchrl.modules)": [[107, "torchrl.modules.ProbabilisticActor"]], "probabilistictensordictmodule (class in torchrl.modules)": [[108, "torchrl.modules.ProbabilisticTensorDictModule"]], "forward() (torchrl.modules.probabilistictensordictmodule method)": [[108, "torchrl.modules.ProbabilisticTensorDictModule.forward"]], "make_functional_with_buffers() (torchrl.modules.probabilistictensordictmodule method)": [[108, "torchrl.modules.ProbabilisticTensorDictModule.make_functional_with_buffers"]], "qvalueactor (class in torchrl.modules)": [[109, "torchrl.modules.QValueActor"]], "rssmposterior (class in torchrl.modules)": [[110, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[110, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[111, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[111, "torchrl.modules.RSSMPrior.forward"]], "tanhdelta (class in torchrl.modules)": [[112, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[112, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[112, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[113, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[113, "torchrl.modules.TanhNormal.mode"]], "tensordictmodule (class in torchrl.modules)": [[114, "torchrl.modules.TensorDictModule"]], "forward() (torchrl.modules.tensordictmodule method)": [[114, "torchrl.modules.TensorDictModule.forward"]], "make_functional_with_buffers() (torchrl.modules.tensordictmodule method)": [[114, "torchrl.modules.TensorDictModule.make_functional_with_buffers"]], "random() (torchrl.modules.tensordictmodule method)": [[114, "torchrl.modules.TensorDictModule.random"]], "random_sample() (torchrl.modules.tensordictmodule method)": [[114, "torchrl.modules.TensorDictModule.random_sample"]], "to() (torchrl.modules.tensordictmodule method)": [[114, "torchrl.modules.TensorDictModule.to"]], "tensordictmodulewrapper (class in torchrl.modules)": [[115, "torchrl.modules.TensorDictModuleWrapper"]], "forward() (torchrl.modules.tensordictmodulewrapper method)": [[115, "torchrl.modules.TensorDictModuleWrapper.forward"]], "tensordictsequential (class in torchrl.modules)": [[116, "torchrl.modules.TensorDictSequential"]], "forward() (torchrl.modules.tensordictsequential method)": [[116, "torchrl.modules.TensorDictSequential.forward"]], "make_functional_with_buffers() (torchrl.modules.tensordictsequential method)": [[116, "torchrl.modules.TensorDictSequential.make_functional_with_buffers"]], "select_subsequence() (torchrl.modules.tensordictsequential method)": [[116, "torchrl.modules.TensorDictSequential.select_subsequence"]], "truncatednormal (class in torchrl.modules)": [[117, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[117, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[117, "torchrl.modules.TruncatedNormal.mode"]], "valueoperator (class in torchrl.modules)": [[118, "torchrl.modules.ValueOperator"]], "reset_noise (class in torchrl.modules)": [[119, "torchrl.modules.reset_noise"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[120, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[121, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[122, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[123, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[124, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[124, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[125, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[126, "torchrl.modules.utils.mappings"]], "clipppoloss (class in torchrl.objectives)": [[127, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[127, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[128, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[128, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[129, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[129, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[130, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[130, "torchrl.objectives.DistributionalDQNLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[131, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[132, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[132, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[133, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[133, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[134, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[134, "torchrl.objectives.REDQLoss.forward"]], "sacloss (class in torchrl.objectives)": [[135, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[135, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[136, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[137, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[138, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[139, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[140, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[141, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[141, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[142, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[142, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[143, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[143, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[144, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[145, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[146, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[147, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[148, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[149, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[150, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "batchsubsampler (class in torchrl.trainers)": [[151, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[152, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[153, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[154, "torchrl.trainers.LogReward"]], "recorder (class in torchrl.trainers)": [[155, "torchrl.trainers.Recorder"]], "replaybuffer (class in torchrl.trainers)": [[156, "torchrl.trainers.ReplayBuffer"]], "add() (torchrl.trainers.replaybuffer method)": [[156, "torchrl.trainers.ReplayBuffer.add"]], "extend() (torchrl.trainers.replaybuffer method)": [[156, "torchrl.trainers.ReplayBuffer.extend"]], "sample() (torchrl.trainers.replaybuffer method)": [[156, "torchrl.trainers.ReplayBuffer.sample"]], "rewardnormalizer (class in torchrl.trainers)": [[157, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[158, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[159, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[160, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[161, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[162, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[163, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[164, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[165, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[166, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[167, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[168, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[169, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[170, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[171, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[172, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[173, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[174, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[175, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[176, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[177, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[178, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[179, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[180, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[181, "torchrl.trainers.helpers.transformed_env_constructor"]]}})